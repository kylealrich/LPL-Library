CompanyCustomerReviewSelect is a BusinessClass
	owned by ar
	prefix is SEL
	classic name is ARCDSELECT

	Ontology
		symbolic key is CompanyCustomerReviewSelect
			classic set name is SELSET1
			classic name for CreditAnalyst is CREDIT-ANLYST

	Patterns
		implements StaticJava
		disable AuditIndex

	Persistent Fields

		Status							is Numeric size 1
			States
				OpenStatusNeedsReview	value is 0
				Reviewed				value is 2
				DunnningRecordCreated	value is 9

		CreditAction					is AlphaUpper size 1
			classic name is CRED-ACTION
			States
				Called		value is "C"
				NoProblem	value is "N"
				OtherAction	value is "O"
		HoldFlag
		DunningNumber					is a DunningLetterTextCode
			classic name is DUNNING-NBR
		NewReview						is Date
		Review							is Boolean
			classic name is REVIEW-FL
		Type							is AlphaUpper 2
			States
				ReviewDateReached		value is " 1"
				CreditLimitDateReview	value is " 2"
				ExceededCreditLimit		value is " 3"
				ExceededAgingLimit		value is " 4"

		FromCurrency
		ToCurrency
		TransactionAmount				is a CurrencyAmount
		ExchangeDate
		DisplayBalanceAmount			is a CurrencyExchange

		DisplayInvoiceBalanceAmount		is a CurrencyExchange
		DisplayPastDueBalanceAmount		is a CurrencyExchange
		DisplayBOEBalanceAmount			is a CurrencyExchange
		StaticAgingCurrentPeriodAmount	is a CurrencyExchange
		StaticAging1					is a CurrencyExchange
		StaticAging2					is a CurrencyExchange
		StaticAging3					is a CurrencyExchange
		StaticAging4					is a CurrencyExchange
		StaticAging5					is a CurrencyExchange
		StaticAging6					is a CurrencyExchange
		StaticAging7					is a CurrencyExchange
		StaticAging8					is a CurrencyExchange
		DisplayCreditLimit				is a CurrencyExchange


	Local Fields
		LocalCurrencyTable				is a CurrencyTable

		LocalWorkAmount				is an InternationalAmount												

		SumOfOpenCreditMemoRelAmountsDone											is Boolean				
		SumOfCompanyCustomerInvoiceDebitMemoPeriodRelAmountsDone					is Boolean				
		SumOfOpenOrUnreleasedReceivablePaymentsRelAmountsDone						is Boolean				
		SumOfCompanyCustomerDraftPeriodRelAmountsDone								is Boolean				
		SumOfCompanyCustomerInvoiceDebitMemoPeriodRelOpenAmount						is an InternationalAmount	
		SumOfOpenCreditMemoRelOpenAmount											is an InternationalAmount	
		SumOfOpenOrUnreleasedReceivablePaymentsRelPaymentOpenCustomerCurrency		is an InternationalAmount	
		SumOfCompanyCustomerDraftPeriodRelAmount									is an InternationalAmount	

		SumOfNationalAccountInvoiceDebitMemoPeriodRelAmountsDone					is Boolean					
		SumOfNationalAccountCreditMemoPeriodRelAmountsDone							is Boolean					
		SumOfNationalAccountReceivablePaymentsRelAmountsDone						is Boolean					
		SumOfNationalAccountDraftPeriodRelAmountsDone								is Boolean					
		SumOfNationalAccountInvoiceDebitMemoPeriodRelOpenAmount						is an InternationalAmount	
		SumOfNationalAccountCreditMemoPeriodRelOpenAmount							is an InternationalAmount	
		SumOfNationalAccountReceivablePaymentsRelOpenAmount							is an InternationalAmount	
		SumOfNationalAccountDraftPeriodRelOpenAmount								is an InternationalAmount	
		LocalIsoLocale																is an IsoLocale

	Transient Fields
		HoldCode is a ReceivableHoldCode

	Rule Blocks													

		SumCompanyCustomerInvoiceDebitMemoPeriodRelAmounts
			if (!SumOfCompanyCustomerInvoiceDebitMemoPeriodRelAmountsDone)
				initialize SumOfCompanyCustomerInvoiceDebitMemoPeriodRelOpenAmount
					for each CompanyCustomerInvoiceDebitMemoPeriodRel
						SumOfCompanyCustomerInvoiceDebitMemoPeriodRelOpenAmount		 += each.OpenAmountCustomerCurrency
				SumOfCompanyCustomerInvoiceDebitMemoPeriodRelAmountsDone = true

		SumOpenCreditMemoRelAmounts
			if (!SumOfOpenCreditMemoRelAmountsDone)
				initialize SumOfOpenCreditMemoRelOpenAmount
					for each OpenCreditMemoRel
						SumOfOpenCreditMemoRelOpenAmount	 	+= each.OpenAmountCustomerCurrency
				SumOfOpenCreditMemoRelAmountsDone = true	

		SumOpenOrUnreleasedReceivablePaymentsRelAmounts
			if (!SumOfOpenOrUnreleasedReceivablePaymentsRelAmountsDone)
				initialize SumOfOpenOrUnreleasedReceivablePaymentsRelPaymentOpenCustomerCurrency
					for each OpenOrUnreleasedReceivablePaymentsRel
						SumOfOpenOrUnreleasedReceivablePaymentsRelPaymentOpenCustomerCurrency += each.PaymentOpenCustomerCurrency
				SumOfOpenOrUnreleasedReceivablePaymentsRelAmountsDone = true

		SumCompanyCustomerDraftPeriodRelAmounts
			if (!SumOfCompanyCustomerDraftPeriodRelAmountsDone)
				initialize SumOfCompanyCustomerDraftPeriodRelAmount
					for each CompanyCustomerDraftPeriodRel
						SumOfCompanyCustomerDraftPeriodRelAmount += each.CompanyCustomerCurrencyAmount
				SumOfCompanyCustomerDraftPeriodRelAmountsDone = true


		SumNationalAccountInvoiceDebitMemoPeriodRelAmounts
			if (!SumOfNationalAccountInvoiceDebitMemoPeriodRelAmountsDone)
				initialize SumOfNationalAccountInvoiceDebitMemoPeriodRelOpenAmount
					for each NationalAccountInvoiceDebitMemoPeriodRel
						SumOfNationalAccountInvoiceDebitMemoPeriodRelOpenAmount				+= each.NationalAccountAgingCustomerCurrencyOpenAmount
				SumOfNationalAccountInvoiceDebitMemoPeriodRelAmountsDone = true
		
		SumNationalAccountCreditMemoPeriodRelAmounts
			if (!SumOfNationalAccountCreditMemoPeriodRelAmountsDone)
				initialize SumOfNationalAccountCreditMemoPeriodRelOpenAmount
					for each NationalAccountCreditMemoPeriodRel
						SumOfNationalAccountCreditMemoPeriodRelOpenAmount					+=	each.NationalAccountAgingCustomerCurrencyOpenAmount
				SumOfNationalAccountCreditMemoPeriodRelAmountsDone = true

		SumNationalAccountReceivablePaymentsRelAmounts	
			if (!SumOfNationalAccountReceivablePaymentsRelAmountsDone)
				initialize SumOfNationalAccountReceivablePaymentsRelOpenAmount			
					for each OpenOrUnreleasedNationalAccountReceivablePaymentsRel																
						SumOfNationalAccountReceivablePaymentsRelOpenAmount += each.NationalAccountPaymentOpenCustomerCurrency		
				SumOfNationalAccountReceivablePaymentsRelAmountsDone = true	
		
		SumNationalAccountDraftPeriodRelAmounts	
			if (!SumOfNationalAccountDraftPeriodRelAmountsDone)
				initialize SumOfNationalAccountDraftPeriodRelOpenAmount			
					for each NationalAccountDraftPeriodRel
						SumOfNationalAccountDraftPeriodRelOpenAmount += each.NationalAccountCompanyCustomerCurrencyAmount			
				SumOfNationalAccountDraftPeriodRelAmountsDone = true

	Derived Fields
	
		CustomerOrNationalAccountBaseBalance is a DerivedField
			type is like InternationalAmount
				precision is Company.Currency.NumberOfDecimals
			if (DisplayBalanceAmount entered)
				if (IsCompanyCustomerLevel)												
					initialize LocalWorkAmount
					include SumCompanyCustomerInvoiceDebitMemoPeriodRelAmounts
					include SumOpenCreditMemoRelAmounts
					LocalWorkAmount += SumOfCompanyCustomerInvoiceDebitMemoPeriodRelOpenAmount
					LocalWorkAmount -= SumOfOpenCreditMemoRelOpenAmount
					include SumOpenOrUnreleasedReceivablePaymentsRelAmounts
					LocalWorkAmount -= SumOfOpenOrUnreleasedReceivablePaymentsRelPaymentOpenCustomerCurrency
					include SumCompanyCustomerDraftPeriodRelAmounts
					LocalWorkAmount += SumOfCompanyCustomerDraftPeriodRelAmount	
					return LocalWorkAmount
				else 																	
					initialize LocalWorkAmount
					include SumNationalAccountInvoiceDebitMemoPeriodRelAmounts
					include SumNationalAccountCreditMemoPeriodRelAmounts
					LocalWorkAmount += SumOfNationalAccountInvoiceDebitMemoPeriodRelOpenAmount
					LocalWorkAmount -= SumOfNationalAccountCreditMemoPeriodRelOpenAmount
					include SumNationalAccountReceivablePaymentsRelAmounts
					LocalWorkAmount -= SumOfNationalAccountReceivablePaymentsRelOpenAmount
					include SumNationalAccountDraftPeriodRelAmounts
					LocalWorkAmount += SumOfNationalAccountDraftPeriodRelOpenAmount
					return LocalWorkAmount
			if (IsCompanyCustomerLevel)
				return CompanyCustomerRel.CurrentBalance + DerivedBOEBalanceAmount			
			if (IsNationalAccountCustomerLevel)
				return NationalAccountBalanceRel.CurrentBalance + DerivedBOEBalanceAmount	

		CustomerOrNationalAccountCurrencyBalance is a DerivedField
			type is like InternationalAmount
			restricted
			if (IsCompanyCustomerLevel)
				return CompanyCustomerRel.CurrentBalance
			if (IsNationalAccountCustomerLevel)
				return NationalAccountBalanceRel.CurrentBalance

		CustomerOrNationalAccountHoldCode is a DerivedField
			type is like ReceivableHoldCode
			if (IsCompanyCustomerLevel)
				return CompanyCustomerRel.ReceivableHoldCode
			if (IsNationalAccountCustomerLevel)
				return NationalAccountBalanceRel.ReceivableHoldCode

		DisplayTransactionCurrencyCode is a DerivedField
			type is like Currency
			if (DisplayBalanceAmount.ToCurrency entered)
				return ToCurrency
			if (CompanyCustomerRel.Currency != ReceivableCompanyRel.Currency)
				return ReceivableCompanyRel.Currency
			else
				return CompanyCustomerRel.Currency








			
		DerivedInvoiceBalanceAmount is a DerivedField							
			type is like InternationalAmount
			if (DisplayInvoiceBalanceAmount entered)
				if (IsCompanyCustomerLevel)										
					initialize LocalWorkAmount
					include SumCompanyCustomerInvoiceDebitMemoPeriodRelAmounts
					include SumOpenCreditMemoRelAmounts
					LocalWorkAmount += SumOfCompanyCustomerInvoiceDebitMemoPeriodRelOpenAmount
					LocalWorkAmount -= SumOfOpenCreditMemoRelOpenAmount
					include SumOpenOrUnreleasedReceivablePaymentsRelAmounts
					LocalWorkAmount -= SumOfOpenOrUnreleasedReceivablePaymentsRelPaymentOpenCustomerCurrency
					return LocalWorkAmount
				else 
					initialize LocalWorkAmount
					include SumNationalAccountInvoiceDebitMemoPeriodRelAmounts
					include SumNationalAccountCreditMemoPeriodRelAmounts
					LocalWorkAmount += SumOfNationalAccountInvoiceDebitMemoPeriodRelOpenAmount
					LocalWorkAmount -= SumOfNationalAccountCreditMemoPeriodRelOpenAmount
					include SumNationalAccountReceivablePaymentsRelAmounts
					LocalWorkAmount -= SumOfNationalAccountReceivablePaymentsRelOpenAmount
					return LocalWorkAmount
			if (IsCompanyCustomerLevel)												
				return CompanyCustomerRel.CurrentBalance
			if (IsNationalAccountCustomerLevel)									
				return NationalAccountBalanceRel.CurrentBalance
		
		DerivedPastDueBalanceAmount is a DerivedField							
			type is like InternationalAmount
			if (DisplayPastDueBalanceAmount entered)
				if (IsCompanyCustomerCurrency)									
					return (AgingPeriodForCompanyRel.DerivedPastDue)		
				if (IsNationalAccountCompanyCustomerCurrency)
					return (AgingPeriodRel.NationalAccountDerivedPastDue)		
			if (IsCompanyCustomerLevel)											
				return CompanyCustomerRel.DerivedPastDue
			if (IsNationalAccountCustomerLevel)									
				return NationalAccountBalanceRel.DerivedPastDue
		
		DerivedBOEBalanceAmount is a DerivedField								
			type is like InternationalAmount
			if (DisplayBOEBalanceAmount entered)
				if (IsCompanyCustomerLevel)										
					initialize LocalWorkAmount
					include SumCompanyCustomerDraftPeriodRelAmounts
					LocalWorkAmount += SumOfCompanyCustomerDraftPeriodRelAmount	
					return LocalWorkAmount
				else 
					initialize LocalWorkAmount
					include SumNationalAccountDraftPeriodRelAmounts
					LocalWorkAmount += SumOfNationalAccountDraftPeriodRelOpenAmount
					return LocalWorkAmount
			if (IsCompanyCustomerLevel)											
				return CompanyCustomerRel.BillOfExchangeBalance
			if (IsNationalAccountCustomerLevel)									
				return NationalAccountBalanceRel.BillOfExchangeBalance
		
		DerivedCreditLimit	is a DerivedField									
			type is like InternationalAmount
			if (DisplayCreditLimit entered)
				return DisplayCreditLimit.EnteredCurrencyAmount
			if (IsCompanyCustomerLevel)											
				return CompanyCustomerRel.CreditLimit
			if (IsNationalAccountCustomerLevel)									
				return NationalAccountBalanceRel.CreditLimit
























	Conditions

		IsValidForActorContext
			restricted
			when (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)	

		SecurityGroupAllowsAccess	
			when (actor.context.CompanySecurityGroup = blank
			or	CompanySecurityGroupMemberRel exists)

		IsOpen
			classic name is SELSET22
			restricted
			when (Status.OpenStatusNeedsReview)

		IsOpen2
			classic name is SELSET3
			restricted
			when (Status.OpenStatusNeedsReview)

		IsDunningLetter
			classic name is SELSET4
			restricted
			when (DunningNumber >  blank)

		IsValidDunningNumber
			restricted
			when (DunningLetterTextCodeRel exists)

		IsDunningForCustomerLevel
			restricted
			when (CompanyCustomerReviewSelectRel exists)

		IsCompanyCustomerLevel
			restricted
			when (CompanyCustomerReviewSelect.SelectLevel.Company)

		IsNationalAccountCustomerLevel
			restricted
			when (CompanyCustomerReviewSelect.SelectLevel.NationalAccount)
		
		HasVendor	
			restricted
			when (VendorRel exists)

		IsCompanyCurrency				
			restricted
			when (DisplayTransactionCurrencyCode = ReceivableCompanyRel.Currency
			and IsCompanyCustomerLevel)			

		IsCompanyCustomerCurrency		
			restricted
			when (DisplayTransactionCurrencyCode = CompanyCustomerRel.Currency
			and ReceivableCompanyRel.Currency != CompanyCustomerRel.Currency
			and IsCompanyCustomerLevel)			

		IsNationalAccountCompanyCurrency	
			restricted
			when (DisplayTransactionCurrencyCode = ReceivableCompanyRel.Currency
			and IsNationalAccountCustomerLevel)

		IsNationalAccountCompanyCustomerCurrency		
			restricted
			when (DisplayTransactionCurrencyCode = CompanyCustomerRel.Currency
			and ReceivableCompanyRel.Currency != CompanyCustomerRel.Currency
			and IsNationalAccountCustomerLevel)





	Relations

		GeneralLedgerCompanyRel	
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company

		CompanySecurityGroupMemberRel	
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= actor.context.CompanySecurityGroup.FinanceDimensionStructure
				related.Company						= Company

		ReceivableCompanyRel
			one-to-one relation to ReceivableCompany
			required
			Field Mapping uses symbolic key
				related.Company	 = Company

		CompanyCustomerRel
			classic name is ARCUSTOMER
			one-to-one relation to CompanyCustomer
			required
			Field Mapping uses symbolic key
				related.Company		 = Company
				related.Customer	 = CompanyCustomerReviewSelect.Customer

		CustomerRel
			classic name is CUSTDESC
			one-to-one relation to Customer
			required
			Field Mapping uses symbolic key
				related.CustomerGroup	 = Company.CustomerGroupField.CustomerGroup
				related.Customer		 = CompanyCustomerReviewSelect.Customer

		DunningLetterTextCodeRel
			one-to-one relation to DunningLetterTextCode
			Field Mapping uses symbolic key
				related.Company								= Company
				related.IsoLocale							= CompanyCustomerRel.LanguageCode

				related.DunningLetterTextCode				= DunningNumber



		CompanyCustomerReviewSelectRel
			one-to-many relation to CompanyCustomerReviewSelect
			Field Mapping uses Set4
				related.Company										= Company
				related.CompanyCustomerReviewSelect.Customer		= CompanyCustomerReviewSelect.Customer
				related.CompanyCustomerReviewSelect.SelectLevel		= CompanyCustomerReviewSelect.SelectLevel
			Instance Selection
				where (related.DunningNumber entered)

		NationalAccountBalanceRel
			one-to-one relation to NationalAccountBalance
			Field Mapping uses symbolic key
				related.Company						= Company
				related.Customer					= CompanyCustomerReviewSelect.Customer

		CompanyCustomerCommentRel
			one-to-many relation to CompanyCustomerComment
			Field Mapping uses symbolic key
				related.Company						= Company
				related.Customer					= CompanyCustomerReviewSelect.Customer
		
		VendorRel
			one-to-one relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup		 = CustomerRel.VendorGroupAndVendor.VendorGroup
				related.Vendor			 = CustomerRel.VendorGroupAndVendor.Vendor


		CompanyCustomerInvoiceDebitMemoPeriodRel						
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses Set3
				related.Company						= Company
				related.Customer					= CompanyCustomerReviewSelect.Customer
			Instance Selection
				where (!related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType.CreditMemo)

		OpenCreditMemoRel							
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses Set3	
				related.Company		 = Company
				related.Customer	 = CompanyCustomerReviewSelect.Customer
			Instance Selection
				where (related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType.CreditMemo)

		OpenOrUnreleasedReceivablePaymentsRel			
			one-to-many relation to ReceivablePayment
			Field Mapping uses Set9		//Set9 has an Instance Selection of where (IsUnreleasedOrOpen) - IsUnreleasedOrOpen is defined as "when (Status.OpenTransaction)"
				related.Company		 = Company
				related.Customer	 = CompanyCustomerReviewSelect.Customer

		CompanyCustomerDraftPeriodRel				
			one-to-many relation to CustomerDraft
			Field Mapping uses symbolic key
				related.Company						= Company
				related.Customer					= CompanyCustomerReviewSelect.Customer
			Instance Selection
				where ((related.Status				< 5)
				or	 (related.Status.Cashed and related.Risk)
				or	 (related.Status.Dishonored and related.Resolution.NoResolution))


		NationalAccountInvoiceDebitMemoPeriodRel			
			one-to-many relation to NationalAccountTransaction
			Field Mapping uses ByNationalAccountTransaction
				related.NationalAccount.Company				= Company
				related.NationalAccount.Customer			= CompanyCustomerReviewSelect.Customer
			Instance Selection
				where (!related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType.CreditMemo)

		NationalAccountCreditMemoPeriodRel					
			one-to-many relation to NationalAccountTransaction
			Field Mapping uses ByNationalAccountTransaction
				related.NationalAccount.Company				= Company
				related.NationalAccount.Customer			= CompanyCustomerReviewSelect.Customer
			Instance Selection
				where (related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType.CreditMemo)

		OpenOrUnreleasedNationalAccountReceivablePaymentsRel	
			one-to-many relation to ReceivablePayment
			Field Mapping uses Set9		//Set9 has an Instance Selection of where (IsUnreleasedOrOpen) - IsUnreleasedOrOpen is defined as "when (Status.OpenTransaction)"
			Instance Selection	
				where (related.DerivedNationalCompany	 = Company
				and	related.DerivedNationalCustomer		 = CompanyCustomerReviewSelect.Customer)

		NationalAccountDraftPeriodRel						
			one-to-many relation to CustomerDraft
			Field Mapping uses symbolic key
			Instance Selection
				where (related.DerivedNationalCompany	 = Company
				and	related.DerivedNationalCustomer		 = CompanyCustomerReviewSelect.Customer
				and   ((related.Status				< 5)
				or	 (related.Status.Cashed and related.Risk)
				or	 (related.Status.Dishonored and related.Resolution.NoResolution)))
		
		AgingPeriodForCompanyRel							
			one-to-many relation to ReceivableAgePeriod
			Field Mapping uses symbolic key
			Instance Selection
				where (related.CustomerGroup	 = Company.CustomerGroupField.CustomerGroup
				and	related.ReceivableCompany	 = Company
				and	related.AgingCode			 = blank
				and	related.SetupIndicator		 = "R")

		AgingPeriodRel										
			one-to-many relation to ReceivableAgePeriod
			Field Mapping uses symbolic key
			Instance Selection
				where (related.CustomerGroup	 = Company.CustomerGroupField.CustomerGroup	
				and	related.ReceivableCompany	 = blank
				and	related.AgingCode			 = blank
				and	related.SetupIndicator		 = "C")

	Sets
		Set2
			indexed
			Instance Selection
				where (IsOpen)
			Sort Order
				Company
				CreditAnalyst
				CompanyCustomerReviewSelect

		Set3
			indexed
			Instance Selection
				where (IsOpen2)
			Sort Order
				Company
				CreditAnalyst
				CompanyCustomerReviewSelect.Customer
				CompanyCustomerReviewSelect.SelectLevel

		Set4
			indexed
			Instance Selection
				where (IsDunningLetter)
			Sort Order
				Company
				CompanyCustomerReviewSelect.Customer
				CompanyCustomerReviewSelect.SelectLevel


	Field Rules

		CreditAction



			if (CreditAction.OtherAction)
				if (NewReview not entered
				and DunningNumber not entered
				and Review not entered)
					constraint (HoldCode entered)
						"MustEnterAn_Other_ActionOption"

		NewReview
			if (NewReview entered)
				constraint (NewReview > current corporate date)
					"ReviewDateMustBeGreaterThanSystemDate"
				constraint (CreditAction.OtherAction)
					"ReviewDateCannotBeEnteredUnless_Action_TakenIs_Other_Action"

		DunningNumber
			LocalIsoLocale = CompanyCustomerRel.LanguageCode
			constraint (CreditAction.OtherAction)
				"DunningNumberCannotBeEnteredUnless_Action_TakenIs_Other_Action"
			if (DunningNumber entered)
				constraint (IsValidDunningNumber)
					"DunningNumberDoesNotExist"
				constraint (!IsDunningForCustomerLevel)
					"ADunningNumberAlreadyExistsForThisCustomerAndSelectLevel"

				if (CompanyCustomerReviewSelect.SelectLevel.NationalAccount
				and DunningNumber entered)
					constraint (!NationalAccountBalanceRel.IsMixedCompanyCurrency)
						"DunningNotAllowedForNationalAccountLevelCustomer,CompanyBaseCurrenciesConflict"

		HoldFlag
			if (HoldFlag entered)
				constraint (HoldCode not entered)
					"CannotEnterCreditHoldAndHoldCode"

		Review
			constraint (CreditAction.OtherAction)
				"CreditLimitReviewCannotBeEnteredUnless_Action_TakenIs_Other_Action"

		HoldCode
			constraint (CreditAction.OtherAction)
				"HoldCodeCannotBeEnteredUnless_Action_TakenIs_Other_Action"

		ToCurrency
			default to ReceivableCompanyRel.Currency






















	Create Rules





	Actions

		Create is a Create Action
			restricted

		Update is an Update Action

			Action Rules
				constraint (CreditAction entered)
					"MustEnter_Action_Taken"

				if (IsCompanyCustomerLevel)
					if (HoldFlag.CreditHoldOnCustomer
					and CreditAnalyst.Company.ReceivableHoldCode.CustomerApplicable)
						invoke FastUpdate CompanyCustomerRel
							invoked.ReceivableHoldCode = CreditAnalyst.Company.ReceivableHoldCode
					if (HoldCode entered
					and HoldCode.CustomerApplicable)
						invoke FastUpdate CompanyCustomerRel
							invoked.ReceivableHoldCode = HoldCode

					if (CompanyCustomerRel.ReviewCode not entered
					or  CompanyCustomerRel.ReviewCode = "R")
						invoke FastUpdate CompanyCustomerRel
							invoked.ReviewDate = current corporate date	
							invoked.ReviewCode = "R"
					if (NewReview entered)
						invoke FastUpdate CompanyCustomerRel
							invoked.ReviewDate = NewReview
							invoked.ReviewCode = "O"

					if (Review entered)
						invoke FastUpdate CompanyCustomerRel
							invoked.CreditLimitDate = current corporate date

				if (IsNationalAccountCustomerLevel)
					if (HoldFlag.CreditHoldOnCustomer)
						invoke Update NationalAccountBalanceRel
							invoked.ReceivableHoldCode = CreditAnalyst.Company.ReceivableHoldCode

					if (HoldCode entered)
						invoke Update NationalAccountBalanceRel
							invoked.ReceivableHoldCode = HoldCode

					if (NationalAccountBalanceRel.ReviewCode not entered
					or  NationalAccountBalanceRel.ReviewCode = "R")
						invoke Update NationalAccountBalanceRel
							invoked.ReviewDate = current corporate date	
							invoked.ReviewCode = "R"

					if (NewReview entered)
						invoke Update NationalAccountBalanceRel
							invoked.ReviewDate = NewReview
							invoked.ReviewCode = "O"

					if (Review entered)
						invoke Update NationalAccountBalanceRel
							invoked.CreditLimitDate = current corporate date

			Exit Rules
				Status = 2













































		Delete is a Delete Action
			restricted


		Purge is a Purge Action
			restricted


		DisplayTransactionCurrencyAmounts is a Set Action
			restricted
			run in foreground
			Parameters
				PrmReceivableCompany	is a ReceivableCompany
				PrmCreditAnalyst		is a CreditAnalyst
			Instance Selection
				where (IsOpen
				and	Company			= PrmReceivableCompany
				and	CreditAnalyst	= PrmCreditAnalyst)
			Action Rules
				Instance Rules
					initialize FromCurrency
					initialize ToCurrency
					initialize TransactionAmount
					initialize ExchangeDate

					initialize DisplayBalanceAmount
					initialize DisplayInvoiceBalanceAmount
					initialize DisplayPastDueBalanceAmount
					initialize DisplayBOEBalanceAmount
					initialize StaticAgingCurrentPeriodAmount
					initialize StaticAging1
					initialize StaticAging2
					initialize StaticAging3
					initialize StaticAging4
					initialize StaticAging5
					initialize StaticAging6
					initialize StaticAging7
					initialize StaticAging8
					initialize DisplayCreditLimit

					LocalCurrencyTable				= Company.DerivedCurrencyTable
					if (CompanyCustomerRel.Currency != ReceivableCompanyRel.Currency)
						ToCurrency					= CompanyCustomerRel.Currency
					else
						ToCurrency					= ReceivableCompanyRel.Currency
					FromCurrency					= ReceivableCompanyRel.Currency
					ExchangeDate					= CompanyCustomerReviewSelect.Date
					
					TransactionAmount				= CustomerOrNationalAccountBaseBalance
					DisplayBalanceAmount.EnteredCurrencyAmount = DisplayBalanceAmount.OutputCurrencyAmount
					DisplayBalanceAmount.ToCurrency = ToCurrency
					
					TransactionAmount				= DerivedInvoiceBalanceAmount							
					DisplayInvoiceBalanceAmount.EnteredCurrencyAmount = DisplayInvoiceBalanceAmount.OutputCurrencyAmount
					DisplayInvoiceBalanceAmount.ToCurrency 	= ToCurrency

					TransactionAmount				= DerivedPastDueBalanceAmount							
					DisplayPastDueBalanceAmount.EnteredCurrencyAmount = DisplayPastDueBalanceAmount.OutputCurrencyAmount
					DisplayPastDueBalanceAmount.ToCurrency 	= ToCurrency
					
					TransactionAmount				= DerivedBOEBalanceAmount								
					DisplayBOEBalanceAmount.EnteredCurrencyAmount = DisplayBOEBalanceAmount.OutputCurrencyAmount
					DisplayBOEBalanceAmount.ToCurrency 	= ToCurrency
			
					TransactionAmount				= CompanyCustomerRel.StaticAgingCurrentPeriodAmount
					StaticAgingCurrentPeriodAmount.EnteredCurrencyAmount = StaticAgingCurrentPeriodAmount.OutputCurrencyAmount
					StaticAgingCurrentPeriodAmount.ToCurrency = ToCurrency
	
					TransactionAmount				= CompanyCustomerRel.Agings.Aging[1]
					StaticAging1.EnteredCurrencyAmount = StaticAging1.OutputCurrencyAmount
					StaticAging1.ToCurrency 		= ToCurrency
					
					TransactionAmount				= CompanyCustomerRel.Agings.Aging[2]
					StaticAging2.EnteredCurrencyAmount = StaticAging2.OutputCurrencyAmount
					StaticAging2.ToCurrency 		= ToCurrency
					
					TransactionAmount				= CompanyCustomerRel.Agings.Aging[3]
					StaticAging3.EnteredCurrencyAmount = StaticAging3.OutputCurrencyAmount
					StaticAging3.ToCurrency 		= ToCurrency

					TransactionAmount				= CompanyCustomerRel.Agings.Aging[4]
					StaticAging4.EnteredCurrencyAmount = StaticAging4.OutputCurrencyAmount
					StaticAging4.ToCurrency 		= ToCurrency
		
					TransactionAmount				= CompanyCustomerRel.Agings.Aging[5]
					StaticAging5.EnteredCurrencyAmount = StaticAging5.OutputCurrencyAmount
					StaticAging5.ToCurrency 		= ToCurrency
					
					TransactionAmount				= CompanyCustomerRel.Agings.Aging[6]
					StaticAging6.EnteredCurrencyAmount = StaticAging6.OutputCurrencyAmount
					StaticAging6.ToCurrency 		= ToCurrency

					TransactionAmount				= CompanyCustomerRel.Agings.Aging[7]
					StaticAging7.EnteredCurrencyAmount = StaticAging7.OutputCurrencyAmount
					StaticAging7.ToCurrency 		= ToCurrency

					TransactionAmount				= CompanyCustomerRel.Agings.Aging[8]
					StaticAging8.EnteredCurrencyAmount = StaticAging8.OutputCurrencyAmount
					StaticAging8.ToCurrency 		= ToCurrency
					
					TransactionAmount				= DerivedCreditLimit							
					DisplayCreditLimit.EnteredCurrencyAmount = DisplayCreditLimit.OutputCurrencyAmount
					DisplayCreditLimit.ToCurrency 	= ToCurrency



		DisplayTransactionAmounts is an Instance Action
			default label is "DisplayAmountsInCompanyCustomerCurrency"					
			valid when (IsOpen)
			completion message is "DisplayAmountsInCompanyCustomerCurrencyComplete"		
			Action Rules
				initialize FromCurrency
				initialize ToCurrency
				initialize TransactionAmount
				initialize ExchangeDate

				initialize DisplayBalanceAmount
				initialize DisplayInvoiceBalanceAmount
				initialize DisplayPastDueBalanceAmount
				initialize DisplayBOEBalanceAmount
				initialize StaticAgingCurrentPeriodAmount
				initialize StaticAging1
				initialize StaticAging2
				initialize StaticAging3
				initialize StaticAging4
				initialize StaticAging5
				initialize StaticAging6
				initialize StaticAging7
				initialize StaticAging8
				initialize DisplayCreditLimit

				LocalCurrencyTable				= Company.DerivedCurrencyTable
				if (CompanyCustomerRel.Currency != ReceivableCompanyRel.Currency)
					ToCurrency					= CompanyCustomerRel.Currency
				else
					ToCurrency					= ReceivableCompanyRel.Currency
				FromCurrency					= ReceivableCompanyRel.Currency
				ExchangeDate					= CompanyCustomerReviewSelect.Date
				
				TransactionAmount				= CustomerOrNationalAccountBaseBalance
				DisplayBalanceAmount.EnteredCurrencyAmount = DisplayBalanceAmount.OutputCurrencyAmount
				DisplayBalanceAmount.ToCurrency = ToCurrency

				TransactionAmount				= DerivedInvoiceBalanceAmount						
				DisplayInvoiceBalanceAmount.EnteredCurrencyAmount = DisplayInvoiceBalanceAmount.OutputCurrencyAmount
				DisplayInvoiceBalanceAmount.ToCurrency 	= ToCurrency

				TransactionAmount				= DerivedPastDueBalanceAmount						
				DisplayPastDueBalanceAmount.EnteredCurrencyAmount = DisplayPastDueBalanceAmount.OutputCurrencyAmount
				DisplayPastDueBalanceAmount.ToCurrency 	= ToCurrency
					
				TransactionAmount				= DerivedBOEBalanceAmount							
				DisplayBOEBalanceAmount.EnteredCurrencyAmount = DisplayBOEBalanceAmount.OutputCurrencyAmount
				DisplayBOEBalanceAmount.ToCurrency 	= ToCurrency
			
				TransactionAmount				= CompanyCustomerRel.StaticAgingCurrentPeriodAmount
				StaticAgingCurrentPeriodAmount.EnteredCurrencyAmount = StaticAgingCurrentPeriodAmount.OutputCurrencyAmount
				StaticAgingCurrentPeriodAmount.ToCurrency = ToCurrency
	
				TransactionAmount				= CompanyCustomerRel.Agings.Aging[1]
				StaticAging1.EnteredCurrencyAmount = StaticAging1.OutputCurrencyAmount
				StaticAging1.ToCurrency 		= ToCurrency
					
				TransactionAmount				= CompanyCustomerRel.Agings.Aging[2]
				StaticAging2.EnteredCurrencyAmount = StaticAging2.OutputCurrencyAmount
				StaticAging2.ToCurrency 		= ToCurrency
					
				TransactionAmount				= CompanyCustomerRel.Agings.Aging[3]
				StaticAging3.EnteredCurrencyAmount = StaticAging3.OutputCurrencyAmount
				StaticAging3.ToCurrency 		= ToCurrency

				TransactionAmount				= CompanyCustomerRel.Agings.Aging[4]
				StaticAging4.EnteredCurrencyAmount = StaticAging4.OutputCurrencyAmount
				StaticAging4.ToCurrency 		= ToCurrency
		
				TransactionAmount				= CompanyCustomerRel.Agings.Aging[5]
				StaticAging5.EnteredCurrencyAmount = StaticAging5.OutputCurrencyAmount
				StaticAging5.ToCurrency 		= ToCurrency
					
				TransactionAmount				= CompanyCustomerRel.Agings.Aging[6]
				StaticAging6.EnteredCurrencyAmount = StaticAging6.OutputCurrencyAmount
				StaticAging6.ToCurrency 		= ToCurrency

				TransactionAmount				= CompanyCustomerRel.Agings.Aging[7]
				StaticAging7.EnteredCurrencyAmount = StaticAging7.OutputCurrencyAmount
				StaticAging7.ToCurrency 		= ToCurrency

				TransactionAmount				= CompanyCustomerRel.Agings.Aging[8]
				StaticAging8.EnteredCurrencyAmount = StaticAging8.OutputCurrencyAmount
				StaticAging8.ToCurrency 		= ToCurrency
					
				TransactionAmount				= DerivedCreditLimit						
				DisplayCreditLimit.EnteredCurrencyAmount = DisplayCreditLimit.OutputCurrencyAmount
				DisplayCreditLimit.ToCurrency 	= ToCurrency

		DisplayBaseCurrencyAmounts is a Set Action
			restricted
			run in foreground
			Parameters
				PrmReceivableCompany	is a ReceivableCompany
				PrmCreditAnalyst		is a CreditAnalyst
			Instance Selection
				where (IsOpen
				and	Company			= PrmReceivableCompany
				and	CreditAnalyst	= PrmCreditAnalyst)
			Action Rules
				Instance Rules
					initialize FromCurrency
					initialize ToCurrency
					initialize TransactionAmount
					initialize ExchangeDate
					initialize DisplayBalanceAmount
					initialize DisplayInvoiceBalanceAmount
					initialize DisplayPastDueBalanceAmount
					initialize DisplayBOEBalanceAmount
					initialize StaticAgingCurrentPeriodAmount
					initialize StaticAging1
					initialize StaticAging2
					initialize StaticAging3
					initialize StaticAging4
					initialize StaticAging5
					initialize StaticAging6
					initialize StaticAging7
					initialize StaticAging8
					initialize DisplayCreditLimit

		DisplayBaseAmounts is an Instance Action
			default label is "DisplayAmountsInCompanyCurrency"					
			valid when (IsOpen)
			completion message is "DisplayAmountsInCompanyCurrencyComplete"		
			Action Rules
				initialize FromCurrency
				initialize ToCurrency
				initialize TransactionAmount
				initialize ExchangeDate
				initialize DisplayBalanceAmount
				initialize DisplayInvoiceBalanceAmount
				initialize DisplayPastDueBalanceAmount
				initialize DisplayBOEBalanceAmount
				initialize StaticAgingCurrentPeriodAmount
				initialize StaticAging1
				initialize StaticAging2
				initialize StaticAging3
				initialize StaticAging4
				initialize StaticAging5
				initialize StaticAging6
				initialize StaticAging7
				initialize StaticAging8
				initialize DisplayCreditLimit



