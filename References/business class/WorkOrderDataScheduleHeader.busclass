WorkOrderDataScheduleHeader is a BusinessClass
	owned by wo
	prefix is WOH
	classic name is WOSCHEDHDR

	Ontology
		symbolic key is WorkOrderDataScheduleHeader
			classic set name is WOHSET1
			name is WorkOrderDataScheduleHeader
			classic name for InventoryLocation is LOCATION

	Patterns
		implements StaticJava
		disable AuditIndex

	Persistent Fields

		HeaderObjectID				is an ObjId
			classic name is OBJ-ID-HDR
		DetailObjectID				is an ObjId
			classic name is OBJ-ID-DTL
		DocumentDemandView			is AlphaUpper size 1
			classic name is DOC-DMND-VIEW
			States
				Detail			value is "D"
				Summary			value is "S"
		DateUsed					is AlphaUpper size 1
			States
				DateNeeded				value is "N"
				ProductionStartDate		value is "P"
		Period1EndDate				is Date
			classic name is PER-1-DATE
		PreviousDate				is Date
			classic name is PREV-DATE
		Period2EndDate				is Date
			classic name is PER-2-DATE
		Period3EndDate				is Date
			classic name is PER-3-DATE
		FutureDate					is Date
		Calendar					is a SystemCalendar
		WorkOrderNumber
			classic name is WORK-ORDER
		Status						is Numeric size 1
			States
				Unreleased				value is 1
				Released				value is 2
				Exploded				value is 3
				InProduction			value is 4
		StartDate
		EndDate						is Date
		Capacity
		FirmAllocation				is Boolean
			classic name is FIRM-FL
		UserId						is an Actor
		CreateDate					is Date
		UpdateDate					is TimeStamp
		SequenceNumber 				is Numeric 2

	Relations

		WorkOrderSchedulesRel is a WorkOrderSchedule set

		KitItemRel
			one-to-one relation to KitItem
			Field Mapping uses Set2
				related.MakeCode					= "S"
				related.ItemGroup					= Company.ItemGroup
				related.KitItem.Company				= Company
				related.KitItem.InventoryLocation	= InventoryLocation
				related.KitItem.Item				= Item

		WorkOrderScheduleDetailsRel 
			one-to-many relation to WorkOrderScheduleDetail
			Field Mapping uses symbolic key
				related.Company 					= Company
				related.InventoryLocation			= InventoryLocation
				related.Item						= Item

		WarehouseDemandLinesRel
			one-to-many relation to WarehouseDemandLine
			Field Mapping uses symbolic key
				related.Company								= Company
			Instance Selection
				where (related.Item							= Item
				and	   related.InventoryLocation			= InventoryLocation)

		WorkOrderForecastDemandsRel
			one-to-many relation to WorkOrderForecastDemand
			Field Mapping uses Set4
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.WorkOrderForecastDemand.Item		= Item
			Instance Selection
				where (related.IsWorkOrderDemandForecastToSchedule)

		WorkOrderScheduleForGroupRel
			one-to-many relation to WorkOrderSchedule
			Field Mapping uses symbolic key
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.Item								= Item
			Instance Selection
				where (related.ActionCode not entered)

		WorkOrderSchedulesGroupDoneRel
			one-to-many relation to WorkOrderSchedule
			Field Mapping uses symbolic key
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.Item								= Item
			Instance Selection
				where (related.ActionCode.Group)

		WorkOrderSchedulesSeparateDoneRel
			one-to-many relation to WorkOrderSchedule
			Field Mapping uses symbolic key
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.Item								= Item
			Instance Selection
				where (related.ActionCode.Separate
				and    related.SequenceNumber not entered)

	Local Fields
		ItemLocation
		LocalWorkOrderScheduleQuantity			is like Quantity
		LocalWorkOrderScheduleDetailQuantity	is like Quantity
		LocalEndMarkDate						is Date
		LocalLastNeededDate						is Date
		LocalBackorderedQuantity				is like Quantity
		LocalLastSystemCode						is like DemandSystemCode
		LocalLastDocumentNumber					is like DemandDocument
		LocalLastLineNumber						is like LineNumber
		LocalDate								is Date
		LocalCalculatedDate  					is Date
		LocalActionCode							is AlphaUpper 1
		LocalLastRush							is Boolean
		LocalQuantity							is like Quantity
		CalendarQuery

	Transient Fields

		TransientFutureQuantity			 			is like Quantity
		TransientPeriod3Quantity		 			is like Quantity
		TransientPeriod2Quantity		 			is like Quantity
		TransientPeriod1Quantity		 			is like Quantity
		TransientPreviousQuantity		 			is like Quantity

	Rule Blocks

		CreateForecastDemandSchedule									
			invoke Create WorkOrderSchedule
				fill in fields from this instance
				invoked.DemandType 			= 3
				invoked.Date				= LocalLastNeededDate
				invoked.Quantity			= LocalQuantity

		CreateDocumentDemandSchedule									
			invoke Create WorkOrderSchedule
				fill in fields from this instance
				if (DocumentDemandView.Summary)
					invoked.DemandType      		= 2
					initialize invoked.Rush
					initialize invoked.DocumentNumber
				else
					invoked.DemandType				= 1
					invoked.DocumentNumber  		= LocalLastDocumentNumber
					invoked.LineNumber				= LocalLastLineNumber
					if (LocalLastRush)
						invoked.Rush				= true
					else
						initialize invoked.Rush
				invoked.SystemCode					= LocalLastSystemCode
				invoked.Date						= LocalLastNeededDate
				invoked.Quantity					= LocalBackorderedQuantity

		CalculateDates

			CalendarQuery.QueryDate  = LocalDate
			CalendarQuery.WorkingDay = true

			if (KitItemRel.ScheduleFrequency.Daily)
				CalendarQuery.NthDay = KitItemRel.ScheduleIncrement
			else
			if (KitItemRel.ScheduleFrequency.Weekly)
				CalendarQuery.NthDay = 5 * KitItemRel.ScheduleIncrement
			else
			if (KitItemRel.ScheduleFrequency.Monthly)
				CalendarQuery.NthDay = 30 * KitItemRel.ScheduleIncrement

			LocalCalculatedDate = CalendarQuery.OutputDate


























	Derived Fields
		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforProductionSchedule"

		ContextMessageText is a MessageField
			restricted
			"WorkOrderDataScheduleHeader<WorkOrderDataScheduleHeader>"

		MessageForUser								is a MessageField
			restricted
			"ScheduleMaintenanceBy<UserId>On<CreateDate>At<UpdateDate>"		

		DerivedMessageForUser						is a DerivedField
			type is Alpha size up to 200
			restricted
			if (UserId = actor)
				return MessageForUser

		MessageForContiguousProduction				is a MessageField
			restricted
			"Warning:FinishedGoodNeedsContiguousProduction"

		MessageForIsContiguousProduction			is a DerivedField
			type is Alpha size up to 200
			if ((7 - StartDate week day + StartDate) <= EndDate)
				return MessageForContiguousProduction		

		DerivedFutureQuantity						is a DerivedField
			type is like Quantity
			TransientFutureQuantity = 0
			for each WorkOrderSchedulesRel
				if (each.Date  > Period3EndDate)
					TransientFutureQuantity += each.Quantity

			return TransientFutureQuantity

		DerivedPeriod3Quantity	         			is a DerivedField
			type is like Quantity
			TransientPeriod3Quantity = 0
			for each WorkOrderSchedulesRel
				if (each.Date  >  Period2EndDate
				and each.Date  <= Period3EndDate)
					TransientPeriod3Quantity += each.Quantity

			return TransientPeriod3Quantity

		DerivedPeriod2Quantity	         			is a DerivedField
			type is like Quantity
			TransientPeriod2Quantity = 0
			for each WorkOrderSchedulesRel
				if (each.Date  >  Period1EndDate
				and each.Date  <= Period2EndDate)
					TransientPeriod2Quantity += each.Quantity

			return TransientPeriod2Quantity

		DerivedPeriod1Quantity	         			is a DerivedField
			type is like Quantity
			TransientPeriod1Quantity = 0
			for each WorkOrderSchedulesRel
				if (each.Date  >  PreviousDate
				and each.Date  <= Period1EndDate)
					TransientPeriod1Quantity += each.Quantity

			return TransientPeriod1Quantity

		DerivedPreviousQuantity	         			is a DerivedField
			type is like Quantity
			TransientPreviousQuantity = 0
			for each WorkOrderSchedulesRel
				if (each.Date  <= PreviousDate)
					TransientPreviousQuantity += each.Quantity

			return TransientPreviousQuantity

	Conditions
		RecordExists
			when (WorkOrderDataScheduleHeader exists)

		ShowAlert
			when ((7 - StartDate week day + StartDate) <= EndDate)
	Field Rules

		Item
			constraint (KitItemRel exists)
				"FinishedGoodNotDefinedAtLocation"								

		DateUsed
			initial value is DateUsed.DateNeeded
			default to DateUsed.DateNeeded

			if (WorkOrderSchedulesRel exists)
				cannot be changed
					"CannotChangeDateUsedAfterDemandHasBeenGathered"			

		DocumentDemandView
			initial value is DocumentDemandView.Summary
			default to DocumentDemandView.Summary

			if (WorkOrderSchedulesRel exists)
				cannot be changed
					"CannotChangeDateUsedAfterDemandHasBeenGathered"			

		Period1EndDate
			if (PreviousDate not entered)
				LocalDate = current corporate date + 1 day
				default to LocalDate
			else
				LocalDate = PreviousDate + 1 day
				CalendarQuery.Occurrence = CalendarQuery.Occurrence.Next
				include CalculateDates
				default to LocalCalculatedDate

				constraint (Period1EndDate >= PreviousDate)
					"Period1EndDateMustBeGreaterThanPreviousDate"				

			cannot be changed												
				"CannotChangePeriod1EndDateAfterScheduleHasBeenBuilt"

		PreviousDate
			if (PreviousDate not entered)
				LocalDate =	Period1EndDate
				CalendarQuery.Occurrence = CalendarQuery.Occurrence.Previous
				include CalculateDates
				default to LocalCalculatedDate

			cannot be changed												
				"CannotChangePreviousDateAfterScheduleHasBeenBuilt"

		Period2EndDate
			LocalDate =	Period1EndDate
			CalendarQuery.Occurrence = CalendarQuery.Occurrence.Next
			include CalculateDates
			default to LocalCalculatedDate

			constraint (Period2EndDate >= Period1EndDate)
				"Period2EndDateMustBeGreaterThanPeriod1EndDate"					

			cannot be changed
				"CannotChangePeriod2EndDateAfterScheduleHasBeenBuilt"			

		Period3EndDate
			LocalDate =	Period2EndDate
			CalendarQuery.Occurrence = CalendarQuery.Occurrence.Next
			include CalculateDates
			default to LocalCalculatedDate

			constraint (Period3EndDate >= Period2EndDate)
				"Period3EndDateMustBeGreaterThanPeriod2EndDate"					

			cannot be changed
				"CannotChangePeriod3EndDateAfterScheduleHasBeenBuilt"			

		FutureDate
			LocalDate =	Period3EndDate
			CalendarQuery.Occurrence = CalendarQuery.Occurrence.Next
			include CalculateDates
			default to LocalCalculatedDate

			constraint (FutureDate > Period3EndDate)
				"FutureDateMustBeGreaterThanPeriod3EndDate"						

			cannot be changed
				"CannotChangeFutureDateAfterScheduleHasBeenBuilt"				

		StartDate
			initial value is Period1EndDate
			default to Period1EndDate

			if (StartDate changed)
				constraint (StartDate >= current corporate date)
					"ProductionStartDateCannotBeLessThanToday'sDate"			

		EndDate
			initial value is StartDate
			default to StartDate

			constraint (EndDate >= StartDate)
				"ProductionEndDateCannotBeLessThanStartDate"					

		Capacity
			initial value is KitItemRel.Capacity
			default to KitItemRel.Capacity

		FirmAllocation
			initial value is true
			default to true

		CreateDate
			initial value is current corporate date
			default to current corporate date

		UserId
			initial value is actor
			default to actor

		UpdateDate
			initial value is current timestamp
			default to current timestamp

		Status
			initial value is Status.Unreleased
			default to Status.Unreleased

		Calendar
			initial value is InventoryLocation.Calendar
			default to InventoryLocation.Calendar
			required

	Actions
		Build is a Create Action
			Action Rules
				constraint (InventoryLocation.Company.WorkOrderInUse)
					"CompanyNotSetUpToUseWorkOrders"												

			Exit Rules

				if (DateUsed.ProductionStartDate
				and ItemLocation.LeadtimeDays entered)
					LocalEndMarkDate 	= 	Period3EndDate + ItemLocation.LeadtimeDays
				else
					LocalEndMarkDate	=	Period3EndDate

				if (!InventoryLocation.DemandSource.ForecastDemand)
					initialize LocalLastNeededDate
					initialize LocalLastSystemCode
					initialize LocalBackorderedQuantity
					initialize LocalLastDocumentNumber
					initialize LocalLastLineNumber
					initialize LocalLastRush
					for each WarehouseDemandLinesRel		
						if (DocumentDemandView.Summary)
							if (each.EstimatedTransactionDate	      = LocalLastNeededDate
							and each.WarehouseDemand.DemandSystemCode = LocalLastSystemCode)
								LocalBackorderedQuantity	+= each.BackorderedQuantity

							else
								LocalLastNeededDate 				= each.EstimatedTransactionDate
								LocalLastSystemCode 				= each.WarehouseDemand.DemandSystemCode
								LocalBackorderedQuantity			= each.BackorderedQuantity
						else
							if (each.EstimatedTransactionDate		 	= LocalLastNeededDate
							and each.WarehouseDemand.DemandSystemCode 	= LocalLastSystemCode
							and each.WarehouseDemand.DemandDocument	 	= LocalLastDocumentNumber
							and each.WarehouseDemandLine.LineNumber	 	= LocalLastLineNumber)
								LocalBackorderedQuantity	+= each.BackorderedQuantity
							else
								LocalLastNeededDate		 = each.EstimatedTransactionDate
								LocalBackorderedQuantity = each.BackorderedQuantity
								LocalLastSystemCode 	 = each.WarehouseDemand.DemandSystemCode
								LocalLastDocumentNumber  = each.WarehouseDemand.DemandDocument
								LocalLastLineNumber		 = each.WarehouseDemandLine.LineNumber
								LocalLastRush			 = each.Rush

					if (LocalLastNeededDate	   entered
					or  LocalLastSystemCode     entered
					or  LocalLastDocumentNumber entered
					or  LocalLastLineNumber 	   entered)
						include CreateDocumentDemandSchedule

				if (!InventoryLocation.DemandSource.DocumentDemand) 	
					initialize LocalLastNeededDate
					initialize LocalQuantity
					for each WorkOrderForecastDemandsRel
						if (each.WorkOrderForecastDemand.ExpectedDeliveryDate = LocalLastNeededDate)
							LocalQuantity += each.Quantity
						else
							if (LocalLastNeededDate entered)
								include CreateForecastDemandSchedule

							LocalLastNeededDate 	= each.WorkOrderForecastDemand.ExpectedDeliveryDate
							LocalQuantity    		= each.Quantity
						if (each.WorkOrderForecastDemand.ExpectedDeliveryDate <= LocalEndMarkDate)
							invoke Released.Inschedule each
								invoked.PrmWorkOrderSchedules = first WorkOrderSchedulesRel.WorkOrderSchedule

					if (LocalLastNeededDate entered)
						include CreateForecastDemandSchedule

		Delete is a Delete Action

		Finish is a Delete Action
			Entrance Rules
				constraint (UserId = actor)
					"CanOnlyViewAndDelete;ScheduleBuiltBy<UserId>"					

				constraint (!InventoryLocation.Status.Inactive)
					"InventoryLocationIsInactive"									

				invoke FinishWorkOrderSchedule WorkOrderSchedulesRel


		Release is an Instance Action

			Action Rules
				constraint (!InventoryLocation.Status.Inactive)
					"CannotRelease;InventoryLocation<InventoryLocation>IsInactive"			

				constraint (WorkOrderSchedulesRel exists)
					"NoDemandSelectedToProcess"					

				for each WorkOrderSchedulesRel
					LocalActionCode						= each.ActionCode
					LocalWorkOrderScheduleQuantity	   += each.Quantity

				initialize LocalWorkOrderScheduleDetailQuantity

				for each WorkOrderScheduleDetailsRel
					constraint (each.StartDate >= current corporate date)
						"DetailProductionStartDateCannotBeLessThanToday'sDate"		

					if (Capacity entered)
						constraint (each.Quantity <= Capacity)
							"CannotRelease;QuantityOfWorkOrderDetailGreaterThanCapacity"	

					constraint (each.Quantity >= 0)
						"CannotRelease;WorkOrderForDate<each.StartDate>HasNegativeQuantity"	

					LocalWorkOrderScheduleDetailQuantity  += each.Quantity

				constraint (LocalWorkOrderScheduleQuantity = LocalWorkOrderScheduleDetailQuantity)
					"CannotRelease;DetailQuantityNotEqualsDemandQuantityForAction<LocalActionCode>"		

				invoke CreateWorkOrderAction WorkOrderSchedulesRel

		Update is an Update Action
			Action Rules
				display "UpdatingHDR"
				constraint (UserId = actor)
					"CanOnlyViewAndDelete;ScheduleBuiltBy<UserId>andActor<actor>"					

