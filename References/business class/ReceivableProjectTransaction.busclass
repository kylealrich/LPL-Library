ReceivableProjectTransaction is a BusinessClass
	owned by ar
	prefix is CCP
	classic name is ARACPIVOT

	Ontology
		symbolic key is ReceivableProjectTransaction
			classic set name is CCPSET1
			classic name for ReceivableProjectTransaction.BatchNumber is BATCH-NBR

	Patterns
		implements DynamicCreation
		implements StaticJava
		disable AuditIndex

	Persistent Fields

		Project
		Status											is Numeric size 1
			States
				ReleasedOpenItem			value is 1
					default label is "Released open item"
				ReleasedAsssignedPayment	value is 2
					default label is "Released assigned payment"
				FullyApplied				value is 7
					default label is "Fully applied"
				Closed						value is 8
				History						value is 9
				UnreleasedPayment			value is 0
		Customer										is like Customer
		OpenTransactionAmount							is an InternationalAmount
			classic name is OPEN-TRAN
		OpenBaseAmount									is an InternationalAmount
			classic name is OPEN-BASE
			precision is Company.Currency.NumberOfDecimals
		OpenSortBaseAmount								is a SortAmount
			classic name is SORT-AMOUNT
		ReceivableProcessLevel
			classic name is PROCESS-LEVEL
		OriginalCurrency								is a Currency
			classic name is ORIG-CURRENCY
			default label is "TransactionCurrency"	
		CurrencyDecimalsNumber							is an OrigNd
			classic name is ORIG-ND
		CurrencyRate									is an OrigRate
			classic name is ORIG-RATE
		CurrencyMultiplicationOrDivision
			sql name is CMultiplicationOrDivision
			classic name is CURR-MUDV
		SummarizeDetail									is AlphaUpper size 1
			classic name is SUM-LINE
		DiscountDate									is a DiscDateX3InAracpivot
			classic name is DISC-DATE
		OrigDiscAmts									is an OrigDiscAmtX3InAracpivot
			classic name is ORIG-DISC-AMT
		CustomerPurchaseOrder
			classic name is CUST-PO-NBR
		TransactionDate									is Date
			classic name is TRANS-DATE
		CrossReferenceReceivableInvoiceType				is a XrefType
			sql name is CRReceivableInvoiceType
			classic name is XREF-TYPE
		CrossReferenceReceivableInvoice					is a XrefNbr
			sql name is CReferenceReceivableInvoice
			classic name is XREF-NBR
		BankTransactionCode
			classic name is BANK-INST-CODE
		BankTransactionType								is a BankInstType
			classic name is BANK-INST-TYPE
		AlternateReceivableInvoiceType
			classic name is ALT-TYPE
		GeneralLedgerDate								is Date
			classic name is GL-DATE
			default label is "GlobalLedgerDate"
		CancelDate										is Date
		DisputeSequence									is a DisputeSeq
			classic name is DISPUTE-SEQ
		RevalueCurrencyTransactions						is Boolean
			classic name is REVALUE-FL
		TransactionUserField1							is a TransUser1
			classic name is TRANS-USER1
		TransactionAmount								is an InternationalAmount
			classic name is ORIG-AMT
		BaseAmount										is an InternationalAmount
			classic name is TRAN-AMT
			precision is Company.Currency.NumberOfDecimals
		DueDate											is Date
		GainLossAmount									is an InternationalAmount
			classic name is GAINLOS-AMT
		Currency
			classic name is CURRENCY-CODE
		BaseNumberOfDecimals
			classic name is BASE-ND
		AdjustmentIndicator								is a Flag1
			classic name is ADJ-FL
		CurrencyRateToCustomerGroupCurrency
			sql name is CRateToCustomerGroupCurrency
			classic name is GROUP-RATE
		CustomerGroupCurrencyMultiplicationOrDivision
			sql name is CGCMultiplicationOrDivision
			classic name is GROUP-MUDV
		DiscountPercent									is a DiscPctX3InAracpivot
			classic name is DISC-PCT
		ProjectContractCustomer							is an AcCustomerId
			classic name is AC-CUSTOMER-ID
		FinanceDimension2
		ProjectContract

	Transient Fields
		SelectedApplicationAmount				is an InternationalAmount
			derive value from DerivedSelectApplicationAmount
		SelectedAdjustedAmount					is an InternationalAmount
			derive value from DerivedSelectDiscountAmount
		SelectedAdjustmentReason				is an ApplicationAdjustmentReason
			derive value from DerivedSelectDiscountReason
		TransientGeneralLedgerDate				is Date
			default label is "GlobalLedgerDate"
			derive value from DerivedGeneralLedgerDate
		TransientOperator						is like ReceivableOperator

	Local Fields
		CurrencyWork									is a ReceivableExchange
		LocalCurrency									is AlphaUpper size 5
		LocalDaysDifference								is Decimal size 5.0
		LocalCurrentDate								is Date
		LocalApplicationAmount							is an InternationalAmount			
		LocalDiscountAmount								is an InternationalAmount
		LocalAdjustmentReason	     					is an ApplicationAdjustmentReason


	Context Fields
		ReceivablePaymentHeader
		ReceivablePayment
		ExchangeDate
		ContextCustomerGroup							is a CustomerGroup


	Field Rules
		SelectedAdjustmentReason
			constraint (SelectedAdjustmentReason != "CURR")
				"CURRIsAReservedReasonCode"


	Derived Fields

		FromBusinessClass is a DerivedField
			type is Alpha 50
			restricted
			return parentcontext.name


		DerivedDisplayCurrency			is a DerivedField
			type is AlphaUpper size 5
			restricted

			LocalCurrency = actor.context.Currency
			if (LocalCurrency entered)
				return LocalCurrency
			if (ReceivablePayment entered)
				return ReceivablePayment.OriginalCurrency
			return OriginalCurrency


		DerivedSelectApplicationAmount is a DerivedField
			type is like InternationalAmount
			restricted
			initialize CurrencyWork
			if (HasApplicationSelect								
			and SummarizeDetail = "T")
				return ReceivableInvoiceDetailRel.DerivedSelectApplicationAmount	
			else
			if (HasReceivableApplicationSelect)
				if (SummarizeDetail = "T")
					return ReceivableInvoiceDetailRel.DerivedSelectApplicationAmount	
				else
					return ReceivableApplicationSelectRel.PaymentApplicationAmount
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= DerivedExchangeDate
				CurrencyWork.FromCurrency					= OriginalCurrency
				CurrencyWork.TransactionAmount 				= ReceivableInvoiceDetailRel.DerivedOpenAmount
				CurrencyWork.BaseAmount.ToCurrency			= DerivedDisplayCurrency
				return CurrencyWork.BaseAmount.OutputCurrencyAmount



		DerivedSelectDiscountReason is a DerivedField
			type is like ReceivableReason
			restricted
			if (HasReceivableApplicationSelect)
				return ReceivableApplicationSelectRel.FirstAdjustmentReason
			else
			if (ReceivableInvoiceDetailRel.DerivedApplicationDiscount entered
			and ReceivableInvoiceDetailRel.CompanyCustomerRel.DiscountAdjustmentReason entered)
				return ReceivableInvoiceDetailRel.CompanyCustomerRel.DiscountAdjustmentReason


		DerivedSelectDiscountAmount is a DerivedField
			type is like InternationalAmount
			restricted
			default label is "OpenAmount"

			initialize CurrencyWork										
			if (HasApplicationSelect
			and SummarizeDetail = "T")
				return ReceivableInvoiceDetailRel.DerivedSelectTotalCreditAdjustmentsAmount
			if (HasReceivableApplicationSelect)
				if (SummarizeDetail = "T")
					return ReceivableInvoiceDetailRel.SameInvoiceRel.ReceivableApplicationSelectRel.TotalCreditAdjustments
				else
					return ReceivableApplicationSelectRel.TotalCreditAdjustments
			else
			if  (OriginalCurrency = DerivedDisplayCurrency)
				return ReceivableInvoiceDetailRel.DerivedDiscountAmount
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= DerivedExchangeDate
				CurrencyWork.FromCurrency					= OriginalCurrency
				if (SummarizeDetail = "T")
					CurrencyWork.TransactionAmount			= ReceivableInvoiceDetailRel.DerivedDiscountAmount 
				else
					CurrencyWork.TransactionAmount			= ReceivableInvoiceDetailRel.DerivedApplicationDiscount
				CurrencyWork.BaseAmount.ToCurrency			= DerivedDisplayCurrency

				return CurrencyWork.BaseAmount.OutputCurrencyAmount


		DerivedExchangeDate is a DerivedField
			type is Date
			restricted
			if (ReceivablePayment.DepositDate entered)
				return ReceivablePayment.DepositDate
			if (TransactionDate entered)
				return TransactionDate


		DerivedGeneralLedgerDate is a DerivedField
			type is Date
			restricted
			if (HasApplicationSelect									
			and SummarizeDetail = "T")
				return ReceivableInvoiceDetailRel.first SameInvoiceRel.ReceivableApplicationSelectRecordsExistRel.GeneralLedgerDate
			else
			if (HasReceivableApplicationSelect)
				if (SummarizeDetail = "T")
					return ReceivableInvoiceDetailRel.first SameInvoiceRel.ReceivableApplicationSelectRel.GeneralLedgerDate
				else
					return ReceivableApplicationSelectRel.GeneralLedgerDate
			else
			if (Company.DefaultApplicationDate.LatestTransactionPostDate)	
				if (ReceivablePaymentHeader.GeneralLedgerDate > GeneralLedgerDate)
					if  (CompanySystemClosingControlRel.Control and Company.VerifyGLDateWithinGLDateRange
					and  ReceivablePaymentHeader.GeneralLedgerDate not within CompanySystemClosingControlRel.ValidEntryDate)
						return CompanySystemClosingControlRel.ValidEntryDate.Begin
					else
						return ReceivablePaymentHeader.GeneralLedgerDate
				else
					if  (CompanySystemClosingControlRel.Control and Company.VerifyGLDateWithinGLDateRange
					and GeneralLedgerDate not within CompanySystemClosingControlRel.ValidEntryDate)
						return CompanySystemClosingControlRel.ValidEntryDate.Begin
					else
						return GeneralLedgerDate
				
			else
			if (Company.DefaultApplicationDate.PaymentCreditPostDate)
				if  (CompanySystemClosingControlRel.Control and Company.VerifyGLDateWithinGLDateRange
				and  ReceivablePaymentHeader.GeneralLedgerDate not within CompanySystemClosingControlRel.ValidEntryDate)
					return CompanySystemClosingControlRel.ValidEntryDate.Begin
				else
					return ReceivablePaymentHeader.GeneralLedgerDate
			else
				if  (CompanySystemClosingControlRel.Control and Company.VerifyGLDateWithinGLDateRange
				and  current corporate date not within CompanySystemClosingControlRel.ValidEntryDate)
					return CompanySystemClosingControlRel.ValidEntryDate.Begin
				else
					return current corporate date


		DerivedType is a DerivedField
			type is Alpha 1
			default label is "Type"
			return ReceivableProjectTransaction.TransType


		CustomerGroupAgingPeriod is a DerivedField
			type is Numeric 2
			LocalCurrentDate = current corporate date
			initialize LocalDaysDifference

			LocalDaysDifference = LocalCurrentDate - TransactionDate









			if (ContextCustomerGroup.AgePaymentsRule.AgedInCurrentColumn
			or  LocalDaysDifference = 0)
				return 2
			else
			if (LocalDaysDifference < 0)
				if (ContextCustomerGroup.CurrentAgingPeriod entered
				and ContextCustomerGroup.CurrentAgingPeriod >= (LocalDaysDifference * -1))
					return 2
				else
					if (ContextCustomerGroup.ExpandedAgingPeriods)
						if ((ContextCustomerGroup.CurrentAgingPeriod + ContextCustomerGroup.AgeFuture) >= (LocalDaysDifference * -1))
							return 1
						else
							return 0
					else
						return 1
			else
			if (LocalDaysDifference <= ContextCustomerGroup.AgePeriodses.AgePeriods[1])
				return 3
			else
			if (LocalDaysDifference <= ContextCustomerGroup.AgePeriodses.AgePeriods[2])
				return 4
			else
			if (LocalDaysDifference <= ContextCustomerGroup.AgePeriodses.AgePeriods[3])
				return 5
			else
			if (LocalDaysDifference <= ContextCustomerGroup.AgePeriodses.AgePeriods[4])
				return 6
			else
			if (LocalDaysDifference <= ContextCustomerGroup.AgePeriodses.AgePeriods[5])
				return 7
			else
			if (LocalDaysDifference <= ContextCustomerGroup.AgePeriodses.AgePeriods[6])
				return 8
			else
			if (LocalDaysDifference <= ContextCustomerGroup.AgePeriodses.AgePeriods[7])
				return 9
			else
				return 10


		Period0CustomerGroupOpenAmount is a DerivedField
			type is like InternationalAmount
			if (CustomerGroupAgingPeriod != 0)
				return 0
			else
			if (ReceivableProjectTransaction.TransType.CustomerPayment
			or ReceivableProjectTransaction.TransType.CreditMemo)
				return (CustomerGroupAmount * -1)
			else
				return CustomerGroupAmount


		Period1CustomerGroupOpenAmount is a DerivedField
			type is like InternationalAmount
			if (CustomerGroupAgingPeriod != 1)
				return 0
			else
			if (ReceivableProjectTransaction.TransType.CustomerPayment
			or ReceivableProjectTransaction.TransType.CreditMemo)
				return (CustomerGroupAmount * -1)
			else
				return CustomerGroupAmount


		Period2CustomerGroupOpenAmount is a DerivedField
			type is like InternationalAmount
			if (CustomerGroupAgingPeriod != 2)
				return 0
			else
			if (ReceivableProjectTransaction.TransType.CustomerPayment
			or ReceivableProjectTransaction.TransType.CreditMemo)
				return (CustomerGroupAmount * -1)
			else
				return CustomerGroupAmount


		Period3CustomerGroupOpenAmount is a DerivedField
			type is like InternationalAmount
			if (CustomerGroupAgingPeriod != 3)
				return 0
			else
			if (ReceivableProjectTransaction.TransType.CustomerPayment
			or ReceivableProjectTransaction.TransType.CreditMemo)
				return (CustomerGroupAmount * -1)
			else
				return CustomerGroupAmount


		Period4CustomerGroupOpenAmount is a DerivedField
			type is like InternationalAmount
			if (CustomerGroupAgingPeriod != 4)
				return 0
			else
			if (ReceivableProjectTransaction.TransType.CustomerPayment
			or ReceivableProjectTransaction.TransType.CreditMemo)
				return (CustomerGroupAmount * -1)
			else
				return CustomerGroupAmount


		Period5CustomerGroupOpenAmount is a DerivedField
			type is like InternationalAmount
			if (CustomerGroupAgingPeriod != 5)
				return 0
			else
			if (ReceivableProjectTransaction.TransType.CustomerPayment
			or ReceivableProjectTransaction.TransType.CreditMemo)
				return (CustomerGroupAmount * -1)
			else
				return CustomerGroupAmount


		Period6CustomerGroupOpenAmount is a DerivedField
			type is like InternationalAmount
			if (CustomerGroupAgingPeriod != 6)
				return 0
			else
			if (ReceivableProjectTransaction.TransType.CustomerPayment
			or ReceivableProjectTransaction.TransType.CreditMemo)
				return (CustomerGroupAmount * -1)
			else
				return CustomerGroupAmount


		Period7CustomerGroupOpenAmount is a DerivedField
			type is like InternationalAmount
			if (CustomerGroupAgingPeriod != 7)
				return 0
			else
			if (ReceivableProjectTransaction.TransType.CustomerPayment
			or ReceivableProjectTransaction.TransType.CreditMemo)
				return (CustomerGroupAmount * -1)
			else
				return CustomerGroupAmount


		Period8CustomerGroupOpenAmount is a DerivedField
			type is like InternationalAmount
			if (CustomerGroupAgingPeriod != 8)
				return 0
			else
			if (ReceivableProjectTransaction.TransType.CustomerPayment
			or ReceivableProjectTransaction.TransType.CreditMemo)
				return (CustomerGroupAmount * -1)
			else
				return CustomerGroupAmount


		Period9CustomerGroupOpenAmount is a DerivedField
			type is like InternationalAmount
			if (CustomerGroupAgingPeriod != 9)
				return 0
			else
			if (ReceivableProjectTransaction.TransType.CustomerPayment
			or ReceivableProjectTransaction.TransType.CreditMemo)
				return (CustomerGroupAmount * -1)
			else
				return CustomerGroupAmount


		Period10CustomerGroupOpenAmount is a DerivedField
			type is like InternationalAmount
			if (CustomerGroupAgingPeriod != 10)
				return 0
			else
			if (ReceivableProjectTransaction.TransType.CustomerPayment
			or ReceivableProjectTransaction.TransType.CreditMemo)
				return (CustomerGroupAmount * -1)
			else
				return CustomerGroupAmount


		UnreleasedPayments is a DerivedField
			type is like InternationalAmount
			if (!ReceivableProjectTransaction.TransType.CustomerPayment
			or  !Status.UnreleasedPayment)
				return 0
			else
				return CustomerGroupAmount


		TotalCredits is a DerivedField
			type is like InternationalAmount
			if (!ReceivableProjectTransaction.TransType.CustomerPayment
			and !ReceivableProjectTransaction.TransType.CreditMemo)
				return 0
			else
				return CustomerGroupAmount


		TotalDebits is a DerivedField
			type is like InternationalAmount
			if (!ReceivableProjectTransaction.TransType.Invoice
			and !ReceivableProjectTransaction.TransType.DebitMemo)
				return 0
			else
				return CustomerGroupAmount


		CurrentBalance is a DerivedField
			type is like InternationalAmount
			if (ReceivableProjectTransaction.TransType.CustomerPayment
			or ReceivableProjectTransaction.TransType.CreditMemo)
				return (CustomerGroupAmount * -1)
			else
				return CustomerGroupAmount


		CustomerGroupAmount is a DerivedField
			type is like InternationalAmount
			restricted
			if (Company.Currency = first ContextCustomerGroup.Currency)
				return OpenTransactionAmount
			else
				CurrencyWork.ExchangeDate								= current corporate date
				CurrencyWork.TransactionAmount							= OpenTransactionAmount
				CurrencyWork.FromCurrency								= OriginalCurrency 
				CurrencyWork.BaseAmount.ToCurrency						= ContextCustomerGroup.Currency 
				return CurrencyWork.BaseAmount.OutputCurrencyAmount


		OriginalNumberOfDecimals is a DerivedField
			type is like OrigNd
			restricted
			if (CurrencyDecimalsNumber entered)
				return CurrencyDecimalsNumber
			else
				return OriginalCurrency.NumberOfDecimals


	Relations

		GeneralLedgerCompanyRel	
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company


		CompanySystemClosingControlRel	
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode	 = "AR"
				related.Company					 = Company









		ReceivableInvoiceDetailRel
			classic name is AROITEMS
			one-to-one relation to ReceivableInvoiceDetail
			Field Mapping uses symbolic key
				related.Company												 = Company
				related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType	 = ReceivableProjectTransaction.TransType
				related.ReceivableInvoiceDetail.Invoice						 = ReceivableProjectTransaction.Transaction
				related.ReceivableInvoiceDetail.PaymentSeq					 = ReceivableProjectTransaction.PaymentSeq

		ReceivablePaymentRel
			classic name is ARPAYMENT
			one-to-one relation to ReceivablePayment
			Field Mapping uses symbolic key
				related.Company					 = Company
				related.ReceivablePaymentHeader	 = ReceivableProjectTransaction.BatchNumber
				related.ReceivablePayment		 = ReceivableProjectTransaction.PaymentSeq

		ReceivableApplicationSelectRel
			classic name is ARSAPPLIED
			one-to-one relation to ReceivableApplicationSelect
			Field Mapping uses Set2
				related.ReceivableApplicationSelect.TransactionCompany									 = Company
				related.ReceivableApplicationSelect.ReceivableInvoiceDetail.ReceivableInvoiceDetailType	 = ReceivableProjectTransaction.TransType
				related.ReceivableApplicationSelect.ReceivableInvoiceDetail.Invoice						 = ReceivableProjectTransaction.Transaction
				related.ReceivableApplicationSelect.ReceivableInvoiceDetail.PaymentSeq					 = ReceivableProjectTransaction.PaymentSeq

		ReceivableApplicationSelectRecordsExistRel							
			one-to-many relation to ReceivableApplicationSelect
			Field Mapping uses Set2
			Instance Selection
				where (related.ReceivableApplicationSelect.TransactionCompany									 = Company
				and	   related.ReceivableApplicationSelect.ReceivableInvoiceDetail.ReceivableInvoiceDetailType	 = ReceivableProjectTransaction.TransType
				and	   related.ReceivableApplicationSelect.ReceivableInvoiceDetail.Invoice						 = ReceivableProjectTransaction.Transaction)

	Sets
















		Set12
			indexed
			Sort Order
				Project
				DueDate descending
				ReceivableProjectTransaction
				Company

		Set13
			indexed
			Sort Order
				DueDate descending
				ReceivableProjectTransaction
				Company

		Set2
			indexed
			Instance Selection
				where (OpenProjectContractHistory2)
			Sort Order
				Project
				DueDate
				ReceivableProjectTransaction
				Company

		Set3
			indexed
			Instance Selection
				where (OpenProjectContractHistory3)
			Sort Order
				DueDate
				ReceivableProjectTransaction
				Company

		Set4
			indexed
			Instance Selection
				where (OpenProjectContractHistory4)
			Sort Order
				ProjectContract
				DueDate
				ReceivableProjectTransaction
				Company

		Set5
			indexed
			Instance Selection
				where (OpenProjectContractHistory5)
			Sort Order
				Project
				DueDate
				ReceivableProjectTransaction
				Company

		Set6
			indexed
			Instance Selection
				where (OpenProjectContractHistory6)
			Sort Order
				DueDate
				ReceivableProjectTransaction
				Company











		Set8
			indexed
			Sort Order
				Project
				DueDate
				ReceivableProjectTransaction
				Company

		Set9
			indexed
			Sort Order
				DueDate
				ReceivableProjectTransaction
				Company

	Conditions




		OpenProjectContractHistory2
			restricted
			classic name is CCPSET2
			when ((ReceivableProjectTransaction.TransType.Invoice
				or	ReceivableProjectTransaction.TransType.CreditMemo
				or	ReceivableProjectTransaction.TransType.DebitMemo)
			and   Status.ReleasedOpenItem
			or	ReceivableProjectTransaction.TransType.CustomerPayment
			and   (Status.UnreleasedPayment
				or	Status.ReleasedAsssignedPayment))

		OpenProjectContractHistory3
			restricted
			classic name is CCPSET3
			when ((ReceivableProjectTransaction.TransType.Invoice
				or	ReceivableProjectTransaction.TransType.CreditMemo
				or	ReceivableProjectTransaction.TransType.DebitMemo)
			and   Status.ReleasedOpenItem
			or	ReceivableProjectTransaction.TransType.CustomerPayment
			and   (Status.UnreleasedPayment
				or	Status.ReleasedAsssignedPayment))

		OpenProjectContractHistory4
			restricted
			classic name is CCPSET4
			when ((ReceivableProjectTransaction.TransType.Invoice
				or	ReceivableProjectTransaction.TransType.CreditMemo
				or	ReceivableProjectTransaction.TransType.DebitMemo)
			and   Status.ReleasedOpenItem
			or	ReceivableProjectTransaction.TransType.CustomerPayment
			and   (Status.UnreleasedPayment
				or	Status.ReleasedAsssignedPayment))

		OpenProjectContractHistory5
			restricted
			classic name is CCPSET5
			when (Status >  blank
			and   Status <  9)

		OpenProjectContractHistory6
			restricted
			classic name is CCPSET6
			when (Status >  blank
			and   Status <  9)

		OpenProjectContractHistory7
			restricted
			classic name is CCPSET7
			when (Status >  blank
			and   Status <  9)

		IsClosedPayment
			restricted
			when (ReceivableProjectTransaction.TransType.CustomerPayment
			and   (Status.FullyApplied
				or	Status.Closed
				or	Status.History))

		ClosedTransaction
			restricted
			classic name is CLOSED-TRANS
			when ((ReceivableProjectTransaction.TransType.Invoice
				or	ReceivableProjectTransaction.TransType.CreditMemo
				or	ReceivableProjectTransaction.TransType.DebitMemo)
			and   (Status.FullyApplied
				or	Status.Closed
				or	Status.History))





		IsOpenPayments
			restricted
			when (ReceivableProjectTransaction.TransType.CustomerPayment
			and   (Status.ReleasedOpenItem
				or	Status.ReleasedAsssignedPayment))

		OpenTransaction
			restricted
			classic name is OPEN-TRANS
			when ((ReceivableProjectTransaction.TransType.Invoice
				or	ReceivableProjectTransaction.TransType.DebitMemo
				or	ReceivableProjectTransaction.TransType.CreditMemo)
			and   Status.ReleasedOpenItem)

		AvailableForCashApplicationSelect
			restricted
			when (ReceivableInvoiceDetailRel.AvailableForCashApplicationSelect
			and !ReceivableInvoiceDetailRel.PortalPaymentSelected)	

		HasReceivableApplicationSelect
			restricted
			when (ReceivableApplicationSelectRel exists)

		HasApplicationSelect						
			restricted
			when (ReceivableApplicationSelectRecordsExistRel exists)

		AllowSelect
			restricted
			when (AvailableForCashApplicationSelect)	


		CashApplicationOperatorRequired
			restricted
			when (ReceivablePayment.Company.CashOperatorRequired)	

		SelectForApplicationOperator
			restricted
			when (AllowSelect
			and   CashApplicationOperatorRequired)

		CurrencyNotEqualToReceivablePaymentCurrency	
			when (OriginalCurrency != ReceivablePayment.OriginalCurrency)	

		SelectForApplicationNoOperator
			restricted
			when (AllowSelect
			and   !CashApplicationOperatorRequired)

		AllowUnselect
			restricted
			when (HasReceivableApplicationSelect
			or 	  (HasApplicationSelect								
			and   SummarizeDetail = "T"))

		HasOpenTransactionAmount
			restricted
			when (!OpenTransactionAmount = blank)

		NotSummarizedOrFirstSummarizedLine								
			restricted
			when (SummarizeDetail = "F"
			or	 ReceivableInvoiceDetailRel.LowestOpenSequence)

	Actions

		Create is a Create Action
			restricted
			Action Rules
			Exit Rules
				if (BaseAmount not entered)
					BaseAmount				= TransactionAmount

				OpenSortBaseAmount		= BaseAmount
				OpenBaseAmount			= BaseAmount
				OpenTransactionAmount	= TransactionAmount




		Update is an Update Action
			Entrance Rules
				if (SelectedApplicationAmount entered
				or  SelectedAdjustedAmount entered
				or  SelectedAdjustmentReason entered)
					constraint (ReceivableApplicationSelectRel.NumberOfAdjustments <= 1)
						"MultipleAdjustmentsExist;UseDetailScreenToChange"
			Action Rules
				if (SelectedApplicationAmount entered
				or  SelectedAdjustedAmount entered
				or  SelectedAdjustmentReason entered)
					if (SelectedApplicationAmount not entered)
						if (ReceivableApplicationSelectRel exists)
							invoke Unselect
					else
					if (!ReceivableApplicationSelectRel exists)





						if (!ReceivableInvoiceDetailRel.ReceivableInvoiceDetail.ReceivableInvoiceDetailType.CreditMemo
						and !Company.PaymentOverApplication
						and  SelectedApplicationAmount > ReceivablePayment.PendingOpenAmount)
							SelectedApplicationAmount				= ReceivablePayment.CashApplicationPendingOpen

						invoke SelectOpenAmountForApplication							
							if (CashApplicationOperatorRequired)
								invoked.ApplyOperator									= TransientOperator
							else
								invoked.ApplyOperator									= actor
							if  (SelectedAdjustmentReason entered
							and  SelectedApplicationAmount = DerivedSelectApplicationAmount)
								invoked.ApplicationAmount						= SelectedApplicationAmount - SelectedAdjustedAmount
							else
								invoked.ApplicationAmount						= SelectedApplicationAmount
							if  (SelectedAdjustedAmount entered
							or SelectedAdjustmentReason entered)
								invoked.AdjustAmount							= SelectedAdjustedAmount
								invoked.AdjustReason							= SelectedAdjustmentReason












					else
						invoke CashApplicationUpdate ReceivableApplicationSelectRel
							invoked.ApplicationCurrency							= DerivedDisplayCurrency
							invoked.EnteredAmount 								= SelectedApplicationAmount
							if (SelectedAdjustedAmount entered)
								invoked.SelectedAdjustedAmount					= SelectedAdjustedAmount
								invoked.SelectedAdjustmentReason				= SelectedAdjustmentReason


		UpdateFromReceivableInvoiceDetail is an Update Action
			restricted


		Delete is a Delete Action
			restricted


		SelectForApplicationNoOperator is an Instance Action
			default label is "SelectOpenAmountForApplication"
			valid when (SelectForApplicationNoOperator)
			Action Rules
				if (!HasReceivableApplicationSelect)	
					LocalApplicationAmount = SelectedApplicationAmount				
					LocalDiscountAmount	   = SelectedAdjustedAmount
					LocalAdjustmentReason  = SelectedAdjustmentReason
					invoke SelectOpenAmountForApplication
						invoked.ApplyOperator 						= actor
						if  (LocalAdjustmentReason entered
						and  LocalApplicationAmount = DerivedSelectApplicationAmount)
							invoked.ApplicationAmount				= LocalApplicationAmount - LocalDiscountAmount
						else
							invoked.ApplicationAmount				= LocalApplicationAmount
						if  (LocalDiscountAmount entered
						or LocalAdjustmentReason entered)
							invoked.AdjustAmount					= LocalDiscountAmount
							invoked.AdjustReason					= LocalAdjustmentReason


		SelectForApplicationOperator is an Instance Action
			default label is "SelectOpenAmountForApplication"
			valid when (SelectForApplicationOperator)
			Parameters
				ApplyOperator		is like ReceivableOperator
			Action Rules
				if (!HasReceivableApplicationSelect)	
					LocalApplicationAmount = SelectedApplicationAmount			
					LocalDiscountAmount	   = SelectedAdjustedAmount
					LocalAdjustmentReason  = SelectedAdjustmentReason
					invoke SelectOpenAmountForApplication
						invoked.ApplyOperator 						= ApplyOperator
						if  (LocalAdjustmentReason entered
						and  LocalApplicationAmount = DerivedSelectApplicationAmount)
							invoked.ApplicationAmount				= LocalApplicationAmount - LocalDiscountAmount
						else
							invoked.ApplicationAmount				= LocalApplicationAmount
						if  (LocalDiscountAmount entered
						or LocalAdjustmentReason entered)
							invoked.AdjustAmount					= LocalDiscountAmount
							invoked.AdjustReason					= LocalAdjustmentReason


		SelectOpenAmountForApplication is an Instance Action
			restricted

			Parameters
				ApplyGeneralLedgerDate 					is Date
					default label is "ApplyGlobalLedgerDate"
				ApplyOperator							is a ReceivableOperator
				AdjustAmount							is an InternationalAmount							
				AdjustReason							is an ApplicationAdjustmentReason
				ApplicationAmount						is an InternationalAmount

			Parameter Rules
				ApplyGeneralLedgerDate
					initial value is ReceivablePaymentHeader.GeneralLedgerDate
					initial value is current corporate date
				ApplyOperator
					if (CashApplicationOperatorRequired)	
						required
							"OperatorIsRequired"
						constraint (ApplyOperator exists)
							"OperatorDoesNotExist"
						constraint (ApplyOperator.ActiveStatus.Active)
							"OperatorIsNotActive"
				AdjustAmount									
					if (AdjustReason not entered)
						cannot be entered
							"ReasonCodeRequiredIfAdjustAmountEntered"
					else
						required
							"AdjustmentAmountRequiredIfAdjustmentReasonEntered"
				AdjustReason									
					if (AdjustAmount entered)
						required
							"AdjustmentAmountRequiredIfAdjustmentReasonEntered"

			Action Rules
				if (ReceivablePayment.IsPrepaymentTaxWithHolding)		
					constraint (!ReceivableInvoiceDetailRel.ReceivableInvoiceDetail.ReceivableInvoiceDetailType.CreditMemo)
						"PaymentHasThePrepaymentTax;CreditMemoCannotBeAppliedToAPayment"
				constraint (!ReceivableApplicationSelectRel exists)
					"Invoice<ReceivableInvoiceDetailRel.ReceivableInvoiceDetail.Invoice>AlreadySelectedForProcessing"

				constraint (ReceivablePayment entered)
					"MustSelectPaymentForApplication"
				
				LocalApplicationAmount				= ApplicationAmount			
				LocalDiscountAmount					= AdjustAmount
				














				if (!ReceivableInvoiceDetailRel.ReceivableInvoiceDetail.ReceivableInvoiceDetailType.CreditMemo
				and !Company.PaymentOverApplication
				and  LocalApplicationAmount > ReceivablePayment.PendingOpenAmount)
					LocalApplicationAmount				= ReceivablePayment.CashApplicationPendingOpen



				constraint (LocalApplicationAmount entered)
					"TransactionDoesNotHaveOpenAmount"

				invoke Create ReceivableApplicationSelectRel
					invoked.Company														= ReceivablePayment.Company
					invoked.ReceivablePaymentHeader										= ReceivablePaymentHeader
					invoked.ReceivablePayment											= ReceivablePayment


					invoked.EnteredAmount												= LocalApplicationAmount
					invoked.ApplicationCurrency											= DerivedDisplayCurrency
					invoked.ReceivableOperator											= ApplyOperator
					invoked.GeneralLedgerDate											= ApplyGeneralLedgerDate
					invoked.SelectedAdjustmentReason									= AdjustReason
					invoked.SelectedAdjustedAmount										= LocalDiscountAmount


		Unselect is an Instance Action
			valid when (AllowUnselect)
			Action Rules
				if (SummarizeDetail = "T")				
					for each ReceivableInvoiceDetailRel.SameInvoiceRel
						invoke Purge each.ReceivableApplicationSelectRel
				else
					invoke Purge ReceivableApplicationSelectRel										



