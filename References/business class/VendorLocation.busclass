VendorLocation is a BusinessClass
	owned by ap
	prefix is VLO
	classic name is APVENLOC

	Ontology
		symbolic key is VendorLocation
			classic set name is VLOSET1
			classic name is LOCATION-CODE

	Patterns
		implements StaticJava
		disable AuditIndex
		implements BODId

	Persistent Fields
		LocationType
			classic name is LOC-TYPE
		VendorName                            
			classic name is VENDOR-VNAME
		ContactName                           is a VendorName 
			holds pii
			classic name is VENDOR-CONTCT
		NormalRemitToLocation                 is Boolean
			classic name is NORM-REMIT
		NormalPurchaseFromLocation            is Boolean
			classic name is NORM-PURCH
		RemitToCode                           is a VendorLocation
			default label is "RemitPaymentTo"
		PhoneNumber                           is a TelephoneNumber 
			holds pii
			classic name for PhoneNumber.InternationalPrefix is PHONE-PREFIX
			classic name for PhoneNumber.SubscriberNumber is PHONE-NUM
			classic name for PhoneNumber.Extension is PHONE-EXT
		FaxNumber 
			holds pii
			classic name for FaxNumber.InternationalPrefix is FAX-PREFIX
			classic name for FaxNumber.SubscriberNumber is FAX-NUM
			classic name for FaxNumber.Extension is FAX-EXT
		TelexNumber 
			holds pii
			classic name is TELEX-NUM
		TaxExemptCode                         is AlphaUpper size 1
			classic name is TAX-EXEMPT-CD
		TaxCode
		TermsCode
			classic name is TERM-CODE
		InvoiceCurrency                       is a Currency
			classic name is INV-CURRENCY
		BankCurrency                          is a Currency
		RevalueCurrency                       is Boolean
			classic name is CURR-RECALC
		BankTransactionCode
			classic name is BANK-INST-CODE
		CashCode
		BankEntity
		BankAccountNumber
			classic name is VBANK-ACCT-NO
		BankAccountType
			classic name is VBANK-ACCT-TP
		GlobalBankAccountType	
		BankAccountValidationType
			classic name is VBANK-IDENT
		EDINumber
			classic name is EDI-NBR
		ACHPrenotification
			classic name is ACH-PRENOT
		Operator
		UserName01
		UserName02
		UserName03
		UserName04
		UserName05
		UserName06
		InvoiceGroup						  is a PayablesInvoiceGroup		
		SeparatePayment                       is Boolean
			classic name is SEP-CHK-FLAG
		Status                                is AlphaUpper size 1
			classic name is ACTIVE-STATUS
			States
				Active                 value is "A"
				Inactive               value is "I"
				InactiveForPOAdditions value is "D"
		ERSCapable                            is Boolean
		InvoiceReference                      is a PayablesReferenceType	
			classic name is INVC-REF-TYPE










		EDIAutoRelease                        is Boolean
			classic name is EDI-AUTO-REL
		WriteOffAmount                        is an InternationalAmount
			classic name is WRITE-OFF-AMT
		VendorClaimType
			classic name is VEN-CLAIM-TYPE
		VendorClaimHoldCode                   is a PayablesHoldCode
			classic name is CLAIM-HOLD-CD
		ReplaceGoods                          is Boolean
		ShipOrHold
		EmailAddress						  is an EmailAddressMulti 
			holds pii
			classic name is E-MAIL-ADDRESS
		VendorAccount
			classic name is VEND-ACCT
		TaxUsageCode                          is AlphaUpper size 10
			classic name is TAX-USAGE-CD
		VATRegistrationCountry                is a Country
			classic name is VAT-REG-CTRY
		VATRegistrationNumber
			classic name is VAT-REG-NBR
		MobileNumber                          is a MobilePhone 
			holds pii
			classic name for MobileNumber.MobilePhoneNumber.InternationalPrefix is MBL-INT-PREFIX
			classic name for MobileNumber.MobilePhoneNumber.SubscriberNumber is MOBILE-NUM
			classic name for MobileNumber.MobilePhoneNumber.Extension is MOBILE-EXT
		PayImmediately                        is Boolean
			classic name is PAY-IMM-FLAG
		DiversityCode                         is a PayablesDiversityCode
			classic name is DIVERSE-CODE
		IntermediaryBankEntity                is a BankEntity
			classic name is INTM-BANK-ENT
		IntermediaryBankAccount               is a BankAccountNumber
			classic name is INTM-BANK-ACCT
		IntermediaryBankAccountValidationType is a BankAccountValidationType
			sql name is IBankAccountValidationType
			classic name is INTM-BANK-IDNT
		IntermediaryBankCurrency              is a Currency
			classic name is INTM-BANK-CURR
		IntermediaryPrenotification           is an ACHPrenotification
			classic name is INTM-PRENOT
		IntermediarySwiftID                   is AlphaUpper size 12
			classic name is INTM-SWIFT-ID
		IntermediaryPaymentCategory           is a CashLedgerPaymentCategoryCode
			classic name is INTM-PMT-CAT
		IntermediaryNormalOrExpressCode       is a NormalOrExpressCode
			sql name is INormalOrExpressCode
			classic name is INTM-NORM-EXP
		IntermediaryPaymentForm               is a CashLedgerPaymentForm
			classic name is INTM-PMT-FORM
		IntermediaryChargeCode                is a CashLedgerChargeCode
			classic name is INTM-CHRG-CD
		IntermediaryCrossBorderIdentifier     is a CrossBorderIdentifier
			sql name is ICrossBorderIdentifier
			classic name is INTM-CRS-IDENT
		ChargeCode							  is a CashLedgerChargeCode
		PaymentCategoryCode					  is a CashLedgerPaymentCategoryCode
			classic name is PMT-CAT-CODE
		NormalOrExpressCode
			classic name is NORM-EXP-CODE
		PaymentForm							  is a CashLedgerPaymentForm
			classic name is PMT-FORM
		SwiftID
		BACSReference
			classic name is BUILD-SOC-REF
		BACSName                              is an AccountName
			classic name is BUILD-ACCT-NM
		DiscountCode                          is a PayablesDiscountCode
		CrossBorderIdentifier
			classic name is CROSS-IDENT
		GiroNumber
		CreditCardNumber                      is a CrCardNumber 
			holds pii
			classic name is CR-CARD-NUMBER
		BankInstruction1                      is a BankInstruct1
			classic name is BANK-INSTRUCT1
		BankInstruction2                      is a BankInstruct2
			classic name is BANK-INSTRUCT2
		BankInstruction3                      is a BankInstruct3
			classic name is BANK-INSTRUCT3
		BankInstruction4                      is a BankInstruct4
			classic name is BANK-INSTRUCT4
		UseProcurementCard                    is Boolean
			classic name is P-CARD-FLAG
		ProcurementCardNumber
			classic name is PCARD-NBR
		GlobalLocationNumber
			classic name is GLN-NBR
			default label is "G\L\N"
		CreatedBy                             is an Operator 
			holds pii
		LastUpdateDate                        is TimeStamp
			classic name is LAST-UPDT-DATE
		LastUpdateBy                          is an Operator 
			holds pii
		ValidateCertificationDate             is Boolean
			classic name is VALID-CERT-DT
		TwitterID 
			holds pii
			classic name is SOCIAL-ID1
		SocialNetworkID2 
			holds pii
			classic name is SOCIAL-ID2
		SocialNetworkID3 
			holds pii
			classic name is SOCIAL-ID3
		SocialNetworkID4 
			holds pii
			classic name is SOCIAL-ID4
		SocialNetworkID5 
			holds pii
			classic name is SOCIAL-ID5
		BankingCode
		BankID
		AssignmentNumber
			classic name is ASSIGNMENT-NBR
		DebitingSign
		IntermediaryBankingCode               is a BankingCode
			classic name is INTM-BANK-CODE
		IntermediaryBankID                    is a BankID
			classic name is INTM-BANK-ID
		IntermediaryAssignmentNumber          is an AssignmentNumber
			sql name is IAssignmentNumber
			classic name is INTM-ASSIGN-NO
		IntermediaryDebitingSign              is a DebitingSign
			classic name is INTM-DEBITING
		Logo									is a LogoAttachment
		InvoiceRoutingCategory
		Sepa									is Boolean
			classic name is SEPA-FLAG
		IntermediarySepa						is Boolean
			classic name is INTM-SEPA-FLAG
		ExternalAccountingEntity			  is Alpha size 22
			classic name is EXT-ACCT-ENT
		ExternalLocation					  is Alpha size 22
			classic name is EXT-LOCATION
		ExternalKey							  is Alpha size 25
			classic name is EXTERNAL-KEY

		VendorConversionResult
		VendorLocationType					  is a LocationRegistrationType
			protected
			restricted
		OnHold								  is Boolean		
		TaxRegistrationType					  is Numeric size 1
			States
				Registered			value is 1
				UnRegistered		value is 2
					default label is "Unregistered"
				SpecialEconomicZone	value is 3
				CompositeDealer		value is 4

	Transient Fields
		RIBKey
		IntermediaryRIBKey						is a RIBKey
		RequestAddressChange					is Boolean		
		VendorAddress							is a PostalAddressV2	
			holds pii
			derive value from CurrentAddressRel.PostalAddress
		AddressEffectiveDate					is an EffectiveDate
			default label is "EffectiveDate"
			derive value from CurrentAddressRel.effective date
		ObjectReference 					is BusinessObjectReference
			derive value from reference to this instance
		MaskedProcurementCard					is like ProcurementCardNumber	
			default label is "ProcurementCard"
			derive value from DerivedMaskedProcurementCard
		TransientCreateFromCopy					is Boolean		
		ViewHiddenData							is Boolean		
			derive value from DerivedViewHiddenData
		TransientHoldCode						is a PayablesHoldCode	
			default label is "HoldCode"
		UseVendorAddress						is Boolean				
		CurrentVendorAddress					is a PostalAddressV2 
			holds pii
			derive value from Vendor.CurrentAddressRel.PostalAddress
		ApproverActor							is Alpha 30				
		RequesterActor							is an Actor
		RequestedBy								is Alpha 100
		RequesterPhone							is a Telephone 
			holds pii
		RequesterEmail							is an EmailAddressMulti 
			holds pii
		RequestPriority							is Numeric 1
			States
				High				value is 1
				Medium				value is 2
				Low					value is 3
		NeededBy								is Date
		Notes									is Text
		ValidateOFAC							is Boolean
		RequestCustomerGroup					is like CustomerGroup 
		RequestCustomer							is like Customer 
		NeededByRedBoolean						is Boolean
		NeededByYellowBoolean 					is Boolean
		NeededByGreenBoolean					is Boolean
		NoOfDays								is Numeric size 3
		T2VCreate								is Boolean		
		TransientAttachmentDescription			is a Description
			default label is "AttachmentDescription"
		TransientAttachment						is an Attachment
			default label is "Attachment"
		ClearBankAccountNumber					is Boolean		
		ClearSwiftID							is Boolean
		ClearIntermediaryBankAccount			is Boolean
		ClearIntermediarySwiftID				is Boolean
		ClearGiroNumber							is Boolean
		ClearCreditCardNumber					is Boolean
		TransPayablesCompany					is a PayablesCompanyField
		CommentText
		Title 					                is a CommentName
		PrintCode 				                is AlphaUpper size 1
			States
				All             value is "A"
				CheckOrCheque   value is "C"
				DisplayAndPrint value is "D"
				NotationOnly    value is "N"
		DateRange
		PayGroup
	Context Fields
		AuditDateRange		is a DateRange
		BypassActiveVendorLocationEdit
		FSMInboundBODTracker
		
	Local Fields
		CalculateTax
		VerifyRIBKey
		ValidateBankAccountNumber

		SaveBankTransactionCode	 	is a BankTransactionCode
		SaveCashCode				is a CashCode

		LocalBankTransactionCode 	is a BankTransactionCode
		LocalCashCode				is a CashCode
		LocalProcessGroup		 	is a PayablesProcessGroup

		ActionCode					is Alpha size 1
			States
				Create  value is "C"
				Update	value is "U"
				Delete	value is "D"
		MultTaxCodesIndicator     	is Boolean

		WebServiceError     		is Boolean
		WebServiceErrorMessage 		is Text
		LocalLookupKey 				is Alpha 100
		LocalResponseBusclassKey 	is like LastSequence
		LocalSequence 				is like Sequence
		OldTaxCode					is like TaxCode
		NewTaxCode					is like TaxCode
		CalculateTaxOutputMessage 	is Alpha 200
		MaxLogoSize
		LocalTitle 							is Alpha size 255
		LocalShipFromPartyBODTrigger		is Boolean
		NativeLPLBODTrigger					is Boolean
		NativeLPLRemitToBODTrigger 			is Boolean
		LocalRemitToPartyMasterBODTrigger	is Boolean
		LocalAccountingEntity 				is Alpha size 22
		LocalGeneralLedgerCompany			is Numeric 4
		LocalAccountingentityCompany 		is Alpha 40
		LocalCrossAccountingEntity 			is Alpha 40
		ShipFromPartyMasterCleanDocIDXMLBOD	is XMLDocument
		LocalBODFormattedID					is Alpha 100
		LocalRemitToPartyMasterCleanDocIDXMLBOD	is XMLDocument
		NewBODTracker  				is a FSMInboundBODTracker view
		LocalFSMInboundBODTracker	is Numeric 15
		Error            			is Boolean
	    ErrorMessage     			is Alpha 300
	    LocalBODTrigger				is Boolean
	    LocalConfigurationParameter	is Alpha size up to 200
	    LocalSourceValue			is Alpha 30
	    
	Derived Fields
		RepresentativeText is a StringField
			type is Text
			default label is "VendorLocation"
			VendorLocation " - " VendorName

		DerivedLocationAndVendorIDName	is a DerivedField
			type is Alpha size up to 132
			default label is "VendorLocation"
			return RepresentativeText + " for Vendor " + Vendor.RepresentativeText

		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforRemitToPartyMaster"

		ContextMessageText is a MessageField
			restricted
			"VendorLocation<VendorLocation>"

		DerivedVendorLocationIDName	is a MessageField	
			default label is "Location"
			"<VendorLocation>_-_<VendorName>"

		DerivedLocationNameID	is a DerivedField	
			type is Alpha size up to 138
			default label is "Location"
			return VendorName + " (" + VendorLocation + ")"

		DerivedPurchasedFromLocation	is a DerivedField	
			type is Alpha size up to 138
			if (PurchaseOrdersRel.PurchaseFromLocation entered)
				return DerivedVendorLocationIDName
			else
				return blank

		DerivedViewHiddenData is a DerivedField		
			type is Boolean
			restricted
			if (!RecordExists)
				return true
			else
				return false

		OnHoldDisplay is a DerivedField
			type is MessageField
			if (OnHold)
				return LocationOnHoldMessage

		LocationOnHoldMessage is a LabelField

			"Hold:<first PayablesOnHoldRel.HoldCode>"

		DerivedHoldCode is a DerivedField	
			type is like PayablesHoldCode
			default label is "HoldCode"
			return first PayablesOnHoldRel.HoldCode

		LocationOnHoldDisplay is a DerivedField
			type is MessageField
			if (LocationOnHold)
				return ChargebackHoldMessage

		ChargebackHoldMessage is a LabelField
			"ChargebackHold"
















		VendorAddressLine1  is a ConditionalField
			type is like AddressLine
			classic name is VDR-ADDR1

			if (CurrentAddressRelExists)
				CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine1
			else
				blank

		VendorAddressLine2  is a ConditionalField
			type is like AddressLine
			classic name is VDR-ADDR2

			if (CurrentAddressRelExists)
				CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine2
			else
				blank

		VendorAddressLine3  is a ConditionalField
			type is like AddressLine
			classic name is VDR-ADDR3

			if (CurrentAddressRelExists)
				CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine3
			else
				blank

		VendorAddressLine4  is a ConditionalField
			type is like AddressLine
			classic name is VDR-ADDR4

			if (CurrentAddressRelExists)
				CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine4
			else
				blank

		VendorCity          is a ConditionalField
			type is like MunicipalityLarge
			classic name is VDR-CITY-ADDR5
			default label is "City"

			if (CurrentAddressRelExists)
				CurrentAddressRel.PostalAddress.Municipality
			else
				blank

		VendorStateProvince is a ConditionalField
			type is like StateProvince
			classic name is VDR-STATE
			default label is "State_/Province"

			if (CurrentAddressRelExists)
				CurrentAddressRel.PostalAddress.StateProvince
			else
				blank

		VendorPostalCode is a ConditionalField
			type is like PostalCode
			classic name is VDR-POSTAL
			default label is "PostalCode"

			if (CurrentAddressRelExists)
				CurrentAddressRel.PostalAddress.PostalCode
			else
				blank

		VendorCountry       is a ConditionalField
			type is Alpha size 30
			classic name is VDR-COUNTRY
			restricted
			if (CurrentAddressRelExists)
				CurrentAddressRel.PostalAddress.Country
			else
				blank

		VendorCounty        is a ConditionalField
			type is Alpha size 25
			classic name is VDR-COUNTY
			restricted
			if (CurrentAddressRelExists)
				CurrentAddressRel.PostalAddress.County
			else
				blank

		VendorCountryName is a ConditionalField
			type is Alpha size 40
			if (CurrentAddressRelExists)
				CurrentAddressRel.PostalAddress.Country.Name
			else
				blank









		CityStateZIPDisplay is a DerivedField
			type is Alpha 76
			default label is "St\,\Prov"
			if (CurrentAddressRelExists)
				return CurrentAddressRel.CityStateZIPDisplay
			else
				return blank

		DerivedDisplayAddressLine1 is a DerivedField
			type is like AddressLine
			if (CurrentAddressRelExists)
				return CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine1
			else
				return Vendor.VendorAddressLine1

		DerivedDisplayCityStateZIP is a DerivedField
			type is Alpha 76
			if (CurrentAddressRelExists)
				return CityStateZIPDisplay
			else
				return Vendor.CityStateZIPDisplay

		DerivedDisplayCountry is a DerivedField
			type is Alpha size 30
			if (CurrentAddressRelExists)
				return VendorCountry
			else
				return Vendor.VendorCountry

		CommaSeparatedAddress		is a LabelField
			"<DerivedDisplayAddressLine1>,<DerivedDisplayCityStateZIP>,<DerivedDisplayCountry>"

		VATNumber           is a StringField
			type is Alpha size 14
			classic name is VAT-NBR
			restricted
			VATRegistrationCountry
			VATRegistrationNumber

		CompletionMessage	is a DerivedField
			type is MessageField
			restricted
			if (MultTaxCodesIndicator)
				return VertexMultTaxCodesMessage
			else
				return VertexCompletionMessage

		VertexMultTaxCodesMessage	is a MessageField
			restricted
			"TaxCodeNotUpdated.MultipleTaxCodesExistsOnVendorsAddress"

		VertexCompletionMessage	is a MessageField
			restricted
			"UpdateTaxCodesComplete"

		OldTaxCodeMsg				is a MessageField
			restricted
			"OldTaxCode:<OldTaxCode>"

		ProcurementCardUncheckMessage is a MessageField
			restricted
			"SavingTheVendorLocationWith_'\Use_\Procurement_\Card'_uncheckedWillRemoveThe_\Procurement_\CardFromThisLocation"

		VertexNoChangeMessage				is a LabelField
			"NoChangeNecessary,Correct\Tax\Area\IdExists"
		DerivedLookupMessage				is a DerivedField
			type is MessageField
			restricted
			if (NewTaxCode = OldTaxCode)
				return VertexNoChangeMessage
			else
				return CalculateTaxOutputMessage

		TaxCodeMessage				is a DerivedField
			type is MessageField
			restricted
			if (NewTaxCode = OldTaxCode)
				return blank
			else
				return OldTaxCodeMsg

		DerivedMaskedProcurementCard is a DerivedField		
			type is like ProcurementCardNumber
			restricted
			if (ProcurementCardNumber entered)
				return "************" + ProcurementCardNumber[13:16]
			return blank

		CreateMessage is a LabelField
			restricted
			"CreateVendorLocationForVendor<Vendor>"

		VendorMessage is a LabelField
			restricted
			"Location<DerivedLocationNameID>_for<Vendor.DerivedVendorNameID>"

		DerivedFormTitle is a DerivedField
			type is MessageField
			restricted
			if (RecordExists)
				return VendorMessage
			else
				return CreateMessage


		MobileVendorLocationDisplay is a LabelField
			"<VendorLocation>_-_<VendorLocation.VendorName>"




		DerivedNativeBODVariationID is a DerivedField
			type is Alpha 25
			restricted
			return bod id.VariationID

		NativeBODCurrentTimeStamp is a DerivedField
			type is TimeStamp
			NativeBODCurrentTimeStamp = system current timestamp
			return NativeBODCurrentTimeStamp

		NativeAlphaCurrentTimeStamp is a DerivedField
			type is Alpha size 20
			return NativeBODCurrentTimeStamp

		NativeBODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			return NativeAlphaCurrentTimeStamp[1:4] + "-" + NativeAlphaCurrentTimeStamp[5:6] + "-" + NativeAlphaCurrentTimeStamp[7:8] + "T" + NativeAlphaCurrentTimeStamp[9:10] + ":" + NativeAlphaCurrentTimeStamp[11:12] + ":" + NativeAlphaCurrentTimeStamp[13:14] + "Z"

		DerivedDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter	= "Generic_Delimiter"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "tenantID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "releaseID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "logicalID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "VersionID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedappProdline is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "appProdline"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedAllCompanyFlag is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "AllCompanyFlag"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedRemitToPartyAllCompanyFlag is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "SupplierPartyMaster_Outbound_AccountingEntity_All"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedConfigAccountingEntityShipFrom is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "ConfigAccountingEntity"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedConfigAccountingEntityRemitTo is a DerivedField
        	type is Alpha size 60
            restricted
            LocalConfigurationParameter	= "SyncRemitToPartyMaster_Out_AccountingEntity"
            if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
                	
        DerivedIntegrationApplication is a DerivedField
			type is Alpha size 25
			restricted
			LocalConfigurationParameter	= "IntegrationApplication"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedCleanDocumentID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "RequiredCleanDocumentID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedMultipleFEG is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "IsMultipleFEG"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedTriggerBODBasedOnCrossReference is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "TriggerBODBasedOnCrossReference"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedDocumentID is a DerivedField
			type is Alpha 40
			restricted
			if(DerivedCleanDocumentID = "Y")
				return Vendor using "%d" + DerivedDelimiter + VendorLocation
			else
				return VendorGroup + DerivedDelimiter + Vendor using "%d" + DerivedDelimiter + VendorLocation


		DerivedAccountingEntityShipFrom is a DerivedField
			type is Alpha 20
			restricted
			if(DerivedConfigAccountingEntityShipFrom != blank)
				return VendorGroup.FinanceEnterpriseGroup + DerivedDelimiter + DerivedConfigAccountingEntityShipFrom
			else
				return VendorGroup.FinanceEnterpriseGroup + DerivedDelimiter + VendorGroup

		DerivedAccountingEntityRemitTo is a DerivedField
			type is Alpha 20
			restricted
			if(DerivedConfigAccountingEntityRemitTo != blank)
				return VendorGroup.FinanceEnterpriseGroup + DerivedDelimiter + DerivedConfigAccountingEntityRemitTo
			else
				return VendorGroup.FinanceEnterpriseGroup + DerivedDelimiter + VendorGroup

		DerivedFinanceEnterpriseGroup is a DerivedField
			type is Alpha 20
			restricted
			return VendorGroup.FinanceEnterpriseGroup

		DerivedIBankName is a DerivedField
			type is Alpha 10
			restricted
			return BankEntity.BankName

		DerivedIBranchName is a DerivedField
			type is Alpha 10
			restricted
			return BankEntity.BranchName

		DerivedBAddressLine1 is a DerivedField
			type is Alpha 30
			restricted
			return BankEntity.PostalAddress.DeliveryAddress.AddressLine1

		DerivedBAddressLine2 is a DerivedField
			type is Alpha 30
			restricted
			return BankEntity.PostalAddress.DeliveryAddress.AddressLine2

		DerivedBAddressLine3 is a DerivedField
			type is Alpha 30
			restricted
			return BankEntity.PostalAddress.DeliveryAddress.AddressLine3

		DerivedBAddressLine4 is a DerivedField
			type is Alpha 30
			restricted
			return BankEntity.PostalAddress.DeliveryAddress.AddressLine4

		DerivedBMunicipality is a DerivedField
			type is Alpha 30
			restricted
			return BankEntity.PostalAddress.Municipality

		DerivedBStateProvince is a DerivedField
			type is Alpha 30
			restricted
			return BankEntity.PostalAddress.StateProvince

		DerivedBCountry is a DerivedField
			type is Alpha 30
			restricted
			return BankEntity.PostalAddress.Country

		DerivedBPostalCode is a DerivedField
			type is Alpha 30
			restricted
			return BankEntity.PostalAddress.PostalCode

		DerivedBPSubscriberNumber is a DerivedField
			type is Alpha 30
			restricted
			return BankEntity.PhoneNumber.SubscriberNumber

		DerivedBPExtension is a DerivedField
			type is Alpha 30
			restricted
			return BankEntity.PhoneNumber.Extension

		DerivedBPInternationalPrefix is a DerivedField
			type is Alpha 30
			restricted
			return BankEntity.PhoneNumber.InternationalPrefix

		DerivedBFSubscriberNumber is a DerivedField
			type is Alpha 30
			restricted
			return BankEntity.FaxNumber.SubscriberNumber

		DerivedBFExtension is a DerivedField
			type is Alpha 30
			restricted
			return BankEntity.FaxNumber.Extension

		DerivedBFInternationalPrefix is a DerivedField
			type is Alpha 30
			restricted
			return BankEntity.FaxNumber.InternationalPrefix

		DerivedPInternationalPrefix is a DerivedField
            type is Alpha size 30
            restricted
        	return VendorLocation.PhoneNumber.InternationalPrefix

        DerivedPSubscriberNumber is a DerivedField
            type is Alpha size 30
            restricted
        	return VendorLocation.PhoneNumber.SubscriberNumber

        DerivedPExtension is a DerivedField
            type is Alpha size 30
            restricted
        	return VendorLocation.PhoneNumber.Extension

        DerivedMInternationalPrefix is a DerivedField
            type is Alpha size 30
            restricted
        	return VendorLocation.MobileNumber.MobilePhoneNumber.InternationalPrefix

        DerivedMSubscriberNumber is a DerivedField
            type is Alpha size 30
            restricted
        	return VendorLocation.MobileNumber.MobilePhoneNumber.SubscriberNumber

        DerivedMExtension is a DerivedField
            type is Alpha size 30
            restricted
        	return VendorLocation.MobileNumber.MobilePhoneNumber.Extension

        DerivedFInternationalPrefix is a DerivedField
            type is Alpha size 30
            restricted
        	return VendorLocation.FaxNumber.InternationalPrefix

        DerivedFSubscriberNumber is a DerivedField
            type is Alpha size 30
            restricted
        	return VendorLocation.FaxNumber.SubscriberNumber

        DerivedFExtension is a DerivedField
            type is Alpha size 30
            restricted
        	return VendorLocation.FaxNumber.Extension

        DerivedVVName is a DerivedField
			type is Alpha 30
        	restricted
			return Vendor.VendorName

        DerivedTaxID is a DerivedField
			type is Alpha 30
        	restricted
			return Vendor.TaxID
			
		DerivedTaxRegistrationType is a DerivedField
			type is Alpha 30
			restricted
			if(DerivedIntegrationApplication = "Local.ly" and VendorCountry = "IN")
				if(TaxRegistrationType.Registered)
					return "Registered"
				else
				if(TaxRegistrationType.UnRegistered)
					return "UnRegistered"
				else
				if(TaxRegistrationType.SpecialEconomicZone)
					return "SpecialEconomicZone"
				else
				if(TaxRegistrationType.CompositeDealer)
					return "CompositeDealer"
				else
					return ""
			else
				return ""

		VendorLocationRemitToCode is a DerivedField
			type is Alpha 30
        	restricted
			return VendorLocation.RemitToCode

		DerivedPartyID is a DerivedField
			type is Alpha 30
        	restricted
			if(DerivedCleanDocumentID = "Y")
				return	Vendor using "%d"
			else
				return VendorGroup.FinanceEnterpriseGroup + DerivedDelimiter + VendorGroup + DerivedDelimiter + Vendor using "%d"

		DerivedDiveristyDescription is a DerivedField		
			type is Alpha 30
			return DiversityCode.Description

		DerivedNativeBODID is a DerivedField
			type is Alpha 100
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + DerivedAccountingEntityShipFrom + "::" + DerivedDocumentID + ":" + "?ShipFromPartyMaster&verb=Sync&TrackerID="+ LocalFSMInboundBODTracker

		DerivedNativeRemitToPartyBODID is a DerivedField
			type is Alpha 100
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + DerivedAccountingEntityRemitTo + "::" + DerivedDocumentID + ":" + "?RemitToPartyMaster&verb=Sync&TrackerID="+ LocalFSMInboundBODTracker

		DerivedNativeActionCode is a DerivedField
			type is Alpha 10
			if (action type.Create or ActionCode.Create)
				return "Add"
			else
			if (action type.Update or ActionCode.Update or action type.Delete or ActionCode.Delete)
				return "Replace"
			else
				return ""

		DerivedRemitToPartyBODStatus is a DerivedField
			type is Alpha 10
			if (action type.Delete or !Status.Active or ActionCode.Delete)
				return "Closed"
			else
				return "Open"

		DerivedShipFormPartyBODStatus is a DerivedField
			type is Alpha 10
			if (action type.Delete or ActionCode.Delete)
				return "Deleted"
			else
			if (Status.Active or Status.InactiveForPOAdditions)
				return "Open"
			else
			if (Status.Inactive)
				return "Closed"

		DerivedLastupdateBy is a DerivedField
        	type is Alpha size 60
            restricted
            return update stamp.actor

		DerivedBODUpdateTimeStamp is a DerivedField
            type is Alpha size 25
            restricted
            DerivedBODUpdateTimeStamp = update stamp.timestamp
            return DerivedBODUpdateTimeStamp

        DerivedBODFormattedUpdateTimeStamp is a DerivedField
			type is Alpha size 30
			restricted
			return DerivedBODUpdateTimeStamp[1:4] + "-" + DerivedBODUpdateTimeStamp[5:6] + "-" + DerivedBODUpdateTimeStamp[7:8] + "T" + DerivedBODUpdateTimeStamp[9:10] + ":" + DerivedBODUpdateTimeStamp[11:12] + ":" + DerivedBODUpdateTimeStamp[13:14] + "Z"

        DerivedNativeContactID is a DerivedField
            type is Alpha size 30
            restricted
            if (DerivedCleanDocumentID = "Y")
            	return "PRIME"
            else
        		return Vendor using "%d" + DerivedDelimiter + VendorLocation + DerivedDelimiter + "PRIME"


        DerivedPaymentMethodCode is a DerivedField
            type is Alpha size 30
            if (BankTransactionCode.BankTransactionType =  "C")
				return "Cash"
			else
			if (BankTransactionCode.BankTransactionType =  "D")
				return "BankDraft"
			else
			if (BankTransactionCode.BankTransactionType =  "B")
				return "ElectronicFundsTransfer"
			else
				return ""

		DerivedNativeBankAccountNumber is a DerivedField
            type is Alpha size 30
            restricted
            return Vendor.BankAccountNumber

        DerivedVendorTaxID is a DerivedField
            type is Alpha size 30
            restricted
            return Vendor.TaxID
            
        DerivedVendorCountry is a DerivedField
			type is Alpha size 30
			restricted
			if (CurrentAddressRelExists)
				return VendorCountry
			else
				return "US"

        DerivedContact is a DerivedField
			type is Alpha 10
			restricted
			return BankEntity.Contact

		DerivedLocationType is a DerivedField
			type is Alpha 20
			restricted
			if (LocationType =  "P")
				return "Purchasing"
			else
			if (LocationType =  "B")
				return "Others"
			else
			if (LocationType =  "R")
				return "Financial"

        DerivedCreateTimeStamp is a DerivedField
			type is Alpha 25
			restricted
			DerivedCreateTimeStamp = create stamp.timestamp
            return DerivedCreateTimeStamp

        DerivedBODFormattedCreateTimeStamp is a DerivedField
			type is Alpha size 30
			restricted
			return DerivedCreateTimeStamp[1:4] + "-" + DerivedCreateTimeStamp[5:6] + "-" + DerivedCreateTimeStamp[7:8] + "T" + DerivedCreateTimeStamp[9:10] + ":" + DerivedCreateTimeStamp[11:12] + ":" + DerivedCreateTimeStamp[13:14] + "Z"

        DerivedCreatedBy is a DerivedField
        	type is Alpha size 60
            restricted
            return create stamp.actor

        DerivedRemitToCodeDocumentID is a DerivedField
            type is Alpha size 30
            restricted
            if (RemitToCode entered)
        		return VendorGroup + DerivedDelimiter + Vendor using "%d" + DerivedDelimiter + RemitToCode
        	else
        		return ""

		NumberOfSupplierContacts is a ComputeField
			type is Numeric size 6
			restricted
			(instance count of SupplierSourceIdRel)

        DerivedVendorClass is a DerivedField
			type is Alpha 30
        	restricted
			return Vendor.VendorClass

		DerivedIntermediaryBankName is a DerivedField
			type is Alpha 30
        	restricted
        	return BankEntityRel.BankName

		ShipFromPartyMasterServiceXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			ShipFromPartyMasterServiceXMLBOD = template.IONSyncShipFromPartyMaster_VendorLocation_ST document for this instance

		RemitToLocationServiceXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			RemitToLocationServiceXMLBOD = template.IONSyncRemitToPartyMaster_VendorLocation_ST document for this instance

		ShipFromPartyMasterPropertiesXML is a DerivedField
			type is XMLDocument
			restricted
			ShipFromPartyMasterPropertiesXML = template.IONSyncShipFromPartyMaster_VendorLocation_Properties_ST document for this instance

		RemitToLocationPropertiesXML is a DerivedField
			type is XMLDocument
			restricted
			RemitToLocationPropertiesXML = template.IONSyncRemitToPartyMaster_VendorLocation_Properties_ST document for this instance


		DerivedAccountNumber is a DerivedField		
            type is Alpha size 3
			if (BankAccountNumberEntered)
				return "Yes"
			else
				return "No"
		DerivedSwiftID is a DerivedField
            type is Alpha size 3
			if (SwiftIDEntered)
				return "Yes"
			else
				return "No"
		DerivedIntermediaryBankAccount	is a DerivedField
			type is Alpha size 3
			if (IntermediaryBankAccountEntered)
				return "Yes"
			else
				return "No"
		DerivedIntermediarySwiftID is a DerivedField
			type is Alpha size 3
			if (IntermediarySwiftIDEntered)
				return "Yes"
			else
				return "No"	
		DerivedGiroNumber	is a DerivedField
			type is Alpha size 3
			if (GiroNumberEntered)
				return "Yes"
			else
				return "No"
		DerivedCreditCardNumber is a DerivedField
			type is Alpha size 3
			if (CreditCardNumberEntered)
				return "Yes"
			else
				return "No"
	Sets

		Set2
			indexed
			Instance Selection
				where (IsVloset2)
			Sort Order
				VendorGroup
				Vendor
				VendorLocation

		Set3
			indexed
			Instance Selection
				where (IsVloset3)
			Sort Order
				VendorGroup
				Vendor
				VendorLocation

		Set4
			indexed
			Instance Selection
				where (PrenotifiedIndicator)
			Sort Order
				VendorGroup
				Vendor
				VendorLocation

		Set5
			indexed
			Sort Order
				VendorGroup
				EDINumber
				Vendor
				VendorLocation

		ByVendorConversionResult
			Sort Order
				VendorConversionResult
				VendorGroup
				Vendor
				VendorLocation

		ByGlobalLocationNumber
			Sort Order
				GlobalLocationNumber
				VendorGroup
				Vendor
				VendorLocation

	Conditions
		IsValidForCrossBorderPayments
			restricted
			when ((BankEntity entered
			and    BankAccountNumber entered)
			or	   BankEntity entered
			or     BankAccountNumber entered)

		IsValidForIntermediaryCrossBorderPayments
			restricted
			when ((IntermediaryBankEntity entered
			and    IntermediaryBankAccount entered)
			or	   IntermediaryBankEntity entered
			or     IntermediaryBankAccount entered)
		RecordExists
			restricted
			when (VendorLocation exists)

		IsValidToPutOnHold		
			restricted
			when (!OnHold
			and  (LocationType.BothRemitToPurchaseFrom
			or    LocationType.RemitTo))

		ValidForSupplier
			restricted
			when (VendorGroup = actor.agent(SupplierSourceId).SupplierGroup
			and   Vendor      = actor.agent(SupplierSourceId).LocationVendor)

		BankAccountNumberEntered			
			restricted
			when (BankAccountNumber entered)

		SwiftIDEntered						
			restricted
			when (SwiftID entered)

		IntermediaryBankAccountEntered		
			restricted
			when (IntermediaryBankAccount entered)

		IntermediarySwiftIDEntered			
			restricted
			when (IntermediarySwiftID entered)

		GiroNumberEntered					
			restricted
			when (GiroNumber entered)

		CreditCardNumberEntered				
			restricted
			when (CreditCardNumber entered)

		DisplayCreatePurchaseFromLocationLink				
			restricted
			when (RecordExists
			and  !PurchaseFromLocationExists
			and  (LocationType.PurchaseFrom
			or    LocationType.BothRemitToPurchaseFrom))

		PurchaseFromLocationExists
			restricted
			when (PurchaseFromLocationRel exists)

		HasCurrentVendorComments
			restricted
			when (CurrentVendorCommentsRel exist)

		IsActive
			classic name is ACTIVE-LOC
			restricted
			when (not Status.Inactive)

		CurrentAddressRelExists
			classic name is ADDR-LOC
			restricted
			when (CurrentAddressRel exists)

		VendorLocationAddressesRelExists
			classic name is ADDRESS1
			restricted
			when (CurrentAddressRel exists)

		VendorCommentsRelExists
			classic name is COMMENT-EXIST
			restricted
			when (first VendorCommentsRel exists)

		VendorDiversityRelExists
			classic name is DIVERSE-EXISTS
			restricted
			when (first VendorDiversityRel exists)

		LocationOnHold
			restricted
			when (VendorClaimHoldCode entered)

		HasGlobalLocationNumber
			classic name is HAS-GLN-NBR
			restricted
			when (GlobalLocationNumber entered)

		PrenotifiedIndicator
			classic name is NO-PRENOTIFY
			restricted
			when (ACHPrenotification.NotPrenotified
			or    ACHPrenotification.Prenotified)

		IsPoAddActive
			restricted
			when (not Status.Inactive
			and   not Status.InactiveForPOAdditions)

		IsPoAddInactive
			classic name is PO-ADD-INACTIV
			restricted
			when (Status.InactiveForPOAdditions)

		VATRegistrationInformationEntered	
			restricted
			when (VATRegistrationCountry entered
			and	  VATRegistrationNumber entered)

		VendorCompanyDefaultRelExists
			classic name is VLOCPY-EXISTS
			restricted
			when (first VendorCompanyDefaultRel exists)

		IsVloset2
			classic name is VLOSET2
			restricted
			when (not LocationType.PurchaseFrom)

		IsVloset3
			classic name is VLOSET3
			restricted
			when (not LocationType.RemitTo)

		HasVertexConfig			
			restricted
			when (VertexConfigRel exists)

		VertexResultsExist
			restricted
			when (VertexTaxAreaIdResultsRel exist
			and  !VertexTaxAreaIdResultsRel.WebServiceError)

		VertexErrorExist
			restricted
			when (VertexWebserviceErrorRel exist)

		IsPurchaseFromLocation
			restricted
			when (LocationType.PurchaseFrom
			or    LocationType.BothRemitToPurchaseFrom)

		HasProcurementCard
			restricted
			when (ProcurementCardNumber entered)

		BypassRuleForTheseFiles
			restricted
			when  (parentcontext.name = "CashLedgerPayablesPayment"
			or     parentcontext.name = "CashRequirementsReport"
			or     parentcontext.name = "VendorComment"
			or     parentcontext.name = "PurchaseOrderEDIOutput"
			or     parentcontext.name = "ConsolidatedPaymentCycleUpdate"
			or 	   parentcontext.name = "VendorAttachment"
			or     parentcontext.name = "VendorBalance"
			or     BypassActiveVendorLocationEdit)

		VendorBankCode1Entered		
			restricted
			when (first VendorBankRel.VendorBankCode1 entered)

		VendorBankCode2Entered		
			restricted
			when (first VendorBankRel.VendorBankCode2 entered)

		VendorBankCode3Entered		
			restricted
			when (first VendorBankRel.VendorBankCode3 entered)

		VendorBankCode4Entered		
			restricted
			when (first VendorBankRel.VendorBankCode4 entered)

		VendorBankCode5Entered		
			restricted
			when (first VendorBankRel.VendorBankCode5 entered)

		VendorBankCode6Entered		
			restricted
			when (first VendorBankRel.VendorBankCode6 entered)

		VendorBankCode7Entered		
			restricted
			when (first VendorBankRel.VendorBankCode7 entered)

		VendorBankCode8Entered		
			restricted
			when (first VendorBankRel.VendorBankCode8 entered)

		VendorBankCode9Entered		
			restricted
			when (first VendorBankRel.VendorBankCode9 entered)

		VendorBankCode10Entered		
			restricted
			when (first VendorBankRel.VendorBankCode10 entered)

		VendorBankCode11Entered		
			restricted
			when (first VendorBankRel.VendorBankCode11 entered)

		VendorBankCode12Entered		
			restricted
			when (first VendorBankRel.VendorBankCode12 entered)

		VendorBankCode13Entered		
			restricted
			when (first VendorBankRel.VendorBankCode13 entered)

		VendorBankCode14Entered		
			restricted
			when (first VendorBankRel.VendorBankCode14 entered)

		VendorBankCode15Entered		
			restricted
			when (first VendorBankRel.VendorBankCode15 entered)

		VendorBankCode16Entered		
			restricted
			when (first VendorBankRel.VendorBankCode16 entered)

		VendorBankCode17Entered		
			restricted
			when (first VendorBankRel.VendorBankCode17 entered)

		VendorBankCode18Entered		
			restricted
			when (first VendorBankRel.VendorBankCode18 entered)

		VendorBankCode19Entered		
			restricted
			when (first VendorBankRel.VendorBankCode19 entered)

		VendorBankCode20Entered		
			restricted
			when (first VendorBankRel.VendorBankCode20 entered)

		AnyVendorBankCodeEntered	
			restricted
			when (VendorBankCode1Entered
			or    VendorBankCode2Entered
			or    VendorBankCode3Entered
			or    VendorBankCode4Entered
			or    VendorBankCode5Entered
			or    VendorBankCode6Entered
			or    VendorBankCode7Entered
			or    VendorBankCode8Entered
			or    VendorBankCode9Entered
			or    VendorBankCode10Entered
			or    VendorBankCode11Entered
			or    VendorBankCode12Entered
			or    VendorBankCode13Entered
			or    VendorBankCode14Entered
			or    VendorBankCode15Entered
			or    VendorBankCode16Entered
			or    VendorBankCode17Entered
			or    VendorBankCode18Entered
			or    VendorBankCode19Entered
			or    VendorBankCode20Entered)

		DisplayBankCodes		
			restricted
			when (VendorGroup.VendorBankCodeLabelsEntered
			or    VendorBankRel exists)

		CreateVendorBankRecord		
			restricted
			when (VendorBankRel !exists)

		MaintainVendorBankRecord		
			restricted
			when (VendorBankRel exists)

		VATRegistrationCountryRequired        
			restricted
			when (VATRegistrationNumber entered)

	Relations
		AnotherNormalRemitToLocationRel
			one-to-many relation to VendorLocation
			Field Mapping uses symbolic key
				related.VendorGroup    = VendorGroup
				related.Vendor		   = Vendor
			Instance Selection
				where (related.NormalRemitToLocation
				and    related.VendorLocation != VendorLocation)

		AnotherNormalPurchaseFromLocationRel
			one-to-many relation to VendorLocation
			Field Mapping uses symbolic key
				related.VendorGroup    = VendorGroup
				related.Vendor		   = Vendor
			Instance Selection
				where (related.NormalPurchaseFromLocation
				and    related.VendorLocation != VendorLocation)


		PurchaseFromLocationRel
			one-to-one relation to PurchaseFromLocation
			Field Mapping uses symbolic key
				related.VendorGroup				= VendorGroup
				related.Vendor					= Vendor
				related.PurchaseFromLocation	= VendorLocation


		PurchaseFromInvoicesRel
			one-to-many relation to PayablesInvoice
			Field Mapping uses ByVendorGroupVendor
				related.VendorGroup 			= VendorGroup
				related.Vendor 					= Vendor
			Instance Selection
				where (related.PurchaseFromLocation 	= VendorLocation)


		RemitToInvoicesRel
			one-to-many relation to PayablesInvoice
			Field Mapping uses ByVendorGroupVendor
				related.VendorGroup 			= VendorGroup
				related.Vendor 					= Vendor
			Instance Selection
				where (related.RemitToCode 				= VendorLocation)

		PayablesOnHoldRel		
			classic name is APHLDINV
			one-to-many relation to PayablesOnHold
			valid when (OnHold)
			delete cascades
			Field Mapping uses Set6
				related.HoldRecordType	= "L"
				related.VendorGroup		= Vendor.VendorGroup
				related.Company			= blank
				related.Vendor			= Vendor
				related.VendorLocation	= VendorLocation

		CompaniesRel
			one-to-many relation to PayablesCompany
			Field Mapping uses Set2
				related.VendorGroup = VendorGroup

		PurchaseOrdersRel
			one-to-many relation to PurchaseOrder
			Field Mapping uses Set2
				related.Company 			 = CompaniesRel.Company
				related.Vendor 				 = Vendor
				related.PurchaseFromLocation = VendorLocation

		ValidatedCertificationsRel
			one-to-many relation to VendorCertification
			Field Mapping uses symbolic key
				related.VendorGroup  	= VendorGroup
				related.Vendor			= Vendor
				related.VendorLocation	= VendorLocation
			Instance Selection
				where (related.Validated)

		RemitToCodeRel
			one-to-one relation to VendorLocation
			Field Mapping uses Set2
				related.VendorGroup    = VendorGroup
				related.Vendor		   = Vendor
				related.VendorLocation = RemitToCode

		TaxUsageCodesRel
			one-to-many relation to TaxUsageCode
			Field Mapping uses Set2
				related.TaxUsageCode = TaxUsageCode

		VendorClassRel
			one-to-one relation to VendorClass
			Field Mapping uses symbolic key
				related.VendorGroup = VendorGroup
				related.VendorClass = Vendor.VendorClass

		CashPaymentFormatRel
			one-to-one relation to CashPaymentFormat
			Field Mapping uses symbolic key
				related.CashManagementGroup 		 		   = LocalCashCode.CashManagementGroup	
				related.CashCode							   = LocalCashCode
				related.CashPaymentFormat.BankTransactionCode  = LocalBankTransactionCode
				related.CashPaymentFormat.PayablesProcessGroup = LocalProcessGroup

		ProcessGroupBlankRel
			one-to-one relation to CashPaymentFormat
			Field Mapping uses symbolic key
				related.CashManagementGroup 		 		   = LocalCashCode.CashManagementGroup	
				related.CashCode							   = LocalCashCode
				related.CashPaymentFormat.BankTransactionCode  = LocalBankTransactionCode
				related.CashPaymentFormat.PayablesProcessGroup = blank

		ProcessGroupNoneRel
			one-to-one relation to CashPaymentFormat
			Field Mapping uses symbolic key
				related.CashManagementGroup 		           = LocalCashCode.CashManagementGroup	
				related.CashCode							   = LocalCashCode
				related.CashPaymentFormat.BankTransactionCode  = LocalBankTransactionCode
				related.CashPaymentFormat.PayablesProcessGroup = "NONE"

		ProcurementCardsRel
			one-to-many relation to ProcurementCardRequest
			Field Mapping uses Set2
				related.ProcurementCardNumber = ProcurementCardNumber

		VendorLocationCommentsRel
			one-to-many relation to VendorComment
			Field Mapping uses symbolic key
				related.VendorGroup    = VendorGroup
				related.Vendor         = Vendor
				related.VendorLocation = VendorLocation

		CurrentVendorCommentsRel
			one-to-many relation using VendorLocationCommentsRel
			Instance Selection
				where (related.IsCurrentComments)

		VendorLocationAttachmentsRel
			one-to-many relation to VendorAttachment
			Field Mapping uses symbolic key
				related.VendorGroup		= VendorGroup
				related.Vendor			= Vendor
				related.VendorLocation	= VendorLocation

		VendorAddressesRel
			classic name is ADDRESS1
			one-to-many relation to VendorAddress
			Field Mapping uses symbolic key
				related.VendorGroup		= VendorGroup
				related.Vendor			= Vendor
				related.VendorLocation	= VendorLocation

		CurrentAddressRel
			classic name is ADDRESS1
			one-to-one relation to VendorAddress
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroup
				related.Vendor							= Vendor
				related.VendorLocation					= VendorLocation
				related.VendorContact.VendorContactCode	= blank
				related.VendorContact.ContactLevel		= blank

		RemitToPrimaryAddressRel
			classic name is ADDRESS1
			one-to-one relation to VendorAddress
			Field Mapping uses symbolic key
				related.VendorGroup                     = VendorGroup
				related.Vendor                          = Vendor
				related.VendorLocation                  = VendorLocation
				related.VendorContact.VendorContactCode = "PRIME"
				related.VendorContact.ContactLevel      = blank

		VendorCommentsRel
			classic name is APCOMMENTS
			one-to-many relation to Apcomments
			delete cascades
			Field Mapping uses Set2
				related.VendorCommentType = "V"
				related.VendorGroup       = VendorGroup
				related.Vendor            = Vendor
				related.VendorLocation    = VendorLocation

		VendorContactRel
			classic name is APCONTACTS
			one-to-many relation to VendorContact
			Field Mapping uses symbolic key
				related.VendorGroup    = VendorGroup
				related.Vendor         = Vendor
				related.VendorLocation = VendorLocation

		VendorCompanyDefaultRel
			classic name is APCPYVND
			one-to-many relation to VendorCompanyDefault
			Field Mapping uses symbolic key
				related.VendorGroup    = VendorGroup
				related.Vendor         = Vendor
				related.VendorLocation = VendorLocation

		VendorLocationBalanceRel
			classic name is APLOCBAL
			one-to-many relation to VendorBalance
			delete cascades
			Field Mapping uses symbolic key
				related.VendorGroup    = VendorGroup
				related.Vendor         = Vendor
				related.VendorLocation = VendorLocation

		VendorAddressRel
			classic name is APVENADDR
			one-to-many relation to VendorAddress
			Field Mapping uses symbolic key
				related.VendorGroup    = VendorGroup
				related.Vendor         = Vendor
				related.VendorLocation = VendorLocation
			Instance Selection
				where (related.VendorContact.VendorContactCode not entered
				and   related.VendorContact.ContactLevel not entered)

		VendorCertificationRel
			classic name is APVENCERT
			one-to-many relation to VendorCertification
			Field Mapping uses symbolic key
				related.VendorGroup    = VendorGroup
				related.Vendor         = Vendor
				related.VendorLocation = VendorLocation

		VendorDiversityCodeRel
			one-to-many relation to VendorDiversity
			Field Mapping uses ByDateDescending
				related.VendorGroup 	= VendorGroup
				related.Vendor      	= Vendor
				related.VendorLocation  = VendorLocation
				related.DiversityCode	= DiversityCode
			Instance Selection
				where (related.DiversityExpirationDate	>= current corporate date)

		VendorDiversityRel
			classic name is APVENDIV
			one-to-many relation to VendorDiversity
			Field Mapping uses ByDateDescending
				related.VendorGroup    = VendorGroup
				related.Vendor         = Vendor
				related.VendorLocation = VendorLocation

		VendorBalanceRel
			classic name is APVENBAL
			one-to-many relation to VendorBalance
			delete cascades
			Field Mapping uses Set3
				related.VendorGroup     = VendorGroup
				related.Vendor          = Vendor
				related.BalanceCurrency = Vendor.BalanceCurrency
				related.VendorLocation  = VendorLocation

		VendorGroupRel
			classic name is APVENGROUP
			one-to-one relation to VendorGroup
			Field Mapping uses symbolic key
				related.VendorGroup = Vendor.VendorGroup

		VendorBankRel		
			one-to-many relation to VendorBank
			Field Mapping uses symbolic key
				related.VendorGroup			= VendorGroup
				related.Vendor				= Vendor
				related.VendorLocation		= VendorLocation

		GlobalLocationNumberRel
			classic name is GLNLOC
			one-to-one relation to GlobalLocationNumber
			valid when (HasGlobalLocationNumber)
			Field Mapping uses symbolic key
				related.ItemGroup            = VendorGroup
				related.GlobalLocationNumber = GlobalLocationNumber

		PrimeVendorLocationContactRel
			one-to-one relation to VendorContact
			Field Mapping uses symbolic key
				related.VendorGroup                     = VendorGroup
				related.Vendor                          = Vendor
				related.VendorLocation                  = VendorLocation
				related.VendorContact.VendorContactCode = "PRIME"
				related.VendorContact.ContactLevel      = blank

		PayGroupRel
			one-to-one relation to PayGroup
			Field Mapping uses symbolic key
				related.VendorGroup	= VendorGroup
				related.PayGroup	= VendorGroup

  		VertexConfigRel
			one-to-one relation to VertexConfig
			Field Mapping uses symbolic key
				related.VertexConfig 					= VendorGroup.BusinessGroup.FinanceEnterpriseGroup

		VertexLookupResultsRel
			one-to-many relation to VertexLookupResults
			Field Mapping uses ByRelatedObjectReference
				related.VertexConfig					= VendorGroup.BusinessGroup.FinanceEnterpriseGroup
			Instance Selection
				where (related.RelatedObjectReference	= reference to this instance)

  		VertexWebserviceErrorRel
			one-to-many relation to VertexTaxAreaIdResults
			Field Mapping uses ByRelatedObjectReference
				related.VertexConfig									= VendorGroup.FinanceEnterpriseGroup
			Instance Selection
				where (related.RelatedObjectReference					= reference to this instance
				and    related.WebServiceError							= true)

		VertexTaxAreaIdResultsRel
			one-to-many relation to VertexTaxAreaIdResults
			Field Mapping uses ByRelatedObjectReference
				related.VertexConfig									= VendorGroup.FinanceEnterpriseGroup
			Instance Selection
				where (related.RelatedObjectReference					= reference to this instance)


  		UpdatePostalAddressRecordsRel
			one-to-many relation to VertexTaxAreaIdPostalAddress
			Field Mapping uses ByTaxAreaId	
				related.VertexConfig										= VendorGroup.FinanceEnterpriseGroup
				related.VertexTaxAreaIdPostalAddress.LookupKey  			= LocalLookupKey


			Instance Selection

				where  (related.VertexTaxAreaIdPostalAddress.ResponseBusclassKey 	= LocalResponseBusclassKey)


   		SelectedTaxAreaIdRecordsRel
			one-to-many relation to VertexTaxAreaIdResults
			Field Mapping uses ByRelatedObjectReference
				related.VertexConfig									= VendorGroup.FinanceEnterpriseGroup
				related.RelatedObjectReference							= reference to this instance
			Instance Selection
				where  (related.Selected 								= true)

   		SelectedPostalAddressRecordsRel
			one-to-many relation to VertexTaxAreaIdPostalAddress
			Field Mapping uses  ByTaxAreaId	
				related.VertexConfig									= VendorGroup.FinanceEnterpriseGroup
				related.VertexTaxAreaIdPostalAddress.LookupKey  		= LocalLookupKey
				related.VertexTaxAreaIdPostalAddress.ResponseBusclassKey 	= LocalResponseBusclassKey

			Instance Selection
				where (related.Selected 								= true)

		VendorMappingTableInterfacesRel
			one-to-many relation to VendorMappingTableInterface
			Field Mapping uses ByVendor
				related.VendorGroup									= VendorGroup
				related.Vendor										= Vendor
				related.VendorMappingTableInterface.VendorLocation	= VendorLocation



        FSMBODConfigurationParameterRel
    		one-to-one relation to FSMBODConfigurationParameter
    		Field Mapping uses symbolic key
    			related.FSMBODConfigurationParameter	= LocalConfigurationParameter

        BankEntityRel
            one-to-many relation to BankEntity
            Field Mapping uses symbolic key
            	related.CashManagementGroup							= VendorGroup.FinanceEnterpriseGroup
            	related.BankEntity									= IntermediaryBankEntity

        FSMShipFromPartyBODConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "ShipFromPartyMaster"
             	related.FSMBODConfiguration.Direction 	= 1

        FSMRemitToPartyBODConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "RemitToPartyMaster"
             	related.FSMBODConfiguration.Direction 	= 1


		BODGeneralLedgerCompanyRel
			one-to-many relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
			Instance Selection
				where (related.BusinessGroup = VendorGroup)

		VendorWithholdingDefaultRel
			one-to-many relation to VendorWithholdingDefault
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroup
				related.Vendor							= Vendor
				related.VendorLocation					= VendorLocation
				
		FSMCleanDocIDCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
				related.FSMBODCrossReference.SourceField 		= "CSFGLC"
				related.FSMBODCrossReference.DestinationField 	= "DESTAE"
			Instance Selection
				where (related.SourceValue	= LocalAccountingentityCompany)
		
		FSMCleanDocIDGLCCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
				related.FSMBODCrossReference.SourceField 		= "CSFGLC"
				related.FSMBODCrossReference.DestinationField 	= "DESTAE"
				
		FSMCleanDocIDGeneralLedgerCompanyRel
            one-to-one relation to GeneralLedgerCompany
            required
            Field Mapping uses symbolic key
                related.Company = LocalGeneralLedgerCompany
                
		FSMInboundBODTrackerRel
            one-to-one relation to FSMInboundBODTracker
            Field Mapping uses symbolic key
                related.FSMInboundBODTracker	= LocalFSMInboundBODTracker
                
		SupplierSourceIdRel
			one-to-many relation to SupplierSourceId
			Field Mapping uses symbolic key
				related.SupplierGroup           = VendorGroup
				related.Supplier                = Vendor.first SupplierRel.Supplier
			Instance Selection	
				where (related.VendorLocation	= VendorLocation)

		PayablesOnHoldPurgeRel
			one-to-many relation to PayablesOnHold
			Field Mapping uses Set6
				related.HoldRecordType	= "L"
				related.VendorGroup		= Vendor.VendorGroup
				related.Company			= blank
				related.Vendor			= Vendor
				related.VendorLocation	= VendorLocation

	Field Rules

		VATRegistrationNumber
			if (TaxRegistrationType.Registered)
				required
					"MustEnterVATRegistrationNumberWhenTaxRegistrationTypeIsRegistered"



		Sepa
			force default to CashCode.Sepa

		IntermediarySepa
			force default to CashCode.Sepa

		Vendor
			constraint (not Vendor.VendorStatus.Inactive)
				"CannotAddOrChangeALocation;VendorIsInactive"              

			if (ValidateCertificationDate)
				constraint (VendorCertification set exists)
					"NoCertificationCodeAssignedToVendor<Vendor>Loc<VendorLocation>"  

				constraint (ValidatedCertificationsRel exist)
					"MustHaveAtLeastOneValidatedCertifcationCode"    

		VendorName
			default to Vendor.VendorName

		NormalRemitToLocation
			constraint (AnotherNormalRemitToLocationRel not exists)
				"CannotChooseNormalRemitToLocation;VendorLocation<first AnotherNormalRemitToLocationRel.VendorLocation>AlreadyDefinedAsNormalRemitToLocationForTheVendor"			

			if (NormalRemitToLocation)
				constraint (not LocationType.PurchaseFrom)
					"PurchaseFromLocationCannotBeANormalRemitToLocation"            

		NormalPurchaseFromLocation
			constraint (AnotherNormalPurchaseFromLocationRel not exists)
				"CannotChooseNormalPurchaseFromLocation;VendorLocation<first AnotherNormalPurchaseFromLocationRel.VendorLocation>AlreadyDefinedAsNormalPurchaseFromLocationForTheVendor"			

			if (NormalPurchaseFromLocation)
				constraint (not LocationType.RemitTo)
					"NormalPurchaseFromCannotBeARemitToLocation"               

		Status
			default to Status.Active
			if (NormalRemitToLocation)
				constraint (not Status.Inactive)
					"NormalRemitToLocationMustBeActive"                      

			if (NormalPurchaseFromLocation)
				constraint (not Status.InactiveForPOAdditions
				and         not Status.Inactive)						
					"NormalPurchaseFromLocationMustBeActive"                  

		RemitToCode
			if (LocationType.RemitTo)
				cannot be entered						
					"RemitPaymentToNotValidForRemitToLocationType"



		TaxCode
			if (LocationType.RemitTo)
				constraint (TaxCode not entered)
					"CannotAssignTaxCodeToARemitToLocation"                

		OnHold		
			constraint (!LocationType.PurchaseFrom)
				"CannotPutPurchaseFromTypeOnHold"






		InvoiceGroup
			if (LocationType.PurchaseFrom)
				constraint (InvoiceGroup not entered)
					"CannotAssignInvoiceGroupToAPurchaseFromLocation"        




		SaveBankTransactionCode
			default to BankTransactionCode

		SaveCashCode
			default to CashCode

		LocalProcessGroup
			default to Vendor.PayablesProcessGroup
			default to "NONE"

		CashCode
			if (LocationType.PurchaseFrom)
				constraint (CashCode not entered)
					"CannotAssignCashCodeToAPurchaseFromLocation"            



			LocalCashCode = CashCode

			if (SaveCashCode entered)		
				CashCode = SaveCashCode

		BankTransactionCode
			if (LocationType.PurchaseFrom)
				constraint (BankTransactionCode not entered)
					"CannotAssignPaymentCodeToAPurchaseFromLocation"         



			LocalBankTransactionCode = BankTransactionCode

			constraint (BankTransactionCode.BankTransactionType.CashPayment
			or          BankTransactionCode.BankTransactionType.BillOfExchangePayment)
				"MustBeCashOrBillOfExchangePayment"                        

			if (SaveCashCode entered
			and not BankTransactionCode.PaymentOutputOption.NoOutput
			and not BankTransactionCode.BankTransactionType.BillOfExchangePayment)
				if (CashPaymentFormatRel not exists)
					if (CashPaymentFormatRel.CashPaymentFormat.PayablesProcessGroup not entered)
						constraint (ProcessGroupNoneRel exists)
							"CashPaymentFormatDoesNotExist"            
					if (CashPaymentFormatRel.CashPaymentFormat.PayablesProcessGroup = "NONE")
						constraint (ProcessGroupBlankRel exists)
							"CashPaymentFormatDoesNotExist"            

			if (SaveBankTransactionCode entered)
				BankTransactionCode = SaveBankTransactionCode

			if (BankTransactionCode.PaymentOutputOption.ElectronicFile
			or	BankTransactionCode.PaymentOutputOption.Swift
			or  BankTransactionCode.PaymentOutputOption.WireTransfer)
				if (Vendor.BankEntity 			not entered
				or  Vendor.BankAccountNumber 	not entered)
					constraint (BankEntity 			entered
					and			BankAccountNumber 	entered)
						"BankEntityAndBankAccountNumberRequiredForElectronicPayments"

		SeparatePayment
			if (LocationType.PurchaseFrom)
				constraint (not SeparatePayment)
					"CannotSetSeparatePaymentForPurchaseFromLocation"     

		VATRegistrationCountry
			if (LocationType.RemitTo)
				constraint (VATRegistrationCountry not entered)
					"V\A\T_\RegistrationCountryValidOnlyOnLocationType_\POr_\B"      

			if (VATRegistrationNumber entered)
				required
					"V\A\T_\RegistrationCountryRequiredIf_\V\A\T_\RegistrationNumberIsEntered"      

		TaxUsageCode
			constraint (TaxCode entered)
				"TaxUsageCodeNotValidIfNoTaxCodeIsEntered"         

			if (LocationType.RemitTo)
				constraint (TaxUsageCode not entered)
					"Tax_\Usage_\CodeAllowedOnLocationType_\POr_\BOnly"       
			else
				constraint (TaxUsageCodesRel exist)
					"TaxUsageCodeNotDefined"        

		DiversityCode
			constraint (DiversityCode.Active)
				"Diversity_\CodeIsInactive"                                
			if (Vendor.ValidateDiversityDates)		
				constraint (VendorDiversityCodeRel exists)
					"DiversityCode<DiversityCode>IsNotValidForLocation<VendorName>"

		DiscountCode
			constraint (DiscountCode.Active)
				"AP10.155"

		LocationType
			initial value is LocationType.BothRemitToPurchaseFrom	
			default to LocationType.BothRemitToPurchaseFrom			

			if (NormalRemitToLocation
			and NormalPurchaseFromLocation)
				constraint (LocationType.BothRemitToPurchaseFrom)
					"LocationTypeMustBeBoth"                                


			if (LocationType.RemitTo)
				if (old LocationType.PurchaseFrom
				or  old LocationType.BothRemitToPurchaseFrom)
					constraint (PurchaseFromInvoicesRel not exist)
						"CannotChangeLocationType;\Purchase\FromLocationInvoicesExists"         


			if (LocationType.PurchaseFrom)
				if (old LocationType.RemitTo
				or  old LocationType.BothRemitToPurchaseFrom)
					constraint (RemitToInvoicesRel not exist)
						"CannotChangeLocationType;\Remit_\ToLocationInvoicesExists"              

		InvoiceCurrency
			default to Vendor.BalanceCurrency

			if (Vendor.BalanceCurrency entered)
				constraint (Vendor.BalanceCurrency = InvoiceCurrency)
					"InvoiceCurrency<InvoiceCurrency>MustEqualVendorBalanceCurrency<Vendor.BalanceCurrency>"                  

		VendorClaimHoldCode
			constraint (VendorClaimHoldCode.HoldOnInvoice entered)
				"HoldCodeDoesNotExistOrIsNotValidForInvoices"              

			constraint (VendorClaimType.Chargeback)
				"CannotEnterVendorClaims_\C\BHoldIfNotDoingChargebacks"    

		ProcurementCardNumber
			if (!UseProcurementCard
			and HasProcurementCard)
				initialize ProcurementCardNumber
				initialize MaskedProcurementCard
				MaskedProcurementCard    = DerivedMaskedProcurementCard
			else
				constraint (UseProcurementCard)
					"CannotEnterProcurementCardNumber;VendorDoesNotUseProcurementCards"    

			if (ProcurementCardNumber changed)								
				MaskedProcurementCard	= DerivedMaskedProcurementCard













		RevalueCurrency
			initial value is true


		BankEntity
			if (BankAccountValidationType.NationalClearingSystem)
				required
					"RequiredWith_\National_\Clearing_\System"	   

			if (BankTransactionCode.PaymentOutputOption.ElectronicFile
			or	BankTransactionCode.PaymentOutputOption.Swift
			or  BankTransactionCode.PaymentOutputOption.WireTransfer)
				if (Vendor.BankEntity 			not entered
				or  Vendor.BankAccountNumber 	not entered)
					constraint (BankEntity 			entered
					and			BankAccountNumber 	entered)
						"BankEntityAndBankAccountNumberRequiredForElectronicPayments"

		BankAccountNumber
			if (BankAccountValidationType entered					
			and not BankAccountValidationType.Check)
				required
					"RequiredWithSelected_\Validation_\Type"	         

			if (BankAccountType entered)
				required
					"RequiredWhenUsing_\Account_\Type"                

			if (GlobalBankAccountType entered)						  
				required
					"RequiredWhenUsing_\Global_\Account_\Type"
					
			if (ACHPrenotification = "P"
			or  ACHPrenotification = "A")
				required
					"RequiredWhen_\A\C\H_\PrenotificationIsEntered"    

			if (BankTransactionCode.PaymentOutputOption.ElectronicFile
			or	BankTransactionCode.PaymentOutputOption.Swift
			or  BankTransactionCode.PaymentOutputOption.WireTransfer)
				if (Vendor.BankEntity 			not entered
				or  Vendor.BankAccountNumber 	not entered)
					constraint (BankEntity 			entered
					and			BankAccountNumber 	entered)
						"BankEntityAndBankAccountNumberRequiredForElectronicPayments"


			initialize ValidateBankAccountNumber
			ValidateBankAccountNumber.BankAccountValidationType = BankAccountValidationType
			ValidateBankAccountNumber.BankAccountNumber 		= BankAccountNumber
			constraint (ValidateBankAccountNumber.IsValidBankAccount)
				"<ValidateBankAccountNumber.ErrorMessage>"

		RIBKey
			initialize VerifyRIBKey
			VerifyRIBKey.BankEntity        = BankEntity
			VerifyRIBKey.BankAccountNumber = BankAccountNumber
			VerifyRIBKey.RIBKey            = RIBKey
			constraint (VerifyRIBKey.PerformVerifyRIBKey)
				"R\I\B_\KeyInvalid,_\Vendor_\BankAnd_\AccountNumberNumberDoNotEqualCalculatedKey"  

		BankAccountType
			if (BankAccountNumber entered)
				default to "C"

		ACHPrenotification
			if (BankAccountNumber entered)
				default to "N"

		IntermediaryBankEntity
			if (IntermediaryBankAccountValidationType.NationalClearingSystem)
				required
					"RequiredWith_\National_\Clearing_\System"	   

		IntermediaryBankAccount
			if (IntermediaryBankAccountValidationType entered			
			and not IntermediaryBankAccountValidationType.Check)
				required
					"RequiredWithSelected_\Validation_\Type"	         

			if (IntermediaryPrenotification = "P"
			or  IntermediaryPrenotification = "A")
				required
					"RequiredWhen_\A\C\H_\PrenotificationIsEntered"        


			initialize ValidateBankAccountNumber
			ValidateBankAccountNumber.BankAccountValidationType = IntermediaryBankAccountValidationType
			ValidateBankAccountNumber.BankAccountNumber 		= IntermediaryBankAccount
			constraint (ValidateBankAccountNumber.IsValidBankAccount)
				"<ValidateBankAccountNumber.ErrorMessage>"

		IntermediaryPrenotification			
			if (IntermediaryBankAccount entered)
				default to "N"

		IntermediaryRIBKey
			initialize VerifyRIBKey
			VerifyRIBKey.BankEntity        = IntermediaryBankEntity
			VerifyRIBKey.BankAccountNumber = IntermediaryBankAccount
			VerifyRIBKey.RIBKey            = IntermediaryRIBKey
			constraint (VerifyRIBKey.PerformVerifyRIBKey)
				"Intermediary_R\I\B_\KeyInvalid,_\Intermediary_\BankAnd_\AccountNumberDoNotEqualCalculatedKey"


		IntermediaryBankAccountValidationType
			if (CashCode entered
			and CashCode.Sepa)
				default to CashCode.BankAccountValidationType.IbanAndBIC



			if (IntermediaryBankAccountValidationType.BicCode
			or  IntermediaryBankAccountValidationType.IbanAndBIC)
				IntermediaryCrossBorderIdentifier = IntermediaryCrossBorderIdentifier.Swift
				constraint (IntermediarySwiftID entered)
					"IntermediaryBICNumberRequiredForBICCodeOrIBANAndBICValidationTypes"

		SwiftID
			constraint (BankEntity entered
			or			BankAccountNumber entered)
				"Cross_\BorderValidOnlyIf_\Bank_\IdentificationOr_\Account_\NumberEntered"     



			if (IsValidForCrossBorderPayments
			and BankAccountValidationType.IbanAndBIC)
				required
					"B\I\C_\NumberAnd_\I\B\A\NRequiredWhenVendorBankIdentification_=_\B\I\CAnd_\I\B\A\N"

		PaymentForm
			if (SwiftID entered
			and BankAccountValidationType.Check)
				force default to "S9"
			constraint (PaymentForm.Active)
				"PaymentFormIsInactive"

		IntermediarySwiftID
			constraint (IntermediaryBankEntity entered
			or			IntermediaryBankAccount entered)
				"Cross_\BorderValidOnlyIf_\Bank_\IdentificationOr_\Account_\NumberEntered"     



			if (IsValidForIntermediaryCrossBorderPayments
			and IntermediaryBankAccountValidationType.IbanAndBIC)
				required
					"B\I\CNumber_&_\I\B\A\NRequiredWhenVendorBankIdentification_=_\B\I\C\_&_\I\B\A\N"

		IntermediaryPaymentForm
			if (IntermediarySwiftID entered
			and IntermediaryBankAccountValidationType.Check)
				force default to "S9"
			constraint (IntermediaryPaymentForm.Active)
				"PaymentFormIsInactive"

		ChargeCode
			constraint (ChargeCode.Active)
				"ChargeCodeIsInactive"

		IntermediaryChargeCode
			constraint (IntermediaryChargeCode.Active)
				"ChargeCodeIsInactive"

		PaymentCategoryCode
			constraint (PaymentCategoryCode.Active)
				"PaymentCategoryIsInactive"

		IntermediaryPaymentCategory
			constraint (IntermediaryPaymentCategory.Active)
				"PaymentCategoryIsInactive"

		InvoiceReference
			if (ERSCapable)
				constraint (InvoiceReference entered)
					"ReferenceTypeRequiredWhen_\E\R\SIsBeingUsed"             

		BankAccountValidationType
			if (CashCode entered
			and CashCode.Sepa)
				default to CashCode.BankAccountValidationType.IbanAndBIC
			default to CashCode.BankAccountValidationType



			if (BankAccountValidationType.BicCode
			or  BankAccountValidationType.IbanAndBIC)
				CrossBorderIdentifier = CrossBorderIdentifier.Swift
				constraint (SwiftID entered)
					"VendorBICNumberRequiredForBICCodeOrIBANAndBICValidationTypes"

		Logo
			if (Logo changed
			or	VendorLocation not exists)
				MaxLogoSize = VendorGroup.LogoImageMaximumSizeBytes

	Attach Rules
		if (not BypassRuleForTheseFiles)
		    if (parentcontext.name = "PurchaseOrder")
				constraint (Status.Active)
					"Vendor_\Location<DerivedLocationAndVendorIDName>IsNotActive"
			else
				constraint (!Status.Inactive)
					"Vendor_\Location<DerivedLocationAndVendorIDName>IsNotActive"

	Rule Blocks

		CreateRelatedRecords
			invoke Create CurrentAddressRel
				invoked.PostalAddress	= VendorAddress
				invoked.effective date	= AddressEffectiveDate

			if (!TransientCreateFromCopy)		
				invoke Create PrimeVendorLocationContactRel
					invoked.ContactName					= ContactName
					invoked.PhoneNumber					= PhoneNumber
					invoked.MobileNumber				= MobileNumber
					invoked.FaxNumber					= FaxNumber
					invoked.EmailAddress				= EmailAddress
					invoked.TwitterID					= TwitterID
					invoked.SocialNetworkID2			= SocialNetworkID2
					invoked.SocialNetworkID3			= SocialNetworkID3
					invoked.SocialNetworkID4			= SocialNetworkID4
					invoked.SocialNetworkID5			= SocialNetworkID5
					invoked.VendorAddress				= VendorAddress
					invoked.AddressEffectiveDate		= AddressEffectiveDate

			if (TransientAttachment entered)
				invoke Create VendorLocationAttachmentsRel
					invoked.VendorGroup	= VendorGroup
					invoked.Vendor		= Vendor
					invoked.Description	= TransientAttachmentDescription
					invoked.Attachment	= TransientAttachment
			
			if (CommentText entered or Title entered)
				invoke Create VendorComment
					invoked.VendorGroup     = VendorGroup
					invoked.Vendor          = Vendor
					invoked.VendorLocation	= VendorLocation
					invoked.Company			= TransPayablesCompany	
					invoked.CommentText     = CommentText
					invoked.PrintCode       = PrintCode
					invoked.Title           = Title
					invoked.DateRange.Begin = DateRange.Begin
					invoked.DateRange.End   = DateRange.End

		UpdatePrimaryContact
			invoke FastUpdate PrimeVendorLocationContactRel
				invoked.ContactName					= ContactName
				invoked.PhoneNumber					= PhoneNumber
				invoked.MobileNumber				= MobileNumber
				invoked.FaxNumber					= FaxNumber
				invoked.EmailAddress				= EmailAddress
				invoked.TwitterID					= TwitterID
				invoked.SocialNetworkID2			= SocialNetworkID2
				invoked.SocialNetworkID3			= SocialNetworkID3
				invoked.SocialNetworkID4			= SocialNetworkID4
				invoked.SocialNetworkID5			= SocialNetworkID5
				invoked.VendorAddress				= VendorAddress
				invoked.AddressEffectiveDate		= AddressEffectiveDate

		InitiateProcess
			if (BankEntity changed
			and BankEntity.PostalAddress entered)
				invoke InitiateCashLedgerProcess CashCode
					invoked.CashLedgerService	= CashLedgerService.GenCBBankEnt
					invoked.Criterion1			= BankEntity
					invoked.ActionCode			= ActionCode
					invoked.ResumeOnError		= true
			if (IntermediaryBankEntity changed
			and IntermediaryBankEntity.PostalAddress entered)
				invoke InitiateCashLedgerProcess CashCode
					invoked.CashLedgerService 	= CashLedgerService.GenCBBankEnt
					invoked.Criterion1			= IntermediaryBankEntity
					invoked.ActionCode			= ActionCode
					invoked.ResumeOnError		= true

		DeleteVertexResultsFiles
			invoke Delete VertexTaxAreaIdResultsRel
			invoke Delete UpdatePostalAddressRecordsRel
			invoke Delete VertexLookupResultsRel

		ShipFromPartyMasterRules
			trigger PayablesService.VendorLocationService PA service
				resume on error
				title is "<LocalTitle>"
				Criteria
					VendorGroup.FinanceEnterpriseGroup
				Variables
					ActionCode
					include persistent fields from VendorLocation
					include persistent fields from Vendor
					include persistent fields from CurrentAddressRel
					include persistent fields from BankEntity
					BankTransactionCode.BankTransactionType
						variable name is BankTransactionType
					VendorGroup.FinanceEnterpriseGroup
						variable name is FinanceEnterpriseGroup
		RemitToPartyMasterRules
			trigger PayablesService.RemitToLocationService PA service
				resume on error
				title is "<LocalTitle>"
				Criteria
					VendorGroup.FinanceEnterpriseGroup
				Variables
					ActionCode
					include persistent fields from VendorLocation
					include persistent fields from Vendor
					include persistent fields from CurrentAddressRel
					include persistent fields from BankEntity
					BankTransactionCode.BankTransactionType
						variable name is BankTransactionType
					VendorGroup.FinanceEnterpriseGroup
						variable name is FinanceEnterpriseGroup

		AddCreateRequestVendorLocation		
			invoked.VendorGroup								= VendorGroup
			invoked.Vendor									= Vendor
			invoked.VendorLocation							= VendorLocation
			invoked.VendorName								= VendorName
			invoked.LocationType                          	= LocationType
			invoked.VendorAccount                         	= VendorAccount
			invoked.VATRegistrationCountry                	= VATRegistrationCountry
			invoked.VATRegistrationNumber                 	= VATRegistrationNumber
			invoked.InvoiceCurrency                         = InvoiceCurrency
			invoked.RevalueCurrency                         = RevalueCurrency
			invoked.NormalRemitToLocation                   = NormalRemitToLocation
			invoked.NormalPurchaseFromLocation            	= NormalPurchaseFromLocation
			invoked.GlobalLocationNumber                  	= GlobalLocationNumber
			invoked.UseVendorAddress						= UseVendorAddress	
			invoked.CurrentVendorAddress					= CurrentVendorAddress	
			invoked.VendorAddress                         	= VendorAddress
			invoked.ContactName                           	= ContactName
			invoked.PhoneNumber                             = PhoneNumber
			invoked.MobileNumber                            = MobileNumber
			invoked.FaxNumber                               = FaxNumber
			invoked.EmailAddress                          	= EmailAddress
			invoked.TwitterID                             	= TwitterID
			invoked.SocialNetworkID2                      	= SocialNetworkID2
			invoked.SocialNetworkID3                      	= SocialNetworkID3
			invoked.SocialNetworkID4                        = SocialNetworkID4
			invoked.SocialNetworkID5                        = SocialNetworkID5
			invoked.BankEntity                            	= BankEntity
			invoked.BankAccountNumber                     	= BankAccountNumber
			invoked.ACHPrenotification                    	= ACHPrenotification
			invoked.BankCurrency                            = BankCurrency
			invoked.BankAccountValidationType               = BankAccountValidationType
			invoked.RIBKey                                  = RIBKey
			invoked.BankAccountType                       	= BankAccountType
			invoked.GlobalBankAccountType                 	= GlobalBankAccountType
			invoked.IntermediaryBankEntity                	= IntermediaryBankEntity
			invoked.IntermediaryBankAccount	              	= IntermediaryBankAccount	
			invoked.IntermediaryPrenotification             = IntermediaryPrenotification
			invoked.IntermediaryBankAccountValidationType   = IntermediaryBankAccountValidationType 
			invoked.IntermediaryRIBKey                      = IntermediaryRIBKey
			invoked.IntermediaryBankCurrency              	= IntermediaryBankCurrency
			invoked.GiroNumber                            	= GiroNumber
			invoked.CreditCardNumber                      	= CreditCardNumber
			invoked.BACSName                              	= BACSName
			invoked.BACSReference                           = BACSReference
			invoked.BankInstruction1                        = BankInstruction1
			invoked.BankInstruction2                        = BankInstruction2
			invoked.BankInstruction3                      	= BankInstruction3
			invoked.BankInstruction4                      	= BankInstruction4
			invoked.ValidateCertificationDate	          	= ValidateCertificationDate	
			invoked.InvoiceRoutingCategory                	= InvoiceRoutingCategory
			invoked.TermsCode                             	= TermsCode
			invoked.InvoiceGroup                            = InvoiceGroup
			invoked.CashCode                                = CashCode
			invoked.DiscountCode				            = DiscountCode				
			invoked.BankTransactionCode                   	= BankTransactionCode
			invoked.PayImmediately				          	= PayImmediately				
			invoked.SeparatePayment				          	= SeparatePayment				
			invoked.TaxCode                               	= TaxCode
			invoked.TaxUsageCode                            = TaxUsageCode
			invoked.DiversityCode				            = DiversityCode				
			invoked.ReplaceGoods				            = ReplaceGoods				
			invoked.ShipOrHold                            	= ShipOrHold
			invoked.WriteOffAmount				          	= WriteOffAmount				
			invoked.VendorClaimType                       	= VendorClaimType
			invoked.VendorClaimHoldCode			          	= VendorClaimHoldCode			
			invoked.UseProcurementCard			            = UseProcurementCard			
			invoked.MaskedProcurementCard		            = MaskedProcurementCard		
			invoked.EDINumber                               = EDINumber
			invoked.ERSCapable					          	= ERSCapable					
			invoked.EDIAutoRelease				          	= EDIAutoRelease				
			invoked.ExternalAccountingEntity              	= ExternalAccountingEntity
			invoked.ExternalLocation                      	= ExternalLocation
			invoked.TransientAttachmentDescription			= TransientAttachmentDescription
			invoked.TransientAttachment						= TransientAttachment
			invoked.TransPayablesCompany         			= TransPayablesCompany
			invoked.CommentText						        = CommentText
			invoked.Title									= Title
			invoked.DateRange								= DateRange
			invoked.PrintCode								= PrintCode

	Apply Pending Effective Rules
		if (VendorGroup.FinanceEnterpriseGroup.BODTrigger)
			if (!action type.Delete)
				if (action != "UpdateBODIdFields") 

					if (action type.Create)
						ActionCode	= ActionCode.Create
					else
						ActionCode	= ActionCode.Update
					increment bod id.VariationID
					LocalTitle = "EG:"+VendorGroup.FinanceEnterpriseGroup+"  VG:"+VendorGroup+"  VN:"+Vendor+"  VL:"+VendorLocation
					include ShipFromPartyMasterRules



		if (VendorGroup.FinanceEnterpriseGroup.BODTrigger and (LocationType.RemitTo or LocationType.BothRemitToPurchaseFrom))
			if (!action type.Delete)
				if (action != "UpdateBODIdFields") 

					if (action type.Create)
						ActionCode	= ActionCode.Create
					else
						ActionCode	= ActionCode.Update
					increment bod id.VariationID
					LocalTitle = "EG:"+VendorGroup.FinanceEnterpriseGroup+"  VG:"+VendorGroup+"  VN:"+Vendor+"  VL:"+VendorLocation
					include RemitToPartyMasterRules



	Audit Entry Rules
		if(not audit period.Future)
			if (VendorGroup.FinanceEnterpriseGroup.BODTrigger)
				if (!action type.Delete)
					if (action != "UpdateBODIdFields")
						LocalTitle = "EG:"+VendorGroup.FinanceEnterpriseGroup+"  VG:"+VendorGroup+"  VN:"+Vendor+"  VL:"+VendorLocation
						include ShipFromPartyMasterRules





			if (VendorGroup.FinanceEnterpriseGroup.BODTrigger and (LocationType.RemitTo or LocationType.BothRemitToPurchaseFrom))
				if (!action type.Delete)
					if (action != "UpdateBODIdFields")
						include RemitToPartyMasterRules





							
			if (action type.Create and VendorGroup.FinanceEnterpriseGroup.BODTrigger)
					invoke TriggerContactMaster VendorContactRel
						invoked.PrmActionCode = "C"


	Action Exit Rules
		if (VendorGroup.FinanceEnterpriseGroup.BODTrigger)
			if (!action type.Delete)
				if (action != "UpdateBODIdFields") 

					if (action type.Create)
						ActionCode	= ActionCode.Create
					else
						ActionCode	= ActionCode.Update
					if(!LocalBODTrigger)
						increment bod id.VariationID
					LocalTitle = "EG:" +VendorGroup.FinanceEnterpriseGroup +"CO:" + CompaniesRel.Company

		if (VendorGroup.FinanceEnterpriseGroup.BODTrigger and (LocationType.RemitTo or LocationType.BothRemitToPurchaseFrom))
			if (!action type.Delete)
				if (action != "UpdateBODIdFields") 

					if (action type.Create)
						ActionCode	= ActionCode.Create
					else
						ActionCode	= ActionCode.Update

					LocalTitle = "EG:" +VendorGroup.FinanceEnterpriseGroup +"CO:" + CompaniesRel.Company

	Form Invokes
		ChangeCurrentAddress
			invoke Update CurrentAddressRel

		CreatePurchaseFromLocation
			invoke Create PurchaseFromLocationRel

		CreateVendorBankCodes		
			invoke Create VendorBankRel

	Create Rules
		if (!T2VCreate)
			if (UseVendorAddress)						
				VendorAddress = CurrentVendorAddress
			constraint (VendorAddress entered)
				"PostalAddressIsRequired"

	Actions
		TriggerVendorLocation is an Instance Action
			restricted
			Action Rules
				if (VendorGroup.FinanceEnterpriseGroup.BODTrigger)
					if (!action type.Delete)
						if (action != "UpdateBODIdFields") 
							if (bod id.VariationID < 1)
								ActionCode	= ActionCode.Create
							else
								ActionCode	= ActionCode.Update
							increment bod id.VariationID
							LocalTitle = "EG:"+VendorGroup.FinanceEnterpriseGroup+"  VG:"+VendorGroup+"  VN:"+Vendor+"  VL:"+VendorLocation
							include ShipFromPartyMasterRules

		TriggerRemitToLocation is an Instance Action
			restricted
			Action Rules
				if (VendorGroup.FinanceEnterpriseGroup.BODTrigger and (LocationType.RemitTo or LocationType.BothRemitToPurchaseFrom))
					if (!action type.Delete)
						if (action != "UpdateBODIdFields") 
							if (bod id.VariationID < 1)
								ActionCode	= ActionCode.Create
							else
								ActionCode	= ActionCode.Update
							increment bod id.VariationID
							LocalTitle = "EG:"+VendorGroup.FinanceEnterpriseGroup+"  VG:"+VendorGroup+"  VN:"+Vendor+"  VL:"+VendorLocation
							include RemitToPartyMasterRules


		UpdateBODIdFields is an Instance Action
			restricted
			Parameters
				PrmAccountingEntity  is Alpha size 22
					default label is "AccountingEntity"
				PrmLocation          is Alpha size 22
					default label is "Location"
				PrmDocumentID        is Alpha size 100
					default label is "DocumentID"
				PrmRevision          is Alpha size 22
					default label is "Revision"
				PrmSystemOfRecord    is Alpha size 1
					default label is "SystemOfRecord"


			Action Rules
				if (bod id.AccountingEntity != PrmAccountingEntity)
					bod id.AccountingEntity 	= PrmAccountingEntity
				if (bod id.Location != PrmLocation)
					bod id.Location				= PrmLocation
				if (bod id.DocumentID != PrmDocumentID)
					bod id.DocumentID			= PrmDocumentID
				if (bod id.Revision != PrmRevision)
					bod id.Revision				= PrmRevision
				if (bod id.SystemOfRecord != PrmSystemOfRecord)
					bod id.SystemOfRecord		= PrmSystemOfRecord



		Create is a Create Action
			Action Rules
				effective date	= AddressEffectiveDate

			Exit Rules
				include CreateRelatedRecords

				ActionCode = ActionCode.Create
				include InitiateProcess




		CopyVendorLocation is an Instance Action		
			Parameters
				PrmVendorLocation		is like VendorLocation
					default label is "Location"
				PrmVendorName			is a VendorName 
					holds pii
					default label is "Name"
				PrmCopyContacts			is Boolean
					default label is "CopyLocationContacts"
			Parameter Rules
				PrmVendorLocation
					required
				PrmVendorName
					required
					initial value is this instance.VendorName
			Action Rules
				invoke Create VendorLocation
					fill in fields from this instance
					invoked.VendorLocation		= PrmVendorLocation
					invoked.VendorName			= PrmVendorName
					if (PrmCopyContacts)
						invoked.TransientCreateFromCopy = true
				if (PrmCopyContacts)
					for each VendorContactRel
						invoke Create VendorContact
							fill in fields from each
							invoked.VendorLocation = PrmVendorLocation

		T2VCreate is a Create Action				
			restricted 
			default label is untranslatable 
			bypass field rules 
			Entrance Rules 
				T2VCreate = true 
				
		RequestNewVendorLocation is a Create RequestAction	
			request action process is RequestNewVendorLocation
			request action linkback webapp is PayablesSpecialist
			workflow event title is "New_\VendorLocation_\Request:_<VendorLocation>_|_Priority:_<RequestPriority>_|_NeededBy:_<NeededBy>"
			allow user fields as parameters
			Parameters
				ApproverActor			is Alpha 30
				RequesterActor			is an Actor
				RequestedBy				is Alpha 100
				RequesterPhone			is a Telephone
					holds pii
				RequesterEmail			is an EmailAddressMulti
					holds pii
				RequestPriority			is Numeric 1
					States
						High				value is 1
						Medium				value is 2
						Low					value is 3
				NeededBy				is Date
				VendorGroup
				Vendor	
				VendorLocation
				VendorName
				LocationType
				RemitToCode				is a VendorLocation
				VATRegistrationNumber				
				VendorAccount
				VATRegistrationCountry	is a Country
				InvoiceCurrency			is a Currency
				RevalueCurrency			is Boolean
				Status					is AlphaUpper size 1
					States
						Active					value is "A"
						Inactive				value is "I"
						InactiveForPOAdditions	value is "D"
				NormalRemitToLocation  		is Boolean
				NormalPurchaseFromLocation	is Boolean
				GlobalLocationNumber
				TaxRegistrationType					  is Numeric size 1
					States
						Registered			value is 1
						UnRegistered		value is 2
							default label is "Unregistered"
						SpecialEconomicZone	value is 3
						CompositeDealer		value is 4
				UseVendorAddress			is Boolean	
				CurrentVendorAddress		is a PostalAddressV2	
				VendorAddress				is a PostalAddressV2
				ContactName 				is a VendorName
				PhoneNumber					is a TelephoneNumber
				MobileNumber				is a TelephoneNumber
				FaxNumber
				EmailAddress				is an EmailAddressMulti
				TwitterID
				SocialNetworkID2
				SocialNetworkID3
				SocialNetworkID4
				SocialNetworkID5
				FormattedPhoneNumber		is a TelephoneNumber
				FormattedMobilePhoneNumber	is a TelephoneNumber
				BankEntity
				BankAccountNumber
				ACHPrenotification
				BankCurrency				is a Currency
				BankAccountValidationType
				RIBKey
				BankAccountType
				GlobalBankAccountType
				CrossBorderIdentifier
				SwiftID
				NormalOrExpressCode
				ChargeCode					is a CashLedgerChargeCode
				PaymentCategoryCode			is a CashLedgerPaymentCategoryCode
				PaymentForm					is a CashLedgerPaymentForm
				DebitingSign
				BankingCode
				BankID
				AssignmentNumber
				IntermediaryBankEntity					is a BankEntity
				IntermediaryBankAccount					is a BankAccountNumber
				IntermediaryPrenotification				is an ACHPrenotification
				IntermediaryBankAccountValidationType	is a BankAccountValidationType
				IntermediaryRIBKey						is a RIBKey
				IntermediaryBankCurrency				is a Currency
				IntermediaryCrossBorderIdentifier		is a CrossBorderIdentifier
				IntermediarySwiftID						is AlphaUpper size 12
				IntermediaryNormalOrExpressCode			is a NormalOrExpressCode
				IntermediaryChargeCode					is a CashLedgerChargeCode
				IntermediaryPaymentCategory				is a CashLedgerPaymentCategoryCode
				IntermediaryPaymentForm					is a CashLedgerPaymentForm
				IntermediaryDebitingSign				is a DebitingSign
				IntermediaryBankingCode					is a BankingCode
				IntermediaryBankID						is a BankID
				IntermediaryAssignmentNumber			is an AssignmentNumber
				GiroNumber
				CreditCardNumber			is a CrCardNumber
				BACSName					is an AccountName
				BACSReference
				BankInstruction1			is a BankInstruct1
				BankInstruction2			is a BankInstruct2
				BankInstruction3			is a BankInstruct3
				BankInstruction4			is a BankInstruct4
				VendorBankCode1				is a VendorBankCode
				VendorBankCode2				is a VendorBankCode
				VendorBankCode3				is a VendorBankCode
				VendorBankCode4				is a VendorBankCode
				VendorBankCode5				is a VendorBankCode
				VendorBankCode6				is a VendorBankCode
				VendorBankCode7				is a VendorBankCode
				VendorBankCode8				is a VendorBankCode
				VendorBankCode9				is a VendorBankCode
				VendorBankCode10			is a VendorBankCode
				VendorBankCode11			is a VendorBankCode
				VendorBankCode12			is a VendorBankCode
				VendorBankCode13			is a VendorBankCode
				VendorBankCode14			is a VendorBankCode
				VendorBankCode15			is a VendorBankCode
				VendorBankCode16			is a VendorBankCode
				VendorBankCode17			is a VendorBankCode
				VendorBankCode18			is a VendorBankCode
				VendorBankCode19			is a VendorBankCode
				VendorBankCode20			is a VendorBankCode
				ValidateCertificationDate	is Boolean
				InvoiceRoutingCategory
				TermsCode
				InvoiceGroup					is a PayablesInvoiceGroup		
				CashCode
				DiscountCode					is a PayablesDiscountCode
				BankTransactionCode
				PayImmediately					is Boolean
				SeparatePayment					is Boolean
				TaxCode
				TaxUsageCode
				DiversityCode					is a PayablesDiversityCode
				DerivedDiveristyDescription		is Alpha 30
				ReplaceGoods					is Boolean
				ShipOrHold
				WriteOffAmount					is an InternationalAmount
				VendorClaimType
				VendorClaimHoldCode				is a PayablesHoldCode
				UseProcurementCard				is Boolean
				MaskedProcurementCard			is like ProcurementCardNumber
				EDINumber
				ERSCapable						is Boolean
				EDIAutoRelease					is Boolean
				InvoiceReference				is a PayablesReferenceType
				ExternalAccountingEntity		is Alpha size 22
				ExternalLocation				is Alpha size 22
				NeededByRedBoolean 				is Boolean
				NeededByYellowBoolean 			is Boolean
				NeededByGreenBoolean			is Boolean
				NoOfDays						is Numeric size 3
				TransientAttachmentDescription			is a Description
					default label is "AttachmentDescription"
				TransientAttachment						is an Attachment
					default label is "Attachment"				
				Notes							is Text
				TransPayablesCompany					is a PayablesCompanyField
				CommentText
				Title 					                is a CommentName
				PrintCode 				                is AlphaUpper size 1
					States
						All             value is "A"
						CheckOrCheque   value is "C"
						DisplayAndPrint value is "D"
						NotationOnly    value is "N"
				DateRange

			Parameter Rules
				RequestPriority
					required

				NeededBy
					required

				RequesterActor
					initial value is actor
					default to actor

				ApproverActor
					if (!actor.initiator)
						default to actor

				RequestedBy
					initial value is RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName
					default to RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName

				RequesterPhone
					initial value is RequesterActor.ContactInfo.TelephoneNumber
					default to RequesterActor.ContactInfo.TelephoneNumber

				RequesterEmail
					initial value is RequesterActor.ContactInfo.EmailAddress
					default to RequesterActor.ContactInfo.EmailAddress

				VendorLocation
					required

				VendorName
					required
					initial value is this instance.VendorName
				
				TransientAttachment
					if (TransientAttachmentDescription entered)
						required
							"AttachmentIsRequiredWhenAttachmentDescriptionIsEntered"
				
				Notes
					required

			Action Rules
				invoke Create this instance
					fill in user fields from parameters
					include AddCreateRequestVendorLocation

		RequestUpdateVendorLocation is an Update RequestAction	
			request action process is RequestUpdateVendorLocation
			request action linkback webapp is PayablesSpecialist
			allow user fields as parameters
			bypass field rules			
			Parameters
				ApproverActor	
				RequesterActor	
				RequestedBy		
				RequesterPhone
				RequesterEmail
				RequestPriority
				NeededBy
				VendorGroup
				Vendor				
				VendorLocation
				VendorName
				LocationType
				RemitToCode
				VATRegistrationNumber				
				VendorAccount
				VATRegistrationCountry
				InvoiceCurrency			
				RevalueCurrency			
				Status
				NormalRemitToLocation
				NormalPurchaseFromLocation
				GlobalLocationNumber
				TaxRegistrationType
				VendorAddress
				ContactName 
				PhoneNumber	
				MobileNumber
				FaxNumber
				EmailAddress
				TwitterID
				SocialNetworkID2
				SocialNetworkID3
				SocialNetworkID4
				SocialNetworkID5
				BankEntity
				BankAccountNumber
				ACHPrenotification
				BankCurrency
				BankAccountValidationType
				RIBKey
				BankAccountType
				GlobalBankAccountType
				CrossBorderIdentifier
				SwiftID
				NormalOrExpressCode
				ChargeCode			
				PaymentCategoryCode	
				PaymentForm			
				DebitingSign
				BankingCode
				BankID
				AssignmentNumber
				IntermediaryBankEntity					
				IntermediaryBankAccount					
				IntermediaryPrenotification				
				IntermediaryBankAccountValidationType	
				IntermediaryRIBKey						
				IntermediaryBankCurrency				
				IntermediaryCrossBorderIdentifier		
				IntermediarySwiftID						
				IntermediaryNormalOrExpressCode			
				IntermediaryChargeCode					
				IntermediaryPaymentCategory				
				IntermediaryPaymentForm					
				IntermediaryDebitingSign				
				IntermediaryBankingCode					
				IntermediaryBankID						
				IntermediaryAssignmentNumber			
				GiroNumber
				CreditCardNumber			
				BACSName					
				BACSReference
				BankInstruction1			
				BankInstruction2			
				BankInstruction3			
				BankInstruction4
				ValidateCertificationDate	
				InvoiceRoutingCategory
				TermsCode
				InvoiceGroup
				CashCode
				DiscountCode					
				BankTransactionCode
				PayImmediately					
				SeparatePayment					
				TaxCode
				TaxUsageCode
				DiversityCode					
				DerivedDiveristyDescription		
				ReplaceGoods					
				ShipOrHold
				WriteOffAmount					
				VendorClaimType
				VendorClaimHoldCode				
				UseProcurementCard				
				MaskedProcurementCard			
				EDINumber
				ERSCapable						
				EDIAutoRelease					
				InvoiceReference				
				ExternalAccountingEntity		
				ExternalLocation				
				NeededByRedBoolean 				
				NeededByYellowBoolean 			
				NeededByGreenBoolean			
				NoOfDays						
				RequestAddressChange			
				UseVendorAddress				
				CurrentVendorAddress
				TransientAttachmentDescription
				TransientAttachment			
				Notes
				ClearBankAccountNumber				
				ClearSwiftID
				ClearIntermediaryBankAccount
				ClearIntermediarySwiftID
				ClearGiroNumber			
				ClearCreditCardNumber
				TransPayablesCompany
				CommentText
				Title 					            
				PrintCode 				            
				DateRange
				PayGroup
			Parameter Rules
				RequestPriority
					required

				NeededBy
					required

				RequesterActor
					initial value is actor
					default to actor

				ApproverActor
					if (!actor.initiator)
						default to actor

				RequestedBy
					initial value is RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName
					default to RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName

				RequesterPhone
					initial value is RequesterActor.ContactInfo.TelephoneNumber
					default to RequesterActor.ContactInfo.TelephoneNumber

				RequesterEmail
					initial value is RequesterActor.ContactInfo.EmailAddress
					default to RequesterActor.ContactInfo.EmailAddress

				VendorLocation
					required

				VendorName
					required
					initial value is this instance.VendorName
				
				TransientAttachment
					if (TransientAttachmentDescription entered)
						required
							"AttachmentIsRequiredWhenAttachmentDescriptionIsEntered"
					
				Notes
					required

				ClearBankAccountNumber				
					if(ClearBankAccountNumber)
						initialize BankAccountNumber
				
				ClearSwiftID
					if(ClearSwiftID)
						initialize SwiftID
				
				ClearIntermediaryBankAccount
					if(ClearIntermediaryBankAccount)
						initialize IntermediaryBankAccount
						
				ClearIntermediarySwiftID
					if(ClearIntermediarySwiftID)
						initialize IntermediarySwiftID
						
				ClearGiroNumber
					if(ClearGiroNumber)
						initialize GiroNumber
				
				ClearCreditCardNumber
					if(ClearCreditCardNumber)
						initialize CreditCardNumber	
			Action Rules
				invoke Update
					fill in user fields from parameters
					include AddCreateRequestVendorLocation

		Update is an Update Action
			Action Rules			
				if(invoking action = "RequestUpdateVendorLocation")		
					if(ClearBankAccountNumber)
		            	initialize BankAccountNumber
		            else
					if (BankAccountNumber changed and BankAccountNumber !entered and old BankAccountNumber entered)
		            	BankAccountNumber = old BankAccountNumber
		            
		            if(ClearSwiftID)
		            	initialize SwiftID
		            else	
					if (SwiftID changed and SwiftID !entered and old SwiftID entered)
		            	SwiftID = old SwiftID
		            
		            if(ClearIntermediaryBankAccount)
		            	initialize IntermediaryBankAccount
		            else	
		            if (IntermediaryBankAccount changed and IntermediaryBankAccount !entered and old IntermediaryBankAccount entered)
		            	IntermediaryBankAccount = old IntermediaryBankAccount
		            
		            if(ClearIntermediarySwiftID)
		            	initialize IntermediarySwiftID
		            else	
		            if (IntermediarySwiftID changed and IntermediarySwiftID !entered and old IntermediarySwiftID entered)
		            	IntermediarySwiftID = old IntermediarySwiftID
		            
		            if(ClearGiroNumber)
		            	initialize GiroNumber
		            else	
		            if (GiroNumber changed and GiroNumber !entered and old GiroNumber entered)
		            	GiroNumber = old GiroNumber
		            
		            if(ClearCreditCardNumber)
		            	initialize CreditCardNumber
		            else	
		            if (CreditCardNumber changed and CreditCardNumber !entered and old CreditCardNumber entered)
		            	CreditCardNumber = old CreditCardNumber
			Exit Rules
				include UpdatePrimaryContact

				if (AddressEffectiveDate = CurrentAddressRel.effective date)
					invoke Update CurrentAddressRel
						invoked.PostalAddress	= VendorAddress
				else
					invoke Create VendorAddress
						invoked.VendorGroup		= VendorGroup
						invoked.Vendor			= Vendor
						invoked.VendorLocation	= VendorLocation
						invoked.VendorContact	= blank
						invoked.effective date	= AddressEffectiveDate
						invoked.PostalAddress	= VendorAddress

				ActionCode = ActionCode.Update
				include InitiateProcess

				MaskedProcurementCard = DerivedMaskedProcurementCard

				if (TransientAttachment entered)
					invoke Create VendorLocationAttachmentsRel
						invoked.VendorGroup	= VendorGroup
						invoked.Vendor		= Vendor
						invoked.Description	= TransientAttachmentDescription
						invoked.Attachment	= TransientAttachment
				
				if (CommentText entered or Title entered)
					invoke Create VendorComment
						invoked.VendorGroup     = VendorGroup
						invoked.Vendor          = Vendor
						invoked.VendorLocation	= VendorLocation
						invoked.Company			= TransPayablesCompany
						invoked.CommentText     = CommentText
						invoked.PrintCode       = PrintCode
						invoked.Title           = Title
						invoked.DateRange.Begin = DateRange.Begin
						invoked.DateRange.End   = DateRange.End
						invoked.PayGroup        = PayGroup
						





		FastUpdate is an Update Action		
			restricted
			bypass field rules

		UpdatePrimaryContact		is an Instance Action
			restricted
			Parameters
				PrmContactName		is a VendorName 
					holds pii
				PrmPhoneNumber		is a TelephoneNumber 
					holds pii
				PrmMobileNumber		is a MobilePhone 
					holds pii
				PrmFaxNumber		is a FaxNumber
				PrmEmailAddress		is a EmailAddressMulti 
					holds pii
				PrmTwitterID		is a TwitterID
				PrmSocialNetworkID2	is a SocialNetworkID2
				PrmSocialNetworkID3	is a SocialNetworkID3
				PrmSocialNetworkID4	is a SocialNetworkID4
				PrmSocialNetworkID5	is a SocialNetworkID5

			Action Rules
				ContactName 		= PrmContactName
				PhoneNumber			= PrmPhoneNumber
				MobileNumber		= PrmMobileNumber
				FaxNumber			= PrmFaxNumber
				EmailAddress		= PrmEmailAddress
				TwitterID			= PrmTwitterID
				SocialNetworkID2	= PrmSocialNetworkID2
				SocialNetworkID3	= PrmSocialNetworkID3
				SocialNetworkID4	= PrmSocialNetworkID4
				SocialNetworkID5	= PrmSocialNetworkID5


		UpdateProcurementCard is an Instance Action
			restricted
			Parameters
				PrmProcurementCardNbr	is a ProcurementCardNumber
			Parameter Rules
				PrmProcurementCardNbr
					initial value is ProcurementCardNumber
					constraint (ProcurementCardNumber != PrmProcurementCardNbr)
						"CannotChangeTheNumberToTheSameNumber"
			Action Rules
				ProcurementCardNumber = PrmProcurementCardNbr
				MaskedProcurementCard = ProcurementCardNumber

		Delete is a Delete Action
			Entrance Rules
				for each VendorBalance set
					constraint (each.CurrentBalance not entered
					and         each.DraftBalance   not entered)
						"BalancesExistForVendor<Vendor>Location<VendorLocation>" 



				constraint (PurchaseFromInvoicesRel not exist
				and 		RemitToInvoicesRel not exist)
					"A\PInvoicesExistForVendor<Vendor>"                       


				invoke Delete VendorMappingTableInterfacesRel
				invoke FastDelete VendorContactRel
				invoke DeleteAddress CurrentAddressRel

				if (VendorGroup.FinanceEnterpriseGroup.BODTrigger)
					ActionCode = ActionCode.Delete
					increment bod id.VariationID
					LocalTitle = "EG:"+VendorGroup.FinanceEnterpriseGroup+"  VG:"+VendorGroup+"  VN:"+Vendor+"  VL:"+VendorLocation
					include ShipFromPartyMasterRules



				if (VendorGroup.FinanceEnterpriseGroup.BODTrigger)
					ActionCode = ActionCode.Delete
					increment bod id.VariationID
					LocalTitle = "EG:"+VendorGroup.FinanceEnterpriseGroup+"  VG:"+VendorGroup+"  VN:"+Vendor+"  VL:"+VendorLocation
					include RemitToPartyMasterRules




			Exit Rules
				ActionCode = ActionCode.Delete
				include InitiateProcess

		UpdateGlobalLocationNumber is an Instance Action
			restricted
			Parameters
				PrmGlobalLocationNumber	is a GlobalLocationNumber
			Action Rules
				GlobalLocationNumber	=	PrmGlobalLocationNumber
			Exit Rules
				ActionCode = ActionCode.Update
				include InitiateProcess

		SetDefaultDiversityCode is an Instance Action
			restricted
			Parameters
				PrmDiversityCode is a PayablesDiversityCode
			Parameter Rules
				PrmDiversityCode
					constraint (PrmDiversityCode != DiversityCode)
						"CannotChangeDiversityCodeToTheSameCode"
			Action Rules
				DiversityCode	= PrmDiversityCode

		UpdateTaxCodes is an Update Action
			restricted
			bypass field rules


		UpdateTaxCodeUsingVertex is an Instance Action

			valid when (HasVertexConfig)			
			completion message is "<CompletionMessage>"


			Parameters

			Parameter Rules

			Local Fields
				LocalTaxCode			  is a TaxCode
			Action Rules



				initialize CalculateTax
				CalculateTax.RelatedObjectReference         = reference to this instance
				CalculateTax.System							= "AP"
				CalculateTax.CallingModule					= "VendorLocation"
				CalculateTax.VertexQuantumOption			= "G"
				CalculateTax.TaxEntity						= blank
				CalculateTax.VendorGrp						= VendorGroup
				CalculateTax.InFinanceEnterpriseGroup       = VendorGroup.BusinessGroup.FinanceEnterpriseGroup
				CalculateTax.PostalAddress					= CurrentAddressRel.PostalAddress	
				LocalTaxCode								= CalculateTax.ReturnedGeoCode
				MultTaxCodesIndicator						= CalculateTax.MultipleTaxAreaIds
				WebServiceError								= CalculateTax.WebServiceError
				WebServiceErrorMessage						= CalculateTax.WebServiceErrorMessage










				if (LocalTaxCode entered
				and !WebServiceError
				and CalculateTax.OutputErrorNumber not entered)

					TaxCode = LocalTaxCode

					if (VendorPostalCode not entered)
						invoke Update CurrentAddressRel
							invoked.PostalAddress.PostalCode 	= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].PostalCode
							invoked.PostalAddress.County 		= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].County








		BatchUpdateTaxCodeUsingVertex is a Set Action

			valid when (HasVertexConfig)			
			completion message is "<VertexCompletionMessage>"


			Parameters
				PrmProcessGroup				is Alpha 50
					default label is "ProcessGroup"
				PrmEnterpriseGroup			is a VertexConfig
					default label is "FinanceEnterpriseGroup"
				PrmTaxEntity				is like TaxEntity
					default label is "TaxEntity"
				PrmVendorGroup				is a VendorGroup
					default label is "VendorGroup"
				PrmFromVendor				is like Vendor
					default label is "FromVendor"
				PrmToVendor					is like Vendor
					default label is "ToVendor"
				PrmFromLocation				is like VendorLocation
					default label is "FromLocation"
				PrmToLocation 				is like VendorLocation
					default label is "ToLocation"
				PrmReadOnly					is Boolean
					default label is "ReadOnly"
				EntityTaxCodeDefault is like TaxCode	
			Parameter Rules
				PrmVendorGroup
					required
				PrmFromVendor
					if (PrmToVendor not entered)
						required
				PrmToVendor
					if (PrmFromVendor not entered)
						required
			Local Fields
				LocalTaxCode			is like TaxCode
				CompletionMessage		is Alpha 150
				RecordCount				is Numeric 10

			Instance Selection
				where (PrmEnterpriseGroup = VendorGroup.BusinessGroup.FinanceEnterpriseGroup
				and    VendorGroup       = PrmVendorGroup
				and    Vendor			>= PrmFromVendor
				and    Vendor			<= PrmToVendor
				and    VendorLocation 	>= PrmFromLocation
				and    VendorLocation 	<= PrmToLocation)

			Sort Order
				Vendor

			Accumulators


			Action Rules
				Empty Set Rules
					CompletionMessage = "<CompletionMessage>"

				Set Rules
					Entrance Rules
						constraint (VertexConfigRel exist)
							"VertexConfigurationNotSetUp;CheckIfTaxEntitySetUpToUseVertex"
						initialize RecordCount
				
					Exit Rules

				Vendor Set Rules
					Entrance Rules

					Exit Rules

				Instance Rules

					increment RecordCount
					initialize CalculateTax
					CalculateTax.RelatedObjectReference         	= reference to this instance
					CalculateTax.System								= "AP"
					CalculateTax.CallingModule						= "VendorLocation"
					CalculateTax.VertexQuantumOption				= "G"
					CalculateTax.TaxEntity							= PrmTaxEntity
					CalculateTax.InFinanceEnterpriseGroup       	= VendorGroup.BusinessGroup.FinanceEnterpriseGroup
					CalculateTax.VendorGrp							= VendorGroup
					CalculateTax.PostalAddress						= CurrentAddressRel.PostalAddress
					CalculateTax.EntityTaxCodeDefault				= EntityTaxCodeDefault						

					LocalTaxCode									= CalculateTax.ReturnedGeoCode
					MultTaxCodesIndicator							= CalculateTax.MultipleTaxAreaIds
					WebServiceError									= CalculateTax.WebServiceError
					WebServiceErrorMessage							= CalculateTax.WebServiceErrorMessage
					CalculateTaxOutputMessage						= CalculateTax.OutputErrorMessage

					NewTaxCode = LocalTaxCode
					OldTaxCode = TaxCode
					if (LocalTaxCode entered
					and !WebServiceError
					and !PrmReadOnly)
						TaxCode = LocalTaxCode

					if (!MultTaxCodesIndicator
					and !WebServiceError
					and LocalTaxCode entered
					and !PrmReadOnly)
						invoke Update CurrentAddressRel
							if (VendorPostalCode not entered)
								invoked.PostalAddress.PostalCode 	= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].PostalCode
							if (VendorCounty not entered)
								invoked.PostalAddress.County 		= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].County




					LocalLookupKey 	= CalculateTax.ResultsLookupKey
					LocalSequence	= CalculateTax.ResultsLookupKeySequence
					if (VertexLookupResultsRel exist)
						invoke Delete VertexLookupResultsRel

					invoke Create VertexLookupResults
						invoked.VertexConfig			   			= VendorGroup.BusinessGroup.FinanceEnterpriseGroup
							invoked.VertexLookupResults.LookupKey 	= LocalLookupKey
							invoked.VertexLookupResults.Sequence	= LocalSequence
							invoked.RelatedObjectReference			= reference to this instance
							invoked.LookupVendorGroup				= VendorGroup
							invoked.LookupVendor					= Vendor
							invoked.LookupVendorLocation			= VendorLocation
							invoked.DisplayOption					= "V"
							invoked.LookupProcessGroup				= PrmProcessGroup
							invoked.ReturnedHighesTaxAreaId			= LocalTaxCode
							invoked.NumberOfTaxAreaIdsReturned		= CalculateTax.NumberOfTaxCodes
							invoked.LookupPostalAddress 			= CurrentAddressRel.PostalAddress
							invoked.LookupTaxEntity					= PrmTaxEntity
							invoked.ErrorNumber						= CalculateTax.OutputErrorNumber
							invoked.ErrorMessage					= DerivedLookupMessage		
							invoked.LookupDescription				= TaxCodeMessage			
							invoked.WebServiceError 				= CalculateTax.WebServiceError
							invoked.WebServiceErrorMessage 			= CalculateTax.WebServiceErrorMessage
							if (MultTaxCodesIndicator
							or  WebServiceError
							or  CalculateTax.OutputErrorNumber entered)
								invoked.Status = 0
							else
							if (LocalTaxCode not = OldTaxCode)
								invoked.Status = 1
							else
								invoked.Status = 2

		UpdateTaxCodeWithSelectedRecords is an Instance Action

			restricted
			valid when (!WebServiceError)
			Parameters
				DeleteFilesAfterUpdate	  is Boolean
					default label is "DeleteResultsFilesAfterUpdate"
			Local Fields
				LocalTaxCode			  is a TaxCode
			Action Rules

				if (SelectedTaxAreaIdRecordsRel exist)						
					TaxCode 					= first SelectedTaxAreaIdRecordsRel.TaxAreaId
					LocalTaxCode 				= first SelectedTaxAreaIdRecordsRel.TaxAreaId
					for each VertexTaxAreaIdResultsRel
						invoke UpdateAndBypassRules each
							invoked.Selected = false

				LocalLookupKey 								= VertexTaxAreaIdResultsRel.VertexTaxAreaIdResults.LookupKey
				LocalResponseBusclassKey 					= VertexTaxAreaIdResultsRel.VertexTaxAreaIdResults.ResponseBusclassKey
				LocalSequence 								= VertexTaxAreaIdResultsRel.VertexTaxAreaIdResults.Sequence

				if (SelectedPostalAddressRecordsRel exist)

					invoke Update CurrentAddressRel
						invoked.PostalAddress.County 		= first SelectedPostalAddressRecordsRel.SubDivision
						invoked.PostalAddress.PostalCode	= first SelectedPostalAddressRecordsRel.PostalCode
					for each UpdatePostalAddressRecordsRel
						invoke UpdateAndBypassRules each
							each.Selected = false
				else
					invoke Update CurrentAddressRel
						invoked.PostalAddress.County 		= first UpdatePostalAddressRecordsRel.SubDivision
						invoked.PostalAddress.PostalCode	= first UpdatePostalAddressRecordsRel.PostalCode


				if (DeleteFilesAfterUpdate)
					include DeleteVertexResultsFiles
				else
				if (VertexLookupResultsRel exist)
					for each VertexLookupResultsRel
						invoke Update each
							each.Status = 1

		UpdateTaxCodeAndAddress is an Instance Action
			restricted
			Parameters
				PrmTaxCode		is like TaxCode
				PrmCountry		is a Country
				PrmState		is a StateProvince
				PrmZip			is a PostalCode
				PrmCounty		is a County
			Parameter Rules
			Action Rules

				if (PrmTaxCode entered)
					TaxCode = PrmTaxCode
				invoke Update CurrentAddressRel
					if (VendorPostalCode not entered)
						invoked.PostalAddress.PostalCode	= PrmZip
					if (VendorCounty not entered)
						invoked.PostalAddress.County 		= PrmCounty

		PutVendorLocationOnHold is an Instance Action		
			valid when (IsValidToPutOnHold)
			Parameters
				VendorHoldCode is a PayablesHoldCode
			Parameter Rules
				VendorHoldCode
					required
					constraint (VendorHoldCode.HoldOnVendor entered)
						"HoldCodeDoesNotExistOrIsNotValidForVendors"             
			Action Rules
				invoke Delete PayablesOnHoldRel
				invoke Create PayablesOnHoldRel
					invoked.HoldCode = VendorHoldCode
				OnHold = true

		TakeOffHold is an Instance Action		
			valid when (OnHold)
			Action Rules
				invoke Delete PayablesOnHoldRel
				OnHold = false

		BODDataInitialLoadVendorLocationCriteria is a Set Action
			restricted
			Parameters
				PrmVendorGroup				is a VendorGroup
				PrmFromVendor				is a Vendor
				PrmToVendor					is a Vendor
				PrmFromVendorLocation		is a VendorLocation
					context of PrmFromVendor
				PrmToVendorLocation			is a VendorLocation
					context of PrmFromVendor
			Parameter Rules

			Instance Selection
				where  (((PrmVendorGroup entered
				and		  PrmVendorGroup = VendorGroup)
				or		  PrmVendorGroup not entered)
				and    ((PrmFromVendor entered
				and		  PrmFromVendor <= Vendor)
				or		  PrmFromVendor not entered)
				and    ((PrmToVendor entered
				and		 PrmToVendor >= Vendor)
				or		 PrmToVendor not entered)
				and    ((PrmFromVendorLocation entered
				and		 PrmFromVendorLocation <= VendorLocation)
				or		 PrmFromVendorLocation not entered)
				and    ((PrmToVendorLocation entered
				and		 PrmToVendorLocation >= VendorLocation)
				or		 PrmToVendorLocation not entered)
				and      (Status.Active = true))

			Sort Order
				VendorGroup
			Action Rules
				Instance Rules
					if (VendorGroup.FinanceEnterpriseGroup.BODTrigger)
						ActionCode	= ActionCode.Create
						increment bod id.VariationID
						LocalTitle = "EG:"+VendorGroup.FinanceEnterpriseGroup+"  VG:"+VendorGroup+"  VN:"+Vendor+"  VL:"+VendorLocation
						include ShipFromPartyMasterRules



					if (VendorGroup.FinanceEnterpriseGroup.BODTrigger and (LocationType.RemitTo or LocationType.BothRemitToPurchaseFrom))
						ActionCode	= ActionCode.Create
						increment bod id.VariationID
						LocalTitle = "EG:"+VendorGroup.FinanceEnterpriseGroup+"  VG:"+VendorGroup+"  VN:"+Vendor+"  VL:"+VendorLocation
						include RemitToPartyMasterRules



					increment bod id.VariationID
					invoke TriggerPurchaseFromLocation PurchaseFromLocationRel

		Anonymize is an Instance Action	
			restricted
			Action Rules
				if (first VendorAddressesRel exists)
					invoke Anonymize VendorAddressRel
				if (first VendorContactRel exists)
					invoke Anonymize VendorContactRel
				if (first VendorMappingTableInterfacesRel exists)
					invoke Anonymize VendorMappingTableInterfacesRel

				VendorName	= Vendor
				Status 		= Status.Inactive
				initialize ContactName
				initialize BACSName
				initialize PhoneNumber
				initialize MobileNumber
				initialize FaxNumber
				initialize TelexNumber
				initialize EmailAddress
				initialize BACSName
				initialize CreditCardNumber
				initialize BankEntity
				initialize BankAccountNumber
				initialize CrossBorderIdentifier
				initialize EDINumber
				initialize SwiftID
				initialize VendorAccount
				initialize IntermediaryBankEntity
				initialize IntermediaryBankAccount
				initialize IntermediarySwiftID
				initialize IntermediaryCrossBorderIdentifier
				initialize GiroNumber
				initialize BankInstruction1
				initialize BankInstruction2
				initialize BankInstruction3
				initialize BankInstruction4
				initialize TwitterID
				initialize SocialNetworkID2
				initialize SocialNetworkID3
				initialize SocialNetworkID4
				initialize SocialNetworkID5
				initialize BankID
				initialize AssignmentNumber
				initialize IntermediaryBankID
				initialize IntermediaryAssignmentNumber

			Exit Rules
				invoke Create AnonymizeLog
					invoked.FinanceEnterpriseGroup		= VendorGroup.FinanceEnterpriseGroup
					invoked.Status						= 1
					invoked.AffectedBusinessClass		= "AP4"
					invoked.VendorGroup					= VendorGroup
					invoked.Vendor						= Vendor
					invoked.VendorLocation				= VendorLocation

		PurgeAuditLog is an Instance Action	
			restricted
			Action Rules
				if (first VendorAddressesRel exists)
					invoke PurgeAuditLog VendorAddressRel
				if (first VendorContactRel exists)
					invoke PurgeAuditLog VendorContactRel
				if (first VendorMappingTableInterfacesRel exists)
					invoke PurgeAuditLog VendorMappingTableInterfacesRel

			  	invoke purge audit log entries

		  	Exit Rules
				invoke Create AnonymizeLog
					invoked.FinanceEnterpriseGroup		= VendorGroup.FinanceEnterpriseGroup
					invoked.Status						= 2
					invoked.AffectedBusinessClass		= "AP4"
					invoked.VendorGroup					= VendorGroup
					invoked.Vendor						= Vendor
		  			invoked.VendorLocation				= VendorLocation


       	SendShipFromPartyBODNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				if(DerivedCleanDocumentID = "Y")
					send ion bod
						bod is ShipFromPartyMasterCleanDocIDXMLBOD
						bod type is "Sync.ShipFromPartyMaster"
						accounting entity is LocalCrossAccountingEntity
						document id is DerivedDocumentID
						variation id is	DerivedNativeBODVariationID
				else
					send ion bod
						bod is ShipFromPartyMasterServiceXMLBOD
						bod type is "Sync.ShipFromPartyMaster"
						accounting entity is DerivedAccountingEntityShipFrom
						document id is DerivedDocumentID
						variation id is DerivedNativeBODVariationID	
						
       	TriggerShipFromPartyNativeLPLOutBOD is an Instance Action
			default label is untranslatable
			restricted
			Entrance Rules
			Parameters
				RestartFlag 	is Boolean
				PrmTriggerFrom  is Alpha 50
			Action Rules
				invoke NativeLPLBODTriggerChecks FSMShipFromPartyBODConfigurationRel
					invoked.PrmVerb 					= 1
					invoked.PrmNoun						= "ShipFromPartyMaster"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= PrmTriggerFrom
					invoked.PrmFinanceEnterpriseGroup	= VendorGroup.FinanceEnterpriseGroup
					invoked.PrmBusinessGroup			= VendorGroup
					invoked.PrmMainUserTemplate			= "IONSyncShipFromPartyMaster_VendorLocation_ST"
				NativeLPLBODTrigger = FSMShipFromPartyBODConfigurationRel.NativeLPLBODTrigger
				LocalBODTrigger = true
				if(VendorGroup.FinanceEnterpriseGroup.BODTrigger and NativeLPLBODTrigger)
					if(DerivedCleanDocumentID = "Y")
						if(RestartFlag)
							if (BODGeneralLedgerCompanyRel exist)
								initialize LocalGeneralLedgerCompany
								initialize LocalAccountingentityCompany
								initialize ShipFromPartyMasterCleanDocIDXMLBOD
								initialize LocalCrossAccountingEntity
								initialize LocalBODFormattedID
								LocalGeneralLedgerCompany = FSMInboundBODTracker.Reference5
								if(DerivedMultipleFEG = "Y")
									LocalAccountingentityCompany = DerivedFinanceEnterpriseGroup + DerivedDelimiter + LocalGeneralLedgerCompany
								else
									LocalAccountingentityCompany = LocalGeneralLedgerCompany
								if(DerivedTriggerBODBasedOnCrossReference = "Y")
									if (FSMCleanDocIDCrossReferenceDetailRel.DestinationValue entered)
										LocalCrossAccountingEntity = FSMCleanDocIDCrossReferenceDetailRel.DestinationValue
								else
									LocalCrossAccountingEntity = LocalAccountingentityCompany
								if(LocalCrossAccountingEntity entered)
									LocalFSMInboundBODTracker		= FSMInboundBODTracker
									invoke Update FSMInboundBODTrackerRel
										invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
										invoked.BODDocumentID			= DerivedDocumentID
										invoked.BODVariationID			= DerivedNativeBODVariationID
										invoked.Status					= 1
										invoked.StartDate				= system current timestamp
										invoked.Direction				= 1
										invoked.BODAccountingEntity		= LocalCrossAccountingEntity
										invoked.Vendor					= Vendor
										invoked.Reference1				= VendorGroup
										invoked.Reference2				= VendorLocation
										invoked.Reference3				= "VendorLocationService"
										invoked.Reference4				= PrmTriggerFrom
										invoked.Reference5				= LocalGeneralLedgerCompany
										initialize invoked.Error			
										initialize invoked.ErrorMessage
									LocalBODFormattedID = "infor-nid:" + DerivedTenantID + ":" + LocalCrossAccountingEntity + "::" + DerivedDocumentID + ":" + "?ShipFromPartyMaster&verb=Sync&TrackerID="+ LocalFSMInboundBODTracker
									ShipFromPartyMasterCleanDocIDXMLBOD = template.IONSyncShipFromPartyMasterCleanDocID_VendorLocation_ST document for this instance
									invoke SendShipFromPartyBODNativeLPL
										resume on error
					                   		Error            							= true
					                        ErrorMessage     							= error message
					                if(Error)
										invoke Update FSMInboundBODTrackerRel
											invoked.Error 								= Error
											invoked.ErrorMessage 						= ErrorMessage
											invoked.Status								= 2
											invoked.CloseDate							= system current timestamp
											invoked.BODXML								= ShipFromPartyMasterCleanDocIDXMLBOD
											invoked.BODID								= LocalBODFormattedID
									else
										invoke Update FSMInboundBODTrackerRel
											invoked.Status									= 3
											invoked.CloseDate								= system current timestamp
											invoked.BODXML									= ShipFromPartyMasterCleanDocIDXMLBOD
											invoked.BODID									= LocalBODFormattedID
						else
						if(DerivedTriggerBODBasedOnCrossReference = "Y")
							if(FSMCleanDocIDGLCCrossReferenceDetailRel exists)
								for each FSMCleanDocIDGLCCrossReferenceDetailRel
									initialize LocalSourceValue
									initialize LocalCrossAccountingEntity
									initialize LocalGeneralLedgerCompany
									initialize ShipFromPartyMasterCleanDocIDXMLBOD
									initialize LocalBODFormattedID
									LocalSourceValue = each.SourceValue
									if (LocalSourceValue entered)
										for each LocalSourceValue split on "<DerivedDelimiter>"
											initialize LocalGeneralLedgerCompany
											LocalGeneralLedgerCompany = each
									if(FSMCleanDocIDGeneralLedgerCompanyRel exists)
										LocalCrossAccountingEntity = each.DestinationValue
										if(LocalCrossAccountingEntity entered)
											if(FSMInboundBODTracker not entered)
												invoke Create FSMInboundBODTracker
													assign result to NewBODTracker
													invoked.Verb 					= 1
													invoked.Noun 					= "ShipFromPartyMaster"					
													invoked.BODDocumentID			= DerivedDocumentID
													invoked.BODVariationID			= DerivedNativeBODVariationID
													invoked.Status					= 1
													invoked.StartDate				= system current timestamp
													invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
													invoked.Direction				= 1
													invoked.BODAccountingEntity		= LocalCrossAccountingEntity
													invoked.Vendor					= Vendor
													invoked.Reference1				= VendorGroup
													invoked.Reference2				= VendorLocation
													invoked.Reference3				= "VendorLocationService"
													invoked.Reference4				= PrmTriggerFrom
													invoked.Reference5				= LocalGeneralLedgerCompany
													initialize invoked.Error			
													initialize invoked.ErrorMessage					
												LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
											LocalBODFormattedID = "infor-nid:" + DerivedTenantID + ":" + LocalCrossAccountingEntity + "::" + DerivedDocumentID + ":" + "?ShipFromPartyMaster&verb=Sync&TrackerID="+ LocalFSMInboundBODTracker
											ShipFromPartyMasterCleanDocIDXMLBOD = template.IONSyncShipFromPartyMasterCleanDocID_VendorLocation_ST document for this instance
											invoke SendShipFromPartyBODNativeLPL
												resume on error
							                   		Error            							= true
							                        ErrorMessage     							= error message
							                if(Error)
												invoke Update FSMInboundBODTrackerRel
													invoked.Error 								= Error
													invoked.ErrorMessage 						= ErrorMessage
													invoked.Status								= 2
													invoked.CloseDate							= system current timestamp
													invoked.BODID								= LocalBODFormattedID
													invoked.BODXML								= ShipFromPartyMasterCleanDocIDXMLBOD
											else
												invoke Update FSMInboundBODTrackerRel
													invoked.Status									= 3
													invoked.CloseDate								= system current timestamp
													invoked.BODID									= LocalBODFormattedID
													invoked.BODXML									= ShipFromPartyMasterCleanDocIDXMLBOD
						else
						if(DerivedTriggerBODBasedOnCrossReference = "N")
							if (BODGeneralLedgerCompanyRel exist)
								for each BODGeneralLedgerCompanyRel
									initialize LocalGeneralLedgerCompany
									initialize ShipFromPartyMasterCleanDocIDXMLBOD
									initialize LocalCrossAccountingEntity
									initialize LocalBODFormattedID
									LocalGeneralLedgerCompany = each.Company
									if(DerivedMultipleFEG = "Y")
										LocalCrossAccountingEntity = DerivedFinanceEnterpriseGroup + DerivedDelimiter + LocalGeneralLedgerCompany
									else
										LocalCrossAccountingEntity = LocalGeneralLedgerCompany
									if(LocalCrossAccountingEntity entered)
										if(FSMInboundBODTracker not entered)
											invoke Create FSMInboundBODTracker
												assign result to NewBODTracker
												invoked.Verb 					= 1
												invoked.Noun 					= "ShipFromPartyMaster"					
												invoked.BODDocumentID			= DerivedDocumentID
												invoked.BODVariationID			= DerivedNativeBODVariationID
												invoked.Status					= 1
												invoked.StartDate				= system current timestamp
												invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
												invoked.Direction				= 1
												invoked.BODAccountingEntity		= LocalCrossAccountingEntity
												invoked.Vendor					= Vendor
												invoked.Reference1				= VendorGroup
												invoked.Reference2				= VendorLocation
												invoked.Reference3				= "VendorLocationService"
												invoked.Reference4				= PrmTriggerFrom
												invoked.Reference5				= LocalGeneralLedgerCompany
												initialize invoked.Error			
												initialize invoked.ErrorMessage					
											LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
										LocalBODFormattedID = "infor-nid:" + DerivedTenantID + ":" + LocalCrossAccountingEntity + "::" + DerivedDocumentID + ":" + "?ShipFromPartyMaster&verb=Sync&TrackerID="+ LocalFSMInboundBODTracker
										ShipFromPartyMasterCleanDocIDXMLBOD = template.IONSyncShipFromPartyMasterCleanDocID_VendorLocation_ST document for this instance
										invoke SendShipFromPartyBODNativeLPL
											resume on error
						                   		Error            							= true
						                        ErrorMessage     							= error message
						                if(Error)
											invoke Update FSMInboundBODTrackerRel
												invoked.Error 								= Error
												invoked.ErrorMessage 						= ErrorMessage
												invoked.Status								= 2
												invoked.CloseDate							= system current timestamp
												invoked.BODID								= LocalBODFormattedID
												invoked.BODXML								= ShipFromPartyMasterCleanDocIDXMLBOD
										else
											invoke Update FSMInboundBODTrackerRel
												invoked.Status									= 3
												invoked.CloseDate								= system current timestamp
												invoked.BODID									= LocalBODFormattedID
												invoked.BODXML									= ShipFromPartyMasterCleanDocIDXMLBOD
					else
					if(DerivedAllCompanyFlag = "Y")
						if(RestartFlag)
							if (BODGeneralLedgerCompanyRel exist)
								LocalAccountingEntity = FSMInboundBODTracker.BODAccountingEntity
								LocalFSMInboundBODTracker		= FSMInboundBODTracker
								invoke Update FSMInboundBODTrackerRel
									invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
									invoked.BODDocumentID			= DerivedDocumentID
									invoked.BODVariationID			= DerivedNativeBODVariationID
									invoked.BODID					= DerivedNativeBODID
									invoked.Status					= 1
									invoked.StartDate				= system current timestamp
									invoked.Direction				= 1
									invoked.BODAccountingEntity		= LocalAccountingEntity
									invoked.Vendor					= Vendor
									invoked.Reference1				= VendorGroup
									invoked.Reference2				= VendorLocation
									invoked.Reference3				= "VendorLocationService"
									invoked.Reference4				= PrmTriggerFrom
									initialize invoked.Error			
									initialize invoked.ErrorMessage
								invoke SendShipFromPartyBODNativeLPL
									resume on error
				                   		Error            							= true
				                        ErrorMessage     							= error message
				                if(Error)
									invoke Update FSMInboundBODTrackerRel
										invoked.Error 								= Error
										invoked.ErrorMessage 						= ErrorMessage
										invoked.Status								= 2
										invoked.CloseDate							= system current timestamp
										invoked.BODID								= DerivedNativeBODID
										invoked.BODXML								= ShipFromPartyMasterServiceXMLBOD
								else
									invoke Update FSMInboundBODTrackerRel
										invoked.Status									= 3
										invoked.CloseDate								= system current timestamp
										invoked.BODID									= DerivedNativeBODID
										invoked.BODXML									= ShipFromPartyMasterServiceXMLBOD
						else
							if (BODGeneralLedgerCompanyRel exist)
								for each BODGeneralLedgerCompanyRel
									LocalCrossAccountingEntity = each.AccountingEntity
									LocalAccountingEntity = VendorGroup.FinanceEnterpriseGroup + DerivedDelimiter + each.AccountingEntity
									if(LocalCrossAccountingEntity entered)
										if(FSMInboundBODTracker not entered)
											invoke Create FSMInboundBODTracker
												assign result to NewBODTracker
												invoked.Verb 					= 1
												invoked.Noun 					= "ShipFromPartyMaster"					
												invoked.BODDocumentID			= DerivedDocumentID
												invoked.BODVariationID			= DerivedNativeBODVariationID
												invoked.Status					= 1
												invoked.StartDate				= system current timestamp
												invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
												invoked.Direction				= 1
												invoked.BODAccountingEntity		= LocalAccountingEntity
												invoked.Vendor					= Vendor
												invoked.Reference1				= VendorGroup
												invoked.Reference2				= VendorLocation
												invoked.Reference3				= "VendorLocationService"
												invoked.Reference4				= PrmTriggerFrom
												initialize invoked.Error			
												initialize invoked.ErrorMessage					
											LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
										invoke SendShipFromPartyBODNativeLPL
											resume on error
						                   		Error            							= true
						                        ErrorMessage     							= error message
						                if(Error)
											invoke Update FSMInboundBODTrackerRel
												invoked.Error 								= Error
												invoked.ErrorMessage 						= ErrorMessage
												invoked.Status								= 2
												invoked.CloseDate							= system current timestamp
												invoked.BODID								= DerivedNativeBODID
												invoked.BODXML								= ShipFromPartyMasterServiceXMLBOD
										else
											invoke Update FSMInboundBODTrackerRel
												invoked.Status									= 3
												invoked.CloseDate								= system current timestamp
												invoked.BODID									= DerivedNativeBODID
												invoked.BODXML									= ShipFromPartyMasterServiceXMLBOD
					else
						LocalAccountingEntity = DerivedAccountingEntityShipFrom
						if(FSMInboundBODTracker not entered)
							invoke Create FSMInboundBODTracker
								assign result to NewBODTracker
								invoked.Verb 					= 1
								invoked.Noun 					= "ShipFromPartyMaster"					
								invoked.BODDocumentID			= DerivedDocumentID
								invoked.BODVariationID			= DerivedNativeBODVariationID
								invoked.Status					= 1
								invoked.StartDate				= system current timestamp
								invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
								invoked.Direction				= 1
								invoked.BODAccountingEntity		= LocalAccountingEntity
								invoked.Vendor					= Vendor
								invoked.Reference1				= VendorGroup
								invoked.Reference2				= VendorLocation
								invoked.Reference3				= "VendorLocationService"
								invoked.Reference4				= PrmTriggerFrom
								initialize invoked.Error			
								initialize invoked.ErrorMessage					
							LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
						else 
							LocalFSMInboundBODTracker		= FSMInboundBODTracker
							invoke Update FSMInboundBODTrackerRel
								invoked.BODDocumentID			= DerivedDocumentID
								invoked.BODVariationID			= DerivedNativeBODVariationID
								invoked.BODID					= DerivedNativeBODID
								invoked.Status					= 1
								invoked.StartDate				= system current timestamp
								invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
								invoked.Direction				= 1
								invoked.BODAccountingEntity		= LocalAccountingEntity
								invoked.Vendor					= Vendor
								invoked.Reference1				= VendorGroup
								invoked.Reference2				= VendorLocation
								invoked.Reference3				= "VendorLocationService"
								invoked.Reference4				= PrmTriggerFrom
								initialize invoked.Error			
								initialize invoked.ErrorMessage
						invoke SendShipFromPartyBODNativeLPL
							resume on error
		                   		Error            							= true
		                        ErrorMessage     							= error message
		                if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 								= Error
								invoked.ErrorMessage 						= ErrorMessage
								invoked.Status								= 2
								invoked.CloseDate							= system current timestamp
								invoked.BODID								= DerivedNativeBODID
								invoked.BODXML								= ShipFromPartyMasterServiceXMLBOD
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Status									= 3
								invoked.CloseDate								= system current timestamp
								invoked.BODID									= DerivedNativeBODID
								invoked.BODXML									= ShipFromPartyMasterServiceXMLBOD
		
		SendRemitToPartyBODNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				if(DerivedCleanDocumentID = "Y")
					send ion bod
						bod is LocalRemitToPartyMasterCleanDocIDXMLBOD
						bod type is "Sync.RemitToPartyMaster"
						accounting entity is LocalCrossAccountingEntity
						document id is DerivedDocumentID
						variation id is	DerivedNativeBODVariationID
				else
					send ion bod
						bod is RemitToLocationServiceXMLBOD
						bod type is "Sync.RemitToPartyMaster"
						accounting entity is DerivedAccountingEntityRemitTo
						document id is DerivedDocumentID
						variation id is DerivedNativeBODVariationID	
				
		TriggerRemitToPartyMasteNativeLPLOutBOD is an Instance Action
			default label is untranslatable
			restricted
			Entrance Rules
			Parameters
				RestartFlag    is Boolean
				PrmTriggerFrom is Alpha 50
			Action Rules
				invoke NativeLPLBODTriggerChecks FSMRemitToPartyBODConfigurationRel
					invoked.PrmVerb 					= 1
					invoked.PrmNoun						= "RemitToPartyMaster"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= PrmTriggerFrom
					invoked.PrmFinanceEnterpriseGroup	= VendorGroup.FinanceEnterpriseGroup
					invoked.PrmBusinessGroup			= VendorGroup
					invoked.PrmMainUserTemplate			= "IONSyncRemitToPartyMaster_VendorLocation_ST"
				NativeLPLRemitToBODTrigger = FSMRemitToPartyBODConfigurationRel.NativeLPLBODTrigger
				LocalBODTrigger = true
				if(VendorGroup.FinanceEnterpriseGroup.BODTrigger and NativeLPLRemitToBODTrigger)
					if(DerivedCleanDocumentID = "Y")
						if(RestartFlag)
							if (BODGeneralLedgerCompanyRel exists)
								initialize LocalGeneralLedgerCompany
								initialize LocalAccountingentityCompany
								initialize LocalRemitToPartyMasterCleanDocIDXMLBOD
								initialize LocalCrossAccountingEntity
								initialize LocalBODFormattedID
								LocalGeneralLedgerCompany = FSMInboundBODTracker.Reference4
								if(DerivedMultipleFEG = "Y")
									LocalAccountingentityCompany = DerivedFinanceEnterpriseGroup + DerivedDelimiter + LocalGeneralLedgerCompany
								else
									LocalAccountingentityCompany = LocalGeneralLedgerCompany
								if(DerivedTriggerBODBasedOnCrossReference = "Y")
									if (FSMCleanDocIDCrossReferenceDetailRel.DestinationValue entered)
										LocalCrossAccountingEntity = FSMCleanDocIDCrossReferenceDetailRel.DestinationValue
								else
									LocalCrossAccountingEntity = LocalGeneralLedgerCompany
								if(LocalCrossAccountingEntity entered)
									LocalFSMInboundBODTracker		= FSMInboundBODTracker
									invoke Update FSMInboundBODTrackerRel
										invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
										invoked.BODDocumentID			= DerivedDocumentID
										invoked.BODVariationID			= DerivedNativeBODVariationID
										invoked.BODID					= LocalBODFormattedID
										invoked.Status					= 1
										invoked.StartDate				= system current timestamp
										invoked.Direction				= 1
										invoked.BODAccountingEntity		= LocalCrossAccountingEntity
										invoked.Vendor					= Vendor
										invoked.Reference1				= VendorGroup
										invoked.Reference2				= VendorLocation
										invoked.Reference3				= PrmTriggerFrom
										invoked.Reference4				= LocalGeneralLedgerCompany
										initialize invoked.Error			
										initialize invoked.ErrorMessage
									LocalBODFormattedID = "infor-nid:" + DerivedTenantID + ":" + LocalCrossAccountingEntity + "::" + DerivedDocumentID + ":" + "?RemitToPartyMaster&verb=Sync&TrackerID="+ LocalFSMInboundBODTracker
									LocalRemitToPartyMasterCleanDocIDXMLBOD = template.IONRemitToPartyMasterCleanDocID_VendorLocation_ST document for this instance
									invoke SendRemitToPartyBODNativeLPL
										resume on error
											Error            							= true
											ErrorMessage     							= error message
									if(Error)
										invoke Update FSMInboundBODTrackerRel
											invoked.Error 								= Error
											invoked.ErrorMessage 						= ErrorMessage
											invoked.Status								= 2
											invoked.CloseDate							= system current timestamp
											invoked.BODID								= LocalBODFormattedID
											invoked.BODXML								= LocalRemitToPartyMasterCleanDocIDXMLBOD
									else
										invoke Update FSMInboundBODTrackerRel
											invoked.Status									= 3
											invoked.CloseDate								= system current timestamp
											invoked.BODID									= LocalBODFormattedID
											invoked.BODXML									= LocalRemitToPartyMasterCleanDocIDXMLBOD
						else
						if(DerivedTriggerBODBasedOnCrossReference = "Y")
							if(FSMCleanDocIDGLCCrossReferenceDetailRel exists)
								for each FSMCleanDocIDGLCCrossReferenceDetailRel
									initialize LocalSourceValue
									initialize LocalCrossAccountingEntity
									initialize LocalGeneralLedgerCompany
									initialize LocalRemitToPartyMasterCleanDocIDXMLBOD
									initialize LocalBODFormattedID
									LocalSourceValue = each.SourceValue
									if (LocalSourceValue entered)
										for each LocalSourceValue split on "<DerivedDelimiter>"
											initialize LocalGeneralLedgerCompany
											LocalGeneralLedgerCompany = each
									if(FSMCleanDocIDGeneralLedgerCompanyRel exists)
										LocalCrossAccountingEntity = each.DestinationValue
										if(LocalCrossAccountingEntity entered)
											if(FSMInboundBODTracker not entered)
												invoke Create FSMInboundBODTracker
													assign result to NewBODTracker
													invoked.Verb 					= 1
													invoked.Noun 					= "RemitToPartyMaster"					
													invoked.BODDocumentID			= DerivedDocumentID
													invoked.BODVariationID			= DerivedNativeBODVariationID
													invoked.Status					= 1
													invoked.StartDate				= system current timestamp
													invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
													invoked.Direction				= 1
													invoked.BODAccountingEntity		= LocalCrossAccountingEntity
													invoked.Vendor					= Vendor
													invoked.Reference1				= VendorGroup
													invoked.Reference2				= VendorLocation
													invoked.Reference3				= PrmTriggerFrom
													invoked.Reference4				= LocalGeneralLedgerCompany
													initialize invoked.Error			
													initialize invoked.ErrorMessage					
												LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
											LocalBODFormattedID = "infor-nid:" + DerivedTenantID + ":" + LocalCrossAccountingEntity + "::" + DerivedDocumentID + ":" + "?RemitToPartyMaster&verb=Sync&TrackerID="+ LocalFSMInboundBODTracker
											LocalRemitToPartyMasterCleanDocIDXMLBOD = template.IONRemitToPartyMasterCleanDocID_VendorLocation_ST document for this instance
											invoke SendRemitToPartyBODNativeLPL
												resume on error
													Error            							= true
													ErrorMessage     							= error message
											if(Error)
												invoke Update FSMInboundBODTrackerRel
													invoked.Error 								= Error
													invoked.ErrorMessage 						= ErrorMessage
													invoked.Status								= 2
													invoked.CloseDate							= system current timestamp
													invoked.BODID								= LocalBODFormattedID
													invoked.BODXML								= LocalRemitToPartyMasterCleanDocIDXMLBOD
											else
												invoke Update FSMInboundBODTrackerRel
													invoked.Status									= 3
													invoked.CloseDate								= system current timestamp
													invoked.BODID									= LocalBODFormattedID
													invoked.BODXML									= LocalRemitToPartyMasterCleanDocIDXMLBOD
						else
						if(DerivedTriggerBODBasedOnCrossReference = "N")
							if (BODGeneralLedgerCompanyRel exists)
								for each BODGeneralLedgerCompanyRel
									initialize LocalGeneralLedgerCompany
									initialize LocalRemitToPartyMasterCleanDocIDXMLBOD
									initialize LocalCrossAccountingEntity
									initialize LocalBODFormattedID
									LocalGeneralLedgerCompany = each.Company
									if(DerivedMultipleFEG = "Y")
										LocalCrossAccountingEntity = DerivedFinanceEnterpriseGroup + DerivedDelimiter + LocalGeneralLedgerCompany
									else
										LocalCrossAccountingEntity = LocalGeneralLedgerCompany
									if(LocalCrossAccountingEntity entered)
										if(FSMInboundBODTracker not entered)
											invoke Create FSMInboundBODTracker
												assign result to NewBODTracker
												invoked.Verb 					= 1
												invoked.Noun 					= "RemitToPartyMaster"					
												invoked.BODDocumentID			= DerivedDocumentID
												invoked.BODVariationID			= DerivedNativeBODVariationID
												invoked.Status					= 1
												invoked.StartDate				= system current timestamp
												invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
												invoked.Direction				= 1
												invoked.BODAccountingEntity		= LocalCrossAccountingEntity
												invoked.Vendor					= Vendor
												invoked.Reference1				= VendorGroup
												invoked.Reference2				= VendorLocation
												invoked.Reference3				= PrmTriggerFrom
												invoked.Reference4				= LocalGeneralLedgerCompany
												initialize invoked.Error			
												initialize invoked.ErrorMessage					
											LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
										LocalBODFormattedID = "infor-nid:" + DerivedTenantID + ":" + LocalCrossAccountingEntity + "::" + DerivedDocumentID + ":" + "?RemitToPartyMaster&verb=Sync&TrackerID="+ LocalFSMInboundBODTracker
										LocalRemitToPartyMasterCleanDocIDXMLBOD = template.IONRemitToPartyMasterCleanDocID_VendorLocation_ST document for this instance
										invoke SendRemitToPartyBODNativeLPL
											resume on error
												Error            							= true
												ErrorMessage     							= error message
										if(Error)
											invoke Update FSMInboundBODTrackerRel
												invoked.Error 								= Error
												invoked.ErrorMessage 						= ErrorMessage
												invoked.Status								= 2
												invoked.CloseDate							= system current timestamp
												invoked.BODID								= LocalBODFormattedID
												invoked.BODXML								= LocalRemitToPartyMasterCleanDocIDXMLBOD
										else
											invoke Update FSMInboundBODTrackerRel
												invoked.Status									= 3
												invoked.CloseDate								= system current timestamp
												invoked.BODID									= LocalBODFormattedID
												invoked.BODXML									= LocalRemitToPartyMasterCleanDocIDXMLBOD
					else
					if(DerivedRemitToPartyAllCompanyFlag = "Y")
						if(RestartFlag)
							if (BODGeneralLedgerCompanyRel exist)
								LocalAccountingEntity = VendorGroup.FinanceEnterpriseGroup + DerivedDelimiter + FSMInboundBODTracker.Reference4
								LocalFSMInboundBODTracker		= FSMInboundBODTracker
								invoke Update FSMInboundBODTrackerRel
									invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
									invoked.BODDocumentID			= DerivedDocumentID
									invoked.BODVariationID			= DerivedNativeBODVariationID
									invoked.BODID					= DerivedNativeRemitToPartyBODID
									invoked.Status					= 1
									invoked.StartDate				= system current timestamp
									invoked.Direction				= 1
									invoked.BODAccountingEntity		= LocalAccountingEntity
									invoked.Vendor					= Vendor
									invoked.Reference1				= VendorGroup
									invoked.Reference2				= VendorLocation
									invoked.Reference3				= PrmTriggerFrom
									initialize invoked.Error			
									initialize invoked.ErrorMessage
								invoke SendRemitToPartyBODNativeLPL
									resume on error
										Error            							= true
										ErrorMessage     							= error message
								if(Error)
									invoke Update FSMInboundBODTrackerRel
										invoked.Error 								= Error
										invoked.ErrorMessage 						= ErrorMessage
										invoked.Status								= 2
										invoked.CloseDate							= system current timestamp
										invoked.BODID								= DerivedNativeRemitToPartyBODID
										invoked.BODXML								= RemitToLocationServiceXMLBOD
								else
									invoke Update FSMInboundBODTrackerRel
										invoked.Status									= 3
										invoked.CloseDate								= system current timestamp
										invoked.BODID									= DerivedNativeRemitToPartyBODID
										invoked.BODXML									= RemitToLocationServiceXMLBOD
						else
							if (BODGeneralLedgerCompanyRel exist)
								for each BODGeneralLedgerCompanyRel
									LocalCrossAccountingEntity = each.AccountingEntity
									LocalAccountingEntity = VendorGroup.FinanceEnterpriseGroup + DerivedDelimiter + each.AccountingEntity
									if(LocalCrossAccountingEntity entered)
										if(FSMInboundBODTracker not entered)
											invoke Create FSMInboundBODTracker
												assign result to NewBODTracker
												invoked.Verb 					= 1
												invoked.Noun 					= "RemitToPartyMaster"					
												invoked.BODDocumentID			= DerivedDocumentID
												invoked.BODVariationID			= DerivedNativeBODVariationID
												invoked.Status					= 1
												invoked.StartDate				= system current timestamp
												invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
												invoked.Direction				= 1
												invoked.BODAccountingEntity		= LocalAccountingEntity
												invoked.Vendor					= Vendor
												invoked.Reference1				= VendorGroup
												invoked.Reference2				= VendorLocation
												invoked.Reference3				= PrmTriggerFrom
												invoked.Reference4				= LocalCrossAccountingEntity
												initialize invoked.Error			
												initialize invoked.ErrorMessage					
											LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
										invoke SendRemitToPartyBODNativeLPL
											resume on error
												Error            							= true
												ErrorMessage     							= error message
										if(Error)
											invoke Update FSMInboundBODTrackerRel
												invoked.Error 								= Error
												invoked.ErrorMessage 						= ErrorMessage
												invoked.Status								= 2
												invoked.CloseDate							= system current timestamp
												invoked.BODID								= DerivedNativeRemitToPartyBODID
												invoked.BODXML								= RemitToLocationServiceXMLBOD
										else
											invoke Update FSMInboundBODTrackerRel
												invoked.Status									= 3
												invoked.CloseDate								= system current timestamp
												invoked.BODID									= DerivedNativeRemitToPartyBODID
												invoked.BODXML									= RemitToLocationServiceXMLBOD
					else
						LocalAccountingEntity = DerivedAccountingEntityShipFrom
						if(FSMInboundBODTracker not entered)
							invoke Create FSMInboundBODTracker
								assign result to NewBODTracker
								invoked.Verb 					= 1
								invoked.Noun 					= "RemitToPartyMaster"					
								invoked.BODDocumentID			= DerivedDocumentID
								invoked.BODVariationID			= DerivedNativeBODVariationID
								invoked.Status					= 1
								invoked.StartDate				= system current timestamp
								invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
								invoked.Direction				= 1
								invoked.BODAccountingEntity		= LocalAccountingEntity
								invoked.Vendor					= Vendor
								invoked.Reference1				= VendorGroup
								invoked.Reference2				= VendorLocation
								invoked.Reference3				= PrmTriggerFrom
								initialize invoked.Error			
								initialize invoked.ErrorMessage					
							LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
						else 
							LocalFSMInboundBODTracker		= FSMInboundBODTracker
							invoke Update FSMInboundBODTrackerRel
								invoked.BODDocumentID			= DerivedDocumentID
								invoked.BODVariationID			= DerivedNativeBODVariationID
								invoked.Status					= 1
								invoked.StartDate				= system current timestamp
								invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
								invoked.Direction				= 1
								invoked.BODAccountingEntity		= LocalAccountingEntity
								invoked.Vendor					= Vendor
								invoked.Reference1				= VendorGroup
								invoked.Reference2				= VendorLocation
								invoked.Reference3				= PrmTriggerFrom
								initialize invoked.Error			
								initialize invoked.ErrorMessage
						invoke SendRemitToPartyBODNativeLPL
							resume on error
								Error            							= true
								ErrorMessage     							= error message
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 								= Error
								invoked.ErrorMessage 						= ErrorMessage
								invoked.Status								= 2
								invoked.CloseDate							= system current timestamp
								invoked.BODID								= DerivedNativeRemitToPartyBODID
								invoked.BODXML								= RemitToLocationServiceXMLBOD
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Status									= 3
								invoked.CloseDate								= system current timestamp
								invoked.BODID									= DerivedNativeRemitToPartyBODID
								invoked.BODXML									= RemitToLocationServiceXMLBOD
				
		Purge is a Purge Action
			restricted
			Entrance Rules
				invoke Purge VendorAddressesRel
				if (VendorLocation.OnHold)
					invoke Purge PayablesOnHoldPurgeRel							
FileCreationLogic.VendorLocation is a BusinessClass

	Persistent Fields
	
	Local Fields

		LocalFinanceEnterpriseGroup is like FinanceEnterpriseGroup
		LocalFileCreationSetup		is like FileCreationSetup
		LocalVendorGroup			is like VendorGroup
		LocalVendor					is like Vendor
					
	Relations

		FileCreationRecordNotProcessedRel
			one-to-many relation to FileCreationRecord
			Field Mapping uses ByStatus
				related.FinanceEnterpriseGroup 	= LocalFinanceEnterpriseGroup
				related.FileCreationSetup		= LocalFileCreationSetup
				related.Status					= 1
				related.Key1					= LocalVendorGroup
				related.Key2					= LocalVendor

		FileCreationRecordErrorRel
			one-to-many relation to FileCreationRecord
			Field Mapping uses ByStatus
				related.FinanceEnterpriseGroup 	= LocalFinanceEnterpriseGroup
				related.FileCreationSetup		= LocalFileCreationSetup
				related.Status					= 2
				related.Key1					= LocalVendorGroup
				related.Key2					= LocalVendor
		
	Derived Fields
				
	Actions
	
		GeneratePreviewRecordsForRunGroup is a Set Action
			restricted
			synchronized on untranslatable:"VendorLocation_GeneratePreviewRecordsForRunGroup_<FinanceEnterpriseGroupPrm>_<PrmRunGroup>"

			Sort Order is primary
			
			Parameters
				FinanceEnterpriseGroupPrm		is a FinanceEnterpriseGroup
				FileCreationSetupPrm	is a FileCreationSetup
				BeginTimeStamp			is TimeStamp
				EndTimeStamp			is TimeStamp
				PrmNumberOfRunGroups	is Numeric 3
				PrmRunGroup				is Numeric 3

			Local Fields
				InVendorGroup					is Boolean
				LocalVendorGroupSelection		is a Vendor group in subject FileCreationVendor

			Instance Selection
				where (VendorGroup.FinanceEnterpriseGroup = FinanceEnterpriseGroupPrm
				and    (PrmNumberOfRunGroups <= 1
				or      Vendor % PrmNumberOfRunGroups = PrmRunGroup)
				and	   update stamp > BeginTimeStamp
				and	   update stamp <= EndTimeStamp)

			Action Rules
				Instance Rules
					LocalFinanceEnterpriseGroup		= FinanceEnterpriseGroupPrm
					LocalFileCreationSetup	= FileCreationSetupPrm
					LocalVendorGroup		= VendorGroup
					LocalVendor		= Vendor
					if (FileCreationRecordNotProcessedRel not exist
					and	FileCreationRecordErrorRel not exist)
						LocalVendorGroupSelection = FileCreationSetupPrm.EligibilityGroup
						if (LocalVendorGroupSelection entered)
							InVendorGroup = false
							if (Vendor within LocalVendorGroupSelection)
								InVendorGroup = true

						if (LocalVendorGroupSelection not entered
						or	InVendorGroup)
												
							invoke Create FileCreationRecord
								invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroupPrm
								invoked.FileCreationSetup	= FileCreationSetupPrm
								invoked.Key1				= VendorGroup
								invoked.Key2				= Vendor
								invoked.SystemTimeStamp		= EndTimeStamp
								invoked.EffectiveDate		= system current corporate date
								invoked.Status				= 1
