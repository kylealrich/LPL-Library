CashLedgerReturnedPayment is a BusinessClass
    owned by cb
    prefix is CRP
    classic name is CBRETPMT

    Ontology
        symbolic key is CashLedgerReturnedPayment
            classic set name is CRPSET1
            classic name for CashLedgerReturnedPayment.BankTransactionCode is BANK-INST-CODE
            classic name for CashLedgerReturnedPayment.TransactionIDNumber is TRANS-IDENT

    Patterns
        implements StaticJava
        disable AuditIndex
		enable explicit context override        

    Persistent Fields
    	CashManagementAccount
        TransactionNumber
            classic name is TRANS-NBR
        Status                              is Numeric size 1
            classic name is REC-STATUS
            States
                Unreleased 		value is 0
                Released   		value is 1
                PendingApproval	value is 2
        Company                             is a  CompanyIsolated  
        ReturnDate                          is an ExchangeDate	
            classic name is RET-DATE
		CurrencyTable						
        BankAccountDepositAmount            is an InternationalAmount
            classic name is DEPOSIT-AMOUNT
        DepositDate                         is Date
        BankAccountReturnAmount             is a  CurrencyAmount 
            classic name is RETURN-AMOUNT
        CompanyReturnAmount                 is a  FinanceCurrencyAmount  
            classic name is BASE-RET-AMT
        ToCompanyReturnAmount               is an InternationalAmount	
            classic name is TO-RET-AMT		
        TransactionCurrencyNumberOfDecimals is an AcctNd
            sql name is TCurrencyNumberOfDecimals
            classic name is TRAN-ND
        BaseCurrencyNumberOfDecimals        is an AcctNd
            classic name is BASE-ND
        Currency							is a FromCurrency	
            classic name is CURRENCY-CODE

        DepositJournalBook                  is a JournalBook
        	context of Company.OrigCompany
            classic name is DEP-JBK-NBR
            restricted
        DepositJournalBookSequence          is a JbkSeqNbr
            classic name is DEP-JBK-SEQ
            restricted
        PostDate                            is Date
        Description
        OriginalDepositBankTransactionCode  is a DepositBankTransactionCode
            sql name is ODepositBankTransactionCode
            classic name is DEP-BANK-INST
        DepositType                         is AlphaUpper size 1
            States
                ManualPayment           value is blank
                    default label is "Manual payment"
                WirePayment             value is "1"
                    default label is "Wire payment"
                CreditCard              value is "2"
                    default label is "Credit card"
                Lockbox                 value is "3"
                ElectronicFundsTransfer value is "4"
                    default label is "Electronic funds transfer"
                Rebate                  value is "5"
        DepositNumber                       is like TransactionNumber
            classic name is DEPOSIT-NBR
        ElectronicFundsTransferNumber       is like TransactionNumber
            classic name is EFT-NUMBER


        BankExpenseData			  			is a FinanceCurrencyAmountGroup  
        	classic name for BankExpenseData.CurrencyAmount is BEXP-TRAN-AMT 
        DepositTransactionID                is a TransactionIDNumber
            classic name is DEP-TRANS-IDEN
		TransactionData1                    is a TransactionData
            classic name is USER-FIELD1
		TransactionData2                    is a TransactionData
            classic name is USER-FIELD2
		TransactionData3                    is a TransactionData
            classic name is USER-FIELD3
		TransactionData4                    is a TransactionData
            classic name is USER-FIELD4
        LastDistributionSequence            is a SeqNbr
            classic name is LAST-DIST-SEQ
        	disable Auditing
        GeneralLedgerSourceCode				is a GeneralLedgerEvent
            classic name is SOURCE-CODE
            default label is "SourceCode"
        CashLedgerStatement					is like CashLedgerStatement
            classic name is RECON-STMT-NBR
        BankExpenseAccount                  is a TransactionCodeBlock
            classic name for BankExpenseAccount.ToAccountingEntity is BEXP-COMPANY
            classic name for BankExpenseAccount.AccountingUnit is BEXP-ACCT-UNIT
            classic name for BankExpenseAccount.GeneralLedgerChartAccount is BEXP-ACCOUNT

        CompanyCashCode
        	context of Company.OrigCompany
		CashCodeTransactionCode
			context of CashLedgerReturnedPayment.BankTransactionCode
		BudgetEditProcessing 				is Numeric size 1
			States
                NotInProcessing value is 0
                InProcess  		value is 1
                Failure    		value is 2
                Success    		value is 3
 		OriginatingImportRun				is a CashTransactionImportResult
			delete ignored
		ImportInProcess						is Boolean	
		CashLedgerMassReleaseResult			is Numeric size 12		
		CommentText		
		ApprovalCostCenter					is like AccountingUnit		
		ApprovalCategory					
		ApprovalCode
		ApprovalLevel						is Numeric 8
		ReassignToApprovalLevel				is an ApprovalCodeResource
		Approver							is a FinanceResource
		ApproverTeam						is a FinanceTeamField
		               	
	Local Fields
		CashLedgerSourceRecord
		NewCashLedgerTransaction    			is a  CashLedgerTransaction view
		SavedCashLedgerTransaction				is a  CashLedgerTransaction
		LocalFinanceCurrencyAmount				is a  FinanceCurrencyAmount
		LocalFinanceCurrencyAmountGroup			is a  FinanceCurrencyAmountGroup
		DepositFound							is Boolean
		LocalActionUnreleaseToReleaseBankExp	is Boolean
		LocalInterfaceAsPosted					is Boolean
		AutoNumberByCompany						is like GeneralLedgerCompany
		AutoNumberByCashCode					is like CashCode
		AutoNumberByBankTransactionCode			is like BankTransactionCode
		LocalBankTransactionCode				is like BankTransactionCode
		LocalCashLedgerAutoTranNumber			is a CashLedgerAutoTranNumber view
		LocalTransactionNumber					is a TransactionNumber
		DuplicateTranNumberFound				is Boolean
		AutoNumberingAction			 			is Numeric 1
			States
				OverrideNumberWithAnAutoGeneratedNumber	value is 1
				BypassAutoTransactionNumbering			value is 2
		LocalCashCode							is like CashCode
		LocalCashCodeGroup						is like CashCodeGroup
		LocalJournalizeGroup					is like JournalizeGroup

		LocalCalculateCashFinanceStructure		is a CalculateCashFinanceStructure
		LocalAnswer 							is Alpha size 1
		LocalToAccountingEntity					is like AccountingEntity
		LocalAccountingUnit						is like AccountingUnit
		LocalFinanceDimension1					is a FinanceDimension1
		LocalCashManagementGroup 				is like CashManagementGroup
		LocalCompany							is like Company
		LocalCashLedgerJobResult				is a CashLedgerJobResult
		LocalTransactionCount           		is Numeric size 6
		LocalApprovalLevel						is Numeric 8
		LocalApprover							is a FinanceResource
		LocalApproverTeam						is a FinanceTeamField		
		LocalApproverList						is Alpha 250
		LocalFirstApproverAssigned				is Boolean
		LocalRejectReason						is AlphaUpper 20
		LocalRejectComment						is Alpha size up to 500
			
    Conditions
    	RecordExists
			restricted
			when (CashLedgerReturnedPayment exists)

		CashLedgerTransactionIdentifierExists
			restricted
			when (DerivedTransactionIdentifier entered)
			
        IsUnreleased
        	restricted
            when (Status.Unreleased)

        IsUnreleasedForPeriodClose	
        	restricted
            when (Status.Unreleased
            and   PostDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 

		OutstandingReturnedPaymentsExist	
			restricted
			when (IsUnreleasedForPeriodClose)
			
		IsReleased
        	restricted
            when (Status.Released)
		
		IsCashLedgerTransactionsDeposit
			restricted
			when (CashLedgerTransactionDepositsRel exist)

		BEXPAmountNotEmpty
			restricted
			when (BankExpenseData entered)

		IsCashManagementTransaction
			restricted
			when (DepositType.ManualPayment
			or DepositType.WirePayment
			or DepositType.Lockbox
			or DepositType.Rebate)
		
		IsEFTTransactions
			restricted
			when (DepositType.CreditCard
			or DepositType.ElectronicFundsTransfer)	            

		BudgetEditingInformationExists
			restricted
			when (BudgetTemplateGroupTotalRel exists)
		
		BudgetEditErrorExists
			when (HeaderBudgetEditErrorRel exists
			or    DistributionBudgetEditErrorRel exists)
			
		HeaderBudgetEditErrorExists
			restricted
			when (HeaderBudgetEditErrorRel exists)
			
		DistributionBudgetEditErrorExists
			restricted
			when (DistributionBudgetEditErrorRel exists)
		
		BudgetEditInProgress
			restricted
        	when (BudgetEditProcessing.InProcess)
        
        BudgetEditFailure
        	restricted
    		when (BudgetEditProcessing.Failure)

		GLCommitRelExists
			restricted
			when (GLCommitRel exists)

		OpenGLCommitRelExists
			restricted
			when (OpenGLCommitDrillRel exists)
			
		IsValidForActorContext
			restricted
			when ((actor.context.FinanceEnterpriseGroup != ""
			and   CashManagementGroup = actor.context.FinanceEnterpriseGroup)
			or   (actor.context.FinanceEnterpriseGroup = ""))

		CanRelease
			restricted
			when (Status.Unreleased
			and   !BudgetEditInProgress			
			and	  !ImportInProcess
			and   !CashManagementGroup.CashLedgerReturnedPaymentApprovalRequired)

		AutoNumberingAllowed	
			restricted
			when (CashManagementGroup.AutoTranNumberForReturnedPaymentForm
			and   ((CashManagementGroup.AutoTranNumberByCompany
			and     Company.OrigCompany.AutoTransactionNumbering)
			or     (CashManagementGroup.AutoTranNumberByCashCode
			and     CashCode.AutoTransactionNumbering)
			or     (CashManagementGroup.AutoTranNumberByBankTransactionCode
			and     CashLedgerReturnedPayment.BankTransactionCode.AutoTransactionNumbering)
			or     (CashManagementGroup.AutoTranNumberByCashCodeBankTranCode
			and     CashLedgerReturnedPayment.BankTransactionCode.AutoTransactionNumbering
			and     CashCode.AutoTransactionNumbering)))
			
		OutOfBalance
			restricted
			when (Status.Unreleased
			and   BalanceAmount	entered)

		ReturnedPaymentErrorsExist	
			when (CashLedgerTransactionErrorRel exists)

		MassReleaseErrorExists	
			when (CashLedgerTransactionErrorMassReleaseRel exists)

		IsCashReceiptVisible
			restricted
			when (DepositNumber entered)
										

		CanSubmitForApproval
			restricted
			when (Status.Unreleased
			and   !ImportInProcess
			and   !BudgetEditInProgress			
			and   CashManagementGroup.CashLedgerReturnedPaymentApprovalRequired)

 		RejectCashLedgerReturnedPaymentReasonCodeRequired
 			restricted
			when (CashManagementGroup.RejectCashLedgerReturnedPaymentReasonCodeRequired)

		CanManuallyApproveOrReject
			restricted
			when (Status.PendingApproval
			and   !BudgetEditInProgress	)		

		HasApprovalComments
			restricted
			when (CashLedgerRetPaymentReasonCodeUsage set exists)			
			
		CanUpdateComments
			restricted
			when (!ImportInProcess
			and   Status >  0)

		ApprovalCodeRequired
			restricted
			when (CashManagementGroup.CashLedgerReturnedPaymentApprovalRequired
			and   !CashManagementGroup.ApprovalCodesNotUsedForReturnedPayments)
		
		IsPendingApproval
			restricted
			when (Status.PendingApproval)
										
		HasWorkunit
			restricted
			when (PfiWorkunitRel exists)
										
	Relations
        CashLedgerGLDistributionsRel
            classic name is CBDISTRIB
            one-to-many relation to CashLedgerGLDistribution
            Field Mapping uses symbolic key
            	related.CashManagementGroup 	= CashManagementGroup	
                related.CashCode				= CashCode
        		related.CashLedgerSourceRecord	= "CRP"
            Instance Selection
                where (related.CashLedgerGLDistribution.BankTransactionCode = CashLedgerReturnedPayment.BankTransactionCode
                and   related.CashLedgerGLDistribution.TransactionIDNumber = CashLedgerReturnedPayment.TransactionIDNumber)

        CashLedgerEFTTransactionRel
            classic name is CBFTTRANS
            one-to-one relation to CashLedgerElectronicFundsTransferTransaction
            required
            Field Mapping uses symbolic key
            	related.CashManagementGroup 											 = CashManagementGroup	
                related.CashCode                                            			 = CashCode
                related.CashLedgerElectronicFundsTransferTransaction.BankTransactionCode = CashLedgerReturnedPayment.BankTransactionCode
                related.CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber = CashLedgerReturnedPayment.TransactionIDNumber

        CashLedgerTransactionRel
            classic name is CBTRANS
            one-to-one relation to CashLedgerTransaction
            required
            Field Mapping uses symbolic key
            	related.CashManagementGroup		= CashManagementGroup	
                related.BankTransactionCode   	= CashLedgerReturnedPayment.BankTransactionCode
         		related.CashLedgerSourceRecord	= "CRP"
                related.CashLedgerTransaction 	= CashLedgerReturnedPayment.TransactionIDNumber
                
        CashLedgerTransactionPurgeRel
            classic name is CBTRANS
            one-to-many relation to CashLedgerTransaction
            required
            Field Mapping uses symbolic key
            	related.CashManagementGroup		= CashManagementGroup	
                related.BankTransactionCode   	= CashLedgerReturnedPayment.BankTransactionCode
         		related.CashLedgerSourceRecord	= "CRP"
                related.CashLedgerTransaction 	= CashLedgerReturnedPayment.TransactionIDNumber
            Instance Selection
        		where (related.Status.Reconciled
        		or	   related.Status.Voided
        		or	   related.Status.StopPayment
        		or	   related.Status.WriteOff)

		CashLedgerGLTypeEDistributionsERel
			one-to-many relation to CashLedgerGLDistribution
			Field Mapping uses Alternate1
				related.CashManagementGroup 							= CashManagementGroup
				related.CashCode 										= CashCode
        		related.CashLedgerSourceRecord							= "CRP"
				related.CashLedgerGLDistribution.BankTransactionCode 	= CashLedgerReturnedPayment.BankTransactionCode
				related.CashLedgerGLDistribution.TransactionIDNumber	= CashLedgerReturnedPayment.TransactionIDNumber
				related.CashLedgerGLDistribution.DistributionType		= DistType.Entry
		
		CashLedgerEFTTransactionReferencesRel	
			one-to-many relation to CashLedgerElectronicFundsTransferTransaction
			Field Mapping uses Set2
				related.CashManagementGroup												 = CashManagementGroup
                related.CashCode                                            			 = CashCode
                related.CashLedgerElectronicFundsTransferTransaction.BankTransactionCode = OriginalDepositBankTransactionCode
                related.Reference														 = ElectronicFundsTransferNumber

		CashLedgerTransactionsTransNbrRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set6
				related.CashManagementGroup		= CashManagementGroup	
				related.CashCode   				= CashCode
				related.BankTransactionCode 	= CashLedgerReturnedPayment.BankTransactionCode
				related.TransactionNumber   	= TransactionNumber	
		
		CashLedgerTransactionDepositsRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set6
				related.CashManagementGroup		= CashManagementGroup	
				related.CashCode   				= CashCode
				related.BankTransactionCode 	= OriginalDepositBankTransactionCode
				related.TransactionNumber   	= DepositNumber
		
		CashLedgerFundTransferHeaderRel
			one-to-one relation to CashLedgerFundTransferHeader
			Field Mapping uses symbolic key
				related.CashManagementGroup 			= CashManagementGroup	
				related.CashCode 						= CashCode		
				related.CashLedgerFundTransferHeader	= TransactionNumber

		CashLedgerFundTransferDetailsRel
			one-to-many relation to CashLedgerFundTransferDetail
			Field Mapping uses Set3
				related.CashLedgerFundTransferDetail.DetailCashCode = CashCode
				related.CashLedgerFundTransferHeader				= TransactionNumber
			Instance Selection
				where (related.BankTransactionCode = CashLedgerReturnedPayment.BankTransactionCode)	

		CashLedgerReturnedPaymentsRel
			one-to-many relation to CashLedgerReturnedPayment
			Field Mapping uses Set2
				related.CashCode										= CashCode
				related.CashLedgerReturnedPayment.BankTransactionCode	= CashLedgerReturnedPayment.BankTransactionCode
				related.TransactionNumber 								= TransactionNumber		
			Instance Selection
				where (related.CashLedgerReturnedPayment.TransactionIDNumber != CashLedgerReturnedPayment.TransactionIDNumber)
				






















                                
		CashLedgerEFTTransactionIdRel
			one-to-one relation to CashLedgerElectronicFundsTransferTransaction
			Field Mapping uses symbolic key
				related.CashManagementGroup												 = CashManagementGroup
                related.CashCode                                            			 = CashCode
                related.CashLedgerElectronicFundsTransferTransaction.BankTransactionCode = OriginalDepositBankTransactionCode
                related.CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber = ElectronicFundTransactionId.TransactionIDNumber

        CashLedgerGLDistributionsUnReleasedRel
        	one-to-many relation to CashLedgerGLDistribution
        	Field Mapping uses Alternate1
        		related.CashManagementGroup 							= CashManagementGroup
        		related.CashCode						 				= CashCode
        		related.CashLedgerSourceRecord							= "CRP"
        		related.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerReturnedPayment.BankTransactionCode
            	related.CashLedgerGLDistribution.TransactionIDNumber	= CashLedgerReturnedPayment.TransactionIDNumber
            	related.CashLedgerGLDistribution.DistributionType 	 	= DistType.Entry
        	Instance Selection
        		where (related.Status.Unreleased)

 		ReleasedDistributionsRel
            one-to-many relation to CashLedgerGLDistribution
            Field Mapping uses Alternate1 
            	related.CashManagementGroup 							= CashManagementGroup
            	related.CashCode										= CashCode
            	related.CashLedgerSourceRecord							= "CRP"
                related.CashLedgerGLDistribution.BankTransactionCode 	= CashLedgerReturnedPayment.BankTransactionCode
                related.CashLedgerGLDistribution.TransactionIDNumber	= CashLedgerReturnedPayment.TransactionIDNumber
			Instance Selection
                where (related.Status.Released)
                        			        		
		CashCodeTransactionCodeRel
			one-to-many relation to CashCodeTransactionCode
			Field Mapping uses symbolic key
				related.CashManagementGroup	= CashManagementGroup
				related.CashCode			= CashCode
			Instance Selection
				where (related.CashCodeTransactionCode.Active	 	= true)
				
		CompanySystemClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode		= "CB"
				related.Company						= Company

		HeaderBudgetEditErrorRel
			one-to-many relation to BudgetEditError
			Field Mapping uses ByBudgetGroup
				related.FinanceEnterpriseGroup			= CashManagementGroup
				related.BudgetEditError.BudgetEditGroup	= UniqueID

		DistributionBudgetEditErrorRel
			one-to-many relation to BudgetEditError
			Field Mapping uses ByHeaderUniqueID
				related.FinanceEnterpriseGroup			= CashManagementGroup
				related.HeaderUniqueID                  = UniqueID

		CashCodeFundEditRel
			one-to-many relation to CashCodeFundEdit
			Field Mapping uses ByOriginatingTransaction
		 		related.CashManagementGroup		= CashManagementGroup
		  		related.OriginatingTransaction	= reference to this instance

		CashCodeFundEditByFundRel
			one-to-one relation to CashCodeFundEdit
			Field Mapping uses ByOriginatingTransaction
		 		related.CashManagementGroup		= CashManagementGroup
		  		related.OriginatingTransaction	= reference to this instance
		 		related.CashCode				= CashCode
		 		related.AccountingEntity		= LocalToAccountingEntity
		 		related.AccountingUnit			= LocalAccountingUnit
		 		related.FinanceDimension1		= LocalFinanceDimension1

		ExceedesCashCodeFundBalanceRel
			one-to-many relation to CashCodeFundEdit
			Field Mapping uses ByExceedesFundBalance
		 		related.CashManagementGroup		= CashManagementGroup
		  		related.OriginatingTransaction	= reference to this instance
		 		related.ExceedesFundBalance		= true

		CashCodeFundRel
			one-to-one relation to CashCodeFund
			Field Mapping uses ByAccountingEntityFund
				related.CashManagementGroup		= CashManagementGroup
				related.CashCode				= CashCode
				related.AccountingEntity		= LocalToAccountingEntity
		 		related.AccountingUnit			= LocalAccountingUnit
				related.FinanceDimension1		= LocalFinanceDimension1

		GeneralLedgerSystemCodeRel		
			one-to-one relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.GeneralLedgerSystemCode	= "CB"	

		GLCommitRel		
			one-to-many relation to GLCommit
			Field Mapping uses BySystemAndHeaderUniqueID	
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.HeaderUniqueID	= UniqueID



		OpenGLCommitDrillRel	
			one-to-many relation to GLCommit
			Field Mapping uses BySystemAndHeaderUniqueID
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.HeaderUniqueID			= UniqueID
			Instance Selection
				where (related.Status = 0
				or     related.Status = 2
				or     related.Status = 3)
				
		GLCommitDocumentsRel	
			one-to-one relation to GLCommitDocument
			Field Mapping uses ByHeaderObjectReference
				related.HeaderObjectReference = reference to this instance







				
		BudgetTemplateGroupTotalRel
			one-to-many relation to BudgetTemplateGroupTotal
			Field Mapping uses ByBudgetGroup
				related.FinanceEnterpriseGroup                    = CashManagementGroup
				related.BudgetTemplateGroupTotal.BudgetEditGroup  = UniqueID

		CashLedgerReturnedPaymentImportInErrorRel
			one-to-many relation to CashLedgerReturnedPaymentImport
			Field Mapping uses ByCashLedgerReturnedPaymentInError
	           	related.CashManagementGroup									= CashManagementGroup	
                related.CashLedgerReturnedPaymentImport.CashCode			= CashCode
                related.CashLedgerReturnedPaymentImport.BankTransactionCode	= CashLedgerReturnedPayment.BankTransactionCode
                related.CashLedgerReturnedPaymentInError					= CashLedgerReturnedPayment.TransactionIDNumber
																			        	










		CashLedgerAutoTranNumbersRel
			one-to-many relation to CashLedgerAutoTranNumber
            Field Mapping uses symbolic key
            	related.CashManagementGroup 				= CashManagementGroup
                related.CashLedgerDocumentType				= CashLedgerDocumentType.ReturnedPayment
			Instance Selection
            	where (related.CashLedgerAutoTranNumber		= TransactionNumber
            	and    related.DocumentCashCode				= CashCode
            	and    related.DocumentBankTransactionCode	= CashLedgerReturnedPayment.BankTransactionCode
            	and    related.AutoNumberStatus.NumberAssignedToDocument)

		CashCodeGroupDetailRel
			one-to-one relation to CashCodeGroupDetail
			Field Mapping uses symbolic key
				related.CashManagementGroup			= CashManagementGroup
				related.CashCodeGroup				= LocalCashCodeGroup
				related.CashCode					= CashCode

		CashLedgerTransactionErrorRel is a CashLedgerTransactionError set 
		
		CashLedgerTransactionErrorMassReleaseRel	
			one-to-many relation to CashLedgerTransactionError
			Field Mapping uses ByMassReleaseReturnedPaymentsErrorSource
				related.CashManagementGroup								= CashManagementGroup
				related.ErrorSource										= 6	
				related.CashLedgerMassReleaseResult 					= CashLedgerMassReleaseResult
				related.CashCode										= CashCode
				related.CashLedgerReturnedPayment.BankTransactionCode	= CashLedgerReturnedPayment.BankTransactionCode
				related.CashLedgerReturnedPayment.TransactionIDNumber	= CashLedgerReturnedPayment.TransactionIDNumber

		GLTransactionDetailRel		
			one-to-one relation to GLTransactionDetail
			Field Mapping uses ByOriginatingTransaction		 
				related.OriginatingTransaction	= reference to first CashLedgerGLDistributionsRel

		CurrentGeneralLedgerCalendarPeriodRel	
			one-to-one relation to GeneralLedgerCalendarPeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= CashManagementGroup
				related.GeneralLedgerCalendarPeriod			= Company.OrigCompany.AccountingEntity.CurrentPeriod.GeneralLedgerCalendarPeriod	
		
		UnreleasedReturnedPaymentsErrorRel
			one-to-many relation to CashLedgerJobResultError
            Field Mapping uses ByCompanyErrorType
            	related.CashManagementGroup 				= LocalCashManagementGroup
            	related.CashLedgerJobResult					= LocalCashLedgerJobResult
            	related.Company								= LocalCompany
            	related.ErrorType							= 8 

		BankAccountBalancesRel
			one-to-many relation to BankAccountBalance
			Field Mapping uses Set2
				related.CashManagementGroup 	= CashManagementGroup	
				related.CashCode  				= CashCode
				
		CurrentApprovalCodeLevelRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.ApprovalCode			= ApprovalCode
				related.ApprovalLevel			= ApprovalLevel

		ApprovalCodeResourceRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.ApprovalCode			= ApprovalCode

		LocalApprovalCodeLevelRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.ApprovalCode			= ApprovalCode
				related.ApprovalLevel			= LocalApprovalLevel
		
		PfiWorkunitRel
			one-to-many relation to PfiWorkunit
			Field Mapping uses ByAppsKeyAppsValueWorkunit
				related.AppsKey		= "CASHLEDGERRETURNEDPAYMENT"			
				related.AppsValue	= DerivedAppsValue

		FinanceTeamMembersFromCurrentApprovalLevelRel
			one-to-many relation to FinanceTeamMember
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.FinanceTeam				= first CurrentApprovalCodeLevelRel.ApprovalTeam

		FinanceTeamMemberRel
			one-to-one relation to FinanceTeamMember
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= CashManagementGroup
				related.FinanceTeam						= ApproverTeam
				related.FinanceTeamMember.TeamMember	= actor.agent(Employee).Employee            					            																							        	
    Sets
        Set2
            indexed
            Sort Order
                CashCode
                CashLedgerReturnedPayment.BankTransactionCode
                TransactionNumber
                CashLedgerReturnedPayment.TransactionIDNumber

        ByBankTransactionCode
            indexed
            Sort Order
            	CashManagementGroup
                CashLedgerReturnedPayment.BankTransactionCode
                CashLedgerReturnedPayment.TransactionIDNumber
                
		ByDepositReturn	
            indexed
            Sort Order
            	CashManagementGroup
            	CashCode
            	OriginalDepositBankTransactionCode
            	DepositTransactionID
            	DepositNumber
                CashLedgerReturnedPayment.BankTransactionCode
                CashLedgerReturnedPayment.TransactionIDNumber                

       	ByCompany	
            indexed
            Sort Order
            	CashManagementGroup
            	Company.OrigCompany
            	Status
                CashCode
                CashLedgerReturnedPayment
                                               
    Field Rules
    	CashLedgerSourceRecord
    		force default to CashLedgerSourceRecord.CashLedgerTransaction
    		
    	CashCode
			if (CashCodeTransactionCodeRel exists)
				constraint (CashCodeTransactionCode exists
				and CashCodeTransactionCode.Active)
					"TransactionCode<CashLedgerReturnedPayment.BankTransactionCode>NotAuthorizedForCashCode<CashCode>"
    	
    	CashManagementAccount
    		force default to CashCode.BankAccountNumber




			
		Status
			initial value is Status.Unreleased
		
		Company
			required
			if (Company changed)	
				constraint (CashLedgerGLDistributionsRel not exist)
					"CannotChangeCompany;DistributionsExist"                   
				if (AutoNumberingAllowed)
					constraint (!CashManagementGroup.AutoTranNumberByCompany)
						"CannotChangeCompany;AutoNumberingAtCompanyLevelIsSetup"	
			TransientAccountingEntity = Company.OrigCompany.AccountingEntity

		ReturnDate
			required



			constraint (ReturnDate <= current corporate date)
				"ReturnDateCannotBeGreaterThanSystemDate"                  
			if (IsEFTTransactions)				
				constraint (ReturnDate >= CashLedgerEFTTransactionRel.TransactionDate)
					"ReturnDateCannotBeEarlierThanOriginalDepositDate"         
			else				
				constraint (ReturnDate >= CashLedgerTransactionDepositsRel.IssueDate)
					"ReturnDateCannotBeEarlierThanOriginalDepositDate"	        
			if (ReturnDate changed)
				initialize CompanyReturnAmount
						
		CurrencyTable	
			default to CompanySystemClosingControlRel.CurrencyTable
			default to Company.OrigCompany.CurrencyTable

			if (CurrencyTable changed)
				initialize CompanyReturnAmount	
									
        BankAccountReturnAmount
        	BankAccountReturnAmount = BankAccountReturnAmountUnsigned  
            if (BankAccountReturnAmount changed)
            	initialize CompanyReturnAmount
			if (!ImportInProcess)            	
	            required

		CompanyReturnAmount
			required
			
		TransactionCurrencyNumberOfDecimals
			default to CashCode.BankAccountNumber.Currency.NumberOfDecimals

		BaseCurrencyNumberOfDecimals
			default to Company.OrigCompany.CurrencyNumberOfDecimals 
			
		PostDate
			if (PostDate not entered)
				PostDate = ReturnDate
			if (CompanySystemClosingControlRel.Control)		
				constraint (PostDate within CompanySystemClosingControlRel.ValidEntryDate)
					"PostDateNotWithinValidEntryDatesForSystemCode;ValidDateRangeIs<CompanySystemClosingControlRel.ValidEntryDate.Begin>-<CompanySystemClosingControlRel.ValidEntryDate.End>"

        Description
            required

		OriginalDepositBankTransactionCode
			required

		DepositType		
			initial value is DepositType.ManualPayment
			default to DepositType.ManualPayment
			if (IsCashManagementTransaction)	
				if (CashCode.BankAccountBalance set exists)		
            		constraint (ReturnDate > CashCode.last BankAccountBalance set.BankAccountBalance)
						"ReturnDateIsForAClosedBankPeriod"                       

		DepositNumber
			if (IsCashManagementTransaction)
				if (CashLedgerTransactionId entered)
					DepositNumber				= CashLedgerTransactionId.TransactionNumber

					BankAccountDepositAmount 	= CashLedgerTransactionId.IssuedBankAmount
					DepositDate   			 	= CashLedgerTransactionId.IssueDate
					DepositTransactionID 	 	= CashLedgerTransactionId.CashLedgerTransaction
				else

					BankAccountDepositAmount 	= first CashLedgerTransactionDepositsRel.IssuedBankAmount
					DepositDate   			 	= first CashLedgerTransactionDepositsRel.IssueDate
					DepositTransactionID 	 	= first CashLedgerTransactionDepositsRel.CashLedgerTransaction
				required
					"DepositNumberRequiredForDepositType"                     
				constraint (CashLedgerTransactionDepositsRel exists)
					"OriginalDepositDoesNotExist"                             
				constraint (first CashLedgerTransactionDepositsRel.Status.Open
				or  		first CashLedgerTransactionDepositsRel.Status.Reconciled
				or  		first CashLedgerTransactionDepositsRel.Status.Voided
				or  		first CashLedgerTransactionDepositsRel.Status.PendingApproval)
					"CannotUse;StatusOfSelectedDepositMustBe_\OpenOr_\ReconciledOr_\VoidedOr_\PendingApproval"
				constraint (!first CashLedgerTransactionDepositsRel.ImportInProcess)
					"CannotUse;ImportInProcessForSelectedDeposit"
				constraint (first CashLedgerTransactionDepositsRel.CashLedgerTransaction.BankTransactionCode.BankTransactionType.BankService)
					"CannotUse;TheBankTransactionCodeForSelectedDepositMustBeABankService"
			else
				cannot be entered
					"DepositNumberMustBeBlankForSelectedDepositType"
											
		ElectronicFundsTransferNumber 	
			if (IsEFTTransactions)
				if (ElectronicFundTransactionId entered)
					ElectronicFundsTransferNumber		= ElectronicFundTransactionId.Reference

					BankAccountDepositAmount 			= ElectronicFundTransactionId.ReceiptAmount
					DepositDate	  			 			= ElectronicFundTransactionId.TransactionDate
					DepositTransactionID	 			= ElectronicFundTransactionId.CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber			
				else

					BankAccountDepositAmount 			= first CashLedgerEFTTransactionReferencesRel.ReceiptAmount
					DepositDate	  			 			= first CashLedgerEFTTransactionReferencesRel.TransactionDate
					DepositTransactionID	 			= first CashLedgerEFTTransactionReferencesRel.CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber			
				required
					"E\F\TNumberRequiredForDepositType"                       
				constraint (CashLedgerEFTTransactionReferencesRel exists)
					"Original_\E\F\TDepositDoesNotExist"                      
				constraint (first CashLedgerEFTTransactionReferencesRel.Status.ElectronicFundsCreated)
					"CannotUse;StatusOfSelected_\E\F\TMustBe_\Electronic_\Funds_\Created"
				constraint (!first CashLedgerEFTTransactionReferencesRel.ImportInProcess)
					"CannotUse;ImportInProcessForSelected_\E\F\T"
			else
				cannot be entered
					"E\F\TNumberMustBeBlankForSelectedDepositType"            







											
		BankExpenseData
			BankExpenseData.CurrencyAmount = BankExpenseAmountUnsigned
			if (BankExpenseData.CurrencyAmount changed
			or  ReturnDate changed
			or  CurrencyTable changed)
				initialize BankExpenseData.FunctionalAmount
				initialize BankExpenseData.AlternateAmount
				initialize BankExpenseData.AlternateAmount2
				initialize BankExpenseData.AlternateAmount3
				initialize BankExpenseData.ToFunctionalAmount
				initialize BankExpenseData.ToAlternateAmount
				initialize BankExpenseData.ToAlternateAmount2
				initialize BankExpenseData.ToAlternateAmount3
				initialize BankExpenseData.ProjectAmount
				initialize BankExpenseData.ReportAmount1
				initialize BankExpenseData.ReportAmount2
				initialize BankExpenseData.ReportAmount3
				initialize BankExpenseData.ReportAmount4
				initialize BankExpenseData.ReportAmount5				
		
		BankExpenseAccount
			if (BankExpenseData entered)
				default to CompanyCashCode.BankExpenseAccount

				if (TransientAccountingEntity.ValidSystems entered)
					constraint (GeneralLedgerSystemCode within TransientAccountingEntity.ValidSystems)
						"InvalidSystemFor<CashManagementGroup.FinanceEnterpriseGroup.AccountingEntityLabel>"
				if (BankExpenseAccount.ToAccountingEntity.ValidSystems entered)
					constraint (GeneralLedgerSystemCode within BankExpenseAccount.ToAccountingEntity.ValidSystems)
						"InvalidSystemForPosting<CashManagementGroup.FinanceEnterpriseGroup.AccountingEntityLabel>"
				if (BankExpenseAccount.GeneralLedgerChartAccount.Account.SystemRestriction entered)
					constraint (GeneralLedgerSystemCode within BankExpenseAccount.GeneralLedgerChartAccount.Account.SystemRestriction)
						"InvalidSystemForAccount"
				required		
		
		GeneralLedgerSourceCode
			initial value is "CL"
			default to "CL"
			if (GeneralLedgerSourceCode changed)					
				constraint (CashLedgerGLDistributionsRel not exist)
					"CannotChangeSourceCode;DistributionsExist"	  

		CompanyCashCode
			required
			
            
	Rule Blocks
	 									
		SetCurrencyData
			constraint (ReturnDate entered)
				"ReturnDateRequired"
			TransientAccountingEntity	= Company.OrigCompany.AccountingEntity
        	Currency 					= CashCode.Currency
			if (BankExpenseAmountUnsigned entered)  
				BankExpenseData.ExchangeDate = ReturnDate

		CheckForRelatedChanges	
			if (ReturnDate changed
			or  PostDate changed	
			or  CurrencyTable changed
			or  TransactionNumber changed)	
				if (first CashLedgerGLTypeEDistributionsERel exists)
					for each CashLedgerGLTypeEDistributionsERel

						invoke UpdateAllDistributions each	
							if (TransactionNumber changed)
								invoked.PrmTransactionNumber		= TransactionNumber
								invoked.PrmTransactionNumberChanged	= true
							if (ReturnDate changed
							or  PostDate changed	
							or  CurrencyTable changed)	
								invoked.PrmRecalcAmounts			= true
														
		ReverseBaseDistributionAmounts
			LocalFinanceCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount 	*= -1
			LocalFinanceCurrencyAmount.AlternateAmount.EnteredCurrencyAmount	*= -1
			LocalFinanceCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount 	*= -1
			LocalFinanceCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount 	*= -1
			LocalFinanceCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount *= -1
			LocalFinanceCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount	*= -1
			LocalFinanceCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount *= -1
			LocalFinanceCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount *= -1
			LocalFinanceCurrencyAmount.ProjectAmount.EnteredCurrencyAmount 	 	*= -1
			LocalFinanceCurrencyAmount.ReportAmount1.EnteredCurrencyAmount 		*= -1
			LocalFinanceCurrencyAmount.ReportAmount2.EnteredCurrencyAmount 		*= -1
			LocalFinanceCurrencyAmount.ReportAmount3.EnteredCurrencyAmount 		*= -1
			LocalFinanceCurrencyAmount.ReportAmount4.EnteredCurrencyAmount 		*= -1
			LocalFinanceCurrencyAmount.ReportAmount5.EnteredCurrencyAmount 		*= -1

		ReverseBankExpenseBaseDistributionAmounts
			LocalFinanceCurrencyAmountGroup.FunctionalAmount.EnteredCurrencyAmount 	 *= -1
			LocalFinanceCurrencyAmountGroup.AlternateAmount.EnteredCurrencyAmount	 *= -1
			LocalFinanceCurrencyAmountGroup.AlternateAmount2.EnteredCurrencyAmount 	 *= -1
			LocalFinanceCurrencyAmountGroup.AlternateAmount3.EnteredCurrencyAmount 	 *= -1
			LocalFinanceCurrencyAmountGroup.ToFunctionalAmount.EnteredCurrencyAmount *= -1
			LocalFinanceCurrencyAmountGroup.ToAlternateAmount.EnteredCurrencyAmount	 *= -1
			LocalFinanceCurrencyAmountGroup.ToAlternateAmount2.EnteredCurrencyAmount *= -1
			LocalFinanceCurrencyAmountGroup.ToAlternateAmount3.EnteredCurrencyAmount *= -1
			LocalFinanceCurrencyAmountGroup.ProjectAmount.EnteredCurrencyAmount 	 *= -1
			LocalFinanceCurrencyAmountGroup.ReportAmount1.EnteredCurrencyAmount 	 *= -1
			LocalFinanceCurrencyAmountGroup.ReportAmount2.EnteredCurrencyAmount 	 *= -1
			LocalFinanceCurrencyAmountGroup.ReportAmount3.EnteredCurrencyAmount 	 *= -1
			LocalFinanceCurrencyAmountGroup.ReportAmount4.EnteredCurrencyAmount 	 *= -1
			LocalFinanceCurrencyAmountGroup.ReportAmount5.EnteredCurrencyAmount 	 *= -1

		ReleaseExitRules

			if (GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
			or 	GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
				invoke UpdateToReleased GLCommit
					invoked.PrmFinanceEnterpriseGroup	= CashManagementGroup  
					invoked.PrmUniqueID					= UniqueID
					invoked.PrmAccountingEntity			= Company.OrigCompany.AccountingEntity


		PerformBudgetEditsForRelease






			if ((GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
			or   GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
        	and  GLCommitRelExists)
 				BudgetEditProcessing = BudgetEditProcessing.InProcess                   
				invoke Delete HeaderBudgetEditErrorRel 
				invoke Delete DistributionBudgetEditErrorRel 
				invoke EditTotalsRoute BudgetTemplateGroupTotal 	
					invoked.PrmFinanceEnterpriseGroup    											= CashManagementGroup
					invoked.PrmBudgetEditGroup           											= UniqueID
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBReturnedPmt.CashCode 			= CashCode
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBReturnedPmt.CashLedgerReturnedPayment.BankTransactionCode	= CashLedgerReturnedPayment.BankTransactionCode
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBReturnedPmt.CashLedgerReturnedPayment.TransactionIDNumber	= CashLedgerReturnedPayment.TransactionIDNumber
					invoked.PrmBusinessClassName  					              					= "CashLedgerReturnedPayment"	
					invoked.PrmEditContext  		                   								= "Release"						
					if (LocalActionUnreleaseToReleaseBankExp)
						invoked.PrmActionCode														= "R"  
						invoked.PrmMode																= BudgetEditMode.UpdateOnly
					else	
						invoked.PrmMode																= BudgetEditMode.Hard	
					if (initiating action	= "CashLedgerReturnedPaymentImport.InterfaceReturnedCashPayments")	
						invoked.PrmIsBatch	= true
			else
				BudgetEditProcessing = BudgetEditProcessing.NotInProcessing
				if (LocalActionUnreleaseToReleaseBankExp)
					invoke FinalReleasePhaseII
				else	
					invoke FinalReleasePhaseI


		PerformFundAmountEdit

			invoke Delete CashCodeFundEditRel
			for each CashLedgerGLDistributionsRel
				initialize LocalCalculateCashFinanceStructure
				LocalCalculateCashFinanceStructure.InputCashManagementGroup				= each.CashManagementGroup
				LocalCalculateCashFinanceStructure.InputCashCode						= each.CashCode
				LocalCalculateCashFinanceStructure.InputCashLedgerSourceRecord			= each.CashLedgerSourceRecord
				LocalCalculateCashFinanceStructure.InputCashLedgerGLDistribution		= each.CashLedgerGLDistribution
				LocalCalculateCashFinanceStructure.InputGLFinanceCodeBlock				= each.CashLedgerGLDistribution.GLFinanceCodeBlock
				LocalCalculateCashFinanceStructure.InputCashLedgerFinanceStructureType	= CashLedgerFinanceStructureType.CashCodeDistribution
				if (CompanyCashCode.ReconcileGeneralLedgerEntry
				and CashLedgerReturnedPayment.BankTransactionCode.AutomaticReconciliation)
					LocalCalculateCashFinanceStructure.InputFinanceCodeBlock			= CompanyCashCode.ReconciliationAccount
				else
					LocalCalculateCashFinanceStructure.InputFinanceCodeBlock			= CompanyCashCode.CashAccount
				LocalAnswer = LocalCalculateCashFinanceStructure.CalculateCashFinanceStructure

				LocalToAccountingEntity		= LocalCalculateCashFinanceStructure.OutputFinanceCodeBlock.ToAccountingEntity
				if (CashManagementGroup.FinanceEnterpriseGroup.FundDimension.AccountingUnit)
					LocalAccountingUnit			= LocalCalculateCashFinanceStructure.OutputFinanceCodeBlock.AccountingUnit
				else
					LocalFinanceDimension1		= LocalCalculateCashFinanceStructure.OutputFinanceCodeBlock.FinanceDimension1

				if (CashCode.EditAvailableFunds)
					invoke Update CashCodeFundEditByFundRel
						invoked.EditAmount += each.GLTransactionAmount
				else
					if (CashCodeFundRel !exists)
						invoke Update CashCodeFundEditByFundRel
								




		GetAutoNumberByLevel
			if (CashManagementGroup.AutoTranNumberByCompany)
				AutoNumberByCompany 				= Company
			else	 									 
			if (CashManagementGroup.AutoTranNumberByCashCode)
				AutoNumberByCashCode				= CashCode
			else	  					  
			if (CashManagementGroup.AutoTranNumberByBankTransactionCode)
				AutoNumberByBankTransactionCode		= CashLedgerReturnedPayment.BankTransactionCode
			else
			if (CashManagementGroup.AutoTranNumberByCashCodeBankTranCode)
				AutoNumberByCashCode				= CashCode
				AutoNumberByBankTransactionCode		= CashLedgerReturnedPayment.BankTransactionCode	

		StripLeadingSpaces	
			while (TransactionNumber[1:1] = blank)
				TransactionNumber = TransactionNumber[2:22]
				
		CheckForDuplicates
			constraint (first CashLedgerReturnedPaymentsRel not exist) 	
				"TransactionNumberAlreadyInUseAsReturnedPayment"
			constraint (first CashLedgerTransactionsTransNbrRel not exist)
				"TransactionNumberAlreadyInUseAsBankTransaction"         
			if (CashLedgerFundTransferHeaderRel exist)
				constraint (CashLedgerFundTransferHeaderRel.BankTransactionCode != CashLedgerReturnedPayment.BankTransactionCode)
					"TransactionNumberAlreadyInUseAsBankFundsTransfer"  
			constraint (CashLedgerFundTransferDetailsRel not exist)
				"TransactionNumberAlreadyInUseAsBankFundsTransfer"   	

		ResetLocalFieldsForReleasePhaseI	
			LocalJournalizeGroup = first CashLedgerGLDistributionsRel.GLTransactionDetailRel.JournalizeGroup

		ResetLocalFieldsForReleasePhaseII	
			LocalActionUnreleaseToReleaseBankExp	= true
			

		InitiateApprovalProcessFlow
			LocalCashManagementGroup		= CashManagementGroup
			LocalCashCode					= CashCode
			LocalBankTransactionCode		= CashLedgerReturnedPayment.BankTransactionCode
			LocalTransactionNumber			= CashLedgerReturnedPayment.TransactionIDNumber
			
			initiate CashLedgerReturnedPaymentApproval process
				title is "CashLedgerReturnedPayment<CashLedgerReturnedPayment.TransactionNumber>WaitingForApproval" 
				Variables
					LocalCashManagementGroup
					LocalCashCode
					LocalBankTransactionCode
					LocalTransactionNumber

		BuildTeamApproverActorList
			LocalApproverList = ""
			LocalFirstApproverAssigned = false
			for each FinanceTeamMembersFromCurrentApprovalLevelRel
				if (LocalFirstApproverAssigned)
					LocalApproverList = LocalApproverList + "," + each.FinanceTeamMember.TeamMember.FinanceResourceActor
				else
					LocalApproverList = each.FinanceTeamMember.TeamMember.FinanceResourceActor
					LocalFirstApproverAssigned = true
		
		GetNextEscalationApprovalLevel
			LocalApprovalLevel		= ApprovalLevel
			if (first LocalApprovalCodeLevelRel.EscalateTo.NextApprovalLevel)
				LocalApprovalLevel	= ApprovalLevel + 1
				LocalApprover		= first LocalApprovalCodeLevelRel.Approver
				LocalApproverTeam	= first LocalApprovalCodeLevelRel.ApprovalTeam
			else
				LocalApprovalLevel	= first LocalApprovalCodeLevelRel.EscalationApprovalLevel.ApprovalLevel
				LocalApprover		= first LocalApprovalCodeLevelRel.Approver
				LocalApproverTeam	= first LocalApprovalCodeLevelRel.ApprovalTeam

		GetNextApprovalLevel
			if (ApprovalLevel < 1)
				LocalApprovalLevel	= first ApprovalCodeResourceRel.ApprovalLevel
				LocalApprover		= first ApprovalCodeResourceRel.Approver
				LocalApproverTeam	= first ApprovalCodeResourceRel.ApprovalTeam
			else
				LocalApprovalLevel		= ApprovalLevel + 1
				if (LocalApprovalCodeLevelRel exists)
					LocalApprovalLevel	= first LocalApprovalCodeLevelRel.ApprovalLevel
					LocalApprover		= first LocalApprovalCodeLevelRel.Approver
					LocalApproverTeam	= first LocalApprovalCodeLevelRel.ApprovalTeam
				else
					initialize LocalApprovalLevel
					initialize LocalApprover
					initialize LocalApproverTeam
					
	Derived Fields
		DerivedTransactionIdentifier is a DerivedField
			type is like CashLedgerTransactionIdentifier
			return CashLedgerTransactionRel.CashLedgerTransactionIdentifier
			
		AppliedDistributionBankAmount is a DerivedField	
			type is like InternationalAmount
			return (sum CashLedgerGLTypeEDistributionsERel.GLTransactionAmount)
		
		BalanceAmount is a DerivedField
			type is like InternationalAmount
			return  BankAccountReturnAmount - AppliedDistributionBankAmount	
 
		DerivedHeaderBudgetErrorCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (HeaderBudgetEditErrorExists)
				return "(" + instance count of HeaderBudgetEditErrorRel + ")"
			else
				return ""

		DerivedWarningBudgetErrorCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (DistributionBudgetEditErrorExists)
				return "(" + instance count of DistributionBudgetEditErrorRel + ")"
			else
				return ""

		DerivedFirstErrorMessage is a DerivedField
			type is Alpha size up to 200
        	restricted
        	if (HeaderBudgetEditErrorRel exists)
        		return MouseOverBudgetErrorMessage
			if (DistributionBudgetEditErrorRel exists)
				return MouseOverBudgetErrorMessage

		MouseOverBudgetErrorMessage is a MessageField
			restricted
			"BudgetErrorsExist;SeeBudgetErrorTabForDetails"

		DerivedTransactionCount is a DerivedField
			type is Numeric 7
			return 1
			
		DerivedReturnedPaymentErrorCount is a DerivedField	
			type is Alpha size up to 20
        	restricted
			if (CashLedgerTransactionError set exists)
				return "(" + instance count of CashLedgerTransactionError set + ")"
			else
				return ""

		DerivedPeriodEndDate	is a DerivedField 
			type is Date
			restricted
			return CurrentGeneralLedgerCalendarPeriodRel.Date
											           
		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforCashLedgerReturnedPayment"

		CashLedgerEFTContextMessageEntityType is a DerivedField
			type is Alpha 30
			restricted
			if (ElectronicFundsTransferNumber entered)
				return "InforCashLedgerEFT"
			else
			if (DepositNumber entered)
				return "InforCashLedgerTransaction"

		CashLedgerReceiptContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforCashReceipt"

		ContextMessageText is a MessageField
			restricted
			"CashLedgerReturnedPayment<CashLedgerReturnedPayment>"
			
		DerivedPlainTextComment   is a DerivedField  
		    type is Text
		    return CommentText plain text	


		DerivedNextApprovalLevel is a DerivedField
			type is Numeric 8
			restricted
			LocalApprovalLevel = ApprovalLevel
			include GetNextApprovalLevel
			return LocalApprovalLevel
			
		DerivedCurrentApprovalResource is a DerivedField
			type is like FinanceResource
			restricted
			return first CurrentApprovalCodeLevelRel.Approver

		DerivedCurrentApprovalActor is a DerivedField
			type is Actor
			restricted
			return first CurrentApprovalCodeLevelRel.Approver.FinanceResourceActor

		DerivedCurrentApprovalTeam is a DerivedField
			type is like FinanceTeam
			restricted
			return first CurrentApprovalCodeLevelRel.ApprovalTeam

		DerivedCurrentTeamActorList is a DerivedField
			type is Alpha 250
			restricted
			include BuildTeamApproverActorList
			return LocalApproverList

		DerivedCurrentApproverEscalationDays is a DerivedField
			type is Numeric 6
			restricted
			if (first CurrentApprovalCodeLevelRel.EscalationDays > 0)
				return first CurrentApprovalCodeLevelRel.EscalationDays	
			else
				return 10000

		DerivedCurrentApproverEscalationHours is a DerivedField
			type is Decimal 6.2
			restricted
			if (first CurrentApprovalCodeLevelRel.EscalationHours > 0)
				return first CurrentApprovalCodeLevelRel.EscalationHours
			else
				return 9999.99
				
		DisplayCurrentApproverDesc is a ConditionalField
			type is Alpha 100
			restricted
			if (Approver entered)
				Approver.PreferredSimplePresentationName
			else
				ApproverTeam.FinanceTeam.Description

		UserActionRoutingAsHtml	is a DerivedField
			type is RichText
			return first PfiWorkunitRel.UserActionRoutingAsHtml

		DerivedAppsValue	is a DerivedField
			type is like PfiAppsValue
			return "CashLedgerReturnedPaymentApproval" + UniqueID			

		MyPFIApprovals is a DerivedField
            type is Boolean
            restricted
            for each PfiWorkunitRel
                for each each.PfiMetricsRel
                    if (each.PfiMetrics.PfiUserProfile = actor)
                        return true 
						
		MassReleaseCompleteMessage is a MessageField
			restricted
			"MassReleaseComplete;SeeResultsRecord"
											           
	Transient Fields
		TransientAccountingEntity			is an AccountingEntity
			derive value from Company.OrigCompany.AccountingEntity
		BankAccountReturnAmountUnsigned		is an UnsignedInternationalAmount
			derive value from CashLedgerReturnedPayment.BankAccountReturnAmount
		BankExpenseAmountUnsigned			is an UnsignedInternationalAmount
			derive value from CashLedgerReturnedPayment.BankExpenseData.CurrencyAmount
		CashLedgerTransactionId				is a  CashLedgerTransaction
		ElectronicFundTransactionId			is a  CashLedgerElectronicFundsTransferTransaction

		CompletionMessage					is Alpha size 150
		TransientErrorDescription			is Alpha size up to 200	
			derive value from first CashLedgerTransactionErrorMassReleaseRel.ErrorDescription
					
	Actions
		Create is a Create Action
			Entrance Rules
				CashLedgerSourceRecord = CashLedgerSourceRecord.CashLedgerTransaction
				if (TransactionNumber entered)
					if (AutoNumberingAllowed)
						constraint (AutoNumberingAction entered)
							"CannotEnterTransactionNumber;AutoNumberingSetup"
					include StripLeadingSpaces	
					include CheckForDuplicates
				else			
					constraint (AutoNumberingAllowed)		
						"TransactionNumberRequired"				
			Action Rules

				include SetCurrencyData




				if (AutoNumberingAllowed
				and TransactionNumber not entered)
					include GetAutoNumberByLevel
					invoke AutoCreate CashLedgerAutoTranNumber
						assign result to LocalCashLedgerAutoTranNumber
						invoked.CashManagementGroup			= CashManagementGroup
						invoked.CashLedgerDocumentType		= CashLedgerDocumentType.ReturnedPayment
						invoked.OriginatingTransaction		= reference to this instance
						invoked.CreateOperator				= actor
						invoked.CreateDate					= current timestamp
						invoked.Company 					= AutoNumberByCompany
						invoked.CashCode					= AutoNumberByCashCode
						invoked.BankTransactionCode			= AutoNumberByBankTransactionCode
						invoked.DocumentCashCode			= CashCode
						invoked.DocumentBankTransactionCode	= CashLedgerReturnedPayment.BankTransactionCode

					LocalTransactionNumber			= LocalCashLedgerAutoTranNumber.CashLedgerAutoTranNumber
					if (LocalCashLedgerAutoTranNumber.AutoNumberStatus.CannotBeAssignedAlreadyInUse)
						DuplicateTranNumberFound 	= true
					
					while (DuplicateTranNumberFound)
						invoke AutoCreate CashLedgerAutoTranNumber
							assign result to LocalCashLedgerAutoTranNumber
							invoked.CashManagementGroup			= CashManagementGroup
							invoked.CashLedgerDocumentType		= CashLedgerDocumentType.ReturnedPayment
							invoked.OriginatingTransaction		= reference to this instance
							invoked.CreateOperator				= actor
							invoked.CreateDate					= current timestamp
							invoked.Company 					= AutoNumberByCompany
							invoked.CashCode					= AutoNumberByCashCode
							invoked.BankTransactionCode			= AutoNumberByBankTransactionCode
							invoked.DocumentCashCode			= CashCode
							invoked.DocumentBankTransactionCode	= CashLedgerReturnedPayment.BankTransactionCode
						LocalTransactionNumber			= LocalCashLedgerAutoTranNumber.CashLedgerAutoTranNumber
						DuplicateTranNumberFound		= false
						if (LocalCashLedgerAutoTranNumber.AutoNumberStatus.CannotBeAssignedAlreadyInUse)
							DuplicateTranNumberFound	= true

					TransactionNumber	= LocalTransactionNumber	
					
			Exit Rules
				initialize CashLedgerTransactionId
				initialize ElectronicFundTransactionId	
							
		Update is an Update Action
			valid when (IsUnreleased) 
			Entrance Rules
				constraint (!BudgetEditInProgress)		
					"CannotUpdate;BudgetEditInProgress"
				CashLedgerSourceRecord = CashLedgerSourceRecord.CashLedgerTransaction
			Action Rules
				if (TransactionNumber changed)									
					constraint (TransactionNumber entered)
						"TransactionNumberRequired"  
					constraint (!AutoNumberingAllowed)
						"CannotChangeTransactionNumber;AutoNumberingSetup"	
					if (!AutoNumberingAllowed)
						include StripLeadingSpaces	
						include CheckForDuplicates		

				include SetCurrencyData   
			Exit Rules
				include CheckForRelatedChanges
				initialize CashLedgerTransactionId
				initialize ElectronicFundTransactionId	
						
		Delete is a Delete Action
			Entrance Rules
				constraint (!BudgetEditInProgress)		
					"CannotDelete;BudgetEditInProgress"
				if (GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
				or 	GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
					invoke Delete HeaderBudgetEditErrorRel
					invoke Delete DistributionBudgetEditErrorRel  
			Action Rules
				if (ImportInProcess)
					confirmation required
						"DeletingAPartiallyImportedRecordWillDeleteAllRelatedCashLedgerReturnedPaymentImportRecords"
					invoke DeleteAllRelatedRecords CashLedgerReturnedPaymentImportInErrorRel			
				invoke Delete CashLedgerGLTypeEDistributionsERel
				if (TransactionNumber is numeric)
					if (CashLedgerAutoTranNumbersRel exists)
						invoke DocumentDeleteUpdate CashLedgerAutoTranNumbersRel
				
		Release is an Instance Action
			valid when (CanRelease) 
			Entrance Rules
				constraint (!BudgetEditInProgress)			
					"CannotRelease;BudgetEditInProgress"
				constraint (CashLedgerGLTypeEDistributionsERel exist)
					"CannotRelease;NoDistributionsExist"	                     
				constraint (AppliedDistributionBankAmount > 0)
					"TotalDistributionsMustBeAPositiveAmount"	  					
				constraint (BankAccountReturnAmount = AppliedDistributionBankAmount)
					"CannotRelease;TransactionIsOutOfBalance"                 
				if (CashCode.EditAvailableFunds
				or  CashCode.RestrictedFunds)
					include PerformFundAmountEdit
					constraint (ExceedesCashCodeFundBalanceRel !exists)
						"<first ExceedesCashCodeFundBalanceRel.ErrorMessage>"
					invoke Delete CashCodeFundEditRel
			Action Rules
				include PerformBudgetEditsForRelease


		ReleaseFromImport is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmInterfaceAsPosted	is Boolean	
				PrmJournalizeGroup		is like JournalizeGroup	
			Action Rules
				constraint (CashLedgerGLTypeEDistributionsERel exist)
					"CannotRelease;NoDistributionsExist"	                     
				constraint (AppliedDistributionBankAmount > 0)
					"TotalDistributionsMustBeAPositiveAmount"	  					
				constraint (BankAccountReturnAmount = AppliedDistributionBankAmount)
					"CannotRelease;TransactionIsOutOfBalance"                 
				if (CashCode.EditAvailableFunds
				or  CashCode.RestrictedFunds)
					include PerformFundAmountEdit
					constraint (ExceedesCashCodeFundBalanceRel !exists)
						"<first ExceedesCashCodeFundBalanceRel.ErrorMessage>"
					invoke Delete CashCodeFundEditRel
				LocalInterfaceAsPosted		= PrmInterfaceAsPosted	
				LocalJournalizeGroup		= PrmJournalizeGroup
				if (LocalInterfaceAsPosted)	
					invoke FinalReleasePhaseI
				else	
					include PerformBudgetEditsForRelease

																				
		ReleaseFromMassRelease is an Instance Action	
			default label is untranslatable
			restricted
			Entrance Rules
				constraint (CashLedgerGLTypeEDistributionsERel exist)
					"CannotRelease;NoDistributionsExist"	                     
				constraint (AppliedDistributionBankAmount > 0)
					"TotalDistributionsMustBeAPositiveAmount"	  					
				constraint (BankAccountReturnAmount = AppliedDistributionBankAmount)
					"CannotRelease;TransactionIsOutOfBalance"                
				if (CashCode.EditAvailableFunds
				or  CashCode.RestrictedFunds)
					include PerformFundAmountEdit
					constraint (ExceedesCashCodeFundBalanceRel !exists)
						"<first ExceedesCashCodeFundBalanceRel.ErrorMessage>"
					invoke Delete CashCodeFundEditRel
			Action Rules

				include PerformBudgetEditsForRelease

			
		FinalReleasePhaseI is an Instance Action	
			default label is untranslatable
			restricted	
			Action Rules
				LastDistributionSequence = last CashLedgerGLTypeEDistributionsERel.CashLedgerGLDistribution.SequenceNumber	

				if (CashManagementGroup.FinanceEnterpriseGroup.FundAccounting)
					for each CashLedgerGLDistributionsRel
						LocalFinanceCurrencyAmount									= each.GLBaseAmount
						include ReverseBaseDistributionAmounts

						initialize LocalCalculateCashFinanceStructure
						LocalCalculateCashFinanceStructure.InputCashManagementGroup				= each.CashManagementGroup
						LocalCalculateCashFinanceStructure.InputCashCode						= each.CashCode
						LocalCalculateCashFinanceStructure.InputCashLedgerSourceRecord			= each.CashLedgerSourceRecord
						LocalCalculateCashFinanceStructure.InputCashLedgerGLDistribution		= each.CashLedgerGLDistribution
						LocalCalculateCashFinanceStructure.InputGLFinanceCodeBlock				= each.CashLedgerGLDistribution.GLFinanceCodeBlock
						LocalCalculateCashFinanceStructure.InputCashLedgerFinanceStructureType	= CashLedgerFinanceStructureType.CashCodeDistribution
						if (CompanyCashCode.ReconcileGeneralLedgerEntry
						and CashLedgerReturnedPayment.BankTransactionCode.AutomaticReconciliation)
							LocalCalculateCashFinanceStructure.InputFinanceCodeBlock			= CompanyCashCode.ReconciliationAccount
						else
							LocalCalculateCashFinanceStructure.InputFinanceCodeBlock			= CompanyCashCode.CashAccount
						LocalAnswer = LocalCalculateCashFinanceStructure.CalculateCashFinanceStructure

						invoke Create CashLedgerGLDistribution
							fill in fields from CashLedgerReturnedPayment
							invoked.CashCode										= CashCode
							invoked.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerReturnedPayment.BankTransactionCode
							invoked.CashLedgerSourceRecord							= "CRP"
							invoked.CashLedgerGLDistribution.TransactionIDNumber	= CashLedgerReturnedPayment.TransactionIDNumber
							invoked.TransactionNumber								= TransactionNumber
							invoked.GeneralLedgerSourceCode							= GeneralLedgerSourceCode
							invoked.Company											= Company
							invoked.GLFinanceCodeBlock								= LocalCalculateCashFinanceStructure.OutputFinanceCodeBlock
							invoked.RecordType										= CashLedgerDistribRecordType.CashCodeDistribution
							invoked.CashLedgerGLDistribution.DistributionType		= "E"
							invoked.Status											= Status.Released
							invoked.PostDate										= PostDate
							invoked.Reference										= "CashLedgerReturnedPayment"
							invoked.Description										= Description
							invoked.BaseCurrencyNumberOfDecimals					= BaseCurrencyNumberOfDecimals
							invoked.ToBaseCurrencyNumberOfDecimals					= Company.OrigCompany.CurrencyNumberOfDecimals
							invoked.TransactionCurrencyNumberOfDecimals				= TransactionCurrencyNumberOfDecimals
							invoked.ToTransactionCurrencyNumberOfDecimals			= TransactionCurrencyNumberOfDecimals
							invoked.GLTransactionAmount							    = each.GLTransactionAmount * -1
							invoked.DistributionToBankAmount						= each.DistributionToBankAmount * -1
							invoked.GLBaseAmount									= LocalFinanceCurrencyAmount
							invoked.GLTJournalizeGroup							 	= LocalJournalizeGroup
							invoked.BypassStatusEdit							 	= true
				else				
					LocalFinanceCurrencyAmount									= CompanyReturnAmount
					include ReverseBaseDistributionAmounts
					invoke Create CashLedgerGLDistribution
						fill in fields from CashLedgerReturnedPayment
						invoked.CashCode										= CashCode
						invoked.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerReturnedPayment.BankTransactionCode
						invoked.CashLedgerSourceRecord							= "CRP"
						invoked.CashLedgerGLDistribution.TransactionIDNumber	= CashLedgerReturnedPayment.TransactionIDNumber
						invoked.TransactionNumber								= TransactionNumber
						invoked.GeneralLedgerSourceCode							= GeneralLedgerSourceCode
						invoked.Company											= Company
						if (CompanyCashCode.ReconcileGeneralLedgerEntry
						and CashLedgerReturnedPayment.BankTransactionCode.AutomaticReconciliation)
							invoked.GLFinanceCodeBlock							= CompanyCashCode.ReconciliationAccount						
						else
							invoked.GLFinanceCodeBlock							= CompanyCashCode.CashAccount
						invoked.RecordType										= CashLedgerGLDistributionsRel.RecordType.CashCodeDistribution
						invoked.CashLedgerGLDistribution.DistributionType		= "E"
						invoked.Status											= Status.Released
						invoked.PostDate										= PostDate
						invoked.Reference										= "CashLedgerReturnedPayment"
						invoked.Description										= Description
						invoked.BaseCurrencyNumberOfDecimals					= BaseCurrencyNumberOfDecimals
						invoked.ToBaseCurrencyNumberOfDecimals					= Company.OrigCompany.CurrencyNumberOfDecimals
						invoked.TransactionCurrencyNumberOfDecimals				= TransactionCurrencyNumberOfDecimals
						invoked.ToTransactionCurrencyNumberOfDecimals			= TransactionCurrencyNumberOfDecimals
						invoked.GLTransactionAmount							    = BankAccountReturnAmount * -1
						invoked.DistributionToBankAmount						= BankAccountReturnAmount * -1
						invoked.GLBaseAmount									= LocalFinanceCurrencyAmount
						invoked.GLTJournalizeGroup							 	= LocalJournalizeGroup
						invoked.BypassStatusEdit							 	= true
				
				invoke Release CashLedgerGLDistributionsUnReleasedRel					
				invoke Unreleased.CreateFromCashLedgerWithoutEdits CashLedgerTransaction
					invoked.CashManagementGroup 							= CashCode.CashManagementGroup			
					invoked.CashCode										= CashCode		
					invoked.BankTransactionCode								= CashLedgerReturnedPayment.BankTransactionCode
					invoked.CashLedgerSourceRecord							= "CRP"
					invoked.TransactionNumber								= TransactionNumber
					invoked.CashLedgerTransaction							= CashLedgerReturnedPayment.TransactionIDNumber
					invoked.BankTransactionType	    						= CashLedgerReturnedPayment.BankTransactionCode.BankTransactionType


					invoked.SourceCode										= "CB"
					invoked.Company											= Company
					invoked.IssueDate										= ReturnDate
					invoked.IssuedBankAmount								= BankAccountReturnAmount
					invoked.IssuedBaseAmount								= CompanyReturnAmount
					invoked.TransactionCurrencyNumberOfDecimals				= TransactionCurrencyNumberOfDecimals
					invoked.BaseCurrencyNumberOfDecimals					= BaseCurrencyNumberOfDecimals
					invoked.Description										= Description
					invoked.Reference										= "CashLedgerReturnedPayment"
					invoked.GeneralLedgerPostDate							= PostDate
					invoked.Type											= CashLedgerTransactionRel.Type.CashReceiptEntry //="R"
					invoked.BypassBudgetEditing								= true
					
				if (BankExpenseData entered)

					invoke Unreleased.CreateFromCashLedgerWithoutEdits CashLedgerTransaction
						assign result to NewCashLedgerTransaction
						invoked.CashManagementGroup 							= CashCode.CashManagementGroup	
						invoked.CashCode										= CashCode
						invoked.BankTransactionCode								= CashLedgerReturnedPayment.BankTransactionCode
						invoked.CashLedgerSourceRecord							= "CRP"
						invoked.TransactionNumber								= TransactionNumber

						invoked.SourceCode										= "CB"
						invoked.Company											= Company
						invoked.IssueDate										= ReturnDate
						invoked.IssuedBankAmount								= BankExpenseData.CurrencyAmount
						invoked.IssuedBaseAmount								= BankExpenseData
						invoked.TransactionCurrencyNumberOfDecimals				= TransactionCurrencyNumberOfDecimals
						invoked.BaseCurrencyNumberOfDecimals				    = BaseCurrencyNumberOfDecimals 
						invoked.Description										= Description
						invoked.Reference										= "CashLedgerReturnedPayment"
						invoked.GeneralLedgerPostDate							= PostDate
						invoked.Type											= CashLedgerTransactionRel.Type.CashReceiptEntry //= "R"
						invoked.BypassBudgetEditing								= true
					SavedCashLedgerTransaction = NewCashLedgerTransaction.CashLedgerTransaction

					invoke Create CashLedgerGLDistribution
						invoked.CashManagementGroup 							= CashCode.CashManagementGroup
						invoked.CashCode										= CashCode
						invoked.CashLedgerSourceRecord							= "CRP"
						invoked.CashLedgerGLDistribution.TransactionIDNumber	= SavedCashLedgerTransaction
						invoked.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerReturnedPayment.BankTransactionCode
						invoked.CashLedgerGLDistribution.SequenceNumber         = 1
						invoked.GeneralLedgerSourceCode							= GeneralLedgerSourceCode
						invoked.Company											= Company
						invoked.GLFinanceCodeBlock								= BankExpenseAccount
						invoked.RecordType										= blank
						invoked.Status											= Status.Released
						invoked.CashLedgerGLDistribution.DistributionType		= "E"
						invoked.PostDate										= PostDate
						invoked.Reference										= "CashLedgerReturnedPayment"
						invoked.Description										= Description
						invoked.BaseCurrencyNumberOfDecimals				    = BaseCurrencyNumberOfDecimals
						invoked.TransactionCurrencyNumberOfDecimals				= TransactionCurrencyNumberOfDecimals
						invoked.ToTransactionCurrencyNumberOfDecimals			= TransactionCurrencyNumberOfDecimals
						invoked.GLTransactionAmount							    = BankExpenseData.CurrencyAmount 	
						invoked.DistributionToBankAmount						= BankExpenseData.CurrencyAmount 	
						invoked.GLBaseAmount									= BankExpenseData
						invoked.ReturnedPaymentTransactionIDNumber				= CashLedgerReturnedPayment.TransactionIDNumber
						invoked.BypassBudgetEditing								= true
						invoked.GLTJournalizeGroup							 	= LocalJournalizeGroup
						invoked.BypassStatusEdit							 	= true

					LocalFinanceCurrencyAmountGroup								= BankExpenseData
					include ReverseBankExpenseBaseDistributionAmounts							
					LocalFinanceCurrencyAmountGroup.CurrencyAmount 				= BankExpenseData.CurrencyAmount * -1
					invoke Create CashLedgerGLDistribution
						invoked.CashManagementGroup 							= CashCode.CashManagementGroup
						invoked.CashLedgerGLDistribution.TransactionIDNumber	= SavedCashLedgerTransaction
						invoked.CashCode										= CashCode
						invoked.CashLedgerSourceRecord							= "CRP"
						invoked.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerReturnedPayment.BankTransactionCode
						invoked.CashLedgerGLDistribution.SequenceNumber         = 2
						invoked.GeneralLedgerSourceCode							= GeneralLedgerSourceCode
						invoked.Company											= Company
						if (CompanyCashCode.ReconcileGeneralLedgerEntry
						and CashLedgerReturnedPayment.BankTransactionCode.AutomaticReconciliation)
							invoked.GLFinanceCodeBlock							= CompanyCashCode.ReconciliationAccount						
						else
							invoked.GLFinanceCodeBlock							= CompanyCashCode.CashAccount
						invoked.RecordType										= CashLedgerGLDistributionsRel.RecordType.CashCodeDistribution 
						invoked.CashLedgerGLDistribution.DistributionType		= "E"
						invoked.Status											= Status.Released
						invoked.PostDate										= PostDate
						invoked.Reference										= "CashLedgerReturnedPayment"
						invoked.Description										= Description
						invoked.BaseCurrencyNumberOfDecimals				    = BaseCurrencyNumberOfDecimals
						invoked.TransactionCurrencyNumberOfDecimals				= TransactionCurrencyNumberOfDecimals
						invoked.ToTransactionCurrencyNumberOfDecimals			= TransactionCurrencyNumberOfDecimals
						invoked.GLTransactionAmount							    = LocalFinanceCurrencyAmountGroup.CurrencyAmount
						invoked.DistributionToBankAmount						= LocalFinanceCurrencyAmountGroup.CurrencyAmount
						invoked.GLBaseAmount									= LocalFinanceCurrencyAmountGroup
						invoked.ReturnedPaymentTransactionIDNumber				= CashLedgerReturnedPayment.TransactionIDNumber
						invoked.GLTJournalizeGroup							 	= LocalJournalizeGroup
						invoked.BypassStatusEdit							 	= true


					if (LocalInterfaceAsPosted)	
						invoke FinalReleasePhaseII
					else	
						LocalActionUnreleaseToReleaseBankExp = true
						include PerformBudgetEditsForRelease
				else
					invoke FinalReleasePhaseII

		FinalReleasePhaseII is an Instance Action	
			default label is untranslatable
			restricted	
			Action Rules
				BudgetEditProcessing	= BudgetEditProcessing.NotInProcessing
				if (CashLedgerMassReleaseResult entered	
				and CashLedgerTransactionError set exists)
					invoke Delete CashLedgerTransactionError set


				Status					= Status.Released																		
			Exit Rules
				if (LocalInterfaceAsPosted)
					invoke InterfaceAsPosted ReleasedDistributionsRel
				include ReleaseExitRules
		
		UpdateBudgetResults is an Instance Action	
			default label is untranslatable
			restricted
			Parameters
				ParmSuccess    	is Boolean
				ParmActionCode	is an ActionCode
			Action Rules
				if (ParmSuccess)
					BudgetEditProcessing = BudgetEditProcessing.Success
					if (ParmActionCode.Release)
						include ResetLocalFieldsForReleasePhaseII	
						invoke FinalReleasePhaseII
					else
						include ResetLocalFieldsForReleasePhaseI
						invoke FinalReleasePhaseI						
				else
					BudgetEditProcessing = BudgetEditProcessing.Failure

		RebuildCommitmentTotals is an Instance Action		
			default label is untranslatable
			restricted
			Parameters
				IsBatch        is Boolean
			Action Rules
				invoke Delete HeaderBudgetEditErrorRel
				invoke Delete DistributionBudgetEditErrorRel
				invoke Delete BudgetTemplateGroupTotalRel
				for each CashLedgerGLDistributionsRel
					invoke RecalculateCommitmentAmounts each
					increment LocalTransactionCount
					if (LocalTransactionCount > 50)
						commit transaction
						initialize LocalTransactionCount
				invoke EditTotalsRoute BudgetTemplateGroupTotal 	
					invoked.PrmFinanceEnterpriseGroup    											= CashManagementGroup
					invoked.PrmBudgetEditGroup           											= UniqueID
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBReturnedPmt.CashCode 			= CashCode
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBReturnedPmt.CashLedgerReturnedPayment.BankTransactionCode	= CashLedgerReturnedPayment.BankTransactionCode
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBReturnedPmt.CashLedgerReturnedPayment.TransactionIDNumber	= CashLedgerReturnedPayment.TransactionIDNumber
					invoked.PrmBusinessClassName  					              					= "CashLedgerReturnedPayment"
					invoked.PrmEditContext  		                   								= "Release"
					invoked.PrmMode																	= BudgetEditMode.Hard	
					if (initiating action	= "CashLedgerReturnedPaymentImport.InterfaceReturnedCashPayments")	
						invoked.PrmIsBatch	= true


		MassRelease is a Set Action	
			completion message is "<MassReleaseCompleteMessage>"
			run in background		
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
					default label is "CashManagementGroup"
				PrmCashCode					is a CashCode
					default label is "CashCode"	
				PrmCashCodeGroup			is a CashCodeGroup
					default label is "CashCodeGroup"
				PrmUseSystemDate			is Boolean
					default label is "UseSystemDate"
				PrmEnterDate				is Date
					default label is "EnterDate"
				PrmDays						is Numeric 3
					default label is "Days"
				PrmBankTransactionCode		is a BankTransactionCode
					default label is "BankTransactionCode"
				PrmGeneralLedgerSourceCode	is a GeneralLedgerEvent
					default label is "EventCode"
										
			Parameter Rules
				PrmCashManagementGroup
					required
				PrmCashCode
					if (PrmCashCode entered)
						constraint (PrmCashCodeGroup not entered)
							"CannotEnterBothCashCodeAndCashCodeGroup"
				PrmCashCodeGroup
					if (PrmCashCodeGroup entered)
						constraint (PrmCashCode not entered)
							"CannotEnterBothCashCodeAndCashCodeGroup"		
					LocalCashCodeGroup	= PrmCashCodeGroup
				PrmUseSystemDate
					if (PrmUseSystemDate)
						constraint (PrmEnterDate not entered)
							"EnterDateMustBeBlankWhenSystemDateIsSelected"
						LocalDateRange.Begin = current corporate date	
				PrmEnterDate
					if (PrmEnterDate not entered)
						constraint (PrmUseSystemDate)
							"EnterDateRequiredWhenSystemDateIsNotSelected"
						LocalDateRange.Begin = current corporate date
					else
						LocalDateRange.Begin = PrmEnterDate
				PrmDays
					LocalDateRange.End = LocalDateRange.Begin + PrmDays as days
																										
			Local Fields
				RecordCount						is Numeric 10
				LocalDateRange					is a DateRange
				MassReleaseError				is Boolean
				MassReleaseErrorMessage			is Alpha 150
				CashLedgerMassReleaseResultView	is a CashLedgerMassReleaseResult view
				
			Instance Selection
				where (CashManagementGroup	 	= PrmCashManagementGroup
				and	   ReturnDate				within LocalDateRange
				and    CanRelease
				and    !CashLedgerMassReleaseResult entered	

				and  ((PrmCashCode				entered	
				and    CashCode					= PrmCashCode)
				or     PrmCashCode				not entered)

				and  ((PrmCashCodeGroup			entered	
				and    CashCodeGroupDetailRel exists)
				or     PrmCashCodeGroup			not entered)

				and  ((PrmBankTransactionCode	entered	
				and    CashLedgerReturnedPayment.BankTransactionCode	= PrmBankTransactionCode)
				or     PrmBankTransactionCode	not entered)

				and  ((PrmGeneralLedgerSourceCode	entered	
				and    GeneralLedgerSourceCode		= PrmGeneralLedgerSourceCode)
				or     PrmGeneralLedgerSourceCode	not entered))				
												
			Sort Order  
				CashManagementGroup
			    CashCode
			    CashLedgerReturnedPayment.BankTransactionCode
			    TransactionNumber
			    CashLedgerReturnedPayment.TransactionIDNumber
			    
				
			Action Rules
				Empty Set Rules
					invoke Create CashLedgerMassReleaseResult	
						invoked.CashManagementGroup		= PrmCashManagementGroup
						invoked.CashCode				= PrmCashCode
						invoked.CashCodeGroup			= PrmCashCodeGroup
				    	invoked.BankTransactionCode		= PrmBankTransactionCode
				    	invoked.UseSystemDate			= PrmUseSystemDate
				    	invoked.EnterDate				= PrmEnterDate
				    	invoked.Days					= PrmDays
				    	invoked.ReleaseDateRange		= LocalDateRange
				    	invoked.GeneralLedgerSourceCode	= PrmGeneralLedgerSourceCode
						invoked.Status					= 2 
						invoked.ReleaseType				= 3 
					
				Set Rules
					Entrance Rules
						initialize RecordCount
						invoke Create CashLedgerMassReleaseResult	
							assign result to CashLedgerMassReleaseResultView
							invoked.CashManagementGroup		= PrmCashManagementGroup
							invoked.CashCode				= PrmCashCode
							invoked.CashCodeGroup			= PrmCashCodeGroup
					    	invoked.BankTransactionCode		= PrmBankTransactionCode
					    	invoked.UseSystemDate			= PrmUseSystemDate
					    	invoked.EnterDate				= PrmEnterDate
					    	invoked.Days					= PrmDays
					    	invoked.ReleaseDateRange		= LocalDateRange
					    	invoked.GeneralLedgerSourceCode	= PrmGeneralLedgerSourceCode
							invoked.Status					= 1 
							invoked.ReleaseType				= 3 
					Exit Rules
						invoke StatusUpdate CashLedgerMassReleaseResultView.CashLedgerMassReleaseResult	
							
				Instance Rules
					increment RecordCount
					initialize MassReleaseErrorMessage
					MassReleaseError					 = false
					invoke ReleaseFromMassRelease	
						resume on error
							MassReleaseError		= true
							MassReleaseErrorMessage	= error message
					if (MassReleaseError)	
						invoke Create CashLedgerTransactionError 
							fill in fields from this instance
							invoked.CashLedgerReturnedPayment.TransactionIDNumber = CashLedgerReturnedPayment.TransactionIDNumber
							invoked.BankTransactionCode 		= CashLedgerReturnedPayment.BankTransactionCode
							invoked.CashLedgerMassReleaseResult	= CashLedgerMassReleaseResultView.CashLedgerMassReleaseResult
							invoked.CashLedgerSourceRecord		= "CRP"
							invoked.ErrorLevel					= 1		
							invoked.ErrorClass					= 3		
							invoked.ErrorType					= 9		
							invoked.ErrorSource					= 6		
							invoked.ErrorDescription			= MassReleaseErrorMessage
					CashLedgerMassReleaseResult	= CashLedgerMassReleaseResultView.CashLedgerMassReleaseResult			

		RemoveCashLedgerMassReleaseResult is an Instance Action	
			default label is untranslatable
			restricted
			Entrance Rules					
			Action Rules
				initialize CashLedgerMassReleaseResult 

		RerunMassReleaseForErrors is a Set Action	
			default label is untranslatable
			restricted
			completion message is "<MassReleaseCompleteMessage>"
			run in background		
			Parameters
				PrmCashManagementGroup			is a CashManagementGroup
				PrmCashLedgerMassReleaseResult 	is a CashLedgerMassReleaseResult
			Parameter Rules
				PrmCashManagementGroup
					required
				PrmCashLedgerMassReleaseResult
					required									
			Local Fields
				RecordCount						is Numeric 10
				MassReleaseError				is Boolean
				MassReleaseErrorMessage			is Alpha 150
				
			Instance Selection
				where (CashManagementGroup	 		= PrmCashManagementGroup
				and    CanRelease
				and    CashLedgerMassReleaseResult 	= PrmCashLedgerMassReleaseResult)
	
			Sort Order  
			    CashManagementGroup
				CashLedgerMassReleaseResult
				
				
			Action Rules
				Empty Set Rules
					invoke Update PrmCashLedgerMassReleaseResult.CashLedgerMassReleaseResult
						invoked.Status	= 2 
						
				Set Rules
					Entrance Rules
						initialize RecordCount
						invoke Update PrmCashLedgerMassReleaseResult.CashLedgerMassReleaseResult
							invoked.Status	= 1 
						
					Exit Rules
						invoke StatusUpdate PrmCashLedgerMassReleaseResult.CashLedgerMassReleaseResult	
				
				Instance Rules
					increment RecordCount
					initialize MassReleaseErrorMessage
					MassReleaseError				= false
					invoke ReleaseFromMassRelease	
						resume on error
							MassReleaseError		= true
							MassReleaseErrorMessage	= error message
					if (MassReleaseError)	
						invoke Update CashLedgerTransactionError set
							fill in fields from this instance
							invoked.ErrorDescription	= MassReleaseErrorMessage
				
		UpdateJournalizeGroup is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmJournalizeGroup		is like JournalizeGroup
			Action Rules 
				invoke UpdateJournalizeGroup CashLedgerGLDistributionsRel
					invoked.PrmJournalizeGroup		= PrmJournalizeGroup							

		CompanyPeriodClosePostDateUpdate	is a Set Action	
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup		is like CashManagementGroup
				PrmNewPostDate				is Date
				PrmPeriodEndDate			is Date
				PrmCashLedgerJobResult		is a CashLedgerJobResult
				PrmCompany					is a GeneralLedgerCompany
				PrmCloseDetail				is a CashLedgerJobResultDetail
			
			Parameter Rules
				PrmCashManagementGroup		required
				PrmNewPostDate				required
				PrmPeriodEndDate			required
				PrmCompany					required
				PrmCloseDetail				required
						
			Sort Order is ByCompany
				
			Instance Selection
				where (CashManagementGroup		= PrmCashManagementGroup
				and    Company.OrigCompany		= PrmCompany

				and	   Status.Unreleased
            	and    PostDate <= PrmPeriodEndDate) 
            
			Action Rules
				Empty Set Rules
					if (PrmCloseDetail.CanClose)
						invoke CloseCompany PrmCloseDetail	
					
				Set Rules
					Exit Rules
						LocalCashManagementGroup = PrmCashManagementGroup
						LocalCashLedgerJobResult = PrmCashLedgerJobResult
						LocalCompany = PrmCompany
						invoke Delete UnreleasedReturnedPaymentsErrorRel
						
						if (PrmCloseDetail.CanClose)
							invoke CloseCompany PrmCloseDetail
			        	
				Instance Rules
					PostDate	= PrmNewPostDate
					include CheckForRelatedChanges


		UpdateApprovalLevel is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				ParmEscalate	is Boolean
				ParmReassign	is Boolean
			Action Rules

				if (ParmReassign)
					if (ReassignToApprovalLevel entered)
						ApprovalLevel = ReassignToApprovalLevel.ApprovalLevel
						initialize ReassignToApprovalLevel
				else
				if (ParmEscalate)
					include GetNextEscalationApprovalLevel
					ApprovalLevel		= LocalApprovalLevel
					Approver			= LocalApprover
					ApproverTeam		= LocalApproverTeam
				else
					include GetNextApprovalLevel
					ApprovalLevel		= LocalApprovalLevel
					Approver			= LocalApprover
					ApproverTeam		= LocalApproverTeam


		UpdateApprovalFields is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmCurrentApprover	is a FinanceResource
				PrmCurrentTeam		is a FinanceTeam
				PrmApprovalLevel	is Numeric 8
			Action Rules
				Approver		= PrmCurrentApprover
				ApproverTeam	= PrmCurrentTeam
				ApprovalLevel	= PrmApprovalLevel

		SubmitForApproval is an Instance Action
			completion message is "ApproveCashLedgerReturnedPaymentHasBeenSubmittedToTheQueueForProcessing"
	 		valid when (CanSubmitForApproval)
			Parameters
				PrmApprovalCode		is a ApprovalCode
					default label is "ApprovalCode"
				PrmCommentText		is a CommentText
					default label is "Comment"

			Parameter Rules
				PrmApprovalCode
					initial value is CashCode.ApprovalCode
					default to CashCode.ApprovalCode
					if (!CashManagementGroup.ApprovalCodesNotUsedForReturnedPayments)
						required
							"ApprovalCodeIsRequired"
					constraint (!PrmApprovalCode.ApprovalCodeUsesMaximumAmounts)
						"CannotSelectApprovalCodesSetUpForNonBatchedCashLedgerPayments"
					
		    Entrance Rules
				constraint (!BudgetEditInProgress)		
					"CannotSubmitForApproval;BudgetEditInProgress"
				constraint (BankAccountReturnAmount = AppliedDistributionBankAmount) 
					"CannotSubmitForApproval;TransactionIsOutOfBalance"                 
				constraint (first BankAccountBalancesRel not exists
				or		    DepositDate > first BankAccountBalancesRel.BankAccountBalance)
					"TransactionDateIsForAClosedBankPeriod"									

			Action Rules
				CommentText			+= PrmCommentText
				if (!CashManagementGroup.ApprovalCodesNotUsedForReturnedPayments)
					ApprovalCode		= PrmApprovalCode
					constraint (ApprovalCode.HasApprovalLevels) 
						"CannotComplete;TheApprovalCodeHasNoApprovalLevels"
					constraint (!ApprovalCode.HasTeamWithNoMembers) 
						"CannotComplete;TheApprovalCodeHasATeamWithNoMembers"
					constraint (!ApprovalCode.HasInvalidEscalations)
						"CannotComplete:TheApprovalCodeHasInvalidEscalationSettings"
					constraint (!ApprovalCode.HasInactiveResources)
						"CannotComplete;TheApprovalCodeHasInactiveResources"
	
					initialize ApprovalLevel
					initialize Approver
					initialize ApproverTeam	
					include GetNextApprovalLevel
					ApprovalLevel	= LocalApprovalLevel
					Approver 		= LocalApprover
					ApproverTeam	= LocalApproverTeam
				include InitiateApprovalProcessFlow
			
				Status	= Status.PendingApproval

		Approve is an Instance Action
			default label is untranslatable
			restricted
			Local Fields
				LocalReleaseError			is Boolean
				LocalReleaseErrorMessage	is Alpha 150
		    Entrance Rules
				constraint (BankAccountReturnAmount = AppliedDistributionBankAmount)
					"CannotApprove;TransactionIsOutOfBalance"
				constraint (first BankAccountBalancesRel not exists
				or		    DepositDate > first BankAccountBalancesRel.BankAccountBalance)
					"TransactionDateIsForAClosedBankPeriod"									
			Action Rules
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	

				invoke Release
					resume on error
						LocalReleaseError 			= true
						LocalReleaseErrorMessage 	= error message
				if(LocalReleaseError)
					invoke Create CashLedgerTransactionError
						fill in fields from this instance
						invoked.CashLedgerReturnedPayment.TransactionIDNumber	= CashLedgerReturnedPayment.TransactionIDNumber
						invoked.BankTransactionCode			= CashLedgerReturnedPayment.BankTransactionCode
						invoked.CashLedgerSourceRecord		= "CRP"
						invoked.ErrorLevel					= 1		
						invoked.ErrorClass					= 3		
						invoked.ErrorType					= 14	
						invoked.ErrorSource					= 10	
						invoked.ErrorDescription			= LocalReleaseErrorMessage
					Status = Status.Unreleased
				
		Reject is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				Status	= Status.Unreleased
				
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	

		RejectWithReasonCode is an Instance Action
			default label is untranslatable
			restricted
			subject is RejectCashLedgerReturnedPayment
			reason code required
			action comment required

			Action Rules
				Status	= Status.Unreleased
				
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	

			Exit Rules
				invoke Create CashLedgerRetPaymentReasonCodeUsage
					invoked.CashManagementGroup			= CashManagementGroup
					invoked.CashCode					= CashCode
					invoked.CashLedgerReturnedPayment	= CashLedgerReturnedPayment
					invoked.ReasonCode					= reason code
					invoked.Description					= reason code.Description
					invoked.Type						= 1 
					invoked.Comment						= action comment	
				
		ManualApprove is an Instance Action
			valid when (CanManuallyApproveOrReject)
			confirmation required
				"ThisWillBypassTheProcessFlowApprovalProcess;DoYouWantToContinue?"
		    Entrance Rules
				constraint (BankAccountReturnAmount = AppliedDistributionBankAmount) 
					"CannotApprove;TransactionIsOutOfBalance"
				constraint (first BankAccountBalancesRel not exists
				or		    DepositDate > first BankAccountBalancesRel.BankAccountBalance)
					"TransactionDateIsForAClosedBankPeriod"									

			Action Rules
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	

				invoke Release
				cancel CashLedgerReturnedPaymentApproval process
						
		ManualReject is an Instance Action
			valid when (CanManuallyApproveOrReject)
			subject is RejectCashLedgerReturnedPayment
			Parameters
				PrmComment		is Alpha size up to 500
			Action Rules
				if (CashManagementGroup.RejectCashLedgerReturnedPaymentReasonCodeRequired)
					constraint (reason code entered)
						"ReasonCodeIsRequiredForRejectingCashLedgerPaymentRequests"
				Status	= Status.Unreleased
			
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	
				
				cancel CashLedgerReturnedPaymentApproval process

			Exit Rules
				invoke Create CashLedgerRetPaymentReasonCodeUsage
					invoked.CashManagementGroup			= CashManagementGroup
					invoked.CashCode					= CashCode
					invoked.CashLedgerReturnedPayment	= CashLedgerReturnedPayment
					invoked.ReasonCode					= reason code
					invoked.Description					= reason code.Description
					invoked.Type						= 1 
					invoked.Comment						= PrmComment	

		ApplyComments is an Instance Action
			valid when (CanUpdateComments)
			Parameters
				PrmCommentText		is a CommentText
					default label is "Comment"
			Action Rules
				CommentText			+= PrmCommentText	

		CashLedgerReturnedPaymentPurge is a Set Action
			restricted
			Parameters
				PrmCashManagementGroup       is a CashManagementGroup
				PrmCashCode                  is a CashCode
				PrmCashCodeGroup             is a CashCodeGroup
				PrmReturnedPaymentCutOffDate is Date
				
			Parameter Rules
				PrmCashCodeGroup
					if (PrmCashCodeGroup entered)
						constraint (PrmCashCode not entered)
							"CannotEnterBothCashCodeAndCashCodeGroup"		
					LocalCashCodeGroup	= PrmCashCodeGroup
			Instance Selection
				where (CashManagementGroup		    =  PrmCashManagementGroup
				and  ((PrmCashCode				       entered	
				and    CashCode					    =  PrmCashCode)
				or     PrmCashCode				       not entered)
				and  ((PrmCashCodeGroup			       entered	
				and    CashCodeGroupDetailRel          exists)
				or     PrmCashCodeGroup			       not entered)
				and    PrmReturnedPaymentCutOffDate    entered
				and    DepositDate                 <=  PrmReturnedPaymentCutOffDate
				and    Status.Released)
			
			Action Rules
				Instance Rules
					invoke Purge CashLedgerGLDistributionsRel
					invoke Purge CashLedgerTransactionPurgeRel
					invoke Purge							
										
		Purge is a Purge Action
			restricted	
																		
