AccountingUnitStructure is a BusinessClass
	owned by GeneralLedger
	representative text is "<AccountingUnitStructure>-<Description>"
	
	prefix is AcUSt
	
	Ontology
		symbolic key is AccountingUnitStructure
		
	Patterns
	
    Persistent Fields
    	Description
		AccountingUnitTopNodeGroup
		StructureSequence			is Numeric 4
		IsEnterpriseStructure		is Boolean
		UnusedDimensionStructure	is Boolean
			restricted		
		Active

   	Context Fields
		AccountingEntity
		AccountingUnit
		
	Transient Fields




			
    Derived Fields
    
    	DerivedEntity		is a DerivedField
    		type is like AccountingEntity
    		restricted
    		return AccountingEntity
    		
    	DerivedEntityNode   is a StringField 
    		type is AlphaUpper 25 
    		restricted
    		StructureSequence
 			"_"
			AccountingEntity
			"_ENTITY"   		

    		
		TopNodeString	    is a StringField
			type is AlphaUpper 15
			restricted
			StructureSequence
			"_TOP_NODE"

		DerivedOldPrefix	is a StringField
			type is AlphaUpper 15
			restricted
			StructureSequence
			"_"
			
		DerivedNewPrefix    is a StringField
			type is AlphaUpper 15
			restricted
			LocalNewStructureSequence
			"_"
			





			
		DerivedSystemAccountingUnit is a DerivedField
			type is like AccountingUnit
			if (SystemAccountingUnitRel exists)
				return SystemAccountingUnitRel.AccountingUnit
			else
				return UndefinedMsg

		DerivedInterEntityAccountingUnit is a DerivedField
			type is like AccountingUnit
			if (InterEntityAccountingUnitRel exists)
				return InterEntityAccountingUnitRel.AccountingUnit
			else
				return UndefinedMsg

		DerivedDefaultZoneAccountingUnit is a DerivedField
			type is like AccountingUnit
			if (DefaultZoneAccountingUnitRel exists)
				return DefaultZoneAccountingUnitRel.AccountingUnit
			else
				return UndefinedMsg		
		
		DerivedEntityZoneAccountingUnit is a DerivedField
			type is like AccountingUnit
			if (EntityZoneAccountingUnitRel exists)
				return EntityZoneAccountingUnitRel.AccountingUnit
			else
				return UndefinedMsg
				
		UndefinedMsg is a LabelField
			restricted
			"NotDefined"
		
		EntityNodeMinusPrefix		is a StringField
			type is AlphaUpper 25		
			restricted	
			AccountingEntity
			"_ENTITY"	

		InactiveMF is a MessageField		
			restricted
			"Inactive"

		ActiveMF is a MessageField		
			restricted
			"Active"

		StatusMessage is a ConditionalField		
			type is Alpha size 20
			if (Active)
				ActiveMF
			else
				InactiveMF

		IsEnterpriseStructureMF is a MessageField		
			restricted
			"Enterprise_Structure"

		IsEnterpriseStructureMessage is a ConditionalField		
			type is Alpha size 20
			if (IsEnterpriseStructure)
				IsEnterpriseStructureMF
			else
				blank

	Local Fields
		LocalNewStructure	   		is an AccountingUnitStructure
		LocalCopyDimension        	is like AccountingUnit
		LocalNewDimension         	is like AccountingUnit
		LocalNewStructureSequence   is Numeric 4
		LocalParentDimension	    is like AccountingUnit
		LocalSubordinateDimension 	is like AccountingUnit
		I1					    	is Numeric 2		
 		LocalDimensionNode			is an AccountingUnitTopNodeGroup
 		LocalOldTopNode				is an AccountingUnitTopNodeGroup
 		AcctUnitStructureEntity		is an AccountingEntity
 		LocalEntityNode				is like AccountingUnit	
 		InvokedByUnusedStructure
 		LocalRunGroup				is AlphaUpper 30
 						
	Relations
		TopNodeAccountingUnitRel
			one-to-many relation to AccountingUnit
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.IsTopNode)
		OldTopNodeHierarchyRel
			one-to-many relation to AccountingUnitHierarchy
			Field Mapping uses ByParentAccountingUnit
				related.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
				related.ParentNodeGroup.DimensionEntity = LocalOldTopNode.DimensionEntity
				related.ParentNodeGroup.DimensionNode   = LocalOldTopNode.DimensionNode
		StructureDimensionRel
			one-to-many relation to AccountingUnit
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
			Instance Selection
				where (related.AccountingUnit	!= StructureDimensionHierarchyRel.AccountingUnit)
		StructureDimensionForEntityRel
			one-to-many relation to AccountingUnit
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AccountingEntity		= AccountingEntity
			Instance Selection
				where (related.AccountingUnit	!= StructureDimensionHierarchyRel.AccountingUnit)		
		StructureDimensionHierarchyRel 
			one-to-many relation to AccountingUnitHierarchy
			Field Mapping uses ByParentAccountingUnit
				related.FinanceEnterpriseGroup	        = FinanceEnterpriseGroup
				related.ParentNodeGroup.DimensionEntity = AccountingUnitTopNodeGroup.DimensionEntity
				related.ParentNodeGroup.DimensionNode   = AccountingUnitTopNodeGroup.DimensionNode
		DimensionsInStructureRel
			one-to-many relation to AccountingUnit
			Field Mapping uses ByDimensionStructure
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.DimensionStructure			= AccountingUnitStructure
		EnterpriseDimensionStructureRel
			one-to-many relation to AccountingUnitStructure
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (related.IsEnterpriseStructure
			    and    related.UniqueID != UniqueID)
		NotInDimensionStructureRel
			one-to-many relation to AccountingUnit
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (related.NotUsedInHierarchy)
		EntityNodeRel
			one-to-many relation to AccountingUnit
			Field Mapping uses ByDimensionStructure
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.DimensionStructure		= AccountingUnitStructure
				related.AccountingUnitType		= 4
				related.AccountingEntity		= DerivedEntity	
		EntityTopNodeRel
			one-to-many relation to AccountingUnit
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AccountingEntity		= DerivedEntity
				related.AccountingUnit			= DerivedEntityNode 
		SystemAccountingUnitRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses BySystemAccountingUnitInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingUnitStructure				= AccountingUnitStructure
				related.AccountingEntity					= AccountingEntity

		DefaultZoneAccountingUnitRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses ByDefaultZoneAccountingUnitInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingUnitStructure				= AccountingUnitStructure
				related.AccountingEntity					= AccountingEntity

		EntityZoneAccountingUnitRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses ByEntityZoneAccountingUnitInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingUnitStructure				= AccountingUnitStructure
				related.AccountingEntity					= AccountingEntity

		UploadErrorsRel	is an AccountingUnitUpload set
			Instance Selection
				where (related.ErrorMessage entered)
		RunGroupRel
			one-to-many relation to AccountingUnitUpload
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingUnitStructure				= AccountingUnitStructure
			Instance Selection
				where (related.AccountingUnitUpload.RunGroup = LocalRunGroup)
		ContextAcctUnitHierarchyRel
			one-to-many relation to AccountingUnitHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingUnitStructure				= AccountingUnitStructure
				related.AccountingEntity					= AccountingEntity
				related.AccountingUnit						= AccountingUnit
		InterEntityAccountingUnitRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses ByInterEntityAccountingUnitInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingUnitStructure				= AccountingUnitStructure
				related.AccountingEntity					= AccountingEntity
		
		SecurityGroupsRel
			one-to-many relation to AccountingUnitSecurityGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.AccountingUnitSecurityGroup = any AccountingUnitSecurityGroupMember set.AccountingUnitSecurityGroup
		SecurityGroupsRequiringRebuildRel is an AccountingUnitSecurityGroupMember set
			Instance Selection
				where (related.RequiresRebuild)
		SecurityGroupsNotRequiringRebuildRel
			one-to-many relation to AccountingUnitSecurityGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.AccountingUnitSecurityGroup = any AccountingUnitSecurityGroupMember set.AccountingUnitSecurityGroup
			Instance Selection
				where (!related.RequiresRebuild)
										
    Conditions
		CanDefineZones
			restricted
			when (AccountingEntity.AccountingUnitZoneBalancing)
		UploadRecordsExist
			restricted
			when (AccountingUnitUpload set exists)
		UploadErrorsExist
			restricted
			when (UploadErrorsRel exists)
		EligibleForExport
			restricted
			when ((!UploadRecordsExist)
			and   (!UnusedDimensionStructure))	
		AvailableStructure
			restricted
			when ((!UnusedDimensionStructure)
			and   (!ContextAcctUnitHierarchyRel exists))
		InterEntityAccountingUnitExists
			restricted
			when (InterEntityAccountingUnitRel exists)
		UsedInASecurityGroup
			when (AccountingUnitSecurityGroupMember set exists)
		SecurityGroupRequiresRebuild
			when (SecurityGroupsRequiringRebuildRel exists)
		DeleteAllowed
        	restricted
        	when (!Active)	
	Sets
		ByStructureSequence
			Sort Order
				FinanceEnterpriseGroup
				StructureSequence
		






				
		ByEnterpriseStructure
			Sort Order
				FinanceEnterpriseGroup
				IsEnterpriseStructure descending
				AccountingUnitStructure
		
	Attach Rules
		if (!parentcontext.name = "AccountingUnit"
		and !parentcontext.name = "AccountingUnitUpload"
		and !parentcontext.name = "AccountingUnitShadow"
		and !parentcontext.name = "AccountingUnitHierarchy"
		and !parentcontext.name = "FinanceEnterpriseGroup"
		and !parentcontext.name = "AccountAnalysisSettings"
		and !parentcontext.name = "ReportingBasis")	
			constraint (Active)
				"StructureIsNotActive"
						
    Field Rules
		Description
			required
		StructureSequence
			autosequence using ByStructureSequence
			if (!StructureSequence = old StructureSequence)
				cannot be changed
					"AccountingUnitStructureSequenceCannotBeChanged"
		IsEnterpriseStructure
			constraint (!UnusedDimensionStructure)
				"TheUnusedDimensionStructureCannotBeTheEnterpriseStructure"				
			constraint (Active)
				"EnterpriseStructureMustBeActive"
			constraint (!EnterpriseDimensionStructureRel exists)
				"<first EnterpriseDimensionStructureRel.AccountingUnitStructure>AlreadyDesignatedAsEnterpriseStructure"
		Active
			if (UnusedDimensionStructure)
				Active = false
				
	Rule Blocks
		UpdateFinanceEnterpriseGroupAUStructure
			if (action type.Create)
				if (IsEnterpriseStructure)
					invoke SetEnterpriseChart FinanceEnterpriseGroup
						invoked.PrmEnterpriseAUStructure = AccountingUnitStructure
			else						
				if (IsEnterpriseStructure changed)
					invoke SetEnterpriseChart FinanceEnterpriseGroup
						if (!IsEnterpriseStructure)
							invoked.PrmClearAUStructure = true
						else
							invoked.PrmEnterpriseAUStructure = AccountingUnitStructure

	Actions
		T2VCreate is a Create Action
			restricted
			default label is untranslatable

		Create is a Create Action
		
			Entrance Rules



			Exit Rules
				InvokedByUnusedStructure = true
				
				AcctUnitStructureEntity = "AU_STRCT_ENT"
				
				if (!AcctUnitStructureEntity exists)
					invoke Create AccountingEntity
						invoked.FinanceEnterpriseGroup    = FinanceEnterpriseGroup
						invoked.AccountingEntity 	   	  = AcctUnitStructureEntity
						invoked.IsAcctUnitStructureEntity = true

					for each TopNodeAccountingUnitRel
						invoke Update each
							invoked.AccountingEntity = AcctUnitStructureEntity
					
					for each FinanceEnterpriseGroup.ReportingBasis set
						if (each.AccountingUnitStructure entered)
							invoke Update each
								invoked.AccountingUnitTopNodeGroup.DimensionEntity = AcctUnitStructureEntity
						
					for each FinanceEnterpriseGroup.AccountingUnitStructure set
						if (each.AccountingUnitStructure != AccountingUnitStructure)
							LocalOldTopNode = each.AccountingUnitTopNodeGroup
							for each OldTopNodeHierarchyRel
								invoke Update each
									invoked.ParentNodeGroup.DimensionEntity = AcctUnitStructureEntity
																		
							invoke Update each
								invoked.AccountingUnitTopNodeGroup.DimensionEntity = AcctUnitStructureEntity
					
				invoke Create AccountingUnit
					invoked.FinanceEnterpriseGroup  	= FinanceEnterpriseGroup
					invoked.AccountingEntity			= AcctUnitStructureEntity
					invoked.AccountingUnit				= TopNodeString
					invoked.DisplayAccountingUnit		= "TOP_NODE"
					invoked.DimensionStructure			= AccountingUnitStructure
					invoked.Description					= (Description + " Top Level")

					invoked.AccountingUnitType			= 3
					invoked.SkipHierarchy				= true
					invoked.IsTopNode					= true				
			
				AccountingUnitTopNodeGroup.DimensionEntity = AcctUnitStructureEntity
				AccountingUnitTopNodeGroup.DimensionNode   = TopNodeString
				include UpdateFinanceEnterpriseGroupAUStructure
				
		Update is an Update Action
		
			Action Rules
				include UpdateFinanceEnterpriseGroupAUStructure
				invoke Update AccountingUnitTopNodeGroup.DimensionNode
					invoked.Description					= (Description + " Top Level")

		DeleteStructure 	is a Delete Action
			restricted
			valid when (DeleteAllowed)

		Delete is an Instance Action
		    valid when (DeleteAllowed)
			confirmation required
				"AreYouSureYouWantToPerformTheFollowingAction:_Delete_Structure?"
			completion message is "AccountingUnitStructureDeleteSubmited"
			Local Fields
				LocalAsyncId			is a AsyncActionRequest
			Entrance Rules
				constraint (!IsEnterpriseStructure)
					"CannotDeleteEnterpriseStructure"
				constraint (!UnusedDimensionStructure)
					"CannotDeleteUnusedDimensionStructure"
				constraint (!Active)
					"CannotDeleteActiveAccountUnitStructure"						
				Active = false
				initialize AccountingUnitTopNodeGroup
				invoke DeleteAllInStructure	AccountingUnitHierarchy
					assign async action request id to LocalAsyncId
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmAccountingUnitStructure	= AccountingUnitStructure
			Exit Rules
				invoke DeleteAllDimensionsInStructure	AccountingUnit
					run after LocalAsyncId
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmAccountingUnitStructure	= AccountingUnitStructure

		RestrictedDelete is a Delete Action
			restricted

			Entrance Rules					
					
				invoke PrepareForDelete


				invoke DeleteAll DimensionsInStructureRel
												
		PrepareForDelete is an Instance Action
			restricted
			
			Action Rules
				initialize AccountingUnitTopNodeGroup
		
		CopyStructure is an Instance Action
			valid when (!UnusedDimensionStructure)
			run in background
			completion message is "CopyInitiated"
			
			Parameters
				NewStructure			is like AccountingUnitStructure
				NewDescription			is a Description
				MakeNewStructureActive  is Boolean
							
			Parameter Rules
				NewStructure
					required
					LocalNewStructure = NewStructure
					constraint (!LocalNewStructure exists)
						"DimensionStructureAlreadyExists"
				NewDescription
					required

			Local Fields
				AsyncId			is a AsyncActionRequest
										
			Action Rules
				invoke Create AccountingUnitStructure
					invoked.FinanceEnterpriseGroup	   = FinanceEnterpriseGroup
					invoked.AccountingUnitStructure    = NewStructure
					invoked.Description			   	   = NewDescription
					invoked.IsEnterpriseStructure 	   = false
					invoked.Active					   = MakeNewStructureActive
								
			Exit Rules
				
				invoke CopyAccountingUnits AccountingUnitHierarchy in background
					assign async action request id to AsyncId
					invoked.PrmFinanceEnterpriseGroup  = FinanceEnterpriseGroup
					invoked.PrmStructure 			   = AccountingUnitStructure
					invoked.PrmNewStructure	 		   = NewStructure
					
				invoke BuildShadowFile LocalNewStructure in background
					run after AsyncId
		
		UploadHierarchy is an Instance Action
			valid when (UploadRecordsExist)
			completion message is "UploadInitiated"	
			run in background
			
			Parameters
				PrmRunGroup				is AlphaUpper 30
					default label is "RunGroup"
				
			Parameter Rules
				PrmRunGroup
					required
					LocalRunGroup = PrmRunGroup
					constraint (RunGroupRel exists)
						"NoUploadRecordsExistForThisRunGroup"	
			
			Action Rules
				invoke UploadHierarchy AccountingUnitUpload in background
					invoked.PrmFinanceEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.PrmAccountingUnitStructure		= AccountingUnitStructure
					invoked.PrmRunGroup						= PrmRunGroup

		DeleteWholeHierarchy is an Action
			restricted
			confirmation required
				"TheEntireStructureWillBeDeleted."

			Entrance Rules
				constraint (!IsEnterpriseStructure)
					"CannotDeleteEnterpriseStructure"
				constraint (!UnusedDimensionStructure)
					"CannotDeleteUnusedDimensionStructure"						
					
				invoke PrepareForDelete

				invoke Delete AccountingUnitHierarchy set
				
			Exit Rules
				invoke DeleteAll DimensionsInStructureRel	

		ResetUploadErrors is an Instance Action

			completion message is "ResetInitiated"

			Parameters
				PrmRunGroup				is AlphaUpper 30
					default label is "RunGroup"
				
			Parameter Rules
				PrmRunGroup
					required
					LocalRunGroup = PrmRunGroup
					constraint (RunGroupRel exists)
						"NoUploadRecordsExistForThisRunGroup"
									
			Action Rules
				invoke ResetAllErrors AccountingUnitUpload in background
					invoked.PrmFinanceEnterpriseGroup  		= FinanceEnterpriseGroup
					invoked.PrmAccountingUnitStructure		= AccountingUnitStructure
					invoked.PrmRunGroup						= PrmRunGroup
												
		BuildShadowFile is an Instance Action
			restricted
		
			Local Fields
				LocalAsyncId			is an AsyncActionRequest
				
			Action Rules
				invoke DeleteShadowForStructure AccountingUnitShadow in background
					assign async action request id to LocalAsyncId
					invoked.PrmFinanceEnterpriseGroup  = FinanceEnterpriseGroup
					invoked.PrmAccountingUnitStructure = AccountingUnitStructure				
				
				invoke BuildShadowFile AccountingUnitHierarchy in background
					run after LocalAsyncId
					invoked.PrmFinanceEnterpriseGroup  = FinanceEnterpriseGroup
					invoked.PrmAccountingUnitStructure = AccountingUnitStructure
					
		BuildShadowFileForAccountingUnit is an Instance Action
			restricted
			
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAccountingEntity				is an AccountingEntity
					default label is "AccountingEntity"
				PrmAccountingUnit				is an AccountingUnit
					default label is "AccountingUnit"
		
			Action Rules
				invoke BuildShadowFile AccountingUnitHierarchy in foreground
					invoked.PrmFinanceEnterpriseGroup   = FinanceEnterpriseGroup
					invoked.PrmAccountingEntity		  	= PrmAccountingEntity
					invoked.PrmAccountingUnitStructure	= AccountingUnitStructure
					invoked.PrmAccountingEntity			= PrmAccountingEntity
					invoked.PrmAccountingUnit		    = PrmAccountingUnit
		
		ExportToUpload is an Instance Action


			completion message is "ExportInitiated"
						
			Parameters
				PrmRunGroup					is AlphaUpper 30
					default label is "RunGroup"
				PrmAccountingUnitGroup   is an AccountingUnit group
					default label is "CustomGroup"
				PrmAccountingEntityGroup is an AccountingEntityGroup
					default label is "<FinanceEnterpriseGroup.AccountingEntityLabel>Group"
				PrmAccountingEntity		 is an AccountingEntity
					default label is "<FinanceEnterpriseGroup.AccountingEntityLabel>"
				PrmSummaryAccountingUnit is an AccountingUnit
					default label is "Summary<FinanceEnterpriseGroup.AccountingUnitLabel>"	
				PrmPostingAccountingUnit is an AccountingUnit
					default label is "Posting<FinanceEnterpriseGroup.AccountingUnitLabel>"									

			Parameter Rules
				PrmRunGroup
					required
					LocalRunGroup = PrmRunGroup
					constraint (!RunGroupRel exists)
						"UploadRecordsAlreadyExistForThisRunGroup"	
									
				PrmAccountingUnitGroup
					constraint (!PrmAccountingEntityGroup entered
					and			!PrmAccountingEntity entered
					and			!PrmSummaryAccountingUnit entered
					and			!PrmPostingAccountingUnit entered)
						"CannotBeUsedWithOtherSpecifiedParameters"
						
				PrmAccountingEntityGroup
					constraint (!PrmAccountingUnitGroup entered
					and			!PrmAccountingEntity entered
					and			!PrmSummaryAccountingUnit entered
					and         !PrmPostingAccountingUnit entered)
						"CannotBeUsedWithOtherSpecifiedParameters"
														
				PrmAccountingEntity
					constraint (!PrmAccountingUnitGroup entered
					and			!PrmAccountingEntityGroup entered)
						"CannotBeUsedWithOtherSpecifiedParameters"
										
				PrmSummaryAccountingUnit
					constraint (!PrmAccountingUnitGroup entered
					and			!PrmAccountingEntityGroup entered
					and         !PrmPostingAccountingUnit entered)
						"CannotBeUsedWithOtherSpecifiedParameters"
										
				PrmPostingAccountingUnit
					constraint (!PrmAccountingUnitGroup entered
					and			!PrmAccountingEntityGroup entered
					and         !PrmSummaryAccountingUnit entered)
						"CannotBeUsedWithOtherSpecifiedParameters"					
			
			Local Fields
				LocalAccountingEntity	is an AccountingEntity
				LocalEntityNode			is an AccountingUnit
					context of LocalAccountingEntity
			
			Action Rules
			
				if ((!PrmAccountingUnitGroup entered)
				and (!PrmAccountingEntityGroup entered)
				and (!PrmAccountingEntity entered)
				and (!PrmSummaryAccountingUnit entered)
				and (!PrmPostingAccountingUnit entered))
					invoke ExportToUpload AccountingUnitTopNodeGroup.DimensionNode in background
						invoked.PrmFinanceEnterpriseGroup         = FinanceEnterpriseGroup
						invoked.PrmAccountingUnitStructure	      = AccountingUnitStructure
						invoked.PrmRunGroup						  = PrmRunGroup			
				else
				if (PrmAccountingEntityGroup entered)
					for each PrmAccountingEntityGroup.AccountingEntityGroupMember set
						LocalAccountingEntity		= each.AccountingEntity
						LocalEntityNode				= (StructureSequence + "_" + LocalAccountingEntity + "_ENTITY")				
						invoke ExportToUpload LocalEntityNode in background
							invoked.PrmFinanceEnterpriseGroup     = FinanceEnterpriseGroup
							invoked.PrmAccountingUnitStructure	  = AccountingUnitStructure
							invoked.PrmRunGroup					  = PrmRunGroup
				else
				if ((PrmAccountingEntity entered)
				and (!PrmSummaryAccountingUnit entered)
				and (!PrmPostingAccountingUnit entered))
					LocalAccountingEntity		  = PrmAccountingEntity
					LocalEntityNode				= (StructureSequence + "_" + LocalAccountingEntity + "_ENTITY")
					invoke ExportToUpload LocalEntityNode in background
						invoked.PrmFinanceEnterpriseGroup         = FinanceEnterpriseGroup
						invoked.PrmAccountingUnitStructure	      = AccountingUnitStructure
						invoked.PrmRunGroup						  = PrmRunGroup
				else
				if (PrmSummaryAccountingUnit entered)
					invoke ExportToUpload PrmSummaryAccountingUnit in background
						invoked.PrmFinanceEnterpriseGroup         = FinanceEnterpriseGroup
						invoked.PrmAccountingUnitStructure	      = AccountingUnitStructure
						invoked.PrmRunGroup						  = PrmRunGroup
				else
				if (PrmPostingAccountingUnit entered)														
					invoke ExportToUpload PrmPostingAccountingUnit in background
						invoked.PrmFinanceEnterpriseGroup         = FinanceEnterpriseGroup
						invoked.PrmAccountingUnitStructure	      = AccountingUnitStructure
						invoked.PrmRunGroup						  = PrmRunGroup
				else																		
					invoke ExportToUpload AccountingUnitHierarchy in background
						invoked.PrmFinanceEnterpriseGroup  = FinanceEnterpriseGroup
						invoked.PrmAccountingUnitStructure = AccountingUnitStructure
						invoked.PrmRunGroup				   = PrmRunGroup	
						invoked.PrmAccountingUnitGroup	   = PrmAccountingUnitGroup

		CleanupUnusedDimensions is an Instance Action
			restricted
			
			Action Rules
				InvokedByUnusedStructure = true
				invoke CleanupUnusedAccountingUnits AccountingUnit in background
					invoked.PrmFinanceEnterpriseGroup  = FinanceEnterpriseGroup
					invoked.PrmAccountingUnitStructure = AccountingUnitStructure
				
		AddAccountingUnitToUnusedStructure is an Instance Action
			restricted
			
			Parameters
				PrmAccountingEntity is an AccountingEntity
					default label is "AccountingEntity"
				PrmAccountingUnit	is an AccountingUnit
					default label is "AccountingUnit"
				
			Action Rules
				constraint (UnusedDimensionStructure)
					"ActionNotValidForStructure<AccountingUnitStructure>"
				
				InvokedByUnusedStructure = true
				LocalEntityNode 		 = DerivedEntityNode
				if (!EntityNodeRel exists)
					invoke CreateCopy AccountingUnit
						invoked.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
						invoked.DimensionStructure    	 	= AccountingUnitStructure
						invoked.AccountingUnitType     		= 4
						invoked.AccountingEntity      	 	= PrmAccountingEntity						
						invoked.AccountingUnit				= LocalEntityNode
						invoked.Description					= PrmAccountingEntity.Name 
						invoked.DisplayAccountingUnit		= EntityNodeMinusPrefix
					invoke Create AccountingUnitHierarchy
						invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.AccountingUnitStructure		= AccountingUnitStructure
						invoked.AccountingEntity			= PrmAccountingEntity
						invoked.AccountingUnit		    	= LocalEntityNode
						invoked.ParentNodeGroup				= AccountingUnitTopNodeGroup							
						invoked.DisplayAccountingUnit		= EntityNodeMinusPrefix						
				
				invoke AddPostingAccountingUnitToStructure PrmAccountingUnit
					invoked.PrmStructure	  		= AccountingUnitStructure
					invoked.PrmParentAccountingUnit = LocalEntityNode
					
		RemoveAccountingUnitFromUnusedStructure is an Instance Action
			restricted
			
			Parameters
				
				PrmAccountingEntity is an AccountingEntity
					default label is "AccountingEntity"
				PrmAccountingUnit	is an AccountingUnit
					default label is "AccountingUnit"
				
			Action Rules
				constraint (UnusedDimensionStructure)
					"ActionNotValidForStructure<AccountingUnitStructure>"
				
				InvokedByUnusedStructure = true	
				invoke RemoveFromStructure PrmAccountingUnit
	
		DeleteUploadRecordsForRunGroup is an Instance Action
			valid when (UploadRecordsExist)
			confirmation required
			completion message is "DeleteSubmitted"
			
			Parameters
				PrmRunGroup			is AlphaUpper 30
					default label is "RunGroup"
					
			Parameter Rules
				PrmRunGroup
					required
					
			Action Rules
				invoke DeleteAll AccountingUnitUpload in background
					invoked.PrmFinanceEnterpriseGroup  = FinanceEnterpriseGroup
					invoked.PrmAccountingUnitStructure = AccountingUnitStructure
					invoked.PrmRunGroup				   = PrmRunGroup
