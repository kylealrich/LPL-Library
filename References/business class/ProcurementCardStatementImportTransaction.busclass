ProcurementCardStatementImportTransaction is a BusinessClass
    owned by po
    prefix is PX2
    sql name is PCStatementImportTransaction
    classic name is PDCCHRGDTL

    Ontology
        symbolic key is ProcurementCardStatementImportTransaction
            classic set name is PX2SET1
            classic name for ProcurementCardStatementImportTransaction.TransactionNumber is TXN-NBR
            classic name for ProcurementCardProgram is PCARD-PROGRAM
            classic name for ProcurementCardStatementImport is STATEMENT

    Patterns
        implements ContextualParent
        implements StaticJava
        disable AuditIndex
		disable Auditing 
       	disable EffectiveDated

    Persistent Fields
        TransactionCreated       is Boolean
        ProcurementCardNumber
            classic name is PCARD-NBR
        Vendor                                
        MerchantCategoryCode    
            classic name is MCC-CODE
        Merchant
        TransactionDate           is Date
            classic name is TRAN-DATE
        PostDate                  is Date
        ProcurementCardUser                    
            classic name is CARD-USER-ID
        CardUserName
        PurchaseOrder
        PurchaseOrderLine
            classic name is PO-LINE-NBR
        Item
        VendorItem
        ItemDescription           is a Description
            classic name is ITEM-DESC
        Quantity
        	precision is DerivedNumberOfDecimalsQuantity
        VendorBuyUOM              is like UnitOfMeasure
        ItemCharge                is an InternationalAmount
        TaxAmount                 is an InternationalAmount
            classic name is TAX-AMT
        TotalAddOnChargeCost      is an InternationalAmount
            classic name is TOT-AOC-COST
        TaxIndicator            

	Local Fields
		
		LocalInterfaceResult            		is like ProcurementCardStatementInterfaceResult
		LocalErrorMessage               		is Alpha 150
	
	Derived Fields
		HasAccountsMsg is a MessageField
			restricted
			"HasAccounts"
		
		AddAccountsMsg is a MessageField
			restricted
			"AddAccounts"
		
		DistributionAmountMessage is a MessageField
			restricted
			"TotalOfDistributionAmountsDoesNotMatchItemChargeAmount"
			
		TaxDistributionAmountMessage is a MessageField
			restricted
			"TotalOfTaxDistributionAmountsDoesNotMatchTaxAmount"
		
		AccountsMsg	is a ConditionalField
			type is Alpha size 11
			restricted
			if (ImportTransactionDistributionsRel exists)
				HasAccountsMsg
			else
				AddAccountsMsg

		DerivedCardUserName is a DerivedField
			type is like CardUserName	 
			holds pii
			restricted
			if (ProcurementCardUser entered)
				return ProcurementCardUser.Name
			else
				return first ProcurementCardRequestsRel.CardUserName
				
		MerchantCrossReferenceCount     is a ComputeField
			type is Numeric 6
			restricted
			(instance count of MerchantCrossReferencesRel)

		DerivedNumberOfDecimalsQuantity is a ConditionalField
			type is Numeric size 1
			restricted
			if (PurchaseOrderLine exists)
				PurchaseOrderLine.DerivedNumberOfDecimalsQuantity
			else
			if (Item exists)
				Item.NumberOfDecimalsQuantity
			else
				InventoryCompanyRel.NumberOfDecimalsQuantity
				
		DerivedLastDistribution is a DerivedField
			type is Numeric size 3
			restricted
			return last AllImportTransactionDistributionsRel.ProcurementCardStatementImportTransactionDistribution
				
    Conditions
        HasNoPurchaseOrder
            classic name is NON-PO-CHARGE
            restricted
            when (PurchaseOrder not entered)

        HasPurchaseOrder
            classic name is PO-CHARGE
            restricted
            when (PurchaseOrder entered)

		HasDistributions
			restricted
			when (AllImportTransactionDistributionsRel exists)
		
		DocumentExists
			restricted
			when (ProcurementCardStatementImportTransaction exists)
			
    Sets
    
    	ByDate
            indexed
            Sort Order
            	ProcurementGroup
                ProcurementCardProgram
                ProcurementCardNumber
                ProcurementCardStatementImport
                TransactionDate 
                ProcurementCardStatementImportTransaction

        ByMerchant
            indexed
            Sort Order
            	ProcurementGroup
                ProcurementCardProgram
                ProcurementCardNumber
                ProcurementCardStatementImport
                Merchant
                ProcurementCardStatementImportTransaction
    
    Relations
        AllImportTransactionDistributionsRel
            one-to-many relation to ProcurementCardStatementImportTransactionDistribution
            Field Mapping uses symbolic key
            	related.ProcurementGroup											= ProcurementGroup
                related.ProcurementCardProgram         								= ProcurementCardProgram
                related.ProcurementCardStatementImport 								= ProcurementCardStatementImport
                related.ProcurementCardStatementImportTransaction.Company 			= ProcurementCardStatementImportTransaction.Company
                related.ProcurementCardStatementImportTransaction.TransactionNumber = ProcurementCardStatementImportTransaction.TransactionNumber
        
        ImportTransactionDistributionsRel
            one-to-many relation to ProcurementCardStatementImportTransactionDistribution
            Field Mapping uses symbolic key
            	related.ProcurementGroup											= ProcurementGroup
                related.ProcurementCardProgram         								= ProcurementCardProgram
                related.ProcurementCardStatementImport 								= ProcurementCardStatementImport
                related.ProcurementCardStatementImportTransaction.Company 			= ProcurementCardStatementImportTransaction.Company
                related.ProcurementCardStatementImportTransaction.TransactionNumber = ProcurementCardStatementImportTransaction.TransactionNumber
			Instance Selection
				where (related.ProcurementChargeDistributionType = "G")

        TaxImportTransactionDistributionsRel
            one-to-many relation to ProcurementCardStatementImportTransactionDistribution
            Field Mapping uses symbolic key
            	related.ProcurementGroup											= ProcurementGroup
                related.ProcurementCardProgram         								= ProcurementCardProgram
                related.ProcurementCardStatementImport 								= ProcurementCardStatementImport
                related.ProcurementCardStatementImportTransaction.Company 			= ProcurementCardStatementImportTransaction.Company
                related.ProcurementCardStatementImportTransaction.TransactionNumber = ProcurementCardStatementImportTransaction.TransactionNumber
        	Instance Selection
				where (related.ProcurementChargeDistributionType = "T")	
        
        ProcurementCardRequestsRel
            one-to-many relation to ProcurementCardRequest
            Field Mapping uses Set2
                related.ProcurementCardNumber   = ProcurementCardNumber
                related.ProcurementCardProgram	= ProcurementCardProgram
            Instance Selection
				where (ProcurementCardNumber entered
				and    related.ProcurementGroup = ProcurementGroup)
				
		MerchantCrossReferencesRel
        	one-to-many relation to MerchantCrossReference
        	Field Mapping uses Set2
        		related.ProcurementGroup				= ProcurementGroup
        		related.ProcurementCardProgram			= ProcurementCardProgram
            	related.Merchant 						= Merchant
            	
        ProcurementCardProgramRel
        	one-to-one relation to ProcurementCardProgram
        	Field Mapping uses symbolic key
        		related.ProcurementGroup				= ProcurementGroup
        		related.ProcurementCardProgram			= ProcurementCardProgram
        
        ProcurementCardStatementTransactionRel
        	one-to-one relation to ProcurementCardStatementTransaction
        	Field Mapping uses symbolic key
        		related.ProcurementGroup					= ProcurementGroup
        		related.ProcurementCardProgram				= ProcurementCardProgram
        		related.ProcurementCardStatement	 		= ProcurementCardStatementImport
        		related.ProcurementCardStatementTransaction = ProcurementCardStatementImportTransaction

		InventoryCompanyRel
			one-to-one relation to InventoryCompany
			Field Mapping uses symbolic key
				related.Company          			  = ProcurementCardStatementImportTransaction.Company

	Field Rules
			
		ProcurementCardUser
			initial value is first ProcurementCardRequestsRel.ProcurementCardUser
			default to first ProcurementCardRequestsRel.ProcurementCardUser
			
		CardUserName
			initial value is DerivedCardUserName
			default to first DerivedCardUserName
		
		Vendor
			if (Vendor !entered
			and PurchaseOrder !entered
			and Merchant exists)
				if (MerchantCrossReferenceCount = 1)
					Vendor = first MerchantCrossReferencesRel.Vendor
			
	Actions
	
		Create is a Create Action
		
		CreateNoRules is a Create Action
			restricted
			bypass field rules
		
		Update is an Update Action

			Action Rules
				constraint (!TransactionCreated)
					"CannotChange;TransactionHasAlreadyBeenCreated"
		
		Delete is a Delete Action
			
			Entrance Rules
				invoke Delete ProcurementCardStatementTransactionRel
		
		FastDelete is a Delete Action
			restricted
			bypass relational integrity rules
			
		InterfaceProcurementCardStatementTransactions is a Set Action    
			restricted
			Parameters
				PrmProcurementGroup					is a ProcurementGroup
				Program                             is a ProcurementCardProgram 
				Statement                           is like ProcurementCardStatementImport
				PrmResult                           is a ProcurementCardStatementInterfaceResult
				
			Local Fields
				LocalProcurementCardStatement				is like ProcurementCardStatement
				LocalProcurementCardStatementRecordInError  is Boolean
				LocalHasError                          		is Boolean
			
			Instance Selection			
				where (ProcurementGroup				= PrmProcurementGroup
				and   (ProcurementCardProgram 		= Program
				or     Program !entered)
				and   (ProcurementCardStatementImport = Statement
				or     Statement !entered)
				and   (PrmResult                    = ProcurementCardStatementImport.ResultProcessedBy
				or     ProcurementCardStatementImport.ResultProcessedBy !entered))

			Sort Order
				ProcurementGroup
				ProcurementCardProgram
				ProcurementCardStatementImport
				
			Action Rules
					
				ProcurementGroup Set Rules
					Exit Rules
						
						invoke FinishLoadInterface ProcurementCardStatementImport
							invoked.PrmProcurementGroup  	= PrmProcurementGroup
							invoked.PrmResult    			= PrmResult
			
				ProcurementCardStatementImport Set Rules
					
					Entrance Rules
						LocalProcurementCardStatement	 			= ProcurementCardStatementImport.ProcurementCardStatementImport
						LocalProcurementCardStatementRecordInError 	= ProcurementCardStatementImport.RecordInError
						
				Instance Rules
					LocalInterfaceResult       = PrmResult
					
					if   (LocalProcurementCardStatementRecordInError = false)
						LocalHasError 	= false
						if (!TransactionCreated)
							invoke Unreleased.Create ProcurementCardStatementTransaction
								resume on error
									LocalHasError  		= true
									LocalErrorMessage	= error message
								fill in fields from this instance
								if (HasDistributions)
									invoked.TransientDistributionsExist = true
								invoked.ProcurementCardStatement   	        					= ProcurementCardStatementImport
								invoked.ProcurementCardStatementTransaction.TransactionNumber 	= ProcurementCardStatementImportTransaction.TransactionNumber
								invoked.ProcurementCardStatementTransaction.Company			 	= ProcurementCardStatementImportTransaction.Company
						
						if (LocalHasError)
							invoke SetError ProcurementCardStatementImport
								invoked.PrmErrorMessage = LocalErrorMessage
								invoked.PrmResult       = PrmResult
								invoked.PrmErrorLevel   = 2
						else
						if (!LocalHasError)
							TransactionCreated = true
							if (Merchant !exists
							and ProcurementCardProgramRel.AutomaticallyAddMerchant)
								invoke CreateFromInterface Merchant
									invoked.ProcurementGroup 	   = ProcurementGroup
									invoked.ProcurementCardProgram = ProcurementCardProgram
									invoked.Merchant               = Merchant
									invoked.Active                 = true
							if (!HasDistributions)
								invoke FastDelete
							else
							if (HasDistributions)
								if (ItemCharge - TaxAmount != sum ImportTransactionDistributionsRel.DistributionAmount)
									LocalHasError 		= true
									LocalErrorMessage 	= DistributionAmountMessage
								if (TaxAmount != sum TaxImportTransactionDistributionsRel.DistributionAmount)
									LocalHasError       = true
									LocalErrorMessage   = TaxDistributionAmountMessage
								for each AllImportTransactionDistributionsRel
									if (!LocalHasError)
										invoke CreateFromInterface ProcurementCardStatementTransactionDistribution
											resume on error
												LocalHasError  		= true
												LocalErrorMessage	= error message
											fill in fields from each
											invoked.ProcurementCardStatement   	        					= ProcurementCardStatementImport
											invoked.ProcurementCardStatementTransaction.Company 			= ProcurementCardStatementImportTransaction.Company
											invoked.ProcurementCardStatementTransaction.TransactionNumber 	= ProcurementCardStatementImportTransaction.TransactionNumber
									if (!LocalHasError)
										invoke FastDelete each
									else
									if (LocalHasError)
										invoke SetError ProcurementCardStatementImport
											invoked.PrmErrorMessage = LocalErrorMessage
											invoked.PrmResult       = ProcurementCardStatementImport.ResultProcessedBy
											invoked.PrmErrorLevel   = 3	
										 
