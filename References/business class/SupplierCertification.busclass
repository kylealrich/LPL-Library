SupplierCertification is a BusinessClass
	owned by procurement
	prefix is SUPC

	Ontology
		symbolic key is SupplierCertification

	Persistent Fields
		CertificationExpirationDate is Date
		Active 						is Boolean
		Attachment
		Alerts

	Local Fields
		IndirectEntry                 is Boolean

	Field Rules
		CertificationExpirationDate
			required
				"ExpirationDateIsRequired"

			constraint (CertificationExpirationDate > SupplierCertification.CertificationEffectiveDate)
				"CertificationExpirationDateMustBeGreaterThanTheCertificationEffectiveDate"
		Active
			default to true

		Attachment
			if (RequireAttachment)
				required
					"MustCreateAnAttachmentForTheCertification"

	Conditions
		VendorLocationCertificationDoesNotExist
			restricted
			when (SupplierSourceId.VendorLocation entered
			and   !VendorLocationCertificationRel exists
			and   SupplierCertification.PayablesCertificationCode.Active
			and   SupplierSourceId != 0
			and   Supplier.SupplierStatus =3)

		VendorCertificationDoesNotExist
			restricted
			when (Supplier.Vendor entered
			and   !VendorCertificationRel exists
			and   SupplierCertification.PayablesCertificationCode.Active
			and   SupplierSourceId = 0
			and   Supplier.SupplierStatus = 3)

		VendorLocationExist
			restricted
			when (SupplierSourceId.VendorLocation entered)

		VendorExpirationDateChanged
			restricted
			when (VendorCertificationRel exists
			and   Supplier.Vendor entered
			and   CertificationExpirationDate != VendorCertificationRel.CertificationExpirationDate
			and   SupplierCertification.PayablesCertificationCode.Active = "A"
			and   SupplierSourceId = 0
			and   Supplier.SupplierStatus = 3)

		VendorLocationExpirationDateChanged
			restricted
			when ( VendorCertificationRel exists
			and   SupplierSourceId.VendorLocation entered
			and   CertificationExpirationDate != VendorCertificationRel.CertificationExpirationDate
			and   SupplierCertification.PayablesCertificationCode.Active = "A"
			and   SupplierSourceId != 0
			and   Supplier.SupplierStatus = 3)

		YellowAlertAtEitherLevel
			restricted
			when (ExpirationDateYellowAlert
			or    ContactExpirationDateYellowAlert)

		RedAlertAtEitherLevel
			restricted
			when (ExpirationDateRedAlert
			or    ContactExpirationDateRedAlert)

		WillDefaultAlertDays
			restricted
			when (SupplierGroup.YellowAlert entered)

		ExpirationDateYellowAlert
			restricted
			when (SupplierSourceId = 0
			and   CertificationExpirationDate entered
			and   Alerts.YellowAlert != 0
			and   current corporate date >= YellowAlertDate
			and   YellowAlertDate <= RedAlertDate
			and   Active)

		ExpirationDateRedAlert
			restricted
			when (SupplierSourceId = 0
			and   CertificationExpirationDate entered
			and   Alerts.RedAlert != 0
			and   current corporate date >= RedAlertDate
			and   RedAlertDate <= CertificationExpirationDate
			and   Active)

		ContactExpirationDateYellowAlert
			restricted
			when (SupplierSourceId != 0
			and   CertificationExpirationDate entered
			and   Alerts.YellowAlert != 0
			and   current corporate date >= YellowAlertDate
			and   YellowAlertDate <= RedAlertDate
			and   Active)

		ContactExpirationDateRedAlert
			restricted
			when (SupplierSourceId != 0
			and   CertificationExpirationDate entered
			and   Alerts.RedAlert != 0
			and   current corporate date >= RedAlertDate
			and   RedAlertDate <= CertificationExpirationDate
			and   Active)

		ContactExpirationRedOrYellowAlert 
			when (ContactExpirationDateYellowAlert
			or    ContactExpirationDateRedAlert)
		
		SupplierExpirationRedOrYellowAlert 
			when (ExpirationDateYellowAlert
			or    ExpirationDateRedAlert)
		
		NotSourceId
			restricted
			when (SupplierSourceId = 0)

		SourceId
			restricted
			when (!SupplierSourceId = 0)

		HasAttachment
			restricted
			when (Attachment entered)

		CommodityCodeAllowed
			restricted
			when (SupplierGroup.AllowCommodityCodeCertification)

		DisplayCommodityCode
			restricted
			when (SupplierGroup.AllowCommodityCodeCertification
			and SupplierSourceId entered)

		PortalSupplier
			restricted
 			when ((SupplierGroup 	= actor.agent(SupplierSourceId).SupplierGroup
 			and    Supplier	   		= actor.agent(SupplierSourceId).Supplier))
 			
 		RequireAttachment
			restricted
			when (SupplierGroup.RequireCertificationAttachment
			and !IndirectEntry)
	Relations

		VendorCertificationRel
			one-to-one relation to VendorCertification
			Field Mapping uses symbolic key
				related.VendorGroup	               = SupplierGroup
				related.Vendor                     = Supplier.Vendor
				related.VendorLocation	           = blank
				related.PayablesCertificationCode  = SupplierCertification.PayablesCertificationCode
				related.CertificationEffectiveDate = SupplierCertification.CertificationEffectiveDate

		VendorLocationCertificationRel
			one-to-one relation to VendorCertification
			Field Mapping uses symbolic key
				related.VendorGroup	               = SupplierGroup
				related.Vendor                     = Supplier.Vendor
				related.VendorLocation	           = SupplierSourceId.VendorLocation
				related.PayablesCertificationCode  = SupplierCertification.PayablesCertificationCode
				related.CertificationEffectiveDate = SupplierCertification.CertificationEffectiveDate

		SupplierCertificationRel is a SupplierCertification set

		SupplierVendorMismatchRel
			one-to-one relation to SupplierVendorMismatch
			Field Mapping uses symbolic key
				related.SupplierGroup 	= SupplierGroup
				related.Supplier		= Supplier

	  	SupplierGroupExtensionRel
			one-to-one relation to SupplierGroupExtension
			Field Mapping uses symbolic key
				related.SupplierGroup   = SupplierGroup

		SupplierSourceIdRel
			one-to-one relation to SupplierSourceId
			Field Mapping uses symbolic key
				related.SupplierGroup    = SupplierGroup
				related.Supplier         = Supplier
				related.SupplierSourceId = SupplierSourceId

		SupplierCommodityCodeRel
			one-to-one relation to SupplierCommodityCode
			Field Mapping uses part of key
	   			related.SupplierGroup    		= SupplierGroup
				related.Supplier         		= Supplier
				related.SupplierSourceId 		= SupplierSourceId
				related.CommodityCode		 	= CommodityCode

	Derived Fields
		YellowAlertDate is a ComputeField
			type is TimeStamp
			restricted
			(CertificationExpirationDate - Alerts.YellowAlert as days)

		RedAlertDate is a ComputeField
			type is TimeStamp
			restricted
			(CertificationExpirationDate - Alerts.RedAlert as days)

		ActiveTag is a DerivedField
			type is Alpha 10
			if(Active)
				return ActiveMessage
			else
				return InactiveMessage

		ActiveMessage is a MessageField
			restricted
			"Active"

		InactiveMessage is a MessageField
			restricted
			"Inactive"

	Sets

		EffectiveDateDescending
			Sort Order
				SupplierGroup
				Supplier
				SupplierSourceId
				CommodityCode
				SupplierCertification.PayablesCertificationCode
				SupplierCertification.CertificationEffectiveDate descending

	Rule Blocks

		TestForSupplierValidation

			if (SupplierGroup.RequireUpdatedSupplierValidation
			and Supplier.SupplierStatus.Validated)
				invoke StatusUpdate Supplier

				send email
					to SupplierGroup.NotificationEmailAddress
					from SupplierGroup.AdminEmailAddress
					cc SupplierSourceId.EmailAddress
					subject "<SupplierGroupExtensionRel.FinalUpdatedValidationEmailSubject>"
					Contents
						"<SupplierGroupExtensionRel.FinalUpdatedValidationEmailContent>"
						"CertificationInformationWasModifiedOn<update stamp>"

	Actions
		Create is a Create Action

			Field Rules

				Alerts

					if (Alerts.YellowAlert !entered)
						Alerts.YellowAlert = SupplierGroup.YellowAlert
					if (Alerts.RedAlert !entered)
						Alerts.RedAlert    = SupplierGroup.RedAlert

			Action Rules

				if (CommodityCode entered)
					constraint (SupplierSourceId entered)
						"MustEnterSupplierContactForCommodityCodeCertification"
					constraint (SupplierCommodityCodeRel exists)
						"CommodityCodeNotValidForSupplierContact"

			Exit Rules
	
				if  (SupplierGroup.AutoCompare
				and  Supplier.Vendor entered
				and (SupplierSourceId !entered
				or   SupplierSourceId.VendorLocation entered))
					invoke CompareSupplierAndVendor Supplier
						invoked.ParmSupplierGroup		= SupplierGroup
						invoked.ParmSupplier        	= Supplier
						invoked.CompareCertification	= true

				include TestForSupplierValidation

		Update is an Update Action

			Action Rules
			
				if  (SupplierGroup.AutoCompare
				and  Supplier.Vendor entered
				and  CertificationExpirationDate changed
				and (SupplierSourceId !entered
				or   SupplierSourceId.VendorLocation entered))
					invoke CompareSupplierAndVendor Supplier
						invoked.ParmSupplierGroup		= SupplierGroup
						invoked.ParmSupplier        	= Supplier
						invoked.CompareCertification	= true			
			
			Exit Rules

				include TestForSupplierValidation

		Delete is a Delete Action

			Exit Rules

				if  (SupplierGroup.AutoCompare
				and  Supplier.Vendor entered
				and (SupplierSourceId !entered
				or   SupplierSourceId.VendorLocation entered))
					invoke CompareSupplierAndVendor Supplier
						invoked.ParmSupplierGroup		= SupplierGroup
						invoked.ParmSupplier        	= Supplier
						invoked.CompareCertification	= true		

				include TestForSupplierValidation

		CreateVendorCertification is an Instance Action
			valid when (VendorCertificationDoesNotExist)
 			Action Rules
				constraint (Active)
					"CanOnlyCreateVendorCertificationsForActiveCertifications"
				invoke Create VendorCertification
 					invoked.VendorGroup  				= SupplierGroup
 					invoked.Vendor 	 	 				= Supplier.Vendor
 					invoked.PayablesCertificationCode 	= SupplierCertification.PayablesCertificationCode
 					invoked.CertificationEffectiveDate 	= SupplierCertification.CertificationEffectiveDate
 					invoked.CertificationExpirationDate = CertificationExpirationDate

 		UpdateVendorCertification is an Instance Action
			valid when (VendorExpirationDateChanged)
 			Action Rules
				constraint (Active)
					"CanOnlyUpdateVendorCertificationsForActiveCertifications"
 				invoke Update VendorCertificationRel
 					invoked.VendorGroup  					= SupplierGroup
 					invoked.Vendor 	 	 					= Supplier.Vendor
 					invoked.PayablesCertificationCode 		= SupplierCertification.PayablesCertificationCode
 					invoked.CertificationEffectiveDate 		= SupplierCertification.CertificationEffectiveDate
 					invoked.CertificationExpirationDate 	= CertificationExpirationDate

		CreateLocationCertification is an Instance Action
			valid when (VendorLocationCertificationDoesNotExist)
 			Action Rules
				constraint (Active)
					"CanOnlyCreateVendorLocationCertificationsForActiveCertifications"

 				invoke Create VendorCertification
 					invoked.VendorGroup  				= SupplierGroup
 					invoked.Vendor 	 	 				= Supplier.Vendor
 					invoked.VendorLocation 				= SupplierSourceId.VendorLocation
 					invoked.PayablesCertificationCode 	= SupplierCertification.PayablesCertificationCode
 					invoked.CertificationEffectiveDate 	= SupplierCertification.CertificationEffectiveDate
 					invoked.CertificationExpirationDate = CertificationExpirationDate

 		UpdateLocationCertification is an Instance Action
			valid when (VendorLocationExpirationDateChanged)
 			Action Rules
				constraint (Active)
					"CanOnlyUpdateVendorLocationCertificationsForActiveCertifications"

 				invoke Update VendorCertificationRel
 					invoked.VendorGroup  					= SupplierGroup
 					invoked.Vendor 	 	 					= Supplier.Vendor
 					invoked.VendorLocation 					= SupplierSourceId.VendorLocation
 					invoked.PayablesCertificationCode 		= SupplierCertification.PayablesCertificationCode
 					invoked.CertificationEffectiveDate 		= SupplierCertification.CertificationEffectiveDate
 					invoked.CertificationExpirationDate 	= CertificationExpirationDate

		EmailToSupplierContacts is an Instance Action
			default label is "SendEmail"
			Parameters
				ToEmail 		is an EmailAddress 
					holds pii
				SupplierToEmail is an EmailAddress 
				FromEmail  		is an EmailAddress 
					holds pii
				Subject   		is Text
				EmailContents 	is Text

			Parameter Rules
				ToEmail
					initial value is SupplierSourceId.EmailAddress
				SupplierToEmail 
					initial value is Supplier.PrimaryContact.EmailAddress
				FromEmail
					initial value is actor.ContactInfo.EmailAddress
					required
				Subject
					initial value is Supplier.SupplierGroupExtensionRel.ExpiringCertificationsEmailSubject
					required
				EmailContents
					initial value is Supplier.SupplierGroupExtensionRel.ExpiringCertificationsEmailContent + SupplierGroup.NewLine + Supplier.ExpiringCertificationsMessageContents
					required

			Action Rules 
				if (SupplierSourceId entered)
					invoke EmailToSupplierContacts SupplierSourceId 
						invoked.ToEmail      	= ToEmail
						invoked.FromEmail  		= FromEmail 
						invoked.Subject   		= Subject 
						invoked.EmailContents 	= EmailContents
				else 
					invoke EmailCertificationToSupplier Supplier 
						invoked.ToEmail      	= SupplierToEmail
						invoked.FromEmail  		= FromEmail 
						invoked.Subject   		= Subject 
						invoked.EmailContents 	= EmailContents	

		SupplierCertificationCompare is an Instance Action
			restricted
			Action Rules
				if  (SupplierCertification.PayablesCertificationCode.Active)
					if  (VendorExpirationDateChanged)
					 	if (!SupplierVendorMismatchRel exists)
					 		invoke Create SupplierVendorMismatch
								invoked.SupplierGroup                        = SupplierGroup
								invoked.Supplier                             = Supplier
								invoked.Vendor						         = Supplier.Vendor
					 	invoke Create SupplierVendorMismatchDetail
							invoked.SupplierGroup		  	   = SupplierGroup
							invoked.Supplier				   = Supplier
							invoked.Type 					   = 28
							invoked.PayablesCertificationCode  = SupplierCertification.PayablesCertificationCode
							invoked.CertificationEffectiveDate = SupplierCertification.CertificationEffectiveDate
							invoked.SupplierValue 			   = CertificationExpirationDate
							invoked.VendorValue				   = VendorCertificationRel.CertificationExpirationDate

					if  (VendorCertificationDoesNotExist)
					 	if (!SupplierVendorMismatchRel exists)
					 			invoke Create SupplierVendorMismatch
									invoked.SupplierGroup                        = SupplierGroup
									invoked.Supplier                             = Supplier
									invoked.Vendor						         = Supplier.Vendor
					 	invoke Create SupplierVendorMismatchDetail
								invoked.SupplierGroup		  		= SupplierGroup
								invoked.Supplier					= Supplier
								invoked.Type 						= 27
								invoked.PayablesCertificationCode	= SupplierCertification.PayablesCertificationCode
								invoked.SupplierValue 				= SupplierCertification.PayablesCertificationCode
								invoked.CertificationEffectiveDate 	= SupplierCertification.CertificationEffectiveDate
								invoked.VendorValue					= "None"
								invoked.DiversityCodeDcertDate      = CertificationExpirationDate

		SupplierLocationCertificationCompare is an Instance Action
			restricted
			Action Rules
				if  (SupplierCertification.PayablesCertificationCode.Active)
					if  (VendorLocationExpirationDateChanged)
					 	if (!SupplierVendorMismatchRel exists)
					 		invoke Create SupplierVendorMismatch
								invoked.SupplierGroup                        = SupplierGroup
								invoked.Supplier                             = Supplier
								invoked.Vendor						         = Supplier.Vendor
					 	invoke Create SupplierVendorMismatchDetail
							invoked.SupplierGroup		  	   = SupplierGroup
							invoked.Supplier			  	   = Supplier
							invoked.SupplierSourceId           = SupplierSourceId
							invoked.Type 					   = 28
							invoked.PayablesCertificationCode  = SupplierCertification.PayablesCertificationCode
							invoked.CertificationEffectiveDate = SupplierCertification.CertificationEffectiveDate
							invoked.SupplierValue 			   = CertificationExpirationDate
							invoked.VendorValue				   = VendorCertificationRel.CertificationExpirationDate

					if  (VendorLocationCertificationDoesNotExist)
					 	if (!SupplierVendorMismatchRel exists)
					 			invoke Create SupplierVendorMismatch
									invoked.SupplierGroup                        = SupplierGroup
									invoked.Supplier                             = Supplier
									invoked.Vendor						         = Supplier.Vendor
					 	invoke Create SupplierVendorMismatchDetail
								invoked.SupplierGroup		  		= SupplierGroup
								invoked.Supplier					= Supplier
								invoked.SupplierSourceId        	= SupplierSourceId
								invoked.Type 						= 27
								invoked.PayablesCertificationCode	= SupplierCertification.PayablesCertificationCode
								invoked.SupplierValue 				= SupplierCertification.PayablesCertificationCode
								invoked.CertificationEffectiveDate 	= SupplierCertification.CertificationEffectiveDate
								invoked.VendorValue					= "None"
								invoked.DiversityCodeDcertDate      = CertificationExpirationDate
