ReportingChartAccountUpload is a BusinessClass
	owned by GeneralLedger
	prefix is GLRCU   
    
    Ontology
    	symbolic key is ReportingChartAccountUpload

    Patterns
 		disable Auditing 
 		disable EffectiveDated
		disable AsOfDateProcessing

    Persistent Fields
    	ParentAccount				is like GeneralLedgerChartAccount
    	SummaryAccount				is like GeneralLedgerChartAccount
		Account						is like Account
		SubAccount					is like GeneralLedgerSubAccount
		AccountActive				is Boolean
		ChartAccountActive			is Boolean
		ChartSection				is Numeric 1
			States
				BalanceSheet    	value is 1
				IncomeStatement 	value is 2  
		AccountType
		AccountSubType
		ChartType					is Numeric 1
			States
	    		Summary					value is 1
	    		Posting					value is 2
    	AccountDescription			is a Description
    	SubAccountDescription		is a Description
		AllowUnits					is Numeric 1			
			States
				NotRequired 			value is 0
				No             			value is 1
				Required    			value is 2
		TranslationCode				is a GeneralLedgerTranslationCode			
		Revalue						is Boolean
		NaturalBalance				is Numeric 1
			States
				None	 			value is 0
				Debit          		value is 1
				Credit  			value is 2
		SystemAccount
		XbrlTag						is Alpha 60
		UnrealizedGainAccount		is like GeneralLedgerChartAccount
		UnrealizedLossAccount		is like GeneralLedgerChartAccount
		TranslationGainAccount		is like GeneralLedgerChartAccount
		TranslationLossAccount		is like GeneralLedgerChartAccount
    	DisplayAccount				is like GeneralLedgerChartAccount         	
		ErrorMessage				is Alpha 150
    	DisplayOrder				is Numeric 6
		CloseToAccount				is a GeneralLedgerChartAccount
    	BudgetIdentifier
    	IncludeInBudgetEdit			is Boolean 
    	InterfaceInDetail			is Boolean
    	IsReconcilable				is Boolean
    	RequireProject				is Boolean
    	
   	Context Fields
   		
    Transient Fields

	Derived Fields
		DerivedAccountLabel		is a DerivedField
			type is Alpha 25
			restricted
			return FinanceEnterpriseGroup.AccountLabel
		DerivedParentAccount		is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			if (ParentAccount entered)
				return DerivedStringParentAccount
			else
				return ReportingChart.TopNodeString
		DerivedStringParentAccount	is a StringField
			type is AlphaUpper 26
			restricted
			ReportingChart.ChartSequence
			"_"
			ParentAccount
		DefaultDisplayAccount		is a DerivedField
			type is like GeneralLedgerChartAccount
			if (ChartType.Summary)
				return SummaryAccount
			else
				if (SubAccount entered)
					return AccountSubAccountString
				else
					return Account
		DerivedChartAccount			is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			if (ChartType.Summary)
				return 
			else
				if (SubAccount entered)
					return AccountSubAccountString
				else
					return Account
		DerivedChartAccountDescription is a DerivedField
			type is Alpha 60
			restricted
			if (SubAccount entered)
				return AccountDescription + "-" + SubAccountDescription
			else
				return AccountDescription
		DerivedSummaryAccount		is a StringField
			type is AlphaUpper 26
			restricted
			ReportingChart.ChartSequence
			"_"
			SummaryAccount
		AccountSubAccountString		is a StringField
			type is AlphaUpper 26
			restricted
			Account
			"-"
			SubAccount
		SummaryMessage 				is a MessageField
			restricted
			"Summary"
		CannotCreateMessage 		is a MessageField
			restricted
			"CannotCreate"
		ExistsMessage 				is a MessageField
			restricted
			"Exists,"
		ParentDoesNotExistsMessage 	is a MessageField
			restricted
			"ParentDoesNotExist"
		InReportingChartMessage 	is a MessageField
			restricted
			"InReportingChart"
		PostingMessage 				is a MessageField
			restricted
			"Posting"
		ParentMessage 				is a MessageField
			restricted
			"Parent"
		ChartSectionMessage			is a MessageField
			restricted
			"ChartSection"
		MustBeSameAsMessage			is a MessageField
			restricted
			"MustBeSameAs"
		AccountDescriptionMessage 	is a MessageField
			restricted
			"DescriptionIsRequiredFor<FinanceEnterpriseGroup.AccountLabel>"
		SubAccountDescriptionMessage is a MessageField
			restricted
			"DescriptionIsRequiredForSub<FinanceEnterpriseGroup.AccountLabel>"
		ParentIsRequiredMessage 	is a MessageField
			restricted
			"ParentIsRequiredForPosting<FinanceEnterpriseGroup.AccountLabel>"
		SummaryAccountCreateError	is a StringField
			type is Alpha 150
			restricted
			CannotCreateMessage
			" "
			SummaryMessage
			", "

			ParentDoesNotExistsMessage
			" "
			DerivedParentAccount
		SummaryAccountExistError	is a StringField
			type is Alpha 150
			restricted
			SummaryMessage
			" "
			DerivedAccountLabel
			" "
			ExistsMessage
			" "
			CannotCreateMessage
			" "
			DerivedSummaryAccount
		PostingAccountExistsError	is a StringField
			type is Alpha 150
			restricted
			PostingMessage
			" "
			DerivedAccountLabel
			" "
			DerivedChartAccount
			" "
			ExistsMessage
			" "
			InReportingChartMessage
		ChartSectionError	is a StringField
			type is Alpha 150
			restricted
			ChartSectionMessage
			" "
			MustBeSameAsMessage
			" "
			ParentMessage
			" "
			DerivedAccountLabel
			" "
			ChartSectionMessage
		AccountTypeRequiredError	is a MessageField
			restricted
			"AccountTypeIsRequired"
		AccountTypeError			is a MessageField
			restricted
			"IncorrectTypeForChartSection:_<AccountType>_<FinanceEnterpriseGroup.AccountLabel>"

		NotValidPostingError		is a MessageField
			restricted
			"NotValidForPosting<FinanceEnterpriseGroup.AccountLabel>"
		NotValidSummaryError		is a MessageField
			restricted
			"NotValidForSummary<FinanceEnterpriseGroup.AccountLabel>"
		InvalidDisplayOrderError	is a MessageField
			restricted
			"DisplayOrderCannotBeNegative"

		ReportingChartUploadTitle is a LabelField
			"Reporting<FinanceEnterpriseGroup.AccountLabel>_<ReportingChart>_<ReportingChartAccountUpload>Upload"

		ReportingChartUploadTitleNoRecord is a LabelField
			"CreateReportingUpload"

		ReportingChartUploadFormTitle is a DerivedField
			type is Alpha size up to 80
			if (RecordExists)
				return ReportingChartUploadTitle
			else
				return ReportingChartUploadTitleNoRecord

		DerivedUnrealizedGainAccount	is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			if (UnrealizedGainAccount entered)
				return UnrealizedGainAccount
			else
				if (!ParentAccount entered)
					return UnrealizedGainAccount
				else
					if (!UnrealizedGainAccount entered)
						LocalGeneralLedgerChartAccount = DerivedParentAccount
						if (ReportingChartAccountDefaultRel exists)
							return ReportingChartAccountDefaultRel.UnrealizedGainAccount
						else
							LocalSystemAccount = SystemAccount.UnrealizedGain
							if (SystemAccountRel exists)
								return SystemAccountRel.GeneralLedgerChartAccount
							else
								LocalSystemAccount = SystemAccount.UnrealizedGainAndLoss
								return SystemAccountRel.GeneralLedgerChartAccount
		DerivedUnrealizedLossAccount	is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			if (UnrealizedLossAccount entered)
				return UnrealizedLossAccount
			else
				if (!ParentAccount entered)
					return UnrealizedLossAccount
				else
					if (!UnrealizedLossAccount entered)
						LocalGeneralLedgerChartAccount = DerivedParentAccount
						if (ReportingChartAccountDefaultRel exists)
							return ReportingChartAccountDefaultRel.UnrealizedLossAccount
						else
							LocalSystemAccount = SystemAccount.UnrealizedLoss
							if (SystemAccountRel exists)
								return SystemAccountRel.GeneralLedgerChartAccount
							else
								LocalSystemAccount = SystemAccount.UnrealizedGainAndLoss
								return SystemAccountRel.GeneralLedgerChartAccount
		DerivedTranslationGainAccount	is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			if (TranslationGainAccount entered)
				return TranslationGainAccount
			else
				if (!ParentAccount entered)
					return TranslationGainAccount
				else
					if (!TranslationGainAccount entered)
						LocalGeneralLedgerChartAccount = DerivedParentAccount
						if (ReportingChartAccountDefaultRel exists)
							return ReportingChartAccountDefaultRel.TranslationGainAccount
						else
							LocalSystemAccount = SystemAccount.TranslationGain 
							if (SystemAccountRel exists)
								return SystemAccountRel.GeneralLedgerChartAccount
							else
								LocalSystemAccount = SystemAccount.TranslationGainAndLoss
								return SystemAccountRel.GeneralLedgerChartAccount
		DerivedTranslationLossAccount	is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			if (TranslationLossAccount entered)
				return TranslationLossAccount
			else
				if (!ParentAccount entered)
					return TranslationLossAccount				
				else
					if (!TranslationLossAccount entered)
						LocalGeneralLedgerChartAccount = DerivedParentAccount
						if (ReportingChartAccountDefaultRel exists)
							return ReportingChartAccountDefaultRel.TranslationLossAccount
						else
							LocalSystemAccount = SystemAccount.TranslationLoss 
							if (SystemAccountRel exists)
								return SystemAccountRel.GeneralLedgerChartAccount
							else
								LocalSystemAccount = SystemAccount.TranslationGainAndLoss
								return SystemAccountRel.GeneralLedgerChartAccount
		DerivedTranslationCode	is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			if (TranslationCode entered)
				return TranslationCode			
			else
				if (!ParentAccount entered)
					return TranslationCode
				else
					if (!TranslationCode entered)
						LocalGeneralLedgerChartAccount = DerivedParentAccount
						if (ReportingChartAccountDefaultRel exists)
							return ReportingChartAccountDefaultRel.TranslationCode
		DerivedRevalue	is a DerivedField
			type is Boolean
			restricted
			if (Revalue entered)
				return Revalue			
			else
				if (!ParentAccount entered)
					return Revalue
				else
					if (!Revalue entered)
						LocalGeneralLedgerChartAccount = DerivedParentAccount
						if (ReportingChartAccountDefaultRel exists)
							return ReportingChartAccountDefaultRel.Revalue
		DerivedRequireProject	is a DerivedField
			type is Boolean
			restricted
			if (RequireProject entered)
				return RequireProject			
			else
				if (!ParentAccount entered)
					return RequireProject
				else
					if (!RequireProject entered)
						LocalGeneralLedgerChartAccount = DerivedParentAccount
						if (ReportingChartAccountDefaultRel exists)
							return ReportingChartAccountDefaultRel.RequireProject
		DerivedXbrlTag	is a DerivedField
			type is Alpha 60
			restricted
			if (XbrlTag entered)
				return XbrlTag			
			else
				if (!ParentAccount entered)
					return XbrlTag
				else
					if (!XbrlTag entered)
						LocalGeneralLedgerChartAccount = DerivedParentAccount
						if (ReportingChartAccountDefaultRel exists)
							return ReportingChartAccountDefaultRel.XbrlTag
		DerivedCloseToAccount			is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			if (CloseToAccount entered)
				return CloseToAccount
			else
				if (!ParentAccount entered)
					return CloseToAccount				
				else
					if (!CloseToAccount entered)
						LocalGeneralLedgerChartAccount = DerivedParentAccount
						if (ReportingChartAccountDefaultRel exists)
							return ReportingChartAccountDefaultRel.CloseToAccount

	Local Fields
		LocalGeneralLedgerChartAccount	is a GeneralLedgerChartAccount
		LocalSystemAccount 				is a SystemAccount

	Conditions
 		ErrorTransaction
 			restricted
 			when (ErrorMessage entered)
 		AccountAndSubAccount
 			restricted
 			when (ChartType.Posting
 			and	  FinanceEnterpriseGroup.UseSubAccounts)
 		AccountOnly
 			restricted
 			when (ChartType.Posting
 			and	 !FinanceEnterpriseGroup.UseSubAccounts)
		RecordExists
			when (ReportingChartAccountUpload exists)
	Sets
		BySummaryAccount
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				ReportingChart
				ChartType
				SummaryAccount
				ReportingChartAccountUpload

	Relations
		ParentInChartAccountRel
			one-to-one relation to GeneralLedgerChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.GeneralLedgerChartAccount	= DerivedParentAccount
		ParentInAccountUploadRel
			one-to-many relation to ReportingChartAccountUpload
			Field Mapping uses BySummaryAccount
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.ReportingChart				= ReportingChart
				related.ChartType					= ChartType.Summary
				related.SummaryAccount				= ParentAccount
		SummaryInChartAccountRel
			one-to-one relation to GeneralLedgerChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.GeneralLedgerChartAccount	= DerivedSummaryAccount
		AccountRel
			one-to-one relation to Account
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Account						= Account
		SubAccountRel
			one-to-one relation to GeneralLedgerSubAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.GeneralLedgerSubAccount		= SubAccount
		GeneralLedgerChartAccountRel
			one-to-one relation to GeneralLedgerChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.GeneralLedgerChartAccount	= DerivedChartAccount
		PostingInReportingChartAccountRel
			one-to-one relation to ReportingChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.ReportingChart				= ReportingChart
				related.GeneralLedgerChartAccount	= DerivedChartAccount
		ReportingChartAccountDefaultRel
			one-to-one relation to ReportingChartAccount
			Field Mapping uses SubordinateInTopNode
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.ChartAccountNode            = ReportingChart.TopNodeString
				related.GeneralLedgerChartAccount 	= LocalGeneralLedgerChartAccount 								
		SystemAccountRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses BySystemAccount
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.SystemAccount				= LocalSystemAccount

	Field Rules
		Account
			constraint (ParentAccount entered)
				"ParentIsRequiredForPosting<FinanceEnterpriseGroup.AccountLabel>"
		ParentAccount
			if (!first ParentInAccountUploadRel exists)
				constraint (ParentInChartAccountRel exists)
					"RecordDoesNotExistsInChartOrSetupForParent<FinanceEnterpriseGroup.AccountLabel>"
		ChartType
			required
			if (ChartType.Summary)
				constraint (SummaryAccount entered)
					"DataIsRequiredForSummary<FinanceEnterpriseGroup.AccountLabel>"
			else
				constraint (Account entered)
					"DataIsRequiredFor<FinanceEnterpriseGroup.AccountLabel>"
		ChartSection
			required
		TranslationCode
			if (ChartSection.BalanceSheet)
				default to "BS"
			else
				default to "IS"
		DisplayAccount
			default to DefaultDisplayAccount
		AccountDescription
			if (SummaryAccount entered)
				required
			else
				if (!AccountRel exists)
					required
		SubAccountDescription
			if  (SubAccount entered
			and !SubAccountRel exists)
				required
			constraint (FinanceEnterpriseGroup.UseSubAccounts)
				"CannotEnterDescriptionForSub<FinanceEnterpriseGroup.AccountLabel>"
		SubAccount
			constraint (FinanceEnterpriseGroup.UseSubAccounts)
				"CannotEnterSub<FinanceEnterpriseGroup.AccountLabel>"
		CloseToAccount
			if (CloseToAccount exists)
				constraint (CloseToAccount.ChartSection.BalanceSheet)
					"CanOnlyEnterBalanceSheet<FinanceEnterpriseGroup.AccountLabel>"
		BudgetIdentifier
			constraint (ChartType.Summary)
				"NotValidForPosting<FinanceEnterpriseGroup.AccountLabel>"
		IncludeInBudgetEdit
			constraint (ChartType.Posting)
				"NotValidForSummary<FinanceEnterpriseGroup.AccountLabel>"
		AccountActive
			initial value is true				
		ChartAccountActive
			initial value is true
			constraint (AccountActive)
				"AccountMustBeActive"
		AccountType
			required
			if (AccountType.Equity
			or  AccountType.Asset
			or  AccountType.Liability)
				constraint (ChartSection.BalanceSheet)
					"IncorrectTypeForChartSection<AccountType>_<FinanceEnterpriseGroup.AccountLabel>"

			if (AccountType.Revenue
			or  AccountType.Expense)
				constraint (ChartSection.IncomeStatement)
					"IncorrectTypeForChartSection<AccountType>_<FinanceEnterpriseGroup.AccountLabel>"
						
    Actions
		Create is a Create Action
			Action Rules

		Update is an Update Action
			Action Rules
				initialize ErrorMessage

		Delete is a Delete Action
		
		Purge is a Purge Action
			restricted

		UploadHierarchy is a Set Action
			restricted

			
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmReportingChart			is a ReportingChart
					default label is "ReportingChart"
				RetainDefaultValues 		is Boolean
				
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmReportingChart
					required
					
			Local Fields
				LocalRecordCreated				is Boolean
				LocalErrorMessage				is Alpha 150			
		    	LocalChartAccount				is a GeneralLedgerChartAccount
		    	LocalSubAccount					is a GeneralLedgerSubAccount
				LocalBuildShadowFile			is Boolean
				LocalSummaryMoved				is Boolean
				LocalChartAccountUpdated		is Boolean
				LocalStartTimestamp				is TimeStamp
				SkipShadow
				LocalSkipShadow					is Boolean
				
			Set Is
				PrmFinanceEnterpriseGroup
				PrmReportingChart

			Instance Selection
				where (FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				and	   ReportingChart				= PrmReportingChart)
				
			Sort Order
				FinanceEnterpriseGroup
				ReportingChart
				ChartType
				ReportingChartAccountUpload

			Accumulators

			Action Rules
				Empty Set Rules

				Set Rules

				FinanceEnterpriseGroup Set Rules

					Entrance Rules
						LocalStartTimestamp		= current timestamp
						
					Exit Rules
						if (LocalSkipShadow)
							invoke BuildShadowFile ReportingChart









				Instance Rules
					LocalBuildShadowFile	= false
					LocalSummaryMoved		= false
					
					if (!FinanceEnterpriseGroup.UseSubAccounts)
						initialize SubAccount

					if (!AccountDescription entered)
						if (SummaryAccount entered)
							LocalErrorMessage	= AccountDescriptionMessage
							ErrorMessage		= LocalErrorMessage
						else
							if (!AccountRel exists)
								LocalErrorMessage	= AccountDescriptionMessage
								ErrorMessage		= LocalErrorMessage
							else
								AccountDescription	= AccountRel.AccountDescription

					if (ChartType.Posting
					and SubAccount entered
					and !ErrorMessage entered)
						if (!SubAccountDescription entered)
							if (!SubAccountRel exists)
								LocalErrorMessage	= SubAccountDescriptionMessage
								ErrorMessage		= LocalErrorMessage
							else
								SubAccountDescription	= SubAccountRel.Description

					if (ChartType.Summary
					and !ErrorMessage entered)
						if  (ParentAccount entered
						and !ParentInChartAccountRel exists)
							LocalErrorMessage	= SummaryAccountCreateError
							ErrorMessage		= LocalErrorMessage

					if (!ErrorMessage entered)
						if (ParentAccount entered)
							LocalChartAccount	= DerivedStringParentAccount
							if (!LocalChartAccount.ChartSection = ChartSection)
								LocalErrorMessage	= ChartSectionError
								ErrorMessage		= LocalErrorMessage
						else
							if (ChartType.Posting)
								LocalErrorMessage	= ParentIsRequiredMessage
								ErrorMessage		= LocalErrorMessage

					if (!ErrorMessage entered)
						if (!AccountType entered)
							LocalErrorMessage	= AccountTypeRequiredError
							ErrorMessage		= LocalErrorMessage

					if (!ErrorMessage entered)
						if ((AccountType.Equity
						or   AccountType.Asset
						or   AccountType.Liability)
						and  !ChartSection.BalanceSheet)
							LocalErrorMessage	= AccountTypeError
							ErrorMessage		= LocalErrorMessage
						if ((AccountType.Revenue
						or   AccountType.Expense)
						and  !ChartSection.IncomeStatement)
							LocalErrorMessage	= AccountTypeError
							ErrorMessage		= LocalErrorMessage

					if (BudgetIdentifier entered
					and !ErrorMessage entered)
						if (!ChartType.Summary)
							LocalErrorMessage	= NotValidPostingError
							ErrorMessage		= LocalErrorMessage

					if (IncludeInBudgetEdit
					and !ErrorMessage entered)
						if (!ChartType.Posting)
							LocalErrorMessage	= NotValidSummaryError
							ErrorMessage		= LocalErrorMessage
							
					if (!ErrorMessage entered)
						if (DisplayOrder < 0)
							LocalErrorMessage	= InvalidDisplayOrderError
							ErrorMessage		= LocalErrorMessage

					if (ChartType.Summary
					and !ErrorMessage entered)
						if (!SummaryInChartAccountRel exists)
							invoke Create GeneralLedgerChartAccount
								resume on error
									ErrorMessage = error message
								fill in fields from this instance
								LocalBuildShadowFile				= true
								invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
								invoked.ParentAccount				= DerivedParentAccount 
								invoked.NewAccount					= SummaryAccount
								invoked.AccountDescription			= AccountDescription
								invoked.DisplayChartSection			= ChartSection
								invoked.AccountType					= AccountType
								invoked.AccountSubType				= AccountSubType
								invoked.DisplayAccount				= DisplayAccount
								invoked.NewTranslationCode			= DerivedTranslationCode
								invoked.NewRevalue					= DerivedRevalue
								invoked.NewRequireProject			= DerivedRequireProject
								invoked.NewXbrlTag					= DerivedXbrlTag
								invoked.NewUnrealizedGainAccount	= DerivedUnrealizedGainAccount
								invoked.NewUnrealizedLossAccount	= DerivedUnrealizedLossAccount
								invoked.NewTranslationGainAccount	= DerivedTranslationGainAccount
								invoked.NewTranslationLossAccount	= DerivedTranslationLossAccount
								invoked.NewCloseToAccount			= DerivedCloseToAccount
								invoked.NewDisplayOrder 			= DisplayOrder


								invoked.BudgetIdentifier			= BudgetIdentifier
								invoked.BypassNewStructureNotification = true
						else
							if (SummaryInChartAccountRel exists
							and SummaryInChartAccountRel.ParentChartAccount entered
							and !SummaryInChartAccountRel.ParentChartAccount	= DerivedParentAccount)
							
							 	if (SummaryInChartAccountRel.DerivedCountOfDescendants > 500)
							 		LocalSkipShadow = true
							 		SkipShadow 		= true
								invoke Move SummaryInChartAccountRel
									resume on error
										ErrorMessage = error message
									LocalSummaryMoved					= true

									invoked.NewParent					= DerivedParentAccount
									invoked.RetainDefaultValues			= RetainDefaultValues					
							else
								invoke Update SummaryInChartAccountRel
									resume on error
										ErrorMessage = error message
									invoked.AccountDescription			= AccountDescription
									invoked.DisplayAccount				= DisplayAccount
									invoked.NewTranslationCode			= DerivedTranslationCode
									invoked.NewRevalue					= DerivedRevalue
									invoked.NewRequireProject			= DerivedRequireProject
									invoked.NewXbrlTag					= DerivedXbrlTag
									invoked.BudgetIdentifier			= BudgetIdentifier
									invoked.NewUnrealizedGainAccount	= DerivedUnrealizedGainAccount
									invoked.NewUnrealizedLossAccount	= DerivedUnrealizedLossAccount
									invoked.NewTranslationGainAccount	= DerivedTranslationGainAccount
									invoked.NewTranslationLossAccount	= DerivedTranslationLossAccount
									invoked.NewCloseToAccount			= DerivedCloseToAccount
									invoked.BypassNewStructureNotification = true
									if (DisplayOrder entered)
										invoked.NewDisplayOrder			= DisplayOrder



					if (ChartType.Posting
					and !ErrorMessage entered)
						LocalChartAccountUpdated	= false
						if  (SubAccount entered
						and !SubAccountRel exists)
							invoke Create GeneralLedgerSubAccount
								resume on error
									ErrorMessage = error message
								fill in user fields from this instance									
								invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
								invoked.GeneralLedgerSubAccount			= SubAccount 
								invoked.Description						= SubAccountDescription
								invoked.Active							= true
						if (!ErrorMessage entered)
							if (!AccountRel exists)
								invoke Create Account
									resume on error
										ErrorMessage = error message
									fill in fields from this instance
									LocalRecordCreated 						= true
									invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
									invoked.Account							= Account 
									invoked.AccountDescription				= AccountDescription
									invoked.ChartSection					= ChartSection
									invoked.AccountType						= AccountType
									invoked.AccountSubType					= AccountSubType
									invoked.AllowUnits						= AllowUnits
									invoked.NaturalBalance					= NaturalBalance
									invoked.IsReconcilable					= IsReconcilable
									invoked.TranslationCode					= TranslationCode
									invoked.Revalue							= Revalue
									invoked.RequireProject					= RequireProject
									invoked.XbrlTag							= XbrlTag
									invoked.Active							= AccountActive 
									invoked.InvokedByUpload					= true
									invoked.InterfaceInDetail				= InterfaceInDetail
									invoked.BypassNewStructureNotification 	= true
						if (!ErrorMessage entered)	
							if (!GeneralLedgerChartAccountRel exists)
								SkipShadow = true
								invoke Create GeneralLedgerChartAccount
									resume on error
										ErrorMessage = error message
									fill in fields from this instance
									LocalRecordCreated						= true
									LocalBuildShadowFile					= true
									invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
									invoked.GeneralLedgerChartAccount		= DerivedChartAccount
									invoked.ChartSection					= ChartSection
									invoked.AccountType						= AccountType
									invoked.AccountSubType					= AccountSubType
									invoked.DisplayAccount					= DerivedChartAccount
									invoked.AccountDescription				= DerivedChartAccountDescription
									invoked.AllowUnits						= AllowUnits
									invoked.NewTranslationCode				= TranslationCode
									invoked.NewRevalue						= Revalue
									invoked.NewRequireProject				= RequireProject
									invoked.NaturalBalance					= NaturalBalance
									invoked.IsReconcilable					= IsReconcilable
									invoked.Active							= ChartAccountActive


									invoked.NewXbrlTag						= XbrlTag
									invoked.ChartType						= ChartType
									invoked.Account							= Account
									invoked.GeneralLedgerSubAccount			= SubAccount
									invoked.NewCloseToAccount				= DerivedCloseToAccount
									invoked.BypassNewStructureNotification 	= true
									invoked.IncludeInBudgetEdit		    	= IncludeInBudgetEdit
									invoked.InterfaceInDetail				= InterfaceInDetail
								if (!LocalSkipShadow)
									SkipShadow = false									
							else
								if  (GeneralLedgerChartAccountRel exists
								and  PostingInReportingChartAccountRel.ParentChartAccount entered
								and !PostingInReportingChartAccountRel.ParentChartAccount	= DerivedParentAccount)
									LocalChartAccountUpdated	= true
									invoke Move GeneralLedgerChartAccountRel
										resume on error
											ErrorMessage = error message
										LocalBuildShadowFile				= true
										invoked.NewParent					= DerivedParentAccount
										invoked.RetainDefaultValues			= RetainDefaultValues

						if (!ErrorMessage entered)
							if (!LocalChartAccountUpdated)
								if (!PostingInReportingChartAccountRel exists)
									SkipShadow = true
									invoke Create ReportingChartAccount
										resume on error
											ErrorMessage = error message
										fill in fields from this instance
										LocalBuildShadowFile					= true
										invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
										invoked.ReportingChart					= ReportingChart
										invoked.GeneralLedgerChartAccount		= DerivedChartAccount
										invoked.ParentChartAccount				= DerivedParentAccount
										invoked.DisplayAccount					= DisplayAccount
										invoked.ChartAccountNode				= ReportingChart.ChartAccountNode
										invoked.TranslationCode					= DerivedTranslationCode
										invoked.Revalue							= DerivedRevalue
										invoked.RequireProject					= DerivedRequireProject
										invoked.XbrlTag							= DerivedXbrlTag
										invoked.ChartType						= ChartType
										invoked.UnrealizedGainAccount			= DerivedUnrealizedGainAccount
										invoked.UnrealizedLossAccount			= DerivedUnrealizedLossAccount
										invoked.TranslationGainAccount			= DerivedTranslationGainAccount
										invoked.TranslationLossAccount			= DerivedTranslationLossAccount
										invoked.CloseToAccount					= DerivedCloseToAccount
										invoked.BypassNewStructureNotification 	= true
										invoked.NewDisplayOrder 				= DisplayOrder
									if (!LocalSkipShadow)
										SkipShadow = false										
								else
									invoke Update PostingInReportingChartAccountRel
										resume on error
											ErrorMessage = error message
										invoked.DisplayAccount					= DisplayAccount
										invoked.TranslationCode					= DerivedTranslationCode
										invoked.Revalue							= DerivedRevalue
										invoked.RequireProject					= DerivedRequireProject
										invoked.XbrlTag							= DerivedXbrlTag
										invoked.ChartType						= ChartType
										invoked.UnrealizedGainAccount			= DerivedUnrealizedGainAccount
										invoked.UnrealizedLossAccount			= DerivedUnrealizedLossAccount
										invoked.TranslationGainAccount			= DerivedTranslationGainAccount
										invoked.TranslationLossAccount			= DerivedTranslationLossAccount
										invoked.CloseToAccount					= DerivedCloseToAccount
										invoked.IncludeInBudgetEdit		    	= IncludeInBudgetEdit
										invoked.NewDisplayOrder 				= DisplayOrder
					
					if (LocalBuildShadowFile
					and ChartType.Posting
					and !LocalSkipShadow
					and !ErrorMessage entered)
						invoke BuildShadowFile ReportingChartAccount in foreground
							invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
							invoked.PrmReportingChart		  = ReportingChart
							invoked.PrmAccount			  	  = DerivedChartAccount
							 
					if (!ErrorMessage entered)
						if (LocalSummaryMoved)
							commit transaction
						invoke Purge

		ResetAllErrors is a Set Action
			restricted
		
			Parameters
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmReportingChart		  is a ReportingChart
					default label is "ReportingChart"
				
			Instance Selection
				where (FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				and	   ReportingChart				= PrmReportingChart
				and    ErrorMessage entered)
				
			Action Rules
			
				Instance Rules
					initialize ErrorMessage

		DeleteAll is a Set Action
			restricted
		
			Parameters
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmReportingChart		  is a ReportingChart
					default label is "ReportingChart"
				
			Instance Selection
				where (FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				and	   ReportingChart				= PrmReportingChart)
				
			Action Rules
			
				Instance Rules
					invoke Purge	
