AccountingUnitZoneBalance is a BusinessClass
    owned by GeneralLedger
    prefix is GLZBL

    Ontology
    	symbolic key is AccountingUnitZoneBalance

    Patterns
 		implements DynamicCreation
 		disable Auditing 
 		disable EffectiveDated

    Persistent Fields
		TransactionAmount				is an TotalAmount 
			precision is AccountingUnitZoneBalance.Currency.NumberOfDecimals
        FunctionalAmount       			is an TotalAmount
			precision is AccountingEntity.FunctionalCurrency.NumberOfDecimals
        AlternateAmount       			is an TotalAmount
			precision is AccountingEntity.AlternateCurrency.NumberOfDecimals
        AlternateAmount2       			is an TotalAmount
			precision is AccountingEntity.AlternateCurrency2.NumberOfDecimals
        AlternateAmount3       			is an TotalAmount
			precision is AccountingEntity.AlternateCurrency3.NumberOfDecimals
		ProjectAmount					is an TotalAmount

		ReportAmount1      				is an TotalAmount
			precision is FinanceEnterpriseGroup.ReportCurrencyOne.NumberOfDecimals
		ReportAmount2      				is an TotalAmount
			precision is FinanceEnterpriseGroup.ReportCurrencyTwo.NumberOfDecimals
		ReportAmount3					is an TotalAmount
			precision is FinanceEnterpriseGroup.ReportCurrencyThree.NumberOfDecimals
		ReportAmount4					is an TotalAmount
			precision is FinanceEnterpriseGroup.ReportCurrencyFour.NumberOfDecimals
		ReportAmount5					is an TotalAmount
			precision is FinanceEnterpriseGroup.ReportCurrencyFive.NumberOfDecimals
        UnitsAmount
        PeriodEndingDate				is Date						

	Transient Fields
		PrmTransactionAmount		is an TotalAmount
		PrmFunctionalAmount			is an TotalAmount
		PrmAlternateAmount			is an TotalAmount
		PrmAlternateAmount2			is an TotalAmount
		PrmAlternateAmount3			is an TotalAmount
		PrmProjectAmount			is an TotalAmount
		PrmReportAmount1			is an TotalAmount
		PrmReportAmount2			is an TotalAmount
		PrmReportAmount3			is an TotalAmount
		PrmReportAmount4			is an TotalAmount
		PrmReportAmount5			is an TotalAmount
        PrmUnitsAmount				is an UnitsAmount
        FinanceCodeBlock			is a TransactionCodeBlock	
        DimensionCode											


    Derived Fields
		NewJournalDescription			is a MessageField
			restricted
			"<FinanceEnterpriseGroup.AccountingUnitLabel>ZoneRebalancingJournalEntry"
		InterZonePayablesAccount			is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			LocalSystemAccount = SystemAccount.ZonePayables 
			if (SystemAccountRel exists)
				return first SystemAccountRel.GeneralLedgerChartAccount
			else
				LocalSystemAccount = SystemAccount.ZonePayablesAndReceivables 
				return first SystemAccountRel.GeneralLedgerChartAccount
		InterZoneReceivablesAccount			is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			LocalSystemAccount = SystemAccount.ZoneReceivables 
			if (SystemAccountRel exists)
				return first SystemAccountRel.GeneralLedgerChartAccount
			else
				LocalSystemAccount = SystemAccount.ZonePayablesAndReceivables 
				return first SystemAccountRel.GeneralLedgerChartAccount

	Context Fields
		Scenario			

	Local Fields
		LocalAccountingEntity			is like AccountingEntity
		LocalCloseYear					is like GeneralLedgerCloseYear
		LocalClosePeriod				is a GeneralLedgerClosePeriod
		LocalJournalControl				is like GeneralLedgerJournalControl
		LocalCurrencyCode				is like Currency
		BypassStructureRelationEdit
		LocalSystemAccount				is a SystemAccount
		LocalEndDate					is a GeneralLedgerCalendarPeriod
		LocalGeneralLedgerTotal			is a GeneralLedgerTotal			

	Relations
		GLCurrencyJournalControlRel
			one-to-one relation to GLCurrencyJournalControl
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= LocalAccountingEntity
				related.GeneralLedgerClosePeriod			= LocalClosePeriod
				related.GeneralLedgerJournalControl			= LocalJournalControl
				related.FromCurrency						= LocalCurrencyCode
		SystemAccountRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses BySystemAccount
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SystemAccount						= LocalSystemAccount
		DefaultZoneAccountingUnitRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses ByDefaultZoneAccountingUnitInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingUnitStructure				= FinanceEnterpriseGroup.EnterpriseAUStructure
				related.AccountingEntity					= AccountingEntity
		AccountingEntityPeriodRel
			one-to-many relation to AccountingEntityPeriod
			Field Mapping uses ByGeneralLedgerCalendarPeriod
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= AccountingEntity
				related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod >= LocalEndDate
		AccountingEntitySecurityGroupMemberRel
			one-to-one relation to AccountingEntityGroupMember
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AccountingEntityGroup   = actor.context.AccountingEntitySecurityGroup.FinanceDimensionStructure
				related.AccountingEntity        = AccountingEntity


		FinanceDimension1Rel
			one-to-one relation to FinanceDimension1Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension1Structure			= FinanceEnterpriseGroup.EnterpriseDim1Structure
		FinanceDimension2Rel
			one-to-one relation to FinanceDimension2Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension2Structure			= FinanceEnterpriseGroup.EnterpriseDim2Structure
		FinanceDimension3Rel
			one-to-one relation to FinanceDimension3Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension3Structure			= FinanceEnterpriseGroup.EnterpriseDim3Structure
		FinanceDimension4Rel
			one-to-one relation to FinanceDimension4Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension4Structure			= FinanceEnterpriseGroup.EnterpriseDim4Structure
		FinanceDimension5Rel
			one-to-one relation to FinanceDimension5Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension5Structure			= FinanceEnterpriseGroup.EnterpriseDim5Structure
		FinanceDimension6Rel
			one-to-one relation to FinanceDimension6Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension6Structure			= FinanceEnterpriseGroup.EnterpriseDim6Structure
		FinanceDimension7Rel
			one-to-one relation to FinanceDimension7Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension7Structure			= FinanceEnterpriseGroup.EnterpriseDim7Structure
		FinanceDimension8Rel
			one-to-one relation to FinanceDimension8Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension8Structure			= FinanceEnterpriseGroup.EnterpriseDim8Structure
		FinanceDimension9Rel
			one-to-one relation to FinanceDimension9Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension9Structure			= FinanceEnterpriseGroup.EnterpriseDim9Structure
		FinanceDimension10Rel
			one-to-one relation to FinanceDimension10Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension10Structure			= FinanceEnterpriseGroup.EnterpriseDim10Structure
		SystemProjectRel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses BySystemProjectInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.ProjectStructure					= FinanceEnterpriseGroup.EnterpriseProjectStructure
				
	Field Rules
		DimensionCode										
			force default to FinanceCodeBlock.DimensionCode
	
	Conditions
		SecurityGroupAllowsAccess
			when (actor.context.AccountingEntitySecurityGroup = blank
			or   (AccountingEntitySecurityGroupMemberRel exists))

	Rule Blocks
		UpdateAmount
			TransactionAmount		+= PrmTransactionAmount
			FunctionalAmount		+= PrmFunctionalAmount
			AlternateAmount			+= PrmAlternateAmount
			AlternateAmount2		+= PrmAlternateAmount2
			AlternateAmount3		+= PrmAlternateAmount3
			ProjectAmount			+= PrmProjectAmount
			ReportAmount1			+= PrmReportAmount1
			ReportAmount2			+= PrmReportAmount2
			ReportAmount3			+= PrmReportAmount3
			ReportAmount4			+= PrmReportAmount4
			ReportAmount5			+= PrmReportAmount5
			UnitsAmount				+= PrmUnitsAmount


		AssignCodeBlockDefaults
			if (FinanceEnterpriseGroup.FinanceDimension1Required
			and FinanceCodeBlock.FinanceDimension1 not entered)
				FinanceCodeBlock.FinanceDimension1	= FinanceDimension1Rel.FinanceDimension1
				constraint (FinanceCodeBlock.FinanceDimension1 entered)
					"NeedToSetupSystem<FinanceEnterpriseGroup.FinanceDimension1Label>"
			if (FinanceEnterpriseGroup.FinanceDimension2Required
			and FinanceCodeBlock.FinanceDimension2 not entered)
				FinanceCodeBlock.FinanceDimension2	= FinanceDimension2Rel.FinanceDimension2
				constraint (FinanceCodeBlock.FinanceDimension2 entered)
					"NeedToSetupSystem<FinanceEnterpriseGroup.FinanceDimension2Label>"
			if (FinanceEnterpriseGroup.FinanceDimension3Required
			and FinanceCodeBlock.FinanceDimension3 not entered)
				FinanceCodeBlock.FinanceDimension3	= FinanceDimension3Rel.FinanceDimension3
				constraint (FinanceCodeBlock.FinanceDimension3 entered)
					"NeedToSetupSystem<FinanceEnterpriseGroup.FinanceDimension3Label>"
			if (FinanceEnterpriseGroup.FinanceDimension4Required
			and FinanceCodeBlock.FinanceDimension4 not entered)
				FinanceCodeBlock.FinanceDimension4	= FinanceDimension4Rel.FinanceDimension4
				constraint (FinanceCodeBlock.FinanceDimension4 entered)
					"NeedToSetupSystem<FinanceEnterpriseGroup.FinanceDimension4Label>"
			if (FinanceEnterpriseGroup.FinanceDimension5Required
			and FinanceCodeBlock.FinanceDimension5 not entered)
				FinanceCodeBlock.FinanceDimension5	= FinanceDimension5Rel.FinanceDimension5
				constraint (FinanceCodeBlock.FinanceDimension5 entered)
					"NeedToSetupSystem<FinanceEnterpriseGroup.FinanceDimension5Label>"
			if (FinanceEnterpriseGroup.FinanceDimension6Required
			and FinanceCodeBlock.FinanceDimension6 not entered)
				FinanceCodeBlock.FinanceDimension6	= FinanceDimension6Rel.FinanceDimension6
				constraint (FinanceCodeBlock.FinanceDimension6 entered)
					"NeedToSetupSystem<FinanceEnterpriseGroup.FinanceDimension6Label>"
			if (FinanceEnterpriseGroup.FinanceDimension7Required
			and FinanceCodeBlock.FinanceDimension7 not entered)
				FinanceCodeBlock.FinanceDimension7	= FinanceDimension7Rel.FinanceDimension7
				constraint (FinanceCodeBlock.FinanceDimension7 entered)
					"NeedToSetupSystem<FinanceEnterpriseGroup.FinanceDimension7Label>"
			if (FinanceEnterpriseGroup.FinanceDimension8Required
			and FinanceCodeBlock.FinanceDimension8 not entered)
				FinanceCodeBlock.FinanceDimension8	= FinanceDimension8Rel.FinanceDimension8
				constraint (FinanceCodeBlock.FinanceDimension8 entered)
					"NeedToSetupSystem<FinanceEnterpriseGroup.FinanceDimension8Label>"
			if (FinanceEnterpriseGroup.FinanceDimension9Required
			and FinanceCodeBlock.FinanceDimension9 not entered)
				FinanceCodeBlock.FinanceDimension9	= FinanceDimension9Rel.FinanceDimension9
				constraint (FinanceCodeBlock.FinanceDimension9 entered)
					"NeedToSetupSystem<FinanceEnterpriseGroup.FinanceDimension9Label>"
			if (FinanceEnterpriseGroup.FinanceDimension10Required
			and FinanceCodeBlock.FinanceDimension10 not entered)
				FinanceCodeBlock.FinanceDimension10	= FinanceDimension10Rel.FinanceDimension10								
				constraint (FinanceCodeBlock.FinanceDimension10 entered)
					"NeedToSetupSystem<FinanceEnterpriseGroup.FinanceDimension10Label>"







	Actions
		Create is a Create Action
			restricted
			bypass field rules
			Action Rules
				include UpdateAmount

		Update is an Update Action
			restricted
			bypass field rules
			Action Rules
				include UpdateAmount

		Delete is a Delete Action
			restricted
			
		ProcessZoneRebalancing is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAccountingEntity				is a AccountingEntity
					default label is "AccountingEntity"
				PrmCalendarPeriod				is a GeneralLedgerCalendarPeriod
					default label is "GlobalLedgerCalendarPeriod"				
				PrmGeneralLedgerCloseYear		is a GeneralLedgerCloseYear		
					default label is "FiscalYear"								

			Local Fields	
				JournalCreated						is Boolean
				LocalAccountingEntityJournalView	is a GeneralLedgerJournalControl view
				LocalTransactionView				is a GeneralLedgerTransaction view
				LocalTransactionSequence			is like GeneralLedgerTransaction
				LocalCurrency						is like Currency
				LocalGeneralLedgerClosePeriod	 	is a GeneralLedgerClosePeriod
				LocalJournalClosePeriod				is a GeneralLedgerClosePeriod
				LocalJournalCalendarPeriod			is like GeneralLedgerCalendarPeriod
				LocalPostingDate					is Date
				LocalGLZoneBalance					is a GLZoneBalance
				LocalBaseZoneAccount				is like GeneralLedgerChartAccount
				LocalZoneAccount					is like GeneralLedgerChartAccount

			Queue Mapping Fields
				PrmAccountingEntity.PostingCategory
				
			Instance Selection
				where (FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				and    AccountingEntity				= PrmAccountingEntity
				and   (PrmCalendarPeriod entered
				and    AccountingUnitZoneBalance.GeneralLedgerCalendarPeriod >= PrmCalendarPeriod)
				or    (!PrmCalendarPeriod entered))

			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				AccountingUnitZoneBalance.Ledger
				AccountingUnitZoneBalance.PrimaryLedger
				AccountingUnitZoneBalance.GeneralLedgerCalendarPeriod
				AccountingUnitZoneBalance.ZoneAccountingUnit
				AccountingUnitZoneBalance.Currency

			Accumulators
				JournalTransactionAmountDr
				JournalFunctionalAmountDr
				JournalAlternateAmountDr
				JournalAlternateAmount2Dr
				JournalAlternateAmount3Dr
				JournalReportAmount1Dr
				JournalReportAmount2Dr
				JournalReportAmount3Dr
				JournalReportAmount4Dr
				JournalReportAmount5Dr
				JournalUnitsDr

				JournalTransactionAmountCr
				JournalFunctionalAmountCr
				JournalAlternateAmountCr
				JournalAlternateAmount2Cr
				JournalAlternateAmount3Cr
				JournalReportAmount1Cr
				JournalReportAmount2Cr
				JournalReportAmount3Cr
				JournalReportAmount4Cr
				JournalReportAmount5Cr
				JournalUnitsCr

			Action Rules
				Empty Set Rules

				Set Rules
				




				AccountingUnitZoneBalance.PrimaryLedger Set Rules
					Entrance Rules
						initialize LocalJournalClosePeriod

				AccountingUnitZoneBalance.GeneralLedgerCalendarPeriod Set Rules
					Entrance Rules
						LocalEndDate						= AccountingUnitZoneBalance.GeneralLedgerCalendarPeriod
						LocalGeneralLedgerClosePeriod		= first AccountingEntityPeriodRel.GeneralLedgerClosePeriod
						if (LocalGeneralLedgerClosePeriod	!= LocalJournalClosePeriod)
							LocalJournalCalendarPeriod		= first AccountingEntityPeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
							LocalPostingDate				= first AccountingEntityPeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
							JournalCreated					= false
							initialize LocalTransactionSequence

					Exit Rules
						if (JournalCreated)
							invoke UpdateJournalTotals LocalAccountingEntityJournalView.GeneralLedgerJournalControl
								invoked.PrmFunctionalDrAmount	= JournalFunctionalAmountDr
								invoked.PrmFunctionalCrAmount	= JournalFunctionalAmountCr
								invoked.PrmAlternateDrAmount	= JournalAlternateAmountDr
								invoked.PrmAlternateCrAmount	= JournalAlternateAmountCr
								invoked.PrmAlternateDrAmount2	= JournalAlternateAmount2Dr
								invoked.PrmAlternateCrAmount2	= JournalAlternateAmount2Cr
								invoked.PrmAlternateDrAmount3	= JournalAlternateAmount3Dr
								invoked.PrmAlternateCrAmount3	= JournalAlternateAmount3Cr								
								invoked.PrmRpt1DrAmount			= JournalReportAmount1Dr
								invoked.PrmRpt1CrAmount			= JournalReportAmount1Cr
								invoked.PrmRpt2DrAmount			= JournalReportAmount2Dr
								invoked.PrmRpt2CrAmount			= JournalReportAmount2Cr
								invoked.PrmRpt3DrAmount			= JournalReportAmount3Dr
								invoked.PrmRpt3CrAmount			= JournalReportAmount3Cr
								invoked.PrmRpt4DrAmount			= JournalReportAmount4Dr
								invoked.PrmRpt4CrAmount			= JournalReportAmount4Cr
								invoked.PrmRpt5DrAmount			= JournalReportAmount5Dr
								invoked.PrmRpt5CrAmount			= JournalReportAmount5Cr
								invoked.PrmUnitsCrAmount		= JournalUnitsCr

							invoke UpdateJournalControlStatus LocalAccountingEntityJournalView.GeneralLedgerJournalControl
								invoked.PrmStatus			= 5 
								invoked.PrmGeneralLedgerCloseYear = PrmGeneralLedgerCloseYear	

				AccountingUnitZoneBalance.Currency Set Rules
					Entrance Rules
						LocalCurrency			= AccountingUnitZoneBalance.Currency

					Exit Rules

						if (PrmAccountingEntity.BalanceTransactionCurrency
						and JournalCreated)
							LocalAccountingEntity		= PrmAccountingEntity		
							LocalClosePeriod			= LocalAccountingEntityJournalView.GeneralLedgerClosePeriod
							LocalJournalControl			= LocalAccountingEntityJournalView.GeneralLedgerJournalControl
							LocalCurrencyCode			= LocalCurrency
							invoke UpdateJournalCurrencyTotals GLCurrencyJournalControlRel in foreground
								invoked.PrmTransactionDrAmount			= JournalTransactionAmountDr
								invoked.PrmTransactionCrAmount			= JournalTransactionAmountCr
								invoked.PrmFunctionalDrAmount			= JournalFunctionalAmountDr
								invoked.PrmFunctionalCrAmount			= JournalFunctionalAmountCr
								invoked.PrmAlternateDrAmount			= JournalAlternateAmountDr
								invoked.PrmAlternateCrAmount			= JournalAlternateAmountCr
								invoked.PrmAlternateDrAmount2			= JournalAlternateAmount2Dr
								invoked.PrmAlternateCrAmount2			= JournalAlternateAmount2Dr
								invoked.PrmAlternateDrAmount3			= JournalAlternateAmount3Dr
								invoked.PrmAlternateCrAmount3			= JournalAlternateAmount3Dr								
								invoked.PrmRpt1DrAmount					= JournalReportAmount1Dr
								invoked.PrmRpt1CrAmount					= JournalReportAmount1Cr
								invoked.PrmRpt2DrAmount					= JournalReportAmount2Dr
								invoked.PrmRpt2CrAmount					= JournalReportAmount2Cr
								invoked.PrmRpt3DrAmount					= JournalReportAmount3Dr
								invoked.PrmRpt3CrAmount					= JournalReportAmount3Cr
								invoked.PrmRpt4DrAmount					= JournalReportAmount4Dr
								invoked.PrmRpt4CrAmount					= JournalReportAmount4Cr
								invoked.PrmRpt5DrAmount					= JournalReportAmount5Dr
								invoked.PrmRpt5CrAmount					= JournalReportAmount5Cr

				Instance Rules

					if (TransactionAmount entered
					or	FunctionalAmount entered
					or	AlternateAmount entered
					or	AlternateAmount2 entered
					or	AlternateAmount3 entered

					or	ReportAmount1 entered
					or	ReportAmount2 entered
					or	ReportAmount3 entered
					or	ReportAmount4 entered
					or	ReportAmount5 entered
					or	UnitsAmount entered)
						if (!JournalCreated)
							JournalCreated		= true
							LocalAccountingEntity		= PrmAccountingEntity
							invoke CreatePostedJournal Posted GeneralLedgerJournalControl
								assign result to LocalAccountingEntityJournalView
								invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.AccountingEntity			= PrmAccountingEntity
								invoked.GeneralLedgerClosePeriod	= LocalGeneralLedgerClosePeriod
								invoked.GeneralLedgerCalendarPeriod	= LocalJournalCalendarPeriod
								invoked.PostingDate					= LocalPostingDate
								invoked.TransactionDate				= LocalPostingDate
								invoked.BaseZoneAccountingUnit		= DefaultZoneAccountingUnitRel.ZoneAccountingUnit
								invoked.Currency					= PrmAccountingEntity.FunctionalCurrency
								invoked.GeneralLedgerEvent			= "ZB"
								invoked.Ledger						= AccountingUnitZoneBalance.Ledger
								invoked.System						= "GL"
								invoked.ReleaseDate					= current corporate date
								invoked.Description					= NewJournalDescription
								invoked.PrimaryLedger				= AccountingUnitZoneBalance.PrimaryLedger
							LocalJournalClosePeriod					= LocalAccountingEntityJournalView.GeneralLedgerClosePeriod

						if (TransactionAmount	< 0
						or  FunctionalAmount	< 0
						or  AlternateAmount		< 0
						or  AlternateAmount2	< 0
						or  AlternateAmount3	< 0

						or  ReportAmount1		< 0
						or  ReportAmount2		< 0
						or  ReportAmount3		< 0
						or  ReportAmount4		< 0
						or  ReportAmount5		< 0)
							LocalBaseZoneAccount	= LocalAccountingEntityJournalView.InterZonePayablesAccount
							LocalZoneAccount		= LocalAccountingEntityJournalView.InterZoneReceivablesAccount
						else
							LocalBaseZoneAccount	= LocalAccountingEntityJournalView.InterZoneReceivablesAccount
							LocalZoneAccount		= LocalAccountingEntityJournalView.InterZonePayablesAccount
			
						LocalGLZoneBalance.Ledger						= LocalAccountingEntityJournalView.Ledger
						LocalGLZoneBalance.System						= LocalAccountingEntityJournalView.System
						LocalGLZoneBalance.Currency						= LocalAccountingEntityJournalView.Currency
						LocalGLZoneBalance.EntityYearPeriod				= LocalAccountingEntityJournalView.GeneralLedgerCalendarPeriod
						LocalGLZoneBalance.BaseZoneAccountingUnit		= LocalAccountingEntityJournalView.BaseZoneAccountingUnit
						LocalGLZoneBalance.BaseZoneFinanceDimension		= LocalAccountingEntityJournalView.BaseZoneDimension1
						LocalGLZoneBalance.ZoneAccountingUnit			= AccountingUnitZoneBalance.ZoneAccountingUnit

						LocalGLZoneBalance.BaseZoneAccount				= LocalBaseZoneAccount
						LocalGLZoneBalance.ZoneAccount					= LocalZoneAccount
						invoke Update LocalGLZoneBalance
							invoked.BaseTransactionAmount	+= TransactionAmount
							invoked.BaseFunctionalAmount	+= FunctionalAmount
							invoked.BaseAlternateAmount		+= AlternateAmount
							invoked.BaseAlternateAmount2	+= AlternateAmount2
							invoked.BaseAlternateAmount3	+= AlternateAmount3

							invoked.BaseReportAmount1		+= ReportAmount1
							invoked.BaseReportAmount2		+= ReportAmount2
							invoked.BaseReportAmount3		+= ReportAmount3
							invoked.BaseReportAmount4		+= ReportAmount4
							invoked.BaseReportAmount5		+= ReportAmount5
							invoked.BaseUnitsAmount			+= UnitsAmount
							invoked.ZoneTransactionAmount	-= TransactionAmount
							invoked.ZoneFunctionalAmount	-= FunctionalAmount
							invoked.ZoneAlternateAmount		-= AlternateAmount
							invoked.ZoneAlternateAmount2	-= AlternateAmount2
							invoked.ZoneAlternateAmount3	-= AlternateAmount3

							invoked.ZoneReportAmount1		-= ReportAmount1
							invoked.ZoneReportAmount2		-= ReportAmount2
							invoked.ZoneReportAmount3		-= ReportAmount3
							invoked.ZoneReportAmount4		-= ReportAmount4
							invoked.ZoneReportAmount5		-= ReportAmount5
							invoked.ZoneUnitsAmount			-= UnitsAmount

						BypassStructureRelationEdit = true
						LocalTransactionSequence += 1
						invoke CreatePostedGLSystemTransactionsNoRules Posted GeneralLedgerTransaction
							assign result to LocalTransactionView
							invoked.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
							invoked.AccountingEntity						= AccountingEntity
							invoked.GeneralLedgerClosePeriod				= LocalAccountingEntityJournalView.GeneralLedgerClosePeriod
							invoked.GeneralLedgerJournalControl				= LocalAccountingEntityJournalView.GeneralLedgerJournalControl
							invoked.GeneralLedgerTransaction				= LocalTransactionSequence
							invoked.FinanceCodeBlock.ToAccountingEntity		= AccountingEntity
							invoked.FinanceCodeBlock.Ledger					= LocalAccountingEntityJournalView.GeneralLedgerJournalControl.Ledger
							invoked.PrimaryLedger							= LocalAccountingEntityJournalView.GeneralLedgerJournalControl.PrimaryLedger
							if (TransactionAmount	< 0
							or  FunctionalAmount	< 0
							or  AlternateAmount		< 0
							or  AlternateAmount2	< 0
							or  AlternateAmount3	< 0

							or  ReportAmount1		< 0
							or  ReportAmount2		< 0
							or  ReportAmount3		< 0
							or  ReportAmount4		< 0
							or  ReportAmount5		< 0)
								invoked.FinanceCodeBlock.GeneralLedgerChartAccount	= InterZoneReceivablesAccount
							else
								invoked.FinanceCodeBlock.GeneralLedgerChartAccount	= InterZonePayablesAccount
							invoked.FinanceCodeBlock.AccountingUnit		 		= AccountingUnitZoneBalance.ZoneAccountingUnit
							invoked.CurrencyCode								= AccountingUnitZoneBalance.Currency
							invoked.GeneralLedgerEvent							= "ZB"
							invoked.TransactionAmount												-= TransactionAmount
							invoked.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount		-= FunctionalAmount
							invoked.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount		-= AlternateAmount
							invoked.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount		-= AlternateAmount2
							invoked.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount		-= AlternateAmount3

							invoked.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount		-= ReportAmount1
							invoked.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount		-= ReportAmount2
							invoked.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount		-= ReportAmount3
							invoked.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount		-= ReportAmount4
							invoked.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount		-= ReportAmount5
							invoked.UnitsAmount									-= UnitsAmount
							invoked.Description									= LocalAccountingEntityJournalView.Description
							invoked.GeneralLedgerCalendarPeriod					= AccountingUnitZoneBalance.GeneralLedgerCalendarPeriod

						if (TransactionAmount		< 0)
							JournalTransactionAmountDr	+= TransactionAmount
						else
							JournalTransactionAmountCr	+= TransactionAmount
						if (FunctionalAmount		< 0)
							JournalFunctionalAmountDr	+= FunctionalAmount
						else
							JournalFunctionalAmountCr	+= FunctionalAmount
						if (AlternateAmount			< 0)
							JournalAlternateAmountDr	+= AlternateAmount
						else
							JournalAlternateAmountCr	+= AlternateAmount
						if (AlternateAmount2		< 0)
							JournalAlternateAmount2Dr	+= AlternateAmount2
						else
							JournalAlternateAmount2Cr	+= AlternateAmount2
						if (AlternateAmount3		< 0)
							JournalAlternateAmount3Dr	+= AlternateAmount3
						else
							JournalAlternateAmount3Cr	+= AlternateAmount3							
						if (ReportAmount1			< 0)
							JournalReportAmount1Dr		+= ReportAmount1
						else
							JournalReportAmount1Cr		+= ReportAmount1
						if (ReportAmount2			< 0)
							JournalReportAmount2Dr		+= ReportAmount2
						else
							JournalReportAmount2Cr		+= ReportAmount2
						if (ReportAmount3			< 0)
							JournalReportAmount3Dr		+= ReportAmount3
						else
							JournalReportAmount3Cr		+= ReportAmount3
						if (ReportAmount4			< 0)
							JournalReportAmount4Dr		+= ReportAmount4
						else
							JournalReportAmount4Cr		+= ReportAmount4
						if (ReportAmount5			< 0)
							JournalReportAmount5Dr		+= ReportAmount5
						else
							JournalReportAmount5Cr		+= ReportAmount5
						if (UnitsAmount				< 0)
							JournalUnitsDr				+= UnitsAmount
						else
							JournalUnitsCr				+= UnitsAmount
					invoke Delete


		ProcessPeriodZeroZoneRebalancing is a Set Action				
			restricted
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAccountingEntity				is a AccountingEntity
					default label is "AccountingEntity"
				PrmCalendarPeriod				is a GeneralLedgerCalendarPeriod
					default label is "GlobalLedgerCalendarPeriod"				

			Local Fields	
				JournalCreated						is Boolean
				LocalAccountingEntityJournalView	is a GeneralLedgerJournalControl view
				LocalTransactionView				is a GeneralLedgerTransaction view
				LocalTransactionSequence			is like GeneralLedgerTransaction
				LocalCurrency						is like Currency
				LocalGeneralLedgerClosePeriod	 	is a GeneralLedgerClosePeriod
				LocalJournalClosePeriod				is a GeneralLedgerClosePeriod
				LocalJournalCalendarPeriod			is like GeneralLedgerCalendarPeriod
				LocalPostingDate					is Date
				LocalGLZoneBalance					is a GLZoneBalance
				LocalBaseZoneAccount				is like GeneralLedgerChartAccount
				LocalZoneAccount					is like GeneralLedgerChartAccount
				LocalPrimaryLedger					is a Ledger					
				LocalScenario						is a Scenario				
				LocalZoneAccountingUnit				is an AccountingUnit		

			Queue Mapping Fields
				PrmAccountingEntity.PostingCategory
				
			Instance Selection
				where (FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				and    AccountingEntity				= PrmAccountingEntity
				and   (PrmCalendarPeriod entered
				and    AccountingUnitZoneBalance.GeneralLedgerCalendarPeriod = PrmCalendarPeriod)
				or    (!PrmCalendarPeriod entered))

			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				AccountingUnitZoneBalance.Ledger
				AccountingUnitZoneBalance.PrimaryLedger
				AccountingUnitZoneBalance.GeneralLedgerCalendarPeriod
				AccountingUnitZoneBalance.ZoneAccountingUnit
				AccountingUnitZoneBalance.Currency

			Accumulators
				JournalTransactionAmountDr
				JournalFunctionalAmountDr
				JournalAlternateAmountDr
				JournalAlternateAmount2Dr
				JournalAlternateAmount3Dr
				JournalReportAmount1Dr
				JournalReportAmount2Dr
				JournalReportAmount3Dr
				JournalReportAmount4Dr
				JournalReportAmount5Dr
				JournalUnitsDr

				JournalTransactionAmountCr
				JournalFunctionalAmountCr
				JournalAlternateAmountCr
				JournalAlternateAmount2Cr
				JournalAlternateAmount3Cr
				JournalReportAmount1Cr
				JournalReportAmount2Cr
				JournalReportAmount3Cr
				JournalReportAmount4Cr
				JournalReportAmount5Cr
				JournalUnitsCr

			Action Rules
				Empty Set Rules

				Set Rules
				




				AccountingUnitZoneBalance.PrimaryLedger Set Rules
					Entrance Rules
						initialize LocalJournalClosePeriod
						LocalPrimaryLedger		= AccountingUnitZoneBalance.PrimaryLedger

				AccountingUnitZoneBalance.GeneralLedgerCalendarPeriod Set Rules
					Entrance Rules
						LocalEndDate						= AccountingUnitZoneBalance.GeneralLedgerCalendarPeriod
						LocalJournalCalendarPeriod			= AccountingUnitZoneBalance.GeneralLedgerCalendarPeriod

					Exit Rules



				AccountingUnitZoneBalance.Currency Set Rules
					Entrance Rules
						LocalCurrency			= AccountingUnitZoneBalance.Currency

					Exit Rules

						if (PrmAccountingEntity.BalanceTransactionCurrency
						and JournalCreated)
							LocalAccountingEntity		= PrmAccountingEntity		
							LocalClosePeriod			= LocalAccountingEntityJournalView.GeneralLedgerClosePeriod
							LocalJournalControl			= LocalAccountingEntityJournalView.GeneralLedgerJournalControl
							LocalCurrencyCode			= LocalCurrency


				Instance Rules

					if (TransactionAmount entered
					or	FunctionalAmount entered
					or	AlternateAmount entered
					or	AlternateAmount2 entered
					or	AlternateAmount3 entered

					or	ReportAmount1 entered
					or	ReportAmount2 entered
					or	ReportAmount3 entered
					or	ReportAmount4 entered
					or	ReportAmount5 entered
					or	UnitsAmount entered)
						if (!JournalCreated)
							JournalCreated		= true
							LocalAccountingEntity		= PrmAccountingEntity

						if (TransactionAmount	< 0
						or  FunctionalAmount	< 0
						or  AlternateAmount		< 0
						or  AlternateAmount2	< 0
						or  AlternateAmount3	< 0

						or  ReportAmount1		< 0
						or  ReportAmount2		< 0
						or  ReportAmount3		< 0
						or  ReportAmount4		< 0
						or  ReportAmount5		< 0)
							LocalBaseZoneAccount	= InterZonePayablesAccount
							LocalZoneAccount		= InterZoneReceivablesAccount
						else
							LocalBaseZoneAccount	= InterZoneReceivablesAccount
							LocalZoneAccount		= InterZonePayablesAccount
			
						LocalGLZoneBalance.Ledger						= AccountingUnitZoneBalance.Ledger
						LocalGLZoneBalance.System						= "GL"
						LocalGLZoneBalance.Currency						= PrmAccountingEntity.FunctionalCurrency
						LocalGLZoneBalance.EntityYearPeriod				= LocalJournalCalendarPeriod
						LocalGLZoneBalance.BaseZoneAccountingUnit		= DefaultZoneAccountingUnitRel.ZoneAccountingUnit

						if (FinanceEnterpriseGroup.FinanceDimension1Required)
							LocalGLZoneBalance.BaseZoneFinanceDimension		= FinanceDimension1Rel.FinanceDimension1
							LocalGLZoneBalance.ZoneFinanceDimension			= FinanceDimension1Rel.FinanceDimension1

						LocalZoneAccountingUnit							= AccountingUnitZoneBalance.ZoneAccountingUnit
						LocalGLZoneBalance.ZoneAccountingUnit			= AccountingUnitZoneBalance.ZoneAccountingUnit

						LocalGLZoneBalance.BaseZoneAccount				= LocalBaseZoneAccount
						LocalGLZoneBalance.ZoneAccount					= LocalZoneAccount


						invoke Update LocalGLZoneBalance
							invoked.BaseTransactionAmount	+= TransactionAmount
							invoked.BaseFunctionalAmount	+= FunctionalAmount
							invoked.BaseAlternateAmount		+= AlternateAmount
							invoked.BaseAlternateAmount2	+= AlternateAmount2
							invoked.BaseAlternateAmount3	+= AlternateAmount3

							invoked.BaseReportAmount1		+= ReportAmount1
							invoked.BaseReportAmount2		+= ReportAmount2
							invoked.BaseReportAmount3		+= ReportAmount3
							invoked.BaseReportAmount4		+= ReportAmount4
							invoked.BaseReportAmount5		+= ReportAmount5
							invoked.BaseUnitsAmount			+= UnitsAmount
							invoked.ZoneTransactionAmount	-= TransactionAmount
							invoked.ZoneFunctionalAmount	-= FunctionalAmount
							invoked.ZoneAlternateAmount		-= AlternateAmount
							invoked.ZoneAlternateAmount2	-= AlternateAmount2
							invoked.ZoneAlternateAmount3	-= AlternateAmount3

							invoked.ZoneReportAmount1		-= ReportAmount1
							invoked.ZoneReportAmount2		-= ReportAmount2
							invoked.ZoneReportAmount3		-= ReportAmount3
							invoked.ZoneReportAmount4		-= ReportAmount4
							invoked.ZoneReportAmount5		-= ReportAmount5
							invoked.ZoneUnitsAmount			-= UnitsAmount

						BypassStructureRelationEdit = true
						LocalTransactionSequence += 1
						

						FinanceCodeBlock.Ledger							= LocalGLZoneBalance.Ledger
        				FinanceCodeBlock.ToAccountingEntity				= AccountingEntity
						FinanceCodeBlock.AccountingUnit		 			= AccountingUnitZoneBalance.ZoneAccountingUnit

						include AssignCodeBlockDefaults		

						if (TransactionAmount	< 0
						or  FunctionalAmount	< 0
						or  AlternateAmount		< 0
						or  AlternateAmount2	< 0
						or  AlternateAmount3	< 0

						or  ReportAmount1		< 0
						or  ReportAmount2		< 0
						or  ReportAmount3		< 0
						or  ReportAmount4		< 0
						or  ReportAmount5		< 0)
							FinanceCodeBlock.GeneralLedgerChartAccount	= InterZoneReceivablesAccount
						else
							FinanceCodeBlock.GeneralLedgerChartAccount	= InterZonePayablesAccount


						LocalScenario									= PrmFinanceEnterpriseGroup.ActualsScenario
						LocalGeneralLedgerTotal.Ledger					= LocalGLZoneBalance.Ledger
						LocalGeneralLedgerTotal.System						= LocalGLZoneBalance.System
						LocalGeneralLedgerTotal.Currency					= LocalCurrency
						LocalGeneralLedgerTotal.EntityYearPeriod			= LocalGLZoneBalance.EntityYearPeriod
						LocalGeneralLedgerTotal.AccountingUnit		 		= LocalZoneAccountingUnit

						if (TransactionAmount	< 0
						or  FunctionalAmount	< 0
						or  AlternateAmount		< 0
						or  AlternateAmount2	< 0
						or  AlternateAmount3	< 0

						or  ReportAmount1		< 0
						or  ReportAmount2		< 0
						or  ReportAmount3		< 0
						or  ReportAmount4		< 0
						or  ReportAmount5		< 0)
							LocalGeneralLedgerTotal.GeneralLedgerChartAccount	= InterZoneReceivablesAccount
						else
							LocalGeneralLedgerTotal.GeneralLedgerChartAccount	= InterZonePayablesAccount


						LocalGeneralLedgerTotal.DimensionCode				= FinanceCodeBlock.DimensionCode
						LocalGeneralLedgerTotal.PrimaryLedger				= LocalPrimaryLedger


						
						invoke PostTransactions LocalGeneralLedgerTotal
							invoked.AccountingEntity	= AccountingEntity
							invoked.TransactionAmount	-= TransactionAmount
							invoked.FunctionalAmount	-= FunctionalAmount
							invoked.AlternateAmount		-= AlternateAmount
							invoked.AlternateAmount2	-= AlternateAmount2
							invoked.AlternateAmount3	-= AlternateAmount3
							invoked.ProjectAmount		-= ProjectAmount
							invoked.ReportAmount1		-= ReportAmount1
							invoked.ReportAmount2		-= ReportAmount2
							invoked.ReportAmount3		-= ReportAmount3
							invoked.ReportAmount4		-= ReportAmount4
							invoked.ReportAmount5		-= ReportAmount5
							invoked.UnitsAmount			-= UnitsAmount
							invoked.Scenario			= Scenario
							invoked.FinanceDimension1	= FinanceCodeBlock.FinanceDimension1
							invoked.FinanceDimension2	= FinanceCodeBlock.FinanceDimension2
							invoked.FinanceDimension3	= FinanceCodeBlock.FinanceDimension3
							invoked.FinanceDimension4	= FinanceCodeBlock.FinanceDimension4
							invoked.FinanceDimension5	= FinanceCodeBlock.FinanceDimension5
							invoked.FinanceDimension6	= FinanceCodeBlock.FinanceDimension6
							invoked.FinanceDimension7	= FinanceCodeBlock.FinanceDimension7
							invoked.FinanceDimension8	= FinanceCodeBlock.FinanceDimension8
							invoked.FinanceDimension9	= FinanceCodeBlock.FinanceDimension9
							invoked.FinanceDimension10  = FinanceCodeBlock.FinanceDimension10						
							invoked.PeriodEndingDate	= PeriodEndingDate			
							invoked.UpdateChangesOnly	= true


						if (TransactionAmount		< 0)
							JournalTransactionAmountDr	+= TransactionAmount
						else
							JournalTransactionAmountCr	+= TransactionAmount
						if (FunctionalAmount		< 0)
							JournalFunctionalAmountDr	+= FunctionalAmount
						else
							JournalFunctionalAmountCr	+= FunctionalAmount
						if (AlternateAmount			< 0)
							JournalAlternateAmountDr	+= AlternateAmount
						else
							JournalAlternateAmountCr	+= AlternateAmount
						if (AlternateAmount2		< 0)
							JournalAlternateAmount2Dr	+= AlternateAmount2
						else
							JournalAlternateAmount2Cr	+= AlternateAmount2
						if (AlternateAmount3		< 0)
							JournalAlternateAmount3Dr	+= AlternateAmount3
						else
							JournalAlternateAmount3Cr	+= AlternateAmount3							
						if (ReportAmount1			< 0)
							JournalReportAmount1Dr		+= ReportAmount1
						else
							JournalReportAmount1Cr		+= ReportAmount1
						if (ReportAmount2			< 0)
							JournalReportAmount2Dr		+= ReportAmount2
						else
							JournalReportAmount2Cr		+= ReportAmount2
						if (ReportAmount3			< 0)
							JournalReportAmount3Dr		+= ReportAmount3
						else
							JournalReportAmount3Cr		+= ReportAmount3
						if (ReportAmount4			< 0)
							JournalReportAmount4Dr		+= ReportAmount4
						else
							JournalReportAmount4Cr		+= ReportAmount4
						if (ReportAmount5			< 0)
							JournalReportAmount5Dr		+= ReportAmount5
						else
							JournalReportAmount5Cr		+= ReportAmount5
						if (UnitsAmount				< 0)
							JournalUnitsDr				+= UnitsAmount
						else
							JournalUnitsCr				+= UnitsAmount
					invoke Delete
