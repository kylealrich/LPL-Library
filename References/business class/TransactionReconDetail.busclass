TransactionReconDetail is a BusinessClass
	owned by reconciliation
	prefix is TRCD

	Ontology
		symbolic key is TransactionReconDetail
	
	Patterns
		implements LightweightAuditing
		disable AuditIndex
 		disable EffectiveDated
		disable AsOfDateProcessing
			
	Persistent Fields								
		ReconciliationCodeBlock					is a snapshot of ReconciliationAccount.ReconciliationCodeBlock
		ReconTransactionType
		PostingPeriod							is a GeneralLedgerCalendarPeriod
		TransactionReconTemplate
		DetailReconciliationMatchRule
		DetailLineNumber						is Numeric 6
		TransactionNumber						is Numeric 15
		TransactionDate							is an ExchangeDate
		PostingDate
		CurrencyTable
		Currency								is a FromCurrency
		TransactionAmount						is a FinanceCurrencyAmountGroup 
			default label is "Amount"
		AmountType								is Numeric 1
			default label is "Sign"
			States
				Debit				value is 1
				Credit				value is 2
		ReconcilingAmount						is a FinanceCurrencyAmountGroup 
		SignedAmount							is a FinanceCurrencyAmountGroup
		UnitsAmount
		SystemCode								is a GeneralLedgerSystemCode
			default label is "SystemCode"
		SourceCode								is a GeneralLedgerEvent
			default label is "Event"
		Reference								is Alpha 10
		Description								is Alpha 100
		Operator								is AlphaUpper 10
		LineMatchField							is Alpha 200
		SummaryRecord							is Boolean
		SelectedForMatch						is Boolean
		Reconciled								is Boolean
		ReconciliationInterface
			delete ignored
		OriginatingGLTransaction				is BusinessObjectReference
		MatchedDate								is TimeStamp
		MatchedActor							is an Actor
			default label is "MatchedBy"
		MatchedManually							is Boolean
		NumberOfMatchedInterfaceLines			is Numeric 6
		NumberOfMatchedGeneralLedgerLines		is Numeric 6
			default label is "NumberOfMatchedGlobalLedgerLines"
		DistributionAccount						is a FinanceCodeBlockFull
		CashAllocationCode
		CreateDistribution						is Boolean
		CreateReconcilingItem					is Boolean
		DetailReconciliationCurrency
		DetailReconciliationSign
		ReconcilingDescription					is a Description	
			default label is "Description"
		ReconcilingComment						is Text				
			default label is "Comment"
		NonAccountFunctionalCurrency			is a Currency
						
	Local Fields
		LocalLineMatchField						is Alpha 200
		LocalTransactionReconDetail				is a TransactionReconDetail





		LocalFieldCount							is Numeric 3
		LocalCounter							is Numeric 3
		TrimmingZerosComplete					is Boolean
		TrimmedLeadingZeroField					is Alpha 200
		RemovedAlphaCharactersField				is Alpha 200
		LocalReconciliationManagementGroup		is like ReconciliationManagementGroup
		LocalReconciliationAccountStructure		is like ReconciliationAccountStructure
		LocalReconciliationAccount				is like ReconciliationAccount
		LocalTransactionAmount					is an InternationalAmount
		LocalCloseConfiguration					is a GeneralLedgerCloseConfiguration
		LocalReconciliationPeriod				is like GeneralLedgerClosePeriod 
		LocalReconciliationDetail 				is a ReconciliationDetail view 
		TempLineMatchField						is AlphaUpper 200
		LocalMatchRule							is a DetailReconciliationMatchRule
							
	Transient Fields
		ReconciliationFromEntity			 	is an AccountingEntity
    		derive value from ReconciliationAccount.ReconciliationCodeBlock.AccountingEntity
		TransientLineMatchField					is Alpha 200
			Text Variables
				TransactionNumber	value is TransactionNumber
				TransactionDate		value is TransactionDate
				TransactionAmount	value is DerivedTransactionAmount
				PostingDate			value is PostingDate
				Currency			value is DerivedCurrency 
				UnitsAmount			value is UnitsAmount
				SystemCode			value is SystemCode
				SourceCode			value is SourceCode
				Reference			value is Reference
				Description			value is Description

	Rule Blocks












		
		DetermineLineMatchField
			initialize TransientLineMatchField
			if (!LineMatchField entered)
				if (!SummaryRecord)
					if (ReconciliationAccount.DetailReconciliationMethod.UseDetailReconciliationTemplates)
						if(ReconciliationAccount.IsAccountWithinGroup)
							if (ReconciliationAccount.LineMatchField entered)
								TransientLineMatchField = ReconciliationAccount.LineMatchField
							else
								if (ReconciliationGroupOnlyTemplateRel exists)
									if (ReconciliationGroupOnlyTemplateSystemCodeEventRel exists)
										TransientLineMatchField = ReconciliationGroupOnlyTemplateSystemCodeEventRel.LineMatchField
									else
									if (ReconciliationGroupOnlyTemplateSystemCodeRel exists)
										TransientLineMatchField = ReconciliationGroupOnlyTemplateSystemCodeRel.LineMatchField
									else
									if (ReconciliationGroupOnlyTemplateEventRel exists)
										TransientLineMatchField = ReconciliationGroupOnlyTemplateEventRel.LineMatchField
									else
										TransientLineMatchField = ReconciliationGroupOnlyTemplateBlankRel.LineMatchField
								else
									TransientLineMatchField = TransactionReconTemplate.LineMatchField
						else
							if (ReconciliationAccount.LineMatchField entered)
								TransientLineMatchField = ReconciliationAccount.LineMatchField
							else
								TransientLineMatchField = TransactionReconTemplate.LineMatchField
						LineMatchField = TransientLineMatchField text
					else
					if (ReconciliationAccount.DetailReconciliationMethod.UseDetailReconciliationMatchRules)
						if (ReconTransactionType.InterfacedTransaction)
							for each DetailReconciliationMatchRuleGroupDetailRel
								if (each.DetailReconciliationMatchRule.InterfaceApplyToAll
								or  TransactionReconDetail within each.DetailReconciliationMatchRule.InterfaceRule)
									if (!DisableReconApplyingModificationOptionsToVariablesOnly)
										LocalMatchRule = each.DetailReconciliationMatchRule
										if (!LocalMatchRule.InterfaceLineMatchFieldArray entered)
											invoke Update LocalMatchRule
										for each LocalMatchRule.InterfaceLineMatchFieldArray.LineMatchFieldSegment
											if (each.Segment entered)
												if (each.Variable = false)
													LineMatchField += each.Segment
												else
													TransientLineMatchField = each.Segment
													TempLineMatchField = TransientLineMatchField text
													TempLineMatchField -= " "
													

													if (LocalMatchRule.InterfaceRemoveCharacterString)
														TempLineMatchField -= LocalMatchRule.DerivedInterfaceRemoveString
														
													if (LocalMatchRule.InterfaceRemoveCharactersBefore)
														TempLineMatchField -= LocalMatchRule.DerivedInterfaceRemoveBefore
													
													if (LocalMatchRule.InterfaceRemoveCharactersAfter)
														TempLineMatchField -= LocalMatchRule.DerivedInterfaceRemoveAfter
														
													if (LocalMatchRule.InterfaceRemoveAlphaCharacters)
														initialize RemovedAlphaCharactersField
														LocalCounter = 1 	
														while (LocalCounter <= 200)
															if (TempLineMatchField[LocalCounter] entered)
																if (TempLineMatchField[LocalCounter] is numeric)
																	RemovedAlphaCharactersField += TempLineMatchField[LocalCounter]
																	LocalCounter += 1
																else
																	LocalCounter += 1
															else
																end while
														TempLineMatchField = RemovedAlphaCharactersField
														
													if (LocalMatchRule.InterfaceRemoveLeadingZeros)
														initialize TrimmedLeadingZeroField
														LocalFieldCount			= 1
														TrimmingZerosComplete	= false
														while (LocalFieldCount <= 200)
															if (TempLineMatchField[LocalFieldCount] entered)
																if (TrimmingZerosComplete)
																	TrimmedLeadingZeroField	+= TempLineMatchField[LocalFieldCount]
																else
																	if (TempLineMatchField[LocalFieldCount] != 0)
																		TrimmedLeadingZeroField	+= TempLineMatchField[LocalFieldCount]
																		TrimmingZerosComplete	= true
																LocalFieldCount	+= 1
															else
																end while
														TempLineMatchField = TrimmedLeadingZeroField
												
													LineMatchField += TempLineMatchField
													DetailReconciliationMatchRule = LocalMatchRule
													LineMatchField -= " "
											else
												end for each
									
									else
										TransientLineMatchField = each.DetailReconciliationMatchRule.InterfaceLineMatchField
										LineMatchField = TransientLineMatchField text
										DetailReconciliationMatchRule = each.DetailReconciliationMatchRule
										LineMatchField -= " "
									
										if (each.DetailReconciliationMatchRule.InterfaceRemoveCharacterString)
											LineMatchField -= each.DetailReconciliationMatchRule.DerivedInterfaceRemoveString
											
										if (each.DetailReconciliationMatchRule.InterfaceRemoveCharactersBefore)
											LineMatchField -= each.DetailReconciliationMatchRule.DerivedInterfaceRemoveBefore
										
										if (each.DetailReconciliationMatchRule.InterfaceRemoveCharactersAfter)
											LineMatchField -= each.DetailReconciliationMatchRule.DerivedInterfaceRemoveAfter
													
										if (LineMatchField entered)	
											if (each.DetailReconciliationMatchRule.InterfaceRemoveAlphaCharacters)
												initialize RemovedAlphaCharactersField
												LocalCounter = 1 	
												while (LocalCounter <= 200)
													if (LineMatchField[LocalCounter] entered)
														if (LineMatchField[LocalCounter] is numeric)
															RemovedAlphaCharactersField += LineMatchField[LocalCounter]
															LocalCounter += 1
														else
															LocalCounter += 1
													else
														end while
												LineMatchField = RemovedAlphaCharactersField
												
											if (each.DetailReconciliationMatchRule.InterfaceRemoveLeadingZeros)
												initialize TrimmedLeadingZeroField
												LocalFieldCount			= 1
												TrimmingZerosComplete	= false
												while (LocalFieldCount <= 200)
													if (LineMatchField[LocalFieldCount] entered)
														if (TrimmingZerosComplete)
															TrimmedLeadingZeroField	+= LineMatchField[LocalFieldCount]
														else
															if (LineMatchField[LocalFieldCount] != 0)
																TrimmedLeadingZeroField	+= LineMatchField[LocalFieldCount]
																TrimmingZerosComplete	= true
														LocalFieldCount	+= 1
													else
														end while
												LineMatchField = TrimmedLeadingZeroField
										
									end for each
						else
							for each DetailReconciliationMatchRuleGroupDetailRel
								if (each.DetailReconciliationMatchRule.GeneralLedgerApplyToAll
								or  TransactionReconDetail within each.DetailReconciliationMatchRule.GeneralLedgerRule)
									if (!DisableReconApplyingModificationOptionsToVariablesOnly)
										LocalMatchRule = each.DetailReconciliationMatchRule
										if (!LocalMatchRule.GeneralLedgerLineMatchFieldArray entered)
											invoke Update LocalMatchRule
										for each LocalMatchRule.GeneralLedgerLineMatchFieldArray.LineMatchFieldSegment
											if (each.Segment entered)
												if (each.Variable = false)
													LineMatchField += each.Segment
												else
													TransientLineMatchField = each.Segment
													TempLineMatchField = TransientLineMatchField text
													TempLineMatchField -= " "
													

													if (LocalMatchRule.GeneralLedgerRemoveCharacterString)
														TempLineMatchField -= LocalMatchRule.DerivedGeneralLedgerRemoveString
														
													if (LocalMatchRule.GeneralLedgerRemoveCharactersBefore)
														TempLineMatchField -= LocalMatchRule.DerivedGeneralLedgerRemoveBefore
													
													if (LocalMatchRule.GeneralLedgerRemoveCharactersAfter)
														TempLineMatchField -= LocalMatchRule.DerivedGeneralLedgerRemoveAfter
														
													if (LocalMatchRule.GeneralLedgerRemoveAlphaCharacters)
														initialize RemovedAlphaCharactersField
														LocalCounter = 1 	
														while (LocalCounter <= 200)
															if (TempLineMatchField[LocalCounter] entered)
																if (TempLineMatchField[LocalCounter] is numeric)
																	RemovedAlphaCharactersField += TempLineMatchField[LocalCounter]
																	LocalCounter += 1
																else
																	LocalCounter += 1
															else
																end while
														TempLineMatchField = RemovedAlphaCharactersField
														
													if (LocalMatchRule.GeneralLedgerRemoveLeadingZeros)
														initialize TrimmedLeadingZeroField
														LocalFieldCount			= 1
														TrimmingZerosComplete	= false
														while (LocalFieldCount <= 200)
															if (TempLineMatchField[LocalFieldCount] entered)
																if (TrimmingZerosComplete)
																	TrimmedLeadingZeroField	+= TempLineMatchField[LocalFieldCount]
																else
																	if (TempLineMatchField[LocalFieldCount] != 0)
																		TrimmedLeadingZeroField	+= TempLineMatchField[LocalFieldCount]
																		TrimmingZerosComplete	= true
																LocalFieldCount	+= 1
															else
																end while
														TempLineMatchField = TrimmedLeadingZeroField
												
													LineMatchField += TempLineMatchField
													DetailReconciliationMatchRule = LocalMatchRule
													LineMatchField -= " "
											else
												end for each
										
									else
										TransientLineMatchField = each.DetailReconciliationMatchRule.GeneralLedgerLineMatchField
										LineMatchField = TransientLineMatchField text
										DetailReconciliationMatchRule = each.DetailReconciliationMatchRule
										LineMatchField -= " "
									
										if (each.DetailReconciliationMatchRule.GeneralLedgerRemoveCharacterString)
											LineMatchField -= each.DetailReconciliationMatchRule.DerivedGeneralLedgerRemoveString
											
										if (each.DetailReconciliationMatchRule.GeneralLedgerRemoveCharactersBefore)
											LineMatchField -= each.DetailReconciliationMatchRule.DerivedGeneralLedgerRemoveBefore
										
										if (each.DetailReconciliationMatchRule.GeneralLedgerRemoveCharactersAfter)
											LineMatchField -= each.DetailReconciliationMatchRule.DerivedGeneralLedgerRemoveAfter
												
										if (LineMatchField entered)
											if (each.DetailReconciliationMatchRule.GeneralLedgerRemoveAlphaCharacters)
												initialize RemovedAlphaCharactersField
												LocalCounter = 1 	
												while (LocalCounter <= 200)
													if (LineMatchField[LocalCounter] entered)
														if (LineMatchField[LocalCounter] is numeric)
															RemovedAlphaCharactersField += LineMatchField[LocalCounter]
															LocalCounter += 1
														else
															LocalCounter += 1
													else
														end while
												LineMatchField = RemovedAlphaCharactersField
												
											if (each.DetailReconciliationMatchRule.GeneralLedgerRemoveLeadingZeros)
												initialize TrimmedLeadingZeroField
												LocalFieldCount			= 1
												TrimmingZerosComplete	= false
												while (LocalFieldCount <= 200)
													if (LineMatchField[LocalFieldCount] entered)
														if (TrimmingZerosComplete)
															TrimmedLeadingZeroField	+= LineMatchField[LocalFieldCount]
														else
															if (LineMatchField[LocalFieldCount] != 0)
																TrimmedLeadingZeroField	+= LineMatchField[LocalFieldCount]
																TrimmingZerosComplete	= true
														LocalFieldCount	+= 1
													else
														end while
												LineMatchField = TrimmedLeadingZeroField
										
									end for each

		CreateReconcilingItems
			initialize LocalTransactionAmount
			if (UnmatchedTransaction)
				if (ReconTransactionType.InterfacedTransaction)
					if (AmountType.Debit)
						LocalTransactionAmount = TransactionAmount.FunctionalAmount.EnteredCurrencyAmount
					else
						LocalTransactionAmount = TransactionAmount.FunctionalAmount.EnteredCurrencyAmount * -1
				else
					if (AmountType.Debit)
						LocalTransactionAmount = TransactionAmount.FunctionalAmount.EnteredCurrencyAmount * -1
					else
						LocalTransactionAmount = TransactionAmount.FunctionalAmount.EnteredCurrencyAmount
			else
				LocalTransactionAmount = NetReconciledDifference * -1
				
			invoke CreateReconcilingItem ReconciliationDetail
				assign result to LocalReconciliationDetail
				invoked.ReconciliationManagementGroup	= ReconciliationManagementGroup
				invoked.ReconciliationAccountStructure	= ReconciliationAccountStructure
				if (ReconciliationAccount.IsAccountWithinConsolidatedGroup)
					invoked.ReconciliationAccount		= ReconciliationAccount.ParentReconciliationAccount
				else
					invoked.ReconciliationAccount		= ReconciliationAccount
				invoked.ReferenceNumber					= "Detail Reconciliation Reconciling Item"
				invoked.Description						= ReconcilingDescription	
				invoked.DetailAmount					= LocalTransactionAmount
				invoked.TransactionDate					= ReconciliationAccount.CurrentReconciliationPeriod.GeneralLedgerCalendarPeriod.Date
		    	invoked.StartPeriod						= ReconciliationAccount.CurrentReconciliationPeriod
		    	invoked.EndPeriod						= ReconciliationAccount.CurrentReconciliationPeriod
		    	invoked.PeriodTerm						= 1
		    	invoked.Active							= true
				invoked.CreatedFromDetailReconciliation = true
				invoked.ReconciliationReason			= PrmReconciliationReason
				
			invoke Create ReconciliationPeriodDetail
				fill in fields from LocalReconciliationDetail.ReconciliationDetail
					except invoked.Attachment.FSMAttachmentIDM
				invoked.ReconciliationManagementGroup	= ReconciliationManagementGroup
				invoked.ReconciliationAccountStructure	= ReconciliationAccountStructure
				if (ReconciliationAccount.IsAccountWithinConsolidatedGroup)
					invoked.ReconciliationAccount		= ReconciliationAccount.ParentReconciliationAccount
				else
					invoked.ReconciliationAccount		= ReconciliationAccount
				invoked.ReconciliationDetail			= LocalReconciliationDetail.ReconciliationDetail
				invoked.DetailType						= 2 
				invoked.GeneralLedgerCloseConfiguration	= ReconciliationAccount.CloseConfiguration
				invoked.DetailPeriod					= ReconciliationAccount.CurrentReconciliationPeriod
				invoked.PeriodAmount					= LocalTransactionAmount
				if (!ReconciliationAccount.IsAccountWithinConsolidatedGroup)	
					invoked.TransactionReconDetail		= TransactionReconDetail 
				invoked.OriginatingTransaction			= reference to this instance
				invoked.ReconciliationReason			= PrmReconciliationReason
				
		CreatePeriodDistributions
			initialize LocalTransactionAmount
			if (UnmatchedTransaction)
				if (ReconTransactionType.InterfacedTransaction)
					if (AmountType.Debit)
						LocalTransactionAmount = TransactionAmount.FunctionalAmount.EnteredCurrencyAmount * -1
					else
						LocalTransactionAmount = TransactionAmount.FunctionalAmount.EnteredCurrencyAmount
				else
					if (AmountType.Debit)
						LocalTransactionAmount = TransactionAmount.FunctionalAmount.EnteredCurrencyAmount
					else
						LocalTransactionAmount = TransactionAmount.FunctionalAmount.EnteredCurrencyAmount * -1
			else
				if (NetReconciledDifference > 0)
					LocalTransactionAmount = NetReconciledDifference 
				else
					LocalTransactionAmount = NetReconciledDifference 
								
			if (DistributionAccount entered)
				invoke Create PeriodEndDistribution
					fill in fields from this instance
					invoked.ReconciliationManagementGroup		  					= ReconciliationManagementGroup
					invoked.ReconciliationAccountStructure		  					= ReconciliationAccountStructure
					invoked.PeriodEndReconciliation.ReconciliationAccount			= ReconciliationAccount
					invoked.PeriodEndReconciliation.GeneralLedgerCloseConfiguration	= ReconciliationAccount.CloseConfiguration
					invoked.PeriodEndReconciliation.GeneralLedgerClosePeriod		= ReconciliationAccount.CurrentReconciliationPeriod
					invoked.GLFinanceCodeBlock					  					= DistributionAccount
					invoked.GLTransactionAmount					  					= LocalTransactionAmount
					invoked.DistributionAmount.CurrencyAmount	  					= LocalTransactionAmount
					if (ReconcilingDescription entered)
						invoked.Description                                       	= ReconcilingDescription
					else
						invoked.Description                                         = "Tolerance Adjustment"
					invoked.Comment													= ReconcilingComment
					invoked.TransactionReconDetail									= TransactionReconDetail
			else
			if (CashAllocationCode entered)
				for each CashAllocationCode.CashAllocationCodeDetail set
					invoke Create PeriodEndDistribution
						fill in fields from each
						invoked.ReconciliationManagementGroup		  					= ReconciliationManagementGroup
						invoked.ReconciliationAccountStructure		  					= ReconciliationAccountStructure
						invoked.PeriodEndReconciliation.ReconciliationAccount			= ReconciliationAccount
						invoked.PeriodEndReconciliation.GeneralLedgerCloseConfiguration	= ReconciliationAccount.CloseConfiguration
						invoked.PeriodEndReconciliation.GeneralLedgerClosePeriod		= ReconciliationAccount.CurrentReconciliationPeriod
						invoked.GLFinanceCodeBlock					  					= each.AllocationAccount
						if (CashAllocationCode.AllocationType.Amount)
							invoked.GLTransactionAmount									= each.AllocationAmount
							invoked.DistributionAmount.CurrencyAmount					= each.AllocationAmount
						if (CashAllocationCode.AllocationType.Percent)
							invoked.GLTransactionAmount									= (LocalTransactionAmount * each.AllocationPercent)
							invoked.DistributionAmount.CurrencyAmount					= (LocalTransactionAmount * each.AllocationPercent)
						if (CashAllocationCode.AllocationType.AccountOnly)
							invoked.BypassUnitAndAmountEdit 							= true
						if (ReconcilingDescription entered)
							invoked.Description							  				= ReconcilingDescription
						else
							invoked.Description							  				= "Tolerance Adjustment"
						invoked.Comment													= ReconcilingComment
						invoked.TransactionReconDetail									= TransactionReconDetail

		CreateReversalDistributions
			initialize LocalTransactionAmount
			for each PostedNotReversedPeriodDistributionRel
				invoke Create PeriodEndDistribution
					fill in fields from each
					invoked.GLTransactionAmount					  						= each.GLTransactionAmount * -1
					invoked.DistributionAmount.ExchangeDate								= each.DistributionAmount.ExchangeDate
		        	invoked.DistributionAmount.CurrencyAmount							= each.DistributionAmount.CurrencyAmount * -1
					invoked.DistributionAmount.FunctionalAmount.EnteredCurrencyRate		= each.DistributionAmount.FunctionalAmount.EnteredCurrencyRate
					invoked.DistributionAmount.FunctionalAmount.EnteredCurrencyAmount	= each.DistributionAmount.FunctionalAmount * -1
					invoked.DistributionAmount.AlternateAmount.EnteredCurrencyRate		= each.DistributionAmount.AlternateAmount.EnteredCurrencyRate
					invoked.DistributionAmount.AlternateAmount.EnteredCurrencyAmount	= each.DistributionAmount.AlternateAmount * -1
					invoked.DistributionAmount.AlternateAmount2.EnteredCurrencyRate		= each.DistributionAmount.AlternateAmount2.EnteredCurrencyRate
					invoked.DistributionAmount.AlternateAmount2.EnteredCurrencyAmount	= each.DistributionAmount.AlternateAmount2 * -1
					invoked.DistributionAmount.AlternateAmount3.EnteredCurrencyRate		= each.DistributionAmount.AlternateAmount3.EnteredCurrencyRate
					invoked.DistributionAmount.AlternateAmount3.EnteredCurrencyAmount	= each.DistributionAmount.AlternateAmount3 * -1
					invoked.DistributionAmount.ProjectAmount.EnteredCurrencyRate		= each.DistributionAmount.ProjectAmount.EnteredCurrencyRate
					invoked.DistributionAmount.ProjectAmount.EnteredCurrencyAmount		= each.DistributionAmount.ProjectAmount * -1
					invoked.DistributionAmount.ReportAmount1.EnteredCurrencyRate		= each.DistributionAmount.ReportAmount1.EnteredCurrencyRate
					invoked.DistributionAmount.ReportAmount1.EnteredCurrencyAmount		= each.DistributionAmount.ReportAmount1 * -1
					invoked.DistributionAmount.ReportAmount2.EnteredCurrencyRate		= each.DistributionAmount.ReportAmount2.EnteredCurrencyRate
					invoked.DistributionAmount.ReportAmount2.EnteredCurrencyAmount		= each.DistributionAmount.ReportAmount2 * -1
					invoked.DistributionAmount.ReportAmount3.EnteredCurrencyRate		= each.DistributionAmount.ReportAmount3.EnteredCurrencyRate
					invoked.DistributionAmount.ReportAmount3.EnteredCurrencyAmount		= each.DistributionAmount.ReportAmount3 * -1
					invoked.DistributionAmount.ReportAmount4.EnteredCurrencyRate		= each.DistributionAmount.ReportAmount4.EnteredCurrencyRate
					invoked.DistributionAmount.ReportAmount4.EnteredCurrencyAmount		= each.DistributionAmount.ReportAmount4 * -1
					invoked.DistributionAmount.ReportAmount5.EnteredCurrencyRate		= each.DistributionAmount.ReportAmount5.EnteredCurrencyRate
					invoked.DistributionAmount.ReportAmount5.EnteredCurrencyAmount		= each.DistributionAmount.ReportAmount5 * -1
					invoked.ReversedDistribution										= true
				
				invoke FastUpdate each
					invoked.ReversedDistribution										= true
									
	Derived Fields
		DerivedTransactionAmount is a DerivedField
			type is like InternationalAmount
			if (DetailReconciliationCurrency.Transaction)
				return TransactionAmount.CurrencyAmount
			else
			if (DetailReconciliationCurrency.EntityFunctional)
				return TransactionAmount.FunctionalAmount.EnteredCurrencyAmount



























	
		DerivedCurrency is a DerivedField
			type is like Currency
			if (DetailReconciliationCurrency.Transaction)
				return Currency
			else
			if (DetailReconciliationCurrency.EntityFunctional)
				return ReconciliationAccount.ReconciliationCodeBlock.AccountingEntity.FunctionalCurrency



























		
		GeneralLedgerDebitAmount is a DerivedField
			type is like InternationalAmount
			default label is "GlobalLedgerDebitAmount"
			if (SummaryRecord)
				if (DetailReconciliationCurrency.Transaction)
					return (sum DrGeneralLedgerTransactionReconDetailRel.TransactionAmount.CurrencyAmount)
				else
				if (DetailReconciliationCurrency.EntityFunctional)
					return (sum DrGeneralLedgerTransactionReconDetailRel.TransactionAmount.FunctionalAmount.EnteredCurrencyAmount)



























					
		GeneralLedgerCreditAmount is a DerivedField		
			type is like InternationalAmount
			default label is "GlobalLedgerCreditAmount"
			if (SummaryRecord)
				if (DetailReconciliationCurrency.Transaction)
					return (sum CrGeneralLedgerTransactionReconDetailRel.TransactionAmount.CurrencyAmount)
				else
				if (DetailReconciliationCurrency.EntityFunctional)
					return (sum CrGeneralLedgerTransactionReconDetailRel.TransactionAmount.FunctionalAmount.EnteredCurrencyAmount)



























		
		InterfacedTransactionDebitAmount is a DerivedField
			type is like InternationalAmount
			if (SummaryRecord)
				if (DetailReconciliationCurrency.Transaction)
					return (sum DrInterfacedTransactionReconDetailRel.TransactionAmount.CurrencyAmount)
				else
				if (DetailReconciliationCurrency.EntityFunctional)
					return (sum DrInterfacedTransactionReconDetailRel.TransactionAmount.FunctionalAmount.EnteredCurrencyAmount)



























					
		InterfacedTransactionCreditAmount is a DerivedField		
			type is like InternationalAmount
			if (SummaryRecord)
				if (DetailReconciliationCurrency.Transaction)
					return (sum CrInterfacedTransactionReconDetailRel.TransactionAmount.CurrencyAmount)
				else
				if (DetailReconciliationCurrency.EntityFunctional)
					return (sum CrInterfacedTransactionReconDetailRel.TransactionAmount.FunctionalAmount.EnteredCurrencyAmount)



























					
		NetReconciledDebitAmount is a DerivedField
			type is like InternationalAmount
			default label is "NetDebitAmount"
			if (SummaryRecord)
				if (ReconciliationAccount.LoadingBothSourcesUsingSameSign)
					return (GeneralLedgerDebitAmount - InterfacedTransactionDebitAmount)
				else
					return (GeneralLedgerDebitAmount + InterfacedTransactionDebitAmount)

		NetReconciledCreditAmount is a DerivedField
			type is like InternationalAmount
			default label is "NetCreditAmount"
			if (SummaryRecord)
				if (ReconciliationAccount.LoadingBothSourcesUsingSameSign)
					return (GeneralLedgerCreditAmount - InterfacedTransactionCreditAmount)
				else
					return (GeneralLedgerCreditAmount + InterfacedTransactionCreditAmount)
		
		NetReconciledDifference is a DerivedField
			type is like InternationalAmount
			default label is "ReconciledDifference"
			if (SummaryRecord)
				return (NetReconciledDebitAmount - NetReconciledCreditAmount)
		
		MatchedManuallyMessage is a LabelField
			restricted
			"ManuallyMatched"

		AutoMatchedMessage is a LabelField
			restricted
			"AutoMatched"

		DerivedMatchedMessage is a DerivedField
			type is Alpha 20
			if (ReconMatchNumber entered)
				if (MatchedManually)
					return MatchedManuallyMessage
				else
					return AutoMatchedMessage
		
		BlankField is a DerivedField
			type is Alpha 1
			return blank
		
		DerivedFunctionalCurrency is a DerivedField
			type is like Currency
			if (ReconciliationAccountStructure.ReconciliationType.Account)
				return TransactionAmount.AccountingEntity.FunctionalCurrency
			else
				return NonAccountFunctionalCurrency 

		NumberOfInterfaceTransactionDebits is a DerivedField
			type is Numeric 10
			restricted
			return instance count of DrInterfacedTransactionReconDetailRel

		NumberOfInterfaceTransactionCredits is a DerivedField
			type is Numeric 10
			restricted
			return instance count of CrInterfacedTransactionReconDetailRel

		NumberOfGLTransactionDebits is a DerivedField
			type is Numeric 10
			restricted
			return instance count of DrGeneralLedgerTransactionReconDetailRel

		NumberOfGLTransactionCredits is a DerivedField
			type is Numeric 10
			restricted
			return instance count of CrGeneralLedgerTransactionReconDetailRel

		DisableReconApplyingModificationOptionsToVariablesOnly is a DerivedField
			type is Boolean
			restricted
			return config.DisableReconApplyingModificationOptionsToVariablesOnly
			
	Relations
		LineMatchFieldRel
			one-to-many relation to TransactionReconDetail
			Field Mapping uses ByLineMatchField
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.ReconciliationAccount	  	   = ReconciliationAccount
				related.SummaryRecord				   = false
				related.LineMatchField				   = LineMatchField

		RelatedMatchedTransactionsRel
			one-to-many relation to TransactionReconDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.ReconciliationAccount	  	   = ReconciliationAccount
			Instance Selection
				where (related.ReconMatchNumber	entered
				and    related.ReconMatchNumber	= ReconMatchNumber
				and    related.TransactionReconDetail != TransactionReconDetail)

		MatchingLineMatchFieldRecordsRel
			one-to-many relation to TransactionReconDetail
			Field Mapping uses ByMatchingLineMatchField
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.ReconciliationAccount	  	   = ReconciliationAccount
				related.LineMatchField				   = LineMatchField
			Instance Selection
				where (related.TransactionReconDetail != TransactionReconDetail)

		RenamedSummaryRecordLineMatchFieldRel
			one-to-many relation to TransactionReconDetail
			Field Mapping uses ByMatchingLineMatchField
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.ReconciliationAccount	  	   = ReconciliationAccount
				related.LineMatchField				   = LocalLineMatchField
			Instance Selection
				where (related.SummaryRecord
				and    related.TransactionReconDetail != LocalTransactionReconDetail)
		
		GeneralLedgerCalendarPeriodRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup	= ReconciliationManagementGroup
			Instance Selection
				where (related.Date not < PostingDate)
		
		GeneralLedgerTransactionReconDetailRel
			one-to-many relation to TransactionReconDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.ReconciliationAccount	  	   = ReconciliationAccount
				related.TransactionReconDetail		   = TransactionReconDetail children.TransactionReconDetail			
			Instance Selection
				where (related.ReconTransactionType.GeneralLedger)
		
		DrGeneralLedgerTransactionReconDetailRel
			one-to-many relation using GeneralLedgerTransactionReconDetailRel
			Instance Selection
				where (related.AmountType.Debit)
				
		CrGeneralLedgerTransactionReconDetailRel
			one-to-many relation using GeneralLedgerTransactionReconDetailRel
			Instance Selection
				where (related.AmountType.Credit)
				
		InterfacedTransactionReconDetailRel
			one-to-many relation to TransactionReconDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.ReconciliationAccount	  	   = ReconciliationAccount
				related.TransactionReconDetail		   = TransactionReconDetail children.TransactionReconDetail			
			Instance Selection
				where (related.ReconTransactionType.InterfacedTransaction)
		
		DrInterfacedTransactionReconDetailRel
			one-to-many relation using InterfacedTransactionReconDetailRel
			Instance Selection
				where (related.AmountType.Debit)
				
		CrInterfacedTransactionReconDetailRel
			one-to-many relation using InterfacedTransactionReconDetailRel
			Instance Selection
				where (related.AmountType.Credit)
		
		DetailReconciliationMatchRuleGroupDetailRel
			one-to-many relation to DetailReconciliationMatchRuleGroupDetail
			Field Mapping uses ByPriority
				related.ReconciliationManagementGroup		= ReconciliationManagementGroup
				related.DetailReconciliationMatchRuleGroup	= ReconciliationAccount.DetailReconciliationMatchRuleGroup
		
		LocalNotReconcilingItemTransactionReconDetailRel 
			one-to-many relation to TransactionReconDetail
			Field Mapping uses ByCreateReconcilingItem
				related.ReconciliationManagementGroup  	= LocalReconciliationManagementGroup
				related.ReconciliationAccountStructure 	= LocalReconciliationAccountStructure
				related.ReconciliationAccount	  	   	= LocalReconciliationAccount
				related.CreateReconcilingItem			= false
		
		LocalReconcilingItemTransactionReconDetailRel
			one-to-many relation to TransactionReconDetail
			Field Mapping uses ByCreateReconcilingItem
				related.ReconciliationManagementGroup  	= LocalReconciliationManagementGroup
				related.ReconciliationAccountStructure 	= LocalReconciliationAccountStructure
				related.ReconciliationAccount	  	   	= LocalReconciliationAccount
				related.CreateReconcilingItem			= true
						
		UnreconciledMatchedTransactionRel
			one-to-many relation to TransactionReconDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  	= LocalReconciliationManagementGroup
				related.ReconciliationAccountStructure 	= LocalReconciliationAccountStructure
				related.ReconciliationAccount	  	   	= LocalReconciliationAccount
			Instance Selection
				where (related.SummaryRecord
				and	  !related.ReconMatchNumber entered
				and	   related.TransactionAmount != 0)
		
		PeriodReconcilingItemRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses ByPeriod
				related.ReconciliationManagementGroup	         = ReconciliationManagementGroup  
				related.ReconciliationAccountStructure	         = ReconciliationAccountStructure
				related.ReconciliationAccount			         = ReconciliationAccount
				related.GeneralLedgerCloseConfiguration	         = ReconciliationAccount.CloseConfiguration
				related.DetailPeriod.GeneralLedgerCalendarPeriod = LocalReconciliationPeriod.GeneralLedgerCalendarPeriod
			Instance Selection
				where (related.DetailType.ReconcilingItem
				and	   related.OriginatingTransaction = reference to this instance)
		
		GroupPeriodReconcilingItemRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses ByPeriod
				related.ReconciliationManagementGroup	         = ReconciliationManagementGroup  
				related.ReconciliationAccountStructure	         = ReconciliationAccountStructure
				related.ReconciliationAccount			         = ReconciliationAccount.ParentReconciliationAccount
				related.GeneralLedgerCloseConfiguration	         = ReconciliationAccount.CloseConfiguration
				related.DetailPeriod.GeneralLedgerCalendarPeriod = LocalReconciliationPeriod.GeneralLedgerCalendarPeriod
			Instance Selection
				where (related.DetailType.ReconcilingItem
				and	   related.OriginatingTransaction = reference to this instance)
				
		PeriodEndReconciliationRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByAccountPeriodDescending
				related.ReconciliationManagementGroup													= ReconciliationManagementGroup
				related.ReconciliationAccountStructure													= ReconciliationAccountStructure
				related.PeriodEndReconciliation.ReconciliationAccount									= ReconciliationAccount
				related.PeriodEndReconciliation.GeneralLedgerCloseConfiguration							= ReconciliationAccount.CloseConfiguration
				related.PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	= ReconciliationAccount.CurrentReconciliationPeriod.GeneralLedgerCalendarPeriod
			
		PeriodDistributionRel
			one-to-many relation to PeriodEndDistribution
			Field Mapping uses ByPeriodEndDistribtion
				related.ReconciliationManagementGroup							= ReconciliationManagementGroup
				related.ReconciliationAccountStructure							= ReconciliationAccountStructure
				related.PeriodEndReconciliation.ReconciliationAccount			= ReconciliationAccount
				related.PeriodEndReconciliation.GeneralLedgerCloseConfiguration	= ReconciliationAccount.CloseConfiguration
				related.PeriodEndReconciliation.GeneralLedgerClosePeriod		= LocalReconciliationPeriod 
			Instance Selection
				where (related.TransactionReconDetail = TransactionReconDetail)
		
		EnteredNotReversedPeriodDistributionRel
			one-to-many relation using PeriodDistributionRel
			Instance Selection
				where (related.Status.Entered
				and	   !related.ReversedDistribution)
		
		PostedNotReversedPeriodDistributionRel
			one-to-many relation using PeriodDistributionRel
			Instance Selection
				where ((related.Status.Released
				or	    related.Status.Posted)
				and	   !related.ReversedDistribution)

		ReconciliationGroupOnlyTemplateRel
			one-to-many relation to TransactionReconTemplate
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
			Instance Selection
				where (related.ReconciliationAccount.ReconciliationGroup = ReconciliationAccount.ParentReconciliationAccount.ReconciliationGroup
				and   !related.ReconciliationAccount.ReconciliationCodeBlock entered
				and    related.Active)

		ReconciliationGroupOnlyTemplateSystemCodeEventRel 
			one-to-many relation using ReconciliationGroupOnlyTemplateRel
			Instance Selection
				where (related.GeneralLedgerSystemCode entered
				and    related.GeneralLedgerSystemCode = SystemCode
				and    related.GeneralLedgerEvent entered
				and    related.GeneralLedgerEvent = SourceCode
				and   (!related.ReconTransactionType entered
				or     related.ReconTransactionType = ReconTransactionType))

		ReconciliationGroupOnlyTemplateSystemCodeRel
			one-to-many relation using ReconciliationGroupOnlyTemplateRel
			Instance Selection
				where (related.GeneralLedgerSystemCode entered
				and    related.GeneralLedgerSystemCode = SystemCode
				and    !related.GeneralLedgerEvent entered
				and   (!related.ReconTransactionType entered
				or     related.ReconTransactionType = ReconTransactionType))

		ReconciliationGroupOnlyTemplateEventRel
			one-to-many relation using ReconciliationGroupOnlyTemplateRel
			Instance Selection
				where (!related.GeneralLedgerSystemCode entered
				and     related.GeneralLedgerEvent entered
				and     related.GeneralLedgerEvent = SourceCode
				and   (!related.ReconTransactionType entered
				or     related.ReconTransactionType = ReconTransactionType))

		ReconciliationGroupOnlyTemplateBlankRel
			one-to-many relation using ReconciliationGroupOnlyTemplateRel
			Instance Selection
				where (!related.GeneralLedgerSystemCode entered
				and    !related.GeneralLedgerEvent entered
				and   (!related.ReconTransactionType entered
				or     related.ReconTransactionType = ReconTransactionType))

	Sets
		ByTransactionAmount
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationAccount
				SummaryRecord	descending
				TransactionAmount.FunctionalAmount.EnteredCurrencyAmount
				AmountType
				PostingPeriod
				TransactionReconDetail

 		ByLineMatchField
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationAccount
				SummaryRecord	descending
				LineMatchField
				ReconMatchNumber
				AmountType
				PostingPeriod
				TransactionReconDetail
 
  		ByMatchingLineMatchField
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationAccount
				LineMatchField
				TransactionReconDetail
				
		BySummaryRecordsFirst
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationAccount
				SummaryRecord	descending
				TransactionReconDetail

		ByOriginatingGLTransaction
			duplicates
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationAccount
				OriginatingGLTransaction
		
		ByCreateReconcilingItem
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationAccount
				CreateReconcilingItem
				SummaryRecord	
				TransactionReconDetail
						
    Conditions
		MatchedWithBalance
			restricted
			when (SummaryRecord
			and   NetReconciledDifference != 0)
		
		MatchedWithNoBalance
			restricted
			when (SummaryRecord
			and   NetReconciledDifference = 0)
		
		ReconciliationCanBeUpdated
			restricted
			when (first PeriodEndReconciliationRel.ReconciliationCanBeUpdated)
			
		CanCreateDistribution
			restricted
			when (!CreateDistribution
			and   !CreateReconcilingItem
			and   ReconciliationAccount.LevelType.Account
			and   ReconciliationAccount.CurrentReconciliationPeriod entered
			and  !ReconciliationAccount.ReconciliationCodeBlock.GeneralLedgerChartAccount.SystemAccount.UndistributedRetainedEarnings
			and   ReconciliationCanBeUpdated
			and  (UnmatchedTransaction
			or	  MatchedWithBalance))
				
		CanCreateReconcilingItem
			restricted
			when (!CreateReconcilingItem
			and   !CreateDistribution
			and   ReconciliationAccount.CurrentReconciliationPeriod entered
			and   ReconciliationCanBeUpdated
			and  (UnmatchedTransaction
			or    MatchedWithBalance))
			
		CanBeViewed
			restricted
			when (SummaryRecord
			and   !SelectedForMatch)

		MatchedDetailTransaction
			restricted
			when (!SummaryRecord
			and   !SelectedForMatch
			and   ReconMatchNumber entered)
		
		UnmatchedTransaction
			restricted
			when (!SummaryRecord
			and   !SelectedForMatch
			and   !ReconMatchNumber entered)
				
		CanBeSelectedToReconcile
			restricted
			when (!SelectedForMatch
			and   ReconMatchNumber !entered)
		
		CanBeReconciled
			restricted
			when (SummaryRecord
			and   !Reconciled)

		CanBeUnreconciled
			restricted
			when (SummaryRecord
			and   Reconciled)
		
		CanBeUnmatched
			restricted
			when (SummaryRecord)
		
		IsMatchTypeCompliant
			restricted
			when (DetailReconciliationMatchRule.MatchType = 0
			or   (DetailReconciliationMatchRule.MatchType.OneToOne
			and  (NumberOfMatchedInterfaceLines	= 1
			and   NumberOfMatchedGeneralLedgerLines = 1
			or    NumberOfInterfaceTransactionDebits = 1	 
			and   NumberOfInterfaceTransactionCredits = 1
			or    NumberOfGLTransactionDebits = 1
			and   NumberOfGLTransactionCredits = 1))
			or   (DetailReconciliationMatchRule.MatchType.OneToMany
			and  (NumberOfMatchedInterfaceLines = 1
			and   NumberOfMatchedGeneralLedgerLines > 1
			or    NumberOfInterfaceTransactionDebits = 1
			and   NumberOfInterfaceTransactionCredits > 1
			or    NumberOfGLTransactionDebits = 1
			and   NumberOfGLTransactionCredits > 1))
			or   (DetailReconciliationMatchRule.MatchType.ManyToOne
			and  (NumberOfMatchedInterfaceLines > 1
			and   NumberOfMatchedGeneralLedgerLines = 1
			or    NumberOfInterfaceTransactionDebits > 1
			and   NumberOfInterfaceTransactionCredits = 1
			or    NumberOfGLTransactionDebits > 1
			and   NumberOfGLTransactionCredits = 1))
			or   (DetailReconciliationMatchRule.MatchType.ManyToMany
			and  (NumberOfMatchedInterfaceLines > 1
			and   NumberOfMatchedGeneralLedgerLines > 1
			or    NumberOfInterfaceTransactionDebits > 1
			and   NumberOfInterfaceTransactionCredits > 1
			or    NumberOfGLTransactionDebits > 1
			and   NumberOfGLTransactionCredits > 1)))
			
		ShowMatchTypeAlert
			restricted
			when (SummaryRecord
			and   DetailReconciliationMatchRule entered
			and	  !IsMatchTypeCompliant)
		
		HasAccountingInformation
    		restricted
    		when (DistributionAccount entered
			or	  CashAllocationCode entered)
		
		DisplayDetailReconciliationMatchRuleLink
			restricted
			when (ReconciliationAccount.DetailReconciliationMethod.UseDetailReconciliationMatchRules
			and	  DetailReconciliationMatchRule entered)
		
	Field Rules
		PostingPeriod
			default to first GeneralLedgerCalendarPeriodRel.GeneralLedgerCalendarPeriod
		
		CurrencyTable
			default to ReconciliationManagementGroup.FinanceEnterpriseGroup.CurrencyTable
		
		Currency
			default to ReconciliationAccount.ReconciliationCodeBlock.AccountingEntity.FunctionalCurrency
				
		SignedAmount
			if (SummaryRecord)
				cannot be changed

		ReconcilingAmount 
			if (ReconTransactionType.GeneralLedger)
				ReconcilingAmount = SignedAmount
			else
				ReconcilingAmount.ExchangeDate = SignedAmount.ExchangeDate
				ReconcilingAmount.CurrencyAmount = (SignedAmount.CurrencyAmount * -1)
				ReconcilingAmount.FunctionalAmount = (SignedAmount.FunctionalAmount * -1)
				ReconcilingAmount.AlternateAmount = (SignedAmount.AlternateAmount * -1)
				ReconcilingAmount.AlternateAmount2 = (SignedAmount.AlternateAmount2 * -1)
				ReconcilingAmount.AlternateAmount3 = (SignedAmount.AlternateAmount3 * -1)
				ReconcilingAmount.ProjectAmount = (SignedAmount.ProjectAmount * -1)
				ReconcilingAmount.ReportAmount1 = (SignedAmount.ReportAmount1 * -1)
				ReconcilingAmount.ReportAmount2 = (SignedAmount.ReportAmount2 * -1)
				ReconcilingAmount.ReportAmount3 = (SignedAmount.ReportAmount3 * -1)
				ReconcilingAmount.ReportAmount4 = (SignedAmount.ReportAmount4 * -1)
				ReconcilingAmount.ReportAmount5 = (SignedAmount.ReportAmount5 * -1)

		DistributionAccount
			if (ReconciliationManagementGroup.FinanceEnterpriseGroup exists
			and !DistributionAccount.ToAccountingEntity entered)
				initialize DistributionAccount.Ledger
				
		DetailReconciliationCurrency
			default to ReconciliationAccount.DetailReconciliationCurrency
		
		DetailReconciliationSign
			default to ReconciliationAccount.DetailReconciliationSign
				
  	Actions
		SwitchToCombinedListView is an Instance Action
			valid when (ReconciliationAccount.ListOverListManualReconView)
			Action Rules
				invoke SwitchReconciliationListView ReconciliationAccount
					invoked.UseCombinedListView	= true

		SwitchToListOverListView is an Instance Action
			valid when (!ReconciliationAccount.ListOverListManualReconView)
			Action Rules
				invoke SwitchReconciliationListView ReconciliationAccount
					invoked.UseListOverListView	= true
					
		SelectTransaction is an Instance Action
			valid when (CanBeSelectedToReconcile)
			
			Local Fields
				LocalReconMatchNumber is a TransactionReconDetail view 
				
			Action Rules
				if (SummaryRecord)
					if (ReconciliationAccount.CurrentReconMatchNumber entered)
						invoke MatchSelectedTransactions
					invoke FastUpdate TransactionReconDetail descendants
						invoked.SelectedForMatch = true
						invoked.MatchedDate		 = current timestamp
						invoked.MatchedActor	 = actor
						invoked.MatchedManually	 = true
					invoke UpdateCurrentReconMatchNumber ReconciliationAccount
						invoked.PrmReconMatchNumber	= TransactionReconDetail
				else					
					if (ReconciliationAccount.CurrentReconMatchNumber entered)
						ReconMatchNumber = ReconciliationAccount.CurrentReconMatchNumber
					else
						invoke Create TransactionReconDetail
							assign result to LocalReconMatchNumber
							fill in fields from this instance 
							initialize invoked.TransactionReconDetail
							invoked.SelectedForMatch	= true
							invoked.SummaryRecord		= true
							invoked.Description			= "Summary"
							invoked.MatchedDate			= current timestamp
							invoked.MatchedActor		= actor
							invoked.MatchedManually		= true
							initialize invoked.TransactionNumber
							initialize invoked.TransactionDate
							initialize invoked.PostingDate
							initialize invoked.SignedAmount
							initialize invoked.SystemCode
							initialize invoked.SourceCode
							
						ReconMatchNumber = LocalReconMatchNumber.TransactionReconDetail		
						invoke UpdateCurrentReconMatchNumber ReconciliationAccount
							invoked.PrmReconMatchNumber	= ReconMatchNumber
				SelectedForMatch = true
				
			Exit Rules
				invoke UpdateSummaryRecord ReconciliationAccount.CurrentReconMatchNumber
					invoked.PrmUpdateTotals	= true
					
		UnselectTransaction is an Instance Action
			valid when (SelectedForMatch)
			Action Rules
				initialize ReconMatchNumber
				SelectedForMatch = false
				if (!SummaryRecord)
					invoke FastUpdate
						initialize invoked.MatchedDate
						initialize invoked.MatchedActor
						initialize invoked.MatchedManually
						
			Exit Rules
				if (!SummaryRecord)
					invoke UpdateSummaryRecord ReconciliationAccount.CurrentReconMatchNumber
						invoked.PrmUpdateTotals	= true
						
					if (!ReconciliationAccount.CurrentReconMatchNumber descendants exist)
						invoke Delete ReconciliationAccount.CurrentReconMatchNumber
						invoke Update ReconciliationAccount
							initialize invoked.CurrentReconMatchNumber

		UpdateSummaryRecord is an Instance Action
			restricted
			Parameters
				PrmUpdateTotals							is Boolean
				PrmNumberOfMatchedInterfaceLines		is Numeric 6
				PrmNumberOfMatchedGeneralLedgerLines	is Numeric 6
					default label is "PrmNumberOfMatchedGlobalLedgerLines"
				PrmCreateDistribution					is Boolean
				PrmReconciled							is Boolean
				PrmDistributionAccount					is a FinanceCodeBlockFull
				PrmCashAllocationCode					is a CashAllocationCode
											
			Action Rules
				if (PrmNumberOfMatchedInterfaceLines entered)
					NumberOfMatchedInterfaceLines = PrmNumberOfMatchedInterfaceLines
					
				if (PrmNumberOfMatchedGeneralLedgerLines entered)
					NumberOfMatchedGeneralLedgerLines = PrmNumberOfMatchedGeneralLedgerLines
				
				if (PrmDistributionAccount entered)
					DistributionAccount = PrmDistributionAccount
					
				if (PrmCashAllocationCode entered)
					CashAllocationCode = PrmCashAllocationCode
					
				if (PrmCreateDistribution)
					CreateDistribution = PrmCreateDistribution
					LocalReconciliationPeriod = ReconciliationAccount.CurrentReconciliationPeriod
					if (!EnteredNotReversedPeriodDistributionRel exists)
						include CreatePeriodDistributions
					
				if (PrmReconciled)
					Reconciled = PrmReconciled
					if (SummaryRecord entered)
						for each TransactionReconDetail descendants
							invoke FastUpdate each
								invoked.Reconciled = PrmReconciled
						



























































						
		MatchSelectedTransactions is an Instance Action
			default label is "SaveAndStartNewMatch"
			valid when (ReconciliationAccount.HasCurrentMatchRecords)
			Parameters
				PrmLineMatchField is Alpha 200
				
			Parameter Rules
				PrmLineMatchField
					initial value is ReconciliationAccount.CurrentReconMatchNumber.LineMatchField
					default to ReconciliationAccount.CurrentReconMatchNumber.LineMatchField
				
			Action Rules
				if (ReconciliationAccount.CurrentReconMatchNumber entered)
					LocalTransactionReconDetail	= ReconciliationAccount.CurrentReconMatchNumber
					LocalLineMatchField	= PrmLineMatchField
					constraint (!RenamedSummaryRecordLineMatchFieldRel exist)
						"RecordsAreAlreadyMatchedToExistingMatchField:<PrmLineMatchField>"
					invoke MatchSelectedTransactions ReconciliationAccount
						invoked.PrmLineMatchField = PrmLineMatchField

		UpdateSelectedTransactions is an Instance Action
			restricted
			Parameters
				PrmLineMatchField is Alpha 200
				
			Action Rules
				LineMatchField = PrmLineMatchField
				SelectedForMatch = false

		MatchRecords is a Set Action
			restricted
			completion message is "ReconciliationHasBeenSubmittedToTheQueueForProcessing"
			Parameters
				PrmReconciliationManagementGroup	is a ReconciliationManagementGroup
				PrmReconciliationAccountStructure	is a ReconciliationAccountStructure
				PrmReconciliationAccount			is a ReconciliationAccount
						
			Local Fields
				LocalReconMatchNumber				is a TransactionReconDetail view
				LocalReconciliationNumber			is a TransactionReconDetail
				LocalCreateDistribution				is Boolean
				
			Instance Selection
				where (ReconciliationManagementGroup = PrmReconciliationManagementGroup
				and	   ReconciliationAccountStructure = PrmReconciliationAccountStructure
				and	   ReconciliationAccount = PrmReconciliationAccount
				and    LineMatchField entered
				and    ReconMatchNumber !entered
				and    !SummaryRecord)
			
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationAccount
				LineMatchField

			Accumulators
				NumberOfInterfaceLines
				NumberOfGeneralLedgerLines
				
			Action Rules
				LineMatchField Set Rules
					Entrance Rules
						initialize LocalReconciliationNumber
						initialize LocalCreateDistribution
						
					Exit Rules
						if (LocalReconciliationNumber.NetReconciledDifference = 0)
							invoke ReconcileTransaction LocalReconciliationNumber
						else
						if (DetailReconciliationMatchRule.HasToleranceDefined
						and !ReconciliationCodeBlock.GeneralLedgerChartAccount.SystemAccount.UndistributedRetainedEarnings)
							if (LocalReconciliationNumber.NetReconciledDifference <= DetailReconciliationMatchRule.ReconciliationToleranceAmount
							and	LocalReconciliationNumber.NetReconciledDifference >= DetailReconciliationMatchRule.ReconciliationToleranceAmount * -1)
								if (ReconciliationAccountStructure.ReconciliationType.Account)
									LocalCreateDistribution = true
								else
									invoke ReconcileTransaction LocalReconciliationNumber
						
						invoke UpdateSummaryRecord LocalReconciliationNumber
							invoked.PrmUpdateTotals							= true
							invoked.PrmNumberOfMatchedInterfaceLines 		= NumberOfInterfaceLines
							invoked.PrmNumberOfMatchedGeneralLedgerLines	= NumberOfGeneralLedgerLines
							if (LocalCreateDistribution)
								invoked.PrmCreateDistribution				= true
								invoked.PrmReconciled						= true
								invoked.PrmDistributionAccount				= DetailReconciliationMatchRule.ReconciliationToleranceAccount
								invoked.PrmCashAllocationCode				= DetailReconciliationMatchRule.ReconciliationToleranceAllocation
									
				Instance Rules
					if (LocalReconciliationNumber entered)
						ReconMatchNumber = LocalReconciliationNumber
					else
						if (last LineMatchFieldRel.ReconMatchNumber entered)
							LocalReconciliationNumber = last LineMatchFieldRel.ReconMatchNumber
						else
							if (MatchingLineMatchFieldRecordsRel exists)
								invoke Create TransactionReconDetail
									assign result to LocalReconMatchNumber
									fill in fields from this instance 
									initialize invoked.TransactionReconDetail
									invoked.SummaryRecord	= true
									invoked.Description		= "Summary"
									invoked.MatchedDate		= current timestamp
									invoked.MatchedActor	= actor
									initialize invoked.TransactionNumber
									initialize invoked.ReconciliationInterface
									initialize invoked.TransactionDate
									initialize invoked.PostingDate
									initialize invoked.SignedAmount
									initialize invoked.SystemCode
									initialize invoked.SourceCode
								
								LocalReconciliationNumber = LocalReconMatchNumber.TransactionReconDetail
						ReconMatchNumber = LocalReconciliationNumber
					
					if (ReconTransactionType.InterfacedTransaction)
						NumberOfInterfaceLines += 1
					else
						NumberOfGeneralLedgerLines += 1
							
					MatchedDate	= current timestamp
					MatchedActor = actor
				
		ReconcileTransaction is an Instance Action
			valid when (CanBeReconciled)
			Action Rules
				if (ReconciliationAccountStructure.ReconciliationType.Account
				and NetReconciledDifference != 0)
					confirmation required
						"MatchedTransactionsDoNotNetToZero;WouldYouLikeToContinue?"
							
				for each TransactionReconDetail descendants
					invoke Reconcile each
					



						
					invoke ReconcileInterfacedTransaction each.ReconciliationInterface
						invoked.PrmReconciled = true
						invoked.PrmReconcilingAmount = each.SignedAmount
						invoked.PrmReconcilingAmount.KeepRateAndAmount = true
							
				Reconciled = true
				ReconcilingAmount = SignedAmount
				
		Reconcile is an Instance Action
			restricted
			Action Rules
				Reconciled = true
				ReconcilingAmount = SignedAmount
				
		UnreconcileTransaction is an Instance Action
			valid when (CanBeUnreconciled)
			Action Rules
				for each TransactionReconDetail descendants
					invoke Unreconcile each
					



						
					invoke ReconcileInterfacedTransaction each.ReconciliationInterface
						invoked.PrmReconciled = false
						invoked.PrmReconcilingAmount = 0
							
				Reconciled = false
				initialize ReconcilingAmount
				 
		Unreconcile is an Instance Action
			restricted
			Action Rules
				Reconciled = false
				initialize ReconcilingAmount
							
		UnmatchTransaction is an Instance Action
 			valid when (CanBeUnmatched)
 			Action Rules
 				constraint (!CreateDistribution)
					"MustRemoveDistributionToUnmatchTransaction"
				
				constraint (!CreateReconcilingItem)
					"MustRemoveReconcilingItemToUnmatchTransaction"
					
				if (Reconciled)
 					invoke UnreconcileTransaction
 					
				for each TransactionReconDetail descendants
					invoke FastUpdate each
						initialize invoked.ReconMatchNumber
						initialize invoked.MatchedDate
						initialize invoked.MatchedActor
						initialize invoked.MatchedManually
						
			Exit Rules
				invoke Purge 
		
		UnmatchTransactionAndAdjustment is an Instance Action
 			restricted
 			Action Rules
 				if (CreateDistribution)
					invoke RemoveDistribution
				
				if (CreateReconcilingItem)
					invoke RemoveReconcilingItem
					
				if (Reconciled)
 					invoke UnreconcileTransaction
 					
				for each TransactionReconDetail descendants
					invoke FastUpdate each
						initialize invoked.ReconMatchNumber
						initialize invoked.MatchedDate
						initialize invoked.MatchedActor
						initialize invoked.MatchedManually
						
			Exit Rules
				invoke Purge 
															
		DeleteGLTransactions is a Set Action
			restricted
			Parameters
				PrmReconciliationManagementGroup	is a ReconciliationManagementGroup
				PrmReconciliationAccountStructure	is a ReconciliationAccountStructure
				PrmReconciliationAccount			is a ReconciliationAccount
				
			Parameter Rules
				PrmReconciliationManagementGroup	required
				PrmReconciliationAccountStructure	required
				PrmReconciliationAccount			required
				
			Instance Selection
				where (ReconciliationManagementGroup = PrmReconciliationManagementGroup
				and    ReconciliationAccountStructure = PrmReconciliationAccountStructure
				and	   ReconciliationAccount = PrmReconciliationAccount
				and    ReconTransactionType.GeneralLedger
				and    ReconMatchNumber !entered
				and    !SelectedForMatch
				and    !SummaryRecord
				and    !CreateDistribution
				and    !CreateReconcilingItem)
			
			Action Rules
				Set Rules
					Exit Rules
						invoke ResetCurrentReconciliationPeriod
							invoked.PrmReconciliationManagementGroup	= PrmReconciliationManagementGroup
							invoked.PrmReconciliationAccountStructure	= PrmReconciliationAccountStructure
							invoked.PrmReconciliationAccount			= PrmReconciliationAccount
							
				Instance Rules
					invoke Purge 

		DeleteInterfaceTransactions is a Set Action
			restricted
			Parameters
				PrmReconciliationManagementGroup		is a ReconciliationManagementGroup
				PrmReconciliationAccountStructure		is a ReconciliationAccountStructure
				PrmReconciliationAccount				is a ReconciliationAccount
				
			Parameter Rules
				PrmReconciliationManagementGroup	required
				PrmReconciliationAccountStructure	required
				PrmReconciliationAccount			required
				
			Instance Selection
				where (ReconciliationManagementGroup = PrmReconciliationManagementGroup
				and    ReconciliationAccountStructure = PrmReconciliationAccountStructure
				and	   ReconciliationAccount = PrmReconciliationAccount
				and    ReconTransactionType.InterfacedTransaction
				and    ReconMatchNumber !entered
				and    !SelectedForMatch
				and    !SummaryRecord
				and    !CreateDistribution
				and    !CreateReconcilingItem)
			
			Action Rules
				Set Rules
					Exit Rules
						invoke ResetCurrentReconciliationPeriod
							invoked.PrmReconciliationManagementGroup	= PrmReconciliationManagementGroup
							invoked.PrmReconciliationAccountStructure	= PrmReconciliationAccountStructure
							invoked.PrmReconciliationAccount			= PrmReconciliationAccount
							
				Instance Rules
					invoke FastUpdate ReconciliationInterface
						invoked.LoadedIntoReconciliation = false
					
					invoke Purge
		
		ResetCurrentReconciliationPeriod is a Set Action
			restricted
			Parameters
				PrmReconciliationManagementGroup	is a ReconciliationManagementGroup
				PrmReconciliationAccountStructure	is a ReconciliationAccountStructure
				PrmReconciliationAccount			is a ReconciliationAccount
				
			Parameter Rules
				PrmReconciliationManagementGroup	required
				PrmReconciliationAccountStructure	required
				PrmReconciliationAccount			required
				
			Instance Selection
				where (ReconciliationManagementGroup = PrmReconciliationManagementGroup
				and    ReconciliationAccountStructure = PrmReconciliationAccountStructure
				and	   ReconciliationAccount = PrmReconciliationAccount
				and    ReconMatchNumber !entered
				and    !SelectedForMatch
				and    !SummaryRecord
				and   (CreateDistribution
				or     CreateReconcilingItem))
							
			Action Rules
				Empty Set Rules
					if (!PrmReconciliationAccount.HasTransactionReconDetails)
						invoke FastUpdate PrmReconciliationAccount
							initialize invoked.CurrentReconciliationPeriod
			
  		ProcessMatchRulesForBlankLineMatchField is a Set Action
  			restricted
  			Parameters
				PrmReconciliationManagementGroup	is a ReconciliationManagementGroup
				PrmReconciliationAccountStructure	is a ReconciliationAccountStructure
				PrmReconciliationAccount			is a ReconciliationAccount
						
			Local Fields
				LocalReconMatchNumber				is a TransactionReconDetail view
				LocalReconciliationNumber			is a TransactionReconDetail
				
			Instance Selection
				where (ReconciliationManagementGroup = PrmReconciliationManagementGroup
				and	   ReconciliationAccountStructure = PrmReconciliationAccountStructure
				and	   ReconciliationAccount = PrmReconciliationAccount
				and    !SummaryRecord
				and    LineMatchField !entered
				and    ReconMatchNumber !entered)
			
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationAccount
				SummaryRecord
				LineMatchField
				ReconMatchNumber
				
			Action Rules
				Instance Rules
					include DetermineLineMatchField
		
		CreateDistribution is an Instance Action
			valid when (CanCreateDistribution)
			Parameters
				PrmDistributionAccount	is a FinanceCodeBlock 
					default label is "DistributionAccount"
				PrmCashAllocationCode	is a CashAllocationCode
					default label is "AllocationCode"
				PrmDescription			is a Description
					default label is "Description"
				PrmComment				is Text
					default label is "Comment"
						
			Parameter Rules
				PrmDistributionAccount
					initial value is DistributionAccount
					
					if (!PrmCashAllocationCode entered)
						required
							"AccountingInformationOrAnAllocationCodeIsRequired"
					else
						cannot be entered
							"CanEnterEitherAccountingInformationOrAnAllocationCode"
						
				PrmCashAllocationCode
					if (!PrmDistributionAccount entered)
						required
							"AccountingInformationOrAnAllocationCodeIsRequired"
					else
						cannot be entered
							"CanEnterEitherAccountingInformationOrAnAllocationCode"
				
					constraint (!PrmCashAllocationCode.AllocationType.AccountOnly)
						"AllocationCodeMustBePercentOrAmountType"
				
				PrmDescription
					initial value is "Reconciliation Difference"
					default to "Reconciliation Difference"
					
			Action Rules
				constraint (!ReconciliationCodeBlock.GeneralLedgerChartAccount.SystemAccount.UndistributedRetainedEarnings) 
					"CannotCreateDistribution;OffsetCannotPostTo<ReconciliationCodeBlock.GeneralLedgerChartAccount.SystemAccount>_<ReconciliationManagementGroup.FinanceEnterpriseGroup.AccountLabel>"
				if (PrmCashAllocationCode.AllocationType.Amount)
					constraint (DerivedTransactionAmount = PrmCashAllocationCode.ControlTotal)
						"AmountMustEqualControlTotalOf<PrmCashAllocationCode.ControlTotal>ForAmountTypeAllocationCodes"
				DistributionAccount = PrmDistributionAccount
				CashAllocationCode = PrmCashAllocationCode
				ReconcilingDescription = PrmDescription
				ReconcilingComment = PrmComment
				CreateDistribution = true
				Reconciled = true
				if (SummaryRecord entered)
					for each TransactionReconDetail descendants
						invoke FastUpdate each
							invoked.Reconciled = true
							
				LocalReconciliationPeriod = ReconciliationAccount.CurrentReconciliationPeriod
				if (CreateDistribution
				and !EnteredNotReversedPeriodDistributionRel exists)
					include CreatePeriodDistributions
				
		UpdateDistribution is an Instance Action
			valid when (CreateDistribution)
			Parameters
				PrmDistributionAccount	is a FinanceCodeBlock 
					default label is "DistributionAccount"
				PrmCashAllocationCode	is a CashAllocationCode
					default label is "AllocationCode"
				PrmDescription			is a Description
					default label is "Description"
				PrmComment				is Text
					default label is "Comment"
						
			Parameter Rules
				PrmDistributionAccount
					initial value is DistributionAccount
					
					if (ReconciliationManagementGroup.FinanceEnterpriseGroup exists
					and !PrmDistributionAccount.ToAccountingEntity entered)
						initialize PrmDistributionAccount.Ledger
				
					if (!PrmCashAllocationCode entered)
						required
							"AccountingInformationOrAnAllocationCodeIsRequired"
					else
						cannot be entered
							"CanEnterEitherAccountingInformationOrAnAllocationCode"
						
				PrmCashAllocationCode
					initial value is CashAllocationCode
					
					if (!PrmDistributionAccount entered)
						required
							"AccountingInformationOrAnAllocationCodeIsRequired"
					else
						cannot be entered
							"CanEnterEitherAccountingInformationOrAnAllocationCode"
				
					constraint (!PrmCashAllocationCode.AllocationType.AccountOnly)
						"AllocationCodeMustBePercentOrAmountType"
						
				PrmDescription
					initial value is ReconcilingDescription
					default to "Reconciliation Difference"
				
				PrmComment
					initial value is ReconcilingComment
					
			Action Rules
				LocalCloseConfiguration = ReconciliationAccount.CloseConfiguration
				LocalReconciliationPeriod = ReconciliationAccount.CurrentReconciliationPeriod
				constraint (all PeriodDistributionRel.Status.Entered)
					"DistributionsMustBeInAnEnteredStatusToUpdate"
					
				if (PrmCashAllocationCode.AllocationType.Amount)
					constraint (DerivedTransactionAmount = PrmCashAllocationCode.ControlTotal)
						"AmountMustEqualControlTotalOf<PrmCashAllocationCode.ControlTotal>ForAmountTypeAllocationCodes"
				
				if (PrmDistributionAccount != DistributionAccount
				or  PrmCashAllocationCode != CashAllocationCode)
					DistributionAccount = PrmDistributionAccount
					CashAllocationCode = PrmCashAllocationCode
								
					invoke DeleteFromDetailReconciliation EnteredNotReversedPeriodDistributionRel
					include CreatePeriodDistributions 
				
				if (PrmDescription != ReconcilingDescription
				or	PrmComment != ReconcilingComment)
					ReconcilingDescription = PrmDescription
					ReconcilingComment = PrmComment
					
					invoke UpdateFromDetailReconciliation Entered PeriodDistributionRel
						invoked.Description = ReconcilingDescription
						invoked.Comment = ReconcilingComment
							
		RemoveDistribution is an Instance Action
			valid when (CreateDistribution)
			Action Rules
				LocalReconciliationPeriod = ReconciliationAccount.CurrentReconciliationPeriod
				if (PeriodDistributionRel exists)
					constraint (!all PeriodDistributionRel.Status.PendingApproval)
						"CannotRemoveDistributionWhenTheDistributionIsInAPendingApprovalStatus"
					
					if (last PeriodDistributionRel.Status.Entered)	
						invoke DeleteFromDetailReconciliation EnteredNotReversedPeriodDistributionRel
					else
						include CreateReversalDistributions 
				
				initialize DistributionAccount
				initialize CashAllocationCode
				initialize ReconcilingDescription
				initialize ReconcilingComment
				CreateDistribution = false
				Reconciled = false
				if (SummaryRecord entered)
					for each TransactionReconDetail descendants
						invoke FastUpdate each
							invoked.Reconciled = false
							
		CreateReconcilingItem is an Instance Action
			valid when (CanCreateReconcilingItem)
			Parameters
				PrmDescription			is a Description
					default label is "Description"
				PrmReconciliationReason	is a ReconciliationReason
					default label is "ReasonCode"
			
			Parameter Rules
				PrmDescription
					initial value is "Detail Reconciliation Reconciling Item"
					default to "Detail Reconciliation Reconciling Item"
					
				PrmReconciliationReason
					if(ReconciliationManagementGroup.ReconcilingItemReasonCodeRequired)
						required	
			
			Action Rules
				ReconcilingDescription = PrmDescription
				CreateReconcilingItem = true
				invoke FastUpdate TransactionReconDetail children.TransactionReconDetail
					invoked.CreateReconcilingItem = true
				
				LocalCloseConfiguration = ReconciliationAccount.CloseConfiguration	
				LocalReconciliationPeriod = ReconciliationAccount.CurrentReconciliationPeriod
				if (CreateReconcilingItem
				and !ReconMatchNumber entered
				and !PeriodReconcilingItemRel exists)
					include CreateReconcilingItems	
					
		RemoveReconcilingItem is an Instance Action
			valid when (CreateReconcilingItem)
			Action Rules
				initialize ReconcilingDescription
				CreateReconcilingItem = false
				invoke FastUpdate TransactionReconDetail children.TransactionReconDetail
					invoked.CreateReconcilingItem = false
				
				LocalReconciliationPeriod = ReconciliationAccount.CurrentReconciliationPeriod
				if (ReconciliationAccount.IsAccountWithinConsolidatedGroup)
					initialize LocalTransactionAmount
					if (UnmatchedTransaction)
						if (ReconTransactionType.InterfacedTransaction)
							if (AmountType.Debit)
								LocalTransactionAmount = TransactionAmount.FunctionalAmount.EnteredCurrencyAmount
							else
								LocalTransactionAmount = TransactionAmount.FunctionalAmount.EnteredCurrencyAmount * -1
						else
							if (AmountType.Debit)
								LocalTransactionAmount = TransactionAmount.FunctionalAmount.EnteredCurrencyAmount * -1
							else
								LocalTransactionAmount = TransactionAmount.FunctionalAmount.EnteredCurrencyAmount
					else
						LocalTransactionAmount = NetReconciledDifference * -1
				
					invoke DeleteFromDetailReconciliation GroupPeriodReconcilingItemRel
				else
				if (PeriodReconcilingItemRel exists)
					invoke DeleteFromDetailReconciliation PeriodReconcilingItemRel
											
		SaveDetailTransactionReconciliation is a Set Action
  			restricted
  			Parameters
				PrmReconciliationManagementGroup	is a ReconciliationManagementGroup
				PrmReconciliationAccountStructure	is a ReconciliationAccountStructure
				PrmReconciliationAccount			is a ReconciliationAccount
				PrmGeneralLedgerCloseConfiguration	is a GeneralLedgerCloseConfiguration
				PrmGeneralLedgerClosePeriod			is a GeneralLedgerClosePeriod
						
			Instance Selection
				where (ReconciliationManagementGroup = PrmReconciliationManagementGroup
				and	   ReconciliationAccountStructure = PrmReconciliationAccountStructure
				and	   ReconciliationAccount = PrmReconciliationAccount)
			
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationAccount
				SummaryRecord	descending
				TransactionReconDetail
			
			Action Rules
				Set Rules
					Exit Rules
						LocalCloseConfiguration = PrmGeneralLedgerCloseConfiguration
						LocalReconciliationManagementGroup = PrmReconciliationManagementGroup
						LocalReconciliationAccountStructure = PrmReconciliationAccountStructure
						LocalReconciliationAccount = PrmReconciliationAccount
						
						invoke PurgeTransactions LocalNotReconcilingItemTransactionReconDetailRel	
						
						invoke FastUpdate LocalReconcilingItemTransactionReconDetailRel				
							initialize invoked.CreateReconcilingItem
							
				Instance Rules
					invoke Create PeriodEndTransReconDetail
						fill in fields from this instance
						invoked.ReconciliationManagementGroup	= PrmReconciliationManagementGroup
						invoked.ReconciliationAccountStructure	= PrmReconciliationAccountStructure
						invoked.ReconciliationAccount			= PrmReconciliationAccount
						invoked.GeneralLedgerCloseConfiguration	= PrmGeneralLedgerCloseConfiguration
						invoked.GeneralLedgerClosePeriod 		= PrmGeneralLedgerClosePeriod
						invoked.ReconMatchNumber				= ReconMatchNumber
						invoked.PeriodEndTransReconDetail		= TransactionReconDetail
						invoked.LineMatchField					= LineMatchField
						if (CreateReconcilingItem)
							invoked.OriginatingTransaction		= reference to this instance
		
  		Create is a Create Action
  			restricted
  			Exit Rules
  				include DetermineLineMatchField
  							
  		Update is an Update Action
			Exit Rules
				include DetermineLineMatchField
  		
  		FastUpdate is an Update Action
			restricted
			bypass field rules
					
  		Delete is a Delete Action
  		
  		Purge is a Purge Action
  			restricted
  		
  		PurgeTransactions is an Instance Action
  			restricted
  			Entrance Rules
  				if (!SummaryRecord
  				and	ReconTransactionType.InterfacedTransaction)
  					invoke Purge ReconciliationInterface
  				
  			Action Rules
  				invoke Purge
  				
		UpdateDetailsWithUpdatedTemplate is a Set Action	
			restricted
			Parameters
				PrmReconciliationManagementGroup		is a ReconciliationManagementGroup
				PrmReconciliationAccountStructure		is a ReconciliationAccountStructure
				PrmReconciliationAccount				is a ReconciliationAccount
					
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationAccount

			Instance Selection
				where (ReconciliationManagementGroup	= PrmReconciliationManagementGroup
				and    ReconciliationAccountStructure	= PrmReconciliationAccountStructure
				and    ReconciliationAccount			= PrmReconciliationAccount)
			
			Action Rules
				Instance Rules
					invoke Update
						initialize invoked.TransientLineMatchField
						initialize invoked.LineMatchField
						
						  				
