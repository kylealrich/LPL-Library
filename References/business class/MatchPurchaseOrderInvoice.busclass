MatchPurchaseOrderInvoice is a BusinessClass
    owned by ma
    prefix is AOI
    classic name is MAPOINV

    Ontology
        symbolic key is MatchPurchaseOrderInvoice
            classic set name is AOISET1

    Patterns
        implements StaticJava
        disable AuditIndex
        implements Archivable

    Persistent Fields
        TaxCode
        Location             is an InventoryLocation
        InvoiceType			 is a PayablesInvoiceType

	Field Rules
		TaxCode
			default to PayablesInvoice.TaxCode
			
		Location
			default to PayablesInvoice.Location
			
		InvoiceType
			default to PayablesInvoice.InvoiceType
			
	Transient Fields
		BypassStructureRelationEdit  
        OriginalInvoice		 				is a PayablesInvoice
        	derive value from DerivedOriginalInvoice
		
	Local Fields
		LocalCompletionMessage				is Alpha 100
		LocalLineCount						is Numeric 9
		LocalAOCFlag						is Alpha 1
		HasServicePO 						is Boolean
		HasDropshipPO 						is Boolean
		IsReceiptMatch						is Boolean
		CreateFromBatchSwitch			    is Boolean
		NextSentence						is Boolean
		LocalReceipt						is a PurchaseOrderReceipt

		LocalMatchDetailKey					is like MatchDetailKey
	Context Fields
		GeneralLedgerCompanyGroup
	
	Derived Fields
		AOCSomeNotApprovedMessage is a MessageField
			restricted
			"Warning;SomeAOCDetailsNotApproved;PurchaseOrderAOCVendorDifferent"
		AOCNotApprovedMessage is a MessageField
			restricted
			"Warning;AOCDetailsNotApproved;PurchaseOrderAOCVendorDifferent"
		CreateDetailCompleteMessage is a MessageField
			restricted
			"CreateDetailComplete."
		LinesAddedMessage is a MessageField
			restricted
			"LinesAdded"
		LinesNotCreated is a MessageField
			restricted
			"NoLinesAdded"

		InvoiceDetailsFromPOLinesMsg is a MessageField
			restricted
			"Invoice_Details_From_Purchase_Order_Lines"

		InvoiceDetailsFromReceiptLinesMsg is a MessageField
			restricted
			"Invoice_Details_From_Receipt_Lines"

		DerivedOrderAmount is a DerivedField
			type is like InternationalAmount
			return PurchaseOrder.CalculateTotalAmount

		DerivedInvoiceDetailsFromPOPanelTitle is a DerivedField
			type is Alpha size up to 200
			restricted
			if (DetailsCreatedFromPO)
				return InvoiceDetailsFromPOLinesMsg + "*"
			else
				return InvoiceDetailsFromPOLinesMsg

		DerivedInvoiceDetailsFromReceiptPanelTitle is a DerivedField
			type is Alpha size up to 200
			restricted
			if (DetailsCreatedFromReceipt)
				return InvoiceDetailsFromReceiptLinesMsg + "*"
			else
				return InvoiceDetailsFromReceiptLinesMsg







				
		DerivedDetailAOCCountThisPO is a DerivedField
			type is Alpha size up to 20
			restricted
			if (ThisPayablesInvoiceLineAddOnChargeForPORel exists)
				return "(" + instance count of ThisPayablesInvoiceLineAddOnChargeForPORel + ")"
			else
				return ""

		DerivedDetailAOCIndicator is a DerivedField
			type is Alpha 1
			restricted
			if (ThisPayablesInvoiceLineAddOnChargeForPORel exists)
				return "*"
			else
				return ""

		DerivedOriginalInvoice is a DerivedField
			type is like PayablesInvoice
			restricted
			return first MatchInvoiceReferenceRel.PayablesInvoice

		NumberOfLinesForSetActionConfig		is a DerivedField
			type is Numeric 9
			return config.match_invoice_number_of_lines_set_action	        

		NumberOfLinesForSetAction		is a DerivedField
			type is Numeric 9
			if (NumberOfLinesForSetActionConfig not entered)
				return 20
			else
				return NumberOfLinesForSetActionConfig

		DerivedPoolOption is a DerivedField
			type is like PoolOption
			if (!Vendor.PoolOption.UseCompany)
				return Vendor.PoolOption
			return MatchCompanyRel.PoolOption

		DerivedInterfacedPurchaseOrder is a DerivedField
			type is like PurchaseOrderImport
			return first InterfacedPurchaseOrderRel.PurchaseOrderImport
			
		DerivedCompanyWithinGLCompanyGroup is a DerivedField
        	type is Boolean
        	if (GeneralLedgerCompanyGroup not entered)
        		return true
        	if (GLCompanyGroupMemberRel exists)
        		return true
        	return false

		DerivedInvoice is a DerivedField
			type is like Invoice
			return PayablesInvoice.Invoice

		DerivedAmountAndCurrency is a DerivedField
			type is Alpha up to 27
			return PayablesInvoice.DerivedInvoiceAmountAndCurrency2

		DerivedInvoiceDate is a DerivedField
			type is like ExchangeDate
			return PayablesInvoice.InvoiceDate

		DerivedDueDate is a DerivedField
			type is like DueDate
			return PayablesInvoice.DueDate

    Conditions
		HasInvoiceAmount
			restricted
			when (PayablesInvoice.InvoiceAmount.CurrencyAmount entered)

        HasMiscellaneousAddOnCharge
            classic name is HAS-MISC-AOC
            restricted
            when (first MiscellaneousAddOnChargeRel exists)

		CanCreateDistributionSummary 
			restricted 
			when ((PayablesInvoice.Status = 1
			or     PayablesInvoice.Status = 2
			or     PayablesInvoice.Status = 8
			or     PayablesInvoice.Status = 9)
			and    PayablesInvoice.PayablesInvoiceDistributionSummaryRel !exists
			and    MatchCompanyRel.SummarizeAllDistributions = true)
		
		HasDistributionSummary 
			restricted 
			when (PayablesInvoice.PayablesInvoiceDistributionSummaryRel exists)

		HasInvoiceAddOnCharges 
			restricted 
			when (PayablesInvoiceAOCsRel exists)
		
		HasLineAddOnCharge
			restricted
			when (PurchaseOrderLineAddOnChargeRel exists)
			
		HasMiscAOCForAPurchaseOrderDetail
			restricted
			when (PurchaseOrder.PurchaseOrderAddOnChargesRel exists)
			
		HasReceivingBuyerMessagesDetail
			restricted
			when (PurchaseOrder.ReceivingBuyerMessagesRel exists)
			
        PayablesInvoiceNotMatched
            classic name is UNMATCHED
            restricted
            when ((PayablesInvoice.MatchStatus.Unmatched
				or PayablesInvoice.MatchStatus.POCostMessagesExist)
            and   !PayablesInvoice.MatchProcessType.Expense
            and   (PayablesInvoice.Status.Unreleased
                or    PayablesInvoice.Status.Released
                or    PayablesInvoice.Status.PendingApproval
                or	  PayablesInvoice.Status.Approved))

        PurchaseOrderHasPurchaseFromLocation
            classic name is VEN-LOC-EXISTS
            restricted
            when (PurchaseOrder.PurchaseFromLocation entered)

		PayablesInvoiceAddOnChargeExists
            restricted
            when (PayablesInvoiceAddOnChargeRel exists)

		HasPayablesInvoiceDetail
			restricted
			when (first PayablesInvoiceDetailRel exists)

		MatchPurchaseOrderInvoiceExists
			restricted
			when (MatchPurchaseOrderInvoice exists)
						



		Memo
			restricted
			when  (PayablesInvoice.InvoiceType.DebitMemo 
			or     PayablesInvoice.InvoiceType.CreditMemo) 

		HasGoods
			restricted
			when  (first GoodsRel exists)

		PolineDataEntry
			restricted
			when (!Memo
			and   !PayablesInvoice.MatchProcessType.AOCOnly
			and  ((ThisPayablesInvoiceDetailRel not exists)
			or    DetailsCreatedFromPO
			or    PolineService))

		DetailsCreatedFromPO
			restricted
			when (ThisPayablesInvoiceDetailWithPORel exists)

		ReceiptlineDataEntry
			restricted
			when (!Memo
			and   !PayablesInvoice.MatchProcessType.AOCOnly
			and   PurchaseOrder.HasNonServiceLines
			and  ((ThisPayablesInvoiceDetailRel not exists)
			or    DetailsCreatedFromReceipt
			or    PolineService))

		DetailsCreatedFromReceipt
			restricted
			when (ThisPayablesInvoiceDetailWithReceiptRel exists)

		PolineService
			restricted
			when (PolineServiceRel exists)

		CreateDetailValid
			restricted
			when ((PayablesInvoice.Status.Unreleased
			or	   PayablesInvoice.Status.Approved
			or	   PayablesInvoice.Status.PendingApproval)
			and   !PayablesInvoice.IsDebitMemo
			and   !PayablesInvoice.IsCreditMemo
			and	  !ThisInvoiceDetailExists
			and   !PayablesInvoice.MatchProcessType.AOCOnly
			and   !ContractInvoice)

		InvoiceDetailExist
			restricted
			when (PayablesInvoiceDetailRel exists)

		ThisInvoiceDetailExists
			restricted
			when (ThisPayablesInvoiceDetailRel exists)

		ContractInvoice
			restricted
			when (PayablesInvoice.MatchProcessType.ServiceContract
			and   ContractRel exists)

		CanCreateFromReceipt
			restricted
			when (PayablesInvoice.AllowAdditionalPO
			and   !PayablesInvoice.IsDebitMemo
			and   !PayablesInvoice.IsCreditMemo
			and   !InvoiceDetailExist
			and   !PayablesInvoice.MatchProcessType.AOCOnly)


		CreateAOCValid
			restricted
			when (!PayablesInvoiceAddOnChargeRel exists
			and   !PayablesInvoice.TransientBypassCreateAocDetails)
			
		OnlineCreateAOCValid
			restricted
			when (CreateAOCValid
			and   PayablesInvoice.AllowAdditionalPO)

		HasOpenMessages
			restricted
			when (first OpenMessagesForPORel exists)

		HasChargeback
			when (ChargebackInvoiceRel exists)

		POHasTax
        	when (PurchaseOrder.VendorInvoicedTaxAmount entered
        	or    PurchaseOrder.OtherVendorInvoicedTaxAmount entered
        	or    PurchaseOrder.AccruedTaxTotal entered)

		AllowDelete
			restricted
			when (PayablesInvoice.AllowAdditionalPO
			and   !PayablesInvoice.BackgroundProcessing.MatchInvoice)

		CreditForRebill
			restricted
			when (PayablesInvoice.InvoiceType.CreditMemo
			and   PayablesInvoice.InvoiceSource = "Y" 
			and   PayablesInvoice.MatchInvoiceReferenceRel exists)

		HasOpenReceipt
			when (OpenReceiptsRel exists)
																										
		DisplayOnPrepaidInvoiceNotReceivedPreview    
		    when  (PayablesInvoice.InvoiceType.MatchPrepayment
			and    PayablesInvoice.MatchStatus.Unmatched
			and    PayablesInvoice.MatchObjectID not entered
    		and    DerivedCompanyWithinGLCompanyGroup
		    and    PayablesInvoice.IsValidForActorContext
    		and    !HasOpenReceipt
    		and    PayablesInvoice.HasHistoricalPayment)

		IsValidForActorContext
			restricted
			when (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)	

		DerivedPastDue
			restricted
			when (PayablesInvoice.IsPastDue)

		DerivedShowPayments
			restricted
			when (PayablesInvoice.SupplierShowPaymentLinks)

		DerivedImageEntered
			restricted
			when (PayablesInvoice.InvoiceImageEntered)

		DerivedProofOfDeliveryExists
			restricted
			when (PayablesInvoice.ProofOfDeliveryExists)

		PurchaseOrderHasComments
			when(PurchaseOrder.PurchaseOrderComment set exists)
		
		HasAssets								
			when (PurchaseOrderLineAssetRel exist)

		

    Relations

		GeneralLedgerCompanyRel
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company

		GeneralLedgerSystemCodeRel		
			one-to-one relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				related.GeneralLedgerSystemCode	= "AP"
		PurchaseOrderReceiptLineSet4Rel
            one-to-many relation to PurchaseOrderReceiptLine
            Field Mapping uses Set4
                related.Company                 = Company
                related.PurchaseOrder  			= PurchaseOrder
            Instance Selection
            	where (related.OpenToMatchQuantity entered
				and    related.PurchaseOrderReceipt.IsOpen)  

		PurchaseOrderReceiptLineSet4InventoriedRel
            one-to-many relation to PurchaseOrderReceiptLine
            Field Mapping uses Set4
                related.Company                 = Company
                related.PurchaseOrder  			= PurchaseOrder
            Instance Selection
            	where (related.ItemType.Inventoried)

        InventoryCompanyRel
            one-to-one relation to InventoryCompany
            required
            Field Mapping uses symbolic key
                related.Company 				= Company

        MatchCompanyRel
            one-to-one relation to MatchCompany
            required
            Field Mapping uses symbolic key
                related.Company 				= Company

        PayablesInvoiceAOCsRel
        	one-to-many relation to PayablesInvoiceAddOnCharge
        	Field Mapping uses Set1			
        		related.Company					= Company
        		related.Vendor					= Vendor
        		related.PayablesInvoice			= PayablesInvoice
        		related.PurchaseOrder			= PurchaseOrder
        
        PayablesInvoiceDetailRel
            one-to-many relation to PayablesInvoiceDetail
            Field Mapping uses ByCompanyVendorPayablesInvoice
                related.Company                 = Company
                related.Vendor                  = Vendor
                related.PayablesInvoice			= PayablesInvoice
                related.PurchaseOrder			= PurchaseOrder








        FromInvoiceOrNotInvoicedNonServiceRel
            one-to-many relation to PayablesInvoiceDetail
            Field Mapping uses ByCompanyVendorPayablesInvoice
                related.Company                 = Company
                related.Vendor                  = Vendor
                related.PayablesInvoice			= PayablesInvoice
                related.PurchaseOrder			= PurchaseOrder
            Instance Selection
				where (related.FromInvoiceOrNotInvoicedNonService)

        GoodsRel
            one-to-many relation to PurchaseOrderLine
            Field Mapping uses symbolic key
                related.Company                 = Company
                related.PurchaseOrder			= PurchaseOrder
            Instance Selection
				where  (!related.ItemType.Service)

        ServicesRel
            one-to-many relation to PayablesInvoiceDetail
            Field Mapping uses ByCompanyVendorPayablesInvoice
                related.Company                 = Company
                related.Vendor                  = Vendor
                related.PayablesInvoice			= PayablesInvoice
                related.PurchaseOrder			= PurchaseOrder
            Instance Selection
				where  (related.ItemType.Service)

        PurchaseOrderAndLineAddOnChargeRel
            one-to-many relation to PurchaseOrderAndLineAddOnCharge
            Field Mapping uses symbolic key
				related.Company				= Company
				related.PurchaseOrder		= PurchaseOrder

        MiscellaneousAddOnChargeRel
            one-to-many relation to PurchaseOrderAndLineAddOnCharge
            Field Mapping uses symbolic key
				related.Company				= Company
				related.PurchaseOrder		= PurchaseOrder
				related.PurchaseOrderLine	= blank

		PurchaseOrderAndLineAddOnChargeSet2Rel
            one-to-many relation to PurchaseOrderAndLineAddOnCharge
            Field Mapping uses symbolic key  
				related.Company			= Company
				related.PurchaseOrder	= PurchaseOrder
                related.PurchaseOrderLine	= first PayablesInvoiceAOCsRel.PurchaseOrderLine

        PurchaseOrderLineRel
            one-to-many relation to PurchaseOrderLine
            Field Mapping uses symbolic key
                related.Company 				= Company
                related.PurchaseOrder 			= PurchaseOrder

        PurchaseOrderRevisionsRel
        	one-to-many relation to PurchaseOrderRevision
        	Field Mapping uses symbolic key
        		related.Company                 = Company
                related.PurchaseOrder			= PurchaseOrder
        
        PurchaseOrderReceiptRel
            one-to-many relation to PurchaseOrderReceipt
            Field Mapping uses Set3
                related.Company                 = Company
                related.PurchaseOrder			= PurchaseOrder

        PurchaseOrderReceiptLineRel
            one-to-many relation to PurchaseOrderReceiptLine
            Field Mapping uses Set5
                related.Company                 = Company
                related.PurchaseOrder 			= PurchaseOrder

        OpenReceiptsRel
            one-to-many relation to PurchaseOrderReceipt
            Field Mapping uses Set9
                related.Company                 = Company
                related.Vendor					= Vendor
                related.PurchaseOrder			= PurchaseOrder

        PurchaseOrderSpreadAddOnChargeRel
            one-to-many relation to PurchaseOrderSpreadAddOnCharge
            Field Mapping uses symbolic key
                related.Company                                		= Company
                related.PurchaseOrder								= PurchaseOrder
        






        VendorRel
            one-to-one relation to Vendor
            required
            Field Mapping uses symbolic key
                related.VendorGroup 			= Company.VendorGroup
                related.Vendor      			= Vendor

        VendorLocationRel
            one-to-one relation to VendorLocation
            valid when (PurchaseOrderHasPurchaseFromLocation)
            Field Mapping uses symbolic key
                related.VendorGroup    			= Company.VendorGroup
                related.Vendor         			= Vendor
                related.VendorLocation 			= PurchaseOrder.PurchaseFromLocation

        MatchInvoiceMessageRel
            classic name is MAINVMSG
            one-to-many relation to MatchInvoiceMessage
            Field Mapping uses Set1
                related.Company 				= Company
                related.Vendor  				= Vendor
                related.PayablesInvoice			= PayablesInvoice
            Instance Selection
                where (related.CancelSequence not entered)

        MatchInvoiceMessageForPORel
            classic name is MAINVMSG
            one-to-many relation to MatchInvoiceMessage
            Field Mapping uses Set1
                related.Company 				= Company
                related.Vendor  				= Vendor
                related.PayablesInvoice			= PayablesInvoice
            Instance Selection
                where (related.PurchaseOrder	= PurchaseOrder)

        OpenMessagesForPORel
            classic name is MAINVMSG
            one-to-many relation to MatchInvoiceMessage
            Field Mapping uses Set1
                related.Company 				= Company
                related.Vendor  				= Vendor
                related.PayablesInvoice			= PayablesInvoice
            Instance Selection
                where (related.PurchaseOrder	= PurchaseOrder
                and    related.IsOpenMessage)


		PayablesAccrualCodeDetailRel
			one-to-one relation to PayablesAccrualCodeDetail
			Field Mapping uses symbolic key
				related.VendorGroup			= Company.VendorGroup
				related.PayablesAccrualCode	= PayablesInvoice.AccrualCode
				related.Company				= Company

		ThisPayablesInvoiceDetailWithPORel
			one-to-many relation to PayablesInvoiceDetail
			Field Mapping uses symbolic key
				related.Company				= Company
				related.PayablesInvoice		= PayablesInvoice
			Instance Selection
				where (related.PurchaseOrder = PurchaseOrder
				and    related.PurchaseOrderReceipt not entered)

		ThisPayablesInvoiceDetailWithReceiptRel
			one-to-many relation to PayablesInvoiceDetail
			Field Mapping uses symbolic key
				related.Company				= Company
				related.PayablesInvoice		= PayablesInvoice
			Instance Selection
				where (related.PurchaseOrder = PurchaseOrder
				and    related.PurchaseOrderReceipt entered)

		ThisPayablesInvoiceDetailRel
			one-to-many relation to PayablesInvoiceDetail
			Field Mapping uses symbolic key
				related.Company				= Company
				related.PayablesInvoice		= PayablesInvoice
			Instance Selection
				where (related.PurchaseOrder = PurchaseOrder)

		ThisPayablesInvoiceLineAddOnChargeForPORel
			one-to-many relation to PayablesInvoiceAddOnCharge
			Field Mapping uses symbolic key
				related.Company				= Company
				related.PayablesInvoice		= PayablesInvoice
			Instance Selection
				where (related.PurchaseOrder	= PurchaseOrder
				and    related.PurchaseOrderLine entered
				and    !related.HeaderSpreadAddOnCharge)

    	PolineServiceRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses symbolic key	
				related.Company			= Company
    			related.PurchaseOrder	= PurchaseOrder
    		Instance Selection
    			where (related.ItemType.Service)

		PurchaseOrderServiceAocRel
			one-to-many relation to PurchaseOrderAndLineAddOnCharge
			Field Mapping uses symbolic key	
				related.Company			= Company
    			related.PurchaseOrder	= PurchaseOrder
    		Instance Selection
    			where (related.PurchaseOrderLine.ItemType.Service)

		PurchaseOrderLineAddOnChargeRel
			one-to-many relation to PurchaseOrderAndLineAddOnCharge
			Field Mapping uses symbolic key	
				related.Company			= Company
    			related.PurchaseOrder	= PurchaseOrder
    		Instance Selection
    			where (related.LineAddOnCharge
    			and   (!related.HeaderSpreadAddOnCharge
    			or     PayablesInvoice.MatchProcessType.AOCOnly))
    			
		ContractRel
			one-to-many relation to Contract
			Field Mapping uses symbolic key	
				related.ContractGroup			= Company.VendorGroup


		PurchaseOrderLineQuantityRemainingRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses symbolic key
				related.Company			= Company
    			related.PurchaseOrder	= PurchaseOrder
    		Instance Selection
    			where (related.AllowMatchCreateDetail)



		PayablesInvoiceAddOnChargeRel
			one-to-many relation to PayablesInvoiceAddOnCharge
			Field Mapping uses symbolic key
				related.Company				= Company
				related.PayablesInvoice		= PayablesInvoice

		PurchaseOrderAocRel
			one-to-many relation to PurchaseOrderAndLineAddOnCharge
			Field Mapping uses symbolic key	
				related.Company			= Company
    			related.PurchaseOrder	= PurchaseOrder
			Instance Selection
				where (related.Vendor	= Vendor
				and   !related.Canceled
				and   !related.Closed.Yes)
				
		MatchPurchaseOrderInvoicesSet2Rel
			one-to-many relation to MatchPurchaseOrderInvoice
			Field Mapping uses Set2
				related.Company			= Company
				related.Vendor			= Vendor
				related.PayablesInvoice	= PayablesInvoice
			Instance Selection
				where (related.PurchaseOrder != PurchaseOrder)

		InvoicesForAPurchaseOrderRel
			one-to-many relation to MatchPurchaseOrderInvoice
			Field Mapping uses ByPurchaseOrder
				related.Company			= Company
				related.PurchaseOrder 	= PurchaseOrder
				related.Vendor			= Vendor

		OriginalInvoiceDetailRel
			one-to-many relation to PayablesInvoiceDetail
			Field Mapping uses symbolic key
				related.Company			= Company
				related.PayablesInvoice	= OriginalInvoice
		
		OriginalInvoiceAddOnChargeRel
			one-to-many relation to PayablesInvoiceAddOnCharge
			Field Mapping uses symbolic key
				related.Company			= Company
				related.PayablesInvoice	= OriginalInvoice
		
		MatchInvoiceReferenceRel
			one-to-many relation to MatchInvoiceReference
			Field Mapping uses Set2
				related.Company								= Company
				related.Vendor								= Vendor
                related.OriginalInvoice					 	= PayablesInvoice

		ChargebackInvoiceRel
			one-to-one relation to PayablesInvoice
			Field Mapping uses ByCompanyVendorInvoice
				related.Company 						= Company
				related.Vendor 							= Vendor
				related.Invoice 						= PayablesInvoice.Invoice
				related.Suffix 							= 111		
				related.CancelSequence					= blank			
				related.InvoiceDate						= PayablesInvoice.InvoiceDate		
			 
		PurchaseOrderCommentRel	
			one-to-many relation to PurchaseOrderComment
			Field Mapping uses ByCommentType
				related.Company					= Company
				related.PurchaseOrder			= PurchaseOrder
			Instance Selection
				where (related.CommentType.InvoiceComments)

		PurchaseOrderReceiptCommentRel	
			one-to-many relation to PurchaseOrderReceiptComment
			Field Mapping uses ByCommentType
				related.Company					= Company
				related.PurchaseOrderReceipt	= last PurchaseOrderReceiptRel.PurchaseOrderReceipt
				related.CommentType				= "N"		
				
    	InterfacedPurchaseOrderRel 
    		one-to-many relation to InterfacedPurchaseOrder
    		Field Mapping uses ByPurchaseOrder
    			related.Company			= Company
 				related.PurchaseOrder	= PurchaseOrder

        PurchaseOrderLineAssetRel
            one-to-many relation to PurchaseOrderLineAsset
            Field Mapping uses symbolic key
                related.Company                 = Company
                related.PurchaseOrder			= PurchaseOrder

		PrepaidPurchaseOrderReceiptLineRel 
			one-to-many relation to PurchaseOrderReceiptLine
				Field Mapping uses Set12
					related.Company						= Company
					related.PurchaseOrderReceipt		= LocalReceipt
					related.MatchDetailKey				= LocalMatchDetailKey

		GLCompanyGroupMemberRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= GeneralLedgerCompanyGroup
				related.Company						= Company

		PayablesInvoiceDistributionForSummaryRel
			one-to-many relation to PayablesInvoiceDistribution 
			Field Mapping uses Set9		
				related.Company					= Company
				related.Vendor					= PayablesInvoice.Vendor
				related.PayablesInvoice			= PayablesInvoice
			Instance Selection
				where (related.DistributionType	= "D"
				and    related.TaxType         != "A")

    Sets
        Set2
            indexed
            Sort Order
                Company
                Vendor
                PayablesInvoice
                PurchaseOrder

		ByPurchaseOrder
			Sort Order
				Company
				PurchaseOrder
				Vendor
				PayablesInvoice

	Rule Blocks
		CommonEdits









			constraint (PayablesInvoice.MatchProcessType.ReceiptMatch
			or			PayablesInvoice.MatchProcessType.Service
			or			PayablesInvoice.MatchProcessType.AOCOnly
			or			PayablesInvoice.MatchProcessType.DropShip)
				"PurchaseOrderShouldBeEnteredForMatchInvoiceOnly"  //"InvoiceMustBePOOrOrAddOnChargeType"			






				
			if (!PayablesInvoice.Status.Unreleased
			and  PayablesInvoice.InvoiceType.MatchPrepayment)
				constraint (PayablesInvoice.MatchStatus.Unmatched
				or          PayablesInvoice.MatchStatus.POCostMessagesExist)
					"InvoiceIsReleased;CannotAccess"		
			
			constraint (PayablesInvoice.ContractRebateGroup not entered)
				"CannotAccessRebateInvoice"					
			
			constraint (!PayablesInvoice.MatchProcessType.Expense)
				"InvoiceIsNotAMatchInvoice"

			constraint ((PayablesInvoice.Status.Unreleased
			or			 PayablesInvoice.Status.Approved
			or			 PayablesInvoice.Status.Amended
			or			 PayablesInvoice.Status.PendingApproval)
			and         (PayablesInvoice.MatchStatus.Unmatched
			or			 PayablesInvoice.MatchStatus.POCostMessagesExist))
				"InquireOnly;InvoiceIsReleased"

			constraint (PurchaseOrder.Released)
				"PurchaseOrderMustBeReleased"		
				
			constraint (!PurchaseOrder.ApprovalStatus.NeedsApproval)  
				"PurchaseOrderNeedsApproval"
                                
			if (PurchaseOrder.Closed.Yes
			or  PurchaseOrder.Canceled)
				constraint (PayablesInvoice.InvoiceType.CreditMemo)
					"PurchaseOrderIsClosedOrCanceled;CanOnlyProcessCreditMemo"	
				
			if  (PayablesInvoice.InvoiceType.MatchPrepayment
			and  PayablesInvoice.MatchPrepaymentMethod.EligibleForPrepay)
				constraint (HasGoods)
					"CannotProcess;PrepaidInvoiceCannotHaveServiceItemsOnly" 

			if  (PayablesInvoice.InvoiceType.MatchPrepayment)
				constraint (!PurchaseOrder.Dropship)
					"CannotAddDropshipPurchaseOrderToPrepaymentInvoice"

			if (PurchaseOrder.RetainagePercentCompleteTracking entered)
				constraint (!MatchPurchaseOrderInvoicesSet2Rel exists)
					"CannotAssignRetainagePurchaseOrdersToAMultiplePurchaseOrderInvoice"  

		


		UpdateMatchProcessType
			if (!PayablesInvoice.MatchProcessType.AOCOnly)
				HasServicePO = false
				HasDropshipPO = false
				IsReceiptMatch = false
				
				if  (PayablesInvoice.MatchPurchaseOrderInvoicesRel exists)
					for each PayablesInvoice.MatchPurchaseOrderInvoicesRel
						if (each.PurchaseOrder.Dropship)
							HasDropshipPO = true
						else
						if  (each.PurchaseOrder.HasServiceLinesOnly)
							HasServicePO = true
						else
							IsReceiptMatch = true
							
					if  (HasDropshipPO
					and  !HasServicePO
					and  !IsReceiptMatch
					and  !PayablesInvoice.MatchProcessType.DropShip)
						invoke FastUpdate PayablesInvoice
							invoked.MatchProcessType = "D"
					else
					if  (HasServicePO
					and  !HasDropshipPO
					and  !IsReceiptMatch
					and  !PayablesInvoice.MatchProcessType.Service)
						invoke FastUpdate PayablesInvoice
							invoked.MatchProcessType = "S"
					else
					if  (IsReceiptMatch
					or  (HasDropshipPO
					and  HasServicePO)
					and  !PayablesInvoice.MatchProcessType.ReceiptMatch)
						invoke FastUpdate PayablesInvoice
							invoked.MatchProcessType = "R"
				
	Create Rules
		if  (PayablesInvoice.CreditOrDebitMemo)								
			constraint (!MatchPurchaseOrderInvoicesSet2Rel exists)
				"MultiplePurchaseOrdersNotAllowedOnCreditOrDebitMemo"  

		if  (PayablesInvoice.MatchProcessType.AOCOnly)
			constraint (!PayablesInvoice.MatchPurchaseOrderInvoicesRel exists)
				"CannotAddMultiplePurchaseOrdersForAddOnChargeOnlyInvoice"

		if  (PayablesInvoice.MatchPrepayment)
			constraint (!PayablesInvoice.MatchPurchaseOrderInvoicesRel exists)
				"CannotAddMultiplePurchaseOrdersToMatchPrepayment"

		if  ((!PayablesInvoice.MatchProcessType.AOCOnly
		or   PayablesInvoice.BypassMatch)
		and  !PayablesInvoice.IsPOCancel)
			constraint (PayablesInvoice.Vendor = PurchaseOrder.Vendor)
				"InvoiceVendorDifferentFromPurchaseOrderVendor<PurchaseOrder.Vendor>" 
	Create Exit Rules
		invoke FastUpdate PayablesInvoice
			invoked.Buyer	= PurchaseOrder.Buyer

		if (PayablesInvoice.TransientCreateDetails.FromReceipt		
		and PurchaseOrderReceiptCommentRel exists)
			for each PurchaseOrderReceiptCommentRel					
				invoke Create PayablesInvoiceComment
					invoked.Company					= Company
					invoked.PayablesInvoice			= PayablesInvoice
					invoked.Title					= each.CommentTitle
					invoked.Comment					= each.CommentText				
					invoked.Type					= "A"
		else	
			for each PurchaseOrderCommentRel	
				invoke Create PayablesInvoiceComment
					invoked.Company					= Company
					invoked.PayablesInvoice			= PayablesInvoice
					invoked.Title					= each.CommentTitle
					invoked.Comment					= each.CommentText				
					invoked.Type					= "A"

    Actions
        Create is a Create Action
			Entrance Rules
				include CommonEdits
			Exit Rules
				include UpdateMatchProcessType
				if (PayablesInvoice.MatchPrepayment)		
					invoke FastUpdate PurchaseOrder
						invoked.MatchPrepayment = true

					if (PayablesInvoice.Status.Unreleased)
			            invoke CheckPrepaids PayablesInvoice

				if (PayablesInvoice.ExternalPurchaseOrder not entered)
					invoke UpdateExternalPOForMatchInvoices PayablesInvoice
					

        Update is an Update Action
			valid when (PayablesInvoice.IsUpdateable)
			Entrance Rules
				include CommonEdits
				constraint (PayablesInvoice.MatchStatus < 2)
					"InvoiceHasBeenMatched"


		Delete is a Delete Action
			default label is "Delete"
			valid when (AllowDelete)
			Entrance Rules
				constraint ((PayablesInvoice.Status.Unreleased
				and          PayablesInvoice.MatchStatus < 2)
				or			(PayablesInvoice.Status.Released				
				and 		 PayablesInvoice.MatchObjectID not entered))	
					"CannotDelete;MatchedInvoiceIsReleased"

				initialize LocalLineCount
				for each PayablesInvoiceDetailRel
	        		LocalLineCount += 1
	        		if (LocalLineCount > NumberOfLinesForSetAction)
	        			end for each

				for each PayablesInvoiceAOCsRel
	        		LocalLineCount += 1
	        		if (LocalLineCount > NumberOfLinesForSetAction)
	        			end for each

        		if (LocalLineCount < NumberOfLinesForSetAction)
					invoke DeleteNoInvoiceUpdate PayablesInvoiceAOCsRel
					invoke DeleteNoInvoiceUpdate PayablesInvoiceDetailRel
				else
				    invoke DeleteNoInvoiceUpdateSet PayablesInvoiceDetail
				    	invoked.PrmCompany 			= Company
				    	invoked.PrmPayablesInvoice 	= PayablesInvoice
				    	invoked.PrmPurchaseOrder 	= PurchaseOrder
				     
			Exit Rules
        		if (LocalLineCount < NumberOfLinesForSetAction)
					include UpdateMatchProcessType
					invoke InvoiceUpdate PayablesInvoice
					if (PayablesInvoice.ExternalPurchaseOrder not entered
					or  PayablesInvoice.ExternalPurchaseOrder = PurchaseOrder)
						invoke UpdateExternalPOForMatchInvoices PayablesInvoice
				
		DeleteNoInvoiceUpdate is a Delete Action
			restricted
				
		RestrictedDelete is a Delete Action
			restricted

		UpdateMatchProcessType is an Instance Action
		    restricted
		    Action Rules
		    	include UpdateMatchProcessType
		
		CreateDistributionSummary is an Instance Action 
			valid when (CanCreateDistributionSummary)

			Action Rules 
				for each PayablesInvoiceDistributionForSummaryRel
					invoke CalculateDistributionSummary each 
		
		CreateDistributionSummarySet is a Set Action 
			restricted 
			Parameters 
				ParmPayablesCompany		is a Company 
				ParmInvoiceDate         is Date 

			Instance Selection 
				where (CanCreateDistributionSummary
				and    PayablesInvoice.InvoiceDate >= ParmInvoiceDate)

			Action Rules 
				Instance Rules 

					invoke CreateDistributionSummary 

		CreateDetailFromPurchaseOrder is an Instance Action
			valid when (CreateDetailValid)
			completion message is "<LocalCompletionMessage>"
			Entrance Rules
				include CommonEdits
				constraint (PayablesInvoice.MatchStatus.Unmatched)
					"InvoiceHasBeenMatched"
        		constraint (!PayablesInvoice.MatchProcessType.AOCOnly)
        			"CannotAddItemDetailForAOCOnlyInvoice" 
        		constraint (!PayablesInvoice.MatchProcessType.ServiceContract)
        			"CannotAddItemDetailForServiceContract" 
				constraint (!FromInvoiceOrNotInvoicedNonServiceRel exists)
					"CannotUseCreateDetail;DetailAlreadyExists" 
			Action Rules

				initialize LocalLineCount
				for each PurchaseOrderLineQuantityRemainingRel
	        		LocalLineCount += 1
	        		if (LocalLineCount > NumberOfLinesForSetAction)
	        			end for each

        		if (LocalLineCount < NumberOfLinesForSetAction)
					initialize LocalLineCount
					initialize LocalAOCFlag

					for each PurchaseOrderLineQuantityRemainingRel
						if  (!DerivedPoolOption.CompanyVendorPoShipTo
						or   each.ShipToLocation = each.PayablesInvoice.Location)
							invoke CreateInvoiceDetailsFromPoLines each
								invoked.Company			= Company
								invoked.PayablesInvoice	= PayablesInvoice
			        		LocalLineCount += 1
		        		
					if (CreateAOCValid)
						invoke CreateAOCFromPurchaseOrder

					if  (initiating action != "PayablesInvoice.CreateInvoiceUnreleased"
					and !PayablesInvoice.InterfaceInProcess)
			        	invoke InvoiceUpdate PayablesInvoice
				else
					invoke FastUpdate PayablesInvoice
						invoked.BackgroundProcessing				= 2
					
					invoke CreateInvoiceDetailsFromPoLinesSet PurchaseOrderLine
						invoked.PrmCompany 			= Company
						invoked.PrmPayablesInvoice 	= PayablesInvoice
						invoked.PrmPurchaseOrder 	= PurchaseOrder
		        		
		    Exit Rules

        		if (LocalLineCount < NumberOfLinesForSetAction)
					if (LocalAOCFlag = 1)
						LocalCompletionMessage = AOCSomeNotApprovedMessage
					else
					if (LocalAOCFlag = 2)
						LocalCompletionMessage = AOCSomeNotApprovedMessage
					else
					if (LocalLineCount entered)
						LocalCompletionMessage = CreateDetailCompleteMessage + LocalLineCount + LinesAddedMessage
					else
						LocalCompletionMessage = CreateDetailCompleteMessage + LinesNotCreated
				
		CreateDetailFromReceipt is an Instance Action
			default label is "CreateDetailsFromReceipt"
			valid when (CanCreateFromReceipt)
			completion message is "<LocalCompletionMessage>"
			Entrance Rules
				include CommonEdits
				constraint (PayablesInvoice.MatchStatus.Unmatched)
					"InvoiceHasBeenMatched"
        		constraint (!PayablesInvoice.MatchProcessType.AOCOnly)
        			"CannotAddItemDetailForAOCOnlyInvoice" 
        		constraint (!PayablesInvoice.MatchProcessType.ServiceContract)
        			"CannotAddItemDetailForServiceContract" 
				constraint (!FromInvoiceOrNotInvoicedNonServiceRel exists)
					"CannotUseCreateDetail;DetailAlreadyExists" 
			Action Rules

				initialize LocalLineCount
				for each PurchaseOrderReceiptLineSet4Rel
	        		LocalLineCount += 1
	        		if (LocalLineCount > NumberOfLinesForSetAction)
	        			end for each

        		if (LocalLineCount < NumberOfLinesForSetAction)
					for each PolineServiceRel
		        		LocalLineCount += 1
		        		if (LocalLineCount > NumberOfLinesForSetAction)
		        			end for each
				
        		if (LocalLineCount < NumberOfLinesForSetAction)
					initialize LocalLineCount
					for each PurchaseOrderReceiptLineSet4Rel
					    if  (PayablesInvoice.MatchReferenceNumber entered
					    and  each.PurchaseOrderReceipt.MatchReferenceNumber != PayablesInvoice.MatchReferenceNumber)
					        NextSentence = true
					    else
						if  (each.Status.ReleasedInspected
						or   each.Status.ReleasedPendingTwoStepReceiving
						or  (each.Status.ReleasedRequiresInspection
						and  !Vendor.HoldUntilInspected.Yes
						and  !Company.HoldUntilInspected.Yes))
							if  (each.OpenToMatchQuantity entered
							and (!DerivedPoolOption.CompanyVendorPoShipTo
							or   each.ShipToLocation = each.PayablesInvoice.Location))
								invoke CreateInvoiceDetailsFromReceipt each
									invoked.Company				= Company
									invoked.PayablesInvoice				= PayablesInvoice
								LocalLineCount += 1
		        		
					for each PolineServiceRel
						if (!each.Closed.Yes
						and each.DerivedOpenToPayablesInvoiceQuantity entered)
							invoke CreateInvoiceDetailsFromPoLines each
								invoked.Company			= Company
								invoked.PayablesInvoice	= PayablesInvoice

					if (CreateAOCValid)
						invoke CreateAOCFromPurchaseOrder

					if  (initiating action != "PayablesInvoice.CreateInvoiceUnreleased"
					and !PayablesInvoice.InterfaceInProcess)
		        		invoke InvoiceUpdate PayablesInvoice
				else
					invoke FastUpdate PayablesInvoice
						invoked.BackgroundProcessing				= 2

					invoke CreateInvoiceDetailsFromReceiptSet PurchaseOrderReceiptLine
						invoked.PrmCompany 			= Company
						invoked.PrmPayablesInvoice 	= PayablesInvoice
						invoked.PrmPurchaseOrder 	= PurchaseOrder

		    Exit Rules

        		if (LocalLineCount < NumberOfLinesForSetAction)
					if (LocalLineCount entered)
						LocalCompletionMessage = CreateDetailCompleteMessage + LocalLineCount + LinesAddedMessage
					else
						LocalCompletionMessage = CreateDetailCompleteMessage + LinesNotCreated
				

		CalculateRate is an Instance Action
			restricted
			valid when (PayablesInvoice.IsUpdateable)
			Entrance Rules
				include CommonEdits
				constraint (HasPayablesInvoiceDetail)
					"InvoiceDetailsRequired"
				constraint (!PayablesInvoice.TaxCode.TaxType.CalculatedRate
				or          !PayablesInvoice.TaxAdjustment.Calculate)
					"ForThisTaxCodeAndTaxAdjustment,PerformTaxCalculationOnPayablesInvoice"
		
		ProcessAOCUpdates is an Instance Action		
			restricted
        	Action Rules
        		display "RunningProcessAOCUpdatesWithinMAPOINVRules"
        		if (PurchaseOrder exists)
        			for each MiscellaneousAddOnChargeRel			
        				invoke UpdateAOCInvoiceOnCancel each
        			for each PurchaseOrderReceiptLineSet4InventoriedRel	
        				invoke CheckItemType each	

		CreateAOCFromPurchaseOrder is an Instance Action
			default label is "CreateChargesAndAllowances"
			valid when (OnlineCreateAOCValid)
			Action Rules
				for each PurchaseOrderAocRel
					if (each.PurchaseOrderLine not entered)
						invoke CreateInvoiceMiscellaneousAddOnCharges each
							invoked.PayablesCompany				= Company
							invoked.PayablesInvoice				= PayablesInvoice
					else
					if (each.AddOnCharge.SpreadMethod.NoSpread
					or  !each.HeaderSpreadAddOnCharge)					
						invoke CreateInvoiceAocFromPo each
							invoked.PayablesCompany				= Company
							invoked.PayablesInvoice				= PayablesInvoice

				for each PurchaseOrderSpreadAddOnChargeRel
					if (each.Vendor = PayablesInvoice.Vendor)
						invoke CreateInvoiceSpreadAddOnCharge each
							resume on error
							invoked.PayablesCompany				= Company
							invoked.PayablesInvoice				= PayablesInvoice

				if  (initiating action != "PayablesInvoice.CreateInvoiceUnreleased"
				and !PayablesInvoice.InterfaceInProcess)
		        	invoke InvoiceUpdate PayablesInvoice
	        	
		CreateFromBatch is a Create Action
			restricted
			Action Rules
				CreateFromBatchSwitch = true
				invoke Create this instance

		CreateAdditionalServiceAmountLine is an Instance Action
			valid when (PayablesInvoice.IsUpdateable)
			Parameters
				PrmPurchaseOrderLine       is a PurchaseOrderLine
				PrmEnteredUnitCost         is an InternationalCost
			Action Rules
				constraint (PrmPurchaseOrderLine.ServiceCode.Amount)
					"ActionIsOnlyValidForServiceByAmountLines" 
				
				invoke CreateFromPurchaseOrderLine PayablesInvoiceDetail
					invoked.Company							= Company 
					invoked.Vendor							= Vendor
					invoked.PayablesInvoice					= PayablesInvoice
					invoked.PurchaseOrder					= PurchaseOrder
					invoked.PurchaseOrderLine				= PrmPurchaseOrderLine
					invoked.Item							= PrmPurchaseOrderLine.Item
					invoked.ItemType						= PrmPurchaseOrderLine.ItemType
					invoked.VendorItem						= PrmPurchaseOrderLine.VendorItem
					invoked.Location						= PrmPurchaseOrderLine.ShipToLocation
					invoked.EnteredUnitCost					= PrmEnteredUnitCost
					invoked.EnteredUOM						= PrmPurchaseOrderLine.VendorPriceUOM
					invoked.EnteredUOMMultiplier			= PrmPurchaseOrderLine.VendorPriceUOMMultiplier
					invoked.VendorPriceUOM					= PrmPurchaseOrderLine.VendorPriceUOM
					invoked.VendorPriceUOMMultiplier		= PrmPurchaseOrderLine.VendorPriceUOMMultiplier
					invoked.VendorBuyUOM					= PrmPurchaseOrderLine.EnteredBuyUOM
					invoked.VendorBuyUOMMultiplier			= PrmPurchaseOrderLine.EnteredBuyUOMMultiplier
			        invoked.EnteredQuantity					= 1
			        invoked.RecordSource					= "LM"
			        invoked.DistributionDate				= PayablesInvoice.DistributionDate
					invoked.StockWeight						= PrmPurchaseOrderLine.StockWeight 
					invoked.ICNCode							= PrmPurchaseOrderLine.ICNCode 
					invoked.SupplementaryQuantity			= PrmPurchaseOrderLine.SupplementaryQuantity 
					invoked.CommodityCode					= PrmPurchaseOrderLine.CommodityCode
					invoked.ProductTaxCategory				= PrmPurchaseOrderLine.ProductTaxCategory
					invoked.SupplementaryUOM				= PrmPurchaseOrderLine.ICNCode.SupplementaryUOM 
					invoked.Contract						= PrmPurchaseOrderLine.Contract
					invoked.ContractLine					= PrmPurchaseOrderLine.ContractLine
					if  (!PayablesInvoice.TaxAdjustment.IgnoreProductOnly
					and  !PayablesInvoice.TaxAdjustment.Calculate
					and  !PayablesInvoice.TaxAdjustment.IgnoreProductAndAOC)
						invoked.TaxCode									= PrmPurchaseOrderLine.TaxCode
						if (Vendor.TaxUsageCode entered)
							invoked.TaxUsageCode						= Vendor.TaxUsageCode
						else
							invoked.TaxUsageCode						= Vendor.VendorClass.TaxUsageCode
				



		PrepaidInvoiceNotReceived is a Set Action
			default label is "PrepaidInvoiceNotReceived"
			Parameters


				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup 
				PrmCompany						is a PayablesCompany 
				PrmVendor						is a Vendor
				PrmCompanyGroup					is a GeneralLedgerCompanyGroup 
				PrmVendorLocation 				is a VendorLocation 
				PrmDateRange					is a DateRange 

			Parameter Rules
				PrmFinanceEnterpriseGroup
					default to actor.context.FinanceEnterpriseGroup

				

				PrmCompany
					if (PrmCompanyGroup entered)
						cannot be entered
							"CannotEnterCompanyIfCompanyGroupEntered" 
					else
						required

				PrmCompanyGroup
					if (PrmCompany entered)
						cannot be entered
							"CannotEnterCompanyGroupIfCompanyEntered"
					else
						required

				PrmVendorLocation
					if (PrmVendorLocation entered)
						constraint (PrmVendor entered)
							"CannotEnterVendorLocationWithoutVendorEntered"

				PrmDateRange
					required
					
			Local Fields
				FoundAPayable 								is Boolean
				FoundOpenReceipt							is Boolean
				LocalSeparatePayment						is a BooleanOverride
				RunDate										is TimeStamp
				ChargebackInvoiceView						is a PayablesInvoice view
				LocalPrepaidInvoiceNotReceivedResultView 	is a PrepaidInvoiceNotReceivedResult view

			Instance Selection

				where	(((PrmCompany 	entered
				and		PrmCompany 		= Company)
				or		PrmCompany 		not entered)

				and		((PrmCompanyGroup			entered 
				and		GeneralLedgerCompanyGroup	entered
				and		GeneralLedgerCompanyGroup = PrmCompanyGroup)
				or		PrmCompanyGroup not entered)

				and 	((PrmVendorLocation 	entered
				and		PayablesInvoice.PurchaseFromLocation 	= PrmVendorLocation)
				or		PrmVendorLocation 	not entered)

				and		((PrmVendor		entered
				and		PrmVendor		= Vendor)
				or		PrmVendor		not entered)

				and (PayablesInvoice.NotMatched)

				and PayablesInvoice.Status.Released

				and 	PayablesInvoice.MatchStatus.Unmatched

				and PayablesInvoice.InvoiceType = "R")

			Sort Order

			Action Rules
				Empty Set Rules
					invoke Create PrepaidInvoiceNotReceivedResult
						assign result to LocalPrepaidInvoiceNotReceivedResultView 
						invoked.FinanceEnterpriseGroup			= PrmFinanceEnterpriseGroup
						invoked.PrmCompany						= PrmCompany
						invoked.PrmVendor						= PrmVendor
						invoked.PrmCompanyGroup					= PrmCompanyGroup
						invoked.PrmVendorLocation				= PrmVendorLocation
						invoked.PrmDateRange					= PrmDateRange

				Set Rules
					Entrance Rules
						RunDate		= current timestamp
						invoke Create PrepaidInvoiceNotReceivedResult
							assign result to LocalPrepaidInvoiceNotReceivedResultView
							invoked.FinanceEnterpriseGroup			= PrmFinanceEnterpriseGroup
							invoked.PrmCompany						= PrmCompany
							invoked.PrmVendor						= PrmVendor
							invoked.PrmCompanyGroup					= PrmCompanyGroup
							invoked.PrmVendorLocation				= PrmVendorLocation
							invoked.PrmDateRange					= PrmDateRange
							invoked.RunDate							= RunDate

					Exit Rules
						invoke FastUpdate LocalPrepaidInvoiceNotReceivedResultView.PrepaidInvoiceNotReceivedResult
							invoked.Complete = true

				Instance Rules 
					FoundAPayable = false

					for each PayablesInvoice.HistoricalPayablesInvoicePaymentRel
						if (each.PayablesInvoicePayment.VoidSequence = 0
						and each.CheckDate within PrmDateRange)

							if (each.SeparatePayment)
								LocalSeparatePayment = BooleanOverride.Yes
							else
								LocalSeparatePayment = BooleanOverride.No
							FoundAPayable = true

					if (FoundAPayable)
						FoundOpenReceipt = false

						if (OpenReceiptsRel exists) 
							if (PayablesInvoice.MatchPrepaymentMethod.PrepayFromInvoice) 
								FoundOpenReceipt = true 
						else 
							LocalReceipt = first OpenReceiptsRel.PurchaseOrderReceipt
							for each PayablesInvoice.PayablesInvoiceDetailRel
								LocalMatchDetailKey = each.MatchDetailKey
								if (PrepaidPurchaseOrderReceiptLineRel exists)
									FoundOpenReceipt = true
									end for each 

						if (!FoundOpenReceipt)



							invoke GetNextMatchObjectID MatchCompanyRel

							invoke CreateChargeback PayablesInvoice 
								assign result to ChargebackInvoiceView
								invoked.InvoiceType								= "C"
								invoked.Suffix									= 111
								invoked.Operator								= "MA168"
								invoked.Invoice									= PayablesInvoice.Invoice
								invoked.Status									= 1
								invoked.MatchProcessType						= "E" 
								invoked.MatchStatus								= 6 
								invoked.MatchInvoice							= MatchInvoice.ExpenseInvoice
								invoked.OverrideSeparatePayment					= LocalSeparatePayment
								invoked.InvoiceSource							= "E" 
								invoked.MatchObjectID							= MatchCompanyRel.LastMatchObjectID
								invoked.LastUpdateDate							= RunDate
								invoked.LastUpdateBy							= actor
								invoked.Vendor									= PayablesInvoice.Vendor
								invoked.Invoice									= PayablesInvoice.Invoice
								invoked.ProcessLevel							= PayablesInvoice.ProcessLevel
								invoked.InvoiceDate								= PayablesInvoice.InvoiceDate
								invoked.PurchaseFromLocation					= PayablesInvoice.PurchaseFromLocation
								invoked.ExternalPurchaseOrder					= PayablesInvoice.FirstPurchaseOrder
								invoked.Description								= PayablesInvoice.Description
								invoked.CashCode								= PayablesInvoice.CashCode
								invoked.BankTransactionCode						= PayablesInvoice.BankTransactionCode
								invoked.AccrualCode								= PayablesInvoice.AccrualCode
						        invoked.RetainageAccrualCode					= PayablesInvoice.RetainageAccrualCode
								invoked.MatchObjectID							= PayablesInvoice.MatchObjectID
								invoked.VendorGroup								= PayablesInvoice.VendorGroup
								invoked.TermsCode								= PayablesInvoice.TermsCode
								invoked.InvoiceCurrency							= PayablesInvoice.InvoiceCurrency
								invoked.DistributionDate						= PayablesInvoice.DistributionDate
								invoked.PayVendor								= PayablesInvoice.PayVendor
								invoked.InvoiceGroup							= PayablesInvoice.InvoiceGroup
								invoked.DueDate									= PayablesInvoice.InvoiceDate
								invoked.InvoiceAmount.CurrencyAmount			= PayablesInvoice.InvoiceAmount.CurrencyAmount



							for each PayablesInvoice.PayablesInvoiceDistribution set       
								if (each.DistributionType.Distribution)
								    invoke UnmatchDelete each

							invoke FastUpdate PayablesInvoice.PayablesInvoiceDetailRel
								invoked.Status = 1

							invoke FastUpdate PayablesInvoice.PayablesInvoiceAddOnChargeRel
								invoked.Status = 1

							for each PayablesInvoice.PaymentsNotHistoricalRel
								invoke Update each.PayablesInvoicePayment
									invoked.PayImmediately				= true
									invoked.LastUpdateDate				= RunDate
									invoked.LastUpdateBy				= actor



							display "777:PPINR:CB"

							invoke Create PayablesInvoiceDistribution
								invoked.Company								= Company
								invoked.PayablesInvoice						= ChargebackInvoiceView.PayablesInvoice
								invoked.DistributionType					= "D"
								invoked.Status								= 1
								invoked.GLTPostingDate						= ChargebackInvoiceView.PayablesInvoice.DistributionDate
								invoked.GLTTransactionDate					= ChargebackInvoiceView.PayablesInvoice.InvoiceDate
								invoked.DistributionDate					= ChargebackInvoiceView.PayablesInvoice.DistributionDate
								invoked.DistributionAmount.CurrencyAmount	= ChargebackInvoiceView.PayablesInvoice.InvoiceAmount.CurrencyAmount
								invoked.GLTransactionAmount					= ChargebackInvoiceView.PayablesInvoice.InvoiceAmount.CurrencyAmount 
								invoked.TransientBypassErrorUpdate			= true
								if  (PayablesInvoice.ProcessLevel.PrepayAccount entered)
									invoked.GLFinanceCodeBlock				= PayablesInvoice.ProcessLevel.PrepayAccount
									invoked.DistributionAccount				= PayablesInvoice.ProcessLevel.PrepayAccount
								else
									invoked.GLFinanceCodeBlock				= MatchCompanyRel.PrepayAccount
									invoked.DistributionAccount				= MatchCompanyRel.PrepayAccount

							invoke Create PayablesInvoiceDistribution
								invoked.Company								= Company
								invoked.PayablesInvoice						= ChargebackInvoiceView.PayablesInvoice
								invoked.DistributionType					= "A"
								invoked.Status								= 1
								invoked.DistributionAmount.ExchangeDate		= ChargebackInvoiceView.PayablesInvoice.InvoiceAmount.ExchangeDate
								invoked.GLTPostingDate						= ChargebackInvoiceView.PayablesInvoice.DistributionDate
								invoked.GLTTransactionDate					= ChargebackInvoiceView.PayablesInvoice.InvoiceDate
								invoked.DistributionDate					= ChargebackInvoiceView.PayablesInvoice.DistributionDate
								invoked.GLTransactionAmount  	  			= ChargebackInvoiceView.PayablesInvoice.InvoiceAmount.CurrencyAmount * -1 
								invoked.DistributionAmount.CurrencyAmount	= ChargebackInvoiceView.PayablesInvoice.InvoiceAmount.CurrencyAmount * -1
								invoked.GLFinanceCodeBlock					= PayablesAccrualCodeDetailRel.DistributionAccount
								invoked.DistributionAccount					= PayablesAccrualCodeDetailRel.DistributionAccount
								invoked.BypassActiveCodeBlockEdit			= true
								invoked.BypassProjectDateEdit 				= true
								invoked.BypassStructureRelationEdit 		= true
								invoked.TransientBypassErrorUpdate			= true



							display "777:PPINR:INV"

							invoke Create PayablesInvoiceDistribution
								invoked.Company								= Company
								invoked.PayablesInvoice						= PayablesInvoice
								invoked.DistributionType					= "D"
								invoked.Status								= 1
								invoked.GLTPostingDate						= PayablesInvoice.DistributionDate
								invoked.GLTTransactionDate					= PayablesInvoice.InvoiceDate
								invoked.DistributionDate					= PayablesInvoice.DistributionDate
								invoked.DistributionAmount.CurrencyAmount	= PayablesInvoice.InvoiceAmount.CurrencyAmount
								invoked.GLTransactionAmount					= PayablesInvoice.InvoiceAmount.CurrencyAmount
								invoked.TransientBypassErrorUpdate			= true
								if  (PayablesInvoice.ProcessLevel.PrepayAccount entered)
									invoked.GLFinanceCodeBlock				= PayablesInvoice.ProcessLevel.PrepayAccount
									invoked.DistributionAccount				= PayablesInvoice.ProcessLevel.PrepayAccount
								else
									invoked.GLFinanceCodeBlock				= MatchCompanyRel.PrepayAccount
									invoked.DistributionAccount				= MatchCompanyRel.PrepayAccount


							invoke Create PayablesInvoiceDistribution
								invoked.Company								= Company
								invoked.PayablesInvoice						= PayablesInvoice
								invoked.DistributionType					= "A"
								invoked.Status								= 1
								invoked.DistributionAmount.ExchangeDate		= PayablesInvoice.InvoiceAmount.ExchangeDate
								invoked.GLTPostingDate						= PayablesInvoice.DistributionDate
								invoked.GLTTransactionDate					= PayablesInvoice.InvoiceDate
								invoked.DistributionDate					= PayablesInvoice.DistributionDate
								invoked.GLTransactionAmount  	  			= PayablesInvoice.InvoiceAmount.CurrencyAmount * -1
								invoked.DistributionAmount.CurrencyAmount	= PayablesInvoice.InvoiceAmount.CurrencyAmount * -1
								invoked.GLFinanceCodeBlock					= PayablesAccrualCodeDetailRel.DistributionAccount
								invoked.DistributionAccount					= PayablesAccrualCodeDetailRel.DistributionAccount
								invoked.BypassActiveCodeBlockEdit			= true
								invoked.BypassProjectDateEdit 				= true
								invoked.BypassStructureRelationEdit 		= true
								invoked.TransientBypassErrorUpdate			= true
							

							invoke FastUpdate PayablesInvoice
								invoked.Status 							= 9
								invoked.MatchObjectID 					= MatchCompanyRel.LastMatchObjectID
								invoked.MatchStatus						= 6
								invoked.LastUpdateDate					= RunDate
								invoked.LastUpdateBy					= actor

		Purge is a Purge Action
			restricted
				



















































































































































































































































