CompanyCustomerContactImport is a BusinessClass
	owned by ar
	
	prefix is CCCIM
	
	Ontology
		symbolic key is CompanyCustomerContactImport
		
	
	Patterns
		disable Auditing
		disable AuditIndex
		disable EffectiveDated
	
	Persistent Fields
		Name
        PhoneNumber		is a TelephoneNumber 
        	holds pii
        FaxNumber
        Description
        EmailAddress	is an EmailAddressMulti 
        	holds pii
		EmailReceivablesStatement				is Boolean
        	default label is "ReceivablesStatement"
        EmailBasicDunningLetter					is Boolean
        	default label is "BasicDunningLetter"
        EmailAdvancedDunningLetter				is Boolean
        	default label is "AdvancedDunningLetter"
        EmailPaymentRequestNotice				is Boolean
        	default label is "PaymentRequestNotice"
        EmailBillingInvoice						is Boolean
        	default label is "BillingInvoice"
		EmailEFTNotificationPrint				is Boolean
			default label is "EFTNotificationPrint"
		EmailReceivableInvoice					is Boolean
			default label is "ReceivableInvoice"
		EmailSubleaseBillingInvoice				is Boolean
			default label is "SubleaseBillingInvoice"
		EmailPaymentReceipt						is Boolean
			default label is "PaymentReceipt"
		EmailPrepaymentReceipt 					is Boolean
			default label is "PrepaymentReceipt"
	
	Local Fields
		LocalDocumentTypes						is Alpha 300
		LocalHasConfirmationMessage				is Boolean
		LocalBillingInvoiceEmailOnly			is Boolean
		LocalBasicDunningLetterEmailOnly		is Boolean
		LocalAdvancedDunningLetterEmailOnly		is Boolean
		LocalReceivablesStatementEmailOnly		is Boolean
		LocalPaymentRequestNoticeEmailOnly		is Boolean
		LocalEFTNotificationPrintEmailOnly		is Boolean
		LocalReceivableInvoiceEmailOnly			is Boolean
		LocalPaymentReceiptEmailOnly			is Boolean
		LocalPrepaymentReceiptEmailOnly			is Boolean
		LocalSubleaseBillingInvoiceEmailOnly	is Boolean

	Field Rules
		EmailAddress
			if (EmailReceivablesStatement
			or  EmailBasicDunningLetter
			or  EmailAdvancedDunningLetter
			or  EmailPaymentRequestNotice
			or  EmailBillingInvoice
			or  EmailEFTNotificationPrint
			or  EmailReceivableInvoice
			or  EmailSubleaseBillingInvoice
			or  EmailPaymentReceipt
			or  EmailPrepaymentReceipt)
				required

		EmailReceivablesStatement
			if (EmailReceivablesStatement)
				constraint (CompanyCustomerConversion.EmailReceivablesStatement)
					"EmailFunctionalityForReceivablesStatementMustBeEnabledOnCompanyCustomerConversion"
					
		EmailBasicDunningLetter
			if (EmailBasicDunningLetter)
				constraint (CompanyCustomerConversion.EmailBasicDunningLetter)
					"EmailFunctionalityForBasicDunningLetterMustBeEnabledOnCompanyCustomerConversion"
					
		EmailAdvancedDunningLetter
			if (EmailAdvancedDunningLetter)
				constraint (CompanyCustomerConversion.EmailAdvancedDunningLetter)
					"EmailFunctionalityForAdvancedDunningLetterMustBeEnabledOnCompanyCustomerConversion"
					
		EmailPaymentRequestNotice
			if (EmailPaymentRequestNotice)
				constraint (CompanyCustomerConversion.EmailPaymentRequestNotice)
					"EmailFunctionalityForPaymentRequestNoticeMustBeEnabledOnCompanyCustomerConversion"
					
		EmailBillingInvoice
			if (EmailBillingInvoice)
				constraint (CompanyCustomerConversion.EmailBillingInvoice)
					"EmailFunctionalityForBillingInvoiceMustBeEnabledOnCompanyCustomerConversion"
		
		EmailEFTNotificationPrint
			if (EmailEFTNotificationPrint)
				constraint (CompanyCustomerConversion.EmailEFTNotificationPrint)
					"EmailFunctionalityForEFTNotificationPrintMustBeEnabledOnCompanyCustomerConversion"				
					
		EmailReceivableInvoice
			if (EmailReceivableInvoice)
				constraint (CompanyCustomerConversion.EmailReceivableInvoice)
					"EmailFunctionalityForReceivableInvoiceMustBeEnabledOnCompanyCustomerConversion"
					
		EmailSubleaseBillingInvoice
			if (EmailSubleaseBillingInvoice)
				constraint (CompanyCustomerConversion.EmailSubleaseBillingInvoice)
					"EmailFunctionalityForSubleaseBillingInvoiceMustBeEnabledOnCompanyCustomerConversion"

		EmailPaymentReceipt
			if (EmailPaymentReceipt)
				constraint (CompanyCustomerConversion.EmailPaymentReceipt)
					"EmailFunctionalityForPaymentReceiptMustBeEnabledOnCompanyCustomerConversion"

		EmailPrepaymentReceipt
			if (EmailPrepaymentReceipt)
				constraint (CompanyCustomerConversion.EmailPrepaymentReceipt)
					"EmailFunctionalityForPrepaymentReceiptMustBeEnabledOnCompanyCustomerConversion"

	Conditions
		ShowIDMEmailDistribution
			restricted
			when (CompanyCustomerConversion.EmailBillingInvoice
			or	Company.UseIDM)

		NoCompanyCustomerContactWithBillingInvoiceEmail
			restricted
			when (not OtherBillingInvoiceEmailOnlyContactsRel exists
			and  (action type.Delete 
			or   (EmailBillingInvoice changed and !EmailBillingInvoice)))

		NoCompanyCustomerContactWithBasicDunningLetterEmail
			restricted
			when (not OtherBasicDunningLetterEmailOnlyContactsRel exists
			and  (action type.Delete 
			or   (EmailBasicDunningLetter changed and !EmailBasicDunningLetter)))

		NoCompanyCustomerContactWithAdvancedDunningLetterEmail
			restricted
			when (not OtherAdvancedDunningLetterEmailOnlyContactsRel exists
			and  (action type.Delete 
			or   (EmailAdvancedDunningLetter changed and !EmailAdvancedDunningLetter)))

		NoCompanyCustomerContactWithReceivablesStatementEmail
			restricted
			when (not OtherReceivablesStatementEmailOnlyContactsRel exists
			and  (action type.Delete 
			or   (EmailReceivablesStatement changed and !EmailReceivablesStatement)))

		NoCompanyCustomerContactWithPaymentRequestNoticeEmail
			restricted
			when (not OtherPaymentRequestNoticeEmailOnlyContactsRel exists
			and  (action type.Delete 
			or   (EmailPaymentRequestNotice changed and !EmailPaymentRequestNotice)))

		NoCompanyCustomerContactWithEFTNotificationPrintEmail
			restricted
			when (not OtherEFTNotificationPrintEmailOnlyContactsRel exists
			and  (action type.Delete 
			or   (EmailEFTNotificationPrint changed and !EmailEFTNotificationPrint)))

		NoCompanyCustomerContactWithReceivableInvoiceEmail
			restricted
			when (not OtherReceivableInvoiceEmailOnlyContactsRel exists 
			and (action type.Delete 
			or (EmailReceivableInvoice changed and !EmailReceivableInvoice)))

		NoCompanyCustomerContactWithPaymentReceiptEmail
			restricted
			when (not OtherPaymentReceiptEmailOnlyContactsRel exists 
			and (action type.Delete 
			or (EmailPaymentReceipt changed and !EmailPaymentReceipt)))

		NoCompanyCustomerContactWithPrepaymentReceiptEmail
			restricted
			when (not OtherPrepaymentReceiptEmailOnlyContactsRel exists 
			and (action type.Delete 
			or (EmailPrepaymentReceipt changed and !EmailPrepaymentReceipt)))

		NoCompanyCustomerContactWithSubleaseBillingInvoiceEmail
			restricted
			when (not OtherSubleaseBillingInvoiceEmailOnlyContactsRel exists 
			and (action type.Delete 
			or (EmailSubleaseBillingInvoice changed and !EmailSubleaseBillingInvoice)))

	Relations
		OtherBillingInvoiceEmailOnlyContactsRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
			Instance Selection
				where (related.EmailBillingInvoice
				and	related.CompanyCustomerContactImport != CompanyCustomerContactImport)

		OtherBasicDunningLetterEmailOnlyContactsRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
			Instance Selection
				where (related.EmailBasicDunningLetter
				and	related.CompanyCustomerContactImport != CompanyCustomerContactImport)

		OtherAdvancedDunningLetterEmailOnlyContactsRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
			Instance Selection
				where (related.EmailAdvancedDunningLetter
				and	related.CompanyCustomerContactImport != CompanyCustomerContactImport)

		OtherReceivablesStatementEmailOnlyContactsRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
			Instance Selection
				where (related.EmailReceivablesStatement
				and	related.CompanyCustomerContactImport != CompanyCustomerContactImport)

		OtherPaymentRequestNoticeEmailOnlyContactsRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
			Instance Selection
				where (related.EmailPaymentRequestNotice
				and	related.CompanyCustomerContactImport != CompanyCustomerContactImport)

		OtherEFTNotificationPrintEmailOnlyContactsRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
			Instance Selection
				where (related.EmailEFTNotificationPrint
				and	related.CompanyCustomerContactImport != CompanyCustomerContactImport)

		OtherReceivableInvoiceEmailOnlyContactsRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
			Instance Selection
				where (related.EmailReceivableInvoice
				and related.CompanyCustomerContactImport != CompanyCustomerContactImport)

		OtherPaymentReceiptEmailOnlyContactsRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
			Instance Selection
				where (related.EmailPaymentReceipt
				and related.CompanyCustomerContactImport != CompanyCustomerContactImport)

		OtherPrepaymentReceiptEmailOnlyContactsRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
			Instance Selection
				where (related.EmailPrepaymentReceipt
				and related.CompanyCustomerContactImport != CompanyCustomerContactImport)

		OtherSubleaseBillingInvoiceEmailOnlyContactsRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
			Instance Selection
				where (related.EmailSubleaseBillingInvoice
				and related.CompanyCustomerContactImport != CompanyCustomerContactImport)

	Rule Blocks
		ValidateAndUpdateEmailCompanyCustomerConversionContactsOnly
			initialize LocalDocumentTypes
			initialize LocalHasConfirmationMessage

			if (CompanyCustomerConversion.BillingInvoiceEmailOption.ContactsOnly)
				LocalBillingInvoiceEmailOnly = true
			if (NoCompanyCustomerContactWithBillingInvoiceEmail and LocalBillingInvoiceEmailOnly)
				if (LocalDocumentTypes entered) 
					LocalDocumentTypes += ", "
				LocalDocumentTypes += "Billing Invoice"
				LocalBillingInvoiceEmailOnly = false
				LocalHasConfirmationMessage = true

			LocalBasicDunningLetterEmailOnly = CompanyCustomerConversion.BasicDunningLetterEmailContactsOnly
			if (NoCompanyCustomerContactWithBasicDunningLetterEmail and LocalBasicDunningLetterEmailOnly)
				if (LocalDocumentTypes entered) 
					LocalDocumentTypes += ", "
				LocalDocumentTypes += "Basic Dunning Letter"
				LocalBasicDunningLetterEmailOnly = false
				LocalHasConfirmationMessage = true

			LocalAdvancedDunningLetterEmailOnly = CompanyCustomerConversion.AdvancedDunningLetterEmailContactsOnly
			if (NoCompanyCustomerContactWithAdvancedDunningLetterEmail and LocalAdvancedDunningLetterEmailOnly)
				if (LocalDocumentTypes entered) 
					LocalDocumentTypes += ", "
				LocalDocumentTypes += "Advanced Dunning Letter"
				LocalAdvancedDunningLetterEmailOnly = false
				LocalHasConfirmationMessage = true

			LocalReceivablesStatementEmailOnly = CompanyCustomerConversion.ReceivablesStatementEmailContactsOnly
			if (NoCompanyCustomerContactWithReceivablesStatementEmail and LocalReceivablesStatementEmailOnly)
				if (LocalDocumentTypes entered) 
					LocalDocumentTypes += ", "
				LocalDocumentTypes += "Receivables Statement"
				LocalReceivablesStatementEmailOnly = false
				LocalHasConfirmationMessage = true

			LocalPaymentRequestNoticeEmailOnly = CompanyCustomerConversion.PaymentRequestNoticeEmailContactsOnly
			if (NoCompanyCustomerContactWithPaymentRequestNoticeEmail and LocalPaymentRequestNoticeEmailOnly)
				if (LocalDocumentTypes entered) 
					LocalDocumentTypes += ", "
				LocalDocumentTypes += "Payment Request Notice"
				LocalPaymentRequestNoticeEmailOnly = false
				LocalHasConfirmationMessage = true

			LocalEFTNotificationPrintEmailOnly = CompanyCustomerConversion.EFTNotificationPrintEmailContactsOnly
			if (NoCompanyCustomerContactWithEFTNotificationPrintEmail and LocalEFTNotificationPrintEmailOnly)
				if (LocalDocumentTypes entered) 
					LocalDocumentTypes += ", "
				LocalDocumentTypes += "EFT Notification Print"
				LocalEFTNotificationPrintEmailOnly = false
				LocalHasConfirmationMessage = true

			LocalReceivableInvoiceEmailOnly = CompanyCustomerConversion.ReceivableInvoiceEmailContactsOnly
			if (NoCompanyCustomerContactWithReceivableInvoiceEmail and LocalReceivableInvoiceEmailOnly)
				if (LocalDocumentTypes entered) 
					LocalDocumentTypes += ", "
				LocalDocumentTypes += "Receivable Invoice"
				LocalReceivableInvoiceEmailOnly = false
				LocalHasConfirmationMessage = true

			LocalPaymentReceiptEmailOnly = CompanyCustomerConversion.PaymentReceiptEmailContactsOnly
			if (NoCompanyCustomerContactWithPaymentReceiptEmail and LocalPaymentReceiptEmailOnly)
				if (LocalDocumentTypes entered) 
					LocalDocumentTypes += ", "
				LocalDocumentTypes += "Payment Receipt Letter"
				LocalPaymentReceiptEmailOnly = false
				LocalHasConfirmationMessage = true

			LocalPrepaymentReceiptEmailOnly = CompanyCustomerConversion.PrepaymentReceiptEmailContactsOnly
			if (NoCompanyCustomerContactWithPrepaymentReceiptEmail and LocalPrepaymentReceiptEmailOnly)
				if (LocalDocumentTypes entered) 
					LocalDocumentTypes += ", "
				LocalDocumentTypes += "Prepayment Receipt Letter"
				LocalPrepaymentReceiptEmailOnly = false
				LocalHasConfirmationMessage = true

			LocalSubleaseBillingInvoiceEmailOnly = CompanyCustomerConversion.SubleaseBillingInvoiceEmailContactsOnly
			if (NoCompanyCustomerContactWithSubleaseBillingInvoiceEmail and LocalSubleaseBillingInvoiceEmailOnly)
				if (LocalDocumentTypes entered) 
					LocalDocumentTypes += ", "
				LocalDocumentTypes += "Sublease Billing Invoice"
				LocalSubleaseBillingInvoiceEmailOnly = false
				LocalHasConfirmationMessage = true

			if (LocalHasConfirmationMessage)
				confirmation required
					"To_Email_OptionWillBeSetTo_Company_CustomerAnd_ContactsFor_<LocalDocumentTypes>.DoYouWantToContinue?"
				
				invoke Update CompanyCustomerConversion
					if (not LocalBillingInvoiceEmailOnly and this instance.CompanyCustomerConversion.BillingInvoiceEmailOption.ContactsOnly)
						initialize invoked.BillingInvoiceEmailOption
					invoked.BasicDunningLetterEmailContactsOnly 		= LocalBasicDunningLetterEmailOnly
					invoked.AdvancedDunningLetterEmailContactsOnly 		= LocalAdvancedDunningLetterEmailOnly
					invoked.ReceivablesStatementEmailContactsOnly		= LocalReceivablesStatementEmailOnly
					invoked.PaymentRequestNoticeEmailContactsOnly		= LocalPaymentRequestNoticeEmailOnly
					invoked.EFTNotificationPrintEmailContactsOnly		= LocalEFTNotificationPrintEmailOnly
					invoked.ReceivableInvoiceEmailContactsOnly 			= LocalReceivableInvoiceEmailOnly
					invoked.PaymentReceiptEmailContactsOnly 			= LocalPaymentReceiptEmailOnly
					invoked.PrepaymentReceiptEmailContactsOnly 			= LocalPrepaymentReceiptEmailOnly
					invoked.SubleaseBillingInvoiceEmailContactsOnly 	= LocalSubleaseBillingInvoiceEmailOnly
	
	Actions
		Create is an Action
		Update is an Action
			Entrance Rules
				include ValidateAndUpdateEmailCompanyCustomerConversionContactsOnly

		Delete is an Action
			Entrance Rules
				include ValidateAndUpdateEmailCompanyCustomerConversionContactsOnly
		
		FastDelete is a Delete Action
			restricted
			bypass relational integrity rules
