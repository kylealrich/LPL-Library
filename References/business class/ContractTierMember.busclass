ContractTierMember is a BusinessClass
	owned by po
	prefix is TPH

	Ontology
		symbolic key is ContractTierMember

	Persistent Fields
		Tier								is a ContractTier
		Released							is Boolean
   		PurchaseMethod

	Local Fields
		LocalIccompany 										is like InventoryCompany
		LocalManufacturerInfo								is a Manufacturer
		LocalCommodityCode    								is a CommodityCode
		LocalMajorPurchasingClass							is a MajorPurchasingClass
		LocalMinorPurchasingClass							is a MinorPurchasingClass
		LocalUnspscCode										is a UNSPSCCode
		LocalContractTierKey								is like ContractTier
		LocalContractTierQualifier							is a ContractTierQualifier
		LocalContractTierMemberQualifier					is a ContractTierMemberQualifier
 		LocalContractTierMemberQualifierPurchaseOrderLine	is a ContractTierMemberQualifierPurchaseOrderLine
		LocalContractGroup                                  is like ContractGroup
		LocalParticipantGroup                               is like ParticipantGroup
		LocalItemCategory									is Numeric 1
			States
				CommodityCode									value is 1
				ManufacturerInformation							value is 2
				PurchasingClass									value is 3
				UNSPSCCode										value is 4
		LocalItem											is an Item
	 	LocalPoNumber										is like PurchaseOrder
	 	LocalPoRelease										is Numeric size 4
	 	LocalPoCode											is AlphaUpper size 4
	 	LocalLineNbr										is Numeric size 6
	 	LocalLineSeq 										is Numeric size 4
		LocalDisplayOrder									is a DisplayOrder
		LocalCompany										is like InventoryCompany
		LocalInventoryLocation      						is like InventoryLocation
		LocalRequestingLocation     						is like RequestingLocation
		LocalPricingGroup           						is like PricingGroup
		LocalPurchaseFrom           						is AlphaUpper size 15
		LocalOldCompany 									is like InventoryCompany
		LocalOldInventoryLocation  							is like InventoryLocation
		LocalOldRequestingLocation 							is like RequestingLocation
		LocalOldPricingGroup                                is like PricingGroup
		LocalFromGroupLine                                  is Boolean

	Transient Fields
		TransientUpdateSpecials                             is Boolean
		FromImport                                          is Boolean
		TransientFromUpdateParticipants                     is Boolean

	Derived Fields
		CompanyName is a StringField 
	 		type is like Name
			holds pii
			ContractTierMember.Company.Name
		LocationName is a StringField 
	 		type is like Name
			holds pii
			ContractTierMember.Location.Name
		RequestingLocationName is a StringField 
	 		type is like Name
			holds pii
			ContractTierMember.RequestingLocation.Name
		PricingGroupDescription is a StringField
			type is Alpha size 60
			ContractTierMember.PricingGroup.Description
		NextTierDisplayOrder is a ComputeField
			type is Numeric 8
			restricted
			(Tier.DisplayOrder - 1)
		NoneMessage is a LabelField
			restricted
			"NONE"
		NextTierToAchieve is a DerivedField
			type is AlphaUpper size 4
			restricted
			LocalDisplayOrder	= (Tier.DisplayOrder - 1)
			if (HasNextHigherTier)
				if (first NextHigherTierRel.TierMarkupDiscount.Discount)
					if (first NextHigherTierRel.TierPricingAmtPct.TierPercent entered)
						if (Tier.TierMarkupDiscount.Discount)
							if (Tier.TierPricingAmtPct.TierPercent entered)
								if (first NextHigherTierRel.TierPricingAmtPct.TierPercent > Tier.TierPricingAmtPct.TierPercent)
									return first NextHigherTierRel.ContractTier
					else
					if (first NextHigherTierRel.TierPricingAmtPct.TierCost entered)
						if (Tier.TierMarkupDiscount.Discount)
							if (Tier.TierPricingAmtPct.TierCost entered)
								if (first NextHigherTierRel.TierPricingAmtPct.TierCost > Tier.TierPricingAmtPct.TierCost)
									return first NextHigherTierRel.ContractTier
				else
				if (first NextHigherTierRel.TierMarkupDiscount.Markup)
					if (first NextHigherTierRel.TierPricingAmtPct.TierPercent entered)
						if (Tier.TierMarkupDiscount.Markup)
							if (Tier.TierPricingAmtPct.TierPercent entered)
								if (first NextHigherTierRel.TierPricingAmtPct.TierPercent < Tier.TierPricingAmtPct.TierPercent)
									return first NextHigherTierRel.ContractTier
					else
					if (first NextHigherTierRel.TierPricingAmtPct.TierCost entered)
						if (Tier.TierMarkupDiscount.Markup)
							if (Tier.TierPricingAmtPct.TierCost entered)
								if (first NextHigherTierRel.TierPricingAmtPct.TierCost < Tier.TierPricingAmtPct.TierCost)
									return first NextHigherTierRel.ContractTier
				else
				if (first NextHigherTierRel.TierMarkupDiscount.Fixed)
					if (first NextHigherTierRel.TierPricingAmtPct.TierCost entered)
						if (Tier.TierMarkupDiscount.Fixed)
							if (Tier.TierPricingAmtPct.TierCost entered)
								if (first NextHigherTierRel.TierPricingAmtPct.TierCost < Tier.TierPricingAmtPct.TierCost)
									return first NextHigherTierRel.ContractTier

			LocalDisplayOrder	= (Tier.DisplayOrder + 1)
			if (HasNextHigherTier)
				if (first NextHigherTierRel.TierMarkupDiscount.Discount)
					if (first NextHigherTierRel.TierPricingAmtPct.TierPercent entered)
						if (Tier.TierMarkupDiscount.Discount)
							if (Tier.TierPricingAmtPct.TierPercent entered)
								if (first NextHigherTierRel.TierPricingAmtPct.TierPercent > Tier.TierPricingAmtPct.TierPercent)
									return first NextHigherTierRel.ContractTier
								else
									return NoneMessage
							else
								return "****"
						else
							return "****"
					else
					if (Tier.TierMarkupDiscount.Discount)
						if (Tier.TierPricingAmtPct.TierCost entered)
							if (first NextHigherTierRel.TierPricingAmtPct.TierCost > Tier.TierPricingAmtPct.TierCost)
								return first NextHigherTierRel.ContractTier
							else
								return NoneMessage
						else
							return "****"
					else
						return "****"
				else
				if (first NextHigherTierRel.TierMarkupDiscount.Markup)
					if (first NextHigherTierRel.TierPricingAmtPct.TierPercent entered)
						if (Tier.TierMarkupDiscount.Markup)
							if (Tier.TierPricingAmtPct.TierPercent entered)
								if (first NextHigherTierRel.TierPricingAmtPct.TierPercent < Tier.TierPricingAmtPct.TierPercent)
									return first NextHigherTierRel.ContractTier
								else
									return NoneMessage
							else
								return "****"
						else
							return "****"
					else
					if (Tier.TierMarkupDiscount.Markup)
						if (Tier.TierPricingAmtPct.TierCost entered)
							if (first NextHigherTierRel.TierPricingAmtPct.TierCost < Tier.TierPricingAmtPct.TierCost)
								return first NextHigherTierRel.ContractTier
							else
								return NoneMessage
						else
							return "****"
					else
						return "****"
				else
				if (Tier.TierMarkupDiscount.Fixed)
					if (first NextHigherTierRel.TierPricingAmtPct.TierCost < Tier.TierPricingAmtPct.TierCost)
						return first NextHigherTierRel.ContractTier
					else
						return NoneMessage
				else
					return "****"

			return NoneMessage

		UpdateCompletionMessageShort is a MessageField
			restricted
			"UpdateOfContractTierMemberComplete"

		UpdateCompletionMessageLong is a MessageField
			restricted
			"UpdateOfContractTierMemberComplete;CheckScheduledActionsForCompletionOf'UpdateTierOnLineMembers'SetAction"

		UpdateCompletionMessage is a DerivedField
			type is Text
			restricted
			if (Tier changed
			and MemberHdToLineRel exists)
				return UpdateCompletionMessageLong
			else
				return UpdateCompletionMessageShort

		DerivedContractImport is a DerivedField
			type is like Contract
			return Contract.DerivedGPOContract

	Conditions
		CompanyOnly
			when (ContractTierMember.Location = blank
			and	  ContractTierMember.RequestingLocation = blank
			and   ContractTierMember.Company entered)

		CompanyOrInventoryLocation
			when (ContractTierMember.Company entered
			and   ContractTierMember.RequestingLocation = blank)
		
		HasLocOrReqLoc
			restricted
			when (ContractTierMember.Location != blank
			or    ContractTierMember.RequestingLocation != blank)

		CannotUpdateGPO
			restricted
			when (ContractGroup.DoNotAllowGPOUpdates
			and   Contract.HasGPORelatedContract
			and   ContractGroup.GPOIsHealthTrust2021)

		LocationType
			restricted
			when (HasLocOrReqLoc
			or    ContractTierMember.PricingGroup.LocationPricingGroup)
		CompanyType
			restricted
			when (CompanyOnly
			or    ContractTierMember.PricingGroup.CompanyPricingGroup)

		UnReleased
			restricted
			when (ContractTierMember.Released = false)

		ContractNotClosed
			when (Contract.NotClosed)

		MemberReleased
			restricted
			when (ContractTierMember.Released)

		CanDelete
			restricted
			when ((Contract.HasBeenActivated
			and   !Contract.AnyContractPolinesByContract)
			or   (!Contract.HasBeenActivated))

		CompanyLocationMember
			restricted
			when (ContractTierMember.Location	entered)

		CompanyRqLocMember
			restricted
			when (ContractTierMember.RequestingLocation entered)

		PricingGroupMember
			restricted
			when (ContractTierMember.PricingGroup entered)

		LocationInactive
			restricted
			when (CompanyLocationMember
			and   !InventoryLocationRel.IsActive)

		RequestingLocationInactive
			restricted
			when (CompanyRqLocMember
			and   ContractTierMember.RequestingLocation.Active = false)

		PricingGroupInactive
			restricted
			when (PricingGroupMember
			and   ContractTierMember.PricingGroup.Active = false)

		HasNextHigherTier
			restricted
			when (NextHigherTierRel exists)

		TierHasQualifierCodes
			restricted
			when (any Tier.ContractTierQualifier set.CodesExist)

		HasPercentBaseQualifiers
			restricted
			when (any Tier.ContractTierQualifier set.PurchaseAmtPct.PurchasePercent > 0)

		NextTierHasBeenReached
			restricted
			when (all Tier.ContractTierQualifier set.NextTierHasBeenReached)

		HasNextTierContractTierMemberQualifiers
			restricted
			when (NextTierContractTierMemberQualifiersRel exists)

		HasNextTierContractTierQualifiers
			restricted
			when (NextTierContractTierQualifiersRel exists)

		PricingTierPoLinesExist
			restricted
			when (POLinesExistPricingTierRel exists)

		PurchaseMethodForDirectBuy
			restricted
			when (PurchaseMethod.FromManufacturer
			or    PurchaseMethod.FromManufacturerAndDistributor)

		PurchaseMethodForDistributor
			restricted
			when (PurchaseMethod.FromDistributor
			or    PurchaseMethod.FromManufacturerAndDistributor)

		NoCostDefaultingTierMembers
			restricted
			when (!CostDefaultingTierMemberRel exists)

		NoCreateDistributorTierMembers
			restricted
			when (!CreateDistributorTierMemberRel exists)

		LinesExist
			restricted
			when (MemberHdToLineRel exists)

		ContractLinesExist
			restricted
			when (SomeContractLinesRel exists)

		CanCreate
			restricted
			when (Contract.IsManufacturerContract
			and   Contract.InProgressOrActive)

		TierMemberExists
			restricted
			when (ContractTierMember.Company entered
			or    ContractTierMember.PricingGroup entered)

		NotContractTemplate
			restricted
			when (!Contract.ContractTemplate)

	Sets
		ByUnReleased
			duplicates
	  		Sort Order
		   		ContractGroup
				Contract
			Instance Selection
				where (UnReleased)

		ByReleased
			duplicates
	  		Sort Order
		   		ContractGroup
				Contract
			Instance Selection
				where (MemberReleased)

	   	ByPurchaseMethod
			Sort Order
				ContractGroup
				Contract
		   		PurchaseMethod
				ContractTierMember

		ByPricingGroup
			Sort Order
				ContractGroup
				ContractTierMember.PricingGroup
				Contract
			Instance Selection
				where (PricingGroupMember)

		ByCompanyFirst 
			Sort Order 
				ContractGroup 
				ContractTierMember.Company
				ContractTierMember.Location
				ContractTierMember.RequestingLocation
				ContractTierMember.PricingGroup 
				Contract 
						
		ByLocation
			Sort Order
				ContractGroup
				Contract
				ContractTierMember.Company
				ContractTierMember.Location
				ContractTierMember.RequestingLocation
			Instance Selection
				where (!PricingGroupMember)

	Relations
		CompanyOnlyRel
			one-to-one relation to ContractTierMember
			Field Mapping uses symbolic key
		  		related.ContractGroup				  			= ContractGroup
		   		related.Contract					  			= Contract
		   		related.ContractTierMember.Company  			= ContractTierMember.Company
		   		related.ContractTierMember.Location 			= blank
		   		related.ContractTierMember.RequestingLocation  	= blank
		   		related.ContractTierMember.PricingGroup         = blank

		CompanyActiveLocationRel 
			one-to-many relation to InventoryLocation 
			Field Mapping uses symbolic key 
				related.Company 									= ContractTierMember.Company 
			Instance Selection 
				where (related.Status = 0)	

		CompanyActiveRequestingLocationRel 
			one-to-many relation to RequestingLocation 
			Field Mapping uses symbolic key 
				related.Company 									= ContractTierMember.Company 
			Instance Selection 
				where (related.Active)

		LocalInventoryCompanyRel 
			one-to-one relation to InventoryCompany 
			Field Mapping uses symbolic key 
				related.Company 		= LocalCompany

		LocalPricingGroupRel 
			one-to-one relation to PricingGroup 
			Field Mapping uses symbolic key 
				related.ContractGroup   = ContractGroup
				related.PricingGroup    = LocalPricingGroup		

		LocalContractLocationRel 
			one-to-one relation to ContractAndLineLocation
			Field Mapping uses ByLocationOnly 
				related.ContractGroup                               = ContractGroup
				related.Contract                                    = Contract
				related.ContractAndLineLocation.Company				= ContractTierMember.Company
				related.ContractAndLineLocation.Location 			= LocalInventoryLocation
	
		LocalContractRequestingLocationRel 
			one-to-one relation to ContractAndLineLocation
			Field Mapping uses ByRequestingLocationOnly 
				related.ContractGroup                               = ContractGroup
				related.Contract                                    = Contract
				related.ContractAndLineLocation.Company				= ContractTierMember.Company
				related.ContractAndLineLocation.RequestingLocation  = LocalRequestingLocation

		InventoryLocationRel
			one-to-one relation to InventoryLocation
			Field Mapping uses symbolic key
				related.Company                                 = ContractTierMember.Company
				related.InventoryLocation                       = ContractTierMember.Location

		LocReqLocRel
			one-to-many relation to ContractTierMember
			Field Mapping uses symbolic key
		  		related.ContractGroup 				  = ContractGroup
		   		related.Contract	  				  = Contract
		   	Instance Selection
		   		where ((related.ContractTierMember.Company             = LocalIccompany)
		   		and    (related.ContractTierMember.Location           != blank
				or      related.ContractTierMember.RequestingLocation != blank))

		MfgContractMemberPivotRel
			one-to-one relation to MfgContractMemberPivot
			Field Mapping uses symbolic key
				related.ContractGroup                									= ContractGroup
				related.ManufacturerContractPivot      									= Contract
				related.MfgContractMemberPivot.ParticipantLocation.Company  			= ContractTierMember.Company
				related.MfgContractMemberPivot.ParticipantLocation.Location 			= ContractTierMember.Location
				related.MfgContractMemberPivot.ParticipantLocation.RequestingLocation	= ContractTierMember.RequestingLocation
				related.MfgContractMemberPivot.ParticipantLocation.PricingGroup         = ContractTierMember.PricingGroup

		OtherContractTierMemberRel
			one-to-many relation to ContractTierMember
			Field Mapping uses symbolic key
				related.ContractGroup = ContractGroup
				related.Contract      = Contract
			Instance Selection
				where (related.UniqueID  					!= UniqueID
				and    related.ContractTierMember.Company    = ContractTierMember.Company)

		CostDefaultingTierMemberRel
			one-to-many relation to ContractTierMember
			Field Mapping uses symbolic key
				related.ContractGroup                 = ContractGroup
				related.Contract                      = Contract
			Instance Selection
				where ((related.ContractTierMember            != ContractTierMember)
				and    (related.PurchaseMethod.FromManufacturer
				or      related.PurchaseMethod.FromManufacturerAndDistributor))

		UpdateParticipantRel
			one-to-one relation to ContractTierMember
			Field Mapping uses symbolic key
				related.ContractGroup                 			= ContractGroup
				related.Contract                      			= Contract
				related.ContractTierMember.Company  			= LocalCompany
		   		related.ContractTierMember.Location 			= LocalInventoryLocation
		   		related.ContractTierMember.RequestingLocation  	= LocalRequestingLocation
		   		related.ContractTierMember.PricingGroup         = LocalPricingGroup

		OldTierMemberRel
			one-to-one relation to ContractTierMember
			Field Mapping uses symbolic key
				related.ContractGroup                 			= ContractGroup
				related.Contract                      			= Contract
				related.ContractTierMember.Company  			= LocalOldCompany
		   		related.ContractTierMember.Location 			= LocalOldInventoryLocation
		   		related.ContractTierMember.RequestingLocation  	= LocalOldRequestingLocation
		   		related.ContractTierMember.PricingGroup         = LocalOldPricingGroup

		CreateDistributorTierMemberRel
			one-to-many relation to ContractTierMember
			Field Mapping uses symbolic key
				related.ContractGroup                 = ContractGroup
				related.Contract                      = Contract
			Instance Selection
				where ((related.ContractTierMember            != ContractTierMember)
				and    (related.PurchaseMethod.FromDistributor
				or      related.PurchaseMethod.FromManufacturerAndDistributor))

		MemberToTierRel
			one-to-one relation to ContractTier
			Field Mapping uses symbolic key
		  		related.ContractGroup = ContractGroup
		   		related.Contract	  = Contract
		   		related.ContractTier  = Tier

		DefaultTierRel
			one-to-many relation to ContractTier
			Field Mapping uses symbolic key
				related.ContractGroup = ContractGroup
		   		related.Contract	  = Contract
		   	Instance Selection
		   		where (related.DefaultTier)

		TierQualifierRel 
			one-to-many relation to ContractTierQualifier
			Field Mapping uses symbolic key
				related.ContractGroup = ContractGroup
		   		related.Contract	  = Contract
		   		related.ContractTier  = Tier

		MemberHdToLineRel
			one-to-many relation to ContractLineMember
			Field Mapping uses symbolic key
		  		related.ContractGroup = ContractGroup
		   		related.Contract	  = Contract
		   	Instance Selection
		   		where (related.ContractLineMember.Company	  			= ContractTierMember.Company
		   		and    related.ContractLineMember.Location  			= ContractTierMember.Location
		   		and    related.ContractLineMember.RequestingLocation 	= ContractTierMember.RequestingLocation
		   		and    related.ContractLineMember.PricingGroup          = ContractTierMember.PricingGroup
		   		and    related.ContractLineMember.ManufacturerContract  = Contract)

		MemberHdToTierLnRel
			one-to-many relation to ContractLineTierMemberQual
			Field Mapping uses symbolic key
		  		related.ContractGroup = ContractGroup
		   		related.Contract	  = Contract
		   	Instance Selection
		   		where (related.ContractLineMember.Company	  			= ContractTierMember.Company
		   		and	   related.ContractLineMember.Location  			= ContractTierMember.Location
		   		and	   related.ContractLineMember.RequestingLocation	= ContractTierMember.RequestingLocation
		   		and	   related.ContractLineMember.ManufacturerContract 	= Contract)


		SomeContractLinesRel
			one-to-many relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup = ContractGroup
		   		related.Contract	  = Contract

		PricingOldTierRel
			one-to-many relation to ContractDistributorPricingMember
			Field Mapping uses ByMfgTier
		  		related.ContractGroup								 		  = ContractGroup
		   		related.MfgContractTierInfo.MfgContract				 		  = Contract
		   		related.ContractDistributorPricingMember.Company	 		  = ContractTierMember.Company
		   		related.ContractDistributorPricingMember.Location	 		  = ContractTierMember.Location
		   		related.ContractDistributorPricingMember.RequestingLocation	  = ContractTierMember.RequestingLocation
		   		related.ContractDistributorPricingMember.PricingGroup         = ContractTierMember.PricingGroup
		   		related.ContractDistributorPricingMember.ManufacturerContract = Contract
		   	Instance Selection
		   		where (related.Contract.InProgressOrActive)

		PricingTierRel
			one-to-many relation to ContractDistributorPricingMember
			Field Mapping uses ByMfgTier
		  		related.ContractGroup								 		= ContractGroup
		   		related.MfgContractTierInfo.MfgContract				 		= Contract
		   		related.ContractDistributorPricingMember.Company	 		= ContractTierMember.Company
		   		related.ContractDistributorPricingMember.Location	 		= ContractTierMember.Location
		   		related.ContractDistributorPricingMember.RequestingLocation	= ContractTierMember.RequestingLocation
		  		related.ContractDistributorPricingMember.PricingGroup       = ContractTierMember.PricingGroup
		  		related.ContractDistributorPricingMember.ManufacturerContract = Contract
		   		related.MfgContractTierInfo.Tier					 		= Tier
		   	Instance Selection
		   		where (related.Contract.InProgressOrActive)

		POLinesExistPricingTierRel
			one-to-many relation to ContractDistributorPricingMember
			Field Mapping uses ByMfgTier
		  		related.ContractGroup								 		= ContractGroup
		   		related.MfgContractTierInfo.MfgContract				 		= Contract
		   		related.ContractDistributorPricingMember.Company	 		= ContractTierMember.Company
		   		related.ContractDistributorPricingMember.Location	 		= ContractTierMember.Location
		   		related.ContractDistributorPricingMember.RequestingLocation	= ContractTierMember.RequestingLocation
		  		related.ContractDistributorPricingMember.PricingGroup       = ContractTierMember.PricingGroup
		  		related.ContractDistributorPricingMember.ManufacturerContract = Contract
		   		related.MfgContractTierInfo.Tier					 		= Tier
		   	Instance Selection
		   		where (related.Contract.HasBeenActivated
		   		and    related.Contract.AnyContractPolinesByContract)

		ContractTierMemberQualifierPurchaseOrderLineRel
			one-to-one relation to ContractTierMemberQualifierPurchaseOrderLine
			Field Mapping uses symbolic key
				related.ContractGroup									= ContractGroup
				related.Contract										= Contract
				related.ContractTierMember								= ContractTierMember
				related.ContractTier									= LocalContractTierKey
				related.ContractTierQualifier							= LocalContractTierQualifier
				related.ContractTierMemberQualifier						= blank
				related.ContractTierMemberQualifierPurchaseOrderLine	= LocalContractTierMemberQualifierPurchaseOrderLine

		ContractTierMemberPurchaseOrderLinesRel
			one-to-many relation to ContractTierMemberQualifierPurchaseOrderLine
			Field Mapping uses symbolic key
				related.ContractGroup				= ContractGroup
				related.Contract					= Contract
				related.ContractTierMember			= ContractTierMember

		ContractTierMemberQualifierPurchaseOrderLinesRel
			one-to-many relation to ContractTierMemberQualifierPurchaseOrderLine
			Field Mapping uses symbolic key
				related.ContractGroup				= ContractGroup
				related.Contract					= Contract
				related.ContractTierMember			= ContractTierMember
				related.ContractTier				= LocalContractTierKey
				related.ContractTierQualifier		= LocalContractTierQualifier

		ContractTierMemberQualifierRel
			one-to-one relation to ContractTierMemberQualifier
			Field Mapping uses symbolic key
				related.ContractGroup				= ContractGroup
				related.Contract					= Contract
				related.ContractTierMember			= ContractTierMember
				related.ContractTier				= LocalContractTierKey
				related.ContractTierQualifier		= LocalContractTierQualifier

		ContractTierMemberQualifierPurchasesPiePiecesRel
			one-to-many relation to ContractTierMemberQualifierPurchasesPiePiece
			Field Mapping uses symbolic key
				related.ContractGroup				= ContractGroup
				related.Contract					= Contract
				related.ContractTierMember			= ContractTierMember
				related.ContractTier				= LocalContractTierKey
				related.ContractTierQualifier		= LocalContractTierQualifier

		PolineFactsCompanyQualifierCodesRel
			one-to-many relation to PolineFact
			Field Mapping uses ByCompanyItem
				related.PurchasingCompany				= ContractTierMember.Company
				related.CmContract				= Contract
			Instance Selection
				where ((LocalManufacturerInfo not entered
				or      LocalManufacturerInfo.ManufacturerCode	= related.ManufacturerCode)
				and    (LocalCommodityCode not entered
				or      LocalCommodityCode.Segment[1]			= related.CommodityCode.Segment[1])
				and    (LocalMajorPurchasingClass not entered
				or      LocalMajorPurchasingClass				= related.PurchMajcl)
				and     LocalUnspscCode not entered
				or     (LocalUnspscCode.UNSPSCSegment			= related.UNSPSCCode.UNSPSCSegment))

		PolineFactsCompanyLocationQualifierCodesRel
			one-to-many relation to PolineFact
			Field Mapping uses ByCompLocItem
				related.PurchasingCompany				= ContractTierMember.Company
				related.Location				= ContractTierMember.Location
				related.CmContract				= Contract
			Instance Selection
				where ((LocalManufacturerInfo not entered
				or      LocalManufacturerInfo.ManufacturerCode	= related.ManufacturerCode)
				and    (LocalCommodityCode not entered
				or      LocalCommodityCode.Segment[1]			= related.CommodityCode.Segment[1])
				and    (LocalMajorPurchasingClass not entered
				or      LocalMajorPurchasingClass				= related.PurchMajcl)
				and     LocalUnspscCode not entered
				or     (LocalUnspscCode.UNSPSCSegment				= related.UNSPSCCode.UNSPSCSegment))

		PolineFactsCompanyRequestingLocationQualifierCodesRel
			one-to-many relation to PolineFact
			Field Mapping uses ByCmpRqLcItem
				related.PurchasingCompany				= ContractTierMember.Company
				related.RequestingLocation		= ContractTierMember.RequestingLocation
				related.CmContract				= Contract
			Instance Selection
				where ((LocalManufacturerInfo not entered
				or      LocalManufacturerInfo.ManufacturerCode	= related.ManufacturerCode)
				and    (LocalCommodityCode not entered
				or      LocalCommodityCode.Segment[1]			= related.CommodityCode.Segment[1])
				and    (LocalMajorPurchasingClass not entered
				or      LocalMajorPurchasingClass				= related.PurchMajcl)
				and     LocalUnspscCode not entered
				or     (LocalUnspscCode.UNSPSCSegment				= related.UNSPSCCode.UNSPSCSegment))

		AllPolineFactsCompanyQualifierCodesRel
			one-to-many relation to PolineFact
			Field Mapping uses ByCompanyCodes
				related.PurchasingCompany				= ContractTierMember.Company
			Instance Selection
				where ((LocalManufacturerInfo not entered
				or      LocalManufacturerInfo.ManufacturerCode	= related.ManufacturerCode)
				and    (LocalCommodityCode not entered
				or      LocalCommodityCode.Segment[1]			= related.CommodityCode.Segment[1])
				and    (LocalMajorPurchasingClass not entered
				or      LocalMajorPurchasingClass				= related.PurchMajcl)
				and     LocalUnspscCode not entered
				or     (LocalUnspscCode.UNSPSCSegment				= related.UNSPSCCode.UNSPSCSegment)
				and     related.PoDate							>= Contract.EffectiveDate)

		AllPolineFactsCompanyLocationQualifierCodesRel
			one-to-many relation to PolineFact
			Field Mapping uses ByLocationCodes
				related.PurchasingCompany				= ContractTierMember.Company
				related.Location				= ContractTierMember.Location
			Instance Selection
				where ((LocalManufacturerInfo not entered
				or      LocalManufacturerInfo.ManufacturerCode	= related.ManufacturerCode)
				and    (LocalCommodityCode not entered
				or      LocalCommodityCode.Segment[1]			= related.CommodityCode.Segment[1])
				and    (LocalMajorPurchasingClass not entered
				or      LocalMajorPurchasingClass				= related.PurchMajcl)
				and     LocalUnspscCode not entered
				or     (LocalUnspscCode.UNSPSCSegment				= related.UNSPSCCode.UNSPSCSegment)
				and     related.PoDate							>= Contract.EffectiveDate)

		AllPolineFactsCompanyRequestingLocationQualifierCodesRel
			one-to-many relation to PolineFact
			Field Mapping uses ByReqLocCodes
				related.PurchasingCompany				= ContractTierMember.Company
				related.RequestingLocation		= ContractTierMember.RequestingLocation
			Instance Selection
				where ((LocalManufacturerInfo not entered
				or      LocalManufacturerInfo.ManufacturerCode	= related.ManufacturerCode)
				and    (LocalCommodityCode not entered
				or      LocalCommodityCode.Segment[1]			= related.CommodityCode.Segment[1])
				and    (LocalMajorPurchasingClass not entered
				or      LocalMajorPurchasingClass				= related.PurchMajcl)
				and     LocalUnspscCode not entered
				or     (LocalUnspscCode.UNSPSCSegment				= related.UNSPSCCode.UNSPSCSegment)
				and     related.PoDate							>= Contract.EffectiveDate)

		NextHigherTierRel
			one-to-many relation to ContractTier
			Field Mapping uses ByDisplayOrder
				related.ContractGroup					= ContractGroup
				related.Contract						= Contract
				related.DisplayOrder					= LocalDisplayOrder

  		PolineFactsByItemCompanyRel
  			one-to-many relation to PolineFact
  			Field Mapping uses ByCompanyItem
  				related.PurchasingCompany				= ContractTierMember.Company
  			Instance Selection
  				where (related.PoDate			>= Contract.EffectiveDate
  				and    related.Item				= LocalItem)

  		PolineFactsByItemLocationRel
  			one-to-many relation to PolineFact
  			Field Mapping uses ByCompLocItem
  				related.PurchasingCompany				= ContractTierMember.Company
  				related.Location				= ContractTierMember.Location
 			Instance Selection
  				where (related.PoDate			>= Contract.EffectiveDate
  				and    related.Item				= LocalItem )

  		PolineFactsByItemRqLocRel
  			one-to-many relation to PolineFact
  			Field Mapping uses ByCmpRqLcItem
  				related.PurchasingCompany				= ContractTierMember.Company
  				related.RequestingLocation		= ContractTierMember.RequestingLocation
 			Instance Selection
  				where (related.PoDate			>= Contract.EffectiveDate
  				and    related.Item				= LocalItem)

		PolineFactsCompanyForContractItemRel
			one-to-many relation to PolineFact
			Field Mapping uses ByCompanyItem
				related.PurchasingCompany				= ContractTierMember.Company
				related.CmContract				= Contract
				related.Item					= LocalItem

		PolineFactsCompanyLocationForContractItemRel
			one-to-many relation to PolineFact
			Field Mapping uses ByCompLocItem
				related.PurchasingCompany				= ContractTierMember.Company
				related.Location				= ContractTierMember.Location
				related.CmContract				= Contract
				related.Item					= LocalItem

		PolineFactsCompanyRqLocForContractItemRel
			one-to-many relation to PolineFact
			Field Mapping uses ByCmpRqLcItem
				related.PurchasingCompany				= ContractTierMember.Company
				related.RequestingLocation		= ContractTierMember.RequestingLocation
				related.CmContract				= Contract
				related.Item					= LocalItem

  		ContractTierQualiferCodesByItemCategoryRel
  			one-to-many relation to ContractTierQualifierCode
  			Field Mapping uses ByItemCategory
  				related.ContractGroup					= ContractGroup
  				related.Contract						= Contract
  				related.ContractTier					= LocalContractTierKey
  				related.ContractTierQualifier			= LocalContractTierQualifier

  		ContractTierQualiferCodesByOtherItemCategoriesRel
  			one-to-many relation to ContractTierQualifierCode
  			Field Mapping uses ByItemCategory
  				related.ContractGroup					= ContractGroup
  				related.Contract						= Contract
  				related.ContractTier					= LocalContractTierKey
  				related.ContractTierQualifier			= LocalContractTierQualifier
  			Instance Selection
  				where (related.ItemCategory				!= LocalItemCategory)

		PolineFactsPercentOfAllRel
			one-to-many relation to PolineFactPercentOfAll
			Field Mapping uses PFASET1
				related.Actor							= actor
				related.PurchasingCompany				= ContractTierMember.Company

		PolineFactPercentOfAllRel
			one-to-one relation to PolineFactPercentOfAll
			Field Mapping uses PFASET1
				related.Actor							= actor
				related.PurchasingCompany						= ContractTierMember.Company
				related.PoNumber						= LocalPoNumber
				related.PoRelease						= LocalPoRelease
				related.PoCode							= LocalPoCode
				related.LineNbr							= LocalLineNbr
				related.LineSeq							= LocalLineSeq

		NextTierContractTierMemberQualifiersRel
			one-to-many relation to ContractTierMemberQualifier
			Field Mapping uses symbolic key
				related.ContractGroup					= ContractGroup
				related.Contract						= Contract
				related.ContractTierMember				= ContractTierMember
				related.ContractTier					= NextTierToAchieve

		NextTierContractTierQualifiersRel
			one-to-many relation to ContractTierQualifier
			Field Mapping uses symbolic key
				related.ContractGroup					= ContractGroup
				related.Contract						= Contract
				related.ContractTier					= NextTierToAchieve

		ParticipantGroupRel
			one-to-one relation to ParticipantGroup
			Field Mapping uses symbolic key
				related.ProcurementGroup 				= LocalContractGroup
				related.ParticipantGroup				= LocalParticipantGroup

		ContractTierMemberQualifiersRel                    is a ContractTierMemberQualifier set

		PurchaseOrderLineByLocationRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses ByContractCompanyLocation
				related.ProcurementGroup                = ContractGroup
				related.Contract                        = Contract
				related.Company                         = ContractTierMember.Company
				related.ShipToLocation                  = ContractTierMember.Location

		PurchaseOrderLineByCompanyRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses ByContractCompanyLocation
				related.ProcurementGroup                = ContractGroup
				related.Contract                        = Contract
				related.Company                         = ContractTierMember.Company

		DirectPurchaseFromRel
			one-to-one relation to ContractPurchaseFrom
			Field Mapping uses symbolic key
				related.ContractGroup 													= ContractGroup
				related.Contract														= Contract
				related.ContractPurchaseFrom.ParticipantLocation.Company  				= ContractTierMember.Company
				related.ContractPurchaseFrom.ParticipantLocation.Location 				= ContractTierMember.Location
				related.ContractPurchaseFrom.ParticipantLocation.RequestingLocation		= ContractTierMember.RequestingLocation
				related.ContractPurchaseFrom.ParticipantLocation.PricingGroup           = blank

		PurchaseFromRel
			one-to-one relation to ContractPurchaseFrom
			Field Mapping uses symbolic key
				related.ContractGroup 													= ContractGroup
				related.Contract														= Contract
				related.ContractPurchaseFrom.ParticipantLocation.Company  				= LocalCompany
				related.ContractPurchaseFrom.ParticipantLocation.Location 				= LocalInventoryLocation
				related.ContractPurchaseFrom.ParticipantLocation.RequestingLocation		= LocalRequestingLocation
				related.ContractPurchaseFrom.ParticipantLocation.PricingGroup           = blank

		SupplierPurchaseFromRel
			one-to-many relation to SupplierPurchaseFrom
			Field Mapping uses ByLocationRequestingLocation
				related.SupplierGroup											= ContractGroup
				related.Supplier 												= Contract.Supplier
				related.SupplierPurchaseFrom.ParticipantLocation.Company		= ContractTierMember.Company
				related.SupplierPurchaseFrom.ParticipantLocation.Location		= ContractTierMember.Location
				related.SupplierPurchaseFrom.ParticipantLocation.RequestingLocation	= ContractTierMember.RequestingLocation
			Instance Selection
				where (related.PayablesVendorLocationActive)

		CompanySupplierPurchaseFromRels
			one-to-many relation to SupplierPurchaseFrom
			Field Mapping uses ByCompanyOnly
				related.SupplierGroup											= ContractGroup
				related.Supplier 												= Contract.Supplier
				related.SupplierPurchaseFrom.ParticipantLocation.Company		= LocalCompany
			Instance Selection
				where (related.PayablesVendorLocationActive)

		SupplierPurchFromRel
			one-to-many relation to SupplierPurchaseFrom
			Field Mapping uses symbolic key
				related.SupplierGroup											= ContractGroup
				related.Supplier 												= Contract.Supplier
				related.SupplierPurchaseFrom.ParticipantLocation.Company		= LocalCompany
				related.SupplierPurchaseFrom.ParticipantLocation.Location		= LocalInventoryLocation
				related.SupplierPurchaseFrom.ParticipantLocation.RequestingLocation	= LocalRequestingLocation
				related.SupplierPurchaseFrom.ParticipantLocation.PricingGroup   = blank
			Instance Selection
				where (related.PayablesVendorLocationActive)

		ContractPurchFromRel
			one-to-one relation to ContractPurchaseFrom
			Field Mapping uses ByPurchaseFrom
				related.ContractGroup											= ContractGroup
				related.Contract												= Contract
				related.ContractPurchaseFrom.ParticipantLocation.Company 		= LocalCompany
				related.ContractPurchaseFrom.ParticipantLocation.Location		= LocalInventoryLocation
				related.ContractPurchaseFrom.ParticipantLocation.RequestingLocation	= LocalRequestingLocation

		ContractImportTierMemberRel
			one-to-one relation to ContractImportTierMember
			Field Mapping uses symbolic key
				related.ContractGroup                                           = ContractGroup
				related.ContractImport                                          = DerivedContractImport
				related.ContractImportTierMember.Company                        = ContractTierMember.Company
				related.ContractImportTierMember.Location                       = ContractTierMember.Location
				related.ContractImportTierMember.RequestingLocation             = ContractTierMember.RequestingLocation
				related.ContractImportTierMember.PricingGroup                   = ContractTierMember.PricingGroup

		ContractAndLineLocationRel 
			one-to-many relation to ContractAndLineLocation
			Field Mapping uses ByContractOnly 
				related.ContractGroup                               = ContractGroup
				related.Contract                                    = Contract
				related.ContractAndLineLocation.Company				= ContractTierMember.Company
				related.ContractAndLineLocation.Location 			= ContractTierMember.Location
				related.ContractAndLineLocation.RequestingLocation 	= ContractTierMember.RequestingLocation

		PricingGroupRel
			one-to-one relation to PricingGroup
			Field Mapping uses symbolic key
				related.ContractGroup = ContractGroup
				related.PricingGroup  = ContractTierMember.PricingGroup

	Rule Blocks

		CreateContractPurchaseFrom
			if (PricingGroupMember)
				if (PricingGroupRel.LocationPricingGroup)
					for each PricingGroupRel.PricingGroupRequestingLocationRel
						LocalCompany 			= each.Company
						LocalRequestingLocation	= each.RequestingLocation
						initialize LocalInventoryLocation
						LocalPurchaseFrom   	= first SupplierPurchFromRel.PurchaseFrom

						if (LocalPurchaseFrom entered
						and !PurchaseFromRel exists)
							invoke Create ContractPurchaseFrom
								invoked.AutoCreate													= true
								invoked.ContractGroup 												= ContractGroup
								invoked.Contract	  												= Contract
								invoked.ContractPurchaseFrom.ParticipantLocation.Company    	  	= LocalCompany
								invoked.ContractPurchaseFrom.ParticipantLocation.RequestingLocation	= LocalRequestingLocation
								invoked.SupplierVendor												= Contract.Vendor
								invoked.PurchaseFrom												= LocalPurchaseFrom
								invoked.AllItemTypes												= first SupplierPurchFromRel.AllItemTypes
					for each PricingGroupRel.PricingGroupLocationRel
						LocalCompany 			= each.Company
						LocalInventoryLocation	= each.InventoryLocation
						initialize LocalRequestingLocation
						LocalPurchaseFrom 		= first SupplierPurchFromRel.PurchaseFrom

						if (LocalPurchaseFrom entered
						and !PurchaseFromRel exists)
							invoke Create ContractPurchaseFrom
								invoked.AutoCreate													= true
								invoked.ContractGroup 												= ContractGroup
								invoked.Contract	  												= Contract
								invoked.ContractPurchaseFrom.ParticipantLocation.Company    	  	= LocalCompany
								invoked.ContractPurchaseFrom.ParticipantLocation.Location			= LocalInventoryLocation
								invoked.SupplierVendor												= Contract.Vendor
								invoked.PurchaseFrom												= LocalPurchaseFrom
								invoked.AllItemTypes												= first SupplierPurchFromRel.AllItemTypes

				else
				if (PricingGroupRel.CompanyPricingGroup)
					for each PricingGroupRel.PricingGroupCompanyRel
						LocalCompany 	= each.Company
						for each CompanySupplierPurchaseFromRels
							LocalInventoryLocation	= each.SupplierPurchaseFrom.ParticipantLocation.Location
							LocalRequestingLocation	= each.SupplierPurchaseFrom.ParticipantLocation.RequestingLocation
							LocalPurchaseFrom   	= each.PurchaseFrom

							if (LocalPurchaseFrom entered
							and !ContractPurchFromRel exists)
								invoke Create ContractPurchaseFrom
									invoked.AutoCreate													= true
									invoked.ContractGroup 												= ContractGroup
									invoked.Contract	  												= Contract
									invoked.ContractPurchaseFrom.ParticipantLocation.Company    	  	= LocalCompany
									invoked.ContractPurchaseFrom.ParticipantLocation.Location			= LocalInventoryLocation
									invoked.ContractPurchaseFrom.ParticipantLocation.RequestingLocation	= LocalRequestingLocation
									invoked.SupplierVendor												= Contract.Vendor
									invoked.PurchaseFrom												= LocalPurchaseFrom
									invoked.AllItemTypes												= each.AllItemTypes
			else
			if (CompanyOnly)
				LocalCompany = ContractTierMember.Company
				for each CompanySupplierPurchaseFromRels
					LocalInventoryLocation 		= each.SupplierPurchaseFrom.ParticipantLocation.Location
					LocalRequestingLocation		= each.SupplierPurchaseFrom.ParticipantLocation.RequestingLocation
					LocalPurchaseFrom 			= each.PurchaseFrom

					if (LocalPurchaseFrom entered
					and !ContractPurchFromRel exists)
						invoke Create ContractPurchaseFrom
							invoked.AutoCreate													= true
							invoked.ContractGroup 												= ContractGroup
							invoked.Contract	  												= Contract
							invoked.ContractPurchaseFrom.ParticipantLocation.Company  	  		= ContractTierMember.Company
							invoked.ContractPurchaseFrom.ParticipantLocation.Location			= LocalInventoryLocation
							invoked.ContractPurchaseFrom.ParticipantLocation.RequestingLocation	= LocalRequestingLocation
							invoked.SupplierVendor												= Contract.Vendor
							invoked.PurchaseFrom												= LocalPurchaseFrom
							invoked.AllItemTypes												= each.AllItemTypes

			else 
				LocalPurchaseFrom   	= SupplierPurchaseFromRel.PurchaseFrom
				if (!DirectPurchaseFromRel exists)
					if (SupplierPurchaseFromRel exists)
						invoke Create ContractPurchaseFrom
							invoked.AutoCreate													= true
							invoked.ContractGroup 												= ContractGroup
							invoked.Contract	  												= Contract
							invoked.ContractPurchaseFrom.ParticipantLocation.Company  	  	    = ContractTierMember.Company
							invoked.ContractPurchaseFrom.ParticipantLocation.Location			= ContractTierMember.Location
							invoked.ContractPurchaseFrom.ParticipantLocation.RequestingLocation = ContractTierMember.RequestingLocation
							invoked.SupplierVendor												= Contract.Vendor
							invoked.PurchaseFrom												= LocalPurchaseFrom
							invoked.AllItemTypes												= SupplierPurchaseFromRel.AllItemTypes

	Field Rules
		ContractTierMember.RequestingLocation
			if (Contract.StandingOrService)
				constraint (!ContractTierMember.RequestingLocation entered)
					"RequestingLocationNotAllowedForStandingOrServicePurchaseTypes"
		Released
			default to false

		PurchaseMethod
			if (PurchaseMethodForDirectBuy
			and NotContractTemplate)
				constraint (Contract.HasAPurchaseType)
					"ManufacturerContractWillNotBeAvailableForCostDefaulting;PurchaseMethodCannotBeTypeThatWillMakeManufacturerContractAvailableForCostDefaulting"

		Tier
			default to first DefaultTierRel.ContractTier

	Create Rules

		if (NotContractTemplate
		and !Contract.MultiTierDistributorContract)
			invoke Create MfgContractMemberPivot
				invoked.ContractGroup						   									= ContractGroup
				invoked.ManufacturerContractPivot			   									= Contract
				invoked.MfgContractMemberPivot.ParticipantLocation.Company  					= ContractTierMember.Company
				invoked.MfgContractMemberPivot.ParticipantLocation.Location 					= ContractTierMember.Location
				invoked.MfgContractMemberPivot.ParticipantLocation.RequestingLocation	   		= ContractTierMember.RequestingLocation
				invoked.MfgContractMemberPivot.ParticipantLocation.PricingGroup					= ContractTierMember.PricingGroup
				invoked.PurchaseMethod	                                                        = PurchaseMethod

	Create Exit Rules

		if (PurchaseMethodForDirectBuy = true
		and NoCostDefaultingTierMembers
		and ContractLinesExist
		and !LocalFromGroupLine)
			invoke SetCanUseForCostDefaultingToYesFromMember Contract

		if (PurchaseMethodForDirectBuy = false
		and NoCostDefaultingTierMembers
		and ContractLinesExist)
			invoke SetCanUseForCostDefaultingToNoFromMember Contract

		if (PurchaseMethodForDistributor = true
		and NoCreateDistributorTierMembers
		and ContractLinesExist
		and !LocalFromGroupLine)
			invoke SetCreateDistributorContractLineToYes Contract

		if (PurchaseMethodForDistributor = false
		and NoCreateDistributorTierMembers
		and ContractLinesExist)
			invoke SetCreateDistributorContractLineToNo Contract

		if (Contract.EnableClinicalSystemUseLocations)
			if (CompanyLocationMember)
				LocalInventoryLocation = ContractTierMember.Location
				if (LocalContractLocationRel !exists)
					invoke Create ContractAndLineLocation 
						invoked.ContractGroup 								= ContractGroup 
						invoked.Contract                					= Contract 
						invoked.ContractAndLineLocation.Company 			= ContractTierMember.Company
						invoked.ContractAndLineLocation.Location			= ContractTierMember.Location 
						invoked.ClinicalSystemUse                   		= true	
			else 
			if (CompanyRqLocMember)
				if (ContractGroup.DoNotUseRequestingLocations = false)
					LocalRequestingLocation = ContractTierMember.RequestingLocation 
					if (LocalContractRequestingLocationRel !exists)
						invoke Create ContractAndLineLocation
							invoked.ContractGroup 								= ContractGroup 
							invoked.Contract                					= Contract 
							invoked.ContractAndLineLocation.Company 			= ContractTierMember.Company
							invoked.ContractAndLineLocation.RequestingLocation	= ContractTierMember.RequestingLocation
							invoked.ClinicalSystemUse                   		= true					
			else
			if (CompanyOnly)
				LocalCompany	= ContractTierMember.Company
				invoke CreateLocationsForAContractInstance LocalInventoryCompanyRel 
					invoked.ParmContractGroup   		= ContractGroup
					invoked.ParmContract 				= Contract
			else				
			if (PricingGroupMember)
				LocalPricingGroup = ContractTierMember.PricingGroup 
				invoke CreateLocationsForAContractInstance LocalPricingGroupRel 
					invoked.ParmProcurementGroup	= ContractGroup
					invoked.ParmContract            = Contract

		if (Contract.CanCreatePurchaseFroms)
			include CreateContractPurchaseFrom

	Actions
		Create is a Create Action
			valid when (CanCreate)

			Action Rules
				if (Contract.ContractStatus.Active)
					confirmation required
						"MustRunReleaseMembersAfterRecordIsAdded"
				
				LocalIccompany = ContractTierMember.Company

	 			if (Tier entered)

					if (!FromImport)
						if (!Contract.GPONegotiated)
							constraint (TierQualifierRel exists)
								"CannotUseTier;QualifiersDoNotExistForContractTier"

				if (!FromImport)
					if (OtherContractTierMemberRel exists)
						if (CompanyType)
							constraint (first OtherContractTierMemberRel.CompanyType)
								"CannotAdd;MembersExistByLocationOrRequestingLocation"
						if (LocationType)
							constraint (first OtherContractTierMemberRel.LocationType)
								"CannotAdd;MembersExistForWholeCompany"
				if (Contract.Stockless)
					if (HasLocOrReqLoc)
						constraint (ContractTierMember.RequestingLocation.Stockless)
							"MustEnterAStocklessRequestingLocationForAStocklessContract"
					constraint (!PricingGroupMember)
						"CannotEnterAPricingGroupForAStocklessContract"
 				if (PricingGroupMember)
					constraint (!ContractTierMember.PricingGroup.NoDetails)
						"CannotEnter;PricingGroupHasNoCompaniesOrLocationsAttached"

		CreateFromGroup is a Create Action    
			restricted

		CreateMemberPurchaseFrom is a Set Action 
			restricted
			Parameters
				PrmContractGroup is a ContractGroup
				PrmContract		 is a Contract

			Instance Selection
				where (ContractGroup = PrmContractGroup
				and    Contract 	 = PrmContract)

			Action Rules
				Instance Rules
					include CreateContractPurchaseFrom


		UpdateContractTierMember is an Update Action
			restricted
			bypass field rules

		UpdatePurchaseMethod is an Instance Action
			valid when (Contract.InProgressOrActive)
			Parameters
				ParmContractGroup               is a ContractGroup
				ParmContract                    is a Contract
				ParmPurchaseMethod              is a PurchaseMethod
				ParmUpdateSpecialsManufacturer  is Numeric 1
					States
						NotApplicable           		  		value is 0
						AllowCostDefaultingOnSpecialItems 		value is 1
						DoNotAllowCostDefaultingOnSpecialItems 	value is 2

			Parameter Rules
				ParmContractGroup
					initial value is ContractGroup
				ParmContract
					initial value is Contract
				ParmPurchaseMethod
					initial value is PurchaseMethod
					required
						"MustEnterAPurchaseMethod"

			Action Rules
				constraint (ParmPurchaseMethod != PurchaseMethod)
					"MustChangePurchaseMethodToPerformAction"

				if (PurchaseMethod = 2
				and Contract.GPOContractImportRel.DistributedPurchasingChannel)
					constraint (!CannotUpdateGPO)
						"CannotChangePurchaseMethod;GPOPurchasingChannelIsDistributed"
				if (PurchaseMethod = 1
				and Contract.GPOContractImportRel.DirectPurchasingChannel)
					constraint (!CannotUpdateGPO)
						"CannotChangePurchaseMethod;GPOPurchasingChannelIsDirect"	

				if ((ParmPurchaseMethod.FromManufacturer
				or   ParmPurchaseMethod.FromManufacturerAndDistributor) 
				and  NotContractTemplate)
					constraint (Contract.HasAPurchaseType)
						"ManufacturerContractWillNotBeAvailableForCostDefaulting;PurchaseMethodCannotBeTypeThatWillMakeManufacturerContractAvailableForCostDefaulting"

				invoke Update MfgContractMemberPivotRel
					invoked.PurchaseMethod = ParmPurchaseMethod

				PurchaseMethod = ParmPurchaseMethod

				if (MemberHdToLineRel exists)
					invoke UpdatePurchaseMethodOnLineMembers ContractLineMember
						invoked.PrmContractGroup					= ContractGroup
						invoked.PrmContract							= Contract
						invoked.PrmManufacturerContract				= Contract
						invoked.PrmTierCompany						= ContractTierMember.Company
						invoked.PrmTierLocation						= ContractTierMember.Location
						invoked.PrmTierReqLocation					= ContractTierMember.RequestingLocation
						invoked.PrmTierPricingGroup                 = ContractTierMember.PricingGroup
						invoked.PrmPurchaseMethod                   = PurchaseMethod
						if (ParmUpdateSpecialsManufacturer = 1
						or  Contract.SpecialItemsWillCostDefault)
							invoked.PrmUpdateSpecial               	= true

				if (old PurchaseMethodForDirectBuy = false
				and PurchaseMethodForDirectBuy = true
				and NoCostDefaultingTierMembers
				and ContractLinesExist)
					if (!Contract.SpecialItemsWillCostDefault)
						constraint (ParmUpdateSpecialsManufacturer > 0)
							"MustSelectWhetherToAllowCostDefaultingOnSpecialItems"
					invoke SetCanUseForCostDefaultingToYesFromMember Contract
						if (ParmUpdateSpecialsManufacturer = 1)
							TransientUpdateSpecials = true

				if (old PurchaseMethodForDirectBuy = true
				and PurchaseMethodForDirectBuy = false
				and NoCostDefaultingTierMembers
				and ContractLinesExist)
					invoke SetCanUseForCostDefaultingToNoFromMember Contract

				if (old PurchaseMethodForDistributor = false
				and PurchaseMethodForDistributor = true
				and NoCreateDistributorTierMembers
				and ContractLinesExist)
					invoke SetCreateDistributorContractLineToYes Contract

				if (old PurchaseMethodForDistributor = true
				and PurchaseMethodForDistributor = false
				and NoCreateDistributorTierMembers
				and ContractLinesExist)
					invoke SetCreateDistributorContractLineToNo Contract

		UpdateTier is an Instance Action
   			valid when (Contract.InProgressOrActive)
			completion message is "<UpdateCompletionMessage>"
			Parameters
				ParmContractGroup               is a ContractGroup
				ParmContract                    is a Contract
				ParmTier                        is a ContractTier
				ParmOverrideNetCost             is Boolean

			Parameter Rules
				ParmContractGroup
					initial value is ContractGroup
				ParmContract
					initial value is Contract
				ParmTier
					initial value is Tier
					required
						"MustEnterATier"
				ParmOverrideNetCost
					initial value is true

			Action Rules

				Tier = ParmTier

				constraint (MemberToTierRel exists)
					"ContractTierDoesNotExist"

				if (!Contract.GPONegotiated)
					constraint (TierQualifierRel exists)
						"CannotUseTier;QualifiersDoNotExistForContractTier"

				if (MemberHdToLineRel exists)
					invoke UpdateTierOnLineMembers ContractLineMember
						invoked.PrmContractGroup			= ContractGroup
						invoked.PrmContractInFocus			= Contract
						invoked.PrmManufacturerContract		= Contract
						invoked.PrmTier						= Tier
						invoked.PrmTierCompany				= ContractTierMember.Company
						invoked.PrmTierLocation				= ContractTierMember.Location
						invoked.PrmTierReqLocation			= ContractTierMember.RequestingLocation
						invoked.PrmTierPricingGroup			= ContractTierMember.PricingGroup
						invoked.PrmTierMarkupDiscount		= MemberToTierRel.TierMarkupDiscount
						invoked.PrmLineTierPricingAmtPct	= MemberToTierRel.TierPricingAmtPct
						invoked.PrmFreightMarkupDiscount	= MemberToTierRel.FreightMarkupDiscount
						invoked.PrmLineFreightPricingAmtPct	= MemberToTierRel.FreightPricingAmtPct
						invoked.PrmOverrideNetCost			= ParmOverrideNetCost
						initialize invoked.PrmContractDistributorPricingMember
		 				initialize invoked.PrmPricingIdentifier
						initialize invoked.PrmLineDistributorPricingCode
						initialize invoked.PrmLineDistributorPricingAmt
						initialize invoked.PrmLineDistributorPricingPct
						initialize invoked.PrmLineDistributorFreightPricingCode
						initialize invoked.PrmLineDistributorFreightPricingAmt
						initialize invoked.PrmLineDistributorFreightPricingPct
				else
					if (PricingOldTierRel exists)
						for each PricingOldTierRel
							invoke UpdateTierFromManufacturer each
	 							invoked.NewTier 			= Tier
	 							invoked.ParmOverrideNetCost = true

		Delete is a Delete Action
   			valid when (Contract.InProgressOrActive)
			Entrance Rules

				invoke Delete DirectPurchaseFromRel

				invoke MassDelete ContractLineMember
					invoked.ParmContractGroup  					= ContractGroup
					invoked.ParmCompany      					= ContractTierMember.Company
					invoked.ParmLocation                        = ContractTierMember.Location
					invoked.ParmRequestingLocation              = ContractTierMember.RequestingLocation
					invoked.ParmPricingGroup					= ContractTierMember.PricingGroup
					invoked.ParmManufacturerContract            = Contract

				for each PricingTierRel
					invoke DeleteFromTierMember each

	 			if (MfgContractMemberPivotRel exists)
	 				invoke Delete MfgContractMemberPivotRel

				if (Contract.EnableClinicalSystemUseLocations)
					if (CompanyLocationMember
					or  CompanyRqLocMember)
						invoke DeleteClinical ContractAndLineLocationRel
					else
					if (PricingGroupMember)
						invoke DeleteLocationsForAContract PricingGroup
							invoked.ParmProcurementGroup	= ContractGroup
							invoked.ParmContract            = Contract
							invoked.ParmPricingGroup        = ContractTierMember.PricingGroup
					else 
					if (CompanyOnly)
						for each CompanyActiveLocationRel
							LocalInventoryLocation = each.InventoryLocation
							if (LocalContractLocationRel exists) 
								invoke DeleteClinical LocalContractLocationRel
						for each CompanyActiveRequestingLocationRel 													
							LocalRequestingLocation = each.RequestingLocation
							if (LocalContractRequestingLocationRel exists) 
								invoke DeleteClinical LocalContractRequestingLocationRel

	 		Action Rules

   				if (PurchaseMethodForDirectBuy = true
				and NoCostDefaultingTierMembers
 				and ContractLinesExist)
 					invoke SetCanUseForCostDefaultingToNoFromMember Contract

				if (PurchaseMethodForDistributor = true
				and NoCreateDistributorTierMembers
 				and ContractLinesExist)
 					invoke SetCreateDistributorContractLineToNo Contract

		FindContractPurchaseOrderLines is a Set Action
			valid when (Contract.HasTiersWithQualifierCodes)
			run in foreground
			Parameters
				PrmContractGroup			is a ContractGroup
				PrmContract					is a Contract
			Parameter Rules
				PrmContractGroup
					initial value is ContractGroup
					default to ContractGroup
				PrmContract
					initial value is Contract
					default to Contract

			Instance Selection
				where ((PrmContractGroup not entered
				or      PrmContractGroup	= ContractGroup)
				and    (PrmContract not entered
				or      PrmContract			= Contract))

			Rule Blocks
				PassThroughQualifierCodes
					for each each.ContractTierQualifierCode set
						LocalManufacturerInfo			= each.ManufacturerInfo
						LocalCommodityCode				= each.CommodityCode
						LocalMajorPurchasingClass		= each.MajorPurchasingClass
						LocalMinorPurchasingClass		= each.MinorPurchasingClass
						LocalUnspscCode					= each.UnspscCode
						if (CompanyOnly)
							for each PolineFactsCompanyQualifierCodesRel
								if ((LocalManufacturerInfo.ManufacturerDivision not entered
								or   LocalManufacturerInfo.ManufacturerDivision		= each.ManufacturerDivision)
								and (LocalCommodityCode not entered
								or   each.CommodityCode 						within LocalCommodityCode)
								and (LocalMinorPurchasingClass not entered
								or   LocalMinorPurchasingClass					= each.PurchMincl)
								and (LocalUnspscCode not entered
								or  (LocalUnspscCode.UNSPSCCommodity entered
								and  LocalUnspscCode.UNSPSCCommodity				= each.UNSPSCCode.UNSPSCCommodity)
								or  (LocalUnspscCode.UNSPSCCommodity not entered
								and  LocalUnspscCode.UNSPSCClass entered
								and  LocalUnspscCode.UNSPSCClass					= each.UNSPSCCode.UNSPSCClass)
								or  (LocalUnspscCode.UNSPSCCommodity not entered
								and  LocalUnspscCode.UNSPSCClass not entered
								and  LocalUnspscCode.UNSPSCFamily entered
								and  LocalUnspscCode.UNSPSCFamily					= each.UNSPSCCode.UNSPSCFamily)))
									LocalContractTierMemberQualifierPurchaseOrderLine.PurchasingCompany	= each.PurchasingCompany
									LocalContractTierMemberQualifierPurchaseOrderLine.PoNumber			= each.PoNumber
									LocalContractTierMemberQualifierPurchaseOrderLine.PoRelease			= each.PoRelease
									LocalContractTierMemberQualifierPurchaseOrderLine.PoCode			= each.PoCode
									LocalContractTierMemberQualifierPurchaseOrderLine.LineNbr			= each.LineNbr
									LocalContractTierMemberQualifierPurchaseOrderLine.LineSeq			= each.LineSeq
									invoke Update ContractTierMemberQualifierPurchaseOrderLineRel
										fill in fields from each
										invoked.ManuInfo				= each.ManufacturerCode
						else
						if (CompanyLocationMember)
							for each PolineFactsCompanyLocationQualifierCodesRel
								if ((LocalManufacturerInfo.ManufacturerDivision not entered
								or   LocalManufacturerInfo.ManufacturerDivision		= each.ManufacturerDivision)
								and (LocalCommodityCode not entered
								or   each.CommodityCode 						within LocalCommodityCode)
								and (LocalMinorPurchasingClass not entered
								or   LocalMinorPurchasingClass					= each.PurchMincl)
								and (LocalUnspscCode not entered
								or  (LocalUnspscCode.UNSPSCCommodity entered
								and  LocalUnspscCode.UNSPSCCommodity				= each.UNSPSCCode.UNSPSCCommodity)
								or  (LocalUnspscCode.UNSPSCCommodity not entered
								and  LocalUnspscCode.UNSPSCClass entered
								and  LocalUnspscCode.UNSPSCClass					= each.UNSPSCCode.UNSPSCClass)
								or  (LocalUnspscCode.UNSPSCCommodity not entered
								and  LocalUnspscCode.UNSPSCClass not entered
								and  LocalUnspscCode.UNSPSCFamily entered
								and  LocalUnspscCode.UNSPSCFamily					= each.UNSPSCCode.UNSPSCFamily)))
									LocalContractTierMemberQualifierPurchaseOrderLine.PurchasingCompany	= each.PurchasingCompany
									LocalContractTierMemberQualifierPurchaseOrderLine.PoNumber			= each.PoNumber
									LocalContractTierMemberQualifierPurchaseOrderLine.PoRelease			= each.PoRelease
									LocalContractTierMemberQualifierPurchaseOrderLine.PoCode			= each.PoCode
									LocalContractTierMemberQualifierPurchaseOrderLine.LineNbr			= each.LineNbr
									LocalContractTierMemberQualifierPurchaseOrderLine.LineSeq			= each.LineSeq
									invoke Update ContractTierMemberQualifierPurchaseOrderLineRel
										fill in fields from each
										invoked.ManuInfo				= each.ManufacturerCode
						else
						if (CompanyRqLocMember)
							for each PolineFactsCompanyRequestingLocationQualifierCodesRel
								if ((LocalManufacturerInfo.ManufacturerDivision not entered
								or   LocalManufacturerInfo.ManufacturerDivision		= each.ManufacturerDivision)
								and (LocalCommodityCode not entered
								or   each.CommodityCode 						within LocalCommodityCode)
								and (LocalMinorPurchasingClass not entered
								or   LocalMinorPurchasingClass					= each.PurchMincl)
								and (LocalUnspscCode not entered
								or  (LocalUnspscCode.UNSPSCCommodity entered
								and  LocalUnspscCode.UNSPSCCommodity				= each.UNSPSCCode.UNSPSCCommodity)
								or  (LocalUnspscCode.UNSPSCCommodity not entered
								and  LocalUnspscCode.UNSPSCClass entered
								and  LocalUnspscCode.UNSPSCClass					= each.UNSPSCCode.UNSPSCClass)
								or  (LocalUnspscCode.UNSPSCCommodity not entered
								and  LocalUnspscCode.UNSPSCClass not entered
								and  LocalUnspscCode.UNSPSCFamily entered
								and  LocalUnspscCode.UNSPSCFamily					= each.UNSPSCCode.UNSPSCFamily)))
									LocalContractTierMemberQualifierPurchaseOrderLine.PurchasingCompany	= each.PurchasingCompany
									LocalContractTierMemberQualifierPurchaseOrderLine.PoNumber			= each.PoNumber
									LocalContractTierMemberQualifierPurchaseOrderLine.PoRelease			= each.PoRelease
									LocalContractTierMemberQualifierPurchaseOrderLine.PoCode			= each.PoCode
									LocalContractTierMemberQualifierPurchaseOrderLine.LineNbr			= each.LineNbr
									LocalContractTierMemberQualifierPurchaseOrderLine.LineSeq			= each.LineSeq
									invoke Update ContractTierMemberQualifierPurchaseOrderLineRel
										fill in fields from each
										invoked.ManuInfo				= each.ManufacturerCode

			Action Rules
				Instance Rules
					invoke Delete ContractTierMemberPurchaseOrderLinesRel

					LocalContractTierKey			= Tier
					for each Tier.ContractTierQualifier set
						LocalContractTierQualifier	= each.ContractTierQualifier
						include PassThroughQualifierCodes

					for each NextHigherTierRel
						LocalContractTierKey			= each.ContractTier
						for each each.ContractTierQualifier set
							LocalContractTierQualifier	= each.ContractTierQualifier
							include PassThroughQualifierCodes

		CalculatePercentOfAllPurchases is an Instance Action  
			valid when (HasPercentBaseQualifiers)
			Local Fields
				PolineFactSelected						is Boolean
				LocalTotalAllPurchases					is an InternationalAmount
				LocalAllItemsOnContractAmount			is an InternationalAmount
				LocalPercentOfAllPurchases				is Percent 6.2
				LocalContractTier						is a ContractTier
			Rule Blocks
				PassThroughQualifierCodes
					for each each.ContractTierQualifierCode set
						LocalManufacturerInfo			= each.ManufacturerInfo
						LocalCommodityCode				= each.CommodityCode
						LocalMajorPurchasingClass		= each.MajorPurchasingClass
						LocalMinorPurchasingClass		= each.MinorPurchasingClass
						LocalUnspscCode					= each.UnspscCode
						if (CompanyOnly)
							for each AllPolineFactsCompanyQualifierCodesRel
								if ((LocalManufacturerInfo.ManufacturerDivision not entered
								or   LocalManufacturerInfo.ManufacturerDivision		= each.ManufacturerDivision)
								and (LocalCommodityCode not entered
								or   each.CommodityCode 						within LocalCommodityCode)
								and (LocalMinorPurchasingClass not entered
								or   LocalMinorPurchasingClass					= each.PurchMincl)
								and (LocalUnspscCode not entered
								or  (LocalUnspscCode.UNSPSCCommodity entered
								and  LocalUnspscCode.UNSPSCCommodity				= each.UNSPSCCode.UNSPSCCommodity)
								or  (LocalUnspscCode.UNSPSCCommodity not entered
								and  LocalUnspscCode.UNSPSCClass entered
								and  LocalUnspscCode.UNSPSCClass					= each.UNSPSCCode.UNSPSCClass)
								or  (LocalUnspscCode.UNSPSCCommodity not entered
								and  LocalUnspscCode.UNSPSCClass not entered
								and  LocalUnspscCode.UNSPSCFamily entered
								and  LocalUnspscCode.UNSPSCFamily					= each.UNSPSCCode.UNSPSCFamily)))
									LocalPoNumber	= each.PoNumber
									LocalPoRelease	= each.PoRelease
									LocalPoCode		= each.PoCode
									LocalLineNbr	= each.LineNbr
									LocalLineSeq	= each.LineSeq
									invoke Update PolineFactPercentOfAllRel
										fill in fields from each
										invoked.ExtendedAmount			= each.DerivedExtendedAmount
						else
						if (CompanyLocationMember)
							for each AllPolineFactsCompanyLocationQualifierCodesRel
								if ((LocalManufacturerInfo.ManufacturerDivision not entered
								or   LocalManufacturerInfo.ManufacturerDivision		= each.ManufacturerDivision)
								and (LocalCommodityCode not entered
								or   each.CommodityCode 						within LocalCommodityCode)
								and (LocalMinorPurchasingClass not entered
								or   LocalMinorPurchasingClass					= each.PurchMincl)
								and (LocalUnspscCode not entered
								or  (LocalUnspscCode.UNSPSCCommodity entered
								and  LocalUnspscCode.UNSPSCCommodity				= each.UNSPSCCode.UNSPSCCommodity)
								or  (LocalUnspscCode.UNSPSCCommodity not entered
								and  LocalUnspscCode.UNSPSCClass entered
								and  LocalUnspscCode.UNSPSCClass					= each.UNSPSCCode.UNSPSCClass)
								or  (LocalUnspscCode.UNSPSCCommodity not entered
								and  LocalUnspscCode.UNSPSCClass not entered
								and  LocalUnspscCode.UNSPSCFamily entered
								and  LocalUnspscCode.UNSPSCFamily					= each.UNSPSCCode.UNSPSCFamily)))
									LocalPoNumber	= each.PoNumber
									LocalPoRelease	= each.PoRelease
									LocalPoCode		= each.PoCode
									LocalLineNbr	= each.LineNbr
									LocalLineSeq	= each.LineSeq
									invoke Update PolineFactPercentOfAllRel
										fill in fields from each
										invoked.ExtendedAmount			= each.DerivedExtendedAmount
						else
						if (CompanyRqLocMember)
							for each AllPolineFactsCompanyRequestingLocationQualifierCodesRel
								if ((LocalManufacturerInfo.ManufacturerDivision not entered
								or   LocalManufacturerInfo.ManufacturerDivision		= each.ManufacturerDivision)
								and (LocalCommodityCode not entered
								or   each.CommodityCode 						within LocalCommodityCode)
								and (LocalMinorPurchasingClass not entered
								or   LocalMinorPurchasingClass					= each.PurchMincl)
								and (LocalUnspscCode not entered
								or  (LocalUnspscCode.UNSPSCCommodity entered
								and  LocalUnspscCode.UNSPSCCommodity				= each.UNSPSCCode.UNSPSCCommodity)
								or  (LocalUnspscCode.UNSPSCCommodity not entered
								and  LocalUnspscCode.UNSPSCClass entered
								and  LocalUnspscCode.UNSPSCClass					= each.UNSPSCCode.UNSPSCClass)
								or  (LocalUnspscCode.UNSPSCCommodity not entered
								and  LocalUnspscCode.UNSPSCClass not entered
								and  LocalUnspscCode.UNSPSCFamily entered
								and  LocalUnspscCode.UNSPSCFamily					= each.UNSPSCCode.UNSPSCFamily)))
									LocalPoNumber	= each.PoNumber
									LocalPoRelease	= each.PoRelease
									LocalPoCode		= each.PoCode
									LocalLineNbr	= each.LineNbr
									LocalLineSeq	= each.LineSeq
									invoke Update PolineFactPercentOfAllRel
										fill in fields from each
										invoked.ExtendedAmount			= each.DerivedExtendedAmount

			Action Rules
				initialize LocalItemCategory
				PolineFactSelected			= false
				LocalContractTier			= Tier
				LocalContractTierKey		= Tier

				for each Tier.ContractTierQualifier set
					LocalContractTierQualifier		= each.ContractTierQualifier
					if (each.PurchasePercentQualifier)
						if (each.CodesExist)
							include PassThroughQualifierCodes
							initialize LocalTotalAllPurchases
							for each PolineFactsPercentOfAllRel
								LocalTotalAllPurchases	+= each.ExtendedAmount
							invoke Purge PolineFactsPercentOfAllRel
						else
							initialize LocalAllItemsOnContractAmount
							for each Contract.ContractLine set
								LocalItem				= each.ItemNumber
								if (CompanyOnly)
									for each PolineFactsByItemCompanyRel
										LocalTotalAllPurchases			+= each.DerivedExtendedAmount
									LocalAllItemsOnContractAmount			+= (sum PolineFactsCompanyForContractItemRel.DerivedExtendedAmount)
								else
								if (CompanyLocationMember)
									for each PolineFactsByItemLocationRel
										LocalTotalAllPurchases			+= each.DerivedExtendedAmount
									LocalAllItemsOnContractAmount			+= (sum PolineFactsCompanyLocationForContractItemRel.DerivedExtendedAmount)
								else
									for each PolineFactsByItemRqLocRel
										LocalTotalAllPurchases			+= each.DerivedExtendedAmount
									LocalAllItemsOnContractAmount			+= (sum PolineFactsCompanyRqLocForContractItemRel.DerivedExtendedAmount)

						if (each.CodesExist)
							LocalPercentOfAllPurchases	= ((sum ContractTierMemberQualifierPurchaseOrderLinesRel.ExtendedAmt) / LocalTotalAllPurchases)
						else
							LocalPercentOfAllPurchases	= (LocalAllItemsOnContractAmount / LocalTotalAllPurchases)

						invoke Update ContractTierMemberQualifierRel
							invoked.CurrentTotalAllPurchases			= LocalTotalAllPurchases
							invoked.TotalPurchasesTimeStamp				= current timestamp
							invoked.CurrentPercentOfAllPurchases		= LocalPercentOfAllPurchases

				for each NextHigherTierRel
					LocalContractTier					= each.ContractTier
					LocalContractTierKey				= each.ContractTier
					for each each.ContractTierQualifier set
						initialize LocalTotalAllPurchases
						LocalContractTierQualifier		= each.ContractTierQualifier
						invoke Purge ContractTierMemberQualifierPurchasesPiePiecesRel
						if (each.PurchasePercentQualifier)
							if (each.CodesExist)
								include PassThroughQualifierCodes
								for each PolineFactsPercentOfAllRel
									LocalTotalAllPurchases	+= each.ExtendedAmount
								invoke Purge PolineFactsPercentOfAllRel
							else
								initialize LocalAllItemsOnContractAmount
								for each Contract.ContractLine set
									LocalItem				= each.ItemNumber
									if (CompanyOnly)
										for each PolineFactsByItemCompanyRel
											LocalTotalAllPurchases			+= each.DerivedExtendedAmount
										LocalAllItemsOnContractAmount		+= (sum PolineFactsCompanyForContractItemRel.DerivedExtendedAmount)
									else
									if (CompanyLocationMember)
										for each PolineFactsByItemLocationRel
											LocalTotalAllPurchases			+= each.DerivedExtendedAmount
										LocalAllItemsOnContractAmount		+= (sum PolineFactsCompanyLocationForContractItemRel.DerivedExtendedAmount)
									else
										for each PolineFactsByItemRqLocRel
											LocalTotalAllPurchases			+= each.DerivedExtendedAmount
										LocalAllItemsOnContractAmount		+= (sum PolineFactsCompanyRqLocForContractItemRel.DerivedExtendedAmount)

							if (each.CodesExist)
								LocalPercentOfAllPurchases	= ((sum ContractTierMemberQualifierPurchaseOrderLinesRel.ExtendedAmt) / LocalTotalAllPurchases)
							else
								LocalPercentOfAllPurchases	= (LocalAllItemsOnContractAmount / LocalTotalAllPurchases)

							invoke Update ContractTierMemberQualifierRel
								invoked.CurrentTotalAllPurchases			= LocalTotalAllPurchases
								invoked.TotalPurchasesTimeStamp				= current timestamp
								invoked.CurrentPercentOfAllPurchases		= LocalPercentOfAllPurchases

							invoke Create ContractTierMemberQualifierPurchasesPiePiece
								invoked.ContractGroup				= ContractGroup
								invoked.Contract					= Contract
								invoked.ContractTierMember			= ContractTierMember
								invoked.ContractTier				= LocalContractTierKey
								invoked.ContractTierQualifier		= LocalContractTierQualifier
								invoked.PurchasesIndicator			= 1	
								invoked.PurchasePercent				= LocalPercentOfAllPurchases
								invoked.PurchaseAmount				= (LocalPercentOfAllPurchases * LocalTotalAllPurchases)

							invoke Create ContractTierMemberQualifierPurchasesPiePiece
								invoked.ContractGroup				= ContractGroup
								invoked.Contract					= Contract
								invoked.ContractTierMember			= ContractTierMember
								invoked.ContractTier				= LocalContractTierKey
								invoked.ContractTierQualifier		= LocalContractTierQualifier
								invoked.PurchasesIndicator			= 2	
								if (LocalPercentOfAllPurchases		>= each.PurchaseAmtPct.PurchasePercent)
									initialize invoked.PurchasePercent
									initialize invoked.PurchaseAmount
								else
									invoked.PurchasePercent			= (each.PurchaseAmtPct.PurchasePercent	- LocalPercentOfAllPurchases)
									invoked.PurchaseAmount			= ((each.PurchaseAmtPct.PurchasePercent	- LocalPercentOfAllPurchases) * LocalTotalAllPurchases)
						else
							invoke Create ContractTierMemberQualifierPurchasesPiePiece
								invoked.ContractGroup				= ContractGroup
								invoked.Contract					= Contract
								invoked.ContractTierMember			= ContractTierMember
								invoked.ContractTier				= LocalContractTierKey
								invoked.ContractTierQualifier		= LocalContractTierQualifier
								invoked.PurchasesIndicator			= 1	
								invoked.PurchasePercent				= each.DerivedThisTierPurchasePercent
								invoked.PurchaseAmount				= (each.DerivedThisTierPurchasePercent * each.PurchaseAmtPct.PurchaseAmount)

							invoke Create ContractTierMemberQualifierPurchasesPiePiece
								invoked.ContractGroup				= ContractGroup
								invoked.Contract					= Contract
								invoked.ContractTierMember			= ContractTierMember
								invoked.ContractTier				= LocalContractTierKey
								invoked.ContractTierQualifier		= LocalContractTierQualifier
								invoked.PurchasesIndicator			= 2	
								if (each.DerivedThisTierPurchasePercent		>= 100%)
									initialize invoked.PurchasePercent
									initialize invoked.PurchaseAmount
								else
									invoked.PurchasePercent			= (100% - each.DerivedThisTierPurchasePercent)
									invoked.PurchaseAmount			= ((100% - each.DerivedThisTierPurchasePercent) * each.PurchaseAmtPct.PurchaseAmount)


		CalculatePercentOfAllPurchasesForTierMembers is a Set Action  
			valid when (HasPercentBaseQualifiers)
			Parameters
				PrmContractGroup				is a ContractGroup
				PrmContract						is a Contract
			Instance Selection
				where (ContractGroup			= PrmContractGroup
				and    Contract					= PrmContract)

			Action Rules
				Instance Rules
					invoke CalculatePercentOfAllPurchases ContractTierMember

		CreateContractTierMemberQualifiers is a Set Action   
			restricted
			Parameters
				PrmContractGroup				is a ContractGroup
				PrmContract						is a Contract
			Instance Selection
				where (ContractGroup			= PrmContractGroup
				and    Contract					= PrmContract)

			Action Rules
				Instance Rules
					LocalContractTierKey		= Tier
					for each Tier.ContractTierQualifier set
						LocalContractTierQualifier		= each.ContractTierQualifier
						invoke Update ContractTierMemberQualifierRel
							invoked.Tier							= Tier
							invoked.TotalPurchasesTimeStamp			= current timestamp

		Purge is a Purge Action
			restricted

