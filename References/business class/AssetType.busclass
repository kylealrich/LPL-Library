AssetType is a BusinessClass
    owned by am
    prefix is ATP
    classic name is AMASTTYPE

    Ontology
        symbolic key is AssetType
            classic set name is ATPSET1
            classic name for AssetType.Type is ASSET-TYPE

    Patterns
        implements StaticJava
        disable AuditIndex

    Persistent Fields
        Description
        Property
        IncludeInPhysicalInventory  is Boolean
            classic name is INV-FLAG
        AllocateDepreciationExpense is Boolean
            classic name is DEP-EXP-ALLOC
        Revalue                     is Boolean
            classic name is REVALUE-FLAG
        RevalueMethod               is AlphaUpper size 1
            States
                Elimination   			value is "E"
                Proportionate 			value is "P"
        PostToAccount				is AlphaUpper size 1
        	default label is "PostRevaluationToAccount"
        	States
        		Asset					value is blank
        		RevaluationReserve		value is "R"
        AmortizeRevaluation			is Boolean
        	default label is "AmortizeRevaluationReserve"
		Impairment					is Boolean
        AmortizeImpairment			is Boolean
        	restricted
        	default label is "AmortizeImpairment"     
        ExcludeIncremental			is Boolean	
        FlagForReview						is Boolean	 

	Local Fields







		LocalRevalueAccountsExist				is Numeric 6
		LocalAsset								is like Asset
		LocalAccountDeletedFlag					is Boolean
		
		
	Transient Fields	
		TransientAssetCompany		is a Company	
			derive value from 		AssetCompanyRel.Company
		ASTDistributionAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountASTRel.DistributionAccount
		ACMDistributionAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountACMRel.DistributionAccount
		EXPDistributionAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountEXPRel.DistributionAccount
		RVSDistributionAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountRVSRel.DistributionAccount
		RVLDistributionAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountRVLRel.DistributionAccount

		RVADistributionAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountRVARel.DistributionAccount

		RRADistributionAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountRRARel.DistributionAccount

		IMLDistributionAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountIMLRel.DistributionAccount

		IMTDistributionAccount		is a FinanceCodeBlockAccountOnly
			derive value from AssetAccountIMTRel.DistributionAccount		
		IMADistributionAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountIMARel.DistributionAccount
		IMWDistributionAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountIMWRel.DistributionAccount		


		ASTAdditionAccount			is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountASTAdditionRel.DistributionAccount
		ACMAdditionAccount			is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountACMAdditionRel.DistributionAccount
		ASTAdjustmentAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountASTAdjustmentRel.DistributionAccount
		ACMAdjustmentAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountACMAdjustmentRel.DistributionAccount
		ASTTransferAccount			is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountASTTransferRel.DistributionAccount
		ACMTransferAccount			is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountACMTransferRel.DistributionAccount
		ASTDisposalAccount			is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountASTDisposalRel.DistributionAccount
		ACMDisposalAccount			is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountACMDisposalRel.DistributionAccount
		ASTReinstatementAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountASTReinstatementRel.DistributionAccount
		ACMReinstatementAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountACMReinstatementRel.DistributionAccount
		ASTRevalueAccount			is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountASTRevalueRel.DistributionAccount
		ACMRevalueAccount			is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountACMRevalueRel.DistributionAccount
		ASTImpairmentAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountASTImpairmentRel.DistributionAccount
		ACMImpairmentAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountACMImpairmentRel.DistributionAccount	
			
		ADDImpairmentAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountADDImpairmentRel.DistributionAccount	
		ADCImpairmentAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountADCImpairmentRel.DistributionAccount				

		ATDImpairmentAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountATDImpairmentRel.DistributionAccount	
		ATCImpairmentAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountATCImpairmentRel.DistributionAccount

		AADImpairmentAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountAADImpairmentRel.DistributionAccount	
		AACImpairmentAccount		is a FinanceCodeBlockAccountOnly 
			derive value from AssetAccountAACImpairmentRel.DistributionAccount

		ATOTransferAccount			is a FinanceCodeBlockAccountOnly 
			derive value from TransferOutATORel.DistributionAccount		
		ATITransferAccount			is a FinanceCodeBlockAccountOnly 
			derive value from TransferInATIRel.DistributionAccount	
			


			
	Derived Fields

		AssetTypeName is a MessageField
			"<AssetType>-<Description>"

		FirstAssetCompany is a DerivedField
			type is like Company
			restricted
			return (first AssetCompaniesRel.Company)
			
		PostingBook is a DerivedField
			type is like Book
			restricted
			return (first PostingBookCalendarRel.Book)	
			
		CurrentBookPeriod is a DerivedField
			type is Numeric 2
			restricted
			return (first PostingBookCalendarRel.NumberOfDepreciationPeriodsClosed + 1)

	
		ResolveASTDistributionAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (AssetAccountASTRel.DistributionAccount.GeneralLedgerChartAccount entered)
				return AssetAccountASTRel.DistributionAccount.GeneralLedgerChartAccount
			return ParentAssetTypeRel.AssetAccountASTRel.DistributionAccount.GeneralLedgerChartAccount
		ResolveACMDistributionAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (AssetAccountACMRel.DistributionAccount.GeneralLedgerChartAccount entered)
				return AssetAccountACMRel.DistributionAccount.GeneralLedgerChartAccount
			return ParentAssetTypeRel.AssetAccountACMRel.DistributionAccount.GeneralLedgerChartAccount
		ResolveEXPDistributionAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (AssetAccountEXPRel.DistributionAccount.GeneralLedgerChartAccount entered)
				return AssetAccountEXPRel.DistributionAccount.GeneralLedgerChartAccount
			return ParentAssetTypeRel.AssetAccountEXPRel.DistributionAccount.GeneralLedgerChartAccount
		ResolveRVSDistributionAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (AssetAccountRVSRel.DistributionAccount.GeneralLedgerChartAccount entered)
				return AssetAccountRVSRel.DistributionAccount.GeneralLedgerChartAccount
			return ParentAssetTypeRel.AssetAccountRVSRel.DistributionAccount.GeneralLedgerChartAccount
		ResolveRVLDistributionAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (AssetAccountRVLRel.DistributionAccount.GeneralLedgerChartAccount entered)
				return AssetAccountRVLRel.DistributionAccount.GeneralLedgerChartAccount
			return ParentAssetTypeRel.AssetAccountRVLRel.DistributionAccount.GeneralLedgerChartAccount
		ResolveRVADistributionAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (AssetAccountRVARel.DistributionAccount.GeneralLedgerChartAccount entered)
				return AssetAccountRVARel.DistributionAccount.GeneralLedgerChartAccount
			return ParentAssetTypeRel.AssetAccountRVARel.DistributionAccount.GeneralLedgerChartAccount
		ResolveRRADistributionAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (AssetAccountRRARel.DistributionAccount.GeneralLedgerChartAccount entered)
				return AssetAccountRRARel.DistributionAccount.GeneralLedgerChartAccount
			return ParentAssetTypeRel.AssetAccountRRARel.DistributionAccount.GeneralLedgerChartAccount

		ResolveIMADistributionAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (AssetAccountIMARel.DistributionAccount.GeneralLedgerChartAccount entered)
				return AssetAccountIMARel.DistributionAccount.GeneralLedgerChartAccount
			return ParentAssetTypeRel.AssetAccountIMARel.DistributionAccount.GeneralLedgerChartAccount

		ResolveIMLDistributionAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (AssetAccountIMLRel.DistributionAccount.GeneralLedgerChartAccount entered)
				return AssetAccountIMLRel.DistributionAccount.GeneralLedgerChartAccount
			return ParentAssetTypeRel.AssetAccountIMLRel.DistributionAccount.GeneralLedgerChartAccount
		ResolveIMTDistributionAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (AssetAccountIMTRel.DistributionAccount.GeneralLedgerChartAccount entered)
				return AssetAccountIMTRel.DistributionAccount.GeneralLedgerChartAccount
			return ParentAssetTypeRel.AssetAccountIMTRel.DistributionAccount.GeneralLedgerChartAccount
		ResolveIMWDistributionAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (AssetAccountIMWRel.DistributionAccount.GeneralLedgerChartAccount entered)
				return AssetAccountIMWRel.DistributionAccount.GeneralLedgerChartAccount
			return ParentAssetTypeRel.AssetAccountIMWRel.DistributionAccount.GeneralLedgerChartAccount
		ResolveATITransferAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (TransferInATIRel.DistributionAccount.GeneralLedgerChartAccount entered)
				return TransferInATIRel.DistributionAccount.GeneralLedgerChartAccount
			return ParentAssetTypeRel.TransferInATIRel.DistributionAccount.GeneralLedgerChartAccount
		ResolveATOTransferAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (TransferOutATORel.DistributionAccount.GeneralLedgerChartAccount entered)
				return TransferOutATORel.DistributionAccount.GeneralLedgerChartAccount
			return ParentAssetTypeRel.TransferOutATORel.DistributionAccount.GeneralLedgerChartAccount



		ASTAdditionChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			return ASTAdditionAccount.GeneralLedgerChartAccount
		ACMAdditionChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			return ACMAdditionAccount.GeneralLedgerChartAccount
		ASTAdjustmentChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			return ASTAdjustmentAccount.GeneralLedgerChartAccount
		ACMAdjustmentChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			return ACMAdjustmentAccount.GeneralLedgerChartAccount
		ASTTransferChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			return ASTTransferAccount.GeneralLedgerChartAccount
		ACMTransferChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			return ACMTransferAccount.GeneralLedgerChartAccount
		ASTDisposalChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			return ASTDisposalAccount.GeneralLedgerChartAccount
		ACMDisposalChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			return ACMDisposalAccount.GeneralLedgerChartAccount
		ASTReinstatementChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			return ASTReinstatementAccount.GeneralLedgerChartAccount
		ACMReinstatementChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			return ACMReinstatementAccount.GeneralLedgerChartAccount
		ASTRevalueChartAccount is a DerivedField 
			type is like GeneralLedgerChartAccount
			return ASTRevalueAccount.GeneralLedgerChartAccount						
		ACMRevalueChartAccount is a DerivedField 
			type is like GeneralLedgerChartAccount
			return ACMRevalueAccount.GeneralLedgerChartAccount		
		ASTImpairmentChartAccount is a DerivedField 
			type is like GeneralLedgerChartAccount
			return ASTImpairmentAccount.GeneralLedgerChartAccount		
		ACMImpairmentChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			return ACMImpairmentAccount.GeneralLedgerChartAccount		

		HasRevalueAccounts is a DerivedField
			type is Numeric size 1
			LocalRevalueAccountsExist = 0 
			for each AssetsByTypeRel
				if (each.HasRevalueAccounts = false)
					LocalRevalueAccountsExist += 1	
			if (LocalRevalueAccountsExist > 0)
				return 0
			else
				return 1	
			
		 
				
    Conditions
    	ValidForCurrentUser
    		restricted
    		when (actor.context.FinanceEnterpriseGroup = Company.FinanceEnterpriseGroup)

    	ValidForCurrentUserNoSubtypes
    		restricted
    		when (AssetType.SubType not entered
    		and ReleasedAssetExists)   		

    	ValidForCurrentUserNoSubtypes1
    		restricted
    		when (ReleasedAssetExists)
    		
        AssetAdjustmentExists
        	restricted
            classic name is ADJUST-EXIST
            when (first AssetAdjustmentsRel exists)

        AllocationExists
        	restricted
            classic name is ALLOC-EXISTS
            when (first AssetTypeAllocationsRel exists)
        
        ActiveAssetsExist
        	restricted
        	when (ActiveAssetsRel exists)  
        
        AssetsExist
        	when (AssetsByTypeRel exists)

        FundAccountingAssetType
			when (Company.FinanceEnterpriseGroup.FundAccounting
			and not AllocateDepreciationExpense)	  

		ShowDepreciationExpenseAllocation
			when ((not Company.FinanceEnterpriseGroup.FundAccounting)
			or (not AssetsExist)
			or (AllocateDepreciationExpense))
	
		ShowTransferBalancing
			when (Company.BalanceTransfers.Yes)

		AllocationsExists
			when (AssetTypeAllocationsRel exists)
		
        UnreleasedAssetExists
        	restricted
            classic name is ASSET1-EXIST
            when (first UnreleasedAssetsRel exists)

        ReleasedAssetExists
            classic name is ASSET2-EXIST
            when (ReleasedAssetsRel exists)

        PostReleaseAssetExists
        	restricted
            classic name is ASSET3-EXIST
            when (first PostReleaseAssetsRel exists)

        CompanyEntered
        	restricted
            classic name is COMPANY-EXIST
            when (Company entered)

        ClassDepreciationExists
        	restricted
            classic name is DEPR-EXISTS
            when (first ClassDepreciationsRel exists)

        AssetDisposalExists
        	restricted
            classic name is DSP-EXIST
            when (first DisposedAssetsRel exists)

        AssetBookTypeExist
        	restricted
            classic name is RATES-EXIST
            when (first AssetBookTypesRel exists)

        IsSubtypeExist
        	restricted
            when (AssetType.Type entered
            and   AssetType.SubType entered)

        AssetTransferExists
        	restricted
            classic name is TRF-EXIST
            when (first AssetTransfersRel exists)

        IsTypeExist
        	restricted
            when (AssetType.Type entered)
			
		DepreciationAccountEntered
			restricted
			when (AssetAccountACMRel.DistributionAccount.GeneralLedgerChartAccount entered)

		ExpenseAccountEntered
			restricted
			when (AssetAccountEXPRel.DistributionAccount.GeneralLedgerChartAccount entered)

		AssetAccountAstEntered
			restricted
			when (AssetAccountASTRel.DistributionAccount.GeneralLedgerChartAccount entered)

		TransferInAccountEntered
			restricted
			when (TransferInATIRel.DistributionAccount.GeneralLedgerChartAccount entered)

		TransferOutAccountEntered
			restricted
			when (TransferOutATORel.DistributionAccount.GeneralLedgerChartAccount entered)

		AssetAccountsCreated
			restricted
			when (AssetAccountsRel exists)
			
		IsIncludedInPhysicalInventory
			restricted
			when (IncludeInPhysicalInventory = true)	
			
		RecordExists
			when (AssetType exists)
			
		RevalueAccountsExist
			when (RVSDistributionAccount entered
			and RVLDistributionAccount entered)
			
		RevalueReserveAccountExists
			when (AssetAccountRRARel.DistributionAccount entered)
			
		RevalueAmortizationAccountExists
			when (AssetAccountRVARel.DistributionAccount entered)		
			
		ImpairmentAccountsExist
			when (AssetAccountIMLRel.DistributionAccount entered
			and AssetAccountIMTRel.DistributionAccount entered
			and	AssetAccountIMARel.DistributionAccount entered
			and AssetAccountIMWRel.DistributionAccount entered)

		AccumulatedImpairmentAccountExists	
			when (AssetAccountIMTRel.DistributionAccount entered)
		
		ImpairmentAmortizationAccountExists
			when (AssetAccountIMARel.DistributionAccount entered)
			
		ImpairmentLossAccountExists
			when (AssetAccountIMLRel.DistributionAccount entered)					

		ImpairmentGainLossAccountExists
			when (AssetAccountIMWRel.DistributionAccount entered)

		UseEventAccounts
			when (Company.UseEventAccounts)	
			
		ImpairedAssetsExist
			when (ImpairedAssetRel exists)	
			
		FundAccounting
			when (Company.FinanceEnterpriseGroup.FundAccounting
			and not AllocateDepreciationExpense)

		BalanceTransfers
			when (Company.BalanceTransfers.Yes)

		IsValidForActorContext
			restricted
			when (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)

		IsValidForAssetReview
			restricted
			when (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup
			and !Company.SelectAssetTypeForReview
			or (Company.SelectAssetTypeForReview
			and FlagForReview))
				
    Relations
		ParentAssetTypeRel
			one-to-one relation to AssetType
			Field Mapping uses symbolic key
				related.Company						= Company
				related.AssetType.Type 				= AssetType.Type
				related.AssetType.SubType        	= blank

    	PostingBookCalendarRel
    		one-to-many relation to BookCalendar
    		Field Mapping uses CompanyCurrentPostingBook
    			related.Company				= Company
    			related.PostingBook			= true

		HistoryPostingBooksRel
			one-to-many relation to BookCalendar
    		Field Mapping uses CompanyHistoryPostingBooks
    			related.Company				= Company
    			related.PostingBook			= true			
    	
        AssetAccountsRel
            classic name is AMACCOUNT
            one-to-many relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company           			= Company
                related.AssetAccountGroup 			= blank
            Instance Selection
                where (related.AssetType.Type 		= AssetType.Type
                and   related.AssetType.SubType 	= AssetType.SubType)

        UnreleasedAssetsRel
            classic name is AMASSET1
            one-to-many relation to Asset
            Field Mapping uses Set5
                related.FinanceEnterpriseGroup		= Company.FinanceEnterpriseGroup
                related.Status  					= 1
                related.Company 					= Company
            Instance Selection
                where (related.AssetType.Type 		= AssetType.Type
                and   related.AssetType.SubType 	= AssetType.SubType)

        ReleasedAssetsRel
            classic name is AMASSET2
            one-to-many relation to Asset
            Field Mapping uses Set5
                related.FinanceEnterpriseGroup		= Company.FinanceEnterpriseGroup            
                related.Status  					= 2
                related.Company 					= Company
            Instance Selection
                where (related.AssetType.Type 		= AssetType.Type)

        PostReleaseAssetsRel
            classic name is AMASSET3
            one-to-many relation to Asset
            Field Mapping uses Set5
                related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup            
                related.Status  					= 3
                related.Company 					= Company
            Instance Selection
                where (related.AssetType.Type 		= AssetType.Type
                and   related.AssetType.SubType 	= AssetType.SubType)

        AssetAdjustmentsRel
            classic name is AMASSETADJ
            one-to-many relation to AssetAdjustment
            Field Mapping uses Set5
                related.Company 					= Company
            Instance Selection
                where (related.AssetType.Type 		= AssetType.Type
                and   related.AssetType.SubType 	= AssetType.SubType)

        DisposedAssetsRel
            classic name is AMASSETDSP
            one-to-many relation to Asset
            Field Mapping uses Set5
                related.FinanceEnterpriseGroup		= Company.FinanceEnterpriseGroup            
                related.Status  					= 9
                related.Company 					= Company
            Instance Selection
                where (related.AssetType.Type 		= AssetType.Type
                and   related.AssetType.SubType 	= AssetType.SubType)

		ImpairedAssetRel
			one-to-many relation to Asset
            Field Mapping uses Set2
                related.FinanceEnterpriseGroup		= Company.FinanceEnterpriseGroup            
                related.Company 					= Company
            Instance Selection
                where (related.AssetType.Type 		= AssetType.Type
                and   related.AssetType.SubType 	= AssetType.SubType
                and   related.HasImpairment)				
		
		
        ActiveAssetsRel
            one-to-many relation to Asset
            Field Mapping uses Set2
                related.FinanceEnterpriseGroup		= Company.FinanceEnterpriseGroup
                related.Company 					= Company
            Instance Selection
                where (related.AssetType			= AssetType
                and related.Status  				< 9)

        ReleasedAndPostReleasedAssetsRel
            one-to-many relation to Asset
            Field Mapping uses Set2
                related.FinanceEnterpriseGroup		= Company.FinanceEnterpriseGroup
                related.Company 					= Company
            Instance Selection
                where (related.AssetType.Type = AssetType.Type	
                and related.Status  		 		> 1
                and related.Status					< 9)


       
        AssetTransfersRel
            classic name is AMASSETTRF
            one-to-many relation to AssetTransfer
            Field Mapping uses Set5
                related.Company = Company
            Instance Selection
                where (related.AssetType.Type = AssetType.Type
                and   related.AssetType.SubType = AssetType.SubType)

        AssetBookTypesRel 
        	one-to-many relation to AssetBookType
        	Field Mapping uses Set2
        		related.AssetBookType.Type 		= AssetType.Type
                related.AssetBookType.SubType	= AssetType.SubType	

        ClassDepreciationsRel
            classic name is AMCLASSDEP
            one-to-many relation to ClassDepreciation
            Field Mapping uses Set6
            Instance Selection
                where (related.AssetType.Type = AssetType.Type
                and   related.AssetType.SubType = AssetType.SubType)

        AssetTypeAllocationsRel
            classic name is AMTYPALLOC
            one-to-many relation to AssetTypeAllocation
            Field Mapping uses symbolic key
                related.Company = Company
            Instance Selection
                where (related.AssetType.Type = AssetType.Type
                and   related.AssetType.SubType = AssetType.SubType)

        AssetAccountASTRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "AST"
                related.AssetAccount.AssetEvent       = blank

        AssetAccountACMRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "ACM"
                related.AssetAccount.AssetEvent       = blank

        AssetAccountRVSRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "RVS"
                related.AssetAccount.AssetEvent       = blank

        AssetAccountRVLRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "RVL"
                related.AssetAccount.AssetEvent       = blank

        AssetAccountRVARel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "RVA"
                related.AssetAccount.AssetEvent       = blank

        AssetAccountRRARel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "RRA"
                related.AssetAccount.AssetEvent       = blank

        AssetAccountIMLRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "IML"
                related.AssetAccount.AssetEvent       = blank

        AssetAccountIMTRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "IMT"
                related.AssetAccount.AssetEvent       = blank
                
        AssetAccountIMARel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "IMA"
                related.AssetAccount.AssetEvent       = blank

        AssetAccountIMWRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "IMW"
                related.AssetAccount.AssetEvent       = blank

        AssetAccountEXPRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "EXP"
                related.AssetAccount.AssetEvent       = blank

		TransferInATIRel	
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "ATI"
                related.AssetAccount.AssetEvent       = blank		

		TransferOutATORel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "ATO"
                related.AssetAccount.AssetEvent       = blank  

        AssetAccountASTAdditionRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "AST"
                related.AssetAccount.AssetEvent       = "1"

        AssetAccountACMAdditionRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "ACM"
                related.AssetAccount.AssetEvent       = "1"

        AssetAccountASTAdjustmentRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "AST"
                related.AssetAccount.AssetEvent       = "2"

        AssetAccountACMAdjustmentRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "ACM"
                related.AssetAccount.AssetEvent       = "2"

        AssetAccountASTTransferRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "AST"
                related.AssetAccount.AssetEvent       = "3"

        AssetAccountACMTransferRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "ACM"
                related.AssetAccount.AssetEvent       = "3"

        AssetAccountASTDisposalRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "AST"
                related.AssetAccount.AssetEvent       = "4"

        AssetAccountACMDisposalRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "ACM"
                related.AssetAccount.AssetEvent       = "4"

        AssetAccountASTReinstatementRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "AST"
                related.AssetAccount.AssetEvent       = "5"

        AssetAccountACMReinstatementRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "ACM"
                related.AssetAccount.AssetEvent       = "5"


        AssetAccountASTRevalueRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "AST"
                related.AssetAccount.AssetEvent       = "6"

        AssetAccountACMRevalueRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "ACM"
                related.AssetAccount.AssetEvent       = "6"

        AssetAccountASTImpairmentRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "AST"
                related.AssetAccount.AssetEvent       = "7"

        AssetAccountACMImpairmentRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "ACM"
                related.AssetAccount.AssetEvent       = "7"

        AssetAccountADDImpairmentRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "ADD"
                related.AssetAccount.AssetEvent       = "7"

        AssetAccountADCImpairmentRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "ADC"
                related.AssetAccount.AssetEvent       = "7"

        AssetAccountATDImpairmentRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "ATD"
                related.AssetAccount.AssetEvent       = "7"

        AssetAccountATCImpairmentRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "ATC"
                related.AssetAccount.AssetEvent       = "7"

        AssetAccountAADImpairmentRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "AAD"
                related.AssetAccount.AssetEvent       = "7"
                
        AssetAccountAACImpairmentRel
            one-to-one relation to AssetAccount
            delete cascades
            Field Mapping uses symbolic key
                related.Company                       = Company
                related.AssetAccountGroup             = blank
                related.AssetType.Type                = AssetType.Type
                related.AssetType.SubType             = AssetType.SubType
                related.AssetAccount.AssetAccountType = "AAC"
                related.AssetAccount.AssetEvent       = "7"                

                	
		AssetTypeBlankSubTypeRel
			one-to-one relation to AssetType
			Field Mapping uses symbolic key
				related.Company   			= Company
				related.AssetType.Type 		= AssetType.Type
				related.AssetType.SubType	= blank
				
		AssetTypeNonBlankSubTypeRel
			one-to-many relation to AssetType
			Field Mapping uses symbolic key
				related.Company					= Company
			Instance Selection
				where (related.AssetType.Type	= AssetType.Type
				and    related.AssetType.SubType entered)

		AssetsByAssetTypeRel
			one-to-many relation to Asset
			Field Mapping uses Set2
				related.FinanceEnterpriseGroup 	= Company.FinanceEnterpriseGroup
				related.Company					= Company
			Instance Selection	
				where (related.AssetType.Type	= AssetType.Type)

		AssetsByTypeRel
			one-to-many relation to Asset
			Field Mapping uses Set2
				related.FinanceEnterpriseGroup 	= Company.FinanceEnterpriseGroup
				related.Company					= Company
			Instance Selection	
				where (related.AssetType.Type	= AssetType.Type
				and related.AssetType.SubType   = AssetType.SubType)

		AssetsRequireImpairmentOrRevaluationAccount
			one-to-many relation to Asset
			Field Mapping uses Set2
				related.FinanceEnterpriseGroup 	= Company.FinanceEnterpriseGroup
				related.Company					= Company
			Instance Selection	
				where (related.AssetType.Type	= AssetType.Type
				and related.AssetType.SubType   = AssetType.SubType
				and !related.HasRequiredRevalueAndImpairmentAccounts)

		DepreciableAssetEnteredRel								
			one-to-many relation to Asset
			Field Mapping uses Set5
				related.FinanceEnterpriseGroup 	= Company.FinanceEnterpriseGroup
				related.Status					= 1
				related.Company					= Company
				related.AssetType				= AssetType
				
		DepreciableAssetReleasedRel								
			one-to-many relation to Asset
			Field Mapping uses Set5
				related.FinanceEnterpriseGroup 	= Company.FinanceEnterpriseGroup
				related.Status					= 2
				related.Company					= Company
				related.AssetType				= AssetType
				
		DepreciableAssetPostReleaseRel							
			one-to-many relation to Asset
			Field Mapping uses Set5
				related.FinanceEnterpriseGroup 	= Company.FinanceEnterpriseGroup
				related.Status					= 3
				related.Company					= Company
				related.AssetType				= AssetType
				
		DepreciableAssetDisposedRel								
			one-to-many relation to Asset
			Field Mapping uses Set5
				related.FinanceEnterpriseGroup 	= Company.FinanceEnterpriseGroup
				related.Status					= 9
				related.Company					= Company
				related.AssetType				= AssetType
				
		AssetCompanyRel
			one-to-one relation to AssetCompany
			Field Mapping uses symbolic key
				related.Company					= Company

		AssetCompaniesRel
			one-to-many relation to AssetCompany
			Field Mapping uses symbolic key
				related.Company					> 0 	
		
		AssetProductCategoryRel is a AssetProductCategory set

		GeneralLedgerCompanyRel
			one-to-one relation to GeneralLedgerCompany
            Field Mapping uses symbolic key
            	related.Company = Company

		AssetReviewDetailRel
			one-to-many relation to AssetReviewDetail
            Field Mapping uses symbolic key
            	related.Company					= Company
				
    Sets

        Set2
            indexed
            Sort Order
                AssetType
                Company
                
        Set3
            indexed
            Sort Order
                Company
                AssetType                









        ByAssetTypeSubType
            indexed
            Sort Order
                Company
                AssetType.Type
                AssetType.SubType  

	Rule Blocks
		UpdateAssetTypeAccounts
			if (ACMDistributionAccount.GeneralLedgerChartAccount changed)
				if (AssetType.SubType = blank)
					constraint (ACMDistributionAccount.GeneralLedgerChartAccount entered)
						"AccumulatedDepreciationAccountIsRequired"
				if (ACMDistributionAccount.GeneralLedgerChartAccount not entered)
					invoke Delete AssetAccountACMRel
						LocalAccountDeletedFlag = true	
				else 		
					if (AssetAccountACMRel exists)
						invoke Update AssetAccountACMRel
							invoked.DistributionAccount		= ACMDistributionAccount
					else
						invoke Create AssetAccountACMRel
							invoked.DistributionAccount		= ACMDistributionAccount

			if (ASTDistributionAccount.GeneralLedgerChartAccount changed)
				if (AssetType.SubType = blank)
					constraint (ASTDistributionAccount.GeneralLedgerChartAccount entered)
						"AssetAccountIsRequired"
				if (ASTDistributionAccount.GeneralLedgerChartAccount not entered)
					invoke Delete AssetAccountASTRel	
					LocalAccountDeletedFlag = true		
				else
					if (AssetAccountASTRel exists)
						invoke Update AssetAccountASTRel			
							invoked.DistributionAccount		= ASTDistributionAccount
					else
						invoke Create AssetAccountASTRel			
							invoked.DistributionAccount		= ASTDistributionAccount

			if (EXPDistributionAccount.GeneralLedgerChartAccount changed)
				if (AssetType.SubType = blank)
					constraint (EXPDistributionAccount.GeneralLedgerChartAccount entered)	
						"DepreciationExpenseAccountIsRequired"
				if (EXPDistributionAccount.GeneralLedgerChartAccount not entered)
					invoke Delete AssetAccountEXPRel
					LocalAccountDeletedFlag = true
				else 		
					if (AssetAccountEXPRel exists)
						invoke Update AssetAccountEXPRel
							invoked.DistributionAccount		= EXPDistributionAccount
					else
						invoke Create AssetAccountEXPRel
							invoked.DistributionAccount		= EXPDistributionAccount

			if (RVSDistributionAccount.GeneralLedgerChartAccount changed)
				if (RVSDistributionAccount.GeneralLedgerChartAccount entered)		
					if (AssetAccountRVSRel exists)
						invoke Update AssetAccountRVSRel
							invoked.DistributionAccount		= RVSDistributionAccount
					else
						invoke Create AssetAccountRVSRel
							invoked.DistributionAccount		= RVSDistributionAccount
				else 
					invoke Delete AssetAccountRVSRel						
					LocalAccountDeletedFlag = true
											
			if (RVLDistributionAccount.GeneralLedgerChartAccount changed)
				if (RVLDistributionAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountRVLRel exists)
						invoke Update AssetAccountRVLRel
							invoked.DistributionAccount		= RVLDistributionAccount
					else
						invoke Create AssetAccountRVLRel
							invoked.DistributionAccount		= RVLDistributionAccount
				else 
					invoke Delete AssetAccountRVLRel
					LocalAccountDeletedFlag = true
											
			if (RVADistributionAccount.GeneralLedgerChartAccount changed)
				if (RVADistributionAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountRVARel exists)
						invoke Update AssetAccountRVARel
							invoked.DistributionAccount		= RVADistributionAccount
					else
						invoke Create AssetAccountRVARel
							invoked.DistributionAccount		= RVADistributionAccount
				else 
					invoke Delete AssetAccountRVARel
					LocalAccountDeletedFlag = true
																
			if (RRADistributionAccount.GeneralLedgerChartAccount changed)
				if (RRADistributionAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountRRARel exists)
						invoke Update AssetAccountRRARel
							invoked.DistributionAccount		= RRADistributionAccount
					else
						invoke Create AssetAccountRRARel
							invoked.DistributionAccount		= RRADistributionAccount
				else 
					invoke Delete AssetAccountRRARel
					LocalAccountDeletedFlag = true
																
			if (IMLDistributionAccount.GeneralLedgerChartAccount changed)
				if (IMLDistributionAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountIMLRel exists)
						invoke Update AssetAccountIMLRel
							invoked.DistributionAccount		= IMLDistributionAccount
					else
						invoke Create AssetAccountIMLRel
							invoked.DistributionAccount		= IMLDistributionAccount
				else 
					invoke Delete AssetAccountIMLRel
					LocalAccountDeletedFlag = true
											
			if (IMTDistributionAccount.GeneralLedgerChartAccount changed)
				if (IMTDistributionAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountIMTRel exists)
						invoke Update AssetAccountIMTRel
							invoked.DistributionAccount		= IMTDistributionAccount
					else
						invoke Create AssetAccountIMTRel
							invoked.DistributionAccount		= IMTDistributionAccount
				else 
					invoke Delete AssetAccountIMTRel
					LocalAccountDeletedFlag = true
											
			if (IMADistributionAccount.GeneralLedgerChartAccount changed)
				if (IMADistributionAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountIMARel exists)
						invoke Update AssetAccountIMARel
							invoked.DistributionAccount		= IMADistributionAccount
					else
						invoke Create AssetAccountIMARel
							invoked.DistributionAccount		= IMADistributionAccount
				else 
					invoke Delete AssetAccountIMARel
					LocalAccountDeletedFlag = true

			if (IMWDistributionAccount.GeneralLedgerChartAccount changed)
				if (IMWDistributionAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountIMWRel exists)
						invoke Update AssetAccountIMWRel
							invoked.DistributionAccount		= IMWDistributionAccount
					else
						invoke Create AssetAccountIMWRel
							invoked.DistributionAccount		= IMWDistributionAccount
				else 
					invoke Delete AssetAccountIMARel
					LocalAccountDeletedFlag = true
																					
			if (ASTAdditionAccount.GeneralLedgerChartAccount changed)
				if (ASTAdditionAccount.GeneralLedgerChartAccount entered)		
					if (AssetAccountASTAdditionRel exists)
						invoke Update AssetAccountASTAdditionRel
							invoked.DistributionAccount		= ASTAdditionAccount
					else
						invoke Create AssetAccountASTAdditionRel
							invoked.DistributionAccount		= ASTAdditionAccount
				else 
					invoke Delete AssetAccountASTAdditionRel
					LocalAccountDeletedFlag = true
											
			if (ACMAdditionAccount.GeneralLedgerChartAccount changed)
				if (ACMAdditionAccount.GeneralLedgerChartAccount entered)						
					if (AssetAccountACMAdditionRel exists)
						invoke Update AssetAccountACMAdditionRel
							invoked.DistributionAccount		= ACMAdditionAccount
					else
						invoke Create AssetAccountACMAdditionRel
							invoked.DistributionAccount		= ACMAdditionAccount
				else 
					invoke Delete AssetAccountACMAdditionRel
					LocalAccountDeletedFlag = true
												
			if (ASTAdjustmentAccount.GeneralLedgerChartAccount changed)
				if (ASTAdjustmentAccount.GeneralLedgerChartAccount entered)
					if (AssetAccountASTAdjustmentRel exists)
						invoke Update AssetAccountASTAdjustmentRel
							invoked.DistributionAccount		= ASTAdjustmentAccount
					else
						invoke Create AssetAccountASTAdjustmentRel
							invoked.DistributionAccount		= ASTAdjustmentAccount
				else 
					invoke Delete AssetAccountASTAdjustmentRel	
					LocalAccountDeletedFlag = true
												
	

			if (ACMAdjustmentAccount.GeneralLedgerChartAccount changed)
				if (ACMAdjustmentAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountACMAdjustmentRel exists)
						invoke Update AssetAccountACMAdjustmentRel
							invoked.DistributionAccount		= ACMAdjustmentAccount
					else
						invoke Create AssetAccountACMAdjustmentRel
							invoked.DistributionAccount		= ACMAdjustmentAccount
				else 
					invoke Delete AssetAccountACMAdjustmentRel		
					LocalAccountDeletedFlag = true
			if (ASTTransferAccount.GeneralLedgerChartAccount changed)
				if (ASTTransferAccount.GeneralLedgerChartAccount entered)		
					if (AssetAccountASTTransferRel exists)
						invoke Update AssetAccountASTTransferRel
							invoked.DistributionAccount		= ASTTransferAccount
					else
			
						invoke Create AssetAccountASTTransferRel
							invoked.DistributionAccount		= ASTTransferAccount
				else 
					invoke Delete AssetAccountASTTransferRel		
					LocalAccountDeletedFlag = true
						
			if (ACMTransferAccount.GeneralLedgerChartAccount changed)
				if (ACMTransferAccount.GeneralLedgerChartAccount entered)		
					if (AssetAccountACMTransferRel exists)
						invoke Update AssetAccountACMTransferRel
							invoked.DistributionAccount		= ACMTransferAccount
					else
						invoke Create AssetAccountACMTransferRel
							invoked.DistributionAccount		= ACMTransferAccount
				else 
					invoke Delete AssetAccountACMTransferRel
					LocalAccountDeletedFlag = true						
						
			if (ASTDisposalAccount.GeneralLedgerChartAccount changed)
				if (ASTDisposalAccount.GeneralLedgerChartAccount entered)						
					if (AssetAccountASTDisposalRel exists)
						invoke Update AssetAccountASTDisposalRel
							invoked.DistributionAccount		= ASTDisposalAccount
					else
						invoke Create AssetAccountASTDisposalRel
							invoked.DistributionAccount		= ASTDisposalAccount
				else 
					invoke Delete AssetAccountASTDisposalRel
					LocalAccountDeletedFlag = true						
	
			if (ACMDisposalAccount.GeneralLedgerChartAccount changed)
				if (ACMDisposalAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountACMDisposalRel exists)
						invoke Update AssetAccountACMDisposalRel
							invoked.DistributionAccount		= ACMDisposalAccount
					else
						invoke Create AssetAccountACMDisposalRel
							invoked.DistributionAccount		= ACMDisposalAccount
				else 
					invoke Delete AssetAccountACMDisposalRel
					LocalAccountDeletedFlag = true
					
			if (ASTReinstatementAccount.GeneralLedgerChartAccount changed)
				if (ASTReinstatementAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountASTReinstatementRel exists)
						invoke Update AssetAccountASTReinstatementRel
							invoked.DistributionAccount		= ASTReinstatementAccount
					else
						invoke Create AssetAccountASTReinstatementRel
							invoked.DistributionAccount		= ASTReinstatementAccount
				else 
					invoke Delete AssetAccountASTReinstatementRel
					LocalAccountDeletedFlag = true						
	
			if (ACMReinstatementAccount.GeneralLedgerChartAccount changed)
				if (ACMReinstatementAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountACMReinstatementRel exists)
						invoke Update AssetAccountACMReinstatementRel
							invoked.DistributionAccount		= ACMReinstatementAccount
					else
						invoke Create AssetAccountACMReinstatementRel
							invoked.DistributionAccount		= ACMReinstatementAccount
				else 
					invoke Delete AssetAccountACMReinstatementRel
					LocalAccountDeletedFlag = true

			if (ASTReinstatementAccount.GeneralLedgerChartAccount changed)
				if (ASTReinstatementAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountASTReinstatementRel exists)
						invoke Update AssetAccountASTReinstatementRel
							invoked.DistributionAccount		= ASTReinstatementAccount
					else
						invoke Create AssetAccountASTReinstatementRel
							invoked.DistributionAccount		= ASTReinstatementAccount
				else 
					invoke Delete AssetAccountASTReinstatementRel
					LocalAccountDeletedFlag = true						
	
			if (ACMRevalueAccount.GeneralLedgerChartAccount changed)
				if (ACMRevalueAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountACMRevalueRel exists)
						invoke Update AssetAccountACMRevalueRel
							invoked.DistributionAccount		= ACMRevalueAccount
					else
						invoke Create AssetAccountACMRevalueRel
							invoked.DistributionAccount		= ACMRevalueAccount
				else 
					invoke Delete AssetAccountACMRevalueRel
					LocalAccountDeletedFlag = true
					
			if (ASTRevalueAccount.GeneralLedgerChartAccount changed)
				if (ASTRevalueAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountASTRevalueRel exists)
						invoke Update AssetAccountASTRevalueRel
							invoked.DistributionAccount		= ASTRevalueAccount
					else
						invoke Create AssetAccountASTRevalueRel
							invoked.DistributionAccount		= ASTRevalueAccount
				else 
					invoke Delete AssetAccountASTRevalueRel
					LocalAccountDeletedFlag = true
									

			if (ASTImpairmentAccount.GeneralLedgerChartAccount changed)
				if (ASTImpairmentAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountASTImpairmentRel exists)
						invoke Update AssetAccountASTImpairmentRel
							invoked.DistributionAccount		= ASTImpairmentAccount
					else
						invoke Create AssetAccountASTImpairmentRel
							invoked.DistributionAccount		= ASTImpairmentAccount
				else 
					invoke Delete AssetAccountASTImpairmentRel
					LocalAccountDeletedFlag = true	

			if (ACMImpairmentAccount.GeneralLedgerChartAccount changed)
				if (ACMImpairmentAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountACMImpairmentRel exists)
						invoke Update AssetAccountACMImpairmentRel
							invoked.DistributionAccount		= ACMImpairmentAccount
					else
						invoke Create AssetAccountACMImpairmentRel
							invoked.DistributionAccount		= ACMImpairmentAccount
				else 
					invoke Delete AssetAccountACMImpairmentRel
					LocalAccountDeletedFlag = true
					
			if (ADDImpairmentAccount.GeneralLedgerChartAccount changed)
				if (ADDImpairmentAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountADDImpairmentRel exists)
						invoke Update AssetAccountADDImpairmentRel
							invoked.DistributionAccount		= ADDImpairmentAccount
					else
						invoke Create AssetAccountADDImpairmentRel
							invoked.DistributionAccount		= ADDImpairmentAccount
				else 
					invoke Delete AssetAccountADDImpairmentRel
					LocalAccountDeletedFlag = true	

			if (ADCImpairmentAccount.GeneralLedgerChartAccount changed)	   
				if (ADCImpairmentAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountADCImpairmentRel exists)
						invoke Update AssetAccountADCImpairmentRel
							invoked.DistributionAccount		= ADCImpairmentAccount
					else
						invoke Create AssetAccountADCImpairmentRel
							invoked.DistributionAccount		= ADCImpairmentAccount
				else 
					invoke Delete AssetAccountADCImpairmentRel
					LocalAccountDeletedFlag = true	
					
			if (ATDImpairmentAccount.GeneralLedgerChartAccount changed)   
				if (ATDImpairmentAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountATDImpairmentRel exists)
						invoke Update AssetAccountATDImpairmentRel
							invoked.DistributionAccount		= ATDImpairmentAccount
					else
						invoke Create AssetAccountATDImpairmentRel
							invoked.DistributionAccount		= ATDImpairmentAccount
				else 
					invoke Delete AssetAccountATDImpairmentRel
					LocalAccountDeletedFlag = true	

			if (ATCImpairmentAccount.GeneralLedgerChartAccount changed)   
				if (ATCImpairmentAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountATCImpairmentRel exists)
						invoke Update AssetAccountATCImpairmentRel
							invoked.DistributionAccount		= ATCImpairmentAccount
					else
						invoke Create AssetAccountATCImpairmentRel
							invoked.DistributionAccount		= ATCImpairmentAccount
				else 
					invoke Delete AssetAccountATCImpairmentRel
					LocalAccountDeletedFlag = true						

			if (AADImpairmentAccount.GeneralLedgerChartAccount changed)  
				if (AADImpairmentAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountAADImpairmentRel exists)
						invoke Update AssetAccountAADImpairmentRel
							invoked.DistributionAccount		= AADImpairmentAccount
					else
						invoke Create AssetAccountAADImpairmentRel
							invoked.DistributionAccount		= AADImpairmentAccount
				else 
					invoke Delete AssetAccountAADImpairmentRel
					LocalAccountDeletedFlag = true											

			if (AACImpairmentAccount.GeneralLedgerChartAccount changed)  
				if (AACImpairmentAccount.GeneralLedgerChartAccount entered)	
					if (AssetAccountAACImpairmentRel exists)
						invoke Update AssetAccountAACImpairmentRel
							invoked.DistributionAccount		= AACImpairmentAccount
					else
						invoke Create AssetAccountAACImpairmentRel
							invoked.DistributionAccount		= AACImpairmentAccount
				else 
					invoke Delete AssetAccountAACImpairmentRel
					LocalAccountDeletedFlag = true															


			if (ATITransferAccount.GeneralLedgerChartAccount changed)
				if (ATITransferAccount not entered)
					constraint (Company.BalanceTransfers.No)
						"TransferAccountIsRequiredWhenCompanyBalanceTransfersIsSelected"
					invoke Delete TransferInATIRel
						LocalAccountDeletedFlag = true	
				else 		
					if (TransferInATIRel exists)
						invoke Update TransferInATIRel
							invoked.DistributionAccount		= ATITransferAccount
					else
						invoke Create TransferInATIRel
							invoked.DistributionAccount		= ATITransferAccount

			if (ATOTransferAccount.GeneralLedgerChartAccount changed)
				if (ATOTransferAccount not entered)
					invoke Delete TransferOutATORel
						LocalAccountDeletedFlag = true	
				else 		
					if (TransferOutATORel exists)
						invoke Update TransferOutATORel
							invoked.DistributionAccount		= ATOTransferAccount
					else
						invoke Create TransferOutATORel
							invoked.DistributionAccount		= ATOTransferAccount							

		UpdateTransferAccounts
			if (ATITransferAccount.GeneralLedgerChartAccount changed)
				if (ATITransferAccount not entered)
					constraint (Company.BalanceTransfers.No)
						"TransferAccountIsRequiredWhenCompanyBalanceTransfersIsSelected"
					invoke Delete TransferInATIRel
						LocalAccountDeletedFlag = true	
				else 		
					if (TransferInATIRel exists)
						invoke Update TransferInATIRel
							invoked.DistributionAccount		= ATITransferAccount
					else
						invoke Create TransferInATIRel
							invoked.DistributionAccount		= ATITransferAccount

			if (ATOTransferAccount.GeneralLedgerChartAccount changed)
				if (ATOTransferAccount not entered)
					invoke Delete TransferOutATORel
						LocalAccountDeletedFlag = true	
				else 		
					if (TransferOutATORel exists)
						invoke Update TransferOutATORel
							invoked.DistributionAccount		= ATOTransferAccount
					else
						invoke Create TransferOutATORel
							invoked.DistributionAccount		= ATOTransferAccount	






		CreateAssetTypeAccounts
			if (AssetAccountACMRel exists)
			 	if (ACMDistributionAccount changed)
					if (ACMDistributionAccount entered)
						invoke Update AssetAccountACMRel
							invoked.DistributionAccount = ACMDistributionAccount
					else 
						invoke Delete AssetAccountACMRel		
			else
				if (ACMDistributionAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountACMRel
						invoked.DistributionAccount		= ACMDistributionAccount
						
			if (AssetAccountASTRel exists)
			 	if (ASTDistributionAccount changed)
					if (ASTDistributionAccount entered)
						invoke Update AssetAccountASTRel
							invoked.DistributionAccount = ASTDistributionAccount
					else 
						invoke Delete AssetAccountASTRel		
			else
				if (ASTDistributionAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountASTRel
						invoked.DistributionAccount		= ASTDistributionAccount
						
			if (AssetAccountEXPRel exists)
			 	if (EXPDistributionAccount changed)
					if (EXPDistributionAccount entered)
						invoke Update AssetAccountEXPRel
							invoked.DistributionAccount = EXPDistributionAccount
					else 
						invoke Delete AssetAccountEXPRel		
			else
				if (EXPDistributionAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountEXPRel
						invoked.DistributionAccount		= EXPDistributionAccount

			if (AssetAccountRVSRel exists)
			 	if (RVSDistributionAccount changed)
					if (RVSDistributionAccount entered)
						invoke Update AssetAccountRVSRel
							invoked.DistributionAccount = RVSDistributionAccount
					else 
						invoke Delete AssetAccountRVSRel		
			else
				if (RVSDistributionAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountRVSRel
						invoked.DistributionAccount		= RVSDistributionAccount
						
			if (AssetAccountRVLRel exists)
			 	if (RVLDistributionAccount changed)
					if (RVLDistributionAccount entered)
						invoke Update AssetAccountRVLRel
							invoked.DistributionAccount = RVLDistributionAccount
					else 
						invoke Delete AssetAccountRVLRel		
			else
				if (RVLDistributionAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountRVLRel
						invoked.DistributionAccount		= RVLDistributionAccount

			if (AssetAccountRVARel exists)
			 	if (RVADistributionAccount changed)
					if (RVADistributionAccount entered)
						invoke Update AssetAccountRVARel
							invoked.DistributionAccount = RVADistributionAccount
					else 
						invoke Delete AssetAccountRVARel		
			else
				if (RVADistributionAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountRVARel
						invoked.DistributionAccount		= RVADistributionAccount

			if (AssetAccountRRARel exists)
			 	if (RRADistributionAccount changed)
					if (RRADistributionAccount entered)
						invoke Update AssetAccountRRARel
							invoked.DistributionAccount = RRADistributionAccount
					else 
						invoke Delete AssetAccountRRARel		
			else
				if (RRADistributionAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountRRARel
						invoked.DistributionAccount		= RRADistributionAccount

			if (AssetAccountIMLRel exists)
			 	if (IMLDistributionAccount changed)
					if (IMLDistributionAccount entered)
						invoke Update AssetAccountIMLRel
							invoked.DistributionAccount = IMLDistributionAccount
					else 
						invoke Delete AssetAccountIMLRel		
			else
				if (IMLDistributionAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountIMLRel
						invoked.DistributionAccount		= IMLDistributionAccount

			if (AssetAccountIMTRel exists)
			 	if (IMTDistributionAccount changed)
					if (IMTDistributionAccount entered)
						invoke Update AssetAccountIMTRel
							invoked.DistributionAccount = IMTDistributionAccount
					else 
						invoke Delete AssetAccountIMTRel		
			else
				if (IMTDistributionAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountIMTRel
						invoked.DistributionAccount		= IMTDistributionAccount

			if (AssetAccountIMARel exists)
			 	if (IMADistributionAccount changed)
					if (IMADistributionAccount entered)
						invoke Update AssetAccountIMARel
							invoked.DistributionAccount = IMADistributionAccount
					else 
						invoke Delete AssetAccountIMARel		
			else
				if (IMADistributionAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountIMARel
						invoked.DistributionAccount		= IMADistributionAccount

			if (AssetAccountIMWRel exists)
			 	if (IMWDistributionAccount changed)
					if (IMWDistributionAccount entered)
						invoke Update AssetAccountIMWRel
							invoked.DistributionAccount = IMWDistributionAccount
					else 
						invoke Delete AssetAccountIMWRel		
			else
				if (IMWDistributionAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountIMWRel
						invoked.DistributionAccount		= IMWDistributionAccount
						
			if (AssetAccountASTAdditionRel exists)
			 	if (ASTAdditionAccount changed)
					if (ASTAdditionAccount entered)
						invoke Update AssetAccountASTAdditionRel
							invoked.DistributionAccount = ASTAdditionAccount
					else 
						invoke Delete AssetAccountASTAdditionRel		
			else
				if (ASTAdditionAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountASTAdditionRel
						invoked.DistributionAccount		= ASTAdditionAccount
						
			if (AssetAccountACMAdditionRel exists)
			 	if (ACMAdditionAccount changed)
					if (ACMAdditionAccount entered)
						invoke Update AssetAccountACMAdditionRel
							invoked.DistributionAccount = ACMAdditionAccount
					else 
						invoke Delete AssetAccountACMAdditionRel		
			else
				if (ACMAdditionAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountACMAdditionRel
						invoked.DistributionAccount		= ACMAdditionAccount

			if (AssetAccountASTAdjustmentRel exists)
			 	if (ASTAdjustmentAccount changed)
					if (ASTAdjustmentAccount entered)
						invoke Update AssetAccountASTAdjustmentRel
							invoked.DistributionAccount = ASTAdjustmentAccount
					else 
						invoke Delete AssetAccountASTAdjustmentRel		
			else
				if (ASTAdjustmentAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountASTAdjustmentRel
						invoked.DistributionAccount		= ASTAdjustmentAccount

			if (AssetAccountACMAdjustmentRel exists)
			 	if (ACMAdjustmentAccount changed)
					if (ACMAdjustmentAccount entered)
						invoke Update AssetAccountACMAdjustmentRel
							invoked.DistributionAccount = ACMAdjustmentAccount
					else 
						invoke Delete AssetAccountACMAdjustmentRel		
			else
				if (ACMAdjustmentAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountACMAdjustmentRel
						invoked.DistributionAccount		= ACMAdjustmentAccount

			if (AssetAccountASTTransferRel exists)
			 	if (ASTTransferAccount.GeneralLedgerChartAccount changed)
					if (ASTTransferAccount.GeneralLedgerChartAccount entered)
						invoke Update AssetAccountASTTransferRel
							invoked.DistributionAccount = ASTTransferAccount
					else 
						invoke Delete AssetAccountASTTransferRel		
			else
				if (ASTTransferAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountASTTransferRel
						invoked.DistributionAccount		= ASTTransferAccount
						
			if (AssetAccountACMTransferRel exists)
			 	if (ACMTransferAccount changed)
					if (ACMTransferAccount entered)
						invoke Update AssetAccountACMTransferRel
							invoked.DistributionAccount = ACMTransferAccount
					else 
						invoke Delete AssetAccountACMTransferRel		
			else
				if (ACMTransferAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountACMTransferRel
						invoked.DistributionAccount		= ACMTransferAccount


			if (AssetAccountASTDisposalRel exists)
			 	if (ASTDisposalAccount changed)
					if (ASTDisposalAccount entered)
						invoke Update AssetAccountASTDisposalRel
							invoked.DistributionAccount = ASTDisposalAccount
					else 
						invoke Delete AssetAccountASTDisposalRel		
			else
				if (ASTDisposalAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountASTDisposalRel
						invoked.DistributionAccount		= ASTDisposalAccount
						
			if (AssetAccountACMDisposalRel exists)
			 	if (ACMDisposalAccount changed)
					if (ACMDisposalAccount entered)
						invoke Update AssetAccountACMDisposalRel
							invoked.DistributionAccount = ACMDisposalAccount
					else 
						invoke Delete AssetAccountACMDisposalRel		
			else
				if (ACMDisposalAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountACMDisposalRel
						invoked.DistributionAccount		= ACMDisposalAccount

			if (AssetAccountASTReinstatementRel exists)
			 	if (ASTReinstatementAccount changed)
					if (ASTReinstatementAccount entered)
						invoke Update AssetAccountASTReinstatementRel
							invoked.DistributionAccount = ASTReinstatementAccount
					else 
						invoke Delete AssetAccountASTReinstatementRel		
			else
				if (ASTReinstatementAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountASTReinstatementRel
						invoked.DistributionAccount		= ASTReinstatementAccount
						
			if (AssetAccountACMReinstatementRel exists)
			 	if (ACMReinstatementAccount changed)
					if (ACMReinstatementAccount entered)
						invoke Update AssetAccountACMReinstatementRel
							invoked.DistributionAccount = ACMReinstatementAccount
					else 
						invoke Delete AssetAccountACMReinstatementRel		
			else
				if (ACMReinstatementAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountACMReinstatementRel
						invoked.DistributionAccount		= ACMReinstatementAccount

			if (AssetAccountASTRevalueRel exists)
			 	if (ASTRevalueAccount changed)
					if (ASTRevalueAccount entered)
						invoke Update AssetAccountASTRevalueRel
							invoked.DistributionAccount = ASTRevalueAccount
					else 
						invoke Delete AssetAccountASTRevalueRel		
			else
				if (ASTRevalueAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountASTRevalueRel
						invoked.DistributionAccount		= ASTRevalueAccount
						
			if (AssetAccountACMRevalueRel exists)
			 	if (ACMRevalueAccount changed)
					if (ACMRevalueAccount entered)
						invoke Update AssetAccountACMRevalueRel
							invoked.DistributionAccount = ACMRevalueAccount
					else 
						invoke Delete AssetAccountACMRevalueRel		
			else
				if (ACMRevalueAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountACMRevalueRel
						invoked.DistributionAccount		= ACMRevalueAccount

			if (AssetAccountASTImpairmentRel exists)
			 	if (ASTImpairmentAccount changed)
					if (ASTImpairmentAccount entered)
						invoke Update AssetAccountASTImpairmentRel
							invoked.DistributionAccount = ASTImpairmentAccount
					else 
						invoke Delete AssetAccountASTImpairmentRel		
			else
				if (ASTImpairmentAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountASTImpairmentRel
						invoked.DistributionAccount		= ASTImpairmentAccount
						
			if (AssetAccountACMImpairmentRel exists)
			 	if (ACMImpairmentAccount changed)
					if (ACMImpairmentAccount entered)
						invoke Update AssetAccountACMImpairmentRel
							invoked.DistributionAccount = ACMImpairmentAccount
					else 
						invoke Delete AssetAccountACMImpairmentRel		
			else
				if (ACMImpairmentAccount.GeneralLedgerChartAccount entered)
					invoke Create AssetAccountACMImpairmentRel
						invoked.DistributionAccount		= ACMImpairmentAccount

			if (TransferInATIRel exists)
			 	if (ATITransferAccount changed)
					if (ATITransferAccount entered)
						invoke Update TransferInATIRel
							invoked.DistributionAccount = ATITransferAccount
					else 
						invoke Delete TransferInATIRel		
			else
				if (ATITransferAccount.GeneralLedgerChartAccount entered)
					invoke Create TransferInATIRel
						invoked.DistributionAccount		= ATITransferAccount

			if (TransferOutATORel exists)
			 	if (ATOTransferAccount changed)
					if (ATOTransferAccount entered)
						invoke Update TransferOutATORel
							invoked.DistributionAccount = ATOTransferAccount
					else 
						invoke Delete TransferOutATORel		
			else
				if (ATOTransferAccount.GeneralLedgerChartAccount entered)
					invoke Create TransferOutATORel
						invoked.DistributionAccount		= ATOTransferAccount
	
		
		AssetTypeEdits
			constraint (AssetCompanyRel exists)
				"CannotAddAssetType,AssetCompanyDoesNotExist"
			if (AssetType.SubType = blank)
				if (Property.Land
				or  Property.Stock)
					constraint (!DepreciableAssetEnteredRel.AssetCategory.Depreciable
					and			!DepreciableAssetReleasedRel.AssetCategory.Depreciable
					and			!DepreciableAssetPostReleaseRel.AssetCategory.Depreciable
					and			!DepreciableAssetDisposedRel.AssetCategory.Depreciable)
						"PropertyType<Property>IsNotValidWithDepreciableAsset"	
					constraint (ASTDistributionAccount.GeneralLedgerChartAccount entered)
						"DefaultAssetAccountIsRequired"	
				if	(Property.Personal
				or	 Property.Real
				or	 Property.Other)
					constraint (ASTDistributionAccount.GeneralLedgerChartAccount entered)
						"DefaultAssetAccountIsRequired"	
					constraint (ACMDistributionAccount.GeneralLedgerChartAccount entered)
						"AccountForAccumulatedDepreciationIsRequired"		
					constraint (EXPDistributionAccount.GeneralLedgerChartAccount entered)
						"AccountForDepreciationExpenseIsRequired"				
			else
				constraint (AssetTypeBlankSubTypeRel exists)					
					"CannotAddSubtype;TypeDoesNotExist"	
				if (ParentAssetTypeRel.Property.Land)
					if(!Property.Land)
						constraint (ASTDistributionAccount.GeneralLedgerChartAccount entered)
							"AssetAccountIsRequired"	
						constraint (ACMDistributionAccount.GeneralLedgerChartAccount entered)
							"AccumulatedDepreciationAccountIsRequired"		
						constraint (EXPDistributionAccount.GeneralLedgerChartAccount entered)
							"DepreciationExpenseAccountIsRequired"
			if (ImpairedAssetsExist)
				constraint (Impairment = true)
					"ImpairmentCannotBeChangedImpairedAssetsExist"
			if (AssetType.Impairment)
				if (AssetType.SubType = blank)
					constraint (IMLDistributionAccount.GeneralLedgerChartAccount entered)
						"ImpairmentAccountsAreRequired"	
					constraint (IMTDistributionAccount.GeneralLedgerChartAccount entered)
						"ImpairmentAccountsAreRequired"	
					constraint (IMADistributionAccount.GeneralLedgerChartAccount entered)
						"ImpairmentAccountsAreRequired"	
					constraint (IMWDistributionAccount.GeneralLedgerChartAccount entered)
						"ImpairmentAccountsAreRequired"	
					constraint (AACImpairmentAccount.GeneralLedgerChartAccount entered)
						"ImpairmentAccountsAreRequired"	
					constraint (AADImpairmentAccount.GeneralLedgerChartAccount entered)	
						"ImpairmentAccountsAreRequired"	
					constraint (ATCImpairmentAccount.GeneralLedgerChartAccount entered)
						"ImpairmentAccountsAreRequired"		
					constraint (ATDImpairmentAccount.GeneralLedgerChartAccount entered)
						"ImpairmentAccountsAreRequired"		
					constraint (ADDImpairmentAccount.GeneralLedgerChartAccount entered)	
						"ImpairmentAccountsAreRequired"	
					constraint (ADCImpairmentAccount.GeneralLedgerChartAccount entered)	
						"ImpairmentAccountsAreRequired"	
			if (Company.BalanceTransfers.Yes)
				constraint (ATOTransferAccount entered)		
					"TransferAccountIsRequiredWhenCompanyBalanceTransfersIsSelected"	
				constraint (ATITransferAccount entered)		
					"TransferAccountIsRequiredWhenCompanyBalanceTransfersIsSelected"	
			if (ATITransferAccount entered)
				constraint (ATOTransferAccount entered)
					"BothTransferFromAndToAccountsAreRequired"			
			if (ATOTransferAccount entered)
				constraint (ATITransferAccount entered)
					"BothTransferFromAndToAccountsAreRequired"	

		DeleteRules
			constraint (DepreciableAssetEnteredRel not exists
			and			DepreciableAssetReleasedRel not exists
			and			DepreciableAssetPostReleaseRel not exists
			and			DepreciableAssetDisposedRel not exists)
				"CannotDelete;TypeCurrentlyBeingUsed"	
			if (!AssetType.SubType entered) 	
				constraint(AssetTypeNonBlankSubTypeRel not exists)
					"CannotDelete;SubtypesExist"	
			
	Field Rules
	
		AssetType
			if (AssetType.SubType entered)
				constraint (AssetTypeBlankSubTypeRel exists)					
					"CannotAddSubtype;<AssetType>TypeDoesNotExistYet"		


		Description
			required
			constraint (Description entered)
				"AssetTypeDescriptionIsRequired"			
				
		Property
			required
				"PropertyTypeIsRequired"			
		
		Revalue 
			if (!Company.Revalue)
				constraint (!Revalue)
					"RevalueShouldNotBeSetIfCompanyRevalueIsNotSelected"		
		
		RevalueMethod
			if (Revalue)
				required
					"RevalueMethodIsRequiredIfCompanyRevalueIsSelected"			
			else
				cannot be entered
					"CannotEnterRevalueMethod;RevalueIsNotSelected"			
		
		PostToAccount
			if (PostToAccount.RevaluationReserve)
				constraint (RevalueMethod = "P")
					"ProportionateRevalueMethodIsRequiredWhenPostingToRevaluationReserve"
				for each AssetsByTypeRel
					LocalAsset = each.Asset
					constraint (each.HasRevalueAccounts)
						"Asset<LocalAsset>DoesNotHaveRequiredRevaluationAccountsAndOrDimensions"				

		AmortizeRevaluation
			constraint (PostToAccount.RevaluationReserve)
				"MustPostToRevaluationReserveToAmortizeRevaluationReserve"
			
		
		Impairment
			if (Company.Impairment = blank)
				cannot be entered
					"AssetCompanyDoesNotAllowImpairment"

		AllocateDepreciationExpense
			if (Company.FinanceEnterpriseGroup.FundAccounting
			and ActiveAssetsExist)
				cannot be entered
					"FundAccountingIsImplemented,OnceAssetsExistDepreciationExpenseAllocationsAreNotAllowedOnTheAssetType"   

 	Actions
        Create is a Create Action
        	Entrance Rules
        		Company = TransientAssetCompany

        	Exit Rules
				include CreateAssetTypeAccounts
				include AssetTypeEdits


		T2VCreate is a Create Action				
			restricted 
			default label is untranslatable 
			bypass field rules 

		T2VUpdate is an Update Action				
			restricted 
			default label is untranslatable 
			bypass field rules 

        Update is an Update Action
			Field Rules
				ASTDistributionAccount				
					if (ActiveAssetsExist)
						cannot be changed
							"CannotChange;_\Asset(s)Exists"                         
						
				ACMDistributionAccount	
					if (ActiveAssetsExist)
						cannot be changed
							"CannotChange;_\Asset(s)Exists"                         

				EXPDistributionAccount							
					if (ActiveAssetsExist)
						cannot be changed
							"CannotChange;_\Asset(s)Exists"                         
			
			Entrance Rules
				initialize LocalAccountDeletedFlag
				if(AssetReviewDetailRel exists
				and FlagForReview changed)
					confirmation required
						"ChangingThisFieldWillNeedToDoRebuildAssetReviewDetailRecords"
		
        	Action Rules
				include UpdateAssetTypeAccounts
				include AssetTypeEdits
				
			Exit Rules
				for each AssetsRequireImpairmentOrRevaluationAccount
					LocalAsset = each.Asset
				constraint (!AssetsRequireImpairmentOrRevaluationAccount exists)
					"ImpairmentAndOrRevaluationAccountsAndDimensionsMustBeProvidedForAllAssetsRelatedToThisAssetType:VerifyAsset<LocalAsset>"
		        if (LocalAccountDeletedFlag)  
		           	confirmation required
						"AccountDeleted;RefreshFormToComplete"

		BalanceTransfersUpdate is an Instance Action
			restricted
			Parameters	
				TransferOutAccount  is a GeneralLedgerChartAccount
				TransferInAccount	is a GeneralLedgerChartAccount
			Action Rules
				ATOTransferAccount.GeneralLedgerChartAccount	= TransferOutAccount
				ATITransferAccount.GeneralLedgerChartAccount 	= TransferInAccount
				include UpdateTransferAccounts
				if (ATITransferAccount entered)
					constraint (ATOTransferAccount entered)
						"WhenEnteredBothTransferFromAndToAccountsAreRequired"		

        Delete is a Delete Action
			Action Rules
				include DeleteRules				



