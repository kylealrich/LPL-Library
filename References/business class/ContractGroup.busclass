ContractGroup is a BusinessClass
	owned by po
	prefix is CGRP
	representative text is "<ContractGroup.Description>_(<ContractGroup>)"

	Ontology
		symbolic key is ContractGroup

	Patterns
		implements Proxy for ContractGroupEmailTemplate
		implements Proxy for ContractGroupEmailTemplate2
		implements StaticJava
		implements ForceUIRefreshOnStale
		disable AuditIndex

	Persistent Fields
		DefaultCurrency						is a Currency
		YellowAlert							is Numeric size 6
		RedAlert							is Numeric size 6
		DocMgmtSystemURL					is Alpha size up to 1000
			default label is "ContractURL"
			Text Variables
				ContractNumber
		EdiAdministratorEmail					is an EmailAddress  
			restricted
		EdiDefaultContractType					is a ContractType
		EdiDefaultContractClassification 		is a ContractClassification
		EdiMaxLineErrors						is Numeric size 9  
			restricted
		ProposalDefaultContractType             is a ContractType               
		ProposalDefaultContractClassification   is a ContractClassification     
		ProposalDefaultPrimaryContact           is an Employee                  
		ProposalFromItemProposalDefaultType     is a ContractType
		ProposalFromItemProposalDefaultClass    is a ContractClassification
		ProposalFromItemProposalDefaultContact  is an Employee
		ProposalFromRequesterDefaultType        is a ContractType
		ProposalFromRequesterDefaultClass       is a ContractClassification
		ProposalFromRequesterDefaultContact     is an Employee
		RequireProposalTemplate                 is Boolean 
			default label is "RequireATemplateToBeSelectedWhenRequesterCreatesAContractProposal"
		DeliverableYellowAlert					is Numeric size 6
		DeliverableRedAlert						is Numeric size 6
		MilestoneYellowAlert					is Numeric size 6
		MilestoneRedAlert						is Numeric size 6
		SendContractCloseEmail					is Boolean
		CreateContractCloseMessage          	is Boolean
		LastContractTemplate                    is Numeric size 8
			disable Auditing
		LastContract                            is Numeric size 15
			disable Auditing
		LastInvoiceLineFactConsolidateControl   is Numeric size 10
			disable Auditing
		UseQuestions                            is Boolean
		UseRebates                              is Boolean
		UseComments                             is Boolean
		UseRetainage                            is Boolean
		UseMilestones                           is Boolean
		UseDeliverables                         is Boolean
		UseCommitments                          is Boolean
		UsePricing                              is Boolean
			default label is "UseHeaderLevelPriceBreaks"
		WizardAttachments                       is Boolean
		WizardTerms                             is Boolean
		WizardQuestions                         is Boolean
		WizardRebates                           is Boolean
		WizardComments                          is Boolean
		WizardRetainage                         is Boolean
		WizardMilestones                        is Boolean
		WizardDeliverables                      is Boolean
		WizardCommitments                       is Boolean
		WizardPricing                           is Boolean
		DefaultSpreadEdits                      is a SpreadEdits  
			restricted
		DefaultLifetimeEdit 					is Numeric size 1
			States
				PurchaseOrdersAndReqs		value is 1
				PurchaseOrders              value is 2
		TopContractAmountThreshold              is an UnsignedInternationalAmount
		UseManufacturerAndVendorItem            is Numeric size 1
			States
				LoadVendorItemIfNoConflictLeaveEmptyIfAConflict					value is 0
				LoadVendorItemIfNoConflictManufacturerAndVendorItemIfAConflict  value is 1
				AlwaysLoadManufacturerAndVendorItem   							value is 2
				AlwaysLoadManufacturerNumberAndCode                             value is 3
				AlwaysLoadManufacturerCodeAndNumber                             value is 4 
			default label is "WhatToLoadToItemNumberFieldIfItemCannotBeDefaultedAndIsNotEnteredAndOtherOptionsToCombineFieldsForItemNumber"
		UpdateItemFromChangedVendorItem         is Boolean 
			default label is "IfVendorItemChangedAlsoChangeItem"
		UpdateVendorItemFromChangedManufacturerNumber is Boolean 
			default label is "IfManufacturerNumberChangedAlsoChangeVendorItem"
		GPOUsed                                 is Numeric 1
			States
				NoGPOUsed                       value is 0
				Vizient                         value is 2
				HealthTrust2021					value is 4
					default label is "HealthTrust"
				GHX                             value is 5                 
		DefaultGPOSupplier                      is a Supplier
		DefaultGPOContractType                  is a ContractType
		DefaultGPOContractClassification        is a ContractClassification
		DefaultGPOContact                       is an Employee
		DoNotAllowGPOUpdates                    is Boolean
		DoNotAutoCreateDistributorLines         is Boolean
			default label is "DoNotAutomaticallyCreateDistributorContractLines"
		DefaultGPOPricing                       is AlphaUpper size 4
		DefaultGPOPricingTitle                  is a Description
		DefaultGPOMultipleUOMHandling           is Numeric size 1
			States
				SetUOMSMustMatchToTrue  value is 1
				CloseCurrentItem        value is 2		
		DefaultGPOClosedLineHandling           is Numeric size 1
		 	States 
		 		CreateNewContractLine 		value is 1
		 		DoNotCreateNewContractLine 	value is 2
		DefaultMemberProcessing                 is Numeric 1
			States
				ProcessOnlyMappedMembers	value is 1
				ErrorIfAllMembersNotMapped	value is 2
		UseUNSPSCCode                           is Boolean
		AutoAddUNSPSCCode                       is Boolean 
		UseHealthtrustDeltaFiles                is Boolean 
		LeaveContractActive                     is Boolean
		AllowActiveUpdate                       is Boolean
			default label is "AllowContractHeader_to_beUpdatedWhen_inReleased,InNegotiation,FinalApproval,ReadyToActivate,_orActiveStates"
		DisallowDateUpdate                      is Boolean
			default label is "EffectiveAndExpirationDate"
		DisallowMaxAmountUpdate                 is Boolean
			default label is "LifetimeMaximumAmount"
		DisallowRetainageUpdate                 is Boolean
			default label is "RetainageInformation"
		DisallowSupplierUpdate                  is Boolean
			default label is "Supplier"
		DisallowCommitmentUpdate                is Boolean
			default label is "CommitmentInformation"
		ChangeItemIfDuplicate                   is Boolean
			default label is "IfAutoAssigned_orEnteredItem_inItemMaster_isDuplicateOfContractLineSpecialAddManufacturerCode_toItemNumber"
		AllowCommitmentsForActiveContracts      is Boolean
			default label is "AllowCommitments_to_be_TurnedOnForContractsThatHaveBeenActivated"
		EnableTaxOverrideLocations              is Boolean 
			default label is "AllowTaxOverrideByLocation"
        BackgroundGroupAsyncId					is an AsyncActionRequest
        	delete ignored	
		EnableClinicalSystemUseLocations        is Boolean
			default label is "AllowContractsToPassLocationDataToClinicalUseSystems" 
		StoreConsolidatedItemAndLocation        is Boolean 
			default label is "StoreContractLinesAndLocationsInConsolidatedItemLevelMasterData"
		InitialConsolidatedDataCreatedForItem   is Boolean 
		InitialConsolidatedDataCreatedForContractLine is Boolean 
		DefaultParticipantGroupForContractLocations is a ParticipantGroup 
		LineLevelForContractLocation            is Boolean
			default label is "SetDefaultContractLocationsFromParticipantGroupToLineLevel"
		AutoAddFromParticipantGroup             is Boolean 
			default label is "AutoAddNewParticipantGroupLinesToContracts"
		AutoAddFromNewLocations                 is Boolean 
			default label is "AutoAddNewLocationsForCompanyAndPricingGroupParticipantsAndMembers"
		DoNotAutoSetToClinical                  is Boolean 
			default label is "DoNotDefaultNewLinesOnClinicalContractsToClinicalSystemUse"
		DoNotUseRequestingLocations             is Boolean 
			default label is "DoNotUseRequestingLocationsWhenCreatingLocationsFromParticipantsOrMembersOrParticipantGroups"
		DoNotUseParLocations                    is Boolean 
			default label is "DoNotUseParOrCartLocationsWhenCreatingLocationsFromParticipantsOrMembersOrParticipantGroups"
		AutoUpdateAttributesFrom                is Numeric 1
			default label is "UpdateAttributesFrom"
			States
				NotUsed                         value is 0
				Symmetric                       value is 1
				GHX                             value is 2
				Other                           value is 3 
		UseConsolidatedItemMasterForAttributeUpdate is Boolean
			default label is "UseConsolidatedItemLevelMasterDataForAttributeUpdate"
		IncludeInYearEndCommitmentRollover      is Boolean 
			default label is "IncludeContractManagementInYearEndCommitmentRollover"
		YearEndSpreadCommitmentProcessing       is Numeric 1
			States 
				NotUsed                         value is 0
				OnlyRollCommitmentDates         value is 1
				ChangeSpreadDates               value is 2
		AllowResponsibilityMatrixApprovals	    is Boolean 

	Local Fields
		LocalCounter			is Numeric size 2
		LocalContractGroup		is like ContractGroup
		LocalGPOSupplier		is like Supplier	
		LocalFromDeltaUpdates 	is Boolean
		BackgroundGroup			is AlphaUpper up to 60
	Derived Fields
	
		RepresentativeText is a StringField
			type is Text
			default label is "ContractGroup"
			ContractGroup " - " ContractGroup.Description 
	
		NewLine	is a NativeField
			type is Alpha 1
			restricted

		FirstContract is a DerivedField
			type is Numeric size 15
			restricted
			return first Contract set.Contract

		ActorBusinessGroup is a DerivedField
			type is like BusinessGroup
			return actor.context.BusinessGroup

		LoadRebateInvoicesLastRunDate is a StringField
			type is Date
			ProcurementGroupRel.ProcurementGroupSetActionLoadRebateDueInvoiceLineAllRel.LastRunEndDate

	Conditions

		HasSpreadCommitments
			restricted 
			when (ContractSpreadCommitmentsRel exists)
		
		BusinessGroupAllowsAccess
			when ((actor.context.BusinessGroup != ""
			and	   actor.context.BusinessGroup = ContractGroup)
			or	  (actor.context.BusinessGroup = ""))

		HasQuestions
			restricted
			when (ContractQuestionsRel exists)

		HasRebates
			restricted
			when (ContractRebateRel exists)

		HasRetainage
			restricted
			when (ContractRetainageRel exists)

		HasMilestones
			restricted
			when (ContractMilestonesRel exists)

		HasDeliverables
			restricted
			when (ContractDeliverablesRel exists)

		HasComments
			restricted
			when (ContractCommentRel exists
			or    ContractLineCommentRel exists)

		HasCommitments
			restricted
			when (ContractCommitmentsRel exists)

		HasPricing
			restricted
			when (ContractPricingRel exists)

		NoStrippedVendorItemsExist
			restricted
			when (first StrippedVendorItemRel.VendorItemStripped !entered)

		GPOIsUsed
			restricted
			when (GPOUsed > 0)

		GPOIsHealthTrust
			restricted
			when (GPOUsed = 1)

		GPOIsVizient
			restricted
			when (GPOUsed = 2)

		GPOIsHealthTrust2021
			restricted
			when (GPOUsed = 4)

		GPOIsGHX
			restricted
			when (GPOUsed = 5)

		GPOIsAnyHealthTrust
			restricted
			when (GPOUsed = 1
			or    GPOUsed = 4)

		GPOIsHPGOrVizient
			restricted
			when (GPOUsed = 1
			or    GPOUsed = 2
			or    GPOUsed = 4)
		
		HasUOMErrors
			restricted
			when (ContractLineImportUOMErrorsRel exists)
		
		HasDuplicateUOMs
			restricted
			when (ContractImportMultipleUOMRel exists)		
		
		HasDistributorContractsToCreate
			restricted
			when (ContractImportDistributorRel exists)

		HasHeaderSuppliersUpdatedByGPO
			restricted
			when (ContractImportGPOUpdatedSupplierRel exists)

		HasDistributorSuppliersUpdatedByGPO	
			restricted
			when (ContractDistributorGPOUpdatedSupplierRel exists)

		ClassificationsHaveToleranceDefault
			restricted
			when (ClassificationWithToleranceDefaultRel exists
			or    SubclassificationWithToleranceDefaultRel exists)
		
		HasMembersToRelease
			restricted
			when (ContractMembersToReleaseRel exists)
		
		ProposedItemClassAndTypeEntered
			restricted
			when (ProposalFromItemProposalDefaultType entered
			and   ProposalFromItemProposalDefaultClass entered)

		AutoUpdateAttributesAllowed 
			restricted 
			when (AutoUpdateAttributesFrom > 0)
		
		HasClassificationsForMatrix 
			restricted 
			when (ContractClassificationForMatrixRel exists
			or    ContractSubclassificationForMatrixRel exists)

		FinanceEnterpriseGroupAllowsMatrixApproval 
			restricted 
			when (BusinessGroupRel.FinanceEnterpriseGroup.EnableResponsibilityMatrix)
		
		AutoUpdateAttributesGHXOrOther
			restricted
			when (AutoUpdateAttributesFrom = 2
			or    AutoUpdateAttributesFrom = 3)
		
		HasConsolidatedItemMasterRecords 
			restricted 
			when (ConsolidatedItemMasterRel exists)
		
		HasDeltaRecords 
			restricted 
			when (ContractGPOHeaderDeltaRel exists 
			or    ContractGPOItemDeltaRel exists
			or    ContractGPOSupplierDeltaRel exists
			or    ContractGPOParticipantDeltaRel exists
			or    ContractGPODistributorDeltaRel exists
			or    ContractGPOCategoryDeltaRel exists)

		CanCreateConsolidatedForItem
			restricted 
			when (StoreConsolidatedItemAndLocation
			and  !InitialConsolidatedDataCreatedForItem)

		CanCreateConsolidatedForContractLine 
			restricted 	
			when (StoreConsolidatedItemAndLocation
			and   InitialConsolidatedDataCreatedForItem
			and  !InitialConsolidatedDataCreatedForContractLine)			

	Field Rules
		LastContractTemplate
			constraint (LastContractTemplate >= 90000000)
				"LastContractTemplateMustBeGreaterThan90000000"
		YellowAlert
			if (YellowAlert entered)
				constraint (YellowAlert > 0)
					"CannotEnterNegativeDaysInYellowAlert"
				constraint (RedAlert entered)
					"MustEnterRedAlertNumberOfDays"
				constraint (YellowAlert > RedAlert)
					"YellowAlertNumberOfDaysMustBeGreaterThanRedAlertNumberOfDays"
		RedAlert
			if (RedAlert entered)
				constraint (RedAlert > 0)
					"CannotEnterNegativeDaysInRedAlert"
				constraint (YellowAlert entered)
					"MustEnterYellowAlertNumberOfDays"
				constraint (RedAlert < YellowAlert)
					"YellowAlertNumberOfDaysMustBeGreaterThanRedAlertNumberOfDays"
		DeliverableYellowAlert
			if (DeliverableYellowAlert entered)
				constraint (DeliverableYellowAlert > 0)
					"CannotEnterNegativeDaysInDeliverableYellowAlert"
				constraint (DeliverableYellowAlert > DeliverableRedAlert)
					"DeliverableYellowAlertNumberOfDaysMustBeGreaterThanDeliverableRedAlertNumberOfDays"
				constraint (DeliverableRedAlert entered)
					"MustEnterDeliverableRedAlertNumberOfDays"
		DeliverableRedAlert
			if (DeliverableRedAlert entered)
				constraint (DeliverableRedAlert > 0)
					"CannotEnterNegativeDaysInDeliverableRedAlert"
				constraint (DeliverableRedAlert < DeliverableYellowAlert)
					"DeliverableYellowAlertNumberOfDaysMustBeGreaterThanDeliverableRedAlertNumberOfDays"
		MilestoneYellowAlert
			if (MilestoneYellowAlert entered)
				constraint (MilestoneYellowAlert > 0)
					"CannotEnterNegativeDaysInMilestoneYellowAlert"
				constraint (MilestoneYellowAlert > MilestoneRedAlert)
					"MilestoneYellowAlertNumberOfDaysMustBeGreaterThanMilestoneRedAlertNumberOfDays"
				constraint (MilestoneRedAlert entered)
					"MustEnterMilestoneRedAlertNumberOfDays"
		MilestoneRedAlert
			if (MilestoneRedAlert entered)
				constraint (MilestoneRedAlert > 0)
					"CannotEnterNegativeDaysInMilestoneRedAlert"
				constraint (MilestoneRedAlert < MilestoneYellowAlert)
					"MilestoneYellowAlertNumberOfDaysMustBeGreaterThanMilestoneRedAlertNumberOfDays"

		ProposalDefaultContractClassification
			constraint (ProposalDefaultContractClassification.Type = 3)
				"MustEnterAContractClassificationThatUsesApprovalsWithRedliningOnDocument"
			constraint (!ProposalDefaultContractClassification.UseIDM)  
				"CannotUseAnIDMContractClassificationForSupplierContractProposals"

		ProposalFromItemProposalDefaultType
			constraint (ProposalFromItemProposalDefaultType.NonServicePurchaseType)
				"MustEnterAContractTypeWithAPurchaseTypeForItems"

		SendContractCloseEmail
			default to true

		CreateContractCloseMessage
			default to true

		UseQuestions

			if (UseQuestions changed
			and UseQuestions = false)
				constraint (!HasQuestions)
					"CannotSetToFalse;QuestionsExist"

			if (UseQuestions = false)
				WizardQuestions = false

		UseRebates

			if (UseRebates changed
			and UseRebates = false)
				constraint (!HasRebates)
					"CannotSetToFalse;RebatesExist"

			if (UseRebates = false)
				WizardRebates = false

		UseComments

			if (UseComments changed
			and UseComments = false)
				constraint (!HasComments)
					"CannotSetToFalse;CommentsExist"

			if (UseComments = false)
				WizardComments = false

		UseRetainage

			if (UseRetainage changed
			and UseRetainage = false)
				constraint (!HasRetainage)
					"CannotSetToFalse;RetainageExists"

			if (UseRetainage = false)
				WizardRetainage = false

		UseMilestones

			if (UseMilestones changed
			and UseMilestones = false)
				constraint (!HasMilestones)
					"CannotSetToFalse;MilestonesExist"

			if (UseMilestones = false)
				WizardMilestones = false

		UseDeliverables

			if (UseDeliverables changed
			and UseDeliverables = false)
				constraint (!HasDeliverables)
					"CannotSetToFalse;DeliverablesExist"

			if (UseDeliverables = false)
				WizardDeliverables = false

		UseCommitments

			if (GeneralLedgerSystemCodeRel.EncumbranceOption.NotUsed)
				constraint (!UseCommitments)
					"CannotUseCommitmentsIfPurchaseOrderSystemCodeDoesNotUseCommitments"

			if (UseCommitments changed
			and UseCommitments = false)
				constraint (!HasCommitments)
					"CannotSetToFalse;CommitmentsExist"

			if (UseCommitments = false)
				WizardCommitments = false

		UsePricing
			default to true
			if (UsePricing changed
			and UsePricing = false)
				constraint (!HasPricing)
					"CannotSetToFalse;PricingExists"

			if (UsePricing = false)
				WizardPricing = false

		DefaultLifetimeEdit
			default to DefaultLifetimeEdit.PurchaseOrders

		GPOUsed 

			if (GPOUsed = 4
			and UseHealthtrustDeltaFiles)
				if (HealthTrustDeltaRel !exists)
					invoke Create RoleSecurityClass
						invoked.Role				= "IEFINBaseSystemAndDataAccess_ST"
						invoked.DataArea			= parentcontext.dataarea
						invoked.SecurityClass		= "CMViewHealthTrustDeltaMenu_ST"

				if (HealthTrustNoDeltaRel exists)
					invoke Delete HealthTrustNoDeltaRel

				if (VizientRel exists)
					invoke Delete VizientRel 

				if (GHXRel exists)
					invoke Delete GHXRel	

			if (GPOUsed = 4
			and !UseHealthtrustDeltaFiles)

				if (HealthTrustNoDeltaRel !exists)
					invoke Create RoleSecurityClass
						invoked.Role				= "IEFINBaseSystemAndDataAccess_ST"
						invoked.DataArea			= parentcontext.dataarea
						invoked.SecurityClass		= "CMViewHealthTrustMenu_ST"

				if (HealthTrustDeltaRel exists)
					invoke Delete HealthTrustDeltaRel

				if (VizientRel exists)
					invoke Delete VizientRel 

				if (GHXRel exists)
					invoke Delete GHXRel				

			if (GPOUsed = 2) 

				if (VizientRel !exists)
					invoke Create RoleSecurityClass
						invoked.Role				= "IEFINBaseSystemAndDataAccess_ST"
						invoked.DataArea			= parentcontext.dataarea
						invoked.SecurityClass		= "CMViewVizientMenu_ST"

				if (HealthTrustDeltaRel exists)
					invoke Delete HealthTrustDeltaRel

				if (HealthTrustNoDeltaRel exists)
					invoke Delete HealthTrustNoDeltaRel 

				if (GHXRel exists)
					invoke Delete GHXRel		

			if (GPOUsed = 5) 

				if (GHXRel !exists)
					invoke Create RoleSecurityClass
						invoked.Role				= "IEFINBaseSystemAndDataAccess_ST"
						invoked.DataArea			= parentcontext.dataarea
						invoked.SecurityClass		= "CMViewGHXMenu_ST"

				if (HealthTrustDeltaRel exists)
					invoke Delete HealthTrustDeltaRel

				if (HealthTrustNoDeltaRel exists)
					invoke Delete HealthTrustNoDeltaRel 

				if (VizientRel exists)
					invoke Delete VizientRel		

			if (GPOUsed = 0) 

				if (GHXRel exists)
					invoke Delete GHXRel

				if (HealthTrustDeltaRel exists)
					invoke Delete HealthTrustDeltaRel

				if (HealthTrustNoDeltaRel exists)
					invoke Delete HealthTrustNoDeltaRel 

				if (VizientRel exists)
					invoke Delete VizientRel									
		
		DefaultGPOSupplier
			constraint (DefaultGPOSupplier.GroupPurchasingOrganization)
				"DefaultGPOSupplierIsNotDefinedAsAGroupPurchasingOrganization"

		AutoUpdateAttributesFrom

			if (AutoUpdateAttributesFrom changed)
				if (AutoUpdateAttributesFrom > 0)
					invoke LoadAttributesFromItem ContractLine 
						invoked.ParmContractGroup	= ContractGroup

					invoke UpdateContractLineForAttributeUpdate ItemGTIN 
						invoked.ParmItemGroup       = ContractGroup 

					for each ContractImportGPOWithContractRel
						invoke LoadContractAndLine ContractLineImport 
							invoked.ParmContractGroup   = ContractGroup
							invoked.ParmContractImport  = each.ContractImport 
							invoked.ParmContract        = each.DerivedToContractForGPO

				if (AutoUpdateAttributesFrom = 0)
					constraint (AttributeUpdateUnprocessedRel !exists)
						"CannotSetUpdateAttributesFromTo_Not_Used;UnprocessedUpdatesExist"

		DefaultParticipantGroupForContractLocations

			constraint (!DefaultParticipantGroupForContractLocations.HasDepartments)
				"CannotUseADepartmentTypeParticipantGroup"

			constraint (!DefaultParticipantGroupForContractLocations.MemberGroup)
				"CannotUseAManufacturerAndDistributorContractParticipantGroup"
		
		IncludeInYearEndCommitmentRollover
			if (IncludeInYearEndCommitmentRollover)
				if (HasSpreadCommitments)
					constraint (YearEndSpreadCommitmentProcessing > 0)
						"MustSelectAMethodOfYearEndSpreadCommitmentProcessingIfContractManagementIsIncludedInYearEndCommitmentRollover"
			if (!IncludeInYearEndCommitmentRollover)
				YearEndSpreadCommitmentProcessing = 0

		YearEndSpreadCommitmentProcessing
			if (IncludeInYearEndCommitmentRollover)
				if (HasSpreadCommitments)
					constraint (YearEndSpreadCommitmentProcessing > 0)
						"MustSelectAMethodOfYearEndSpreadCommitmentProcessingIfContractManagementIsIncludedInYearEndCommitmentRollover"

		AllowResponsibilityMatrixApprovals
			if (AllowResponsibilityMatrixApprovals)
				constraint (BusinessGroupRel.FinanceEnterpriseGroup.EnableResponsibilityMatrix)
					"CannotEnable_Allow_Responsibility_Matrix_ApprovalsWhenThe_Finance_Enterprise_GroupDoesNotHaveThe_Responsibility_MatrixTurnedOn"

	Relations

		HealthTrustNoDeltaRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "IEFINBaseSystemAndDataAccess_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "CMViewHealthTrustMenu_ST"	

		HealthTrustDeltaRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "IEFINBaseSystemAndDataAccess_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "CMViewHealthTrustDeltaMenu_ST"

		VizientRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "IEFINBaseSystemAndDataAccess_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "CMViewVizientMenu_ST"

		GHXRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "IEFINBaseSystemAndDataAccess_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "CMViewGHXMenu_ST"				
		ProcurementGroupRel
			one-to-one relation to ProcurementGroup
			Field Mapping uses symbolic key
				related.ProcurementGroup = ContractGroup

		ItemGroupRel
			one-to-one relation to ItemGroup
			Field Mapping uses symbolic key
				related.ItemGroup = ContractGroup

		SupplierGroupRel
			one-to-one relation to SupplierGroup
			Field Mapping uses symbolic key
				related.SupplierGroup = ContractGroup

		VendorGroupRel
			one-to-one relation to VendorGroup
			Field Mapping uses symbolic key
				related.VendorGroup = ContractGroup

		NewParticipantGroupLineRel
			one-to-many relation to ParticipantGroupLine
			Field Mapping uses ByNewLine
				related.ProcurementGroup  = ContractGroup

		GeneralLedgerSystemCodeRel
			one-to-many relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= ContractGroup.BusinessGroup.FinanceEnterpriseGroup
				related.GeneralLedgerSystemCode	= "PO"

		ContractStatusCountRel
			one-to-one relation to ContractStatusCount
			Field Mapping uses symbolic key
				related.ContractGroup		= ContractGroup
				related.ContractStatusCount = LocalCounter

		ContractExpirationCountRel
			one-to-one relation to ContractExpirationCount
			Field Mapping uses symbolic key
				related.ContractGroup		    = ContractGroup
				related.ContractExpirationCount = LocalCounter

		ContractGroupEmailTemplate
	  		one-to-one relation to ContractGroupEmailTemplate
	  		Field Mapping uses symbolic key
	  			related.ContractGroup 		= ContractGroup

	  	ContractGroupEmailTemplate2
	  		one-to-one relation to ContractGroupEmailTemplate2
	  		Field Mapping uses symbolic key
	  			related.ContractGroup 		= ContractGroup

	  	SupplierGroupExtensionRel
	  		one-to-one relation to SupplierGroupExtension
	  		Field Mapping uses symbolic key
	  			related.SupplierGroup       = ContractGroup

		ClassificationWithToleranceDefaultRel
			one-to-many relation to ContractClassification
			Field Mapping uses symbolic key	
				related.ContractGroup 		= ContractGroup
			Instance Selection	
				where (related.UseForInterface)

		SubclassificationWithToleranceDefaultRel
			one-to-many relation to ContractSubclassification
			Field Mapping uses symbolic key	
				related.ContractGroup 		= ContractGroup
			Instance Selection	
				where (related.UseForInterface)

		ContractClassificationForMatrixRel 
			one-to-many relation to ContractClassification
			Field Mapping uses symbolic key 
				related.ContractGroup		= ContractGroup 
			Instance Selection 
				where (related.RequireMatrixInitialApproval 	= true  
				or     related.RequireMatrixAmendmentApproval   = true 
				or     related.RequireMatrixAddendumApproval  	= true)
		
		ContractSubclassificationForMatrixRel 
			one-to-many relation to ContractSubclassification
			Field Mapping uses symbolic key 
				related.ContractGroup		= ContractGroup 
			Instance Selection 
			 	where (related.RequireMatrixInitialApproval 	= true  
			 	or     related.RequireMatrixAmendmentApproval   = true 
			 	or     related.RequireMatrixAddendumApproval  	= true)

		BusinessGroupRel
			one-to-one relation to BusinessGroup
			Field Mapping uses symbolic key
				related.BusinessGroup 			= ContractGroup

		ContractCommentRel
			one-to-many relation to ContractComment
			Field Mapping uses BySequenceNumber
				related.ContractGroup           = ContractGroup

		ContractLineCommentRel
			one-to-many relation to ContractLineComment
			Field Mapping uses BySequenceNumber
				related.ContractGroup           = ContractGroup

		ContractRebateRel
			one-to-many relation to ContractRebate
			Field Mapping uses symbolic key
				related.ContractGroup           = ContractGroup

		ContractMilestonesRel
			one-to-many relation to ContractMilestone
			Field Mapping uses symbolic key
				related.ContractGroup           = ContractGroup

		ContractDeliverablesRel
			one-to-many relation to ContractDeliverable
			Field Mapping uses symbolic key
				related.ContractGroup           = ContractGroup

		ContractQuestionsRel
			one-to-many relation to ContractQuestion
			Field Mapping uses symbolic key
				related.ContractGroup           = ContractGroup

		ContractCommitmentsRel is a Contract set
			Instance Selection
				where (related.UseCommitments)

		ContractPricingRel
			one-to-many relation to ContractPricing
			Field Mapping uses symbolic key
				related.ContractGroup           = ContractGroup

		ContractRetainageRel is a Contract set
			Instance Selection
				where (related.UseRetainage)

 		ProcurementGroupSetActionLoadRebateDueInvoiceLineAllRel
			one-to-one relation to ProcurementGroupSetAction
			Field Mapping uses symbolic key
				related.ProcurementGroup						= LocalContractGroup
				related.ProcurementGroupSetAction				= 10

		StrippedVendorItemRel
   			one-to-many relation to VendorItem
   			Field Mapping uses symbolic key
   				related.ProcurementGroup         = ContractGroup

		ContractImportGPOProcessUpdatesRel
			one-to-many relation to ContractImport
			Field Mapping uses symbolic key
				related.ContractGroup      = ContractGroup
			Instance Selection
				where (related.NonBlankContractLinesExist)

		ContractImportDistributorRel
			one-to-many relation to ContractImportDistributor
			Field Mapping uses symbolic key
				related.ContractGroup       = ContractGroup
			Instance Selection
				where (related.EligibleForContractCreation
				and   !related.DistributorContractEntered)

		ContractDistributorGPOUpdatedSupplierRel
			one-to-many relation to ContractImportDistributor
			Field Mapping uses symbolic key
				related.ContractGroup       = ContractGroup
			Instance Selection
				where (related.SupplierChanged)

		ContractAndLineLocationClinicalUseRel
			one-to-many relation to ContractAndLineLocation 
			Field Mapping uses symbolic key 
				related.ContractGroup       = ContractGroup 
			Instance Selection 
				where (related.ClinicalSystemUse = true)

		ContractAndLineLocationTaxRel
			one-to-many relation to ContractAndLineLocation 
			Field Mapping uses symbolic key 
				related.ContractGroup       = ContractGroup 
			Instance Selection 
				where (related.TaxRelated = true)

		ContractMembersToReleaseRel
			one-to-many relation to Contract
			Field Mapping uses symbolic key
				related.ContractGroup        = ContractGroup
			Instance Selection
				where (related.HasGPOSupplier
				and    related.HasMembersToRelease)
		
		ContractSpreadCommitmentsRel 
			one-to-many relation to Contract
			Field Mapping uses symbolic key
				related.ContractGroup        = ContractGroup
			Instance Selection
				where (related.UseSpreadCommitments)
		ContractImportManufacturerRel
			one-to-many relation to ContractImport
			Field Mapping uses symbolic key
				related.ContractGroup      = ContractGroup
			Instance Selection
				where (related.IsManufacturerContract)

		ContractImportDeletedItemsRel
			one-to-many relation to ContractImport
			Field Mapping uses symbolic key
				related.ContractGroup      = ContractGroup
			Instance Selection
				where (related.HasGPOSupplier
				and   (LocalFromDeltaUpdates = false 
				or    (LocalFromDeltaUpdates = true
				and    related.LinesUpdated))
				and    related.HasMissingGPOItems
				and   !related.Template
				and    related.GPOSupplier    = DefaultGPOSupplier)

		ContractImportGPOUpdatedSupplierRel
			one-to-many relation to ContractImport
			Field Mapping uses symbolic key
				related.ContractGroup      = ContractGroup
			Instance Selection
				where (related.HasGPOSupplier
				and   !related.Template
				and    related.SupplierChanged)	
		
		ParmGPOSupplierRel	
			one-to-one relation to Supplier
			Field Mapping uses symbolic key
				related.SupplierGroup	= ContractGroup
				related.Supplier		= LocalGPOSupplier

		ContractImportTierMemberUpdatesRel
			one-to-many relation to ContractImportTierMember
			Field Mapping uses symbolic key
				related.ContractGroup = ContractGroup
			Instance Selection
				where (related.Updated)
				
		ContractLineImportUOMErrorsRel
			one-to-many relation to ContractLineImport
			Field Mapping uses symbolic key
				related.ContractGroup = ContractGroup
			Instance Selection
				where (related.ContractImport.GPOSupplier = DefaultGPOSupplier
				and    related.UOMErrorsExist)
				
		ContractImportMultipleUOMRel			
			one-to-many relation to ContractImport
			Field Mapping uses symbolic key
				related.ContractGroup = ContractGroup
			Instance Selection
				where (related.GPOSupplier = DefaultGPOSupplier
				and    related.DuplicateUOMErrors)

		ContractImportGPOWithContractRel 
			one-to-many relation to ContractImport
			Field Mapping uses symbolic key
				related.ContractGroup = ContractGroup
			Instance Selection
				where (related.GPOContractNumberEntered
				and    related.HasAssociatedGPOContract)		
		ContractGPOItemDeltaRel 
			one-to-many relation to ContractGPOItemDelta 
			Field Mapping uses symbolic key

		ContractGPOHeaderDeltaRel 
			one-to-many relation to ContractGPOHeaderDelta 
			Field Mapping uses symbolic key 

		ContractGPOParticipantDeltaRel 
			one-to-many relation to ContractGPOParticipantDelta 
			Field Mapping uses symbolic key

		ContractGPODistributorDeltaRel 
			one-to-many relation to ContractGPODistributorDelta 
			Field Mapping uses symbolic key 

		ContractGPOCategoryDeltaRel 
			one-to-many relation to ContractGPOCategoryDelta 
			Field Mapping uses symbolic key

		ContractGPOSupplierDeltaRel 
			one-to-many relation to ContractGPOSupplierDelta 
			Field Mapping uses symbolic key 

		ConsolidatedItemMasterRel 
			one-to-many relation to ConsolidatedItemMaster
			Field Mapping uses ByManufacturerInformation
				related.ContractGroup = ContractGroup	

		AttributeUpdateUnprocessedRel 
			one-to-many relation to ContractLineAttributeUpdate 
			Field Mapping uses symbolic key 
				related.ContractGroup = ContractGroup 
			Instance Selection 
				where (related.Status = 0)

		AttributeUpdateForConsolidatedRel 
			one-to-many relation to ContractLineAttributeUpdate 
			Field Mapping uses symbolic key 
				related.ContractGroup = ContractGroup 
			Instance Selection 
				where (related.ConsolidatedItemMasterEntered
				and    related.Status = 0)					
				
	Actions
		Create is a Create Action
			Field Rules

				UseQuestions
					default to true

				UseRebates
					default to true

				UseComments
					default to true

				UseRetainage

					default to true

				UseMilestones
					default to true

				UseDeliverables
					default to true

				UseCommitments
					if (GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
					or  GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
						default to true

				UsePricing
					default to true

			Action Rules
			Exit Rules

				LocalCounter = 1
				while (LocalCounter < 11)
					if (!ContractStatusCountRel exists)
						invoke Create ContractStatusCount
							invoked.ContractGroup 		= ContractGroup
							invoked.ContractStatusCount = LocalCounter
					LocalCounter +=1
				LocalCounter = 1
				while (LocalCounter < 6)
					if (!ContractExpirationCountRel exists)
						invoke Create ContractExpirationCount
							invoked.ContractGroup 			= ContractGroup
							invoked.ContractExpirationCount = LocalCounter
					LocalCounter +=1

				if (DocMgmtSystemURL entered)
					invoke UpdateDocMgmtURLOnContracts

				if (NoStrippedVendorItemsExist)
					invoke StripAllVendorItems VendorItem
						invoked.ProcurementGroup = ContractGroup
					invoke StripAllItems Item
						invoked.ItemGroup        = ContractGroup

		Update is an Update Action
			Action Rules
			
				if (StoreConsolidatedItemAndLocation changed)
					if (StoreConsolidatedItemAndLocation = true)
						confirmation required 
							"ToCreateConsolidatedItemLevelMasterDataRecordsForItemsRun_Create_Initial_Consolidated_Item_Level_Master_Data_For_Items"
  					else 
					if (StoreConsolidatedItemAndLocation = false)
						constraint (!HasConsolidatedItemMasterRecords)
							"CannotChangeStoreConsolidatedItemAndLocation;ConsolidatedItemAndLocationRecordsExist"

						DoNotAutoSetToClinical = false     

				if (UseConsolidatedItemMasterForAttributeUpdate changed
				and UseConsolidatedItemMasterForAttributeUpdate = false)
					constraint (AttributeUpdateForConsolidatedRel !exists)
						"CannotUnselect_Use_Consolidated_Item_Detail_For_Attribute_Update;UnprocessedAttributeUpdateRecordsForConsolidatedItemMasterExist" 
				
				if (AllowActiveUpdate = false)
					DisallowDateUpdate 			= false
					DisallowMaxAmountUpdate 	= false
					DisallowRetainageUpdate 	= false
					DisallowSupplierUpdate  	= false
					DisallowCommitmentUpdate	= false
			
				if (EnableClinicalSystemUseLocations changed 
				and EnableClinicalSystemUseLocations = false)
					constraint (ContractAndLineLocationClinicalUseRel !exists)
						"CannotSetClinicalUseLocationsToFalse;RecordsExist"

					EnableClinicalSystemUseLocations 			= false       
					initialize DefaultParticipantGroupForContractLocations  
					LineLevelForContractLocation				= false            
					AutoAddFromParticipantGroup                 = false           
					AutoAddFromNewLocations                     = false             
					DoNotUseRequestingLocations                 = false
					DoNotUseParLocations                        = false

				if (EnableTaxOverrideLocations changed
				and EnableTaxOverrideLocations = false)
					constraint (ContractAndLineLocationTaxRel !exists)
						"CannotSetTaxLocationsToFalse;RecordsExist"

                if (AllowResponsibilityMatrixApprovals changed)
                    if (AllowResponsibilityMatrixApprovals = false)
                        if (HasClassificationsForMatrix)
                            for each ContractClassificationForMatrixRel 
                                invoke Update each  
                                    invoked.RequireMatrixInitialApproval    = false   
                                    invoked.RequireMatrixAmendmentApproval  = false  
                                    invoked.RequireMatrixAddendumApproval   = false 
                            for each ContractSubclassificationForMatrixRel
                                invoke Update each  
                                    invoked.RequireMatrixInitialApproval    = false   
                                    invoked.RequireMatrixAmendmentApproval  = false  
                                    invoked.RequireMatrixAddendumApproval   = false 
						
			Exit Rules
				LocalCounter = 1
				while (LocalCounter < 11)
					if (!ContractStatusCountRel exists)
						invoke Create ContractStatusCount
							invoked.ContractGroup 		= ContractGroup
							invoked.ContractStatusCount = LocalCounter
					LocalCounter +=1
				LocalCounter = 1
				while (LocalCounter < 6)
					if (!ContractExpirationCountRel exists)
						invoke Create ContractExpirationCount
							invoked.ContractGroup 			= ContractGroup
							invoked.ContractExpirationCount = LocalCounter
					LocalCounter +=1

				if (DocMgmtSystemURL changed)
					invoke UpdateDocMgmtURLOnContracts

				if (NoStrippedVendorItemsExist)
					invoke StripAllVendorItems VendorItem
						invoked.ProcurementGroup = ContractGroup
					invoke StripAllItems Item
						invoked.ItemGroup        = ContractGroup

		SetContractTemplate is an Update Action
			restricted
			Action Rules
				LastContractTemplate = 90000000

		Delete is a Delete Action

		CreateInitialConsolidatedItemLevelMasterDataForItems is an Instance Action
			valid when (CanCreateConsolidatedForItem) 

			Action Rules 

				InitialConsolidatedDataCreatedForItem = true 

				invoke CreateInitialConsolidatedItemMaster Item 
					invoked.PrmContractGroup = ContractGroup	
		
		CreateInitialConsolidatedItemLevelMasterDataForContractLines is an Instance Action 
			valid when (CanCreateConsolidatedForContractLine)

			Action Rules 

				InitialConsolidatedDataCreatedForContractLine = true 

				invoke CreateConsolidatedItemMasterSet ContractLine  
					invoked.PrmContractGroup = ContractGroup 

		UpdateDocMgmtURLOnContracts is an Instance Action
			restricted
			run in background
			Action Rules
				invoke UpdateDocMgmtSystemURL Contract
					invoked.PrmContractGroup	= ContractGroup
					invoked.PrmDocMgmtSystemURL	= DocMgmtSystemURL

		RollSpreadDates is a Set Action 
			restricted 
			Parameters 
				PrmContractGroup		is a ContractGroup 
				CurrentYearEndDate		is Date
				ProposedNewSpreadDate   is Date	
				PrmHeaderUniqueID       is a UniqueID		

			Instance Selection 
				where (PrmContractGroup = ContractGroup)

			Action Rules 
				Instance Rules 
					invoke RollSpreadDatesSet Contract 
						invoked.PrmContractGroup 		= PrmContractGroup 
						invoked.CurrentYearEndDate		= CurrentYearEndDate
						invoked.ProposedNewSpreadDate	= ProposedNewSpreadDate	
						invoked.PrmHeaderUniqueID       = PrmHeaderUniqueID
		
		CleanUpConsolidatedItemLevelMasterData is an Instance Action 
			Parameters 
				PrmContractGroup       is a ContractGroup 
					default label is "ContractGroup"
				PrmUpdateDate          is Date
					default label is "CleanUpRecordsWithAnUpdateDateOnOrBeforeThisDate"

			Parameter Rules  
				PrmContractGroup 
					initial value is ContractGroup
					default to ContractGroup 
					required

				PrmUpdateDate 
					required 
					constraint (PrmUpdateDate <= current corporate date)
						"UpdateDateMustBeOnOrPriorToCurrentDate"

			Action Rules 

				invoke CleanUpConsolidatedItemLocationSet ConsolidatedItemLocation 
					invoked.PrmContractGroup	= PrmContractGroup 
					invoked.PrmUpdateDate       = PrmUpdateDate

		LoadAllRebateInvoicesForContractGroup is a Set Action
			completion message is "LoadOfAllRebatesContractRebateDueInvoiceLinesHasStarted;Check'MyScheduledActions'ForCompletion"
			restricted
			Parameters
				PrmContractGroup		is a ContractGroup
				PrmContract				is a Contract
				PrmBeginMatchDate 		is Date
				PrmEndMatchDate  	 	is Date
				PrmLastRunDate			is Date

			Parameter Rules
				PrmContractGroup
					required
					if (PrmBeginMatchDate not entered
					and PrmEndMatchDate   not entered)
						LocalNoDateRangeEntered			= true
						if (PrmContractGroup.ProcurementGroupRel.ProcurementGroupSetActionLoadRebateDueInvoiceLineAllRel		exists)
							PrmBeginMatchDate 	= PrmContractGroup.ProcurementGroupRel.ProcurementGroupSetActionLoadRebateDueInvoiceLineAllRel.LastRunEndDate
						PrmEndMatchDate	= current corporate date

				PrmContract
					if (PrmContract entered)
						constraint (!PrmContract.ContractStatus.Closed)
							"ContractIsClosed"
						constraint (!PrmContract.RebateWithQualifierChanges)
							"ContractHasRebateQualifierChanges;Run_'ReloadRebateInvoicesForQualifierChanges'_instead"

				PrmEndMatchDate
					if (PrmBeginMatchDate entered)
						required
					constraint (PrmEndMatchDate >= PrmBeginMatchDate)
						"EndMatchDateCannotPrecedeBeginMatchDate"

				PrmLastRunDate
					initial value is PrmContractGroup.LoadRebateInvoicesLastRunDate

			Local Fields
				LocalNoDateRangeEntered			is Boolean

			Instance Selection
				where (PrmContractGroup			= ContractGroup)

			Action Rules
				Set Rules
					Exit Rules
						invoke LoadSupplierRebateInvoices ContractRebateQualifier in background 
							invoked.PrmVendorGroup				= PrmContractGroup
							invoked.PrmContractGroup			= PrmContractGroup
							invoked.PrmContract					= PrmContract
							invoked.PrmInvoiceDateRange.Begin	= PrmBeginMatchDate
							invoked.PrmInvoiceDateRange.End		= PrmEndMatchDate
							invoked.PrmNoDateRangeEntered		= LocalNoDateRangeEntered

						LocalContractGroup						= PrmContractGroup
						invoke Update ProcurementGroupSetActionLoadRebateDueInvoiceLineAllRel	
							invoked.ProcurementGroup			= PrmContractGroup
							invoked.ProcurementGroupSetAction	= 10
							invoked.LoadType					= 10
							if (PrmEndMatchDate	not entered)
								invoked.LastRunEndDate		= current corporate date
							else
							if (PrmEndMatchDate	> current corporate date)
								invoked.LastRunEndDate		= current corporate date
							else
								invoked.LastRunEndDate		= PrmEndMatchDate

				Instance Rules
					invoke LoadAllRebateInvoicesForCompany PurchasingCompany in background
						invoked.PrmContractGroup			= PrmContractGroup
						invoked.PrmContract					= PrmContract
						invoked.PrmBeginMatchDate  			= PrmBeginMatchDate
						invoked.PrmEndMatchDate    			= PrmEndMatchDate

		UpdateContractContacts is a Set Action
			Parameters
				ContractGroup
				FromContact				is an Employee
				ToContact               is an Employee

			Parameter Rules

				ContractGroup
					required
				FromContact
					required
					constraint (FromContact != ToContact)
						"FromAndToContactMustBeDifferent"

				ToContact
					required

			Action Rules

				Instance Rules

					invoke MassUpdateContacts ContractAttachedContact
						invoked.ContractGroup   = ContractGroup
						invoked.FromContact     = FromContact
						invoked.ToContact       = ToContact

		UpdateMismatchedErrorFlags is a Set Action
			restricted
			Parameters
				ContractGroup

			Parameter Rules
				ContractGroup
					required

			Action Rules
				Instance Rules
					invoke UpdateMismatchedErrorFlag ContractLineMember
						invoked.ParmContractGroup   = ContractGroup

		LoadAndProcessUpdatedInterfaceRecords is a Set Action  
			default label is "LoadChangesAndProcessUpdates"
			Parameters 
				ParmContractGroup 		is a ContractGroup 
					default label is "ContractGroup"
				AutoUpdateContracts        		is Boolean
				LineUpdateOption            	is Numeric 1
					States
						UpdateIfCurrentDateSameAsHeaderDate value is 1
						UpdateAll                           value is 2
         				DoNotUpdate                         value is 3	
				TolerancePercent		   		is Percent size 6.3
				Connector
				ToleranceAmount			   		is an InternationalAmount
				RejectAllCostIncreases	   		is Boolean
				StandardMarkupCalculation       is Boolean
				UpdateCostsOnly                 is Boolean
				ProcessItemMasterOnly           is Boolean
				DefaultTolerance                is Boolean
			Parameter Rules 
				ParmContractGroup 
					required 
					constraint (HasDeltaRecords)
						"NoChangedRecordsToProcess"
				
				Connector
					if (TolerancePercent > 0 and ToleranceAmount > 0)
						required
							"ConnectorIsRequiredWhenTolerancePercentAndToleranceAmountAreEntered"
					else
						cannot be entered
							"CannotEnterConnectorUnlessTolerancePercentAndToleranceAmountAreEntered"

				RejectAllCostIncreases
					if (RejectAllCostIncreases)
						constraint (TolerancePercent = 0 and ToleranceAmount = 0)
							"CannotEnterTolerancePercentOrAmountWhenRejectingAllCostIncreases"

			Instance Selection	
				where (ParmContractGroup = ContractGroup)
			
			Sort Order
				ContractGroup
			
			Action Rules 

				Instance Rules 
					BackgroundGroup = "LoadGPORecords_" + ContractGroup
					invoke ClearUpdateFlags ContractImport in background group(BackgroundGroup) 
						assign async action request id to BackgroundGroupAsyncId
						invoked.ParmContractGroup = ContractGroup 	
					invoke ClearOperationFlags ContractGPOItem in background group(BackgroundGroup)
						run after BackgroundGroupAsyncId
						assign async action request id to BackgroundGroupAsyncId

					invoke LoadItemRecords ContractGPOItemDelta in background group(BackgroundGroup)
						run after BackgroundGroupAsyncId
						assign async action request id to BackgroundGroupAsyncId
						invoked.ParmContractGroup   = ContractGroup
					invoke LoadHeaderRecords ContractGPOHeaderDelta in background group(BackgroundGroup)
						run after BackgroundGroupAsyncId
						assign async action request id to BackgroundGroupAsyncId
						invoked.ParmContractGroup	= ContractGroup
					invoke LoadSupplierRecords ContractGPOSupplierDelta in background group(BackgroundGroup)
						run after BackgroundGroupAsyncId
						assign async action request id to BackgroundGroupAsyncId
						invoked.ParmContractGroup   = ContractGroup 
					invoke LoadDistributorRecords ContractGPODistributorDelta in background group(BackgroundGroup)
						run after BackgroundGroupAsyncId
						assign async action request id to BackgroundGroupAsyncId
						invoked.ParmContractGroup   = ContractGroup 
					invoke LoadParticipantRecords ContractGPOParticipantDelta in background group(BackgroundGroup)
						run after BackgroundGroupAsyncId
						assign async action request id to BackgroundGroupAsyncId					
						invoked.ParmContractGroup   = ContractGroup
					invoke LoadCategoryRecords ContractGPOCategoryDelta in background group(BackgroundGroup)		
						run after BackgroundGroupAsyncId
						assign async action request id to BackgroundGroupAsyncId
					invoke MassHeaderDelete ContractGPOHeaderDelta in background group(BackgroundGroup)
						run after BackgroundGroupAsyncId
						assign async action request id to BackgroundGroupAsyncId					
					invoke MassItemDelete ContractGPOItemDelta in background group(BackgroundGroup)
						run after BackgroundGroupAsyncId
						assign async action request id to BackgroundGroupAsyncId		
					invoke MassDistributorDelete ContractGPODistributorDelta in background group(BackgroundGroup)
						run after BackgroundGroupAsyncId
						assign async action request id to BackgroundGroupAsyncId		
					invoke MassSupplierDelete ContractGPOSupplierDelta in background group(BackgroundGroup)
						run after BackgroundGroupAsyncId
						assign async action request id to BackgroundGroupAsyncId		
					invoke MassCategoryDelete ContractGPOCategoryDelta in background group(BackgroundGroup)
						run after BackgroundGroupAsyncId
						assign async action request id to BackgroundGroupAsyncId		
				    invoke MassParticipantDelete ContractGPOParticipantDelta in background group(BackgroundGroup) 
						run after BackgroundGroupAsyncId
						assign async action request id to BackgroundGroupAsyncId
					invoke ManageInterfacedContractsFromGPOInformation in background group(BackgroundGroup)
						run after BackgroundGroupAsyncId
						assign async action request id to BackgroundGroupAsyncId
						invoked.ParmContractGroup				= ParmContractGroup
						invoked.AutoUpdateContracts        		= AutoUpdateContracts
						invoked.LineUpdateOption            	= LineUpdateOption
						invoked.TolerancePercent		   		= TolerancePercent
						invoked.Connector                       = Connector
						invoked.ToleranceAmount			   		= ToleranceAmount
						invoked.RejectAllCostIncreases	   		= RejectAllCostIncreases
						invoked.UpdateCostsOnly                 = UpdateCostsOnly
						invoked.ProcessItemMasterOnly           = ProcessItemMasterOnly
						invoked.DefaultTolerance                = DefaultTolerance
						invoked.FromDeltaUpdates        		= true											
		
		ManageInterfacedContractsFromGPOInformation is a Set Action
			default label is "ProcessUpdates"
			restricted
			Parameters
				ParmContractGroup          		is a ContractGroup
					default label is "ContractGroup"
				ParmGPOSupplier            		is a Supplier     
					default label is "GPOSupplier"
				FindNewContractDates       		is Boolean
				ProcessNewAndUpdatedItems  		is Boolean   
				FindDiscontinuedItems           is Boolean 
				ProcessParticipantTierChanges 	is Boolean   
				FindNewParticipants        		is Boolean
				FindNewDistributors             is Boolean
				FindVendorItemChanges      		is Boolean
				FindChangedContractSuppliers 	is Boolean
				FindChangedDistributorMarkups   is Boolean
				RemoveDeletedItems              is Boolean
				AutoUpdateContracts        		is Boolean
				LineUpdateOption            	is Numeric 1
					States
						UpdateIfCurrentDateSameAsHeaderDate value is 1
						UpdateAll                           value is 2
         				DoNotUpdate                         value is 3	
				TolerancePercent		   		is Percent size 6.3
				Connector
				ToleranceAmount			   		is an InternationalAmount
				RejectAllCostIncreases	   		is Boolean
				StandardMarkupCalculation       is Boolean
				UpdateCostsOnly                 is Boolean
				ProcessItemMasterOnly           is Boolean
				DefaultTolerance                is Boolean
				FromDeltaUpdates                is Boolean

			Parameter Rules
				ParmContractGroup
					required
					constraint (ParmContractGroup.GPOUsed > 0)
						"MustSelectA_GPOUsedOnContractGroupToRunThisProcess"

					constraint (ProcessNewAndUpdatedItems entered
					or          ProcessParticipantTierChanges entered
					or          FindNewContractDates entered
					or          FindNewParticipants entered
					or          FindNewDistributors entered
					or          FindVendorItemChanges entered
					or          FindChangedDistributorMarkups entered
					or          FindChangedContractSuppliers entered
					or          RemoveDeletedItems entered
					or          FromDeltaUpdates)
						"MustSelectAtLeastOneProcessingOption"

				ProcessNewAndUpdatedItems
					if (ProcessNewAndUpdatedItems)
						constraint (!ProcessParticipantTierChanges)
							"CannotProcessNewAndUpdatedItemsAndTierChangesInTheSameAction"

				ProcessParticipantTierChanges
					if (ProcessParticipantTierChanges)
						constraint (!ProcessNewAndUpdatedItems)
							"CannotProcessNewAndUpdatedItemsAndTierChangesInTheSameAction"

				ParmGPOSupplier
					initial value is ParmContractGroup.DefaultGPOSupplier
					default to ParmContractGroup.DefaultGPOSupplier
					if (ProcessNewAndUpdatedItems
					or  ProcessParticipantTierChanges
					or  FindChangedContractSuppliers)
						required
					constraint(ParmGPOSupplier.GroupPurchasingOrganization)
                        "GPOSupplierIsNotDefinedAsAGroupPurchasingOrganization"       	

				AutoUpdateContracts
					initial value is true

				LineUpdateOption
					initial value is 2
					default to 2
				
				Connector
					if (TolerancePercent > 0 and ToleranceAmount > 0)
						required
							"ConnectorIsRequiredWhenTolerancePercentAndToleranceAmountAreEntered"
					else
						cannot be entered
							"CannotEnterConnectorUnlessTolerancePercentAndToleranceAmountAreEntered"

				RejectAllCostIncreases
					if (RejectAllCostIncreases)
						constraint (TolerancePercent = 0 and ToleranceAmount = 0)
							"CannotEnterTolerancePercentOrAmountWhenRejectingAllCostIncreases"

			Instance Selection
				where (ContractGroup = ParmContractGroup)

			Sort Order 
				ContractGroup
			
			Action Rules

				Instance Rules

					if (FindNewContractDates
					or  ProcessNewAndUpdatedItems
					or  ProcessParticipantTierChanges
					or  FromDeltaUpdates)
						invoke FindNewContractDates ContractImport
 							invoked.ParmContractGroup           = ParmContractGroup
							invoked.ParmGPOSupplier             = ParmGPOSupplier
							invoked.AutoUpdateContracts         = AutoUpdateContracts
							invoked.LineUpdateOption            = LineUpdateOption
							invoked.ProcessOnlyUpdatedRecords   = FromDeltaUpdates

					if (ProcessNewAndUpdatedItems
					or  FromDeltaUpdates)
						invoke CheckForNewAndUpdatedItems ContractImport
							invoked.ParmContractGroup           = ParmContractGroup
							invoked.ParmGPOSupplier             = ParmGPOSupplier
							invoked.AutoUpdateContracts     	= AutoUpdateContracts
	   						invoked.TolerancePercent    		= TolerancePercent
							invoked.Connector           		= Connector
							invoked.ToleranceAmount     		= ToleranceAmount
							invoked.RejectAllCostIncreases 		= RejectAllCostIncreases
							invoked.MultipleContracts           = true
							invoked.UpdateCostsOnly             = UpdateCostsOnly
							invoked.ProcessItemMasterOnly       = ProcessItemMasterOnly
							invoked.DefaultTolerance            = DefaultTolerance
							invoked.ProcessOnlyUpdatedRecords   = FromDeltaUpdates
							invoked.FindDiscontinuedItems       = FindDiscontinuedItems
							
					if (ProcessParticipantTierChanges
					or  FromDeltaUpdates)
						invoke ProcessUpdatedParticipants ContractImportTierMember
							invoked.ParmContractGroup			= ParmContractGroup
							invoked.ParmGPOSupplier         	= ParmGPOSupplier
							invoked.AutoUpdateContracts     	= AutoUpdateContracts
							invoked.ProcessOnlyUpdatedRecords   = FromDeltaUpdates

					if (FindNewDistributors
					or  FromDeltaUpdates)
						for each ContractImportManufacturerRel
							if  (each.GPOSupplier = ParmGPOSupplier
							and  each.DoNotCreateDistributorContract = false
							and (FromDeltaUpdates = false
							or  (FromDeltaUpdates = true
							and  each.ContractImport.HeaderUpdated)))
								invoke FindNewDistributors ContractImport
									invoked.ParmContractGroup    = ContractGroup
									invoked.ParmContractImport   = each.ContractImport
									invoked.AutoUpdateContracts  = AutoUpdateContracts

					if (FindNewParticipants
					or  FromDeltaUpdates)
						invoke FindNewParticipants ContractImport
							invoked.ParmContractGroup           = ParmContractGroup
							invoked.ParmGPOSupplier             = ParmGPOSupplier
							invoked.StandardMarkupCalculation   = StandardMarkupCalculation
							invoked.AutoUpdateContracts         = AutoUpdateContracts
							invoked.ProcessOnlyUpdatedRecords   = FromDeltaUpdates
							
					if (FindChangedDistributorMarkups
					or  FromDeltaUpdates) 
						invoke FindChangedMarkups ContractImportDistributor
							invoked.ParmContractGroup           = ParmContractGroup
							invoked.ParmGPOSupplier             = ParmGPOSupplier
							invoked.AutoUpdateContracts         = AutoUpdateContracts
							invoked.ProcessOnlyUpdatedRecords   = FromDeltaUpdates

					if (FindChangedContractSuppliers
					or  FromDeltaUpdates)

						invoke LoadAndUpdateSuppliers ContractGPOSupplier
							invoked.SupplierGroup 					= ParmContractGroup

						if (ContractGroup.GPOUsed = 4)
							invoke LoadAndUpdateSuppliers ContractGPOHeader
								invoked.SupplierGroup  = ParmContractGroup						
						
						invoke FindChangedContractSuppliers ContractImport
							invoked.ParmContractGroup           = ParmContractGroup
							invoked.ParmGPOSupplier             = ParmGPOSupplier
							invoked.AutoUpdateContracts         = AutoUpdateContracts
							invoked.ProcessOnlyUpdatedRecords   = FromDeltaUpdates

						invoke FindChangedContractSuppliers ContractImportDistributor
							invoked.ParmContractGroup           = ParmContractGroup
							invoked.ParmGPOSupplier             = ParmGPOSupplier
							invoked.AutoUpdateContracts         = AutoUpdateContracts
							invoked.ProcessOnlyUpdatedRecords   = FromDeltaUpdates

					if (FindVendorItemChanges
					or  FromDeltaUpdates)
						invoke FindVendorItemChanges ContractImport
							invoked.ParmContractGroup           = ParmContractGroup
							invoked.ParmGPOSupplier             = ParmGPOSupplier
							invoked.AutoUpdateContracts         = AutoUpdateContracts
							invoked.ProcessOnlyUpdatedRecords	= FromDeltaUpdates

					if (RemoveDeletedItems
					or  FromDeltaUpdates)
						LocalFromDeltaUpdates = FromDeltaUpdates
						for each ContractImportDeletedItemsRel
							invoke RemoveMissingGPOItems each

		LoadHPGMembers is a Set Action
			default label is "LoadMembers"
			restricted
			Parameters
				ParmContractGroup	is a ContractGroup
					default label is "ContractGroup"
			
			Parameter Rules
				ParmContractGroup
					required
			
			Instance Selection
				where (ContractGroup = ParmContractGroup)

			Action Rules
			
				Instance Rules
				
					if (GPOUsed = 1)
						invoke FindNewMembers ContractGPOMembership
							invoked.ContractGroup  = ParmContractGroup
					else
					if (GPOUsed = 4)
						invoke FindNewMembers ContractGPOParticipant
							invoked.ContractGroup  = ParmContractGroup				

		LoadHPGSuppliers is a Set Action
			default label is "LoadSuppliers"
			restricted
			Parameters
				ParmContractGroup	is a ContractGroup
					default label is "ContractGroup"
			
			Parameter Rules
				ParmContractGroup
					required
			
			Instance Selection
				where (ContractGroup = ParmContractGroup)
				
			Action Rules
			
				Instance Rules
				
					if (GPOUsed = 1)
						invoke LoadAndUpdateSuppliers ContractGPOSupplier
							invoked.SupplierGroup  = ParmContractGroup
					else
					if (GPOUsed = 4)
						invoke LoadAndUpdateSuppliers ContractGPOHeader
							invoked.SupplierGroup  = ParmContractGroup
						invoke LoadAndUpdateSuppliers ContractGPOSupplier
								invoked.SupplierGroup  = ParmContractGroup						


		EnableContractsForClinicalUseSet is a Set Action  
			default label is "EnableContractsForClinicalUse" 
			restricted 
			Parameters 
				ParmContractGroup                   		is a ContractGroup
					default label is "ContractGroup"
				ManufacturerContracts   					is Boolean
				ParmContractClassification					is a ContractType
					default label is "ContractClassification"
				ParmSupplier            					is a Supplier 
					default label is "Supplier"
				SetLinesToClinicalUse			    		is Numeric 1
					States 
						AllSpecialItems            value is 0
						AllItems                   value is 1
						None                       value is 2				 
				SetClassificationToDefaultForClinicalUse	is Boolean 
				SetClassificationToShowHealthcare			is Boolean	
					default label is "SetClassificationToShowHealthcareInformation"
				CompanyOption                       		is Numeric 1
					default label is "LocationsToCreateForCompanyOnlyValues"
					States 
						Both 					value is 0
						InventoryLocationOnly   value is 1
						RequestingLocationOnly  value is 2
						None                    value is 3
			
			Parameter Rules
				ParmContractGroup 
					required
					constraint (ParmContractGroup.EnableClinicalSystemUseLocations)
						"CannotRunAction;ContractGroupDoesNotAllowContractsToPassLocationDataToClinicalUseSystems"

					constraint (ManufacturerContracts = true or ParmContractClassification entered or ParmSupplier entered)
						"MustMakeAtLeastOneSelectionOfManufacturerContracts,ContractClassification,OrSupplier"						

			Instance Selection 
				where (ParmContractGroup = ContractGroup)
			Action Rules 
				Instance Rules 

					invoke AddContractClinicalLocations Contract
						invoked.ParmContractGroup               			= ParmContractGroup
						invoked.ManufacturerContracts           			= ManufacturerContracts 
						invoked.ParmContractClassification      			= ParmContractClassification 
						invoked.ParmSupplier			        			= ParmSupplier 
						invoked.SetLinesToClinicalUse						= SetLinesToClinicalUse
						invoked.CompanyOption                   			= CompanyOption 
						invoked.SetClassificationToShowHealthcare 			= SetClassificationToShowHealthcare
						invoked.SetClassificationToDefaultForClinicalUse	= SetClassificationToDefaultForClinicalUse

		EnableContractsForClinicalUse is an Instance Action    
			restricted 
			Parameters 
				ManufacturerContracts   					is Boolean
				ParmContractClassification   				is a ContractClassification
					default label is "ContractClassification"
				ParmSupplier            					is a Supplier 
					default label is "Supplier"
				SetLinesToClinicalUse			    		is Numeric 1
					States 
						AllSpecialItems            value is 0
						AllItems                   value is 1
						None                       value is 2				 
				SetClassificationToShowHealthcare			is Boolean	
					default label is "SetClassificationToShowHealthcareInformation"
				SetClassificationToDefaultForClinicalUse	is Boolean
				CompanyOption                       		is Numeric 1
					default label is "LocationsToCreateForCompanyOnlyValues"
					States 
						Both 					value is 0
						InventoryLocationOnly   value is 1
						RequestingLocationOnly  value is 2
						None                    value is 3
				DistributorContracts                        is Boolean           
				ParmContractType                            is like ContractType 
			
			Parameter Rules 
			
			Action Rules 
				constraint (ManufacturerContracts = true or ParmContractClassification entered or ParmSupplier entered)
						"MustMakeAtLeastOneSelectionOfManufacturerContracts,ContractClassification,OrSupplier"	

				invoke AddContractClinicalLocations Contract
					invoked.ParmContractGroup               			= ContractGroup
					invoked.ManufacturerContracts           			= ManufacturerContracts 
					invoked.ParmContractClassification         			= ParmContractClassification 
					invoked.ParmSupplier			        			= ParmSupplier 
					invoked.SetLinesToClinicalUse						= SetLinesToClinicalUse
					invoked.CompanyOption                   			= CompanyOption 
					invoked.SetClassificationToShowHealthcare 			= SetClassificationToShowHealthcare
					invoked.SetClassificationToDefaultForClinicalUse	= SetClassificationToDefaultForClinicalUse

		RebuildConsolidatedUOM is an Instance Action  
			restricted 

			Action Rules 

				invoke RebuildConsolidatedUOM ConsolidatedItemMaster 
					invoked.ParmContractGroup	= ContractGroup 
		
		CreateNewMembersOrParticipantsForNewParticipantGroupLines is a Set Action
			default label is "UpdateContractsFromNewParticipantGroupLines"
			restricted
			Parameters
				ContractGroup
				PrmParticipantGroup           is a ParticipantGroup
					default label is "ParticipantGroup"
				Contract

			Parameter Rules

				ContractGroup
					initial value is actor.context.BusinessGroup
					required

				PrmParticipantGroup
					constraint (!Contract entered)
						"CannotEnterBothParticipantGroupAndContract"

				Contract
					constraint (!Contract.ServicePurchaseType)
						"CannotUseForServicePurchaseType"
					constraint (!Contract.StandingPurchaseType)
						"CannotUseForStandingPurchaseType"
					constraint (!Contract.ContractStatus.Closed)
						"CannotSelectClosedContract"
					constraint (!PrmParticipantGroup entered)
						"CannotEnterBothParticipantGroupAndContract"
					constraint (Contract.ParticipantGroupsExist)
						"CannotSelect;ContractHasNotUsedParticipantGroups"

			Instance Selection
				where (ContractGroup			= ContractGroup)

			Action Rules

				Instance Rules

					for each NewParticipantGroupLineRel

						if ((PrmParticipantGroup entered
						and  each.ParticipantGroup  = PrmParticipantGroup)
						or   !PrmParticipantGroup entered)

							invoke CreateNewMembersAndParticipants each
								invoked.PrmContract              = Contract








