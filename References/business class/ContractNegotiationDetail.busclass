ContractNegotiationDetail is a BusinessClass
    owned by po
    prefix is CNDtl

    Ontology
		symbolic key is ContractNegotiationDetail
    			    			
    Patterns
        implements DynamicCreation
    
	Persistent Fields
		NegotiationTimeStamp			is TimeStamp
		QuantityPurchased				is Numeric 10
		Contract1NetAmount				is an InternationalAmount
		Contract1AmountWithoutRebate	is an InternationalAmount
		Contract2NetAmount				is an InternationalAmount
		Contract2AmountWithoutRebate	is an InternationalAmount
		SplitTotalNetAmount				is an InternationalAmount
		SplitContract1QuantityPurchased is Numeric 10
		SplitContract2QuantityPurchased	is Numeric 10
		SplitAllContract1NetAmount		is an InternationalAmount
		SplitAllContract2NetAmount		is an InternationalAmount
		DateRange
		AdjustmentPercent				is Percent 3
		OriginalUsage					is Boolean

	Local Fields
		LocalSplitTotalNetAmount		is an InternationalAmount
		LocalContract1Quantity			is Numeric 10
		LocalContract1NetAmount			is an InternationalAmount
		LocalContract1AmountNoRebate	is an InternationalAmount
		LocalAllContract1NetAmount		is an InternationalAmount
		LocalContract2Quantity			is Numeric 10
		LocalContract2NetAmount			is an InternationalAmount
		LocalContract2AmountNoRebate	is an InternationalAmount
		LocalAllContract2NetAmount		is an InternationalAmount
		LocalPurchaseQuantity			is Numeric 10
		LocalSplitTotalQuantity			is Numeric 10		
		LocalPercentOfTotal				is Percent 4.1
   		LocalCompany					is like Company 
   		LocalLocation					is like InventoryLocation
   		LocalReqLocation				is like RequestingLocation
		LocalDateRange					is a DateRange
		LocalUsageQuantityType			is Numeric size 1
		LocalUsageType					is Numeric size 1
			States	
				Negotiation					value is 0
				Forecasting					value is 1
				Both						value is 2
		LocalAdjustmentPercent			is Percent 3
		LocalAnnualized					is Boolean
		
	Derived Fields
		Contract1Message is a MessageField
			restricted	
			"Contract1"
			
		Contract2Message is a MessageField
			restricted
			"Contract2"
		
		ContractLiteral is a ConditionalField
			type is Text
			restricted
			if ((Contract1NetAmount entered) and (SplitTotalNetAmount entered))
				Contract1Message
			else
			if ((Contract2NetAmount entered) and (SplitTotalNetAmount entered))
				Contract2Message
			else
				blank 
				
		DerivedContract is a ConditionalField
			type is Numeric 15
			if ((Contract1NetAmount entered) and (SplitTotalNetAmount entered))
				ContractNegotiation.Contract1
			else
			if ((Contract2NetAmount entered) and (SplitTotalNetAmount entered))
				ContractNegotiation.Contract2
			else
				blank 
				
		DerivedContract1 is a ConditionalField
			type is Numeric 15
			if (ContractNegotiation.Contract1 entered)
				ContractNegotiation.Contract1
			else
				1
				
		DerivedContract2 is a ConditionalField
			type is Numeric 15
			if (ContractNegotiation.Contract2 entered)
				ContractNegotiation.Contract2
			else
				2 
				
		HighMessage is a MessageField
			restricted
			"High-"
			
		NoRebateMessage is a MessageField
			"NoRebate"
		
		LowMessage is a MessageField
			restricted
			"Low-"
		
		Contract1RebateAchieved is a DerivedField
			type is Text
			if (Contract1NetAmount	not entered)
				return " "
			else
			if (ContractNegotiation.Contract1Rebate1QualifierAmountPercent not entered
			and ContractNegotiation.Contract1Rebate2QualifierAmountPercent not entered)
				return " "
			else
			if (ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Amount entered)
				if (Contract1AmountWithoutRebate	>= ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Amount)
					if (!PreviousQuantityRel exist
					or  SplitTotalNetAmount entered
					or  PreviousQuantityRel.Contract1AmountWithoutRebate	< ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Amount)
						return HighMessage + ContractNegotiation.Contract1Rebate2Percent
					else
					if (SplitTotalNetAmount entered)
						return NoRebateMessage
					else
						return " "
				else
				if (Contract1AmountWithoutRebate	>= ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount)
					if (!PreviousQuantityRel exist
					or  SplitTotalNetAmount entered
					or  PreviousQuantityRel.Contract1AmountWithoutRebate	< ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount)
						return LowMessage + ContractNegotiation.Contract1Rebate1Percent
					else
					if (SplitTotalNetAmount entered)
						return NoRebateMessage
					else
						return " "
				else
				if (SplitTotalNetAmount entered)
					return NoRebateMessage
				else
					return " "
			else
			if (ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Percentage entered)
				if (DerivedContract1Percent		>= ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Percentage)
					if (!PreviousQuantityRel exist
					or  SplitTotalNetAmount entered
					or  PreviousQuantityRel.DerivedContract1Percent	< ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Percentage)
						return HighMessage + ContractNegotiation.Contract1Rebate2Percent
					else
					if (SplitTotalNetAmount entered)
						return NoRebateMessage
					else
						return " "
				else
				if (DerivedContract1Percent 		>= ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Percentage)
					if (!PreviousQuantityRel exist
					or  SplitTotalNetAmount entered
					or  PreviousQuantityRel.DerivedContract1Percent	< ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Percentage)
						return LowMessage + ContractNegotiation.Contract1Rebate1Percent
					else
					if (SplitTotalNetAmount entered)
						return NoRebateMessage
					else
						return " "
				else
				if (SplitTotalNetAmount entered)
					return NoRebateMessage
				else
					return " "
			else
			if (ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount entered)
				if (Contract1AmountWithoutRebate	>= ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount)
					if (!PreviousQuantityRel exist
					or  SplitTotalNetAmount entered
					or  PreviousQuantityRel.Contract1AmountWithoutRebate	< ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount)
						return LowMessage + ContractNegotiation.Contract1Rebate1Percent
					else
					if (SplitTotalNetAmount entered)
						return NoRebateMessage
					else
						return " "
				else
				if (SplitTotalNetAmount entered)
					return NoRebateMessage
				else
					return " "
			else
			if (ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Percentage entered)
				if (DerivedContract1Percent 		>= ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Percentage)
					if (!PreviousQuantityRel exist
					or  SplitTotalNetAmount entered
					or  PreviousQuantityRel.DerivedContract1Percent	< ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Percentage)
						return LowMessage + ContractNegotiation.Contract1Rebate1Percent
					else
					if (SplitTotalNetAmount entered)
						return NoRebateMessage
					else
						return " "
				else
				if (SplitTotalNetAmount entered)
					return NoRebateMessage
				else
					return " "
							
		Contract2RebateAchieved is a DerivedField
			type is Text
			if (Contract2NetAmount	not entered)
				return " "
			else
			if (ContractNegotiation.Contract2Rebate1QualifierAmountPercent not entered
			and ContractNegotiation.Contract2Rebate2QualifierAmountPercent not entered)
				return " "
			else
			if (ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Amount entered)
				if (Contract2AmountWithoutRebate	>= ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Amount)
					if (!PreviousQuantityRel exist
					or  SplitTotalNetAmount entered
					or  PreviousQuantityRel.Contract2AmountWithoutRebate	< ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Amount)
						return HighMessage + ContractNegotiation.Contract2Rebate2Percent
					else
					if (SplitTotalNetAmount entered)
						return NoRebateMessage
					else
						return " "
				else
				if (Contract2AmountWithoutRebate	>= ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount)
					if (!PreviousQuantityRel exist
					or  SplitTotalNetAmount entered
					or  PreviousQuantityRel.Contract2AmountWithoutRebate	< ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount)
						return LowMessage + ContractNegotiation.Contract2Rebate1Percent
					else
					if (SplitTotalNetAmount entered)
						return NoRebateMessage
					else
						return " "
				else
				if (SplitTotalNetAmount entered)
					return NoRebateMessage
				else
					return " "
			else
			if (ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Percentage entered)
				if (DerivedContract2Percent		>= ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Percentage)
					if (!PreviousQuantityRel exist
					or  SplitTotalNetAmount entered
					or  PreviousQuantityRel.DerivedContract2Percent	< ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Percentage)
						return HighMessage + ContractNegotiation.Contract2Rebate2Percent
					else
					if (SplitTotalNetAmount entered)
						return NoRebateMessage
					else
						return " "
				else
				if (DerivedContract2Percent 		>= ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Percentage)
					if (!PreviousQuantityRel exist
					or  SplitTotalNetAmount entered
					or  PreviousQuantityRel.DerivedContract2Percent	< ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Percentage)
						return LowMessage + ContractNegotiation.Contract2Rebate1Percent
					else
					if (SplitTotalNetAmount entered)
						return NoRebateMessage
					else
						return " "
				else
				if (SplitTotalNetAmount entered)
					return NoRebateMessage
				else
					return " "
			else
			if (ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount entered)
				if (Contract2AmountWithoutRebate	>= ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount)
					if (!PreviousQuantityRel exist
					or  SplitTotalNetAmount entered
					or  PreviousQuantityRel.Contract2AmountWithoutRebate	< ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount)
						return LowMessage + ContractNegotiation.Contract2Rebate1Percent
					else
					if (SplitTotalNetAmount entered)
						return NoRebateMessage
					else
						return " "
				else
				if (SplitTotalNetAmount entered)
					return NoRebateMessage
				else
					return " "
			else
			if (ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Percentage entered)
				if (DerivedContract2Percent 		>= ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Percentage)
					if (!PreviousQuantityRel exist
					or  SplitTotalNetAmount entered
					or  PreviousQuantityRel.DerivedContract2Percent	< ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Percentage)
						return LowMessage + ContractNegotiation.Contract2Rebate1Percent
					else
					if (SplitTotalNetAmount entered)
						return NoRebateMessage
					else
						return " "
				else
				if (SplitTotalNetAmount entered)
					return NoRebateMessage
				else
					return " "
			else
				return " "
							
		DerivedContract1Percent is a ConditionalField
			type is Percent 4.1
			restricted
			if (SplitTotalNetAmount	entered)
				Contract1AmountWithoutRebate / (Contract1AmountWithoutRebate + Contract2AmountWithoutRebate)
			else
				100%
				
		DerivedContract2Percent is a ConditionalField
			type is Percent 4.1
			restricted
			if (SplitTotalNetAmount	entered)
				Contract2AmountWithoutRebate / (Contract1AmountWithoutRebate + Contract2AmountWithoutRebate)
			else
				100%
		
		HighTierMessage is a MessageField
			restricted
			"HighTier"
			
		LowTierMessage is a MessageField
			restricted
			"LowTier"
				
		DerivedContract1TierAchieved is a DerivedField
			type is Text
			if (QuantityPurchased	>= ContractNegotiation.Contract1QuantityNeededToAchieveHigherTier
			and SplitTotalNetAmount not entered
			and Contract1AmountWithoutRebate entered)
				if (!PreviousQuantityRel exist
				or  PreviousQuantityRel.QuantityPurchased	< ContractNegotiation.Contract1QuantityNeededToAchieveHigherTier)
					return HighTierMessage
				else
					return " "
			else
			if (QuantityPurchased	>= ContractNegotiation.Contract1QuantityNeededToAchieveLowerTier
			and SplitTotalNetAmount not entered
			and Contract1AmountWithoutRebate entered)
				if (!PreviousQuantityRel exist
				or  PreviousQuantityRel.QuantityPurchased	< ContractNegotiation.Contract1QuantityNeededToAchieveLowerTier)
					return LowTierMessage
				else
					return " "
			else
				return " "
			
		DerivedContract2TierAchieved is a DerivedField
			type is Text
			if (QuantityPurchased	>= ContractNegotiation.Contract2QuantityNeededToAchieveHigherTier
			and SplitTotalNetAmount not entered
			and Contract2AmountWithoutRebate entered)
				if (!PreviousQuantityRel exist
				or  PreviousQuantityRel.QuantityPurchased	< ContractNegotiation.Contract2QuantityNeededToAchieveHigherTier)
					return HighTierMessage
				else
					return " "
			else
			if (QuantityPurchased	>= ContractNegotiation.Contract2QuantityNeededToAchieveLowerTier
			and SplitTotalNetAmount not entered
			and Contract2AmountWithoutRebate entered)
				if (!PreviousQuantityRel exist
				or  PreviousQuantityRel.QuantityPurchased	< ContractNegotiation.Contract2QuantityNeededToAchieveLowerTier)
					return LowTierMessage
				else
					return " "
			else
				return " "
		
		DerivedSplitContract1TierAchieved is a DerivedField
			type is Text
			if (SplitContract1QuantityPurchased	>= ContractNegotiation.SplitContract1QuantityNeededToAchieveHigherTier
			and SplitTotalNetAmount entered
			and Contract1AmountWithoutRebate entered)
				return HighTierMessage
			else
			if (SplitContract1QuantityPurchased	>= ContractNegotiation.SplitContract1QuantityNeededToAchieveLowerTier
			and SplitTotalNetAmount entered
			and Contract1AmountWithoutRebate entered)
				return LowTierMessage
			else
				return " "
			
		DerivedSplitContract2TierAchieved is a DerivedField
			type is Text
			if (SplitContract2QuantityPurchased	>= ContractNegotiation.SplitContract2QuantityNeededToAchieveHigherTier
			and SplitTotalNetAmount entered
			and Contract2AmountWithoutRebate entered)
				return HighTierMessage
			else
			if (SplitContract2QuantityPurchased	>= ContractNegotiation.SplitContract2QuantityNeededToAchieveLowerTier
			and SplitTotalNetAmount entered
			and Contract2AmountWithoutRebate entered)
				return LowTierMessage
			else
				return " "
		
		DerivedContract1HigherTierMessage is a MessageField
			"HigherTierReachedAtPurchaseQuantity=<ContractNegotiation.Contract1QuantityNeededToAchieveHigherTier>"
				
		DerivedContract2HigherTierMessage is a MessageField
			"HigherTierReachedAtPurchaseQuantity=<ContractNegotiation.Contract2QuantityNeededToAchieveHigherTier>"

		DerivedContract1LowerTierMessage is a MessageField
			"LowerTierReachedAtPurchaseQuantity=<ContractNegotiation.Contract1QuantityNeededToAchieveLowerTier>"
		
		DerivedContract2LowerTierMessage is a MessageField
			"LowerTierReachedAtPurchaseQuantity=<ContractNegotiation.Contract2QuantityNeededToAchieveLowerTier>"

		DerivedContract1HigherTierSplitMessage is a MessageField
			"HigherTierReachedAtPurchaseQuantity=<ContractNegotiation.SplitContract1QuantityNeededToAchieveHigherTier>"
				
		DerivedContract2HigherTierSplitMessage is a MessageField
			"HigherTierReachedAtPurchaseQuantity=<ContractNegotiation.SplitContract2QuantityNeededToAchieveHigherTier>"

		DerivedContract1LowerTierSplitMessage is a MessageField
			"LowerTierReachedAtPurchaseQuantity=<ContractNegotiation.SplitContract1QuantityNeededToAchieveLowerTier>"
		
		DerivedContract2LowerTierSplitMessage is a MessageField
			"LowerTierReachedAtPurchaseQuantity=<ContractNegotiation.SplitContract2QuantityNeededToAchieveLowerTier>"

		DerivedContract1HigherRebateAmountMessage is a MessageField
			restricted
			"HigherRebateReachedAtGrossAmount=<ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Amount>"
				
		DerivedContract2HigherRebateAmountMessage is a MessageField
			restricted
			"HigherRebateReachedAtGrossAmount=<ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Amount>"

		DerivedContract1LowerRebateAmountMessage is a MessageField
			restricted
			"LowerRebateReachedAtGrossAmount=<ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount>"
		
		DerivedContract2LowerRebateAmountMessage is a MessageField
			restricted
			"LowerRebateReachedAtGrossAmount=<ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount>"

		DerivedContract1HigherRebatePercentageMessage is a MessageField
			restricted
			"HigherRebateReachedAtGrossAmount=<ContractNegotiation.SplitContract1AmountNeededToAchieveHigherRebateByPercent>"
				
		DerivedContract2HigherRebatePercentageMessage is a MessageField
			restricted
			"HigherRebateReachedAtGrossAmount=<ContractNegotiation.SplitContract2AmountNeededToAchieveHigherRebateByPercent>"

		DerivedContract1LowerRebatePercentageMessage is a MessageField
			restricted
			"LowerRebateReachedAtGrossAmount=<ContractNegotiation.SplitContract1AmountNeededToAchieveLowerRebateByPercent>"
		
		DerivedContract2LowerRebatePercentageMessage is a MessageField
			restricted
			"LowerRebateReachedAtGrossAmount=<ContractNegotiation.SplitContract2AmountNeededToAchieveLowerRebateByPercent>"

		DerivedContract1NoRebateAmountMessage is a MessageField
			restricted
			"DidNotReachGrossAmount=<ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount>"
		
		DerivedContract2NoRebateAmountMessage is a MessageField
			restricted
			"DidNotReachGrossAmount=<ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount>"

		DerivedContract1NoRebatePercentageMessage is a MessageField
			restricted
			"DidNotReachGrossAmount=<ContractNegotiation.SplitContract1AmountNeededToAchieveLowerRebateByPercent>"
		
		DerivedContract2NoRebatePercentageMessage is a MessageField
			restricted
			"DidNotReachGrossAmount=<ContractNegotiation.SplitContract2AmountNeededToAchieveLowerRebateByPercent>"

		DerivedContract1HigherRebateMessage is a ConditionalField
			type is Text
			if (ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Percentage entered)
				DerivedContract1HigherRebatePercentageMessage
			else
				DerivedContract1HigherRebateAmountMessage
				
		DerivedContract2HigherRebateMessage is a ConditionalField
			type is Text
			if (ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Percentage entered)
				DerivedContract2HigherRebatePercentageMessage
			else
				DerivedContract2HigherRebateAmountMessage
				
		DerivedContract1LowerRebateMessage is a ConditionalField
			type is Text
			if (ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Percentage entered)
				DerivedContract1LowerRebatePercentageMessage
			else
				DerivedContract1LowerRebateAmountMessage
				
		DerivedContract2LowerRebateMessage is a ConditionalField
			type is Text
			if (ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Percentage entered)
				DerivedContract2LowerRebatePercentageMessage
			else
				DerivedContract2LowerRebateAmountMessage
				
		DerivedContract1NoRebateMessage is a ConditionalField
			type is Text
			if (ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Percentage entered)
				DerivedContract1NoRebatePercentageMessage
			else
				DerivedContract1NoRebateAmountMessage
				
		DerivedContract2NoRebateMessage is a ConditionalField
			type is Text
			if (ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Percentage entered)
				DerivedContract2NoRebatePercentageMessage
			else
				DerivedContract2NoRebateAmountMessage
				
		SplitTotalGrossAmount is a DerivedField
			type is like InternationalAmount
			return (Contract1AmountWithoutRebate + Contract2AmountWithoutRebate)
				
		DerivedContract1QuantityPurchased is a DerivedField
			type is Decimal 13.4
			if (SplitTotalNetAmount not entered)
				return QuantityPurchased
			else
				return SplitContract1QuantityPurchased
					
		DerivedContract2QuantityPurchased is a DerivedField
			type is Decimal 13.4
			if (SplitTotalNetAmount not entered)
				return QuantityPurchased
			else
				return SplitContract2QuantityPurchased
					

		DerivedContract1LowerTierQualifierAmountQuantity	is a ComputeField
			type is Decimal 13.4
			restricted
			(ContractNegotiation.Contract1LowerTierQualifierAmountPercent.Amount / ContractNegotiation.Contract1BaseCost)
			
		DerivedContract1HigherTierQualifierAmountQuantity is a ComputeField
			type is Decimal 13.4
			restricted
			(DerivedContract1LowerTierQualifierAmountQuantity + ((ContractNegotiation.Contract1HigherTierQualifierAmountPercent.Amount - ContractNegotiation.Contract1LowerTierQualifierAmountPercent.Amount) / ContractNegotiation.Contract1LowerTierUnitCost))
		
		DerivedContract1IntoHigherTierByAmountQualifierAmountWithoutRebate	is a DerivedField
			type is like InternationalAmount
			restricted
			return (ContractNegotiation.Contract1HigherTierQualifierAmountPercent.Amount + ((LocalPurchaseQuantity - DerivedContract1HigherTierQualifierAmountQuantity) * ContractNegotiation.Contract1HigherTierUnitCost))
			
		DerivedContract1IntoLowerTierByAmountQualifierAmountWithoutRebate	is a DerivedField
			type is like InternationalAmount
			restricted
			return (ContractNegotiation.Contract1LowerTierQualifierAmountPercent.Amount + ((LocalPurchaseQuantity - DerivedContract1LowerTierQualifierAmountQuantity) * ContractNegotiation.Contract1LowerTierUnitCost))
			
		DerivedContract1BaseCostAmountWithoutRebate is a DerivedField
			type is like InternationalAmount
			restricted
			return (LocalPurchaseQuantity * ContractNegotiation.Contract1BaseCost)
			
		DerivedContract1PurchaseQuantityAtHigherTierCostAmount is a DerivedField
			type is like InternationalAmount
			restricted
			return (LocalPurchaseQuantity * ContractNegotiation.Contract1HigherTierUnitCost)
			
		DerivedContract1PurchaseQuantityAtLowerTierCostAmount is a DerivedField
			type is like InternationalAmount
			restricted
			return (LocalPurchaseQuantity * ContractNegotiation.Contract1LowerTierUnitCost)
			
		DerivedPercentOfTotal is a ComputeField
			type is Percent 4.1
			restricted
			(LocalPurchaseQuantity / LocalSplitTotalQuantity)
			
		DerivedContract1WithoutRebatesPurchaseAmount is a DerivedField
			type is like InternationalAmount
			restricted
			if (ContractNegotiation.Contract1HigherTierQualifierAmountPercent.Amount entered)
				if (LocalPurchaseQuantity	> DerivedContract1HigherTierQualifierAmountQuantity)
					return DerivedContract1IntoHigherTierByAmountQualifierAmountWithoutRebate
				else
				if (LocalPurchaseQuantity 	> DerivedContract1LowerTierQualifierAmountQuantity)
					return DerivedContract1IntoLowerTierByAmountQualifierAmountWithoutRebate
				else
					return DerivedContract1BaseCostAmountWithoutRebate
			else
			if (ContractNegotiation.Contract1HigherTierQualifierAmountPercent.Percentage entered)
				return DerivedContract1PurchaseQuantityAtHigherTierCostAmount
			else
			if (ContractNegotiation.Contract1LowerTierQualifierAmountPercent.Amount entered)
				if (LocalPurchaseQuantity 	> DerivedContract1LowerTierQualifierAmountQuantity)
					return DerivedContract1IntoLowerTierByAmountQualifierAmountWithoutRebate
				else
					return DerivedContract1BaseCostAmountWithoutRebate
			else
			if (ContractNegotiation.Contract1LowerTierQualifierAmountPercent.Percentage entered)
				return DerivedContract1PurchaseQuantityAtLowerTierCostAmount
			else
				return DerivedContract1BaseCostAmountWithoutRebate
				 				 		
		DerivedContract1WithRebatesAppliedPurchaseAmount is a DerivedField
			type is like InternationalAmount
			restricted
			if (ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Amount	entered)
				if (DerivedContract1WithoutRebatesPurchaseAmount >= ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Amount)
					return (DerivedContract1WithoutRebatesPurchaseAmount * (100% - (ContractNegotiation.Contract1Rebate2Percent + ContractNegotiation.Contract1Rebate1Percent)))
				else
				if (DerivedContract1WithoutRebatesPurchaseAmount >= ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount)
					return (DerivedContract1WithoutRebatesPurchaseAmount * (100% - ContractNegotiation.Contract1Rebate1Percent))
				else
					return DerivedContract1WithoutRebatesPurchaseAmount
			else
			if (ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Percentage entered)
				return (DerivedContract1WithoutRebatesPurchaseAmount * (100% - (ContractNegotiation.Contract1Rebate2Percent + ContractNegotiation.Contract1Rebate1Percent)))
			else
			if (ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount entered)
				if (DerivedContract1WithoutRebatesPurchaseAmount >= ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount)
					return (DerivedContract1WithoutRebatesPurchaseAmount * (100% - ContractNegotiation.Contract1Rebate1Percent))
				else
					return DerivedContract1WithoutRebatesPurchaseAmount
			else
			if (ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Percentage entered)
				return (DerivedContract1WithoutRebatesPurchaseAmount * (100% - ContractNegotiation.Contract1Rebate1Percent))
			else
				return DerivedContract1WithoutRebatesPurchaseAmount
							
		DerivedContract1WithoutRebatesSplitPurchaseAmount is a DerivedField
			type is like InternationalAmount
			restricted
			if (ContractNegotiation.Contract1HigherTierQualifierAmountPercent.Amount entered)
				if (LocalPurchaseQuantity	> DerivedContract1HigherTierQualifierAmountQuantity)
					return DerivedContract1IntoHigherTierByAmountQualifierAmountWithoutRebate
				else
				if (LocalPurchaseQuantity 	> DerivedContract1LowerTierQualifierAmountQuantity)
					return DerivedContract1IntoLowerTierByAmountQualifierAmountWithoutRebate
				else
					return DerivedContract1BaseCostAmountWithoutRebate
			else
			if (ContractNegotiation.Contract1HigherTierQualifierAmountPercent.Percentage entered)
				if (LocalPercentOfTotal	> ContractNegotiation.Contract1HigherTierQualifierAmountPercent.Percentage)
					return DerivedContract1PurchaseQuantityAtHigherTierCostAmount
				else
				if (LocalPercentOfTotal	> ContractNegotiation.Contract1LowerTierQualifierAmountPercent.Percentage)
					return DerivedContract1PurchaseQuantityAtLowerTierCostAmount
				else
					return DerivedContract1BaseCostAmountWithoutRebate
			else
			if (ContractNegotiation.Contract1LowerTierQualifierAmountPercent.Amount entered)
				if (LocalPurchaseQuantity 	> DerivedContract1LowerTierQualifierAmountQuantity)
					return DerivedContract1IntoLowerTierByAmountQualifierAmountWithoutRebate
				else
					return DerivedContract1BaseCostAmountWithoutRebate
			else
			if (ContractNegotiation.Contract1LowerTierQualifierAmountPercent.Percentage entered)
				if (LocalPercentOfTotal	> ContractNegotiation.Contract1LowerTierQualifierAmountPercent.Percentage)
					return DerivedContract1PurchaseQuantityAtLowerTierCostAmount
				else
					return DerivedContract1BaseCostAmountWithoutRebate
			else
				return DerivedContract1BaseCostAmountWithoutRebate
				 				 		
		DerivedContract1WithRebatesAppliedSplitPurchaseAmount is a DerivedField
			type is like InternationalAmount
			restricted
			if (ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Amount	entered)
				if (DerivedContract1WithoutRebatesSplitPurchaseAmount >= ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Amount)
					return (DerivedContract1WithoutRebatesSplitPurchaseAmount * (100% - (ContractNegotiation.Contract1Rebate2Percent + ContractNegotiation.Contract1Rebate1Percent)))
				else
				if (DerivedContract1WithoutRebatesSplitPurchaseAmount >= ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount)
					return (DerivedContract1WithoutRebatesSplitPurchaseAmount * (100% - ContractNegotiation.Contract1Rebate1Percent))
				else
					return DerivedContract1WithoutRebatesSplitPurchaseAmount
			else
			if (ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Percentage entered)
				if (LocalPercentOfTotal	>= ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Percentage)
					return (DerivedContract1WithoutRebatesSplitPurchaseAmount * (100% - (ContractNegotiation.Contract1Rebate2Percent + ContractNegotiation.Contract1Rebate1Percent)))
				else
				if (LocalPercentOfTotal	>= ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Percentage)
					return (DerivedContract1WithoutRebatesSplitPurchaseAmount * (100% - ContractNegotiation.Contract1Rebate1Percent))
				else
					return DerivedContract1WithoutRebatesSplitPurchaseAmount
			else
			if (ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount entered)
				if (DerivedContract1WithoutRebatesSplitPurchaseAmount >= ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount)
					return (DerivedContract1WithoutRebatesSplitPurchaseAmount * (100% - ContractNegotiation.Contract1Rebate1Percent))
				else
					return DerivedContract1WithoutRebatesSplitPurchaseAmount
			else
			if (ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Percentage entered)
				if (LocalPercentOfTotal	>= ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Percentage)
					return (DerivedContract1WithoutRebatesSplitPurchaseAmount * (100% - ContractNegotiation.Contract1Rebate1Percent))
				else
					return DerivedContract1WithoutRebatesSplitPurchaseAmount
			else
				return DerivedContract1WithoutRebatesSplitPurchaseAmount
							

		DerivedContract2LowerTierQualifierAmountQuantity	is a ComputeField
			type is Decimal 13.4
			restricted
			(ContractNegotiation.Contract2LowerTierQualifierAmountPercent.Amount / ContractNegotiation.Contract2BaseCost)
			
		DerivedContract2HigherTierQualifierAmountQuantity is a ComputeField
			type is Decimal 13.4
			restricted
			(DerivedContract2LowerTierQualifierAmountQuantity + ((ContractNegotiation.Contract2HigherTierQualifierAmountPercent.Amount - ContractNegotiation.Contract2LowerTierQualifierAmountPercent.Amount) / ContractNegotiation.Contract2LowerTierUnitCost))
		
		DerivedContract2IntoHigherTierByAmountQualifierAmountWithoutRebate	is a DerivedField
			type is like InternationalAmount
			restricted
			return (ContractNegotiation.Contract2HigherTierQualifierAmountPercent.Amount + ((LocalPurchaseQuantity - DerivedContract2HigherTierQualifierAmountQuantity) * ContractNegotiation.Contract2HigherTierUnitCost))
			
		DerivedContract2IntoLowerTierByAmountQualifierAmountWithoutRebate	is a DerivedField
			type is like InternationalAmount
			restricted
			return (ContractNegotiation.Contract2LowerTierQualifierAmountPercent.Amount + ((LocalPurchaseQuantity - DerivedContract2LowerTierQualifierAmountQuantity) * ContractNegotiation.Contract2LowerTierUnitCost))
			
		DerivedContract2BaseCostAmountWithoutRebate is a DerivedField
			type is like InternationalAmount
			restricted
			return (LocalPurchaseQuantity * ContractNegotiation.Contract2BaseCost)
			
		DerivedContract2PurchaseQuantityAtHigherTierCostAmount is a DerivedField
			type is like InternationalAmount
			restricted
			return (LocalPurchaseQuantity * ContractNegotiation.Contract2HigherTierUnitCost)
			
		DerivedContract2PurchaseQuantityAtLowerTierCostAmount is a DerivedField
			type is like InternationalAmount
			restricted
			return (LocalPurchaseQuantity * ContractNegotiation.Contract2LowerTierUnitCost)
			
		DerivedContract2WithoutRebatesPurchaseAmount is a DerivedField
			type is like InternationalAmount
			restricted
			if (ContractNegotiation.Contract2HigherTierQualifierAmountPercent.Amount entered)
				if (LocalPurchaseQuantity	> DerivedContract2HigherTierQualifierAmountQuantity)
					return DerivedContract2IntoHigherTierByAmountQualifierAmountWithoutRebate
				else
				if (LocalPurchaseQuantity 	> DerivedContract2LowerTierQualifierAmountQuantity)
					return DerivedContract2IntoLowerTierByAmountQualifierAmountWithoutRebate
				else
					return DerivedContract2BaseCostAmountWithoutRebate
			else
			if (ContractNegotiation.Contract2HigherTierQualifierAmountPercent.Percentage entered)
				return DerivedContract2PurchaseQuantityAtHigherTierCostAmount
			else
			if (ContractNegotiation.Contract2LowerTierQualifierAmountPercent.Amount entered)
				if (LocalPurchaseQuantity 	> DerivedContract2LowerTierQualifierAmountQuantity)
					return DerivedContract2IntoLowerTierByAmountQualifierAmountWithoutRebate
				else
					return DerivedContract2BaseCostAmountWithoutRebate
			else
			if (ContractNegotiation.Contract2LowerTierQualifierAmountPercent.Percentage entered)
				return DerivedContract2PurchaseQuantityAtLowerTierCostAmount
			else
				return DerivedContract2BaseCostAmountWithoutRebate
				 				 		
		DerivedContract2WithRebatesAppliedPurchaseAmount is a DerivedField
			type is like InternationalAmount
			restricted
			if (ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Amount	entered)
				if (DerivedContract2WithoutRebatesPurchaseAmount >= ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Amount)
					return (DerivedContract2WithoutRebatesPurchaseAmount * (100% - (ContractNegotiation.Contract2Rebate2Percent + ContractNegotiation.Contract2Rebate1Percent)))
				else
				if (DerivedContract2WithoutRebatesPurchaseAmount >= ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount)
					return (DerivedContract2WithoutRebatesPurchaseAmount * (100% - ContractNegotiation.Contract2Rebate1Percent))
				else
					return DerivedContract2WithoutRebatesPurchaseAmount
			else
			if (ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Percentage entered)
				return (DerivedContract2WithoutRebatesPurchaseAmount * (100% - (ContractNegotiation.Contract2Rebate2Percent + ContractNegotiation.Contract2Rebate1Percent)))
			else
			if (ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount entered)
				if (DerivedContract2WithoutRebatesPurchaseAmount >= ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount)
					return (DerivedContract2WithoutRebatesPurchaseAmount * (100% - ContractNegotiation.Contract2Rebate1Percent))
				else
					return DerivedContract2WithoutRebatesPurchaseAmount
			else
			if (ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Percentage entered)
				return (DerivedContract2WithoutRebatesPurchaseAmount * (100% - ContractNegotiation.Contract2Rebate1Percent))
			else
				return DerivedContract2WithoutRebatesPurchaseAmount
							
		DerivedContract2WithoutRebatesSplitPurchaseAmount is a DerivedField
			type is like InternationalAmount
			restricted
			if (ContractNegotiation.Contract2HigherTierQualifierAmountPercent.Amount entered)
				if (LocalPurchaseQuantity	> DerivedContract2HigherTierQualifierAmountQuantity)
					return DerivedContract2IntoHigherTierByAmountQualifierAmountWithoutRebate
				else
				if (LocalPurchaseQuantity 	> DerivedContract2LowerTierQualifierAmountQuantity)
					return DerivedContract2IntoLowerTierByAmountQualifierAmountWithoutRebate
				else
					return DerivedContract2BaseCostAmountWithoutRebate
			else
			if (ContractNegotiation.Contract2HigherTierQualifierAmountPercent.Percentage entered)
				if (LocalPercentOfTotal	> ContractNegotiation.Contract2HigherTierQualifierAmountPercent.Percentage)
					return DerivedContract2PurchaseQuantityAtHigherTierCostAmount
				else
				if (LocalPercentOfTotal	> ContractNegotiation.Contract2LowerTierQualifierAmountPercent.Percentage)
					return DerivedContract2PurchaseQuantityAtLowerTierCostAmount
				else
					return DerivedContract2BaseCostAmountWithoutRebate
			else
			if (ContractNegotiation.Contract2LowerTierQualifierAmountPercent.Amount entered)
				if (LocalPurchaseQuantity 	> DerivedContract2LowerTierQualifierAmountQuantity)
					return DerivedContract2IntoLowerTierByAmountQualifierAmountWithoutRebate
				else
					return DerivedContract2BaseCostAmountWithoutRebate
			else
			if (ContractNegotiation.Contract2LowerTierQualifierAmountPercent.Percentage entered)
				if (LocalPercentOfTotal	> ContractNegotiation.Contract2LowerTierQualifierAmountPercent.Percentage)
					return DerivedContract2PurchaseQuantityAtLowerTierCostAmount
				else
					return DerivedContract2BaseCostAmountWithoutRebate
			else
				return DerivedContract2BaseCostAmountWithoutRebate
				 				 		
		DerivedContract2WithRebatesAppliedSplitPurchaseAmount is a DerivedField
			type is like InternationalAmount
			restricted
			if (ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Amount	entered)
				if (DerivedContract2WithoutRebatesSplitPurchaseAmount >= ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Amount)
					return (DerivedContract2WithoutRebatesSplitPurchaseAmount * (100% - (ContractNegotiation.Contract2Rebate2Percent + ContractNegotiation.Contract2Rebate1Percent)))
				else
				if (DerivedContract2WithoutRebatesSplitPurchaseAmount >= ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount)
					return (DerivedContract2WithoutRebatesSplitPurchaseAmount * (100% - ContractNegotiation.Contract2Rebate1Percent))
				else
					return DerivedContract2WithoutRebatesSplitPurchaseAmount
			else
			if (ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Percentage entered)
				if (LocalPercentOfTotal	>= ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Percentage)
					return (DerivedContract2WithoutRebatesSplitPurchaseAmount * (100% - (ContractNegotiation.Contract2Rebate2Percent + ContractNegotiation.Contract2Rebate1Percent)))
				else
				if (LocalPercentOfTotal	>= ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Percentage)
					return (DerivedContract2WithoutRebatesSplitPurchaseAmount * (100% - ContractNegotiation.Contract2Rebate1Percent))
				else
					return DerivedContract2WithoutRebatesSplitPurchaseAmount
			else
			if (ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount entered)
				if (DerivedContract2WithoutRebatesSplitPurchaseAmount >= ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount)
					return (DerivedContract2WithoutRebatesSplitPurchaseAmount * (100% - ContractNegotiation.Contract2Rebate1Percent))
				else
					return DerivedContract2WithoutRebatesSplitPurchaseAmount
			else
			if (ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Percentage entered)
				if (LocalPercentOfTotal	>= ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Percentage)
					return (DerivedContract2WithoutRebatesSplitPurchaseAmount * (100% - ContractNegotiation.Contract2Rebate1Percent))
				else
					return DerivedContract2WithoutRebatesSplitPurchaseAmount
			else
				return DerivedContract2WithoutRebatesSplitPurchaseAmount

		DerivedBeginDate is a StringField
			type is Date
			DateRange.Begin
			
		DerivedEndDate is a StringField
			type is Date
			DateRange.End
			
		DerivedOriginalUsage is a ConditionalField
			type is Text
			if (OriginalUsage)
				OriginalUsageMessage
			else
				blank
				
		OriginalUsageMessage is a MessageField
			restricted
			"***_OriginalUsage_***" 
			
	Conditions
		SplitExists
			restricted	
			when (SplitContract1QuantityPurchased	entered)
			
		Contract1Lower
			restricted
			when (Contract1NetAmount	<= Contract2NetAmount)
			
		Contract1Higher
			restricted
			when (Contract1NetAmount	> Contract2NetAmount)
			
		Contract2Lower
			restricted
			when (Contract2NetAmount	<= Contract1NetAmount)
			
		Contract2Higher
			restricted
			when (Contract2NetAmount	> Contract1NetAmount)
			
		Contract1NoRebate
			restricted
			when ((((ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Amount entered
			or      ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount entered)
			and   Contract1AmountWithoutRebate	< ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount)
			or    ((ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Percentage entered
			or      ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Percentage entered)
			and   DerivedContract1Percent	< ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Percentage))
			and    Contract1AmountWithoutRebate entered)
			  
		Contract1LowRebate
			restricted
			when (((ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Amount entered
			or      ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount entered)
			and    Contract1AmountWithoutRebate	>= ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Amount
			and   (Contract1AmountWithoutRebate	< ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Amount
			or     ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Amount not entered))
			or    ((ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Percentage entered
			or      ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Percentage entered)
			and    DerivedContract1Percent	>= ContractNegotiation.Contract1Rebate1QualifierAmountPercent.Percentage
			and   (DerivedContract1Percent	< ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Percentage
			or     ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Percentage not entered)))
			     
		Contract1HighRebate
			restricted
			when ((ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Amount entered
			and    Contract1AmountWithoutRebate	>= ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Amount)
			or    (ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Percentage entered
			and    DerivedContract1Percent	>= ContractNegotiation.Contract1Rebate2QualifierAmountPercent.Percentage))
			
		Contract2NoRebate
			restricted
			when ((((ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Amount entered
			or      ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount entered)
			and    Contract2AmountWithoutRebate	< ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount)
			or    ((ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Percentage entered
			or      ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Percentage entered)
			and    DerivedContract2Percent	< ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Percentage))
			and   Contract2AmountWithoutRebate entered)
			  
		Contract2LowRebate
			restricted
			when (((ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Amount entered
			or      ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount entered)
			and    Contract2AmountWithoutRebate	>= ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Amount
			and   (Contract2AmountWithoutRebate	< ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Amount
			or     ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Amount not entered))
			or    ((ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Percentage entered
			or      ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Percentage entered)
			and    DerivedContract2Percent	>= ContractNegotiation.Contract2Rebate1QualifierAmountPercent.Percentage
			and   (DerivedContract2Percent	< ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Percentage
			or     ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Percentage not entered)))
			     
		Contract2HighRebate
			restricted
			when ((ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Amount entered
			and    Contract2AmountWithoutRebate	>= ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Amount)
			or    (ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Percentage entered
			and    DerivedContract2Percent	>= ContractNegotiation.Contract2Rebate2QualifierAmountPercent.Percentage))
		
		Contract1HigherTierAchieved
			restricted
			when (DerivedContract1TierAchieved			= "HighTier"
			or    DerivedSplitContract1TierAchieved		= "HighTier")
						
		Contract2HigherTierAchieved
			restricted
			when (DerivedContract2TierAchieved			= "HighTier"
			or    DerivedSplitContract2TierAchieved		= "HighTier")
						
		Contract1LowerTierAchieved
			restricted
			when (DerivedContract1TierAchieved			= "LowTier"
			or    DerivedSplitContract1TierAchieved		= "LowTier")
						
		Contract2LowerTierAchieved
			restricted
			when (DerivedContract2TierAchieved			= "LowTier"
			or    DerivedSplitContract2TierAchieved		= "LowTier")
			
		Contract1HigherRebateThisQuantity
			restricted
			when (Contract1HighRebate
			and  (!PreviousQuantityRel exists
			or    !PreviousQuantityRel.Contract1HighRebate)) 
						
		Contract2HigherRebateThisQuantity
			restricted
			when (Contract2HighRebate
			and  (!PreviousQuantityRel exists
			or    !PreviousQuantityRel.Contract2HighRebate))
			
		Contract1LowerRebateThisQuantity
			restricted
			when (Contract1LowRebate
			and  (!PreviousQuantityRel exists
			or    !PreviousQuantityRel.Contract1LowRebate))
			 
		Contract2LowerRebateThisQuantity
			restricted
			when (Contract2LowRebate
			and  (!PreviousQuantityRel exists
			or    !PreviousQuantityRel.Contract2LowRebate))
						
		HasActualContracts
			restricted
			when (ContractNegotiation.Contract1	entered)
			
		HasNoActualContracts
			restricted
			when (ContractNegotiation.Contract1 not entered)
			
		SplitTotalLowest
			restricted
			when ((SplitTotalNetAmount <= SplitAllContract1NetAmount) and (SplitTotalNetAmount <= SplitAllContract2NetAmount))
			
		Contract1Lowest
			restricted
			when ((SplitAllContract1NetAmount <= SplitTotalNetAmount) and (SplitAllContract1NetAmount <= SplitAllContract2NetAmount))
			
		Contract2Lowest
			restricted
			when ((SplitAllContract2NetAmount <= SplitTotalNetAmount) and (SplitAllContract2NetAmount <= SplitAllContract1NetAmount))
			
	Relations
		PreviousQuantityRel
			one-to-many relation to ContractNegotiationDetail
			Field Mapping uses ByQuantityPurchased
				related.ItemGroup					= ItemGroup
				related.Item						= Item
				related.ContractNegotiation			= ContractNegotiation
			Instance Selection
				where (related.QuantityPurchased	< QuantityPurchased
				and   !related.SplitExists)			
				
		ItemmastUsagesRel
			one-to-many relation to ItemmastUsage
			Field Mapping uses ByManualEntry
				related.Item								= Item
				related.Company								= LocalCompany
				related.InventoryLocation					= LocalLocation
				related.RequestingLocation					= LocalReqLocation
				related.ItemmastUsageDateRange.Begin		= LocalDateRange.Begin
				related.ItemmastUsageDateRange.End			= LocalDateRange.End
				related.ItemmastUsage.UsageQuantityType		= LocalUsageQuantityType
				related.ItemmastUsage.AdjustmentPercent		= LocalAdjustmentPercent
				
		ContractNegotiationDetailsForContractNegotiationRel
			one-to-many relation to ContractNegotiationDetail
			Field Mapping uses symbolic key
				related.ItemGroup						= ItemGroup
				related.Item							= Item
				related.ContractNegotiation				= ContractNegotiation
				
	Sets
		ByQuantityPurchased
			duplicates
			Sort Order
				ItemGroup
				Item
				ContractNegotiation
				QuantityPurchased 	descending
				
	Field Rules
		NegotiationTimeStamp
			default to ContractNegotiation.NegotiationTimeStamp
	
	Actions

		Create is a Create Action
			restricted
					
		SplitQuantities is a Create Action
			Exit Rules
				invoke Update
				
		NewQuantity is a Create Action
			Exit Rules
				invoke Update
				
		NewUsage is an Instance Action
			Parameters
				PrmDateRange				is a DateRange
				PrmCompany					is Numeric 4
				PrmLocation					is AlphaUpper 5
				PrmRequestingLocation		is AlphaUpper 5
				PrmReceiptOrInvoiceUsage	is Numeric 1
					States
						CalculateUsageBasedOnReceipts	value is 1
						CalculateUsageBasedOnInvoices	value is 2
				PrmAdjustmentPercent		is Percent 3
				PrmAnnualize				is Boolean
			Parameter Rules
				PrmAnnualize			
					LocalDaysDifference		= (PrmDateRange.End	- PrmDateRange.Begin)
					constraint ((LocalDaysDifference	<= 31
					and          LocalDaysDifference	>= 28)
					or          (LocalDaysDifference	<= 62
					and          LocalDaysDifference    >= 59)
					or          (LocalDaysDifference    <= 92
					and          LocalDaysDifference    >= 89)
					or          (LocalDaysDifference    <= 123
					and          LocalDaysDifference    >= 120)
					or          (LocalDaysDifference    <= 184
					and          LocalDaysDifference    >= 181))
						"DifferenceOfDatesMustBe1,2,3,4Or6MonthsInOrderToAnnualizeUsage"
			Local Fields
				LocalDaysDifference						is Numeric 8
				
			Action Rules
				invoke Purge ContractNegotiation.ContractNegotiationsDetailsNoDateRangeRel
				LocalCompany							= PrmCompany
				LocalLocation							= PrmLocation
				LocalReqLocation						= PrmRequestingLocation
				LocalDateRange							= PrmDateRange
				LocalUsageQuantityType					= PrmReceiptOrInvoiceUsage
				LocalAdjustmentPercent					= PrmAdjustmentPercent
				LocalAnnualized							= PrmAnnualize
				if (!ItemmastUsagesRel exists)
					invoke CalculateItemUsage Item
						invoked.PrmDateRange				= PrmDateRange
						invoked.PrmCompany					= PrmCompany
						invoked.PrmLocation					= PrmLocation
						invoked.PrmRequestingLocation		= PrmRequestingLocation
						invoked.PrmReceiptOrInvoiceUsage	= PrmReceiptOrInvoiceUsage
						invoked.PrmUsageType				= LocalUsageType.Negotiation
						invoked.PrmAdjustmentPercent		= PrmAdjustmentPercent
						invoked.PrmAnnualize				= PrmAnnualize
				else
				if (ItemmastUsagesRel.UsageType.Forecasting)
					invoke Update ItemmastUsagesRel
						invoked.UsageType					= LocalUsageType.Both
						
				if (PrmReceiptOrInvoiceUsage.CalculateUsageBasedOnReceipts)
					constraint (ItemmastUsagesRel.UsageQuantity	entered)
						"NoReceiptUsageQuantityFoundForThisDateRange"
				else					
				if (PrmReceiptOrInvoiceUsage.CalculateUsageBasedOnInvoices)
					constraint (ItemmastUsagesRel.UsageQuantity	entered)
						"NoInvoiceUsageQuantityFoundForThisDateRange"
					
				invoke QuantityRange ContractNegotiation
					invoked.PurchaseQuantityRangeFromQuantity			= ItemmastUsagesRel.UsageQuantity
					initialize invoked.PurchaseQuantityRangeToQuantity
					invoked.PrmDateRange								= PrmDateRange
					invoked.PrmAdjustmentPercent						= PrmAdjustmentPercent
					invoked.PrmOriginalUsage							= true
			
				invoke Update ContractNegotiation
					invoked.DateRange			= PrmDateRange
					
		Update is an Update Action
			Action Rules
				if (SplitExists)
					LocalSplitTotalQuantity			= SplitContract1QuantityPurchased + SplitContract2QuantityPurchased
					LocalContract1Quantity			= SplitContract1QuantityPurchased
					LocalPurchaseQuantity			= SplitContract1QuantityPurchased
					LocalPercentOfTotal				= (LocalPurchaseQuantity / LocalSplitTotalQuantity)
					LocalSplitTotalNetAmount		+= DerivedContract1WithRebatesAppliedSplitPurchaseAmount
					LocalContract1NetAmount			= DerivedContract1WithRebatesAppliedSplitPurchaseAmount
					LocalContract1AmountNoRebate	= DerivedContract1WithoutRebatesSplitPurchaseAmount 
					LocalContract2Quantity			= SplitContract2QuantityPurchased
					LocalPurchaseQuantity			= SplitContract2QuantityPurchased
					LocalPercentOfTotal				= (LocalPurchaseQuantity / LocalSplitTotalQuantity)
					LocalSplitTotalNetAmount		+= DerivedContract2WithRebatesAppliedSplitPurchaseAmount
					LocalContract2NetAmount			= DerivedContract2WithRebatesAppliedSplitPurchaseAmount
					LocalContract2AmountNoRebate	= DerivedContract2WithoutRebatesSplitPurchaseAmount 
					LocalPurchaseQuantity			= LocalSplitTotalQuantity
					LocalPercentOfTotal				= (LocalPurchaseQuantity / LocalSplitTotalQuantity)
					LocalAllContract1NetAmount		= DerivedContract1WithRebatesAppliedSplitPurchaseAmount
					LocalAllContract2NetAmount		= DerivedContract2WithRebatesAppliedSplitPurchaseAmount
					QuantityPurchased				= LocalSplitTotalQuantity
					Contract1NetAmount				= LocalContract1NetAmount
					Contract1AmountWithoutRebate	= LocalContract1AmountNoRebate
					Contract2NetAmount				= LocalContract2NetAmount
					Contract2AmountWithoutRebate	= LocalContract2AmountNoRebate
					SplitTotalNetAmount				= LocalSplitTotalNetAmount
					SplitContract1QuantityPurchased	= LocalContract1Quantity	
					SplitContract2QuantityPurchased	= LocalContract2Quantity	
					SplitAllContract1NetAmount		= LocalAllContract1NetAmount
					SplitAllContract2NetAmount		= LocalAllContract2NetAmount
				else
					LocalPurchaseQuantity			= QuantityPurchased
					Contract1NetAmount				= DerivedContract1WithRebatesAppliedPurchaseAmount
					Contract1AmountWithoutRebate	= DerivedContract1WithoutRebatesPurchaseAmount
					Contract2NetAmount				= DerivedContract2WithRebatesAppliedPurchaseAmount
					Contract2AmountWithoutRebate	= DerivedContract2WithoutRebatesPurchaseAmount
					initialize DateRange
					initialize AdjustmentPercent
				
		Purge is a Purge Action

			
