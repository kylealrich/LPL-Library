UserDrillList is a BusinessClass
    owned by repository
    prefix is URDL
    framework type is LPLConfiguration



	Patterns
		disable EffectiveDated
		disable AsOfDateProcessing
		implements DynamicCreation
		implements ConfigurationMetadata
		implements AuditLogEntryActions

    Ontology
        symbolic key is UserDrillList

    Persistent Fields
    	Owner is like Actor
    	BusinessView
    	BusinessDrillList 	is LPLName
    		default label is "DrillList"
    	Status 				is a UserObjectStatus
    	LPL             	is LPL
    	Description			is a ConfigDescription
    	UserEditorType
    	Independent			is Boolean 

    	ErrorText			is Text

	Transient Fields
		TBusinessDrillList is a BusinessDrillList
			default label is "BusinessDrillList"
			derive value from DerivedBusinessDrillList 

    Derived Fields
    	DerivedBusinessDrillList is a DerivedField
    		type is LPLName
    		restricted
    		if (BusinessDrillListRel exists)
    			return BusinessDrillList

    		return blank

    	ContextKey is a DerivedField
    		type is LPLName
    		return BusinessView + ", " + BusinessDrillList

		ParseText is a NativeField
			type is Text

		BusinessClassViewMF is a MessageField
            "Business_Class"

		NewInitialLPL is a NativeField
		    type is Text
		    







	Local Fields
		LocParseText 	    is Text
		LocBasedOnDrillList is a BusinessDrillList
		LocBusinessView     is LPLName
		LocName             is LPLName
		
    Field Rules
		Owner
			default to actor
			
    	BusinessView
    		required

    	BusinessDrillList
    		required

		LPL
			required





			if (Status.Active)
				LocParseText = ParseText

				if (not LocParseText = blank)
					confirmation required
						"<LocParseText>:_User_Drill_ListIsInvalid.__DoYouWantToSaveAnyway?"

					Status = Status.Invalid
					ErrorText = LocParseText

		UserEditorType
			default to UserEditorType.LPL

		Status
			if (Status.Active)
				initialize ErrorText

    Conditions
    	IsForUserBusinessView
			default label is untranslatable
			when (BusinessView.IsUserClass)

		IsDrillDependent
			restricted
			when (BusinessDrillListRel exists
			and   not BusinessDrillListRel.Independent)

		IsDrillIndependent
			restricted
			when (not BusinessDrillListRel exists
			or    BusinessDrillListRel.Independent)

		HasErrorText
			default label is "ErrorTextEntered"
			when (ErrorText entered)

	Relations
    	DuplicateRel
    		one-to-many relation to UserDrillList 
			Field Mapping uses ByViewDrillList
				related.BusinessView 		= BusinessView
				related.BusinessDrillList 	= BusinessDrillList
			Instance Selection
				where (related.UserDrillList != UserDrillList)

		BusinessDrillListRel
			one-to-one relation to BusinessDrillList
			Field Mapping uses symbolic key
				related.BusinessView = BusinessView
				related.BusinessDrillList = BusinessDrillList

        ConfigEntityRel
            one-to-one relation to ConfigEntity
            Field Mapping uses symbolic key
            	related.ConfigEntity = UserDrillList






		LocalDuplicateRel
		    one-to-many relation to UserDrillList
			Field Mapping uses ByViewDrillList
			    related.BusinessView    	= LocBusinessView
				related.BusinessDrillList   = LocName

	Actions
    	Create is a Create Action
    		Action Rules
	    		if (TBusinessDrillList entered)
	    			if (BusinessDrillList entered)
	    				constraint (BusinessDrillList = TBusinessDrillList)
	    					"Only_Drill_ListOrAnExisting_Drill_ListCanBeEntered" 

	    			BusinessDrillList = TBusinessDrillList

				Independent = IsDrillIndependent

    		Exit Rules


			    if (Independent
    			and Status.Active)
					LocParseText = ParseText

				invoke FireEvent
    			
    	CreateFromSnapshot is a Create Action
			restricted
			bypass field rules

				
			Exit Rules





					
    	Update is an Update Action
    		Action Rules
    			if (TBusinessDrillList entered)
	    			if (BusinessDrillList entered)
	    				constraint (BusinessDrillList = TBusinessDrillList)
	    					"Only_Drill_ListOrAnExisting_Drill_ListCanBeEntered" 

	    			BusinessDrillList = TBusinessDrillList

				Independent = IsDrillIndependent

     		Exit Rules


			    if (Independent
    			and Status.Active)
					LocParseText = ParseText

				invoke FireEvent
    			
    	UpdateFromSnapshot is an Update Action
			restricted
			bypass field rules

				
			Exit Rules





			
    	Delete is a Delete Action
    		Exit Rules
    			invoke FireEvent
    			
    	DeleteFromSnapshot is a Delete Action
			restricted
			bypass relational integrity rules

			
		Purge is a Purge Action
			restricted
    		Exit Rules
    			invoke FireEvent

    	Activate is an Instance Action
    		valid when (not Status.Active)
    		Action Rules

    			LocParseText = ParseText

				if (not LocParseText = blank)
					constraint(LocParseText = blank)
						"<LocParseText>:_User_DrillListIsInvalid._Cannot_Activate."

				Status = Status.Active
				initialize ErrorText

			Exit Rules



				if (Independent)
					LocParseText = ParseText 

    			invoke FireEvent

    	Deactivate is an Instance Action
    		valid when (not Status.Inactive)
    		Action Rules
    			Status = Status.Inactive

			Exit Rules
    			invoke FireEvent

    	Invalidate is an Instance Action
    		valid when (not Status.Invalid)
    		restricted
    		Action Rules
    			Status = Status.Invalid

			Exit Rules
    			invoke FireEvent

		FireEvent is an Instance Action
			restricted


        CreateConfiguration is a Create Action
        	completion message is "ConfigurationCreated"
            Parameters
                BusinessView
                DrillList      is a BusinessDrillList

			Parameter Rules
				BusinessView
					required
				DrillList
					required

            Entrance Rules
                LocBusinessView = BusinessView
                LocName = DrillList
                constraint (!LocalDuplicateRel exists)
                    "ConfigurationExistsFor_'<LocName>'"

            Action Rules
                invoke Create this instance
                    invoked.BusinessView  		= BusinessView
                    invoked.BusinessDrillList   = DrillList
                    invoked.LPL           		= BusinessDrillListRel.BaseLPL

        CreateNewDrillList is a Create Action
            default label is "AddNewDrillList"
        	completion message is "NewDrillListCreated"
            Parameters
                BusinessView
                DrillListName is LPLName
                BasedOnDrillList is a BusinessDrillList

			Parameter Rules
				BusinessView
					required
				DrillListName
					required

			Entrance Rules
				constraint (BusinessView.Type.BusinessClass)
					"CanOnlyCreateNewDrillListsForBusinesClasses"

                LocBusinessView = BusinessView
                LocName = DrillListName
                
                constraint (!LocalDuplicateRel exists)
                    "DrillListNameInUse'<LocName>'"

            Action Rules
                invoke Create this instance
                    invoked.BusinessView 		= BusinessView
                    invoked.BusinessDrillList 	= DrillListName
                    invoked.Independent  		= true

                    if (BasedOnDrillList entered)
                        invoked.LocBasedOnDrillList = BasedOnDrillList

                    invoked.LPL = this instance.NewInitialLPL

		TagItem is an Instance Action
			Parameters
				ParamConfigurationTag is a ConfigurationTag
					default label is "Tag"
			
			Entrance Rules
				if (Status.Inactive)
					confirmation required
						"UserDrillListIsInactive,TagAnyway?"
							
				if (Status.Invalid)
					confirmation required
						"UserDrillListIsInvalid,TagAnyway?"
							
			Action Rules
				invoke Create ConfigurationTagItem
					invoked.ConfigurationTag = ParamConfigurationTag
					invoked.ConfigurationTagItem.Reference = reference to this instance		  

    Sets
    	ByViewDrillList
			sql name is URDBYVD
			indexed
			Sort Order
				BusinessView
				BusinessDrillList

    	ByDrillListView
    		sql name is URDBYDV
    		indexed
    		Sort Order
    			BusinessDrillList
				BusinessView
    		
		IndependentConfigDrillLists
			sql name is URIDTCD
			indexed
			Sort Order
				BusinessView
				BusinessDrillList
			Instance Selection
				where (Independent)
