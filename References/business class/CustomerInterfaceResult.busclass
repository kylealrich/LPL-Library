CustomerInterfaceResult is a BusinessClass
	owned by ar
	prefix is CsIRs

	Ontology
		symbolic key is CustomerInterfaceResult

	Patterns
		disable AuditIndex

		disable EffectiveDated

	Persistent Fields
		RunGroup				is AlphaUpper 30
		RunTime					is TimeStamp
		RunType					is Numeric 1
			States
				Conversion			value is 1
				Interface 			value is 2
				MassAdd				value is 3 
		Status					is Numeric 1
			disable Auditing
			States
				InProcess			value is 0
				Complete			value is 1
				Incomplete			value is 2
		ErrorRunGroup			is AlphaUpper 30
		RecordsProcessed		is Numeric 10
		Company					is a ReceivableCompany
		CustomerInterfaceCounts
		CustomerGroup  


	Local Fields
		LocalFinanceEnterpriseGroup is like FinanceEnterpriseGroup

		LocalActor					is Actor		

	Derived Fields

		NoRecordsToProcessMsg is a MessageField
			restricted
			"NoRecordsToProcess"

		InProcessMessage is a MessageField
			restricted
			"InProcess"

		CompleteMessage is a MessageField
			restricted
			"Complete"

		IncompleteMessage is a MessageField
			restricted
			"Incomplete"

		NoRecordsMessage is a MessageField
			restricted
			"AllErrorsProcessed"

		DerivedStatus is a DerivedField
			type is Alpha 50
			if (Status.InProcess)
				return InProcessMessage
			else
			if (Status.Complete)
				return CompleteMessage
			else
			if (Status.Incomplete
			and !HasPendingRecords)
				return NoRecordsMessage
			else
				return IncompleteMessage

		InterfacedCustomerCount is a ComputeField
			type is Numeric 7
			(instance count of CompanyCustomerRel)

		ErrorCount is a DerivedField
			type is Numeric 7
			if  (ErrorRunGroup entered)
				if (RunType.Conversion)
					return (instance count of ErrorRunGroupCustomerConversionRel)
				else
				if (RunType.Interface)
					return (instance count of ErrorRunGroupCustomerImportRel)
				else		
				if (RunType.MassAdd)
					return (instance count of ErrorRunGroupMassAddCustomerImportRel)
			else
				if (RunType.Conversion)
					return (instance count of RunGroupCustomerConversionRel)
				else
				if (RunType.Interface)
					return (instance count of RunGroupCustomerImportRel)
				else   
				if (RunType.MassAdd)
					return (instance count of RunGroupMassAddCustomerImportRel)


		CustomerErrorCount is a ComputeField
			type is Numeric 7
			(RecordsProcessed - InterfacedCustomerCount)

		MassAddCustomerErrorCount is a ComputeField  
			type is Numeric 7
			(RecordsProcessed - InterfacedCustomerCount)		

		TotalRecordsProcessed is a ComputeField
			type is Numeric 10
			(RecordsProcessed + CustomerInterfaceCounts.OECustomerCount)

		TotalConversionRecordsProcessed is a ComputeField
			type is Numeric 10
			(RecordsProcessed + CustomerInterfaceCounts.OECustomerCount + CustomerInterfaceCounts.EFTCustomerCount + CustomerInterfaceCounts.PeriodAmountCount + CustomerInterfaceCounts.BillToCount + CustomerInterfaceCounts.BankAccountCount + CustomerInterfaceCounts.ContactCount + CustomerInterfaceCounts.CommentCount)

		DerivedRunDate is a DerivedField			
			type is Date
			restricted
			return RunTime date

		DrivedMassAddCustomer is a ComputeField			
			type is Numeric 7
			(instance count of RunGroupMassAddCustomerImportRel)

	Transient Fields
		TransientDerivedStatus is Numeric size 1	
			default label is "Status"
			States	
				InProcess			value is 0	
				Complete			value is 1	
				Incomplete			value is 2	
			derive value from Status	

	Field Rules

	Conditions
		HasCustomersCreated
			restricted
			when (CompanyCustomerRel exists)

		ShowPendingRunGroupCustomerConversion
			when (RunType.Conversion
			and   RunGroupCustomerConversionRel exists)

		ShowPendingErrorRunGroupCustomerConversion
			when (RunType.Conversion
			and   ErrorRunGroupCustomerConversionRel exists)

		ShowPendingRunGroupCustomerImport
			when (RunType.Interface
			and   RunGroupCustomerImportRel exists)

		ShowPendingErrorRunGroupCustomerImport
			when (RunType.Interface
			and   ErrorRunGroupCustomerImportRel exists)

		HasPendingRecords
			when  ((RunType.Conversion
			and	(RunGroupCustomerConversionRel exists
			or	  ErrorRunGroupCustomerConversionRel exists))
			or	 (RunType.Interface
			and	(RunGroupCustomerImportRel exists
			or	  ErrorRunGroupCustomerImportRel exists))
			or	 (RunType.MassAdd	
			and (RunGroupMassAddCustomerImportRel exists  
			or	  ErrorRunGroupMassAddCustomerImportRel exists)))  

		IncompleteHasPendingRecords
			when (Status.Incomplete
			and   HasPendingRecords)

		NoRecordsToProcess
			when (Status entered
			and   RecordsProcessed not entered)

		RunTypeConversion
			when (RunType.Conversion)

		RunTypeInterface
			when (RunType.Interface)

		RunTypeMassAdd		
			when (RunType.MassAdd)

		AnyCustomerInterfaceResultInterfaceTypeRelExists
			restricted
			when (AnyCustomerInterfaceResultInterfaceTypeRel exists)

		AnyCustomerInterfaceResultConversionTypeRelExists
			restricted
			when (AnyCustomerInterfaceResultConversionTypeRel exists)

		AnyCustomerInterfaceResultMassAddTypeRelExists  
			restricted
			when (AnyCustomerInterfaceResultMassAddTypeRel exists)

		HasMassCustomersAddError    
			restricted
			when (RunType.MassAdd
			and   DrivedMassAddCustomer entered)

	Relations
		RunGroupCustomerConversionRel
			one-to-many relation to CompanyCustomerConversion
			Field Mapping uses ByRunGroup
				related.RunGroup 		= RunGroup

		ErrorRunGroupCustomerConversionRel
			one-to-many relation to CompanyCustomerConversion
			Field Mapping uses ByRunGroup
				related.RunGroup 		= ErrorRunGroup

		RunGroupCustomerImportRel
			one-to-many relation to CompanyCustomerImport
			Field Mapping uses ByRunGroup
				related.RunGroup 		= RunGroup

		ErrorRunGroupCustomerImportRel
			one-to-many relation to CompanyCustomerImport
			Field Mapping uses ByRunGroup
				related.RunGroup 		= ErrorRunGroup

		RunGroupMassAddCustomerImportRel  
			one-to-many relation to CustomerImport
			Field Mapping uses ByRunGroup
				related.RunGroup 		= RunGroup
				related.CustomerGroup   = CustomerGroup  
				
		ErrorRunGroupMassAddCustomerImportRel  
			one-to-many relation to CustomerImport
			Field Mapping uses ByRunGroup
				related.RunGroup 		= ErrorRunGroup

		CompanyCustomerRel
			one-to-many relation to CompanyCustomer
			Field Mapping uses symbolic key
			Instance Selection
				where (related.OriginatingInterfaceRun	= CustomerInterfaceResult
				and	!related.InterfaceInProcess)

		OriginatingInterfaceRunRel
			one-to-many relation to CompanyCustomer
			Field Mapping uses ByOriginatingInterfaceRun

		OtherRunRel
			one-to-many relation to CustomerInterfaceResult
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = LocalFinanceEnterpriseGroup
			Instance Selection
				where (related.UniqueID != UniqueID)

		AnyCustomerInterfaceResultInterfaceTypeRel
			one-to-many relation to ReceivablesInterfaceResult
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= actor.context.FinanceEnterpriseGroup
			Instance Selection
				where (related.InterfaceType)

		AnyCustomerInterfaceResultConversionTypeRel
			one-to-many relation to ReceivablesInterfaceResult
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= actor.context.FinanceEnterpriseGroup
			Instance Selection
				where (related.ConversionType)

		AnyCustomerInterfaceResultMassAddTypeRel  
			one-to-many relation to ReceivablesInterfaceResult
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= actor.context.FinanceEnterpriseGroup
			Instance Selection
				where (related.InterfaceType)

	Sets
		ByRunTime
			Sort Order
				RunTime descending
				CustomerInterfaceResult
				FinanceEnterpriseGroup

		ByRunGroup
			Sort Order
				RunGroup
				CustomerInterfaceResult
				FinanceEnterpriseGroup

	Actions

		Create is an Action
			restricted

		Update is an Action
			restricted

		Delete is an Action

		ResubmitCustomerInterface is an Instance Action
			valid when (IncompleteHasPendingRecords)
			Parameters
				ResubmitRunGroup					is a RunGroup
					default label is "RunGroup"
				ResubmitCompany						is a ReceivableCompany
					default label is "Company"
				ResubmitCustomerGroup				is a CustomerGroup  
					default label is "CustomerGroup"

			Parameter Rules
				ResubmitRunGroup
					initial value is RunGroup
				ResubmitCompany
					initial value is Company
				ResubmitCustomerGroup				
					initial value is CustomerGroup

			Action Rules
				if  (RunType.Conversion)
					invoke InterfaceCustomers CompanyCustomerConversion
						invoked.PrmRunGroup					= ResubmitRunGroup
						invoked.PrmCompany					= ResubmitCompany
				else
				if  (RunType.Interface)
					invoke InterfaceCustomers CompanyCustomerImport
						invoked.PrmRunGroup					= ResubmitRunGroup
						invoked.PrmCompany					= ResubmitCompany
				else
				if  (RunType.MassAdd)  
					invoke MassAddCustomers CustomerImport
						invoked.PrmRunGroup					= ResubmitRunGroup
						invoked.PrmCustomerGroup			= ResubmitCustomerGroup


		ResubmitMassAddCustomer is an Instance Action  
			valid when (IncompleteHasPendingRecords)
			Parameters
				ResubmitRunGroup					is a RunGroup
					default label is "RunGroup"
				ResubmitCustomerGroup  				is a CustomerGroup
					default label is "CustomerGroup"
			Parameter Rules
				ResubmitRunGroup
					initial value is RunGroup
				ResubmitCustomerGroup
					initial value is CustomerGroup
			Action Rules
				if  (RunType.MassAdd)
					invoke MassAddCustomers CustomerImport
						invoked.PrmRunGroup					= ResubmitRunGroup
						invoked.PrmCustomerGroup			= ResubmitCustomerGroup

		DeleteAllInterfaceResults is a Set Action			
			default label is "DeleteAllResults"
			confirmation required
				"DeletingCustomerInterfaceResultsWillPreventAccessToAnyListViewsAssociatedWithTheResultSet"

			Parameters
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmCutoffDate			  is Date
					default label is "CutoffDate"

			Parameter Rules
				PrmFinanceEnterpriseGroup
					default to actor.context.FinanceEnterpriseGroup
				PrmCutoffDate
					required

			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and	   DerivedRunDate <= PrmCutoffDate
				and	   RunType.Interface)

			Action Rules
				Empty Set Rules
					LocalActor = actor
					send notification
						to LocalActor
						description is "NoCustomerInterfaceResultRecordsFoundToDelete"
						priority is medium

				Set Rules
					Exit Rules
						LocalActor = actor
						send notification
							to LocalActor
							description is "CustomerInterfaceResultsHaveBeenDeletedThrough<PrmCutoffDate>"
							priority is medium

				Instance Rules
					invoke Delete

		DeleteAllConversionResults is a Set Action		
			default label is "DeleteAllResults"
			confirmation required
				"DeletingCustomerConversionResultsWillPreventAccessToAnyListViewsAssociatedWithTheResultSet"

			Parameters
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmCutoffDate			  is Date
					default label is "CutoffDate"

			Parameter Rules
				PrmFinanceEnterpriseGroup
					default to actor.context.FinanceEnterpriseGroup
				PrmCutoffDate
					required

			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and	   DerivedRunDate <= PrmCutoffDate
				and	   RunType.Conversion)

			Action Rules
				Empty Set Rules
					LocalActor = actor
					send notification
						to LocalActor
						description is "NoCustomerConversionResultRecordsFoundToDelete"
						priority is medium

				Set Rules
					Exit Rules
						LocalActor = actor
						send notification
							to LocalActor
							description is "CustomerConversionResultsHaveBeenDeletedThrough<PrmCutoffDate>"
							priority is medium

				Instance Rules
					invoke Delete

		DeleteAllMassAddCustomersResults is a Set Action		
			default label is "DeleteAllResults"
			confirmation required
				"DeletingMassAddCustomerResultsWillPreventAccessToAnyListViewsAssociatedWithTheResultSet"

			Parameters
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmCutoffDate			  is Date
					default label is "CutoffDate"

			Parameter Rules
				PrmFinanceEnterpriseGroup
					default to actor.context.FinanceEnterpriseGroup
				PrmCutoffDate
					required

			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and	   DerivedRunDate <= PrmCutoffDate
				and	   RunType.MassAdd)

			Action Rules
				Empty Set Rules
					LocalActor = actor
					send notification
						to LocalActor
						description is "NoMassAddCustomerResultRecordsFoundToDelete"
						priority is medium

				Set Rules
					Exit Rules
						LocalActor = actor
						send notification
							to LocalActor
							description is "MassAddCustomerResultsHaveBeenDeletedThrough<PrmCutoffDate>"
							priority is medium

				Instance Rules
					invoke Delete
