AllocationWeightGenerator is a BusinessClass
    owned by Allocations
    prefix is ALWG

    Ontology
    	symbolic key is AllocationWeightGenerator

    Persistent Fields
        Description
		SourceLedger						is a Ledger
        SourceAddress						is a FinanceAddress
        SourceSystemCode					is a GeneralLedgerSystemCode
        SourceAmountType                    

		UseAccountingEntity			        is Boolean
		UseAccountingUnit			        is Boolean
		UseAccount					        is Boolean
		UseProject					        is Boolean
		UseDimension1				        is Boolean
		UseDimension2				        is Boolean
		UseDimension3				        is Boolean
		UseDimension4				        is Boolean
		UseDimension5				        is Boolean
		UseDimension6				        is Boolean
		UseDimension7				        is Boolean
		UseDimension8				        is Boolean
		UseDimension9				        is Boolean
		UseDimension10				        is Boolean

        SourceYearToDate			        is Boolean
            default label is "YearToDate"
        SourceLifeToDate			        is Boolean
            default label is "LifeToDate"        

		TreatBlankAccountingUnitAsEmpty		is Boolean
		TreatBlankProjectAsEmpty			is Boolean
		TreatBlankDimension1AsEmpty			is Boolean
		TreatBlankDimension2AsEmpty			is Boolean
		TreatBlankDimension3AsEmpty			is Boolean
		TreatBlankDimension4AsEmpty			is Boolean
		TreatBlankDimension5AsEmpty			is Boolean
		TreatBlankDimension6AsEmpty			is Boolean
		TreatBlankDimension7AsEmpty			is Boolean
		TreatBlankDimension8AsEmpty			is Boolean
		TreatBlankDimension9AsEmpty			is Boolean
		TreatBlankDimension10AsEmpty		is Boolean
        Scenario

    Local Fields
		LocalDimensionEntered				is Boolean 
		LocalIsPosting						is Boolean
		LocalTreatBlankAsEmpty				is Boolean
		LocalRelationName					is Alpha 100
		LocalBusinessClassName				is Alpha 100
		LocalDimensionName					is Alpha 100
		LocalSourceAddress					is Alpha 100
		LocalSourceAddressRelation			is Alpha 100
        LocalAccountingEntityForMapping     is like AccountingEntity
        LocalAccountingEntity               is an AccountingEntity
        LocalAccountingUnit                 is an AccountingUnit
        LocalAccount                        is an GeneralLedgerChartAccount
        LocalProject                        is a Project
		LocalFinanceDimension1              is a FinanceDimension1
		LocalFinanceDimension2              is a FinanceDimension2
		LocalFinanceDimension3              is a FinanceDimension3
		LocalFinanceDimension4              is a FinanceDimension4
		LocalFinanceDimension5              is a FinanceDimension5
		LocalFinanceDimension6              is a FinanceDimension6
		LocalFinanceDimension7              is a FinanceDimension7
		LocalFinanceDimension8              is a FinanceDimension8
		LocalFinanceDimension9              is a FinanceDimension9
		LocalFinanceDimension10             is a FinanceDimension10
		LocalAllocationRun			        is an AllocationRun
		LocalAllocationPeriod		        is an GeneralLedgerCalendarPeriod
        LocalWeight                         is Decimal 31.4
        LocalScenario                       is like Scenario


    Derived Fields
 		DynamicSelectionForDimension is a DerivedField
			type is LPLText
			restricted
			
			if (LocalDimensionEntered entered)
				if (LocalIsPosting)
					DynamicSelectionForDimension += " and " + LocalRelationName+"." + LocalDimensionName + " = " + LocalSourceAddress + " "
				else
					DynamicSelectionForDimension += " and " + LocalRelationName+"." + LocalDimensionName + " = any " + LocalSourceAddressRelation + " "
            else
                if (LocalTreatBlankAsEmpty)
                    DynamicSelectionForDimension += " and " + LocalRelationName+"." + LocalDimensionName + " = blank "

                     

		GeneralLedgerTotalDynamicSelection is a DerivedField
			type is LPLText
			restricted
			is condition for "GeneralLedgerTotal"
            LocalRelationName = "GeneralLedgerTotalRel"
			GeneralLedgerTotalDynamicSelection = "(1 = 1 "
            
            if (SourceSystemCode entered)
                GeneralLedgerTotalDynamicSelection += " and " + LocalRelationName+".GeneralLedgerTotal.System = SourceSystemCode "

			LocalDimensionEntered			= SourceAddress.IsAccountingUnitEntered	
			LocalIsPosting					= SourceAddress.AccountingUnit.PostingAccountingUnit
			LocalTreatBlankAsEmpty			= TreatBlankAccountingUnitAsEmpty
			LocalDimensionName				= "GeneralLedgerTotal.AccountingUnit"
			LocalSourceAddress				= "SourceAddress.AccountingUnit"	
			LocalSourceAddressRelation		= "AccountingUnitShadowRel.AccountingUnit"
			
			GeneralLedgerTotalDynamicSelection += DynamicSelectionForDimension
				
			LocalDimensionEntered			= SourceAddress.IsGeneralLedgerChartAccountEntered
			LocalIsPosting					= SourceAddress.GeneralLedgerChartAccount.IsPosting
			LocalTreatBlankAsEmpty			= false
			LocalDimensionName				= "GeneralLedgerTotal.GeneralLedgerChartAccount"
			LocalSourceAddress				= "SourceAddress.GeneralLedgerChartAccount"	
			LocalSourceAddressRelation		= "AccountShadowRel.GeneralLedgerChartAccount"
			
			GeneralLedgerTotalDynamicSelection += DynamicSelectionForDimension

			LocalDimensionEntered			= SourceAddress.IsProjectEntered
			LocalIsPosting					= SourceAddress.Project.IsPostingProject
			LocalTreatBlankAsEmpty			= TreatBlankProjectAsEmpty
			LocalDimensionName				= "GeneralLedgerTotal.Project"
			LocalSourceAddress				= "SourceAddress.Project"	
			LocalSourceAddressRelation		= "ProjectShadowRel.Project"
			
			GeneralLedgerTotalDynamicSelection += DynamicSelectionForDimension
			
			LocalDimensionEntered			= SourceAddress.IsFinanceDimension1Entered
			LocalIsPosting					= SourceAddress.FinanceDimension1.PostingDimension
			LocalTreatBlankAsEmpty			= TreatBlankDimension1AsEmpty
			LocalDimensionName				= "FinanceDimension1"
			LocalSourceAddress				= "SourceAddress.FinanceDimension1"	
			LocalSourceAddressRelation		= "Dimension1ShadowRel.FinanceDimension1"
			
			GeneralLedgerTotalDynamicSelection += DynamicSelectionForDimension


			LocalDimensionEntered			= SourceAddress.IsFinanceDimension2Entered
			LocalIsPosting					= SourceAddress.FinanceDimension2.PostingDimension
			LocalTreatBlankAsEmpty			= TreatBlankDimension2AsEmpty
			LocalDimensionName				= "FinanceDimension2"
			LocalSourceAddress				= "SourceAddress.FinanceDimension2"	
			LocalSourceAddressRelation		= "Dimension2ShadowRel.FinanceDimension2"
			
			GeneralLedgerTotalDynamicSelection += DynamicSelectionForDimension
			
			LocalDimensionEntered			= SourceAddress.IsFinanceDimension3Entered
			LocalIsPosting					= SourceAddress.FinanceDimension3.PostingDimension
			LocalTreatBlankAsEmpty			= TreatBlankDimension3AsEmpty
			LocalDimensionName				= "FinanceDimension3"
			LocalSourceAddress				= "SourceAddress.FinanceDimension3"	
			LocalSourceAddressRelation		= "Dimension3ShadowRel.FinanceDimension3"
			
			GeneralLedgerTotalDynamicSelection += DynamicSelectionForDimension
			
			LocalDimensionEntered			= SourceAddress.IsFinanceDimension4Entered
			LocalIsPosting					= SourceAddress.FinanceDimension4.PostingDimension
			LocalTreatBlankAsEmpty			= TreatBlankDimension4AsEmpty
			LocalDimensionName				= "FinanceDimension4"
			LocalSourceAddress				= "SourceAddress.FinanceDimension4"	
			LocalSourceAddressRelation		= "Dimension4ShadowRel.FinanceDimension4"
			
			GeneralLedgerTotalDynamicSelection += DynamicSelectionForDimension

			LocalDimensionEntered			= SourceAddress.IsFinanceDimension5Entered
			LocalIsPosting					= SourceAddress.FinanceDimension5.PostingDimension
			LocalTreatBlankAsEmpty			= TreatBlankDimension5AsEmpty
			LocalDimensionName				= "FinanceDimension5"
			LocalSourceAddress				= "SourceAddress.FinanceDimension5"	
			LocalSourceAddressRelation		= "Dimension5ShadowRel.FinanceDimension5"
			
			GeneralLedgerTotalDynamicSelection += DynamicSelectionForDimension

			LocalDimensionEntered			= SourceAddress.IsFinanceDimension6Entered
			LocalIsPosting					= SourceAddress.FinanceDimension6.PostingDimension
			LocalTreatBlankAsEmpty			= TreatBlankDimension6AsEmpty
			LocalDimensionName				= "FinanceDimension6"
			LocalSourceAddress				= "SourceAddress.FinanceDimension6"	
			LocalSourceAddressRelation		= "Dimension6ShadowRel.FinanceDimension6"
			
			GeneralLedgerTotalDynamicSelection += DynamicSelectionForDimension

			LocalDimensionEntered			= SourceAddress.IsFinanceDimension7Entered
			LocalIsPosting					= SourceAddress.FinanceDimension7.PostingDimension
			LocalTreatBlankAsEmpty			= TreatBlankDimension7AsEmpty
			LocalDimensionName				= "FinanceDimension7"
			LocalSourceAddress				= "SourceAddress.FinanceDimension7"	
			LocalSourceAddressRelation		= "Dimension7ShadowRel.FinanceDimension7"
			
			GeneralLedgerTotalDynamicSelection += DynamicSelectionForDimension

			LocalDimensionEntered			= SourceAddress.IsFinanceDimension8Entered
			LocalIsPosting					= SourceAddress.FinanceDimension8.PostingDimension
			LocalTreatBlankAsEmpty			= TreatBlankDimension8AsEmpty
			LocalDimensionName				= "FinanceDimension8"
			LocalSourceAddress				= "SourceAddress.FinanceDimension8"	
			LocalSourceAddressRelation		= "Dimension8ShadowRel.FinanceDimension8"
			
			GeneralLedgerTotalDynamicSelection += DynamicSelectionForDimension

			LocalDimensionEntered			= SourceAddress.IsFinanceDimension9Entered
			LocalIsPosting					= SourceAddress.FinanceDimension9.PostingDimension
			LocalTreatBlankAsEmpty			= TreatBlankDimension9AsEmpty
			LocalDimensionName				= "FinanceDimension9"
			LocalSourceAddress				= "SourceAddress.FinanceDimension9"	
			LocalSourceAddressRelation		= "Dimension9ShadowRel.FinanceDimension9"
			
			GeneralLedgerTotalDynamicSelection += DynamicSelectionForDimension

			LocalDimensionEntered			= SourceAddress.IsFinanceDimension10Entered
			LocalIsPosting					= SourceAddress.FinanceDimension10.PostingDimension
			LocalTreatBlankAsEmpty			= TreatBlankDimension10AsEmpty
			LocalDimensionName				= "FinanceDimension10"
			LocalSourceAddress				= "SourceAddress.FinanceDimension10"	
			LocalSourceAddressRelation		= "Dimension10ShadowRel.FinanceDimension10"
			
			GeneralLedgerTotalDynamicSelection += DynamicSelectionForDimension

			GeneralLedgerTotalDynamicSelection += ")"
			return GeneralLedgerTotalDynamicSelection

        DerivedPeriodSelection  is a DerivedField
            type is LPLText
			restricted
            is condition for "GeneralLedgerCalendarPeriod"
            if (SourceYearToDate)
                return " SourceGeneralCalendarPeriodRel.GeneralLedgerCalendarPeriod <= LocalAllocationPeriod and SourceGeneralCalendarPeriodRel.Year = LocalAllocationPeriod.Year "
            else
            if (SourceLifeToDate)
                return " SourceGeneralCalendarPeriodRel.GeneralLedgerCalendarPeriod <= LocalAllocationPeriod "
            else
                return " SourceGeneralCalendarPeriodRel.GeneralLedgerCalendarPeriod = LocalAllocationPeriod "

		DerivedTreatBlankDimension1AsEmpty is a MessageField
			"TreatBlank<FinanceEnterpriseGroup.FinanceDimension1Label>AsEmpty"
		DerivedTreatBlankDimension2AsEmpty is a MessageField
			"TreatBlank<FinanceEnterpriseGroup.FinanceDimension2Label>AsEmpty"
		DerivedTreatBlankDimension3AsEmpty is a MessageField
			"TreatBlank<FinanceEnterpriseGroup.FinanceDimension3Label>AsEmpty"
		DerivedTreatBlankDimension4AsEmpty is a MessageField
			"TreatBlank<FinanceEnterpriseGroup.FinanceDimension4Label>AsEmpty"
		DerivedTreatBlankDimension5AsEmpty is a MessageField
			"TreatBlank<FinanceEnterpriseGroup.FinanceDimension5Label>AsEmpty"
		DerivedTreatBlankDimension6AsEmpty is a MessageField
			"TreatBlank<FinanceEnterpriseGroup.FinanceDimension6Label>AsEmpty"
		DerivedTreatBlankDimension7AsEmpty is a MessageField
			"TreatBlank<FinanceEnterpriseGroup.FinanceDimension7Label>AsEmpty"
		DerivedTreatBlankDimension8AsEmpty is a MessageField
			"TreatBlank<FinanceEnterpriseGroup.FinanceDimension8Label>AsEmpty"
		DerivedTreatBlankDimension9AsEmpty is a MessageField
			"TreatBlank<FinanceEnterpriseGroup.FinanceDimension9Label>AsEmpty"
		DerivedTreatBlankDimension10AsEmpty is a MessageField
			"TreatBlank<FinanceEnterpriseGroup.FinanceDimension10Label>AsEmpty"
		DerivedTreatBlankProjectAsEmpty is a MessageField
			"TreatBlank<FinanceEnterpriseGroup.ProjectLabel>AsEmpty"
		DerivedTreatBlankAccountingUnitAsEmpty is a MessageField
			"TreatBlank<FinanceEnterpriseGroup.AccountingUnitLabel>AsEmpty"

        DerivedAccountingEntityLabelForSummary is a DerivedField
            type is MessageField
            if (SourceAddress.AccountingEntity entered)
                return SourceAddress.AccountingEntity.DerivedRepresentativeTextString
            return blank

        DerivedAccountLabelForSummary is a DerivedField
            type is MessageField
            if (SourceAddress.GeneralLedgerChartAccount entered)
                return SourceAddress.GeneralLedgerChartAccount + " - " + SourceAddress.GeneralLedgerChartAccount.AccountDescription
            return blank

        DerivedAccountingUnitLabelForSummary is a DerivedField
            type is MessageField
            if (SourceAddress.AccountingUnit entered)
                return SourceAddress.AccountingUnit + " - " + SourceAddress.AccountingUnit.Description
            return blank

        DerivedProjectLabelForSummary is a DerivedField
            type is MessageField
            if (SourceAddress.Project entered)
                return SourceAddress.Project + " - " + SourceAddress.Project.Description
            return blank

        DerivedFinanceDimension1LabelForSummary is a DerivedField
            type is MessageField
            if (SourceAddress.FinanceDimension1 entered)
                return SourceAddress.FinanceDimension1 + " - " + SourceAddress.FinanceDimension1.Description
            return blank

        DerivedFinanceDimension2LabelForSummary is a DerivedField
            type is MessageField
            if (SourceAddress.FinanceDimension2 entered)
                return SourceAddress.FinanceDimension2 + " - " + SourceAddress.FinanceDimension2.Description
            return blank

        DerivedFinanceDimension3LabelForSummary is a DerivedField
            type is MessageField
            if (SourceAddress.FinanceDimension3 entered)
                return SourceAddress.FinanceDimension3 + " - " + SourceAddress.FinanceDimension3.Description
            return blank

        DerivedFinanceDimension4LabelForSummary is a DerivedField
            type is MessageField
            if (SourceAddress.FinanceDimension4 entered)
                return SourceAddress.FinanceDimension4 + " - " + SourceAddress.FinanceDimension4.Description
            return blank

        DerivedFinanceDimension5LabelForSummary is a DerivedField
            type is MessageField
            if (SourceAddress.FinanceDimension5 entered)
                return SourceAddress.FinanceDimension5 + " - " + SourceAddress.FinanceDimension5.Description
            return blank
            

        DerivedFinanceDimension6LabelForSummary is a DerivedField
            type is MessageField
            if (SourceAddress.FinanceDimension6 entered)
                return SourceAddress.FinanceDimension6 + " - " + SourceAddress.FinanceDimension6.Description
            return blank
        
        DerivedFinanceDimension7LabelForSummary is a DerivedField
            type is MessageField
            if (SourceAddress.FinanceDimension7 entered)
                return SourceAddress.FinanceDimension7 + " - " + SourceAddress.FinanceDimension7.Description
            return blank
        
        DerivedFinanceDimension8LabelForSummary is a DerivedField
            type is MessageField
            if (SourceAddress.FinanceDimension8 entered)
                return SourceAddress.FinanceDimension8 + " - " + SourceAddress.FinanceDimension8.Description
            return blank

        DerivedFinanceDimension9LabelForSummary is a DerivedField
            type is MessageField
            if (SourceAddress.FinanceDimension9 entered)
                return SourceAddress.FinanceDimension9 + " - " + SourceAddress.FinanceDimension9.Description
            return blank

        DerivedFinanceDimension10LabelForSummary is a DerivedField
            type is MessageField
            if (SourceAddress.FinanceDimension10 entered)
                return SourceAddress.FinanceDimension10 + " - " + SourceAddress.FinanceDimension10.Description
            return blank

        DimensionCode        is a StringField
            type is Alpha 105
            restricted
            LocalAccountingEntity.DerivedSequenceNumber
            LocalAccountingUnit.DerivedSequenceNumber
            LocalAccount.DerivedSequenceNumber
            LocalProject.DerivedSequenceNumber
            LocalFinanceDimension1.DerivedSequenceNumber
            LocalFinanceDimension2.DerivedSequenceNumber
            LocalFinanceDimension3.DerivedSequenceNumber
            LocalFinanceDimension4.DerivedSequenceNumber
            LocalFinanceDimension5.DerivedSequenceNumber
            LocalFinanceDimension6.DerivedSequenceNumber
            LocalFinanceDimension7.DerivedSequenceNumber
            LocalFinanceDimension8.DerivedSequenceNumber
            LocalFinanceDimension9.DerivedSequenceNumber
            LocalFinanceDimension10.DerivedSequenceNumber

    Relations
        AllocationRunJobRel
            one-to-one relation to AllocationRunJob
            Field Mapping uses ByWeightGenerator
                related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
                related.AllocationSourceSystem		= AllocationSourceSystem
                related.AllocationControl			= AllocationControl
                related.AllocationWeightGenerator   = AllocationWeightGenerator
                related.AllocationRun               = LocalAllocationRun
                related.JobType                     = AllocationRunJobType.WeightBuilder

		AccountingUnitShadowRel
			one-to-many relation to AccountingUnitShadow
			Field Mapping uses BySummaryAccountingUnit
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryEntity						= SourceAddress.AccountingEntity
				related.SummaryAccountingUnit				= SourceAddress.AccountingUnit
			Instance Selection
				where (related.AccountingUnitType.Posting and related.AccountingUnit.Active)

		ProjectShadowRel
			one-to-many relation to ProjectShadow
			Field Mapping uses BySummaryProject
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryProject						= SourceAddress.Project
			Instance Selection
				where (related.ProjectType.Posting and related.Project.Active)
								
		AccountShadowRel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses BySummaryAccount 
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryGeneralLedgerChartAccount	= SourceAddress.GeneralLedgerChartAccount
			Instance Selection
				where (related.ChartType.Posting and related.GeneralLedgerChartAccount.Active)
								
		Dimension1ShadowRel
			one-to-many relation to FinanceDimension1Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension1			= SourceAddress.FinanceDimension1
			Instance Selection
				where (related.DimensionType.Posting and related.FinanceDimension1.Active)
								
		Dimension2ShadowRel
			one-to-many relation to FinanceDimension2Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension2			= SourceAddress.FinanceDimension2
			Instance Selection
				where (related.DimensionType.Posting and related.FinanceDimension2.Active)
								
		Dimension3ShadowRel
			one-to-many relation to FinanceDimension3Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension3			= SourceAddress.FinanceDimension3
			Instance Selection
				where (related.DimensionType.Posting and related.FinanceDimension3.Active)
								
		Dimension4ShadowRel
			one-to-many relation to FinanceDimension4Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension4			= SourceAddress.FinanceDimension4
			Instance Selection
				where (related.DimensionType.Posting and related.FinanceDimension4.Active)
								
		Dimension5ShadowRel
			one-to-many relation to FinanceDimension5Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension5			= SourceAddress.FinanceDimension5
			Instance Selection
				where (related.DimensionType.Posting and related.FinanceDimension5.Active)
								
		Dimension6ShadowRel
			one-to-many relation to FinanceDimension6Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension6			= SourceAddress.FinanceDimension6
			Instance Selection
				where (related.DimensionType.Posting and related.FinanceDimension6.Active)
								
		Dimension7ShadowRel
			one-to-many relation to FinanceDimension7Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension7			= SourceAddress.FinanceDimension7
			Instance Selection
				where (related.DimensionType.Posting and related.FinanceDimension7.Active)
								
		Dimension8ShadowRel
			one-to-many relation to FinanceDimension8Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension8			= SourceAddress.FinanceDimension8
			Instance Selection
				where (related.DimensionType.Posting and related.FinanceDimension8.Active)
								
		Dimension9ShadowRel
			one-to-many relation to FinanceDimension9Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension9			= SourceAddress.FinanceDimension9
			Instance Selection
				where (related.DimensionType.Posting and related.FinanceDimension9.Active)
								
		Dimension10ShadowRel
			one-to-many relation to FinanceDimension10Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension10			= SourceAddress.FinanceDimension10
			Instance Selection
				where (related.DimensionType.Posting and related.FinanceDimension10.Active)

		PeriodShadowEndDatesRel
			one-to-many relation to GeneralLedgerPeriodShadow
			Field Mapping uses BySummaryPeriod
				related.FinanceEnterpriseGroup             = FinanceEnterpriseGroup
				related.GeneralLedgerCalendar       	   = AllocationControl.Calendar
				related.SummaryGeneralLedgerCalendarPeriod = any SourceGeneralCalendarPeriodRel.GeneralLedgerCalendarPeriod
			Instance Selection
				where (related.GeneralLedgerCalendarPeriod.PeriodType.EndDate)

		SourceGeneralCalendarPeriodRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNodeAndType
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.TopNode						= AllocationControl.Calendar.TopNode
				related.PeriodType					= AllocationControl.PeriodType
			Instance Selection
				where (DerivedPeriodSelection)   

    	GeneralLedgerTotalRel
    		one-to-many relation to GeneralLedgerTotal
    		Field Mapping uses ByLedger
    			related.FinanceEnterpriseGroup              = FinanceEnterpriseGroup 
    			related.Scenario				            = LocalScenario
    			related.GeneralLedgerTotal.Ledger           = SourceLedger
                related.AccountingEntity                    = LocalAccountingEntityForMapping
                related.GeneralLedgerTotal.EntityYearPeriod = any PeriodShadowEndDatesRel.GeneralLedgerCalendarPeriod            
    		Instance Selection
                where (GeneralLedgerTotalDynamicSelection)

        CurrentAllocationRunWeightDetailRel
            one-to-one relation to AllocationRunWeightDetail
            Field Mapping uses symbolic key
                related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.AllocationSourceSystem		= AllocationSourceSystem
				related.AllocationControl			= AllocationControl
				related.AllocationRun				= LocalAllocationRun
				related.AllocationRunWeightSet		= AllocationWeightGenerator
                related.AllocationRunWeightDetail   = DimensionCode

		GeneralLedgerChartAccountNodeRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup        
            Instance Selection
                where (related.IsTopNode)

        ProjectNodeRel
            one-to-many relation to Project
            Field Mapping uses symbolic key
                related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
            Instance Selection
                where (related.IsTopNode)

		FinanceDimension1NodeRel
			one-to-many relation to FinanceDimension1
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup        
            Instance Selection
                where (related.IsTopNode)

		FinanceDimension2NodeRel
			one-to-many relation to FinanceDimension2
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup        
            Instance Selection
                where (related.IsTopNode)

		FinanceDimension3NodeRel
			one-to-many relation to FinanceDimension3
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup        
            Instance Selection
                where (related.IsTopNode)

		FinanceDimension4NodeRel
			one-to-many relation to FinanceDimension4
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup        
            Instance Selection
                where (related.IsTopNode)

		FinanceDimension5NodeRel
			one-to-many relation to FinanceDimension5
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup        
            Instance Selection
                where (related.IsTopNode)

		FinanceDimension6NodeRel
			one-to-many relation to FinanceDimension6
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup        
            Instance Selection
                where (related.IsTopNode)

		FinanceDimension7NodeRel
			one-to-many relation to FinanceDimension7
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup        
            Instance Selection
                where (related.IsTopNode)

		FinanceDimension8NodeRel
			one-to-many relation to FinanceDimension8
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup        
            Instance Selection
                where (related.IsTopNode)

		FinanceDimension9NodeRel
			one-to-many relation to FinanceDimension9
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup        
            Instance Selection
                where (related.IsTopNode)

		FinanceDimension10NodeRel
			one-to-many relation to FinanceDimension10
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup        
            Instance Selection
                where (related.IsTopNode)                             

        AllocationRunWeightSetRel
            one-to-one relation to AllocationRunWeightSet
            Field Mapping uses symbolic key
                related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
                related.AllocationSourceSystem			= AllocationSourceSystem
                related.AllocationControl				= AllocationControl
                related.AllocationRun					= LocalAllocationRun
                related.AllocationRunWeightSet			= AllocationWeightGenerator

        AllAllocationRunWeightDetailRel
            one-to-many relation to AllocationRunWeightDetail
            Field Mapping uses symbolic key
                related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
                related.AllocationSourceSystem      = AllocationSourceSystem
                related.AllocationControl           = AllocationControl
                related.AllocationRun               = LocalAllocationRun
                related.AllocationRunWeightSet      = AllocationWeightGenerator

    Field Rules
        Scenario
            initial value is FinanceEnterpriseGroup.ActualsScenario
            default to FinanceEnterpriseGroup.ActualsScenario

        SourceLifeToDate
            if (SourceYearToDate)
				constraint (not SourceLifeToDate)
					"CannotSetBothYearToDateAndLifeToDate"                    

        SourceLedger
            initial value is FinanceEnterpriseGroup.CoreLedger
            default to FinanceEnterpriseGroup.CoreLedger

        TreatBlankAccountingUnitAsEmpty
            if (SourceAddress.AccountingUnit entered)
                initialize TreatBlankAccountingUnitAsEmpty

        TreatBlankProjectAsEmpty
            if (SourceAddress.Project entered)
                initialize TreatBlankProjectAsEmpty

        TreatBlankDimension1AsEmpty
            if (SourceAddress.FinanceDimension1 entered)
                initialize TreatBlankDimension1AsEmpty
        
        TreatBlankDimension2AsEmpty
            if (SourceAddress.FinanceDimension2 entered)
                initialize TreatBlankDimension2AsEmpty

        TreatBlankDimension3AsEmpty
            if (SourceAddress.FinanceDimension3 entered)
                initialize TreatBlankDimension3AsEmpty

        TreatBlankDimension4AsEmpty
            if (SourceAddress.FinanceDimension4 entered)
                initialize TreatBlankDimension4AsEmpty

        TreatBlankDimension5AsEmpty
            if (SourceAddress.FinanceDimension5 entered)
                initialize TreatBlankDimension5AsEmpty                
		
        TreatBlankDimension6AsEmpty
            if (SourceAddress.FinanceDimension6 entered)
                initialize TreatBlankDimension6AsEmpty

        TreatBlankDimension7AsEmpty
            if (SourceAddress.FinanceDimension7 entered)
                initialize TreatBlankDimension7AsEmpty

        TreatBlankDimension8AsEmpty
            if (SourceAddress.FinanceDimension8 entered)
                initialize TreatBlankDimension8AsEmpty

        TreatBlankDimension9AsEmpty
            if (SourceAddress.FinanceDimension9 entered)
                initialize TreatBlankDimension9AsEmpty

        TreatBlankDimension10AsEmpty
            if (SourceAddress.FinanceDimension10 entered)
                initialize TreatBlankDimension10AsEmpty

    Conditions
        AllocationLoggingEnabled
			restricted
			when (AllocationControl.AllocationLoggingEnabled)

        HasSelectedDimensionOverrides
            when (UseAccountingEntity 
            or    UseAccountingUnit
            or    UseAccount
            or    UseProject
            or    UseDimension1
            or    UseDimension2
            or    UseDimension3
            or    UseDimension4
            or    UseDimension5
            or    UseDimension6
            or    UseDimension7
            or    UseDimension8
            or    UseDimension9
            or    UseDimension10)

    Rule Blocks
        AccountingEntityRequiredValidation
            if (AllocationControl.Type.Actuals or Scenario.HasAccountingEntity)
                constraint (SourceAddress.AccountingEntity entered)
                    "<FinanceEnterpriseGroup.AccountingEntityLabel>IsRequired"    

        UseAsOverridesValidation

            constraint (HasSelectedDimensionOverrides)
                "DimensionOverrideIsRequired"

            if (UseAccountingEntity)
                constraint (SourceAddress.AccountingEntity entered)
                    "<FinanceEnterpriseGroup.AccountingEntityLabel>IsRequired"
            if (UseAccountingUnit)
                constraint (SourceAddress.AccountingUnit entered)
                    "<FinanceEnterpriseGroup.AccountingUnitLabel>IsRequired"
                constraint (UseAccountingEntity)
                    "<FinanceEnterpriseGroup.AccountingEntityLabel>OverrideIsRequired"
            if (UseAccount)
                constraint (SourceAddress.GeneralLedgerChartAccount entered)
                    "<FinanceEnterpriseGroup.AccountLabel>IsRequired"
            if (UseProject)
                constraint (SourceAddress.Project entered)
                    "<FinanceEnterpriseGroup.ProjectLabel>IsRequired"
            if (UseDimension1)
                constraint (SourceAddress.FinanceDimension1 entered)
                    "<FinanceEnterpriseGroup.FinanceDimension1Label>IsRequired"
            if (UseDimension2)
                constraint (SourceAddress.FinanceDimension2 entered)
                    "<FinanceEnterpriseGroup.FinanceDimension2Label>IsRequired"
            if (UseDimension3)
                constraint (SourceAddress.FinanceDimension3 entered)
                    "<FinanceEnterpriseGroup.FinanceDimension3Label>IsRequired"
            if (UseDimension4)
                constraint (SourceAddress.FinanceDimension4 entered)
                    "<FinanceEnterpriseGroup.FinanceDimension4Label>IsRequired"
            if (UseDimension5)
                constraint (SourceAddress.FinanceDimension5 entered)
                    "<FinanceEnterpriseGroup.FinanceDimension5Label>IsRequired"
            if (UseDimension6)
                constraint (SourceAddress.FinanceDimension6 entered)
                    "<FinanceEnterpriseGroup.FinanceDimension6Label>IsRequired"
            if (UseDimension7)
                constraint (SourceAddress.FinanceDimension7 entered)
                    "<FinanceEnterpriseGroup.FinanceDimension7Label>IsRequired"
            if (UseDimension8)
                constraint (SourceAddress.FinanceDimension8 entered)
                    "<FinanceEnterpriseGroup.FinanceDimension8Label>IsRequired"
            if (UseDimension9)
                constraint (SourceAddress.FinanceDimension9 entered)
                    "<FinanceEnterpriseGroup.FinanceDimension9Label>IsRequired"
            if (UseDimension10)
                constraint (SourceAddress.FinanceDimension10 entered)
                    "<FinanceEnterpriseGroup.FinanceDimension10Label>IsRequired"

        CreateAllocationRunWeightDetail
            invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
            invoked.AllocationSourceSystem			= AllocationSourceSystem
            invoked.AllocationControl				= AllocationControl
            invoked.AllocationRun					= LocalAllocationRun
            invoked.AllocationRunWeightSet			= AllocationWeightGenerator
            if (UseAccountingEntity)
                invoked.AccountingEntity            = each.AccountingEntity
            if (UseAccountingUnit)
                invoked.AccountingUnit              = each.GeneralLedgerTotal.AccountingUnit   
            if (UseAccount)
                invoked.GeneralLedgerChartAccount   = each.GeneralLedgerTotal.GeneralLedgerChartAccount
            if (UseProject)
                invoked.Project                     = each.GeneralLedgerTotal.Project            
            if (UseDimension1)
                invoked.FinanceDimension1           = each.FinanceDimension1
            if (UseDimension2)
                invoked.FinanceDimension2           = each.FinanceDimension2
            if (UseDimension3)
                invoked.FinanceDimension3           = each.FinanceDimension3
            if (UseDimension4)
                invoked.FinanceDimension4           = each.FinanceDimension4
            if (UseDimension5)
                invoked.FinanceDimension5           = each.FinanceDimension5
            if (UseDimension6)
                invoked.FinanceDimension6           = each.FinanceDimension6
            if (UseDimension7)
                invoked.FinanceDimension7           = each.FinanceDimension7
            if (UseDimension8)
                invoked.FinanceDimension8           = each.FinanceDimension8
            if (UseDimension9)
                invoked.FinanceDimension9           = each.FinanceDimension9
            if (UseDimension10)
                invoked.FinanceDimension10           = each.FinanceDimension10
        
        ProcessGLTotal
            if (SourceAddress.AccountingEntity.PostingEntity)
                initialize LoopCounter
                LocalAccountingEntityForMapping = SourceAddress.AccountingEntity
                for each GeneralLedgerTotalRel
                    include ProcessGeneralLedgerTotal                                                

            else
                for each SourceAddress.AccountingEntity.ShadowDescendantsRel
                    initialize LoopCounter
                    LocalAccountingEntityForMapping = each.AccountingEntity
                    for each GeneralLedgerTotalRel
                        include ProcessGeneralLedgerTotal

        CheckCommitTransaction
            LoopCounter += 1
            if (LoopCounter > 50)
                initialize LoopCounter
                commit transaction

        ProcessGeneralLedgerTotal
            include CheckCommitTransaction

            if (UseAccountingEntity)
                LocalAccountingEntity       = each.AccountingEntity
            if (UseAccountingUnit)
                LocalAccountingUnit         = each.GeneralLedgerTotal.AccountingUnit
            if (UseAccount)
                LocalAccount                = each.GeneralLedgerTotal.GeneralLedgerChartAccount
            if (UseProject)
                LocalProject                = each.GeneralLedgerTotal.Project
            if (UseDimension1)
                LocalFinanceDimension1      = each.FinanceDimension1
            if (UseDimension2)
                LocalFinanceDimension2      = each.FinanceDimension2
            if (UseDimension3)
                LocalFinanceDimension3      = each.FinanceDimension3
            if (UseDimension4)
                LocalFinanceDimension4      = each.FinanceDimension4
            if (UseDimension5)
                LocalFinanceDimension5      = each.FinanceDimension5
            if (UseDimension6)
                LocalFinanceDimension6      = each.FinanceDimension6
            if (UseDimension7)
                LocalFinanceDimension7      = each.FinanceDimension7
            if (UseDimension8)
                LocalFinanceDimension8      = each.FinanceDimension8
            if (UseDimension9)
                LocalFinanceDimension9      = each.FinanceDimension9
            if (UseDimension10)
                LocalFinanceDimension10     = each.FinanceDimension10
            initialize LocalWeight
            if (SourceAmountType.TransactionAmount)
                LocalWeight     = each.NetTransactionAmount
            else
            if (SourceAmountType.FunctionalAmount)
                LocalWeight     = each.NetFunctionalAmount
            else
            if (SourceAmountType.AlternateAmount)
                LocalWeight     = each.NetAlternateAmount
            else
            if (SourceAmountType.AlternateAmount2)
                LocalWeight     = each.NetAlternateAmount2
            else
            if (SourceAmountType.AlternateAmount3)
                LocalWeight     = each.NetAlternateAmount3
            else
            if (SourceAmountType.ProjectAmount)
                LocalWeight     = each.NetProjectAmount
            else
            if (SourceAmountType.ReportAmount1)
                LocalWeight     = each.NetReportAmount1                                                                                                                                                                        
            else
            if (SourceAmountType.ReportAmount2)
                LocalWeight     = each.NetReportAmount2
            else
            if (SourceAmountType.ReportAmount3)
                LocalWeight     = each.NetReportAmount3
            else
            if (SourceAmountType.ReportAmount4)
                LocalWeight     = each.NetReportAmount4
            else
            if (SourceAmountType.ReportAmount5)
                LocalWeight     = each.NetReportAmount5
            else
            if (SourceAmountType.UnitsAmount)
                LocalWeight     = each.NetUnitsAmount
            
            if (LocalWeight entered)
                if (CurrentAllocationRunWeightDetailRel exists)
                    increment CurrentAllocationRunWeightDetailRel.Weight by LocalWeight
                else
                    invoke Create AllocationRunWeightDetail
                        include CreateAllocationRunWeightDetail
                        invoked.Weight = LocalWeight
    
    Actions
        Create is a Create Action
            Entrance Rules
                include UseAsOverridesValidation
            Exit Rules


                include AccountingEntityRequiredValidation                

        Update is an Update Action
            Entrance Rules 
                include UseAsOverridesValidation
            Exit Rules
                include AccountingEntityRequiredValidation

        Delete is a Delete Action

        Process is an Instance Action
            restricted
            Parameters
                PrmAllocationPeriod					is a GeneralLedgerCalendarPeriod
                    default label is "AllocationPeriod"
				PrmAllocationRun					is an AllocationRun

			Local Fields
				LoopCounter							is Numeric 6

            Action Rules
				LocalAllocationPeriod	= PrmAllocationPeriod
				LocalAllocationRun		= PrmAllocationRun

                if (AllocationLoggingEnabled)
                    invoke Start AllocationRunJobRel

                initialize LoopCounter
                for each AllAllocationRunWeightDetailRel
                    invoke Delete each
                    include CheckCommitTransaction

                if (AllocationRunWeightSetRel exists)
                    invoke Delete AllocationRunWeightSetRel

				invoke Create AllocationRunWeightSet
					invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
					invoked.AllocationSourceSystem			= AllocationSourceSystem
					invoked.AllocationControl				= AllocationControl
					invoked.AllocationRun					= LocalAllocationRun
					invoked.AllocationRunWeightSet			= AllocationWeightGenerator

                if (Scenario.HasChild)
                    for each Scenario.DescendantsRel
                        LocalScenario = each.Scenario
                        include ProcessGLTotal
                else
                    LocalScenario = Scenario
                    include ProcessGLTotal
                
                if (AllocationLoggingEnabled)
                    invoke End AllocationRunJobRel

                                         

