CompanyCustomerConversion is a BusinessClass
	owned by ar
	prefix is ARU
	classic name is ARCCUST

	Ontology
		symbolic key is CompanyCustomerConversion
			classic set name is ARUSET1

	Patterns
		disable AuditIndex
		disable Auditing 
		disable EffectiveDated
		disable DataTranslations
		implements InlineUserFields
			size is 1000

	Persistent Fields
		RunGroup

		NewCustomer								is like Customer
		ActiveStatus							is AlphaUpper size 1
			States
				Active			value is "A"
				SetForDeletion	value is "D"
				Inactive		value is "I"
		SearchName
		ReceivableHoldCode
		Contact
		PhoneNumber							is a TelephoneNumber 
			holds pii
			classic name for PhoneNumber.InternationalPrefix is INT-PREFIX
			classic name for PhoneNumber.SubscriberNumber is PHONE-NMBR
			classic name for PhoneNumber.Extension is PHONE-EXT
		TelexNbr							is a TelexNumber 
			holds pii
		EDINumber
			classic name is EDI-NBR
		AlternateEDINumber					is an AltEdiNbr
			classic name is ALT-EDI-NBR
		AlternateEDIType					is an AltEdiType
			classic name is ALT-EDI-TYPE
		FaxNumber 
			holds pii
			classic name for FaxNumber.SubscriberNumber is FAX-NMBR
			classic name for FaxNumber.Extension is FAX-EXT
		StartDate
		CreditAnalyst
			classic name is CREDIT-ANLYST

		Currency
			classic name is CURRENCY-CD
		SalesRepresentative
			classic name is SALESMAN

		RiskIndicator						is a RiskCd
			classic name is RISK-CD
		ReceivableDefaultCode
			classic name is DEFAULT-CODE

		CustomerMajorClass
			classic name is MAJ-CLASS

		CustomerMinorClass
			classic name is MIN-CLASS

		OpenOrderAmount						is an InternationalAmount
			classic name is OPEN-ORDS
		OrderLimit							is an OrderLim
			classic name is ORDER-LIM
		CreditLimit							is a CreditLim
			classic name is CREDIT-LIM
		CreditLimitDate						is Date
			classic name is CREDIT-LIM-DAT
		CreditReviewDays					is a CreditRevdays
			classic name is CREDIT-REVDAYS
		LastPaymentAmount					is an InternationalAmount
			classic name is LAST-PMT-AMT
		LastPaymentDate						is Date
			classic name is LAST-PMT-DATE
		LastInvoiceDate						is Date
			classic name is LAST-INV-DATE
		LastInvoiceAmount					is an InternationalAmount
			classic name is LAST-INV-AMT
		LastStatementDate					is Date
			classic name is LAST-STA-DATE
		LastStatementBalance				is an InternationalAmount
			classic name is LAST-STA-BAL
		ReviewDate							is Date
		ReviewCode
		HighBals							is a HighBalX13InArccust
			classic name is HIGH-BAL
		PerRtmses							is a PerRtmsX13InArccust
			classic name is PER-RTMS
		PaidPrmpts							is a PaidPrmptX12InArccust
			classic name is PAID-PRMPT
		InvPaids							is an InvPaidX12InArccust
			classic name is INV-PAID
		CollectDayses						is a CollectDaysX11InArccust
			classic name is COLLECT-DAYS
		CurrentCashPaid						is an InternationalAmount
			classic name is CURR-CASH
		CurrentCashDays						is an InternationalAmount
			classic name is CURR-CSH-DAYS
		YearToDateCashPaid					is an InternationalAmount
			classic name is YTD-CASH
		YearToDateCashDays					is an InternationalAmount
			classic name is YTD-CSH-DAYS
		Year2CollectionDays					is a Year2Days
			classic name is YEAR-2-DAYS
		StaticAgingCurrentPeriodAmount		is an InternationalAmount
			classic name is STATIC-CUR
		Agings								is an AgingX5InArccust
			classic name is AGING
		AgeDisputesRule						is AlphaUpper size 1
			classic name is AGE-DISPUTES
			States
				AgedInCurrentColumn		value is "N"
				AgeByTransactionDate	value is "Y"
		DisputedTransFinanceCharged			is a DisputesFin
			classic name is DISPUTES-FIN
		AutomaticCashApplication			is Boolean
			classic name is AUTO-APP-FL
		AutomaticDunning					is Boolean
			classic name is AUTO-DUNN-FL
		ApplicationDiscountGraceDays		is a DiscGracePd
			classic name is DISC-GRACE-PD
		PercentOfBalanceToCreditLimit		is a CrVarPct
			classic name is CR-VAR-PCT
		DebitCreditMemoTermsCode			is a TermsCode
			classic name is MEMO-TERM

		PrintChargebacks					is Boolean
			classic name is CHRGBK-PRT-FL
		ReceivableProcessingMethod			is AlphaUpper size 1
			classic name is OPEN-BAL-FWD
			States
				None			value is blank
				BalanceForward	value is "B"
				OpenItem		value is "O"
		StatementRequired					is Boolean
			classic name is STATEMENT-REQ
		ReceivableStatementCycle			is a StmntCycle
			classic name is STMNT-CYCLE
		ReceivableLockBox
			classic name is LOCK-BOX

			default label is "Lockbox"	
		ZeroBalanceStatement				is Boolean
			classic name is ZERO-STMNT-FL
		CreditBalanceStatement				is Boolean
			classic name is CRED-STMNT-FL
		PastDueOnlyStatement				is Boolean
			classic name is PAST-STMNT-FL
		OverCreditLimitStatement			is Boolean
			classic name is OVER-STMNT-FL
		MaximumAutoAdjustAmount				is a MaxAutoAmtX3InArccust
			classic name is MAX-AUTO-AMT
		MaxAutoPcts							is a MaxAutoPctX3InArccust
			classic name is MAX-AUTO-PCT
		MaximumShortReasonCode				is a AutoReasCdX3InArccust	
			classic name is AUTO-REAS-CD
		DiscountAdjustmentReason			is an ApplicationAdjustmentReason
			classic name is DISC-REAS-CD

		BankTransactionCode
			classic name is BANK-INST-CODE

		BillOfExchangeProcessing			is a DraftFlag
			classic name is DRAFT-FLAG
		ReceivableGeneralLedgerCode
			classic name is AR-CODE
			default label is "ReceivableGlobalLedgerCode"

		TermsCode
			classic name is TERMS-CD

		DaysBeyondTermsCash					is an InternationalAmount
			classic name is TERMS-CASH
		DaysBeyondTermsCashDays				is an InternationalAmount
			classic name is TERMS-CSH-DAYS
		DaysBeyondTermsRatio				is a DbtRatioX11InArccust
			classic name is DBT-RATIO
		DaysBeyondTermsPriorYear			is a DbtPrYr
			classic name is DBT-PR-YR
		DaysBeyondTermsYearToDateCash		is an InternationalAmount
			classic name is DBT-YTD-CASH
		DaysBeyondTermsYearToDateDays		is an InternationalAmount
			classic name is DBT-YTD-DAYS
		LatePaymentAndFinanceCharges		is AlphaUpper size 1
			classic name is LATE-PAY-FL
			States
				None				value is blank
				Both				value is "B"
				FinanceCharges		value is "F"
				LatePaymentCharges	value is "L"
		FinanceChargeCalculationMethod		is a FinCalcType
			classic name is FIN-CALC-TYPE
		FinanceChargeCode
			classic name is FIN-CHRG-CD

		FinanceChargeDueDateGraceDays		is a FinGracDays
			classic name is FIN-GRAC-DAYS
		MinimumFinanceChargeAmount			is a FinMinChrg
			classic name is FIN-MIN-CHRG
		PrintFinanceChargeDocument			is a FinDocPrnt
			classic name is FIN-DOC-PRNT
		LastDunningLetterNumber				is a LastDunn
			classic name is LAST-DUNN
		LastDunningLetterDate				is Date
			classic name is LAST-DUN-DATE
		TaxExempt							is Boolean
			classic name is TAX-EXEMPT-CD
			default label is "PreventTaxCodeDefaulting"
		TaxCode

		Territory

		AgingCode

		RevalueCurrencyTransactions				is Boolean
			classic name is REVALUE-FL
		NumberOfDishonoredBillOfExchange		is a Dishonored
			sql name is NOfDishonoredBillOfExchange
			classic name is DISHONORED
		DishonoredBillOfExchangeTotal			is an InternationalAmount
			classic name is DISHONORED-AMT
		ReconciledDishonoredBillOfExchange		is a ReconcileWo
			sql name is RDishonoredBillOfExchange
			classic name is RECONCILE-CASH
		DishonoredRenegotiatedBillOfExchange	is a ReconcileWo
			sql name is DRenegotiatedBillOfExchange
			classic name is RECONCILE-RNEG
		WriteOffDishonoredBillOfExchange		is a ReconcileWo
			sql name is WOffDishonoredBillOfExchange
			classic name is RECONCILE-WO
		Name									is a VendorName 
			holds pii
		PostalAddress							is a PostalAddressV2	
			holds pii
			classic name for PostalAddress.DeliveryAddress.AddressLine1 is ADDR1
			classic name for PostalAddress.DeliveryAddress.AddressLine2 is ADDR2
			classic name for PostalAddress.DeliveryAddress.AddressLine3 is ADDR3
			classic name for PostalAddress.DeliveryAddress.AddressLine4 is ADDR4
			classic name for PostalAddress.Municipality is CITY
			classic name for PostalAddress.StateProvince is STATE
			classic name for PostalAddress.PostalCode is ZIP
			classic name for PostalAddress.County is COUNTY
			classic name for PostalAddress.Country is COUNTRY-CODE
			classic name for PostalAddress.Region is REGION
		CreditAgencyCode						is a DunnCd
			classic name is DUNN-CD
		CreditAgencyDate						is Date
			classic name is DUNN-DATE
		LastDunningLetterAmount					is an InternationalAmount
			classic name is LAST-DUN-AMT
		CreditAgencyNumber						is a DunnNumber
			classic name is DUNN-NUMBER
		CustomerOrderAddressOverride			is Boolean


		TaxID 
			holds pii
		GroupCustomerOrderLimt					is an OrderLim
			classic name is ORDER-LIM-GRP
		GroupCustomerCreditLimt					is a CreditLim
			classic name is CRED-LIM-GRP
		CustomerHoldCode						is a ReceivableHoldCode
		Title
		NationalAccountGroup					is like NationalAccountGroup




		NationalAccountInterfacedCustomer		is like InterfacedCustomer
			default label is "NationalAccountConversionCustomer"
		CompanyCustomerUserField1 
			classic name is CUST-USER1
		CompanyCustomerUserField2
			classic name is CUST-USER2
		CompanyCustomerUserField3				is an InternationalAmount
			classic name is CUST-USER3
		CompanyCustomerUserField4				is an InternationalAmount
			classic name is CUST-USER4
		CompanyCustomerUserField5
			classic name is CUST-USER5
		CompanyCustomerUserField6
			classic name is CUST-USER6
		CompanyCustomerUserField7
			classic name is CUST-USER7
		CompanyCustomerUserField8				is Date
			classic name is CUST-USER8
		CompanyCustomerUserField9
			classic name is CUST-USER9
		CompanyCustomerUserField10
			classic name is CUST-USER10
		ChargeMinimumFinanceCharge				is Boolean
			classic name is MINIMUM
		FinanceChargeCycle
			classic name is FIN-CYCLE

		DunningCycle
			classic name is DUN-CYCLE

		AutomaticApplicationMethod				is AlphaUpper size 1
			classic name is AUTO-METHOD
			States
				Algorithm		value is "A"
				BalanceForward	value is "B"
				LastStatement	value is "L"
				Remittance		value is "R"
				UserDefined		value is "U"
		ApplicationCode							is an AutomaticCashApplicationCode
		AutomaticTransactionRemoval				is Boolean
			classic name is AUTO-REMOVE
		DetailChargebackDate					is a CbDtlDate
			classic name is CB-DTL-DATE
		VATRegistrationCountry					is a Country
			classic name is VAT-REG-CTRY
		VATRegistrationNumber
			classic name is VAT-REG-NBR
		VATCustomerReportType
			classic name is VAT-CUST-TYPE
		LanguageCode							is an IsoLocale
		BankEntity								is like BankEntity  

		BankAccountNumber
			classic name is BANK-ACCT-NBR
		DunningLetterIndicator					is Boolean
			classic name is DUN-LTR-IND
		DunningProcessCode
			classic name is DUN-PROCESS-CD

		AssessDunningFee						is Boolean
			classic name is ASSESS-DUN-FEE
		CreditAgencyName
			classic name is CU-NAME
		CreditAgencyPostalAddress				is a PostalAddressV2	
			holds pii
			classic name for CreditAgencyPostalAddress.DeliveryAddress.AddressLine1 is CU-ADDR1
			classic name for CreditAgencyPostalAddress.DeliveryAddress.AddressLine2 is CU-ADDR2
			classic name for CreditAgencyPostalAddress.DeliveryAddress.AddressLine3 is CU-ADDR3
			classic name for CreditAgencyPostalAddress.DeliveryAddress.AddressLine4 is CU-ADDR4
			classic name for CreditAgencyPostalAddress.Municipality is CU-CITY
			classic name for CreditAgencyPostalAddress.StateProvince is CU-STATE
			classic name for CreditAgencyPostalAddress.PostalCode is CU-POSTAL-CODE
		ThirdPartyPayer							is Boolean
		Filler99								is AlphaUpper size 99
			classic name is FILLER99
		UserField01 
			classic name is USR-FLD-01
		UserField02
			classic name is USR-FLD-02
		UserField03
			classic name is USR-FLD-03
		UserField04
			classic name is USR-FLD-04
		UserField05
			classic name is USR-FLD-05
		EmailAddress	 						is an EmailAddressMulti 
			holds pii
			classic name is E-MAIL-ADDRESS
		URLAddress
			classic name is URL-ADDR
		CustomerChangeAudit						is Boolean
			classic name is CUST-AUDIT
		ApplyMixedSignedLineItemsAutomatically	is Boolean
			sql name is AMSignedLineItemsAutomatically
			classic name is APPLY-MIXED
		RIBKey
			classic name is RIBKEY
		BankAccountValidationType
			classic name is VBANK-IDENT
		BankAccountTransactionCode
			classic name is BANK-TRAN-CD
		MaximumOverageAmount					is an InternationalAmount
			classic name is PAY-AUTO-AMT
		MaximumOveragePercent
			classic name is PAY-AUTO-PCT
		MaximumOverageReasonCode				is an ApplicationAdjustmentReason
			classic name is PAY-REAS-CD

		MultipleDunningLetters					is Boolean
			classic name is MULT-DUN-LTR
		LegalName
		IBAN 									is Boolean
		BicID 									is AlphaUpper size 12
		MandateID								is AlphaUpper size 35
		MandateType								is AlphaUpper size 2
			States
				CORE		value is 01
				B2B			value is 02
				COR1		value is 03
		CarrierFlag 							is Boolean
		ErrorOccurred							is Boolean
		ErrorLevel								is Numeric 2
			States
				Customer			value is 1
				CompanyCustomer		value is 2
				NationalAccount		value is 3
				EFTBank				value is 4
				OrderEntryCustomer	value is 5
				CustomerPeriod		value is 6
				BillTo				value is 7
				BankAccount			value is 8
				BOEBank				value is 9
				Comment				value is 10
				Contact				value is 11
		ErrorMessage							is Alpha 150
		SystemAssignedCustomer					is a Customer
		AdministrativeFee						is an InternationalAmount
		TaxRegistrationType						is Numeric size 1
			States
				Registered				value is 1
				Unregistered			value is 2
				SpecialEconomicZone		value is 3
		ElectronicGovernmentID				
		MobileNumber							is a MobilePhone 
			holds pii
		TwitterID 
			holds pii
		SocialNetworkID2 
			holds pii
		SocialNetworkID3 
			holds pii
		SocialNetworkID4 
			holds pii
		SocialNetworkID5 
			holds pii
		ReceivableInvoiceFromAndReplyToEmail			is an EmailAddress
			holds pii
		EmailReceivableInvoice							is Boolean
		PrintReceivableInvoice							is Boolean
		ReceivablesStatementFromAndReplyToEmail			is an EmailAddress
			holds pii
		EmailReceivablesStatement						is Boolean
		PrintReceivablesStatement						is Boolean
		BasicDunningLetterFromAndReplyToEmail			is an EmailAddress
			holds pii
		EmailBasicDunningLetter							is Boolean
		PrintBasicDunningLetter							is Boolean
		AdvancedDunningLetterFromAndReplyToEmail		is an EmailAddress
			holds pii
		EmailAdvancedDunningLetter						is Boolean
		PrintAdvancedDunningLetter						is Boolean
		PaymentRequestNoticeFromAndReplyToEmail			is an EmailAddress
			holds pii
		EmailPaymentRequestNotice						is Boolean
		PrintPaymentRequestNotice						is Boolean
		PaymentReceiptFromAndReplyToEmail				is an EmailAddress 
			holds pii
		EmailPaymentReceipt								is Boolean
		PrintPaymentReceipt								is Boolean
		PrepaymentReceiptFromAndReplyToEmail			is an EmailAddress 
			sql name is PreReceiptFromAndReplyToEmail
			holds pii
		EmailPrepaymentReceipt							is Boolean
		PrintPrepaymentReceipt							is Boolean
		EFTNotificationPrintFromAndReplyToEmail			is an EmailAddress
			holds pii
		EmailEFTNotificationPrint						is Boolean
		SubleaseBillingInvoiceFromAndReplyToEmail		is an EmailAddress
			holds pii
		EmailSubleaseBillingInvoice						is Boolean
		PrintSubleaseBillingInvoice						is Boolean
		BillingInvoiceFromAndReplyToEmail				is an EmailAddress
			holds pii
		EmailBillingInvoice								is Boolean
		PrintBillingInvoice								is Boolean
		BillingInvoiceEmailContactsOnly					is Boolean
			protected
			restricted
		BillingInvoiceEmailOption						is Numeric size 1
			States
				CompanyCustomerAndContacts				value is 0
				ContactsOnly							value is 1
				BillToOnly								value is 2
				BillToAndContacts						value is 3
		ReceivablesStatementEmailContactsOnly			is Boolean
			default label is "ContactsOnly"
		BasicDunningLetterEmailContactsOnly				is Boolean
			default label is "ContactsOnly"
		AdvancedDunningLetterEmailContactsOnly			is Boolean
			default label is "ContactsOnly"
		PaymentRequestNoticeEmailContactsOnly			is Boolean
			default label is "ContactsOnly"
		EFTNotificationPrintEmailContactsOnly			is Boolean
			default label is "ContactsOnly"
		ReceivableInvoiceEmailContactsOnly				is Boolean
			default label is "ContactsOnly"
		SubleaseBillingInvoiceEmailContactsOnly			is Boolean
			default label is "ContactsOnly"
		PaymentReceiptEmailContactsOnly					is Boolean
			default label is "ContactsOnly"
		PrepaymentReceiptEmailContactsOnly				is Boolean
			sql name is PreReceiptEmailContactsOnly
			default label is "ContactsOnly"

	Transient Fields





















































	Local Fields
		InterfacedCustomer							is a Customer view

		LocalCustomerConversionResult				is a CustomerInterfaceResult view
		LocalEFTCompany								is like ReceivableCompany

		LastCustomerRun								is like CustomerInterfaceResult
		LastRun										is like CustomerInterfaceResult
		SaveLastCustomerNumber						is like Customer
		ValidateBankAccountNumber



	Derived Fields
		CompanyNotFoundMsg is a MessageField
			restricted
			"CompanyNotFound"

		ConversionCustomerAlreadyExistsMsg is a MessageField
			restricted
			"ConversionCustomerAlreadyExists"

		CompanyCustomerRecordAlreadyExistsMsg is a MessageField
			restricted
			"CompanyCustomerAlreadyExists"

		CustomerConvertedMsg is a MessageField
			restricted
			"ACustomerRecordAlreadyExistsForThisExternalCustomerNumber,AndWouldNeedToBeDeletedSeparately.Continue?"

		OECustomerCountForCCI is a DerivedField
			type is Numeric 10 
			return instance count of CompanyCustomerOrderEntryImport

		EFTCustomerCountForCCI is a DerivedField
			type is Numeric 10
			return instance count of CompanyCustomerEFTImportRel

		PeriodAmountCountForCCI is a DerivedField
			type is Numeric 10
			return instance count of CompanyCustomerPeriodImportRel

		BillToCountForCCI is a DerivedField
			type is Numeric 10
			return instance count of CustomerBillToImportRel

		BankAccountCountForCCI is a DerivedField
			type is Numeric 10
			return instance count of CompanyCustomerBankAccountImportRel

		ContactCountForCCI is a DerivedField
			type is Numeric 10
			return instance count of CompanyCustomerContactImportRel

		CommentCountForCCI is a DerivedField
			type is Numeric 10
			return instance count of ConversionCommentRel

		BillingInvoiceEmailOnlyCustomerContactWarningMsg is a MessageField
			"MustHaveExistingCustomerContactWithEnabled_Billing_InvoiceEmailOption."

		BasicDunningLetterEmailOnlyCustomerContactWarningMsg is a MessageField
			restricted
			"MustHaveExistingCustomerContactWithEnabled_Basic_Dunning_LetterEmailOption."
		
		AdvancedDunningLetterEmailOnlyCustomerContactWarningMsg is a MessageField
			restricted
			"MustHaveExistingCustomerContactWithEnabled_Advanced_Dunning_LetterEmailOption."

		ReceivablesStatementEmailOnlyCustomerContactWarningMsg is a MessageField
			restricted
			"MustHaveExistingCustomerContactWithEnabled_Receivables_StatementEmailOption."
		
		PaymentRequestNoticeEmailOnlyCustomerContactWarningMsg is a MessageField
			restricted
			"MustHaveExistingCustomerContactWithEnabled_Payment_Request_NoticeEmailOption."
		
		EFTNotificationPrintEmailOnlyCustomerContactWarningMsg is a MessageField
			restricted
			"MustHaveExistingCustomerContactWithEnabled_EFT_Notification_PrintEmailOption."

		ReceivableInvoiceEmailOnlyCustomerContactWarningMsg is a MessageField
			restricted
			"MustHaveExistingCustomerContactWithEnabled_Receivable_InvoiceEmailOption."

		PaymentReceiptEmailOnlyCustomerContactWarningMsg is a MessageField
			restricted
			"MustHaveExistingCustomerContactWithEnabled_Payment_ReceiptEmailOption."

		PrepaymentReceiptEmailOnlyCustomerContactWarningMsg is a MessageField
			restricted
			"MustHaveExistingCustomerContactWithEnabled_Prepayment_ReceiptEmailOption."

		SubleaseBillingInvoiceEmailOnlyCustomerContactWarningMsg is a MessageField
			restricted
			"MustHaveExistingCustomerContactWithEnabled_Sublease_Billing_InvoiceEmailOption."

	Relations

		ReceivableCompanyRel
			one-to-one relation to ReceivableCompany
			Field Mapping uses symbolic key
				related.Company						 = Company

		CustomerRel
			one-to-one relation to Customer
			Field Mapping uses symbolic key
				related.CustomerGroup				 = Company.CustomerGroupField.CustomerGroup
				related.Customer 					 = SystemAssignedCustomer

		CompanyCustomerRel
			one-to-one relation to CompanyCustomer
			Field Mapping uses symbolic key
				related.Company						 = Company
				related.Customer 					 = SystemAssignedCustomer

		CustomerMappingTableInterfaceRel
			one-to-one relation to CustomerMappingTableInterface
			Field Mapping uses ByInterfacedCustomer
				related.CustomerGroup				 = Company.CustomerGroupField.CustomerGroup
				related.InterfacedCustomer			 = CompanyCustomerConversion

		CustomerReferenceRel
			one-to-many relation to Customer
			Field Mapping uses ByCustomerReference
				related.CustomerReference			 = CompanyCustomerConversion
				related.CustomerGroup				 = Company.CustomerGroupField.CustomerGroup

		NatAcctCustomerMappingTableInterfaceRel
			one-to-one relation to CustomerMappingTableInterface
			Field Mapping uses ByInterfacedCustomer
				related.CustomerGroup				 = Company.CustomerGroupField.CustomerGroup
				related.InterfacedCustomer			 = NationalAccountInterfacedCustomer


		CompanyCustomerEFTImportRel
			classic name is ARIEFT
			one-to-one relation to CompanyCustomerEFTImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion

		CompanyCustomerPeriodImportRel
			one-to-many relation to CompanyCustomerPeriodImport
			delete cascades
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion

		CustomerBillToImportRel
			one-to-many relation to CustomerBillToImport
			delete cascades
			Field Mapping uses symbolic key
				related.CustomerGroup											 = Company.CustomerGroupField.CustomerGroup
			Instance Selection
				where (related.CustomerBillToImport.CompanyCustomerConversion	 = CompanyCustomerConversion)

		CompanyCustomerOrderEntryImportRel
			one-to-one relation to CompanyCustomerOrderEntryImport
			Field Mapping uses symbolic key
				related.Company  						 = Company
				related.CompanyCustomerOrderEntryImport	 = CompanyCustomerConversion

		CompanyCustomerBankAccountImportRel
			one-to-many relation to CompanyCustomerBankAccountImport
			delete cascades
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion

		CompanyCustomerContactImportRel
			one-to-many relation to CompanyCustomerContactImport
			delete cascades
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
		
		CompanyCustomerContactImportEmailBillingInvoiceRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
			Instance Selection
				where (related.EmailBillingInvoice)

		CompanyCustomerContactImportEmailBasicDunningLetterRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
			Instance Selection
				where (related.EmailBasicDunningLetter)

		CompanyCustomerContactImportEmailAdvancedDunningLetterRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
			Instance Selection
				where (related.EmailAdvancedDunningLetter)

		CompanyCustomerContactImportEmailReceivablesStatementRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
			Instance Selection
				where (related.EmailReceivablesStatement)

		CompanyCustomerContactImportEmailPaymentRequestNoticeRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
			Instance Selection
				where (related.EmailPaymentRequestNotice)

		CompanyCustomerContactImportEmailEFTNotificationPrintRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company  					 = Company
				related.CompanyCustomerConversion	 = CompanyCustomerConversion
			Instance Selection
				where (related.EmailEFTNotificationPrint)

		CompanyCustomerContactHasEmailReceivableInvoiceRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company						= Company
				related.CompanyCustomerConversion	= CompanyCustomerConversion
			Instance Selection
				where (related.EmailReceivableInvoice)

		CompanyCustomerContactHasEmailPaymentReceiptRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company						= Company
				related.CompanyCustomerConversion	= CompanyCustomerConversion
			Instance Selection
				where (related.EmailPaymentReceipt)

		CompanyCustomerContactHasEmailPrepaymentReceiptRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company						= Company
				related.CompanyCustomerConversion	= CompanyCustomerConversion
			Instance Selection
				where (related.EmailPrepaymentReceipt)

		CompanyCustomerContactHasEmailSubleaseBillingInvoiceRel
			one-to-many relation to CompanyCustomerContactImport
			Field Mapping uses symbolic key
				related.Company						= Company
				related.CompanyCustomerConversion	= CompanyCustomerConversion
			Instance Selection
				where (related.EmailSubleaseBillingInvoice)

		GeneralLedgerCompanyRel	
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company

		NationalAccountRel
			one-to-many relation to NationalAccount
			Field Mapping uses symbolic key
				related.CustomerGroup										 = SystemAssignedCustomer.CustomerGroup
				related.NationalAccount.NationalAccountGroup.NatCompany		 = NationalAccountGroup.NatCompany
				related.NationalAccount.NationalAccountGroup.NatCustomer	 = NationalAccountGroup.NatCustomer
				related.NationalAccount.InvoiceAccountGroup.Company			 = Company
				related.NationalAccount.InvoiceAccountGroup.Customer		 = SystemAssignedCustomer

		CustomerDraftBankRel
			one-to-one relation to CustomerDraftBank
			Field Mapping uses symbolic key
				related.CustomerGroup							 = Company.CustomerGroupField.CustomerGroup
				related.Company  								 = Company
				related.Customer 								 = SystemAssignedCustomer
				related.CustomerDraftBank.BOEEFTBank			 = BankEntity
				related.CustomerDraftBank.BOEEFTBankAccount		 = BankAccountNumber

		ReceivableElectronicFundsTransferNotifyRel
			one-to-one relation to ReceivableElectronicFundsTransferNotify
			Field Mapping uses symbolic key
				related.CustomerGroup							 = Company.CustomerGroupField.CustomerGroup
				related.Company  								 = LocalEFTCompany
				related.Customer 								 = SystemAssignedCustomer

		LastCustomerRunRel
			one-to-many relation to CompanyCustomer
			Field Mapping uses ByOriginatingInterfaceRun

		LastRunRel
			one-to-many relation to CustomerInterfaceResult
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		 = actor.context.FinanceEnterpriseGroup

		BillingCompanyRel
			one-to-one relation to BillingCompany
			Field Mapping uses symbolic key
				related.Company 					 = Company

		ReceivableLockBoxRel
			one-to-many relation to ReceivableLockBox
			Field Mapping uses ByCompanyProcessLevel
				related.Company			 = Company

		ConversionCommentRel
			one-to-many relation to ReceivableInvoiceCommentImport
			Field Mapping uses Set2
				related.Company			 			 = Company
				related.Customer					 = blank
				related.InterfacedCustomer			 = CompanyCustomerConversion
				related.Invoice						 = blank
				related.InvoiceType					 = blank
				related.PaymentSeq					 = blank

		MaxOverageReasonRel
			one-to-one relation to ReceivableReason
			Field Mapping uses symbolic key
				related.Company					 =	Company
				related.ReceivableReasonType	 =	"AD"
				related.ReceivableReason		 =	MaximumOverageReasonCode

		ReceivableReasonRel	
			classic name is ARREASON
			one-to-one relation to ReceivableReason
			valid when (IsAutoDeductReason)
			required
			Field Mapping uses symbolic key
				related.Company					 =	Company
				related.ReceivableReasonType	 =	"AD"
				related.ReceivableReason		 =	MaximumShortReasonCode.AutoReasCd


	Conditions
		InterfaceInProcess
			when (SystemAssignedCustomer entered)

		CustomerMappingTableInterfaceExists
			when (CustomerMappingTableInterfaceRel exists)

		HasBillingCompany
			restricted
			when (BillingCompanyRel exists)

		OrderEntryCustomerExists
			when (CompanyCustomerOrderEntryImportRel exists)

		AllowCreateOECustomer
			restricted
			when (HasBillingCompany
			and   !OrderEntryCustomerExists)

		EFTExists
			when (CompanyCustomerEFTImportRel exists)

		AllowCreateEFT
			restricted
			when (!EFTExists)

		CustomerAdded
			when  (CustomerRel exists)

		CompanyCustomerAdded
			when (CompanyCustomerRel exists)

		CustomerDraftBankAdded
			when  (CustomerDraftBankRel exists)

		IsAutoDeductReason	
			classic name is ARREASON
			restricted
			when (MaximumShortReasonCode.AutoReasCd entered)

		IsValidForActorContext	
			restricted	
			when (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)	

		ShowIDMEmailDistribution
			restricted
			when (Company.UseIDM
			or	  BillingCompanyRel.UseIDM)

		DisabledReceivablesStatementAutoEmail
			restricted
			when (EmailReceivablesStatement changed 
			and   not EmailReceivablesStatement)

		DisabledBasicDunningLetterAutoEmail
			restricted
			when (EmailBasicDunningLetter changed 
			and   not EmailBasicDunningLetter)

		DisabledAdvancedDunningLetterAutoEmail
			restricted
			when (EmailAdvancedDunningLetter changed 
			and   not EmailAdvancedDunningLetter)

		DisabledPaymentRequestNoticeAutoEmail
			restricted
			when (EmailPaymentRequestNotice changed 
			and   not EmailPaymentRequestNotice)

		DisabledBillingInvoiceAutoEmail
			restricted
			when (EmailBillingInvoice changed 
			and   not EmailBillingInvoice)

		DisabledEFTNotificationPrintAutoEmail
			restricted
			when (EmailEFTNotificationPrint changed 
			and   not EmailEFTNotificationPrint)

		DisabledReceivableInvoiceAutoEmail
			restricted
			when (EmailReceivableInvoice changed
			and   not EmailReceivableInvoice)

		DisabledSubleaseBillingInvoiceAutoEmail
			restricted
			when (EmailSubleaseBillingInvoice changed
			and   not EmailSubleaseBillingInvoice)

		DisabledPaymentReceiptAutoEmail
			restricted
			when (EmailPaymentReceipt changed 
			and   not EmailPaymentReceipt)
		
		DisabledPrepaymentReceiptAutoEmail
			restricted
			when (EmailPrepaymentReceipt changed 
			and   not EmailPrepaymentReceipt)	

		HasEmailBillingInvoiceContactOnly
			restricted
			when (CompanyCustomerContactImportEmailBillingInvoiceRel exists)

		HasEmailBasicDunningLetterContactOnly
			restricted
			when (CompanyCustomerContactImportEmailBasicDunningLetterRel exists)
		
		HasEmailAdvancedDunningLetterContactOnly
			restricted
			when (CompanyCustomerContactImportEmailAdvancedDunningLetterRel exists)

		HasEmailReceivablesStatementContactOnly
			restricted
			when (CompanyCustomerContactImportEmailReceivablesStatementRel exists)

		HasEmailPaymentRequestNoticeContactOnly
			restricted
			when (CompanyCustomerContactImportEmailPaymentRequestNoticeRel exists)

		HasEmailEFTNotificationPrintContactOnly
			restricted
			when (CompanyCustomerContactImportEmailEFTNotificationPrintRel exists)

		HasEmailReceivableInvoiceContactOnly
			restricted
			when (CompanyCustomerContactHasEmailReceivableInvoiceRel exists)

		HasEmailPaymentReceiptContactOnly
			restricted
			when (CompanyCustomerContactHasEmailPaymentReceiptRel exists)

		HasEmailPrepaymentReceiptContactOnly
			restricted
			when (CompanyCustomerContactHasEmailPrepaymentReceiptRel exists)

		HasEmailSubleaseBillingInvoiceContactOnly
			restricted
			when (CompanyCustomerContactHasEmailSubleaseBillingInvoiceRel exists)

	Field Rules
		RunGroup
			required

		Company
			required

		IBAN
			if (CompanyCustomerEFTImportRel.PaymentFormat.SEPA)
				force default to true

		BicID
			if (CompanyCustomerEFTImportRel.PaymentFormat.SEPA
			or BankAccountValidationType.IbanAndBIC)
				required

		Name
			required

		MaximumOverageReasonCode
			constraint (MaximumOverageReasonCode != "CURR")
				"CURRIsAReservedReasonCode"

		MaximumShortReasonCode	
			constraint (MaximumShortReasonCode != "CURR")
				"CURRIsAReservedReasonCode"
			constraint (ReceivableReasonRel exists)
				"ReasonCodeDoesNotExist"
			constraint (ReceivableReasonRel.ReceivableAdjustmentReasonType.OverShort
			or ReceivableReasonRel.ReceivableAdjustmentReasonType.Chargeback)
				"ReasonCodeWithAReceivableAdjustmentReasonTypeOfOverShortOrChargebackIsRequired"
			constraint (!ReceivableReasonRel.ChargebackType.Memo)
				"ChargebackTypeCannotBeMemo"


		ReceivableDefaultCode
			required

		ReceivableProcessingMethod
			if (ReceivableProcessingMethod.None)
				default to ReceivableDefaultCode.ReceivableProcessingMethod
			default to "O"
			
		AutomaticApplicationMethod
			constraint (AutomaticCashApplication)
				"AutomaticApplicationMethodCannotBeSelected;AutomaticCashApplicationHasNotBeenSelected"

		AutomaticCashApplication
			constraint (AutomaticApplicationMethod entered)
				"AutomaticCashApplicationCannotBeSelected;AutomaticApplicationMethodHasNotBeenDefined"

		ApplicationCode 
			if  (AutomaticApplicationMethod.UserDefined)
				required
					"ApplicationCodeRequiredIfCashApplicationMethodIsUserDefined"
			if  (ApplicationCode entered)
				constraint (AutomaticApplicationMethod.UserDefined)
					"CashApplicationMethodMustBeUserDefinedIfApplicationCodeIsEntered"
				
		EmailAddress
			if (EmailReceivablesStatement
			or  EmailBasicDunningLetter
			or  EmailAdvancedDunningLetter
			or  EmailPaymentRequestNotice
			or  EmailBillingInvoice
			or  EmailEFTNotificationPrint
			or  EmailReceivableInvoice
			or	EmailSubleaseBillingInvoice
			or  EmailPaymentReceipt
			or  EmailPrepaymentReceipt)
				required

		ReceivablesStatementFromAndReplyToEmail
			if (EmailReceivablesStatement)
				default to config.DefaultFromEmailAddress
			else
				initialize
				
		BasicDunningLetterFromAndReplyToEmail
			if (EmailBasicDunningLetter)
				default to config.DefaultFromEmailAddress
			else
				initialize
				
		AdvancedDunningLetterFromAndReplyToEmail
			if (EmailAdvancedDunningLetter)
				default to config.DefaultFromEmailAddress
			else
				initialize
				
		PaymentRequestNoticeFromAndReplyToEmail
			if (EmailPaymentRequestNotice)
				default to config.DefaultFromEmailAddress
			else
				initialize
				
		BillingInvoiceFromAndReplyToEmail
			if (EmailBillingInvoice)
				default to config.DefaultFromEmailAddress
			else
				initialize

		EFTNotificationPrintFromAndReplyToEmail
			if (EmailEFTNotificationPrint)
				default to config.DefaultFromEmailAddress
			else
				initialize
		
		ReceivableInvoiceFromAndReplyToEmail
			if (EmailReceivableInvoice)
				default to config.DefaultFromEmailAddress
			else
				initialize
				
		SubleaseBillingInvoiceFromAndReplyToEmail
			if (EmailSubleaseBillingInvoice)
				default to config.DefaultFromEmailAddress
			else
				initialize

		PaymentReceiptFromAndReplyToEmail
			if (EmailPaymentReceipt)
				default to config.DefaultFromEmailAddress
			else
				initialize

		PrepaymentReceiptFromAndReplyToEmail
			if (EmailPrepaymentReceipt)
				default to config.DefaultFromEmailAddress
			else
				initialize

	Sets
		ByRunGroup
			indexed
			Sort Order
				RunGroup
				Company
				CompanyCustomerConversion


	Form Invokes
		OrderEntry
			if (CompanyCustomerOrderEntryImportRel exists)
				invoke Update CompanyCustomerOrderEntryImportRel
			else
				invoke Create CompanyCustomerOrderEntryImportRel

		EFT
			if (CompanyCustomerEFTImportRel exists)
				invoke Update CompanyCustomerEFTImportRel
			else
				invoke Create CompanyCustomerEFTImportRel

	Rule Blocks

		VerifyBankAccount


			initialize ValidateBankAccountNumber
			ValidateBankAccountNumber.BankAccountValidationType = BankAccountValidationType
			ValidateBankAccountNumber.BankAccountNumber			= BankAccountNumber
			constraint (ValidateBankAccountNumber.IsValidBankAccount)
				"<ValidateBankAccountNumber.ErrorMessage>"

			if (BankAccountNumber entered or BankEntity entered)
				constraint (BankAccountNumber entered and BankEntity entered)
					"Bank_\and_\bank_\account_\required"

		CheckBillingInvoiceEmailContactsOnlyExists
			if (BillingInvoiceEmailOption.ContactsOnly)
				constraint(HasEmailBillingInvoiceContactOnly)
					"MustHaveExistingCustomerContactWithEnabled_Billing_InvoiceEmailOption."

	Create Rules
		include CheckBillingInvoiceEmailContactsOnlyExists

	Actions
		Create is a Create Action
			Entrance Rules
				include VerifyBankAccount
			Exit Rules


		Update is an Update Action
			Entrance Rules
				include VerifyBankAccount
				include CheckBillingInvoiceEmailContactsOnlyExists
			Exit Rules

				if (DisabledReceivablesStatementAutoEmail
				or  DisabledBasicDunningLetterAutoEmail
				or  DisabledAdvancedDunningLetterAutoEmail
				or  DisabledPaymentRequestNoticeAutoEmail
				or  DisabledBillingInvoiceAutoEmail
				or  DisabledEFTNotificationPrintAutoEmail
				or  DisabledReceivableInvoiceAutoEmail
				or  DisabledSubleaseBillingInvoiceAutoEmail
				or  DisabledPaymentReceiptAutoEmail
				or  DisabledPrepaymentReceiptAutoEmail)
					invoke DisableAutoEmailing

		Delete is a Delete Action
			Entrance Rules
				if  (SystemAssignedCustomer entered)
					confirmation required
						"<CustomerConvertedMsg>"

				invoke Delete ConversionCommentRel
				invoke Delete CompanyCustomerEFTImportRel
				invoke Delete CompanyCustomerOrderEntryImportRel
				invoke Delete CompanyCustomerPeriodImportRel
				invoke Delete CustomerBillToImportRel
				invoke Delete CompanyCustomerBankAccountImportRel

		FastDelete is a Delete Action
			restricted
			bypass relational integrity rules 

		DeleteAllTransactionsForRunGroup is a Set Action
			default label is "DeleteAllTransactionsForRunGroup"
			confirmation required
				"IfAnyCustomerRecordsAlreadyExistForAnyExternalCustomerNumbersInThisRunGroup,TheyWouldNeedToBeDeletedSeparately.Continue?"			

			Parameters
				PrmRunGroup				is AlphaUpper 30
					default label is "RunGroup"

			Instance Selection
				where (RunGroup	= PrmRunGroup
				and	GeneralLedgerCompanyRel.FinanceEnterpriseGroup	= actor.context.FinanceEnterpriseGroup)

			Action Rules
				Instance Rules
					invoke Delete ConversionCommentRel
					invoke Delete CompanyCustomerEFTImportRel
					invoke Delete CompanyCustomerOrderEntryImportRel
					invoke Delete CompanyCustomerPeriodImportRel
					invoke Delete CustomerBillToImportRel
					invoke Delete CompanyCustomerBankAccountImportRel
					invoke FastDelete

		InterfaceCustomers is a Set Action
			default label is "ConvertCustomers"
			run in background
			Parameters
				PrmRunGroup					is a RunGroup
					default label is "RunGroup"
				PrmCompany					is a ReceivableCompany
					default label is "Company"

			Parameter Rules
				PrmRunGroup
					required

			Local Fields
				LocalInstanceCount			is Numeric 10
				LocalResultView				is a CustomerInterfaceResult view
				LocalProcessingMethod		is AlphaUpper size 1
				LocalCustomerCount			is Numeric 12
				LocalOECustomerCount		is Numeric 12
				LocalEFTCustomerCount		is Numeric 12
				LocalPeriodAmountCount		is Numeric 12
				LocalBillToCountCount		is Numeric 12
				LocalBankAccountCount		is Numeric 12
				LocalContactCount			is Numeric 12
 				LocalCommentCountCount		is Numeric 12

			Instance Selection
				where (RunGroup		= PrmRunGroup
				and	Company.FinanceEnterpriseGroup	= actor.context.FinanceEnterpriseGroup
				and   (PrmCompany not entered
				or	 PrmCompany	= Company))

			Sort Order
				RunGroup
				Company
				CompanyCustomerConversion

			Action Rules
				Empty Set Rules
					LastRun 			= last LastRunRel.CustomerInterfaceResult
					LastCustomerRun 	= last LastCustomerRunRel.OriginatingInterfaceRun

					invoke Create CustomerInterfaceResult
						assign result to LocalResultView
						invoked.FinanceEnterpriseGroup		= actor.context.FinanceEnterpriseGroup


						invoked.RunTime						= current timestamp
						invoked.RunType						= 1
						invoked.RunGroup					= PrmRunGroup
						invoked.Company						= PrmCompany
						invoked.Status						= 1 

				RunGroup Set Rules
					Entrance Rules
						LastRun				= last LastRunRel.CustomerInterfaceResult
						LastCustomerRun		= last LastCustomerRunRel.OriginatingInterfaceRun

						invoke Create CustomerInterfaceResult
							assign result to LocalResultView
							invoked.FinanceEnterpriseGroup		= actor.context.FinanceEnterpriseGroup


							invoked.RunTime						= current timestamp
							invoked.RunType						= 1
							invoked.RunGroup					= PrmRunGroup
							invoked.Company						= PrmCompany

					Exit Rules
						invoke Update LocalResultView.CustomerInterfaceResult
							invoked.RecordsProcessed								= LocalInstanceCount
							invoked.CustomerInterfaceCounts.PassedHeaderCount		= LocalCustomerCount
							invoked.CustomerInterfaceCounts.OECustomerCount			= LocalOECustomerCount
							invoked.CustomerInterfaceCounts.EFTCustomerCount		= LocalEFTCustomerCount
							invoked.CustomerInterfaceCounts.PeriodAmountCount		= LocalPeriodAmountCount
							invoked.CustomerInterfaceCounts.BillToCount				= LocalBillToCountCount
							invoked.CustomerInterfaceCounts.BankAccountCount		= LocalBankAccountCount
							invoked.CustomerInterfaceCounts.ContactCount			= LocalContactCount
							invoked.CustomerInterfaceCounts.CommentCount			= LocalCommentCountCount

							if  (LocalResultView.Status != 2)
								invoked.Status					= 1

				Instance Rules

					LocalCustomerConversionResult	= LocalResultView.CustomerInterfaceResult
					LocalInstanceCount				+= 1
					LocalCustomerCount				+= 1
					LocalOECustomerCount			+= OECustomerCountForCCI
					LocalEFTCustomerCount			+= EFTCustomerCountForCCI
					LocalPeriodAmountCount			+= PeriodAmountCountForCCI
					LocalBillToCountCount			+= BillToCountForCCI
					LocalBankAccountCount			+= BankAccountCountForCCI
					LocalContactCount				+= ContactCountForCCI
					LocalCommentCountCount			+= CommentCountForCCI

					ErrorOccurred					= false
					ErrorMessage					= blank
					ErrorLevel						= blank

					if  (Company not entered
					or   !ReceivableCompanyRel exists)
						ErrorOccurred				= true
						ErrorMessage				= CompanyNotFoundMsg
						ErrorLevel					= 1

					if  (!ErrorOccurred)

						if  (SystemAssignedCustomer not entered
						and  CustomerMappingTableInterfaceRel exists)
							SystemAssignedCustomer 		= CustomerMappingTableInterfaceRel.Customer
							if  (CompanyCustomerRel exists)
								ErrorOccurred				= true
								ErrorMessage				= CompanyCustomerRecordAlreadyExistsMsg
								ErrorLevel					= 2

						if  (SystemAssignedCustomer not entered
						and  first CustomerReferenceRel.Customer entered)
							SystemAssignedCustomer = first CustomerReferenceRel.Customer
							if  (CompanyCustomerRel exists)
								ErrorOccurred				= true
								ErrorMessage				= CompanyCustomerRecordAlreadyExistsMsg
								ErrorLevel					= 2

						if  (SystemAssignedCustomer not entered)

							if  (NewCustomer not entered)
								SaveLastCustomerNumber = Company.CustomerGroupField.CustomerGroup.LastAutomaticCustomerNumber

							invoke Create Customer
								assign result to InterfacedCustomer
								resume on error
									ErrorOccurred				= true
									ErrorMessage				= error message
									ErrorLevel					= 1
								fill in fields from this instance
									except invoked.OrderLimit
									except invoked.CreditLimit
									except invoked.ReceivableHoldCode
								invoked.CustomerGroup			= Company.CustomerGroupField.CustomerGroup
								if (NewCustomer entered)
									invoked.Customer			= NewCustomer
								invoked.OriginatingInterfaceRun	= LocalResultView.CustomerInterfaceResult
								invoked.OrderLimit				= GroupCustomerOrderLimt
								invoked.CreditLimit				= GroupCustomerCreditLimt
								invoked.ReceivableHoldCode		= CustomerHoldCode
								invoked.ContactTitle			= Title
								invoked.CustomerReference		= CompanyCustomerConversion

							if  (!ErrorOccurred)
								SystemAssignedCustomer			= InterfacedCustomer.Customer
							else
							if  (SaveLastCustomerNumber entered)
								invoke FastUpdate Company.CustomerGroupField.CustomerGroup
									invoked.LastAutomaticCustomerNumber	= SaveLastCustomerNumber


						if (NewCustomer not entered
						and SystemAssignedCustomer entered)
							NewCustomer 						= SystemAssignedCustomer

					if  (!ErrorOccurred)
						if  (!CompanyCustomerRel exists)

							invoke Create CompanyCustomer

								resume on error
									ErrorOccurred				= true
									ErrorMessage				= error message
									ErrorLevel					= 2
								fill in fields from this instance
									except invoked.ActiveStatus
									except invoked.ReceivableStatementCycle
									except invoked.BillingInvoiceEmailOption
								fill in user fields from this instance

								LocalProcessingMethod = ReceivableProcessingMethod
								if (LocalProcessingMethod not entered
								and ReceivableDefaultCode entered)
									LocalProcessingMethod = ReceivableDefaultCode.ReceivableProcessingMethod
								if (LocalProcessingMethod not entered)
									LocalProcessingMethod = "O"
								invoked.Customer				= SystemAssignedCustomer
								invoked.OriginatingInterfaceRun	= LocalResultView.CustomerInterfaceResult
								invoked.InterfaceInProcess		= true
								invoked.ActiveStatus			= "I"  

								invoked.HigHBalance				= HighBals
								invoked.TaxExempt				= TaxExempt

								if	(CompanyCustomerOrderEntryImportRel exists)
									invoked.ByPassOECustomerCreate	= true
									
								if  (LocalProcessingMethod = "B")
									invoked.BalanceForwardStatementCycle = ReceivableStatementCycle
								else
								if  (LocalProcessingMethod = "O")
									invoked.OpenItemStatementCycle = ReceivableStatementCycle

					if  (!ErrorOccurred)
						if  (!NationalAccountRel exists
						and  (NationalAccountGroup.NatCompany entered
						or	NationalAccountGroup.NatCustomer entered
						or	NationalAccountInterfacedCustomer entered))


							invoke Create NationalAccount
								resume on error
									ErrorOccurred			= true
									ErrorMessage			= error message
									ErrorLevel				= 3
								invoked.CustomerGroup										= SystemAssignedCustomer.CustomerGroup
								invoked.NationalAccount.NationalAccountGroup.NatCompany		= NationalAccountGroup.NatCompany
								invoked.NationalAccount.InvoiceAccountGroup.Company			= Company
								invoked.NationalAccount.InvoiceAccountGroup.Customer		= SystemAssignedCustomer

								if  (NationalAccountGroup.NatCustomer entered)
									invoked.NationalAccount.NationalAccountGroup.NatCustomer	= NationalAccountGroup.NatCustomer
								else
								if  (NationalAccountInterfacedCustomer entered)
									invoked.NationalAccount.NationalAccountGroup.NatCustomer	= NatAcctCustomerMappingTableInterfaceRel.Customer

					if  (!ErrorOccurred)
						if  (CompanyCustomerEFTImportRel exists)



							if  (SystemAssignedCustomer.CustomerGroup.EFTProcessingLevel.CompanyLevelProcessing)
								LocalEFTCompany									= Company
							else
								initialize LocalEFTCompany

							if  (!ReceivableElectronicFundsTransferNotifyRel exists)
								invoke Create ReceivableElectronicFundsTransferNotify
									resume on error
										ErrorOccurred					= true
										ErrorMessage					= error message
										ErrorLevel						= 4
									fill in fields from CompanyCustomerEFTImportRel
									invoked.CustomerGroup							= SystemAssignedCustomer.CustomerGroup
									if  (SystemAssignedCustomer.CustomerGroup.EFTProcessingLevel.CompanyLevelProcessing)
										invoked.Company								= Company
									invoked.Customer								= SystemAssignedCustomer
									invoked.EFTPrenotification						= CompanyCustomerEFTImportRel.EFTCustomerPrenote
									invoked.EFTNotificationMethod					= CompanyCustomerEFTImportRel.EFTCustomerPrenoteMethod
									invoked.EFTAdjustmentNotificationMethod 		= CompanyCustomerEFTImportRel.EFTCustomerAdjustmentMethod
									invoked.User1Field								= CompanyCustomerEFTImportRel.User1Field
									invoked.User2Field								= CompanyCustomerEFTImportRel.User2Field
									invoked.PaymentFormat							= CompanyCustomerEFTImportRel.PaymentFormat



							if (!ErrorOccurred)
								if (CompanyCustomerEFTImportRel.BankAccountValidationType.IbanAndBIC
								and !CompanyCustomerEFTImportRel.BicID entered)
									ErrorOccurred 						= true
									ErrorMessage						= "Bic ID is required"
									ErrorLevel							= 4
								else
									invoke Create CustomerDraftBank
										resume on error
											ErrorOccurred					= true
											ErrorMessage					= error message
											ErrorLevel						= 4
										invoked.CustomerGroup							= SystemAssignedCustomer.CustomerGroup
										if  (SystemAssignedCustomer.CustomerGroup.EFTProcessingLevel.CompanyLevelProcessing)
											invoked.Company								= Company
										invoked.Customer								= SystemAssignedCustomer
										invoked.BankType								="E"
										invoked.CustomerDraftBank.BOEEFTBank			= CompanyCustomerEFTImportRel.BankEntity
										invoked.CustomerDraftBank.BOEEFTBankAccount		= CompanyCustomerEFTImportRel.BankAccountNumber
										invoked.BankDateRange.StartDate					= CompanyCustomerEFTImportRel.StartDate
										invoked.BankDateRange.EndDate					= CompanyCustomerEFTImportRel.EndDate
										invoked.PrenotificationDate						= CompanyCustomerEFTImportRel.PrenotificationDate
										invoked.PrenoteStatus							= CompanyCustomerEFTImportRel.PrenoteStatus
										invoked.EFTBankAccountType						= CompanyCustomerEFTImportRel.EFTBankAccountType
										invoked.BankAccountType							= CompanyCustomerEFTImportRel.BankAccountType
										invoked.BankAccountTransactionCode				= CompanyCustomerEFTImportRel.BankAccountTransactionCode
										invoked.MandateID								= CompanyCustomerEFTImportRel.MandateID
										invoked.MandateType								= CompanyCustomerEFTImportRel.MandateType
										invoked.BankAccountValidationType				= CompanyCustomerEFTImportRel.BankAccountValidationType
										if (CompanyCustomerEFTImportRel.EFTCustomerPrenote = "Y")
											invoked.PrenotificationRequired 			= true
										else
											invoked.PrenotificationRequired 			= false


							if (!ErrorOccurred)
								invoke FastDelete CompanyCustomerEFTImportRel


					if  (!ErrorOccurred)
						if  (CompanyCustomerOrderEntryImportRel exists)

							invoke Create OrderEntryCustomer
								resume on error
									ErrorOccurred			= true
									ErrorMessage			= error message
									ErrorLevel				= 5
								fill in fields from CompanyCustomerOrderEntryImportRel
									except invoked.Customer
								invoked.Company				= Company
								invoked.Customer			= SystemAssignedCustomer

							if (!ErrorOccurred)
								invoke FastDelete CompanyCustomerOrderEntryImportRel

					if  (!ErrorOccurred)
						for each CompanyCustomerPeriodImportRel

							invoke Create CompanyCustomerPeriodTotals
								resume on error
									ErrorOccurred			= true
									ErrorMessage			= error message
									ErrorLevel				= 6
								fill in fields from each
								invoked.CompanyCustomerPeriodTotals.Customer = SystemAssignedCustomer
								invoked.CompanyCustomerPeriodTotals.Year	 = each.CompanyCustomerPeriodImport

							if  (ErrorOccurred)
								end for each
							else
								invoke FastDelete each

					if  (!ErrorOccurred)
						for each CustomerBillToImportRel

							invoke Create CustomerBillTo
								resume on error
									ErrorOccurred			= true
									ErrorMessage			= error message
									ErrorLevel				= 7
								fill in fields from each
								invoked.Customer			= SystemAssignedCustomer
								invoked.CustomerBillTo		= each.CustomerBillToImport.BillTo

							if  (ErrorOccurred)
								end for each
							else
								invoke FastDelete each

					if  (!ErrorOccurred)
						for each CompanyCustomerBankAccountImportRel

							invoke Create CompanyCustomerBankAccount
								resume on error
									ErrorOccurred			= true
									ErrorMessage			= error message
									ErrorLevel				= 8
								fill in fields from each
								invoked.Customer												= SystemAssignedCustomer
								invoked.CompanyCustomerBankAccount.CustomerBankEntity			= each.CompanyCustomerBankAccountImport.BankEntity
								invoked.CompanyCustomerBankAccount.CustomerBankAccountNumber 	= each.CompanyCustomerBankAccountImport.BankAccountNumber

							if  (ErrorOccurred)
								end for each
							else
								invoke FastDelete each

					if  (!ErrorOccurred)
						if  (BankEntity entered
						or   BankAccountNumber entered)
							if (!BankAccountNumber entered or !BankEntity entered)
								ErrorOccurred 				= true
								ErrorMessage				= "Bank and bank account required"
								ErrorLevel					= 9

					if (!ErrorOccurred)
						if (BankAccountValidationType.IbanAndBIC
						and !BicID entered)
							ErrorOccurred			= true
							ErrorMessage 			= "Bic ID is required"
							ErrorLevel				= 9

					if  (!ErrorOccurred)
						if  ((BankEntity entered
						or	BankAccountNumber entered)
						and   !CustomerDraftBankRel exists)
							invoke Create CustomerDraftBank
								resume on error
									ErrorOccurred			= true
									ErrorMessage			= error message
									ErrorLevel				= 9
								invoked.CustomerGroup			  				= Company.CustomerGroupField.CustomerGroup
								invoked.Company  								= Company
								invoked.Customer 								= SystemAssignedCustomer
								invoked.CustomerDraftBank.BOEEFTBank			= BankEntity
								invoked.CustomerDraftBank.BOEEFTBankAccount		= BankAccountNumber
								invoked.BankAccountValidationType				= BankAccountValidationType

								invoked.BankDateRange.StartDate					= StartDate
								invoked.RIBKey									= RIBKey
								invoked.IBAN									= IBAN
								invoked.BicID									= BicID
								invoked.MandateID								= MandateID
								invoked.MandateType								= MandateType

					if  (!ErrorOccurred)
						for each ConversionCommentRel

							invoke Create CompanyCustomerComment
								resume on error
									ErrorOccurred			= true
									ErrorMessage			= error message
									ErrorLevel				= 10
								fill in fields from each
								invoked.Customer							= SystemAssignedCustomer

								if (each.PrintCode = "R")
									invoked.CommentType						= "O"
								else
									invoked.CommentType						= "C"

								if (each.PrintCode not entered)
									invoked.PrintCode						= "D"

							if (ErrorOccurred)
								end for each
							else
								invoke FastDelete each

					if  (!ErrorOccurred)
						for each CompanyCustomerContactImportRel
							invoke Create CompanyCustomerContact
								resume on error
									ErrorOccurred			= true
									ErrorMessage			= error message
									ErrorLevel				= 11
								fill in fields from each

								invoked.Company					= Company
								invoked.Customer				= SystemAssignedCustomer
								invoked.CompanyCustomerContact 	= each.CompanyCustomerContactImport

							if  (ErrorOccurred)
								end for each
							else
								invoke FastDelete each

					if  (ErrorOccurred)
						invoke Update LocalResultView.CustomerInterfaceResult
							invoked.Status = 2
					else
						invoke FastUpdate CompanyCustomerRel
							invoked.InterfaceInProcess		= false
							if  (ActiveStatus entered)
								invoked.ActiveStatus			= ActiveStatus
							else
								invoked.ActiveStatus			= "A"
							invoked.OriginatingInterfaceRun = LocalResultView.CustomerInterfaceResult
							invoked.BillingInvoiceEmailOption	= BillingInvoiceEmailOption

						invoke FastDelete

		DisableAutoEmailing is an Instance Action
			restricted
			Local Fields
				LocalDocumentTypes			is Alpha 300
				LocalLastTypeToDisable		is Boolean
			Action Rules

				if (DisabledReceivablesStatementAutoEmail)
					LocalDocumentTypes += "Receivables Statement"

					if (DisabledBasicDunningLetterAutoEmail
					or  DisabledAdvancedDunningLetterAutoEmail
					or	DisabledPaymentRequestNoticeAutoEmail
					or  DisabledBillingInvoiceAutoEmail
					or  DisabledEFTNotificationPrintAutoEmail
					or  DisabledReceivableInvoiceAutoEmail
					or  DisabledSubleaseBillingInvoiceAutoEmail
					or  DisabledPaymentReceiptAutoEmail
					or  DisabledPrepaymentReceiptAutoEmail)
						LocalLastTypeToDisable = false
					else
						LocalLastTypeToDisable = true
					if (not LocalLastTypeToDisable)
						LocalDocumentTypes += ", "

				if (DisabledBasicDunningLetterAutoEmail)
					LocalDocumentTypes += "Basic Dunning Letter"

					if (DisabledAdvancedDunningLetterAutoEmail
					or	DisabledPaymentRequestNoticeAutoEmail
					or  DisabledBillingInvoiceAutoEmail
					or  DisabledEFTNotificationPrintAutoEmail
					or  DisabledReceivableInvoiceAutoEmail
					or  DisabledSubleaseBillingInvoiceAutoEmail
					or  DisabledPaymentReceiptAutoEmail
					or  DisabledPrepaymentReceiptAutoEmail)
						LocalLastTypeToDisable = false
					else
						LocalLastTypeToDisable = true
					if (not LocalLastTypeToDisable)
						LocalDocumentTypes += ", "

				if (DisabledAdvancedDunningLetterAutoEmail)
					LocalDocumentTypes += "Advanced Dunning Letter"

					if (DisabledPaymentRequestNoticeAutoEmail
					or  DisabledBillingInvoiceAutoEmail
					or  DisabledEFTNotificationPrintAutoEmail
					or  DisabledReceivableInvoiceAutoEmail
					or  DisabledSubleaseBillingInvoiceAutoEmail
					or  DisabledPaymentReceiptAutoEmail
					or  DisabledPrepaymentReceiptAutoEmail)
						LocalLastTypeToDisable = false
					else
						LocalLastTypeToDisable = true
					if (not LocalLastTypeToDisable)
						LocalDocumentTypes += ", "

				if (DisabledPaymentRequestNoticeAutoEmail)
					LocalDocumentTypes += "Payment Request Notice"

					if (DisabledBillingInvoiceAutoEmail
					or  DisabledEFTNotificationPrintAutoEmail
					or  DisabledReceivableInvoiceAutoEmail
					or  DisabledSubleaseBillingInvoiceAutoEmail
					or  DisabledPaymentReceiptAutoEmail
					or  DisabledPrepaymentReceiptAutoEmail)
						LocalLastTypeToDisable = false
					else
						LocalLastTypeToDisable = true
					if (not LocalLastTypeToDisable)
						LocalDocumentTypes += ", "

				if (DisabledBillingInvoiceAutoEmail)
					LocalDocumentTypes += "Billing Invoice"

					if (DisabledEFTNotificationPrintAutoEmail
					or  DisabledReceivableInvoiceAutoEmail
					or  DisabledSubleaseBillingInvoiceAutoEmail
					or  DisabledPaymentReceiptAutoEmail
					or  DisabledPrepaymentReceiptAutoEmail)
						LocalLastTypeToDisable = false
					else
						LocalLastTypeToDisable = true
					if (not LocalLastTypeToDisable)
						LocalDocumentTypes += ", "

				if (DisabledEFTNotificationPrintAutoEmail)
					LocalDocumentTypes += "EFT Notification Print"

					if (DisabledReceivableInvoiceAutoEmail
					or  DisabledSubleaseBillingInvoiceAutoEmail
					or  DisabledPaymentReceiptAutoEmail
					or  DisabledPrepaymentReceiptAutoEmail)
						LocalLastTypeToDisable = false
					else
						LocalLastTypeToDisable = true
					if (not LocalLastTypeToDisable)
						LocalDocumentTypes += ", "

				if (DisabledReceivableInvoiceAutoEmail)
					LocalDocumentTypes += "Receivable Invoice"

					if (DisabledSubleaseBillingInvoiceAutoEmail
					or  DisabledPaymentReceiptAutoEmail
					or  DisabledPrepaymentReceiptAutoEmail)
						LocalLastTypeToDisable = false
					else
						LocalLastTypeToDisable = true
					if (not LocalLastTypeToDisable)
						LocalDocumentTypes += ", "
					
				if (DisabledSubleaseBillingInvoiceAutoEmail)
					LocalDocumentTypes += "Sublease Billing Invoice"

					if (DisabledPaymentReceiptAutoEmail
					or  DisabledPrepaymentReceiptAutoEmail)
						LocalLastTypeToDisable = false
					else
						LocalLastTypeToDisable = true
					if (not LocalLastTypeToDisable)
						LocalDocumentTypes += ", "

				if (DisabledPaymentReceiptAutoEmail)
					LocalDocumentTypes += "Payment Receipt"

					if (DisabledPrepaymentReceiptAutoEmail)
						LocalLastTypeToDisable = false
					else
						LocalLastTypeToDisable = true
					if (not LocalLastTypeToDisable)
						LocalDocumentTypes += ", "

				if (DisabledPrepaymentReceiptAutoEmail)
					LocalDocumentTypes += "Prepayment Receipt"
					
				confirmation required
					"AutomaticEmailingWillBeDisabledFor_<LocalDocumentTypes>.CustomerContactsEmailSetupWillAlsoBeUpdated.DoYouWantToContinue?"

				for each CompanyCustomerContactImportRel
					invoke Update each
						if (not EmailReceivablesStatement) 
							invoked.EmailReceivablesStatement 	= false
						if (not EmailBasicDunningLetter) 
							invoked.EmailBasicDunningLetter 	= false
						if (not EmailAdvancedDunningLetter) 
							invoked.EmailAdvancedDunningLetter 	= false
						if (not EmailPaymentRequestNotice) 
							invoked.EmailPaymentRequestNotice 	= false
						if (not EmailBillingInvoice) 
							invoked.EmailBillingInvoice 		= false
						if (not EmailEFTNotificationPrint) 
							invoked.EmailEFTNotificationPrint 	= false
						if (not EmailReceivableInvoice) 
							invoked.EmailReceivableInvoice 		= false
						if (not EmailSubleaseBillingInvoice) 
							invoked.EmailSubleaseBillingInvoice = false
						if (not EmailPaymentReceipt) 
							invoked.EmailPaymentReceipt 		= false
						if (not EmailPrepaymentReceipt) 
							invoked.EmailPrepaymentReceipt 		= false

		UpdateToEmailOptionInstance is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				if (HasEmailBillingInvoiceContactOnly)
					BillingInvoiceEmailOption = BillingInvoiceEmailOption.ContactsOnly

		UpdateConversionIDMToEmailOption is a Set Action
			default label is untranslatable
			restricted
			Instance Selection
				where (BillingInvoiceEmailContactsOnly)

			Action Rules						
				Instance Rules
					invoke UpdateToEmailOptionInstance
						resume on error
						
