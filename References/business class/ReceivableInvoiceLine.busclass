ReceivableInvoiceLine is a BusinessClass
    owned by ar
	prefix is ARRIL

    Ontology
        symbolic key is ReceivableInvoiceLine

    Patterns
        disable AuditIndex
        implements Archivable

    Persistent Fields
        Item                            is a ReceivableItem
        Special                         is Boolean
		Description
        Quantity						is Decimal size 13.4
            precision is OutputNumberOfDecimals
        UnitPrice						is Decimal size 21.5
            precision is OutputNumberOfDecimals
		UnitOfMeasure					is a ReceivableUnitOfMeasure
		ExtendedAmount					is an InternationalAmount
        DistributionCategory            is a ReceivableDistributionCategory
		Taxable							is Boolean
		TaxCode
        UNSPSCCode
        HSNSACCode
        ProductTaxCategory
		TaxUsageCode
		TaxAmount						is an InternationalAmount
        TaxRate							is Percent 7.5
        FinanceDimension2
			default label is "<Company.CustomerBusinessGroup.FinanceEnterpriseGroup.FinanceDimension2Label>"					
		Project
		ProjectContract
		AssociatedLine is like UniqueID
		InvoiceFinanceCodeBlock is a FinanceCodeBlockFull
		GlobalLineType
        ItemReference		is AlphaUpper size 32
        ItemUser1
        Sort1
		Sort2
		Sort3
		Sort4
        TransactionUserField1 is a TransUser1


    Transient Fields
		TransientFromCurrency                   is a FromCurrency
			derive value from ReceivableInvoice.OriginalCurrency
        TransientQuantityForPrinting            is Decimal size 13.4
            precision is OutputNumberOfDecimals
            derive value from DerivedQuantityForPrinting 


    Local Fields
		NewReceivableGLDistribution  		    is a ReceivableGLDistribution view
        LocalCalculatedLineTotal			    is an InternationalAmount
        LocalDistributionTotalsDone             is Boolean
        LocalDistributionTotalAmount            is an InternationalAmount
        LocalDistributionTotalTaxAmount         is an InternationalAmount
        LocalDistributionTotalNonTaxAmount      is an InternationalAmount
        LocalRecreateDistributions              is Boolean
        LocalCurrencyWork						is a ReceivableExchange
        LocalGeneralLedgerAccount               is a FinanceCodeBlock


    Rule Blocks
		SumDistributionTotals
			if (!LocalDistributionTotalsDone)
                initialize LocalDistributionTotalAmount
                initialize LocalDistributionTotalTaxAmount
                initialize LocalDistributionTotalNonTaxAmount
                for each ReceivableGLDistributionDetailTypeRel
                    LocalDistributionTotalAmount            += each.DistributionAmount.CurrencyAmount
                    if (each.TaxCode entered)
                        LocalDistributionTotalTaxAmount     += each.DistributionAmount.CurrencyAmount
                    else
                        LocalDistributionTotalNonTaxAmount  += each.DistributionAmount.CurrencyAmount
                LocalDistributionTotalsDone = true

        DeriveGeneralLedgerAccount
            initialize LocalGeneralLedgerAccount
            if (Special)
                if (DistributionCategory.AllowProcessLevelFinanceCodeBlockOverride)
                    LocalGeneralLedgerAccount = ReceivableInvoice.ReceivableProcessLevel.AccountingUnitFinanceCodeBlock

                    if (LocalGeneralLedgerAccount.Ledger not entered)
                        LocalGeneralLedgerAccount.Ledger						            = DistributionCategory.DistributionAccount.Ledger
            
                    if (LocalGeneralLedgerAccount.ToAccountingEntity not entered)
                        LocalGeneralLedgerAccount.ToAccountingEntity			            = DistributionCategory.DistributionAccount.ToAccountingEntity
                
                    if (LocalGeneralLedgerAccount.AccountingUnit not entered)
                        LocalGeneralLedgerAccount.AccountingUnit				            = DistributionCategory.DistributionAccount.AccountingUnit
                
                    if (LocalGeneralLedgerAccount.GeneralLedgerChartAccount not entered)
                        LocalGeneralLedgerAccount.GeneralLedgerChartAccount	                = DistributionCategory.DistributionAccount.GeneralLedgerChartAccount
                
                    if (LocalGeneralLedgerAccount.Project not entered)
                        LocalGeneralLedgerAccount.Project					                = DistributionCategory.DistributionAccount.Project
                                        
                    if (LocalGeneralLedgerAccount.FinanceDimension1 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension1			                = DistributionCategory.DistributionAccount.FinanceDimension1
                
                    if (LocalGeneralLedgerAccount.FinanceDimension2 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension2			                = DistributionCategory.DistributionAccount.FinanceDimension2
                                        
                    if (LocalGeneralLedgerAccount.FinanceDimension3 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension3			                = DistributionCategory.DistributionAccount.FinanceDimension3
                
                    if (LocalGeneralLedgerAccount.FinanceDimension4 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension4			                = DistributionCategory.DistributionAccount.FinanceDimension4
                
                    if (LocalGeneralLedgerAccount.FinanceDimension5 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension5			                = DistributionCategory.DistributionAccount.FinanceDimension5
                
                    if (LocalGeneralLedgerAccount.FinanceDimension6 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension6			                = DistributionCategory.DistributionAccount.FinanceDimension6
                
                    if (LocalGeneralLedgerAccount.FinanceDimension7 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension7			                = DistributionCategory.DistributionAccount.FinanceDimension7
                
                    if (LocalGeneralLedgerAccount.FinanceDimension8 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension8			                = DistributionCategory.DistributionAccount.FinanceDimension8
                
                    if (LocalGeneralLedgerAccount.FinanceDimension9 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension9			                = DistributionCategory.DistributionAccount.FinanceDimension9
                
                    if (LocalGeneralLedgerAccount.FinanceDimension10 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension10			            = DistributionCategory.DistributionAccount.FinanceDimension10
                else
                    LocalGeneralLedgerAccount = DistributionCategory.DistributionAccount
            else
                if (Item.ProcessLevelFinanceCodeBlockOverride)
                    LocalGeneralLedgerAccount = ReceivableInvoice.ReceivableProcessLevel.AccountingUnitFinanceCodeBlock

                    if (LocalGeneralLedgerAccount.Ledger not entered)
                        LocalGeneralLedgerAccount.Ledger						            = Item.GeneralLedgerAccount.Ledger
            
                    if (LocalGeneralLedgerAccount.ToAccountingEntity not entered)
                        LocalGeneralLedgerAccount.ToAccountingEntity			            = Item.GeneralLedgerAccount.ToAccountingEntity
                
                    if (LocalGeneralLedgerAccount.AccountingUnit not entered)
                        LocalGeneralLedgerAccount.AccountingUnit				            = Item.GeneralLedgerAccount.AccountingUnit
                
                    if (LocalGeneralLedgerAccount.GeneralLedgerChartAccount not entered)
                        LocalGeneralLedgerAccount.GeneralLedgerChartAccount	                = Item.GeneralLedgerAccount.GeneralLedgerChartAccount
                
                    if (LocalGeneralLedgerAccount.Project not entered)
                        LocalGeneralLedgerAccount.Project					                = Item.GeneralLedgerAccount.Project
                                        
                    if (LocalGeneralLedgerAccount.FinanceDimension1 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension1			                = Item.GeneralLedgerAccount.FinanceDimension1
                
                    if (LocalGeneralLedgerAccount.FinanceDimension2 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension2			                = Item.GeneralLedgerAccount.FinanceDimension2
                                        
                    if (LocalGeneralLedgerAccount.FinanceDimension3 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension3			                = Item.GeneralLedgerAccount.FinanceDimension3
                
                    if (LocalGeneralLedgerAccount.FinanceDimension4 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension4			                = Item.GeneralLedgerAccount.FinanceDimension4
                
                    if (LocalGeneralLedgerAccount.FinanceDimension5 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension5			                = Item.GeneralLedgerAccount.FinanceDimension5
                
                    if (LocalGeneralLedgerAccount.FinanceDimension6 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension6			                = Item.GeneralLedgerAccount.FinanceDimension6
                
                    if (LocalGeneralLedgerAccount.FinanceDimension7 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension7			                = Item.GeneralLedgerAccount.FinanceDimension7
                
                    if (LocalGeneralLedgerAccount.FinanceDimension8 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension8			                = Item.GeneralLedgerAccount.FinanceDimension8
                
                    if (LocalGeneralLedgerAccount.FinanceDimension9 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension9			                = Item.GeneralLedgerAccount.FinanceDimension9
                
                    if (LocalGeneralLedgerAccount.FinanceDimension10 not entered)
                        LocalGeneralLedgerAccount.FinanceDimension10			            = Item.GeneralLedgerAccount.FinanceDimension10
                else
                    LocalGeneralLedgerAccount = Item.GeneralLedgerAccount

	Derived Fields
		InvoiceTypeInvoice is a LabelField
			"<ReceivableInvoice.AlternateReceivableInvoiceType>_<ReceivableInvoice>"

		DerivedInvoiceTypeInvoice is a DerivedField
			type is MessageField
			return InvoiceTypeInvoice

        DerivedItemUnitPrice is a DerivedField
            type is like InternationalAmount
            restricted
            if (Item not exists)
                return blank
            else
            if (Item.UnitPrice not entered)
                return blank
            else
            if (Item.Currency = ReceivableInvoice.OriginalCurrency)
                return Item.UnitPrice
            else
                initialize LocalCurrencyWork
                LocalCurrencyWork.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
                LocalCurrencyWork.ExchangeDate				= ReceivableInvoice.TransactionDate
                LocalCurrencyWork.TransactionAmount			= Item.UnitPrice
                LocalCurrencyWork.FromCurrency				= Item.Currency
                LocalCurrencyWork.BaseAmount.ToCurrency		= ReceivableInvoice.OriginalCurrency
                return LocalCurrencyWork.BaseAmount.OutputCurrencyAmount

        DerivedLineNumber is a DerivedField
			type is Numeric 6
            default label is "Line"
			return ReceivableInvoiceLine

        FormTitleLineNumber is a DerivedField
            type is Alpha size 6
            if (ReceivableInvoiceLine entered)
                return ReceivableInvoiceLine
            else
                return blank

        DerivedExtendedAmount is a DerivedField
			type is like InternationalAmount
            default label is "ExtendedAmount"
			return ExtendedAmount

        DerivedTaxAmount is a DerivedField
			type is like InternationalAmount
            default label is "TaxAmount"
			return TaxAmount

        TotalAmount is a DerivedField
			type is like InternationalAmount
			LocalCalculatedLineTotal = ExtendedAmount + TaxAmount
			round LocalCalculatedLineTotal to nearest DerivedRoundTo
			return LocalCalculatedLineTotal

        DerivedExtendedAmountForPrinting is a DerivedField
			type is like InternationalAmount
            if (ReceivableInvoice.ExpandedInvoiceEntryTemplateFlipAmountsForPrinting)
                return (ExtendedAmount * -1)
            else 
			    return ExtendedAmount

        DerivedQuantityForPrinting is a DerivedField
            type is Decimal size 13.4
            if (DerivedExtendedAmountForPrinting < 0)
                if (Quantity < 0
                or  UnitPrice < 0)
                    return Quantity
                else
                    return (Quantity * -1)
            else
                if (Quantity > 0)
                    return Quantity
                else
                    return (Quantity * -1)

        DerivedTaxAmountForPrinting is a DerivedField
			type is like InternationalAmount
            if (ReceivableInvoice.ExpandedInvoiceEntryTemplateFlipAmountsForPrinting)
                return (TaxAmount * -1)
            else 
			    return TaxAmount

        DerivedTotalAmountForPrinting is a DerivedField
			type is like InternationalAmount
			LocalCalculatedLineTotal = ExtendedAmount + TaxAmount
			round LocalCalculatedLineTotal to nearest DerivedRoundTo
            if (ReceivableInvoice.ExpandedInvoiceEntryTemplateFlipAmountsForPrinting)
                return (LocalCalculatedLineTotal * -1)
            else 
			    return LocalCalculatedLineTotal

        DerivedDistributionTotalAmount  is a DerivedField
            type is like InternationalAmount
            default label is "DistributionTotal"
            include SumDistributionTotals
            if (FlipAmounts)
                return (LocalDistributionTotalAmount * -1)
            else
                return LocalDistributionTotalAmount

        DerivedDistributionTotalTaxAmount is a DerivedField
			type is like InternationalAmount
            default label is "DistributionTaxTotal"
            include SumDistributionTotals
            if (FlipAmounts)
                return (LocalDistributionTotalTaxAmount * -1)
            else
                return LocalDistributionTotalTaxAmount

        DerivedDistributionTotalNonTaxAmount is a DerivedField
			type is like InternationalAmount
            default label is "DistributionNonTaxTotal"
            include SumDistributionTotals
            if (FlipAmounts)
                return (LocalDistributionTotalNonTaxAmount * -1)
            else
                return LocalDistributionTotalNonTaxAmount

        DerivedAddOnChargesIndicator is a DerivedField
			type is Alpha 3  
			if (HasLineLevelAddOnCharges)
				return "Yes" 
			else
				return ""
        
        OutputNumberOfDecimals is a DerivedField
			type is Numeric 1
            restricted
			if (TransientFromCurrency entered)
				return TransientFromCurrency.NumberOfDecimals
			else
			if (actor.context.FinanceEnterpriseGroup.DefaultDecimalsOption entered)
				return actor.context.FinanceEnterpriseGroup.DefaultNumberOfDecimals
			else
				return 2

		DerivedRoundTo					is a DerivedField
    		type is Decimal 5.4
    		restricted
    		if (OutputNumberOfDecimals = 2)
    			return .01
    		else
    		if (OutputNumberOfDecimals = 0)
    			return 1
    		else
    		if (OutputNumberOfDecimals = 3)
    			return .001
    		else
    		if (OutputNumberOfDecimals = 4)
    			return .0001

        RoundedQuantity			        is a DerivedField
    		type is Decimal 13.4
    		restricted
    		if (Quantity entered)
	    		RoundedQuantity	= Quantity
	    		round RoundedQuantity to nearest DerivedRoundTo
	    		return RoundedQuantity
	    	else
	    		return 0

        RoundedUnitPrice			        is a DerivedField
    		type is Decimal 21.5
    		restricted
    		if (UnitPrice entered)
	    		RoundedUnitPrice	= UnitPrice
	    		round RoundedUnitPrice to nearest DerivedRoundTo
	    		return RoundedUnitPrice
	    	else
	    		return 0

	Field Rules
		Item
            required
            if (Item exists)
                constraint (Item.Active)
                    "ItemIsInactive"

        Special
            if (Item exists)
                Special = false
            else
                Special = true

		Description
            required
            if (Special)
                default to Item
            else
			    default to Item.Description

        Quantity
            required
			default to 1
            Quantity = RoundedQuantity

        UnitPrice
			required
            default to DerivedItemUnitPrice
            UnitPrice = RoundedUnitPrice
            if (Quantity entered
			and UnitPrice entered)
                if (UnitPrice < 0)
                    constraint (Quantity > 0)
                        "CannotEnterBoth_\QuantityAnd_\Unit_\PriceAsNegative"
                if (Quantity < 0)
                    constraint (UnitPrice > 0)
                        "CannotEnterBoth_\QuantityAnd_\Unit_\PriceAsNegative"

					
		UnitOfMeasure
			default to Item.UnitOfMeasure
			constraint (UnitOfMeasure.Active)
				"UnitOfMeasureIsInactive"

		ExtendedAmount
			if (Quantity entered
			and UnitPrice entered)
				ExtendedAmount = (Quantity * UnitPrice)

            constraint (ExtendedAmount entered)
				"Extended_\AmountCannotBeZero"

            if (ReceivableInvoice.ReceivableInvoiceType.Invoice or ReceivableInvoice.ReceivableInvoiceType.DebitMemo)
                constraint (ExtendedAmount >= 0)
					"Extended_\AmountMustBePositive"

        DistributionCategory
            if (not Special)
                cannot be entered
                    "Distribution_\CategoryCanOnlyBeEnteredFor_\SpecialLines"
            else
                required
                    "Distribution_\CategoryIsRequiredFor_\SpecialLines"

		Taxable
			if (action type.Create)
                if (Item exists)
				    default to Item.Taxable
                else
                if  (ReceivableInvoice.CompanyCustomerRel.TaxExempt = false
                and (DistributionCategory not entered
                or   DistributionCategory.TaxExempt = false))
                    default to true

		TaxCode
			if (not Taxable)
                initialize TaxCode
            else
				default to Item.TaxCode
                default to DistributionCategory.TaxCode
                default to ReceivableInvoice.CompanyCustomerRel.TaxCode
                required
                    "Tax_\CodeIsRequiredIf_\LineIsTaxable"

		ProductTaxCategory
			if (Taxable)
				default to Item.ProductTaxCategory
			else
				initialize ProductTaxCategory
			
		TaxUsageCode
			if (Taxable)
				default to Item.TaxUsageCode
			else
				initialize TaxUsageCode
			
		TaxAmount
			if (not Taxable)
				initialize TaxAmount

        HSNSACCode
			if (IsHSNSACCodeEnabled)
				default to Item.HSNSACCode
				required

		UNSPSCCode
            if (UNSPSCCode not entered)
                UNSPSCCode = Item.UNSPSCCodeGroup.UNSPSCCode
                if (UNSPSCCode not exists)
                    initialize UNSPSCCode

		InvoiceFinanceCodeBlock
			if (Company.DetailedInvoiceAccrualDistributions
			and IsManualEntry
			and action type.Create)
				default to ReceivableInvoice.ReceivableGeneralLedgerCodeRel.DistributionAccount
					default individual fields


    Conditions
		SecurityGroupAllowsAccess
			when (actor.context.CompanySecurityGroup = blank
			or	   CompanySecurityGroupMemberRel exists)

		IsManualEntry
			restricted
			when (ReceivableInvoice.Origin.ManualInvoice
			or	ReceivableInvoice.Origin.ManualMemo)

        FlipAmounts
            restricted
            when ((ReceivableInvoice.ReceivableInvoiceType.CreditMemo
            and    ExtendedAmount < 0)
            or    (ReceivableInvoice.ReceivableInvoiceType.MixedSignLines
            and    ReceivableInvoice.AlternateReceivableInvoiceType.CreditMemo
            and    ReceivableInvoice.DerivedExpandedInvoiceEntryTemplateTotalAmount < 0))

        IsHSNSACCodeEnabled
			restricted
			when (Company.GeneralLedgerCompany.RequireHSNSACCode)

        DistributionCategoryRequired
            restricted
            when (Special
            or   (ReceivableInvoiceLine not entered
            and   Item entered
            and   Item not exists))

        HasLineLevelAddOnCharges
            when (ReceivableInvoiceLine entered
            and   ReceivableInvoiceAddOnChargeRel exists)


	Relations
		CompanySecurityGroupMemberRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= actor.context.CompanySecurityGroup.FinanceDimensionStructure
				related.Company						= Company

        ReceivableGLDistributionRel
			one-to-many relation to ReceivableGLDistribution
			delete cascades
			Field Mapping uses Set2
				related.ReceivableCompanyDataGroup.TransactionCompany	 = Company
				related.BatchNumber										 = ReceivableInvoice.BatchNumber
				related.TransType										 = ReceivableInvoice.ReceivableInvoiceType
				related.Invoice											 = ReceivableInvoice
				related.ReceivableCompanyDataGroup.Customer				 = ReceivableInvoice.Customer
            Instance Selection
                where (related.AssociatedLine                            = UniqueID)

        ReceivableGLDistributionDetailTypeRel
            one-to-many relation using ReceivableGLDistributionRel
            Instance Selection
                where (related.AccumulationType.Detail)

        ReceivableGLDistributionTaxCodeNotEnteredRel
            one-to-many relation using ReceivableGLDistributionDetailTypeRel
            Instance Selection
                where (related.TaxCode not entered)

        ReceivableGLDistributionTaxCodeEnteredRel
            one-to-many relation using ReceivableGLDistributionDetailTypeRel
            Instance Selection
                where (related.TaxCode entered)

        ReceivableGLDistributionProjectEnteredRel
            one-to-many relation using ReceivableGLDistributionDetailTypeRel
            Instance Selection
                where (related.GeneralLedgerAccount.Project entered)

        ReceivableGLDistributionProjectNotEnteredRel
            one-to-many relation using ReceivableGLDistributionDetailTypeRel
            Instance Selection
                where (related.GeneralLedgerAccount.Project not entered)

        ReceivableInvoiceAddOnChargeRel
			one-to-many relation to ReceivableInvoiceAddOnCharge
            delete cascades
			Field Mapping uses symbolic key
				related.Company					 = Company
				related.ReceivableInvoiceType	 = ReceivableInvoiceType
				related.ReceivableInvoice		 = ReceivableInvoice
				related.ReceivableInvoiceLine	 = ReceivableInvoiceLine

    Actions
		Create is a Create Action
            valid when (ReceivableInvoice.Status.Unreleased)
            Exit Rules
                invoke CreateDistributions

		Update is an Update Action
            valid when (ReceivableInvoice.Status.Unreleased)
            Exit Rules
                LocalRecreateDistributions = false
                if (Taxable changed)
                    if (Taxable)
                        LocalRecreateDistributions = true
                        if (TaxCode not entered)
                            TaxCode = Item.TaxCode
                        if (TaxCode not entered)
                            TaxCode = DistributionCategory.TaxCode
                        if (TaxCode not entered)
                            TaxCode = ReceivableInvoice.CompanyCustomerRel.TaxCode
                        constraint (TaxCode entered)
                            "Tax_\CodeIsRequiredIf_\LineIsTaxable"
                    else
                        initialize TaxCode
                        initialize TaxAmount
						initialize TaxRate
                        invoke Delete ReceivableGLDistributionTaxCodeEnteredRel

                if (Item changed
                or  DistributionCategory changed
                or  Quantity changed
                or  UnitPrice changed
                or  TaxCode changed
                or  ProductTaxCategory changed
                or  TaxUsageCode changed
                or  UNSPSCCode changed
                or  HSNSACCode changed)
                    LocalRecreateDistributions = true

                if (LocalRecreateDistributions)
                    invoke Delete ReceivableGLDistributionRel
                    invoke CreateDistributions

		Delete is a Delete Action
            valid when (ReceivableInvoice.Status.Unreleased)
            Entrance Rules
                invoke Delete ReceivableGLDistributionRel
                invoke Update ReceivableInvoice
                    invoked.TransientSignedTransactionAmount = (ReceivableInvoice.DerivedExpandedInvoiceEntryTemplateTotalAmount - TotalAmount)

        FastDelete is a Delete Action
            restricted

        Purge is a Purge Action 
            restricted
            Entrance Rules
                invoke Purge ReceivableInvoiceAddOnChargeRel
            
        CreateDistributions is an Instance Action
            restricted
            Action Rules
                include DeriveGeneralLedgerAccount
                invoke CreateInvoiceDistribution ReceivableGLDistribution
                    assign result to NewReceivableGLDistribution
                    invoked.FinanceEnterpriseGroup										= Company.FinanceEnterpriseGroup
                    invoked.ReceivableCompanyDataGroup.TransactionCompany				= Company
                    invoked.BatchNumber													= ReceivableInvoice.BatchNumber
                    invoked.ReceivableCompanyDataGroup.ReceivableProcessLevel			= ReceivableInvoice.ReceivableProcessLevel 
                    invoked.ReceivableCompanyDataGroup.Customer							= ReceivableInvoice.Customer
                    invoked.ReceivableCompanyGroup.OriginCompany						= Company
                    invoked.ReceivableCompanyGroup.GlCompany							= Company
                    invoked.TransType													= ReceivableInvoice.ReceivableInvoiceType
                    invoked.Invoice														= ReceivableInvoice
                    invoked.GeneralLedgerDate											= ReceivableInvoice.GeneralLedgerDate
                    invoked.TransactionDate												= ReceivableInvoice.TransactionDate
                    invoked.Description												    = Description
                    invoked.AssociatedLine                                              = UniqueID
                    invoked.ProductTaxCategory                                          = ProductTaxCategory
                    invoked.TaxUsageCode                                                = TaxUsageCode
                    invoked.HSNSACCode													= HSNSACCode
                    invoked.ReceivableCompanyDataGroup.UNSPSCCode						= UNSPSCCode
                    invoked.ReceivableCompanyDataGroup.ReceivableDistributionCategory   = DistributionCategory
                    invoked.GeneralLedgerAccount									    = LocalGeneralLedgerAccount
                    if (FlipAmounts)
                        invoked.DistributionAmount.CurrencyAmount						= ExtendedAmount * -1
                    else
                        invoked.DistributionAmount.CurrencyAmount						= ExtendedAmount
                    if (Taxable)
                        invoked.TaxCode                                                 = TaxCode
                    else
                        invoked.BypassProcessTaxCode                                    = true
                    if  (ReceivableInvoice.AlternateReceivableInvoiceType.Invoice)
                        invoked.AuditSummaryIndicator									= "01"
                    else
                        invoked.AuditSummaryIndicator									= "02"

                if (not Taxable
                and NewReceivableGLDistribution.TaxCode entered)
                    invoke FastUpdate NewReceivableGLDistribution.ReceivableGLDistribution
                        initialize invoked.TaxCode
                        initialize invoked.TransactionTaxableAmount
                        initialize invoked.LinkedTaxGroup

                if (NewReceivableGLDistribution.TaxCode entered)
                    Taxable = true
                    if (TaxCode entered)
                        constraint (NewReceivableGLDistribution.TaxCode = TaxCode)
                            "TaxDistributionsMustUseTheSameTaxCodeAsTheirAssociatedLine"
                    else
                        TaxCode = NewReceivableGLDistribution.TaxCode

                    if (ReceivableInvoice.TaxEntityRel.ThirdParty.InforTax
                    or (ReceivableInvoice.TaxEntityUsesVertex
                    and not ReceivableInvoice.CallVertexByTransaction))
                        invoke FastUpdate NewReceivableGLDistribution.ReceivableGLDistribution
                            initialize invoked.TaxCode
                            initialize invoked.TransactionTaxableAmount

                        invoke DeriveTaxAmounts
                
                invoke Update ReceivableInvoice
                    invoked.TransientSignedTransactionAmount = ReceivableInvoice.ForceRefreshDerivedExpandedInvoiceEntryTemplateTotalAmount

        DeriveTaxAmounts is an Instance Action
            restricted
            Action Rules
                if (Taxable)
                    if (FlipAmounts)
                        TaxAmount = ((sum ReceivableGLDistributionTaxCodeEnteredRel.DistributionAmount.CurrencyAmount) * -1)
                    else
                        TaxAmount = sum ReceivableGLDistributionTaxCodeEnteredRel.DistributionAmount.CurrencyAmount
                    
                    TaxRate = (TaxAmount / ExtendedAmount)
                    round TaxRate to nearest 0.0001

                    if (ReceivableInvoice.TaxEntityUsesVertex)
                        if ((TaxCode = "00"
                        or   TaxCode = "0")
                        and  ReceivableGLDistributionTaxCodeEnteredRel exists)
                            TaxCode = first ReceivableGLDistributionTaxCodeEnteredRel.TaxCode
