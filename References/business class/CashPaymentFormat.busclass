CashPaymentFormat is a BusinessClass
    owned by cb
    prefix is CCF
    classic name is CBCASHFORM

    Ontology
        symbolic key is CashPaymentFormat
            classic set name is CCFSET1
            classic name for CashPaymentFormat.BankTransactionCode is BANK-INST-CODE
            classic name for CashPaymentFormat.PayablesProcessGroup is PROC-GRP

    Patterns
        implements StaticJava
        disable AuditIndex

    Persistent Fields

        SourceCode                       is AlphaUpper size 2
            States
                AccountsPayable    value is "AP"
                AccountsReceivable value is "AR"
        PaymentFormat                    is Numeric size 2
            classic name is FORMAT-NBR
            States








                CSVFile 					  	  value is 6
                	default label is "CSV File"
                AchFile                           value is 11
                    default label is "ACH File"
                BacsFile                          value is 21
                    default label is "BACS File"
                ElectronicFile                    value is 22
                    default label is "Electronic File"
                SwiftFile                         value is 23
                    default label is "SWIFT File"
                EtebacFile                        value is 24
                    default label is "ETEBAC File"
                GermanDtausFile                   value is 25
                    default label is "German DTAUS File"
                GermanDtazvFile                   value is 26
                    default label is "German DTAZV File"
                SwedenPgdPlusgiroDomestic         value is 30
                    default label is "Sweden PGD (Plusgiro Domestic)"
                SwedenPgiPlusgiroInternational    value is 31
                    default label is "Sweden PGI (Plusgiro International)"
                SwedenBgdBankgiroDomestic         value is 32
                    default label is "Sweden BGD (Bankgiro Domestic)"
                SwedenBgiBankgiroInternational    value is 33
                    default label is "Sweden BGI (Bankgiro International)"
                FinlandFndNordeaDomestic          value is 34
                    default label is "Finland FND (Nordea Domestic)"
                FinlandFniNordeaInternational     value is 35
                    default label is "Finland FNI (Nordea International)"
                NorwayNtdTelepayDomestic          value is 36
                    default label is "Norway NTD (Telepay Domestic)"
                NorwayNtiTelepayInternational     value is 37
                    default label is "Norway NTI (Telepay International)"
                DenmarkDddDanskeBankDomestic      value is 38
                    default label is "Denmark DDD (Danske Bank Domestic)"
                DenmarkDdiDanskeBankInternational value is 39
                    default label is "Denmark DDI (Danske Bank International)"
                IDMOutputFile					  value is 40
                BODOutput						  value is 41
                ArgentinaFlatFile				  value is 42
                InforTreasuryFile				  value is 43
		WriteCSVHeader					 is Boolean
			default label is "IncludeCSVHeaderRow"
		ConsolidateDetailAndRemittance	 is Boolean
			default label is "ConsolidateCSVDetailAndRemittance"
		FTPConfiguration
		FTPHeaderFile					 is Boolean
		FTPDetailFile					 is Boolean
		FTPRemittanceFile				 is Boolean
        BankIssuedPaymentNumbers		 is Boolean
        StartingDocumentNumber           is Numeric size 18 
            classic name is START-DOC-NBR
        RemittanceOption                 is AlphaUpper size 1
            classic name is REMIT-OPTION
            States
                AlwaysAttached     value is "A"
                    default label is "Always Attached"
                OverflowDocument   value is "O"
                    default label is "Overflow Document"
                SeparateRemittance value is "S"
                    default label is "Separate Remittance"
        NumberOfRemittanceLines          is a HdrDtlLines
            classic name is HDR-DTL-LINES
        NumberOfOverflowRemittanceLines  is a HdrDtlLines
            sql name is NOfOverflowRemittanceLines
            classic name is OVR-DTL-LINES
        LanguageTextOption               is AlphaUpper size 1
            classic name is SCRIPT-OPTION
            States
                English                    value is "1"
                Spanish                    value is "2"
                French                     value is "3"
                German                     value is "4"
                LanguagePreferenceOfVendor value is "5"
                    default label is "Language preference of vendor"
        ElectronicPaymentIDNumber        is a TapeIdNbr
            classic name is TAPE-ID-NBR
        BankRejectionBankTransactionCode is a BankTransactionCode
            sql name is BRejectionBankTransactionCode
            classic name is TAPE-REJ-CODE
        CountryCode						is a Country
		UseIDMTemplate					is Boolean
		UsePaymentPrinter				is Boolean
			default label is "AutomaticPrint"			
		UsePaymentEMail					is Boolean
			default label is "AutomaticEmail"
		UseSupplementaryPrinter			is Boolean
			default label is "AutomaticPrint"
		UseSupplementaryEmail			is Boolean
			default label is "AutomaticEmail"
		PaymentTemplate					is an IDMTemplate 
		PaymentFilename					is Alpha size 20
			default label is "DocumentFilename"
		SequentialPrintCheckAndRemittance  is Boolean
			restricted
			protected
		PaymentPrinter					is an IDMPrinter	
			default label is "PaymentPrinter"	
		PaymentPrinterSetting			is an IDMPrinterSettings
			default label is "PaymentPrinterSettings"
			context of PaymentPrinter
		PaymentFromEmail				is an EmailAddress 
			holds pii
			default label is "FromEmail"
		SupplementaryTemplate			is an IDMTemplate
			default label is "RemittanceAdviceTemplate"
		SupplementaryFilename			is Alpha size 20
			default label is "RemittanceAdviceFilename"
		SupplementaryPrinter			is an IDMPrinter
			default label is "RemittanceAdvicePrinter"
		SupplementaryPrinterSetting		is an IDMPrinterSettings
			default label is "RemittanceAdvicePrinterSettings"
			context of SupplementaryPrinter
		SupplementaryFromEmail			is an EmailAddress 
			holds pii
			default label is "FromEmail"
		SupplementaryEmailTemplate		is an IDMTemplate
			default label is "EmailTemplate"
		SupplementaryEmailSubject		is Alpha size 255
			default label is "EmailSubject"
			Text Variables
				RemittanceAdviceFilename
				CashCode
				BankTransactionCode
				TransactionNumber
				PaymentDate
				VendorName
		SupplementaryOutputFileName		is Alpha size 255
			default label is "EmailFileName"
			Text Variables
				RemittanceAdviceFilename
				CashCode
				BankTransactionCode
				TransactionNumber
				PaymentDate
				VendorName
		FractionalRoutingNumber			is Alpha size 30
		CheckEmailTemplate				is an IDMTemplate
			default label is "EmailTemplate"
		CheckEmailSubject				is Alpha size 255
			default label is "EmailSubject"
			Text Variables
				PaymentFilename
				CashCode
				BankTransactionCode
				TransactionNumber
		IncludeCents					is Boolean
		BatchPrintCount					is Numeric size 4
		PaymentOutputMapping
		CentsFormat						is Numeric 1
			default label is "Format"
			States	
				Fraction		  		value is 0
				Word			  		value is 1
				WordWithMinorCurrency	value is 2
		PaymentInWordsFormat			is Alpha 250
			default label is "PaymentAmountInWordsFormat"
			Text Variables
				AmountInWords
				CurrencyCode
				CurrencyDescription
		TestAmount						is an InternationalAmount
			precision is CashCode.Currency.NumberOfDecimals
				round to precision
		IncludeCurrency					is Boolean
		Currency						is Alpha 15	
			default label is "CurrencyInWord"	
		MinorCurrencyUnit				is Alpha 15	
		ExcludeFromEmailCc				is Boolean			
			default label is "ExcludeSender_fromCcEmail"
		ExcludeFromEmailCcChecks		is Boolean
			default label is "ExcludeSender_fromCcEmail"
        LanguageTextOptionIDM           is Numeric 2
            default label is "Language"
            States
                English                    value is 0
                CanadianFrench             value is 1
                	default label is "French (Canada)"
		CheckVersioning					is Boolean	
			default label is "Versioning"
		CheckVersionTemplate			is an IDMTemplate 	
			default label is "VersioningTemplate"	
		Signature1						is an AlternateAttachment
		Signature2						is an AlternateAttachment
		SignatureThresholdAmount		is an InternationalAmount
		IntelligentMailBarcode	        is Numeric 2
			States	
				SixDigitMailerIdentifier  value is 1
				NineDigitMailerIdentifier value is 2
		BarcodeID 						is Alpha 2
		ServiceTypeID					is Alpha 3
		MailerID						is Alpha 9
		ExcludeDistributionOnRemittance is Boolean	
		
	Local Fields
		AmountToTextTranslationSpanish
		AmountToTextTranslationEnglish
		AmountToTextTranslationFrench
		LocalIDMEmailSubject			is Alpha 255
    		Text Variables
 				RemittanceAdviceFilename  value is SupplementaryFilename
				CashCode				  value is CashCode
				BankTransactionCode		  value is CashPaymentFormat.BankTransactionCode
				TransactionNumber   	  value is "TRAN001"		
				PaymentDate				  value is current date
				VendorName				  value is "John Doe"

		LocalIDMCheckEmailSubject		is Alpha 255
    		Text Variables
 				PaymentFilename  		  value is PaymentFilename
				CashCode				  value is CashCode
				BankTransactionCode		  value is CashPaymentFormat.BankTransactionCode
				TransactionNumber   	  value is "TRAN001"
		
		LocalIDMPaymentInWords			is Alpha 250
			Text Variables
				AmountInWords			  value is DerivedAmountInWords
				CurrencyCode			  value is CashCode.Currency
				CurrencyDescription		  value is CashCode.Currency.Description
		LocalAttributeCtr				is Numeric 2
	Transient Fields
		TransientAmountInRight				is AlphaRight size 19
			derive value from TestAmount

		StartingDocumentNumberBeforeUpdate  is Numeric size 18
		TransientSignatureName				is Text
		TransientSixDigitMailerID			is Alpha size 6
			derive value from MailerID[1:6]
		TransientNineDigitMailerID			is Alpha size 9
			derive value from MailerID
	Derived Fields

		DerivedSamplePaymentInWords is a DerivedField
			type is Alpha 250
			restricted
			LocalIDMPaymentInWords = PaymentInWordsFormat
			return LocalIDMPaymentInWords text
				
		DerivedAmountInWords is a DerivedField
			type is Alpha 250
			restricted
			if (SpanishCountries)
				AmountToTextTranslationSpanish.AmountArray  = TransientAmountInRight
				AmountToTextTranslationSpanish.IncludeCents = IncludeCents  
				AmountToTextTranslationSpanish.CentsFormat  = CentsFormat


				AmountToTextTranslationSpanish.IncludeCurrency = IncludeCurrency
				if (IncludeCurrency)
					AmountToTextTranslationSpanish.Currency	   = Currency
				return AmountToTextTranslationSpanish.AmountMessageField3		
			else

				if (CanadianFrench)
					AmountToTextTranslationFrench.AmountArray  = TransientAmountInRight
					AmountToTextTranslationFrench.IncludeCents = IncludeCents  
					AmountToTextTranslationFrench.CentsFormat  = 0 


					AmountToTextTranslationFrench.IncludeCurrency = IncludeCurrency
					if (IncludeCurrency)
						AmountToTextTranslationFrench.Currency	   = Currency
					return AmountToTextTranslationFrench.AmountMessageField3
				
				else
					AmountToTextTranslationEnglish.AmountArray  = TransientAmountInRight
					AmountToTextTranslationEnglish.IncludeCents = IncludeCents
					AmountToTextTranslationEnglish.CentsFormat  = CentsFormat
					AmountToTextTranslationEnglish.NumberOfDecimals = CashCode.Currency.NumberOfDecimals
					if (CentsFormat.WordWithMinorCurrency)
						AmountToTextTranslationEnglish.MinorCurrencyUnit = MinorCurrencyUnit				
					AmountToTextTranslationEnglish.IncludeCurrency = IncludeCurrency
					if (IncludeCurrency)
						AmountToTextTranslationEnglish.Currency    = Currency
					return AmountToTextTranslationEnglish.AmountMessageField3	

				
		FTPConfigurationName is a DerivedField
			type is Alpha 100
			if (FTPConfiguration.System)
				return "system"
			else
			if (FTPConfiguration.System1)
				return "system1"
			else
			if (FTPConfiguration.System2)
				return "system2"
			else
			if (FTPConfiguration.System3)
				return "system3"
			else
			if (FTPConfiguration.System4)
				return "system4"

		DerivedEmailSubject is a DerivedField
			type is Alpha 255
			restricted
			LocalIDMEmailSubject	= 	SupplementaryEmailSubject
			return LocalIDMEmailSubject text
		
		DerivedSupplementaryOutputFileName is a DerivedField
			type is Alpha 255
			restricted
			LocalIDMEmailSubject = SupplementaryOutputFileName
			return LocalIDMEmailSubject text

		DerivedCheckEmailSubject is a DerivedField
			type is Alpha 255
			restricted
			LocalIDMCheckEmailSubject = CheckEmailSubject
			return LocalIDMCheckEmailSubject text
				
    Relations

        FinancialInstitutionBranchRel
            classic name is CBBANKENT
            one-to-one relation to FinancialInstitutionBranch

            Field Mapping uses symbolic key
            	related.CashManagementGroup			= CashManagementGroup	
            	related.FinancialInstitution		= CashCode.FinancialInstitution
                related.FinancialInstitutionBranch	= CashCode.FinancialInstitutionBranch
		
		PfiConfigurationRel
			one-to-one relation to PfiConfiguration
			Field Mapping uses symbolic key
				related.PfiConfiguration = FTPConfigurationName

		OpenPayablesInvoicePaymentRel						
			one-to-many relation to PayablesInvoicePayment
			Field Mapping uses Set10
			Instance Selection 
				where (!related.Status.Cancelled
				and    !related.Status.Historical
				and     related.BankTransactionCode = CashPaymentFormat.BankTransactionCode
				and     related.CashCode			= CashCode)				
		
		CashPaymentFormatRel							
			one-to-one relation to CashPaymentFormat
			Field Mapping uses symbolic key
				related.CashManagementGroup						= CashCode.CashManagementGroup
				related.CashCode								= CashCode
				related.CashPaymentFormat.BankTransactionCode	= CashPaymentFormat.BankTransactionCode
				related.CashPaymentFormat.PayablesProcessGroup	= blank
				
				









				
    Sets

        Set3
            indexed
            Sort Order
            	CashManagementGroup
                PaymentFormat
                CountryCode
                CashCode
                CashPaymentFormat

		ByBankTransactionCode	
			indexed
			Sort Order
				CashManagementGroup
				CashPaymentFormat.BankTransactionCode
				CashCode
				CashPaymentFormat.PayablesProcessGroup
				
    Field Rules

        PaymentFormat
            required

   			if (PaymentFormat.SwedenPgdPlusgiroDomestic 
   			or  PaymentFormat.SwedenPgiPlusgiroInternational)
				constraint (CashPaymentFormat.BankTransactionCode.ElectronicPaymentOrganizationIdentifier entered)
					"FormatsSwedenPGDAndSwedenPGIRequiresOrganizationIdentifierInBankTransactionCodeSetup"
			if (PaymentFormat.GermanDtausFile 
			or  PaymentFormat.GermanDtazvFile)
				constraint (CashCode.Currency = "EUR")
					"FormatGermanDTAUSFileAndGermanDTAZVRequiresTheCashCodeCurrencyToBeEUR"//"Cash_\CodeCurrencyFor_\Format_25And_26MustBe_\E\U\R"      
				constraint (CashCode.FinancialInstitutionBranch.RoutingNumber is numeric)
					"FormatGermanDTAUSAndGermanDTAZVRequiresTheRoutingNumberOnTheFinancialInstitutionBranchToBeNumeric" 
				constraint (CashCode.SendingFinancialInstitutionBranch.RoutingNumber is numeric)
					"FormatGermanDTAUSAndGermanDTAZVRequiresTheRoutingNumberOnTheSendingFinancialInstitutionBranchToBeNumeric" 
				constraint (CashCode.BankAccountNumber is numeric)
					"FormatGermanDTAUSAndGermanDTAZVRequiresTheCashManagementAccountToBeNumeric" 
			if (PaymentFormat changed)
				if (not PaymentFormat.IDMOutputFile
				and not PaymentFormat.BODOutput)
					FTPDetailFile			= true
					if (PaymentFormat.CSVFile)
						FTPHeaderFile		= true
					if (GeneratesRemittanceRecords)
						FTPRemittanceFile	= true
				



























										
        RemittanceOption
        	if (PaymentFormat.IDMOutputFile)
        		default to RemittanceOption.AlwaysAttached
        	
        	if (PaymentFormat.IDMOutputFile
			and	RemittanceOption.AlwaysAttached)
				initialize UseIDMTemplate		
        	
            if (not PaymentFormat.IDMOutputFile
            and UseIDMTemplate)
            	force default to RemittanceOption.SeparateRemittance
            	
			if (PaymentFormat.GermanDtausFile or PaymentFormat.GermanDtazvFile)
				constraint (RemittanceOption.OverflowDocument)
					"RemittanceForFormatGermanDTAUSFileAndGermanDTAZSFileMustBeOverflow"   
            required
			
        LanguageTextOption
            required
			default to 1











        NumberOfRemittanceLines
            initial value is 14
            default to 14
			if (PaymentFormat.GermanDtausFile)
				constraint (NumberOfRemittanceLines <= 6)
					"AttachedDetailLinesForFormatGermanDTAUSFileCannotBeGreaterThan6"
			if (PaymentFormat.GermanDtazvFile)
				constraint (NumberOfRemittanceLines <=4)
					"AttachedDetailLinesForFormatGermanDTAZSFileCannotBeGreaterThan4"

        NumberOfOverflowRemittanceLines
        	initial value is 58	
            default to 58		

		CashCode
	
		StartingDocumentNumber



			if (BankIssuedPaymentNumbers)
				initialize StartingDocumentNumber
			if (StartingDocumentNumber changed   
			and StartingDocumentNumber entered)
				confirmation required
					"Warning:_ManuallyUpdating_\Starting_\Document_\NumberMayCauseDuplicateTransactionNumbersWithExistingRecords.Continue?"
					
		BankRejectionBankTransactionCode
			constraint(BankRejectionBankTransactionCode.BankTransactionType.BankService)
				"RejectionCodeMustBeType_\BForPaymentReject"                  
			constraint(BankRejectionBankTransactionCode.TransactionType.CreditTransaction)
	 			"RejectCodeMustBeBank;CreditTransType"                 

			if (CashPaymentFormat.BankTransactionCode.PaymentSummarization
			or  CashPaymentFormat.BankTransactionCode.AllowDetailPaymentReject)		
				required

					"PaymentRejectionCodeRequiredForSummarizedPaymentsOrDetailPaymentReject"      




		
		BankIssuedPaymentNumbers
			if (PaymentFormat.IDMOutputFile)
				initialize 

			if (!PaymentFormat.CSVFile
			and !PaymentFormat.ElectronicFile
			and !PaymentFormat.SwiftFile
			and !PaymentFormat.BODOutput)
				constraint (!BankIssuedPaymentNumbers)
					"Bank_\Issued_\Payment_\NumbersCannotBeSetFor_\Payment_\Format<PaymentFormat>"

		FTPHeaderFile
			initial value is true
			if (!PaymentFormat.CSVFile)
				FTPHeaderFile	= false
			
		FTPDetailFile
			initial value is true
			if (PaymentFormat.IDMOutputFile
			or  PaymentFormat.BODOutput)
				initialize
				
		FTPRemittanceFile
			initial value is true
			if (!GeneratesRemittanceRecords)
				FTPRemittanceFile	= false
			
		FTPConfiguration
			if (PaymentFormat.IDMOutputFile
			or  PaymentFormat.BODOutput)
				initialize FTPHeaderFile
				initialize FTPDetailFile
				initialize FTPRemittanceFile
				
			if (FTPHeaderFile
			or	FTPDetailFile
			or	FTPRemittanceFile)
				required
					"FTPConfigurationIsRequiredWhenAnFTPOptionIsSelected"

		CountryCode
			if (PaymentFormat.IDMOutputFile)
				required

		UseIDMTemplate
			if (PaymentFormat.IDMOutputFile
			and not RemittanceOption.AlwaysAttached)
				default to true
						
			if (not UseIDMTemplate)	
				initialize SupplementaryTemplate
				initialize SupplementaryFilename
				initialize SupplementaryPrinter
				initialize SupplementaryPrinterSetting
				initialize SupplementaryFromEmail
				initialize UseSupplementaryPrinter
				initialize UseSupplementaryEmail
				initialize SequentialPrintCheckAndRemittance
		
		UsePaymentPrinter
			if (not PaymentFormat.IDMOutputFile)	
				initialize


		UsePaymentEMail
			if (not PaymentFormat.IDMOutputFile)
				initialize		
		
		PaymentTemplate
			if (PaymentFormat.IDMOutputFile)
				required
				
				constraint (PaymentTemplate.IDMDocumentType.PayablesPaymentOutput)
					"InvalidTemplate"
			else
				initialize
		
		PaymentFilename
			if (PaymentFormat.IDMOutputFile)
				required
				constraint (PaymentFilename[1:1] entered)
					"MustNotStartWithASpace"
			else
				initialize				

		SequentialPrintCheckAndRemittance
			if (RemittanceOption.AlwaysAttached
			or  PaymentPrinter.Type.Email)
				initialize 

			constraint (!RemittanceOption.AlwaysAttached)
				"AlwaysAttachedRemittanceOptionIsNotApplicableForSequentialPrintCheckAndRemittance"


		PaymentPrinter
			if (UsePaymentPrinter 
			or SequentialPrintCheckAndRemittance)
				required

			if (SequentialPrintCheckAndRemittance)
				constraint (PaymentPrinter = SupplementaryPrinter)
					"\Print_\CheckAnd_\Remittance_\SequentiallyIsSet._\PaymentAnd_\Remittance_\PrinterMustBeTheSame"

				if (PaymentPrinter changed
				and PaymentPrinter.Type.Email)
					initialize SequentialPrintCheckAndRemittance

		PaymentPrinterSetting
			if (SequentialPrintCheckAndRemittance)
				required

				constraint (PaymentPrinterSetting.PrinterTray != SupplementaryPrinterSetting.PrinterTray)
					"Payment_\Printer_\TrayAnd_\Remittance_\Printer_TrayMustBeDifferent"

		PaymentFromEmail
			if (UsePaymentEMail)
				required
		
		SupplementaryTemplate
			if (PaymentFormat.IDMOutputFile)
				if (RemittanceOption.AlwaysAttached)
					initialize
				else 
					if (SupplementaryTemplate entered) 
						constraint (SupplementaryTemplate.IDMDocumentType.PayablesPaymentOutput)
							"InvalidTemplate"
					else	
						required
			else
				if (UseIDMTemplate)
					required
				else
					initialize
		
		SupplementaryFilename
			if (PaymentFormat.IDMOutputFile)
				if (RemittanceOption.AlwaysAttached)
					initialize
				else
					if (SupplementaryFilename not entered)
						required
			else
				if (UseIDMTemplate)
					required
				else
					initialize

			if (SupplementaryFilename entered)
				constraint (SupplementaryFilename[1:1] entered)
					"MustNotStartWithASpace"							

		
		SupplementaryPrinter
			if (UseSupplementaryPrinter
			or SequentialPrintCheckAndRemittance)
				required
			

		SupplementaryPrinterSetting
			if (SequentialPrintCheckAndRemittance)
				required



		SupplementaryEmailTemplate
			constraint (SupplementaryEmailTemplate.IDMDocumentType.PayablesPaymentOutputEmail)
				"InvalidTemplate"

		WriteCSVHeader
			if (PaymentFormat.InforTreasuryFile)
				WriteCSVHeader = false

		CheckEmailTemplate
			constraint (CheckEmailTemplate.IDMDocumentType.PayablesPaymentOutputEmail)
				"InvalidTemplate"

			if (not UsePaymentEMail)
				initialize	

		CheckEmailSubject
			if (not UsePaymentEMail)
				initialize	

		BatchPrintCount
			initial value is 100
			default to 100
			
			if (not UsingIDM)
				initialize
			
			if (BatchPrintCount > 100)
				confirmation required
					"Warning:_BatchPrintCountHigherThan100MightExceedTheIDMPrintLimit.Continue?"
			
			constraint (BatchPrintCount > 0)
				"MustBeGreaterThanZero"
			
		PaymentOutputMapping

			constraint (CanUsePaymentOutputMapping)		
				"PaymentFormatMustBeCSVOr_\Infor_\TreasuryFileToDefineAPaymentOutputMapping"
			
			constraint (PaymentOutputMapping.HasDetailsDefined)
				"DetailFieldsMustBeDefinedForPaymentOutputMapping<PaymentOutputMapping>"
			
			constraint (PaymentOutputMapping.HasRemittancesDefined)
				"RemittanceFieldsMustBeDefinedForPaymentOutputMapping<PaymentOutputMapping>"

			if (PaymentFormat.InforTreasuryFile)
				constraint (PaymentOutputMapping.Delimiter = "|")
					"PaymentOutputMappingDelimiterMustBeAPipeForThe_\Infor_\TreasuryFilePaymentFormat"
				constraint (!PaymentOutputMapping.RemoveQuotes)
					"PaymentOutputMappingCannotRemoveQuotesForThe_\Infor_\TreasuryFilePaymentFormat"
					
		CentsFormat		
			if (not IncludeCents)
				initialize
			
			if (SpanishOrCanadianFrench)
				force default to CentsFormat.Fraction
				
		TestAmount
		    if (PaymentFormat.IDMOutputFile)
				constraint (TestAmount >= 0)
					"MustNotBeNegativeAmount"

		Currency
			if (IncludeCurrency)
				required
			else
				initialize
				
		MinorCurrencyUnit
			if (IncludeCents
			and CentsFormat.WordWithMinorCurrency)
				required	
			else
				initialize
		
		ExcludeFromEmailCc
			if (DefaultFromEmailAddress)
				ExcludeFromEmailCc = true
		
		ExcludeFromEmailCcChecks
			if (DefaultFromEmailAddressChecks)
				ExcludeFromEmailCcChecks = true
						
		LanguageTextOptionIDM
			if (!IsCanada)
				initialize

		CheckVersioning
			constraint (PaymentFormat.IDMOutputFile)
				"PaymentFormatMustBe_\I\D\M_\OutputFile"

		CheckVersionTemplate
			constraint (CheckVersioning)
				"CheckVersioningNotEnabled"

			if (CheckVersioning)
				required
				constraint (CheckVersionTemplate.IDMDocumentType.PayablesPaymentOutput)
					"InvalidTemplate"
			else
				initialize
		
		Signature1
			if ((action type.Create
			or  action type.Update)
			and Signature1.MimeType entered)
				constraint (Signature1ValidFileType)
					"FileTypeMustBeAnImage._\(i.e._.jpeg,_.png_or_.bmp)"					

		Signature2
			if ((action type.Create
			or  action type.Update)
			and Signature2.MimeType entered)
				constraint (Signature2ValidFileType)
					"FileTypeMustBeAnImage._\(i.e._.jpeg,_.png_or_.bmp)"

		BarcodeID 
			if (IntelligentMailBarcode entered)
				if (BarcodeID not entered)
					required
				else
					must be numeric
						"BarcodeIDMustBe2-digitNumericCode"
					constraint (BarcodeID size = 2)
						"BarcodeIDMustBe2-digitNumericCode"
			else
				initialize		

		ServiceTypeID	
			if (IntelligentMailBarcode entered)
				if (ServiceTypeID not entered)
					required
				else
					must be numeric
						"Service_\TypeIDMustBe3-digitNumericCode"
					constraint (ServiceTypeID size = 3)
						"Service_\TypeIDMustBe3-digitNumericCode"					
			else
				initialize	

		MailerID	
			if (IntelligentMailBarcode entered)
				if (MailerID not entered)
					required
				else
					if (IntelligentMailBarcode.SixDigitMailerIdentifier)
						must be numeric
							"MailerIDMustBe6-digitNumericCode"				
						constraint (MailerID size = 6)
							"MailerIDMustBe6-digitNumericCode"
					else
					if (IntelligentMailBarcode.NineDigitMailerIdentifier)
						must be numeric
							"MailerIDMustBe9-digitNumericCode"			
						constraint (MailerID size = 9)
							"MailerIDMustBe9-digitNumericCode"
			else
				initialize				

	Conditions

		Signature1ValidFileType
			restricted
			when (Signature1.MimeType = "image/png"
			or Signature1.MimeType = "image/jpeg"
			or Signature1.MimeType = "image/bmp")
		
		Signature2ValidFileType
			restricted
			when (Signature2.MimeType = "image/png"
			or Signature2.MimeType = "image/jpeg"
			or Signature2.MimeType = "image/bmp")

		SignaturesValidForIDMUpload
			restricted
			when (Signature1.ValidForIDMUpload
			or Signature2.ValidForIDMUpload)

		SignaturesAreLocallyStored
			restricted
			when (Signature1.IsLocal
			or Signature2.IsLocal)

		RecordExists
			restricted
			when (CashPaymentFormat exists)
			
        GeneratesRemittanceRecords
        	restricted
            when (PaymentFormat.CSVFile
            or    PaymentFormat.ElectronicFile
            or    PaymentFormat.SwiftFile
            or    PaymentFormat.GermanDtausFile)

		UsePaymentClearingFile		
			restricted
			when (PaymentFormat.AchFile
			or    PaymentFormat.BacsFile)

		SpanishCountries
			restricted
			when ((CountryCode.IsoCountryCode   = "MX"
			or     CountryCode.IsoCountryNumber = 484)
			or    (CountryCode.IsoCountryCode   = "CL"
			or     CountryCode.IsoCountryNumber = 152)
			or    (CountryCode.IsoCountryCode   = "AR"
			or     CountryCode.IsoCountryNumber = 032))
		
		IsCanada
			restricted
			when (CountryCode.IsoCountryCode   = "CA"
			or    CountryCode.IsoCountryNumber = 124)
		
		CanadianFrench
			restricted
			when (IsCanada
			and   LanguageTextOptionIDM.CanadianFrench)
		
		SpanishOrCanadianFrench
			restricted
			when (SpanishCountries
			or	  CanadianFrench)

		UsingIDM
			restricted
			when (PaymentFormat.IDMOutputFile
			or UseIDMTemplate)

		ShowSamplePaymentInWordsOutput
			restricted
			when (PaymentInWordsFormat entered
			and   TestAmount entered)

		CanUsePaymentOutputMapping				
			restricted
			when (PaymentFormat.CSVFile
			or	  PaymentFormat.InforTreasuryFile)
		
		DefaultFromEmailAddress
			when (SupplementaryFromEmail = config.DefaultFromEmailAddress)
		
		DefaultFromEmailAddressChecks
			when (PaymentFromEmail = config.DefaultFromEmailAddress)
	
		DisplayPrintCheckAndRemittanceSequentially
			restricted
			when (!RemittanceOption.AlwaysAttached
			and	PaymentPrinter.Type.IEP)

	Create Rules   
		if (Signature1.MimeType entered)
			include IDM.CreateRules 
				replace AttachmentField with Signature1 
		
		if (Signature2.MimeType entered)
			include IDM.CreateRules 
				replace AttachmentField with Signature2

	Delete Rules

		if (Signature1.MimeType entered)
			include IDM.DeleteNoArchiveRules
				replace AttachmentField with Signature1
				
		if (Signature2.MimeType entered)
			include IDM.DeleteNoArchiveRules
				replace AttachmentField with Signature2

	Commit Rules

		if (Signature1.MimeType entered)
			include IDM.CommitRules
				replace AttachmentField with Signature1

		if (Signature2.MimeType entered)
			include IDM.CommitRules
				replace AttachmentField with Signature2

	Actions
		Create is a Create Action											
			Action Rules
				if (CashPaymentFormat.PayablesProcessGroup entered					
           	 	and CashPaymentFormat.BankTransactionCode.PaymentSummarization)
                	constraint (CashPaymentFormatRel exists)
                    	"CashPaymentFormatWithBlankPayablesProcessGroupRequiredForSummarizedBankTransactionCodesForProcessingRejectedPayments"
				
		Update is an Update Action
			Action Rules
								
		Delete is a Delete Action
			Action Rules													
				constraint (OpenPayablesInvoicePaymentRel !exists)
					"OpenPayablesInvoicePaymentsExist;CannotDelete"
			
		UpdateStartingDocumentNumber is an Instance Action
			restricted
			refresh and lock this instance
			Parameters
				PrmStartingDocumentNumber is Numeric size 18
				PrmIncrementBy  is Numeric size 18
			Action Rules
				if (PrmStartingDocumentNumber entered)
					StartingDocumentNumberBeforeUpdate = PrmStartingDocumentNumber
					StartingDocumentNumber = PrmStartingDocumentNumber + PrmIncrementBy
				else
					StartingDocumentNumberBeforeUpdate = StartingDocumentNumber
					StartingDocumentNumber = StartingDocumentNumber + PrmIncrementBy
				
		UploadToIDM is an Instance Action
			valid when (SignaturesValidForIDMUpload)
			default label is "UploadSignaturesToIDM"
			Action Rules
				TransientSignatureName = Signature1.Title
				if (Signature1.ValidForIDMUpload)
					include IDM.MoveAttachmentsToIDM
						replace AttachmentField   with Signature1

				TransientSignatureName = Signature2.Title
				if (Signature2.ValidForIDMUpload)
					include IDM.MoveAttachmentsToIDM
						replace AttachmentField   with Signature2					
						

		MoveAttachmentsToIDM is a Set Action
			restricted
			Instance Selection
				where (SignaturesAreLocallyStored)

			Accumulators
				InstanceCount

			Action Rules
				Instance Rules
					increment InstanceCount	

					if (Signature1.IsLocal)
						include IDM.MoveAttachmentsToIDM
							replace AttachmentField with Signature1			
					
					if (Signature2.IsLocal)
						include IDM.MoveAttachmentsToIDM
							replace AttachmentField with Signature2

					commit transaction

					if (InstanceCount = config.IDM_MOVE_ATTACHMENTS_LIMIT)
						end set action instance loop

