RebuildZoneBalances is a BusinessTask
    owned by GeneralLedger

    Parameters
        FinanceEnterpriseGroup
		AccountingEntityOption	is Numeric 1
        	States
        		All				value is 1
        		Single			value is 2
        		Group			value is 3
		AccountingEntity
		AccountingEntityGroup
 		PeriodOption					is Numeric 1
			States
				CurrentPeriod	value is 1
				PreviousPeriod	value is 2
				NextPeriod		value is 3
				SpecifyPeriod	value is 4
		Period					is a GeneralLedgerCalendarPeriod

		ChangedTotalsOnly       is Boolean

    Parameter Rules
        FinanceEnterpriseGroup
        	required
        AccountingEntityOption 
 			required
 				"<FinanceEnterpriseGroup.AccountingEntityLabel>OptionIsRequired"    
		AccountingEntity
			if (AccountingEntityOption.Single)
				required
					"<FinanceEnterpriseGroup.AccountingEntityLabel>IsRequired"
			else
				AccountingEntity = blank
		AccountingEntityGroup
			if (AccountingEntityOption.Group)
				required
					"<FinanceEnterpriseGroup.AccountingEntityLabel>GroupIsRequired"
			else
				AccountingEntityGroup = blank
		PeriodOption
			required

    Actions

        ScheduleRebuildZoneBalances is an Instance Action

            Action Rules
				if (AccountingEntity entered)
	            	invoke UpdateZoneBalance AccountingEntity in background
	            		invoked.PrmPeriodOption											= PeriodOption
	            		invoked.PrmGeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	= Period
	            		invoked.PrmChangedTotalsOnly									= ChangedTotalsOnly
	            else
	            	if (AccountingEntityGroup entered)
	            		for each AccountingEntityGroup.AccountingEntityGroupMember set
							if (each.AccountingEntity.Status.Active)	            	
			            		invoke UpdateZoneBalance each.AccountingEntity in background
			            			invoked.PrmPeriodOption											= PeriodOption
			            			invoked.PrmGeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	= Period
			            			invoked.PrmChangedTotalsOnly									= ChangedTotalsOnly
					else
						for each FinanceEnterpriseGroup.AccountingEntity set
							if (each.AccountingEntity.Status.Active
							and !each.AccountingEntity.IsTopNode
							and !each.AccountingEntity.IsAcctUnitStructureEntity)	            	
			            		invoke UpdateZoneBalance each.AccountingEntity in background
			            			invoked.PrmPeriodOption											= PeriodOption
			            			invoked.PrmGeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	= Period
			            			invoked.PrmChangedTotalsOnly									= ChangedTotalsOnly
            		
