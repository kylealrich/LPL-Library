DocumentInterfaceDetail is a BusinessClass
	owned by ma
	prefix is DID

	Ontology
		symbolic key is DocumentInterfaceDetail

    Patterns
        disable AuditIndex
		disable Auditing 
       	disable EffectiveDated

	Persistent Fields
        PurchaseOrderLine					is like PurchaseOrderLine
        ContractLine   						is like ContractLine
        ItemType
        Item								is like Item
        VendorItem							is like VendorItem

        ItemDescription						is like Description

        InvoiceQuantity						is like Quantity


        InvoiceUnitCost						is an InternationalCost

        TaxCode								is like TaxCode
        TaxableUnitCost             		is an InternationalCost
        TaxType
        TaxAmount							is an InternationalAmount
        MatchDetailKey

        RetailUnitCost						is an InternationalCost

        Location							is like Location
        InvoiceUOM							is like UnitOfMeasure
        	default label is "UOM"

		BuyUOMMatchedQuantity				is like Quantity
			default label is "BuyQuantity"
		VendorBuyUOM						is like UnitOfMeasure
        ReceiptNumber						is like PurchaseOrderReceipt

        ReceiptLine							is like PurchaseOrderReceiptLine

		PurchaseOrder 						is like PurchaseOrder 
		InterfacedPurchaseOrder		  		is like PurchaseOrderImport
		InterfacedPOCode			  		is like POCode
		Contract 							is like Contract 
		HSNSACCode

		SystemAssignedInvoiceDetail   		is like PayablesInvoiceDetail
		Interfaced							is Boolean
	Local Fields
		ErrorMessage				  is Alpha 150
		POLineLookup
		LocalTrigger				  is Numeric 1
		NextSentence				  is Boolean
		LocalPurchaseOrder            is like PurchaseOrder
		LocalInvoiceDetailView        is a PayablesInvoiceDetail view

        LocalOriginalInvoice 			is like PayablesInvoice
		LocalOriginalInvoiceDetail 		is like PayablesInvoiceDetail
		LocalPOLine						is like LineNumber
		LocalContract					is like Contract
		LocalContractLine				is like LineNumber
		LocalQuantity					is like Quantity
		LocalUnitCost 					is like UnitCost
		AbsoluteUnitCost				is like UnitCost
		
	    QuantityAdjustment 				is Boolean
		CostAdjustment 					is Boolean

		NewContractLine 				is like ContractLine 

    	ImportedDistribution			is a PayablesInvoiceDistribution view
    	LocalDistribution				is like PayablesInvoiceDistribution

	Derived Fields

		PurchaseOrderLineNotFoundMsg is a MessageField
			restricted
			"PurchaseOrderLineNotFoundOnPurchaseOrder"

		ContractLineNotFoundMsg is a MessageField
			restricted
			"ContractLineNotFoundForLineNumber,VendorOrItem"

		ItemDoesNotMatchMsg is a MessageField
			restricted
			"ItemDoesNotMatchPurchaseOrderLineItem"

		VendorItemDoesNotMatchMsg is a MessageField
			restricted
			"VendorItemDoesNotMatchPurchaseOrderLineVendorItem"

		ItemDoesNotMatchContractLineMsg is a MessageField
			restricted
			"ItemDoesNotMatchContractLineItem"

		VendorItemDoesNotMatchContractLineMsg is a MessageField
			restricted
			"VendorItemDoesNotMatchContractLineVendorItem"

		AdditionalLineMismatchMsg is a MessageField
			restricted
			"AdditionalLineMismatchOnUnitCostOrUnitOfMeasure;ViewInterfacedLineViaLink"

		ResequencedLineNumber is a DerivedField 
			type is like PurchaseOrderLine 
			return DerivedPurchaseOrderLineRel.LineNumber 
			
		DerivedPurchaseOrder is a DerivedField
			type is like PurchaseOrder

			if  (PurchaseOrder entered)
				return PurchaseOrder
			else
			if (InterfacedPurchaseOrder entered)
				return InterfacedPurchaseOrderRel.PurchaseOrder
			else
				return DocumentInterfaceInvoice.DerivedPurchaseOrder	
	 		
		DerivedContract is a DerivedField 
			type is like Contract 
			if (Contract entered)
				return Contract
			else 
				return DocumentInterfaceInvoice.ServiceContract 
	Conditions
		InventoryOrNonStock
			when (ItemType.Inventoried
			or    ItemType.NonStock)
		
		RecordInError
			when (DocumentInterfaceErrorRel exists)

        ShowPurchaseOrderLineColumn
        	when (DocumentInterfaceInvoice.PurchaseOrder entered
        	or    DocumentInterfaceInvoice.InterfacedPurchaseOrder entered)

        ShowResequencedPurchaseOrderLineColumn
        	when (DocumentInterfaceInvoice.PurchaseOrder entered
			and   DocumentInterfaceInvoice.PurchaseOrderResequencedLinesRel exists)

        ShowContractLineColumn
       		when (DocumentInterfaceInvoice.ServiceContract entered)

		IsHSNSACCodeEnabled
			restricted
			when (DocumentInterfaceInvoice.PayablesCompanyRel.Company.GeneralLedgerCompany.RequireHSNSACCode)
	Relations
		MatchCompanyRel
			one-to-one relation to MatchCompany
			Field Mapping uses symbolic key
				related.Company							= DocumentInterfaceInvoice.Company
				
		PayablesCompanyRel
			one-to-one relation to PayablesCompany
			Field Mapping uses symbolic key
				related.Company							= DocumentInterfaceInvoice.Company

		DocumentInterfaceErrorRel
			one-to-many relation to DocumentInterfaceError
			delete cascades 
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.DocumentInterfaceInvoice		= DocumentInterfaceInvoice
				related.DocumentInterfaceDetail			= DocumentInterfaceDetail

		DocumentInterfaceAddOnChargeRel
			one-to-many relation to DocumentInterfaceAddOnCharge
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.DocumentInterfaceInvoice		= DocumentInterfaceInvoice
			Instance Selection
				where (related.PurchaseOrder			= PurchaseOrder
				and    related.InterfacedPurchaseOrder  = InterfacedPurchaseOrder
				and    related.PurchaseOrderLine		= PurchaseOrderLine)

		DocumentInterfaceDistributionRel
			one-to-many relation to DocumentInterfaceDistribution
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.DocumentInterfaceInvoice		= DocumentInterfaceInvoice
			Instance Selection 
				where (related.PurchaseOrder			= PurchaseOrder 
				and    related.InterfacedPurchaseOrder  = InterfacedPurchaseOrder 
				and    related.InterfacedPOCode			= InterfacedPOCode
				and    related.PurchaseOrderLine 		= PurchaseOrderLine 
				and    related.Contract 				= LocalContract 
				and    related.ContractLine 			= ContractLine 
				and    related.Item						= Item
				and    related.VendorItem 				= VendorItem) 

		OldDocumentInterfaceDistributionRel
			one-to-many relation to DocumentInterfaceDistribution
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.DocumentInterfaceInvoice		= DocumentInterfaceInvoice
			Instance Selection 
				where (related.PurchaseOrder			= old PurchaseOrder 
				and    related.InterfacedPurchaseOrder  = old InterfacedPurchaseOrder 
				and    related.InterfacedPOCode			= old InterfacedPOCode
				and    related.PurchaseOrderLine 		= old PurchaseOrderLine 
				and    related.Contract 				= old LocalContract
				and    related.ContractLine 			= old ContractLine 
				and    related.Item						= old Item
				and    related.VendorItem 				= old VendorItem) 
		PurchaseOrderRel
			one-to-one relation to PurchaseOrder
			Field Mapping uses symbolic key
				related.Company					= DocumentInterfaceInvoice.Company
				related.PurchaseOrder			= LocalPurchaseOrder

		InterfacedPurchaseOrderRel 
			one-to-many relation to InterfacedPurchaseOrder
            Field Mapping uses ByImport
                related.Company                     = DocumentInterfaceInvoice.Company
                related.PurchaseOrderImport 		= InterfacedPurchaseOrder
                related.POCode						= InterfacedPOCode

		PurchaseOrderLineRel
			one-to-one relation to PurchaseOrderLine
			Field Mapping uses symbolic key
				related.Company					= DocumentInterfaceInvoice.Company
				related.PurchaseOrder			= LocalPurchaseOrder
				related.PurchaseOrderLine		= PurchaseOrderLine

		PurchaseOrderLineResequenceRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses ByLineNbrForResequence
				related.Company					= DocumentInterfaceInvoice.Company
				related.PurchaseOrder			= DerivedPurchaseOrder
				related.LineNumber 				= PurchaseOrderLine
			Instance Selection 
				where (related.LineNumber not = related.PurchaseOrderLine)
		DerivedPurchaseOrderLineRel
			one-to-one relation to PurchaseOrderLine
			Field Mapping uses symbolic key
				related.Company					= DocumentInterfaceInvoice.Company
				related.PurchaseOrder			= DerivedPurchaseOrder
				related.PurchaseOrderLine		= PurchaseOrderLine


		ContractRel
			one-to-one relation to Contract
			Field Mapping uses symbolic key
				related.ContractGroup			= PayablesCompanyRel.VendorGroup
				related.Contract				= LocalContract

		ContractLineRel
			one-to-one relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup			= PayablesCompanyRel.VendorGroup
				related.Contract				= LocalContract 
				related.ContractLine			= ContractLine

		ContractLineByItemRel
			one-to-many relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup			= PayablesCompanyRel.VendorGroup
				related.Contract				= LocalContract
			Instance Selection
				where (related.ItemNumber		= Item)

		ContractLineByVendorItemRel
			one-to-many relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup			= PayablesCompanyRel.VendorGroup
				related.Contract				= LocalContract
			Instance Selection
				where (related.VendorItem		= VendorItem)

		ContractLineByItemDescriptionRel
			one-to-many relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup			= PayablesCompanyRel.VendorGroup
				related.Contract				= LocalContract
			Instance Selection
				where (related.ItemDescription		= ItemDescription)

        PayablesInvoiceDetailRel
        	one-to-one relation to PayablesInvoiceDetail
        	Field Mapping uses symbolic key
        		related.Company						= DocumentInterfaceInvoice.Company
        		related.PayablesInvoice				= DocumentInterfaceInvoice.SystemAssignedInvoice
                related.PurchaseOrder  				= LocalPurchaseOrder
                related.PurchaseOrderLine    		= PurchaseOrderLine
                related.Contract	  				= blank
                related.ContractLine    			= blank
                related.PayablesInvoiceDetail		= SystemAssignedInvoiceDetail

        PayablesInvoiceDetailWithContractRel
        	one-to-one relation to PayablesInvoiceDetail
        	Field Mapping uses symbolic key
        		related.Company						= DocumentInterfaceInvoice.Company
        		related.PayablesInvoice				= DocumentInterfaceInvoice.SystemAssignedInvoice
                related.PurchaseOrder  				= LocalPurchaseOrder
                related.PurchaseOrderLine    		= PurchaseOrderLine
                related.Contract	  				= PurchaseOrderLineRel.Contract
                related.ContractLine    			= PurchaseOrderLineRel.ContractLine
                related.PayablesInvoiceDetail		= SystemAssignedInvoiceDetail

        PayablesInvoiceDetailServiceContractRel
        	one-to-one relation to PayablesInvoiceDetail
        	Field Mapping uses symbolic key
        		related.Company						= DocumentInterfaceInvoice.Company
        		related.PayablesInvoice				= DocumentInterfaceInvoice.SystemAssignedInvoice
                related.PurchaseOrder  				= blank
                related.PurchaseOrderLine    		= blank
                related.Contract	  				= LocalContract
                related.ContractLine    			= ContractLine
                related.PayablesInvoiceDetail		= SystemAssignedInvoiceDetail

        LocalOriginalInvoiceDetailRel
            one-to-many relation to PayablesInvoiceDetail
            Field Mapping uses symbolic key
                related.Company 						= DocumentInterfaceInvoice.Company
                related.PayablesInvoice 				= LocalOriginalInvoice
                related.PurchaseOrder  					= LocalPurchaseOrder
                related.PurchaseOrderLine    			= LocalPOLine
                related.Contract	  					= LocalContract
                related.ContractLine    				= LocalContractLine

        OriginalInvoiceDetailRel
            one-to-one relation to PayablesInvoiceDetail
            Field Mapping uses symbolic key
                related.Company 						= DocumentInterfaceInvoice.Company
                related.PayablesInvoice 				= LocalOriginalInvoice 
                related.PurchaseOrder  					= LocalPurchaseOrder
                related.PurchaseOrderLine    			= LocalPOLine
                related.Contract	  					= LocalContract
                related.ContractLine    				= LocalContractLine
                related.PayablesInvoiceDetail			= LocalOriginalInvoiceDetail

		PurchasingCompanyRel
			one-to-one relation to PurchasingCompany
			Field Mapping uses symbolic key
				related.Company                    		= DocumentInterfaceInvoice.Company

        ItemUOMRel
        	one-to-one relation to ItemUOM
        	Field Mapping uses symbolic key
        		related.ItemGroup         = PurchasingCompanyRel.ProcurementGroup
        		related.Item              = Item
        		related.UnitOfMeasure     = InvoiceUOM
        		
        LocalInterfacedDetailRel
            one-to-many relation to PayablesInvoiceDetail
            Field Mapping uses symbolic key
                related.Company 						= DocumentInterfaceInvoice.Company
                related.PayablesInvoice 				= DocumentInterfaceInvoice.SystemAssignedInvoice
                related.PurchaseOrder  					= LocalPurchaseOrder
                related.PurchaseOrderLine    			= LocalPOLine
                related.Contract	  					= LocalContract
                related.ContractLine    				= LocalContractLine

        LocalInterfacedDetailExactRel
            one-to-one relation to PayablesInvoiceDetail
            Field Mapping uses symbolic key
                related.Company 						= DocumentInterfaceInvoice.Company
                related.PayablesInvoice 				= DocumentInterfaceInvoice.SystemAssignedInvoice
                related.PurchaseOrder  					= LocalPurchaseOrder
                related.PurchaseOrderLine    			= LocalPOLine
                related.Contract	  					= LocalContract
                related.ContractLine    				= LocalContractLine
                related.PayablesInvoiceDetail			= LocalOriginalInvoiceDetail

       	TaxEntityRel				 
            one-to-one relation to TaxEntity
            Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
                related.TaxEntity 						= PayablesCompanyRel.Company.AccountingEntity

		LocalDistributionRel
			one-to-one relation to PayablesInvoiceDistribution
			Field Mapping uses symbolic key
				related.Company							= DocumentInterfaceInvoice.Company
				related.PayablesInvoice					= DocumentInterfaceInvoice.SystemAssignedInvoice
				related.PayablesInvoiceDistribution		= LocalDistribution

	Sets
		ByPurchaseOrderLine
			Sort Order
				PurchaseOrderLine
		        ReceiptNumber
		        ReceiptLine
				DocumentInterfaceInvoice
				DocumentInterfaceDetail
				
	Field Rules

        ItemType           
			if (PurchaseOrderLine entered)
				default to PurchaseOrderLineRel.ItemType
			else
			if (ContractLineRel exists)
				default to "S"

        Item				
			if (PurchaseOrderLine entered)
				default to PurchaseOrderLineRel.Item
			else
			if (ContractLineRel exists)
				default to ContractLineRel.ItemNumber

        VendorItem          
			if (PurchaseOrderLine entered)
				default to PurchaseOrderLineRel.VendorItem
			else
			if (ContractLineRel exists)
				default to ContractLineRel.VendorItem

        ItemDescription     
			if (PurchaseOrderLine entered)
				default to PurchaseOrderLineRel.Description
			else
			if (ContractLineRel exists)
				default to ContractLineRel.ItemDescription

        InvoiceQuantity
			if (PurchaseOrderLine entered)
				default to PurchaseOrderLineRel.DerivedOpenToPayablesInvoiceQuantity
			else
			if (ContractLineRel exists)
				default to ContractLineRel.DerivedRemainingQuantityOrdered

        InvoiceUnitCost
			if (PurchaseOrderLine entered)
				default to PurchaseOrderLineRel.EnteredUnitCost
			else
			if (ContractLineRel exists)
				if (ContractLineRel.ServiceCode.Amount)
					default to ContractLineRel.DerivedRemainingAmountOrdered
				else
					default to ContractLineRel.BaseCost	

        TaxCode
        	if  (PurchaseOrderLine entered)
        		default to PurchaseOrderLineRel.TaxCode
			else
			if (ContractLineRel exists)
				default to ContractLineRel.TaxCode

        MatchDetailKey      
			if (PurchaseOrderLine entered)
				default to PurchaseOrderLineRel.MatchDetailKey

        Location			
			if (PurchaseOrderLine entered)
				default to PurchaseOrderLineRel.ShipToLocation

        InvoiceUOM                
			if (PurchaseOrderLine entered)

				default to PurchaseOrderLineRel.VendorPriceUOM
			else
			if (ContractLineRel exists)
				default to ContractLineRel.UOM.UnitOfMeasure

	Rule Blocks

	Actions
		Create is a Create Action

			Entrance Rules
				LocalPurchaseOrder = DerivedPurchaseOrder
				LocalContract      = DerivedContract 

				if (PurchaseOrderLine entered 
				and Item not entered 
				and VendorItem not entered
				and DocumentInterfaceInvoice.UseResequenceLineNumber)
					if (PurchaseOrderLineResequenceRel exists)
						PurchaseOrderLine = PurchaseOrderLineResequenceRel.PurchaseOrderLine 

				if (DocumentInterfaceInvoice.SystemAssignedInvoice entered)
					for each DocumentInterfaceInvoice.PayablesInvoiceRel.PayablesInvoiceDetailRel
						if (each.Item = Item
						or  each.VendorItem = VendorItem)
							confirmation required
								"ItemAlreadyExistsOnPartiallyInterfacedInvoice;ContinueWithAdd?"

		Update is an Update Action
			Entrance Rules
				LocalPurchaseOrder = DerivedPurchaseOrder
				LocalContract      = DerivedContract 

				if (PurchaseOrder changed
				or  PurchaseOrderLine changed 
				or  InterfacedPurchaseOrder changed 
				or  InterfacedPOCode changed 

				or  ContractLine changed 
				or  Item  changed 
				or  VendorItem changed) 
					for each OldDocumentInterfaceDistributionRel
						invoke FastUpdate each 
							invoked.PurchaseOrder			= PurchaseOrder
							invoked.PurchaseOrderLine		= PurchaseOrderLine
							invoked.InterfacedPurchaseOrder	= InterfacedPurchaseOrder
							invoked.InterfacedPOCode		= InterfacedPOCode
							invoked.Contract				= Contract
							invoked.ContractLine			= ContractLine
							invoked.Item					= Item
							invoked.VendorItem				= VendorItem

		Delete is a Delete Action

		PopulateItem is an Instance Action
			Action Rules
				LocalPurchaseOrder = DerivedPurchaseOrder
				LocalContract      = DerivedContract 
				if  (Item not entered 
				and PurchaseOrderLine not entered)
					for each PurchaseOrderRel.PurchaseOrderLine set
						if (each.PurchaseOrder = LocalPurchaseOrder
						and each.EnteredUnitCost = InvoiceUnitCost
						and each.Quantity = InvoiceQuantity)
							PurchaseOrderLine = each.PurchaseOrderLine
							Item = each.Item
							VendorItem = each.VendorItem
							end for each

		FastDelete is a Delete Action
			restricted
			bypass relational integrity rules
					
		InterfaceDetails is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup   is a FinanceEnterpriseGroup
				PrmCompany					is like PayablesCompany
		        InvoiceProcess          	is AlphaUpper size 1
		            States
		                Add            value is "A"
		                MatchSubmitOrRelease value is "R"
				PrmProcessType				is AlphaUpper size 1
		            States
		                MatchInvoices    	value is "M"
		                ExpenseInvoices		value is "E"
		                Both				value is "B"
		        AllowMatchItemOrVendorItem  is Boolean
				PrmVendorClass				is like VendorClass		                
				PrmDocumentInterfaceInvoice is like DocumentInterfaceInvoice
				PrmInterfaceRun				is a PayablesInvoiceInterfaceResult
				
				ErrorOccurred					is Boolean

			Local Fields
				LocalInterfacedDetailsCount			is Numeric 10
			
			Sort Order
				FinanceEnterpriseGroup
				DocumentInterfaceInvoice
				
			Instance Selection
				where (DocumentInterfaceInvoice.InterfaceRunID = PrmInterfaceRun
				and    DocumentInterfaceInvoice.SystemAssignedInvoice entered)

			Rule Blocks
				SetError
					invoke Create DocumentInterfaceError
						invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
						invoked.DocumentInterfaceInvoice 		= DocumentInterfaceInvoice
						invoked.DocumentInterfaceDetail 		= DocumentInterfaceDetail
						invoked.ErrorMessage					= ErrorMessage
					invoke Update PrmInterfaceRun
						invoked.Status 							= 2
			
			Action Rules
				Empty Set Rules
						
					invoke InterfaceDetailDistributions DocumentInterfaceDetail
						invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
						invoked.PrmCompany					= PrmCompany
						invoked.InvoiceProcess				= InvoiceProcess
						invoked.PrmProcessType				= PrmProcessType
						invoked.PrmVendorClass				= PrmVendorClass
						invoked.PrmDocumentInterfaceInvoice = PrmDocumentInterfaceInvoice
						invoked.PrmInterfaceRun				= PrmInterfaceRun

				Set Rules
						
					Exit Rules
						invoke Update PrmInterfaceRun
							invoked.InterfacedDetailsCount			= LocalInterfacedDetailsCount

						invoke InterfaceDetailDistributions DocumentInterfaceDetail
							invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
							invoked.PrmCompany					= PrmCompany
							invoked.InvoiceProcess				= InvoiceProcess
							invoked.PrmProcessType				= PrmProcessType
							invoked.PrmVendorClass				= PrmVendorClass
							invoked.PrmDocumentInterfaceInvoice = PrmDocumentInterfaceInvoice
							invoked.PrmInterfaceRun				= PrmInterfaceRun


				Instance Rules
					LocalInterfacedDetailsCount			+= 1

					LocalPurchaseOrder = DerivedPurchaseOrder
					LocalContract      = DerivedContract 
					
					ErrorOccurred = false
					
					display "ProcessItem<Item>ErrorOccurred=<ErrorOccurred>ErrorMessage=<ErrorMessage>Cntr<LocalContract>"

					if  (!ErrorOccurred
					and  !Interfaced)
					
						initialize ErrorOccurred

						if (LocalPurchaseOrder entered)
							initialize POLineLookup
							POLineLookup.Company				= DocumentInterfaceInvoice.Company
							POLineLookup.PurchaseOrder			= LocalPurchaseOrder
							POLineLookup.PurchaseOrderLine		= PurchaseOrderLine
							POLineLookup.Item					= Item
							POLineLookup.VendorItem				= VendorItem
							POLineLookup.Description			= ItemDescription
							POLineLookup.Location				= Location
							POLineLookup.AllowMatchItemOrVendorItem = AllowMatchItemOrVendorItem
							POLineLookup.InterfaceType 			= "I"
							LocalTrigger						= POLineLookup.ExecuteLookup

							if (PurchaseOrderLine entered
							and PurchaseOrderLine != POLineLookup.PurchaseOrderLine)
								invoke FastUpdate DocumentInterfaceAddOnChargeRel
									invoked.PurchaseOrderLine	= POLineLookup.PurchaseOrderLine

							for each DocumentInterfaceDistributionRel
								invoke FastUpdate each 
									invoked.PurchaseOrderLine	= POLineLookup.PurchaseOrderLine
									invoked.Item				= POLineLookup.Item
									invoked.VendorItem			= POLineLookup.VendorItem

							PurchaseOrderLine					= POLineLookup.PurchaseOrderLine
							Item							= POLineLookup.Item
							VendorItem						= POLineLookup.VendorItem
						

						if (LocalPurchaseOrder entered
						and POLineLookup.OutputErrorNumber entered)
							ErrorOccurred					= true
							ErrorMessage					= POLineLookup.OutputErrorMessage

							include SetError
						else					
						
						if (!ErrorOccurred
						and  DocumentInterfaceInvoice.ServiceContract entered
						and  ContractLine not entered)
							display "LookUpContractLine;Cntr<LocalContract>Item<Item>"
							if  (AllowMatchItemOrVendorItem)
								if  (Item entered
								and  instance count of ContractLineByItemRel = 1)
									NewContractLine			= first ContractLineByItemRel.ContractLine
									display "NewCntrLine(1)<NewContractLine>"
								else
								if  (VendorItem entered
								and  instance count of ContractLineByVendorItemRel = 1)
									NewContractLine			= first ContractLineByVendorItemRel.ContractLine
								else
								if  (ItemDescription entered
								and  instance count of ContractLineByItemDescriptionRel = 1)
									NewContractLine			= first ContractLineByItemDescriptionRel.ContractLine
							else								
								if  (Item entered
								and  instance count of ContractLineByItemRel = 1
								and (VendorItem not entered
								or   first ContractLineByItemRel.VendorItem = VendorItem))
									NewContractLine			= first ContractLineByItemRel.ContractLine
									display "NewCntrLine(2)<NewContractLine>"
								else
								if  (VendorItem entered
								and  instance count of ContractLineByVendorItemRel = 1
								and (Item not entered
								or   first ContractLineByItemRel.ItemNumber = Item))
									NewContractLine			= first ContractLineByVendorItemRel.ContractLine
								else
								if  (ItemDescription entered
								and  instance count of ContractLineByItemDescriptionRel = 1
								and (Item not entered
								or   first ContractLineByItemRel.ItemNumber = Item)
								and (VendorItem not entered
								or   first ContractLineByItemRel.VendorItem = VendorItem))
									NewContractLine			= first ContractLineByItemDescriptionRel.ContractLine

							for each DocumentInterfaceDistributionRel
								invoke FastUpdate each 
									invoked.ContractLine		= NewContractLine

							ContractLine 					= NewContractLine

						if (DocumentInterfaceInvoice.ServiceContract entered
						and !ContractLineRel exists)
							ErrorOccurred					= true
							ErrorMessage					= ContractLineNotFoundMsg

							include SetError

					if  ((DocumentInterfaceInvoice.ServiceContract entered
					and  PayablesInvoiceDetailServiceContractRel exists)
					or   (LocalPurchaseOrder entered
					and   PayablesInvoiceDetailRel exists))
						NextSentence = true
					else
					if  (!ErrorOccurred)


						LocalContract = DerivedContract
					    LocalContractLine = ContractLine
						if  (DocumentInterfaceInvoice.InvoiceType not = "C"
						and  DocumentInterfaceInvoice.InvoiceType not = "C")
							if (DocumentInterfaceInvoice.ServiceContract entered)
								LocalContract = LocalContract
							    LocalContractLine = ContractLine
							    initialize LocalPOLine
							else
							if  (PurchaseOrderLineRel.Contract entered)
								LocalPOLine = PurchaseOrderLine
								LocalContract = PurchaseOrderLineRel.Contract
							    LocalContractLine = PurchaseOrderLineRel.ContractLine
							else
							    LocalPOLine = PurchaseOrderLine
							    initialize LocalContract
							    initialize LocalContractLine

						if  ((DocumentInterfaceInvoice.InvoiceType = "C"
						or    DocumentInterfaceInvoice.InvoiceType = "D")
						and  (LocalPurchaseOrder entered
						or    DocumentInterfaceInvoice.ServiceContract entered))

							if (DocumentInterfaceInvoice.ServiceContract entered)
							    LocalContractLine = ContractLine
							    initialize LocalPOLine
							else
							    LocalPOLine = PurchaseOrderLine
							    initialize LocalContractLine

			                LocalOriginalInvoice 			= DocumentInterfaceInvoice.PayablesInvoiceRel.MatchInvoiceReferenceRel.OriginalInvoice
							LocalOriginalInvoiceDetail 		= first LocalOriginalInvoiceDetailRel.PayablesInvoiceDetail

							if (InvoiceUnitCost < 0)
							    AbsoluteUnitCost = InvoiceUnitCost * -1
							else
							    AbsoluteUnitCost = InvoiceUnitCost




							if  (DocumentInterfaceInvoice.ServiceContract entered
							and (InvoiceQuantity < 0
							or   AbsoluteUnitCost = ContractLineRel.BaseCost))
							    QuantityAdjustment = true
								CostAdjustment = false
							else
							if  (LocalPurchaseOrder entered
							and (InvoiceQuantity < 0
							or   AbsoluteUnitCost = PurchaseOrderLineRel.EnteredUnitCost))
							    QuantityAdjustment = true
								CostAdjustment = false
							else
							    CostAdjustment = true
								QuantityAdjustment = false


							invoke OnlineMemoCreate PayablesInvoiceDetail
								assign result to LocalInvoiceDetailView
								resume on error
									ErrorOccurred		= true
									ErrorMessage	= error message
								fill in fields from this instance
								invoked.Company						= DocumentInterfaceInvoice.Company 
								invoked.PayablesInvoice				= DocumentInterfaceInvoice.SystemAssignedInvoice
								invoked.PurchaseOrder				= LocalPurchaseOrder
								invoked.Contract					= LocalContract
								invoked.PurchaseOrderLine			= PurchaseOrderLine
								invoked.ContractLine				= LocalContractLine

								invoked.CostOrQuantityAdjustment	= true

						        invoked.RecordSource					= "LM"
								invoked.BypassInvoiceErrorChecking		= true
								invoked.FromInterface					= true
								if (PurchaseOrderLine entered
								or  ContractLine entered)
									invoked.BypassDistributionCreate	= true


								if (CostAdjustment)
									invoked.MemoAdjustType				= 1
									if (InvoiceQuantity > 0)
										invoked.EnteredQuantity			= InvoiceQuantity
									else
										invoked.EnteredQuantity			= InvoiceQuantity * -1
												
									invoked.EnteredUOM					= InvoiceUOM
									if (InvoiceUnitCost < 0
									and PurchaseOrderLineRel.ItemType.Inventoried)
										invoked.EnteredUnitCost			= InvoiceUnitCost * -1
									else
									    invoked.EnteredUnitCost				= InvoiceUnitCost
								else
									invoked.MemoAdjustType				= 2
									if (InvoiceQuantity < 0)
										invoked.EnteredQuantity			= InvoiceQuantity
									else
										invoked.EnteredQuantity			= InvoiceQuantity * -1
												
									invoked.EnteredUOM					= InvoiceUOM
									if (InvoiceUnitCost > 0)
										invoked.EnteredUnitCost			= InvoiceUnitCost
									else
										invoked.EnteredUnitCost			= InvoiceUnitCost * -1

						else

						if  (LocalInterfacedDetailRel exists
						and  !PurchaseOrderLineRel.ServiceCode.Amount
						and   ReceiptNumber = LocalInterfacedDetailRel.PurchaseOrderReceipt 
						and   ReceiptLine = LocalInterfacedDetailRel.PurchaseOrderReceiptLine 
						and  !ContractLineRel.ServiceCode.Amount)

							LocalOriginalInvoiceDetail 		= first LocalInterfacedDetailRel.PayablesInvoiceDetail
							round InvoiceUnitCost to nearest LocalInterfacedDetailExactRel.DerivedRoundToCost
							if  (InvoiceUnitCost != LocalInterfacedDetailExactRel.EnteredUnitCost
							or   InvoiceUOM != LocalInterfacedDetailExactRel.EnteredUOM)
								ErrorOccurred			= true
								ErrorMessage			= AdditionalLineMismatchMsg
							else
								LocalInvoiceDetailView	= LocalInterfacedDetailExactRel.PayablesInvoiceDetail
							    invoke Update LocalInterfacedDetailExactRel
									resume on error
										ErrorOccurred		= true
										ErrorMessage		= error message
									invoked.EnteredQuantity					+= InvoiceQuantity
						else


							invoke Create PayablesInvoiceDetail
								assign result to LocalInvoiceDetailView
								resume on error
									ErrorOccurred			= true
									ErrorMessage 			= error message
								invoked.Company						= DocumentInterfaceInvoice.Company 
								invoked.PayablesInvoice				= DocumentInterfaceInvoice.SystemAssignedInvoice
								invoked.PurchaseOrder				= LocalPurchaseOrder
								invoked.Contract					= LocalContract 
								invoked.PurchaseOrderLine			= PurchaseOrderLine
								invoked.ContractLine				= LocalContractLine
								invoked.Item						= Item
								invoked.VendorItem					= VendorItem
								invoked.ItemDescription				= ItemDescription
		
								invoked.EnteredUnitCost				= InvoiceUnitCost
								invoked.EnteredUOM					= InvoiceUOM
						        invoked.EnteredQuantity				= InvoiceQuantity
	
								if  (PurchaseOrderLineRel exists
								and  InvoiceUOM not entered)
									invoked.EnteredUOM					= PurchaseOrderLineRel.VendorPriceUOM
									invoked.EnteredUOMMultiplier		= PurchaseOrderLineRel.VendorPriceUOMMultiplier
								else
								if  (PurchaseOrderLineRel exists
								and  InvoiceUOM not entered)
									invoked.EnteredUOM					= PurchaseOrderLineRel.VendorPriceUOM
									invoked.EnteredUOMMultiplier		= PurchaseOrderLineRel.VendorPriceUOMMultiplier
								else
								if  (PurchaseOrderLineRel exists
								and  ItemUOMRel exists)
									invoked.EnteredUOMMultiplier		= ItemUOMRel.UOMConversion
								else
									if (ContractLineRel.ServiceCode.Amount)
										invoked.VendorPriceUOM			= blank
									else
										invoked.VendorPriceUOM			= ContractLineRel.UOM.UnitOfMeasure
									invoked.VendorPriceUOMMultiplier	= 1
									invoked.VendorBuyUOM				= ContractLineRel.UOM.UnitOfMeasure
									invoked.VendorBuyUOMMultiplier		= 1
									invoked.EnteredUOMMultiplier		= 1
		
								invoked.PurchaseOrderReceipt		= ReceiptNumber
								invoked.PurchaseOrderReceiptLine	= ReceiptLine

								invoked.BuyUOMMatchedQuantity		= BuyUOMMatchedQuantity
								invoked.VendorBuyUOM				= VendorBuyUOM
										
						        invoked.RecordSource				= "LM"
								invoked.Location					= Location
								invoked.TaxCode						= TaxCode
								invoked.TaxAmount					= TaxAmount
								invoked.RetailUnitCost				= RetailUnitCost
								invoked.BypassInvoiceErrorChecking	= true
								if (PurchaseOrderLine entered
								or  ContractLine entered)
									invoked.BypassDistributionCreate	= true
	

						if (ErrorOccurred)

							include SetError
						else
							SystemAssignedInvoiceDetail = LocalInvoiceDetailView.PayablesInvoiceDetail
							Interfaced = true

		InterfaceDetailDistributions is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup   is a FinanceEnterpriseGroup
				PrmCompany					is like PayablesCompany
		        InvoiceProcess          	is AlphaUpper size 1
		            States
		                Add            value is "A"
		                MatchSubmitOrRelease value is "R"
				PrmProcessType				is AlphaUpper size 1
		            States
		                MatchInvoices    	value is "M"
		                ExpenseInvoices		value is "E"
		                Both				value is "B"
				PrmVendorClass				is like VendorClass		                
				PrmDocumentInterfaceInvoice is like DocumentInterfaceInvoice
				PrmInterfaceRun				is a PayablesInvoiceInterfaceResult
				AllowMatchItemOrVendorItem	is Boolean
				
				ErrorOccurred					is Boolean

			Local Fields
		        LocalTransactionTotal 			is an InternationalAmount	
		        LocalFunctionalTotal 			is an InternationalAmount
				LocalAlternateTotal  			is an InternationalAmount
				LocalAlternateTotal2 			is an InternationalAmount
				LocalAlternateTotal3			is an InternationalAmount
				LocalToFunctionalTotal			is an InternationalAmount
				LocalToAlternateTotal			is an InternationalAmount
				LocalToAlternateTotal2			is an InternationalAmount
				LocalToAlternateTotal3			is an InternationalAmount
				LocalProjectTotal				is an InternationalAmount
				LocalReportTotal1    			is an InternationalAmount
				LocalReportTotal2    			is an InternationalAmount
				LocalReportTotal3				is an InternationalAmount
				LocalReportTotal4				is an InternationalAmount
				LocalReportTotal5				is an InternationalAmount
				
				ErrorOccurred					is Boolean

				LocalInterfacedDistributionsCount		is Numeric 10
			
			Sort Order
				FinanceEnterpriseGroup
				DocumentInterfaceInvoice
				
			Instance Selection
				where (DocumentInterfaceInvoice.InterfaceRunID = PrmInterfaceRun
				and    DocumentInterfaceInvoice.SystemAssignedInvoice entered)

			Rule Blocks
				SetError
					invoke Create DocumentInterfaceError
						invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
						invoked.DocumentInterfaceInvoice 		= DocumentInterfaceInvoice
						invoked.DocumentInterfaceDetail 		= DocumentInterfaceDetail
						invoked.ErrorMessage					= ErrorMessage
					invoke Update PrmInterfaceRun
						invoked.Status 							= 2
			
			Action Rules
				Empty Set Rules
						
					invoke InterfaceAddOnCharges DocumentInterfaceAddOnCharge
						invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
						invoked.PrmCompany					= PrmCompany
						invoked.InvoiceProcess				= InvoiceProcess
						invoked.PrmProcessType				= PrmProcessType
						invoked.PrmVendorClass				= PrmVendorClass
						invoked.PrmDocumentInterfaceInvoice = PrmDocumentInterfaceInvoice
						invoked.PrmInterfaceRun				= PrmInterfaceRun

				Set Rules

					Exit Rules 
						invoke InterfaceAddOnCharges DocumentInterfaceAddOnCharge
							invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
							invoked.PrmCompany					= PrmCompany
							invoked.InvoiceProcess				= InvoiceProcess
							invoked.PrmProcessType				= PrmProcessType
							invoked.PrmVendorClass				= PrmVendorClass
							invoked.PrmDocumentInterfaceInvoice = PrmDocumentInterfaceInvoice
							invoked.PrmInterfaceRun				= PrmInterfaceRun

				DocumentInterfaceInvoice Set Rules
					Entrance Rules 
			            initialize LocalTransactionTotal
			            initialize LocalFunctionalTotal
						initialize LocalAlternateTotal
						initialize LocalAlternateTotal2
						initialize LocalAlternateTotal3
						initialize LocalToFunctionalTotal
						initialize LocalToAlternateTotal
						initialize LocalToAlternateTotal2
						initialize LocalToAlternateTotal3
						initialize LocalProjectTotal
						initialize LocalReportTotal1
						initialize LocalReportTotal2
						initialize LocalReportTotal3
						initialize LocalReportTotal4
						initialize LocalReportTotal5
						
					Exit Rules

						if (LocalTransactionTotal entered)

							invoke FastUpdate DocumentInterfaceInvoice.PayablesInvoiceRel
								invoked.TotalDistributionAmount.TransactionTotal		+= LocalTransactionTotal
								invoked.TotalDistributionAmount.FunctionalTotal			+= LocalFunctionalTotal
								invoked.TotalDistributionAmount.AlternateTotal			+= LocalAlternateTotal
								invoked.TotalDistributionAmount.AlternateTotal2			+= LocalAlternateTotal2
								invoked.TotalDistributionAmount.AlternateTotal3			+= LocalAlternateTotal3
								invoked.TotalDistributionAmount.ToFunctionalTotal		+= LocalToFunctionalTotal
								invoked.TotalDistributionAmount.ToAlternateTotal		+= LocalToAlternateTotal
								invoked.TotalDistributionAmount.ToAlternateTotal2		+= LocalToAlternateTotal2
								invoked.TotalDistributionAmount.ToAlternateTotal3		+= LocalToAlternateTotal3
								invoked.TotalDistributionAmount.ProjectTotal			+= LocalProjectTotal
								invoked.TotalDistributionAmount.ReportTotal1			+= LocalReportTotal1
								invoked.TotalDistributionAmount.ReportTotal2			+= LocalReportTotal2
								invoked.TotalDistributionAmount.ReportTotal3			+= LocalReportTotal3
								invoked.TotalDistributionAmount.ReportTotal4			+= LocalReportTotal4
								invoked.TotalDistributionAmount.ReportTotal5			+= LocalReportTotal5

							invoke Update PrmInterfaceRun
								invoked.InterfacedDistributionsCount		+= LocalInterfacedDistributionsCount

				Instance Rules
					ErrorOccurred = false
					LocalPurchaseOrder = DerivedPurchaseOrder
					LocalContract      = DerivedContract 


					if (Interfaced
					and !RecordInError)
						if  (DocumentInterfaceDistributionRel exists)
							for each DocumentInterfaceDistributionRel

								invoke CreateImport PayablesInvoiceDistribution
									assign result to ImportedDistribution
									resume on error
										ErrorOccurred		= true
										ErrorMessage		= error message
									fill in fields from each 
									invoked.Company								= DocumentInterfaceInvoice.Company
									invoked.PayablesInvoice						= DocumentInterfaceInvoice.SystemAssignedInvoice
									invoked.Vendor								= DocumentInterfaceInvoice.Vendor
									invoked.DistributionType 					= "D"
									invoked.DistributionDate					= DocumentInterfaceInvoice.PayablesInvoiceRel.DistributionDate
									invoked.PostingOption						= DocumentInterfaceInvoice.PayablesInvoiceRel.Vendor.VendorClass.PostingOption
									invoked.InvoiceCurrency						= DocumentInterfaceInvoice.PayablesInvoiceRel.InvoiceCurrency
									invoked.GLTCurrencyCode						= DocumentInterfaceInvoice.PayablesInvoiceRel.InvoiceCurrency
									invoked.DistributionAccount					= each.DistributionAccount
									invoked.GLFinanceCodeBlock					= each.DistributionAccount
									invoked.GLTransactionAmount 				= each.DistributionAmount
									invoked.GLTSystem							= "AP"
									invoked.TransactionDate						= DocumentInterfaceInvoice.PayablesInvoiceRel.DistributionDate
									invoked.Description							= each.Description
									if (each.DistributionReference entered)
										invoked.DistributionReference			= each.DistributionReference

									invoked.PurchaseOrder 						= DerivedPurchaseOrder 
									invoked.PurchaseOrderLine 					= PurchaseOrderLine 
									invoked.PurchasingContract					= LocalContract 
									invoked.ContractLine						= ContractLine 
									invoked.PayablesInvoiceDetail 				= SystemAssignedInvoiceDetail 
									invoked.TransientBypassErrorUpdate 			= true

									if (each.TaxCode entered)
										if (each.TaxableAmount not entered)
											invoked.TaxableAmount 				= InvoiceUnitCost * InvoiceQuantity 
										if (each.TaxRate not entered)
											invoked.TaxRate 					= (each.DistributionAmount / (InvoiceUnitCost * InvoiceQuantity))

								if (ErrorOccurred)
									end for each 
								else
									LocalInterfacedDistributionsCount						+= 1
									LocalDistribution										= ImportedDistribution.PayablesInvoiceDistribution

									invoke FastDelete


									if  (each.TaxCode entered		
									and ((TaxEntityRel.UseTaxCodeAccounts
									and  each.EntityTaxCodeRel.AccruedOrInvoiced.Accrued)
									or  (!TaxEntityRel.UseTaxCodeAccounts
									and  each.TaxEntityRel.AccruedOrInvoiced.Accrued)))

										NextSentence = true
									else

										LocalTransactionTotal   += LocalDistributionRel.DistributionAmount.CurrencyAmount
										LocalFunctionalTotal 	+= LocalDistributionRel.DistributionAmount.FunctionalAmount.EnteredCurrencyAmount
										LocalAlternateTotal  	+= LocalDistributionRel.DistributionAmount.AlternateAmount.EnteredCurrencyAmount
										LocalAlternateTotal2 	+= LocalDistributionRel.DistributionAmount.AlternateAmount2.EnteredCurrencyAmount
										LocalAlternateTotal3 	+= LocalDistributionRel.DistributionAmount.AlternateAmount3.EnteredCurrencyAmount
										LocalToFunctionalTotal 	+= LocalDistributionRel.DistributionAmount.ToFunctionalAmount.EnteredCurrencyAmount
										LocalToAlternateTotal  	+= LocalDistributionRel.DistributionAmount.ToAlternateAmount.EnteredCurrencyAmount
										LocalToAlternateTotal2 	+= LocalDistributionRel.DistributionAmount.ToAlternateAmount2.EnteredCurrencyAmount
										LocalToAlternateTotal3 	+= LocalDistributionRel.DistributionAmount.ToAlternateAmount3.EnteredCurrencyAmount
										LocalProjectTotal 		+= LocalDistributionRel.DistributionAmount.ProjectAmount.EnteredCurrencyAmount
										LocalReportTotal1    	+= LocalDistributionRel.DistributionAmount.ReportAmount1.EnteredCurrencyAmount
										LocalReportTotal2    	+= LocalDistributionRel.DistributionAmount.ReportAmount2.EnteredCurrencyAmount
										LocalReportTotal3    	+= LocalDistributionRel.DistributionAmount.ReportAmount3.EnteredCurrencyAmount
										LocalReportTotal4    	+= LocalDistributionRel.DistributionAmount.ReportAmount4.EnteredCurrencyAmount
										LocalReportTotal5    	+= LocalDistributionRel.DistributionAmount.ReportAmount5.EnteredCurrencyAmount
						else 
						if  (DocumentInterfaceInvoice.ServiceContract entered
						and  !PayablesInvoiceDetailServiceContractRel.InvoiceDistributionsForContractLineRel exists)
							invoke CreateDistributionsFromInterface PayablesInvoiceDetailServiceContractRel
								resume on error
									ErrorOccurred			= true
									ErrorMessage 			= error message
						else
						if (PurchaseOrderLineRel.Contract entered
						and  !PayablesInvoiceDetailWithContractRel.InvoiceDistributionsForPurchaseOrderLineRel exists)
							invoke CreateDistributionsFromInterface PayablesInvoiceDetailWithContractRel
								resume on error
									ErrorOccurred			= true
									ErrorMessage			= error message
						else
						if (!PayablesInvoiceDetailRel.InvoiceDistributionsForPurchaseOrderLineRel exists)
							invoke CreateDistributionsFromInterface PayablesInvoiceDetailRel
								resume on error
									ErrorOccurred			= true
									ErrorMessage 			= error message
						else
						if (PayablesInvoiceDetailRel.TaxCode entered 
						and !PayablesInvoiceDetailRel.TaxDistributionsRel exists)

							if (TaxCode != PayablesInvoiceDetailRel.TaxCode)
								invoke FastUpdate PayablesInvoiceDetailRel 
									invoked.TaxCode = TaxCode 
									
							invoke CreateDistributionsFromInterface PayablesInvoiceDetailRel
								resume on error
									ErrorOccurred		= true
									ErrorMessage	= error message
								invoked.TaxOnly = true 
					

						if (ErrorOccurred)

							include SetError
						else
							invoke FastDelete

