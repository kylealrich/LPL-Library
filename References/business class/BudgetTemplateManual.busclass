BudgetTemplateManual is a BusinessClass
	owned by GeneralLedger
	prefix is BUDTM 
   
    Ontology
    	symbolic key is BudgetTemplateManual

    Patterns

    Persistent Fields

        AccountingEntity

        AccountingUnit

        GeneralLedgerChartAccount
        	default label is "GlobalLedgerChartAccount" 

        Project

        FinanceDimension1

        FinanceDimension2

        FinanceDimension3

        FinanceDimension4

        FinanceDimension5

        FinanceDimension6

        FinanceDimension7

        FinanceDimension8

        FinanceDimension9

        FinanceDimension10 


		CodeBlockDimensionType
		
		Processed				is Boolean
		PendingRemove			is Boolean
		InitializedFromCube		is Boolean
		
    Transient Fields

	Local Fields
		Counter					is Numeric 3
		
	Derived Fields
        DimensionCode        is a StringField
            type is Alpha 105
            restricted
            AccountingEntity.DerivedSequenceNumber
            AccountingUnit.DerivedSequenceNumber
            GeneralLedgerChartAccount.DerivedSequenceNumber
            Project.DerivedSequenceNumber
			FinanceDimension1.DerivedSequenceNumber
			FinanceDimension2.DerivedSequenceNumber
			FinanceDimension3.DerivedSequenceNumber
			FinanceDimension4.DerivedSequenceNumber
			FinanceDimension5.DerivedSequenceNumber
			FinanceDimension6.DerivedSequenceNumber
			FinanceDimension7.DerivedSequenceNumber
			FinanceDimension8.DerivedSequenceNumber
			FinanceDimension9.DerivedSequenceNumber
			FinanceDimension10.DerivedSequenceNumber

	Conditions
	    IsCreated
	    	restricted
	        when (BudgetTemplateManual exists)
		Pending
			when (!Processed)
		ReadyAndPending
			restricted
			when (BudgetTemplate.Status.Ready
			and !Processed)
		NotReady
			restricted
			when (BudgetTemplate.Status.NotReady)
		CanDelete
			when (NotReady
			or ReadyAndPending)
		CanPendingRemove
			when (!PendingRemove
			and !Pending
			and BudgetTemplate.Status.Ready)
		CanClearPendingRemove	
			when (PendingRemove
			and BudgetTemplate.Status.Ready)
			
	Relations
		AccountingEntityInBasisRel
			one-to-one relation to AccountingEntityHierarchy
			Field Mapping uses SubordinateInTopNode
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.TopNode							= Scenario.Basis.AccountingEntityTopNode
				related.SubordinateAccountingEntity		= AccountingEntity
		AccountingUnitInBasisRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.AccountingUnitStructure = Scenario.Basis.AccountingUnitStructure
				related.AccountingEntity		= AccountingEntity
				related.AccountingUnit		    = AccountingUnit
		ProjectInBasisRel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.ProjectStructure		= Scenario.Basis.ProjectStructure
				related.Project				    = Project
		AccountInBasisRel
			one-to-one relation to ReportingChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.ReportingChart			= Scenario.Basis.ReportingChart
				related.GeneralLedgerChartAccount	= GeneralLedgerChartAccount
		Dimension1InBasisRel
			one-to-one relation to FinanceDimension1Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceDimension1Structure	= Scenario.Basis.FinanceDimension1Structure
				related.FinanceDimension1			= FinanceDimension1
		Dimension2InBasisRel
			one-to-one relation to FinanceDimension2Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceDimension2Structure	= Scenario.Basis.FinanceDimension2Structure
				related.FinanceDimension2			= FinanceDimension2
		Dimension3InBasisRel
			one-to-one relation to FinanceDimension3Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceDimension3Structure	= Scenario.Basis.FinanceDimension3Structure
				related.FinanceDimension3			= FinanceDimension3
		Dimension4InBasisRel
			one-to-one relation to FinanceDimension4Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceDimension4Structure	= Scenario.Basis.FinanceDimension4Structure
				related.FinanceDimension4			= FinanceDimension4
		Dimension5InBasisRel
			one-to-one relation to FinanceDimension5Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceDimension5Structure	= Scenario.Basis.FinanceDimension5Structure
				related.FinanceDimension5			= FinanceDimension5
		Dimension6InBasisRel
			one-to-one relation to FinanceDimension6Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceDimension6Structure	= Scenario.Basis.FinanceDimension6Structure
				related.FinanceDimension6			= FinanceDimension6
		Dimension7InBasisRel
			one-to-one relation to FinanceDimension7Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceDimension7Structure	= Scenario.Basis.FinanceDimension7Structure
				related.FinanceDimension7			= FinanceDimension7
		Dimension8InBasisRel
			one-to-one relation to FinanceDimension8Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceDimension8Structure	= Scenario.Basis.FinanceDimension8Structure
				related.FinanceDimension8			= FinanceDimension8
		Dimension9InBasisRel
			one-to-one relation to FinanceDimension9Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceDimension9Structure	= Scenario.Basis.FinanceDimension9Structure
				related.FinanceDimension9			= FinanceDimension9
		Dimension10InBasisRel
			one-to-one relation to FinanceDimension10Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceDimension10Structure	= Scenario.Basis.FinanceDimension10Structure
				related.FinanceDimension10			= FinanceDimension10
	Sets
		ByCodeBlockDimensionType
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				CodeBlockDimensionType
		ByAccountingUnit
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				AccountingEntity
				AccountingUnit
			Instance Selection
				where (CodeBlockDimensionType.AccountingUnit)
		ByProject
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				Project
			Instance Selection
				where (CodeBlockDimensionType.Project)
		ByAccount
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				GeneralLedgerChartAccount
			Instance Selection
				where (CodeBlockDimensionType.Account)
		ByFinanceDimension1
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				FinanceDimension1
			Instance Selection
				where (CodeBlockDimensionType.Dimension1)
		ByFinanceDimension2
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				FinanceDimension2
			Instance Selection
				where (CodeBlockDimensionType.Dimension2)
		ByFinanceDimension3
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				FinanceDimension3
			Instance Selection
				where (CodeBlockDimensionType.Dimension3)
		ByFinanceDimension4
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				FinanceDimension4
			Instance Selection
				where (CodeBlockDimensionType.Dimension4)
		ByFinanceDimension5
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				FinanceDimension5
			Instance Selection
				where (CodeBlockDimensionType.Dimension5)
		ByFinanceDimension6
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				FinanceDimension6
			Instance Selection
				where (CodeBlockDimensionType.Dimension6)
		ByFinanceDimension7
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				FinanceDimension7
			Instance Selection
				where (CodeBlockDimensionType.Dimension7)
		ByFinanceDimension8
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				FinanceDimension8
			Instance Selection
				where (CodeBlockDimensionType.Dimension8)
		ByFinanceDimension9
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				FinanceDimension9
			Instance Selection
				where (CodeBlockDimensionType.Dimension9)
		ByFinanceDimension10
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				FinanceDimension10
			Instance Selection
				where (CodeBlockDimensionType.Dimension10)

	Field Rules
        AccountingEntity
        	constraint (AccountingUnit entered)
        		"MustEnterAccountingUnit"
        	constraint (AccountingEntityInBasisRel exists)
        		"AccountingEntityMustBeInScenarioBasis"
        AccountingUnit
        	constraint (AccountingEntity entered)
        		"MustEnterAccountingEntity"
        	constraint (AccountingUnit.AccountingUnitType.Posting)
        		"ElementMustBePosting"
        	constraint (AccountingUnitInBasisRel exists)
        		"ElementNotInScenarioBasisStructure"
        GeneralLedgerChartAccount 
        	constraint (GeneralLedgerChartAccount.ChartType.Posting)        
        		"ElementMustBePosting"
        	if (BudgetTemplate.AccountChartSection.BalanceSheet)
        		constraint (GeneralLedgerChartAccount.BalanceSheetAccount)
        			"AccountMustBeBalanceSheet"
        	if (BudgetTemplate.AccountChartSection.IncomeStatement)
        		constraint (GeneralLedgerChartAccount.IncomeStatementAccount)
        			"AccountMustBeIncomeStatement"
        	constraint (AccountInBasisRel exists)
        		"ElementNotInScenarioBasisStructure"
        Project
        	constraint (Project.ProjectType.Posting)        
        		"ElementMustBePosting"
        	constraint (ProjectInBasisRel exists)
        		"ElementNotInScenarioBasisStructure"
        FinanceDimension1
        	constraint (FinanceDimension1.DimensionType.Posting)        
        		"ElementMustBePosting"
        	constraint (Dimension1InBasisRel exists)
        		"ElementNotInScenarioBasisStructure"
        FinanceDimension2
        	constraint (FinanceDimension2.DimensionType.Posting)        
        		"ElementMustBePosting"
        	constraint (Dimension2InBasisRel exists)
        		"ElementNotInScenarioBasisStructure"
        FinanceDimension3
        	constraint (FinanceDimension3.DimensionType.Posting)        
        		"ElementMustBePosting"
        	constraint (Dimension3InBasisRel exists)
        		"ElementNotInScenarioBasisStructure"
        FinanceDimension4
        	constraint (FinanceDimension4.DimensionType.Posting)        
        		"ElementMustBePosting"
        	constraint (Dimension4InBasisRel exists)
        		"ElementNotInScenarioBasisStructure"
        FinanceDimension5
        	constraint (FinanceDimension5.DimensionType.Posting)        
        		"ElementMustBePosting"
        	constraint (Dimension5InBasisRel exists)
        		"ElementNotInScenarioBasisStructure"
        FinanceDimension6
        	constraint (FinanceDimension6.DimensionType.Posting)        
        		"ElementMustBePosting"
        	constraint (Dimension6InBasisRel exists)
        		"ElementNotInScenarioBasisStructure"
        FinanceDimension7
        	constraint (FinanceDimension7.DimensionType.Posting)        
        		"ElementMustBePosting"
        	constraint (Dimension7InBasisRel exists)
        		"ElementNotInScenarioBasisStructure"
        FinanceDimension8
        	constraint (FinanceDimension8.DimensionType.Posting)        
        		"ElementMustBePosting"
        	constraint (Dimension8InBasisRel exists)
        		"ElementNotInScenarioBasisStructure"
        FinanceDimension9
        	constraint (FinanceDimension9.DimensionType.Posting)        
        		"ElementMustBePosting"
        	constraint (Dimension9InBasisRel exists)
        		"ElementNotInScenarioBasisStructure"
        FinanceDimension10 
        	constraint (FinanceDimension10.DimensionType.Posting) 
        		"ElementMustBePosting"
        	constraint (Dimension10InBasisRel exists)
        		"ElementNotInScenarioBasisStructure"

	Rule Blocks
		CreateRules
			initialize CodeBlockDimensionType
			initialize Counter
			if (AccountingEntity entered
			or AccountingUnit entered)
				Counter += 1
				CodeBlockDimensionType	= CodeBlockDimensionType.AccountingUnit
			if (GeneralLedgerChartAccount entered)
				Counter += 1
				CodeBlockDimensionType	= CodeBlockDimensionType.Account
			if (Project entered)
				Counter += 1
				CodeBlockDimensionType	= CodeBlockDimensionType.Project
			if (FinanceDimension1 entered)
				Counter += 1
				CodeBlockDimensionType	= CodeBlockDimensionType.Dimension1
			if (FinanceDimension2 entered)
				Counter += 1
				CodeBlockDimensionType	= CodeBlockDimensionType.Dimension2
			if (FinanceDimension3 entered)
				Counter += 1
				CodeBlockDimensionType	= CodeBlockDimensionType.Dimension3
			if (FinanceDimension4 entered)
				Counter += 1
				CodeBlockDimensionType	= CodeBlockDimensionType.Dimension4
			if (FinanceDimension5 entered)
				Counter += 1
				CodeBlockDimensionType	= CodeBlockDimensionType.Dimension5
			if (FinanceDimension6 entered)
				Counter += 1
				CodeBlockDimensionType	= CodeBlockDimensionType.Dimension6
			if (FinanceDimension7 entered)
				Counter += 1
				CodeBlockDimensionType	= CodeBlockDimensionType.Dimension7
			if (FinanceDimension8 entered)
				Counter += 1
				CodeBlockDimensionType	= CodeBlockDimensionType.Dimension8
			if (FinanceDimension9 entered)
				Counter += 1
				CodeBlockDimensionType	= CodeBlockDimensionType.Dimension9
			if (FinanceDimension10 entered)
				Counter += 1
				CodeBlockDimensionType	= CodeBlockDimensionType.Dimension10
			constraint (Counter entered)
				"MustEnterADimensionElement"
			constraint (Counter = 1)
				"CannotEnterMultipleElements"
				
    Actions
	
    	Create is a Create Action
            Entrance Rules
				constraint (!BudgetTemplate.Status.Processing
				and !BudgetTemplate.Status.Clearing)
					"BudgetTemplate<BudgetTemplate>CannotBeProcessing"
                BudgetTemplateManual  		= DimensionCode
                if (BudgetTemplate.Status.NotReady)
                	Processed = true
            Exit Rules
            	include CreateRules

		Update is an Update Action
			restricted

		Delete is a Delete Action
			valid when (CanDelete)

		PendingRemove is an Instance Action
			valid when (CanPendingRemove)
			Action Rules
				PendingRemove = true

		ClearPendingRemove is an Instance Action
			valid when (CanClearPendingRemove)
			Action Rules
				PendingRemove = false

		SetInitializedFromCube is an Instance Action
			restricted
			Action Rules
				InitializedFromCube = true

		SetAllFinalized is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmScenario						is a Scenario
					default label is "Scenario"
				PrmTemplate						is a BudgetTemplate
					default label is "Template"
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and Scenario					= PrmScenario
				and BudgetTemplate				= PrmTemplate)
			Action Rules
				Instance Rules
					PendingRemove = false
					Processed = true
					InitializedFromCube = false

		DeleteAllForTemplate is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmScenario						is a Scenario
					default label is "Scenario"
				PrmTemplate						is a BudgetTemplate
					default label is "Template"
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and Scenario					= PrmScenario
				and BudgetTemplate				= PrmTemplate)
			Action Rules
				Instance Rules
					invoke Delete
