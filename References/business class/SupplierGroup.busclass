SupplierGroup is a BusinessClass
	owned by procurement
	representative text is "<SupplierGroup>_-_<Description>"
	prefix is SUG

	Ontology
		symbolic key is SupplierGroup 

	Patterns
		implements Proxy for SupplierGroupExtension

	Persistent Fields
		Description
			translatable
		CommodityRegistrationLevel				is Numeric size 2
			States
				Level1	value is 1 
				Level2	value is 2 
				Level3	value is 3 
				Level4	value is 4 
				Level5	value is 5 
				Level6	value is 6
		RequireCommodityRegistration			is Boolean
		RegistrationLoginText					is Alpha size 250  
		CompanyInformationText					is Alpha size 250
			translatable
		CompanyDiversityText					is Alpha size 250
			translatable
		QuestionsText							is Alpha size 250
			translatable
		BankInformationText						is Alpha size 250
			translatable
		CertificationText						is Alpha size 250
			translatable
		CommodityCodesText						is Alpha size 250
			translatable
		ProxyNotificationsText					is Alpha size 250
			translatable
		ContactInformationText					is Alpha size 250
			translatable
		CompleteRegistrationText				is Alpha size 400
			translatable
		IncompleteRegistrationText				is Alpha size 250
			translatable
		RegistrationTermText					is Alpha size 250   
		TermAndCondition						is Text
		SupplierInactivationActorGroup			is AlphaUpper size 30
		NotificationEmailAddress				is an EmailAddress 
			holds pii
		AdminEmailAddress						is an EmailAddress 
			holds pii
		AdditionalContactText					is Alpha size 250
		RequireNewSupplierValidation			is Boolean
		RequireUpdatedSupplierValidation		is Boolean
		AllowDuplicateTaxIds					is Numeric size 2
			States
				YesWithWarning	value is 1
					default label is "YesWithWarning;MatchOnTaxIDAndType"
				No		 		value is 2
					default label is "No;MatchOnTaxIDAndType"
				YesWithWarningTaxIDOnly 	value is 3
					default label is "YesWithWarning;MatchOnTaxIDOnly"
				NoTaxIDOnly             	value is 4
					default label is "No;MatchOnTaxIDOnly"
		AllowDiversitySelect					is Boolean
		AllowCommoditySelect					is Boolean
		AllowProxySelect						is Boolean
		AllowCertificationSelect				is Boolean
		AllowCommodityCodeCertification			is Boolean
		AllowQuestionSelect                     is Boolean
		AllowBankInformationSelect              is Boolean
		TaxCodeDisplay                          is Numeric size 1
			States
				DisplayBothVATAndNonVAT value is 0
				DisplayNonVATOnly       value is 1
				DisplayVATOnly          value is 2
		RequireCertificationAttachment			is Boolean
		AllowNonAwardedView						is Boolean
		AllowBankInformation					is Boolean
		MaskBankInformationDisplay				is Boolean
		MaskBankInformationEntry				is Boolean
		RequireValidBankEntity                  is Boolean
		DisplayEventsToAll						is Boolean
		DisplayContractsToAll					is Boolean
		RequireNoBidReason						is Boolean
		SupplierEmailHelpLink					is a URL	
			restricted
		DisplayGTINAndGLNInSupplierPortal		is Boolean
		DefaultSupplierContactLocation			is Boolean
		TaxIdFormat								is Numeric size 2	
			restricted
			States
				None						value is 0
				StandardFormatNoDelimiter	value is 1
				StandardFormatWithDelimiter	value is 2
		PrimaryContactEmailSubject				is Alpha size 100
		PrimaryContactEmailContent				is RichText
		NotifyNewPrimaryContact					is Boolean
		NotifyPreviousPrimaryContact			is Boolean
		InvoiceHeaderText						is Alpha size 250
		InvoiceLineText							is Alpha size 250
		InvoiceAttachmentText					is Alpha size 250
		InvoiceSummaryText						is Alpha size 250
		InvoiceAddOnChargeText                  is Alpha size 250 
		RequireSubcontractorPaymentAttachment	is Boolean
		AllowDuplicateTaxIdsOnSub				is Numeric size 2
			States
				YesWithWarning	value is 1
					default label is "YesWithWarning;MatchOnTaxIDAndType"
				No		 		value is 2
					default label is "No;MatchOnTaxIDAndType"
				YesWithWarningTaxIDOnly 	value is 3
					default label is "YesWithWarning;MatchOnTaxIDOnly"
				NoTaxIDOnly             	value is 4
					default label is "No;MatchOnTaxIDOnly"
		TaxIdFormatOnSub						is Numeric size 2	
			restricted
			States
				None							value is 0
				StandardFormatNoDelimiter		value is 1
				StandardFormatWithDelimiter		value is 2
		EmailOnContractSubcontractorUpdate		is Boolean
		NotificationEmailAddressOnSub			is an EmailAddress 
			holds pii
		PasswordResetEmailSubject				is Alpha size 100  
			restricted
		PasswordResetEmailContent				is RichText        
			restricted
		SendSupplierPerformanceEmail			is Boolean
		CreateSupplierPerformanceMessage		is Boolean
		DisplayTaxAmount						is Boolean
		SupplierSubmittedInvoiceCompany			is a PayablesCompany
		SendForBuyerCreatedSupplier				is Boolean
		DefaultSupplierSubmittedInvoiceType		is Numeric size 1
			States
				Expense					value is 1
				MatchToPurchaseOrder	value is 2
				ServiceContract			value is 3
		SupplierPrimaryEventAccess				is Boolean
		SupplierEventAccess						is Boolean
		SupplierPrimaryCMAccess					is Boolean
		SupplierCMAccess						is Boolean
		SupplierPrimaryRecallAccess				is Boolean
		SupplierRecallAccess					is Boolean
		SupplierPrimaryItemProposalAccess		is Boolean
		SupplierItemProposalAccess				is Boolean
		SupplierPrimaryEventMetricsAccess		is Boolean
		SupplierEventMetricsAccess				is Boolean
		SupplierPrimaryPlanHolderAccess			is Boolean
		SupplierPlanHolderAccess				is Boolean
		SupplierPrimarySOMInvoiceCreateAccess	is Boolean
		SupplierSOMInvoiceCreateAccess			is Boolean
		SupplierPrimarySOMInvoicesAccess		is Boolean
		SupplierSOMInvoicesAccess				is Boolean
		SupplierPrimarySOMItemsAccess			is Boolean
		SupplierSOMItemsAccess					is Boolean
		SupplierPrimarySOMOrdersAccess			is Boolean
		SupplierSOMOrdersAccess					is Boolean
		SupplierPrimarySOMPaymentsAccess		is Boolean
		SupplierSOMPaymentsAccess				is Boolean
		SupplierPrimaryPerformanceAccess		is Boolean
		SupplierPerformanceAccess				is Boolean
		SupplierPrimarySOMReceiptsAccess		is Boolean
		SupplierSOMReceiptsAccess				is Boolean
		SupplierPrimaryMessagesAccess			is Boolean
		SupplierMessagesAccess					is Boolean
		SupplierPrimaryTermsAccess				is Boolean
		SupplierTermsAccess						is Boolean
		SupplierPrimarySubcontractorAccess		is Boolean
		SupplierSubcontractorAccess				is Boolean
		SupplierPrimaryVendorReturnsAccess      is Boolean
		SupplierVendorReturnsAccess             is Boolean
		SupplierPrimaryRequisitionAccess        is Boolean
		SupplierRequisitionAccess               is Boolean
		UseSupplierPortal						is Boolean
		RequireEmailConfirmation				is Boolean
		LastSupplierGroupQuestionDisplayOrder	is Numeric size 8
		UseConditionalQuestions					is Boolean
		LastQuickLinkDisplayOrder				is Numeric size 8
		DisplayTypeForRegistration				is Boolean
		UseBidTabulationReport					is Boolean
		BidTabulationDefault					is Numeric size 1
			States
				DoNotDisplay					 			value is 0
				DisplayWhenEventAwardedAndClosed 			value is 1
				DisplayWhenEventClosedForBidding 			value is 2
				DisplayWhenEventAwardedAndClosedOrCanceled  value is 4
				DisplayWhenEventClosedForBiddingOrCanceled  value is 5
		NotificationEmailForIDM                 is an EmailAddress     
			default label is "IDMAdministratorEMail"
		QuickRegistration                       is Boolean
    	YellowAlert								is Numeric size 6
    	RedAlert								is Numeric size 6
		HomePageContent							is RichText
		ShowHomePageContent						is Boolean
		CanCreateDialogWithSupplier             is Boolean
		AutoCompare                             is Boolean
			default label is "AutomaticallyRunSupplierVendorCompareWhenChangesAreDone"
		SupplierPrimarySOMAcknowledgementCreateAccess	is Boolean
		SupplierSOMAcknowledgementCreateAccess	is Boolean
		RequireSupplierDescription              is Boolean
			default label is "RequireCompanyInformation"
		SupplierViewVisitNumber                    is Boolean
			default label is "VisitNumber"
		SupplierViewMedicalRecordNumber            is Boolean
			default label is "MedicalRecordNumber"
		SupplierViewCaseID                         is Boolean
			default label is "CaseID"
		SupplierViewProcedure                      is Boolean
			default label is "Procedure"


		SupplierViewPractitioner                   is Boolean
			default label is "Practitioner"	
		SupplierViewNurseCoordinator               is Boolean
			default label is "Coordinator"
		SupplierViewPatientName					   is Boolean
			default label is "PatientName"
		SupplierViewPatientBirthdate			   is Boolean
			default label is "PatientBirthdate"
		SupplierViewPatientGender				   is Boolean
			default label is "PatientGender"
		SupplierViewSupplierOrderNumber            is Boolean
			default label is "SupplierOrderNumber"
		SupplierViewLotNumber                      is Boolean          
			default label is "LotNumber"
		SupplierViewSerialNumber                   is Boolean
			default label is "SerialNumber"
		SupplierViewUniqueDeviceId                 is Boolean
			default label is "UDI"
		SupplierViewGTIN                           is Boolean
			default label is "GTIN"
		SupplierViewManufacturingDate              is Boolean
			default label is "ManufacturingDate"
		SupplierViewExpirationDate                 is Boolean
			default label is "ExpirationDate"

	Transient Fields

		TransientSingleJSONNode			is Alpha 400
		TransientRawText				is RichText

	Local Fields
		LocalCounter				is Numeric size 2
		LocalSupplierGroup			is a SupplierGroup
		LocalPortalAccessChanged	is Boolean

		JSONResponse				is JSONObject
		LocalElementCounter			is Numeric size 4
		LocalArraySize				is Numeric size 4

	Field Groups
		PortalAccessFields
			SupplierPrimaryEventAccess
			SupplierEventAccess
			SupplierPrimaryCMAccess
			SupplierCMAccess
			SupplierPrimaryRecallAccess
			SupplierRecallAccess
			SupplierPrimaryItemProposalAccess
			SupplierItemProposalAccess
			SupplierPrimaryEventMetricsAccess
			SupplierEventMetricsAccess
			SupplierPrimaryPlanHolderAccess
			SupplierPlanHolderAccess
			SupplierPrimarySOMInvoiceCreateAccess
			SupplierSOMInvoiceCreateAccess
			SupplierPrimarySOMInvoicesAccess
			SupplierSOMInvoicesAccess
			SupplierPrimarySOMItemsAccess
			SupplierSOMItemsAccess
			SupplierPrimarySOMOrdersAccess
			SupplierSOMOrdersAccess
			SupplierPrimarySOMPaymentsAccess
			SupplierSOMPaymentsAccess
			SupplierPrimaryPerformanceAccess
			SupplierPerformanceAccess
			SupplierPrimarySOMReceiptsAccess
			SupplierSOMReceiptsAccess
			SupplierPrimaryMessagesAccess
			SupplierMessagesAccess
			SupplierPrimaryTermsAccess
			SupplierTermsAccess
			SupplierPrimarySubcontractorAccess
			SupplierSubcontractorAccess
			SupplierPrimaryVendorReturnsAccess
			SupplierVendorReturnsAccess
			SupplierPrimarySOMAcknowledgementCreateAccess
			SupplierSOMAcknowledgementCreateAccess
			SupplierPrimaryRequisitionAccess
			SupplierRequisitionAccess

	Field Rules
		Description
			required
		CommodityRegistrationLevel
			required
 		CompanyInformationText
 			initial value is "Enter your company information here. See My Account after registration for entering additional required or optional information. Note that fields with an * are required."
 			default to "Enter your company information. See My Account after registration for entering additional required or optional information. Note that fields with an * are required."
 		CompanyDiversityText
 			initial value is "Select the diversity codes for which your business is certified."
 			default to "Select the diversity codes for which your business is certified."
 		QuestionsText
 			initial value is "Answer the following questions related to your company. Required answers and attachments have a required text statement."
 			default to "Answer the following questions related to your company. Required answers and attachments have a required text statement."
		CommodityCodesText
			initial value is "Select the commodity codes for which you want to get future bid notifications."
			default to "Select the commodity codes for which you want to get future bid notifications."
		ProxyNotificationsText
			initial value is "Enter contacts that will be notified of event updates, but cannot take action on those events and do not have a separate user name and password."
			default to "Enter contacts that will be notified of event updates, but cannot take action on those events and do not have a separate user name and password."
		BankInformationText
			initial value is "Enter information about banks and bank accounts."
			default to "Enter information about banks and bank accounts."
		CertificationText
			initial value is "Enter certification information: an effective date is required for the certification."
			default to "Enter certification information: an effective date is required for the certification."
		ContactInformationText	
			initial value is "Update contact information and manage commodity code registration."
			default to "Update contact information and manage commodity code registration."
		CompleteRegistrationText
			initial value is	"Congratulations! Your account has been set up and you will now receive email notifications of events related to commodity codes for which you registered. You can respond to those events through this account. Select My Account or any menu item to proceed."
			default to			"Congratulations! Your account has been set up and you will now receive email notifications of events related to commodity codes for which you registered. You can respond to those events through this account. Select My Account or any menu item to proceed."
		IncompleteRegistrationText
			initial value is "Your account has been set up, however your registration is not complete for the following reasons:"
			default to "Your account has been set up, however your registration is not complete for the following reasons:"

		TermAndCondition
			if (UseSupplierPortal)
				required
		NotificationEmailAddress
			if (RequireNewSupplierValidation
			or	RequireUpdatedSupplierValidation)
				required
		AdminEmailAddress
			required
		AdditionalContactText
			initial value is "Enter information for other contacts in your company. These contacts can respond to events, and have additional user names and passwords."
			default to "Enter information for other contacts in your company. These contacts can respond to events, and have additional user names and passwords."
		AllowDuplicateTaxIds
			required
		UseConditionalQuestions
			if (UseConditionalQuestions changed)
				constraint (UseConditionalQuestions = true)
					"CannotChangeUseConditionalQuestionsToFalse"
				if (UseConditionalQuestions = true)
					invoke CreateSupplierQuestionsUsingSupplierQuestionResponse SupplierQuestionResponse					
						invoked.PrmSupplierGroup		= SupplierGroup
					AllowQuestionSelect = true
		QuickRegistration
			if (QuickRegistration = true)
				constraint (SupplierGroupExtension.UseVendormate = false)
					"ToUseQuickRegistrationThe_'AllowSuppliersToPopulateRegistrationInformationFromVendormate'FieldMustBeUnselected"
				AllowDiversitySelect = false
				AllowCertificationSelect = false
				AllowCommodityCodeCertification = false
				AllowProxySelect = false
		AllowBankInformation
			if (AllowBankInformation changed
			and AllowBankInformation = true)
				invoke UpdateSupplierBankInformationCountry
			if (AllowBankInformation = false)
				RequireValidBankEntity     = false
				AllowBankInformationSelect = false
		AllowCommoditySelect
			if (AllowCommoditySelect = false)
				AllowCommodityCodeCertification = false
		AllowCertificationSelect
			if (AllowCertificationSelect = false)
				AllowCommodityCodeCertification = false
		RequireUpdatedSupplierValidation
			if (RequireUpdatedSupplierValidation)
				constraint (RequireNewSupplierValidation)
					"IfValidationRequiredForUpdatedSuppliers;ValidationMustAlsoBeRequiredForNewSuppliers"
		RequireCommodityRegistration
			if (RequireCommodityRegistration
			and UseSupplierPortal)
				constraint (AllowCommoditySelect)
					"DisplayCommodityCodesDuringRegistrationMustBeCheckedIfRequireCommodityCodesIsChecked"
		SupplierEmailHelpLink
			if (UseSupplierPortal)
				default to "http://gmail.com"
		PrimaryContactEmailSubject
			initial value is "The primary contact for your company has changed"
			default to "The primary contact for your company has changed"
		PrimaryContactEmailContent
			initial value is "You are now the primary contact for your company."
			default to "You are now the primary contact for your company."
		InvoiceHeaderText
			initial value is "Enter basic Invoice information. If invoice date has not been entered, it will default to the current corporate date. "
			default to "Enter basic Invoice information. If invoice date has not been entered, it will default to the current corporate date. "
		InvoiceLineText
			initial value is	"To add a line, use Create Detail. If making changes to a line, click the Save button or Next after changes are complete."
			default to			"To add a line, use Create Detail. If making changes to a line, click the Save button or Next after changes are complete."
		InvoiceAttachmentText
			initial value is	"Please attach a scanned copy of the invoice."
			default to			"Please attach a scanned copy of the invoice."
		InvoiceSummaryText
			initial value is "Click the Submit button to submit this Invoice immediately."
			default to "Click the Submit button to submit this Invoice immediately."
		InvoiceAddOnChargeText 
			initial value is "To add a line, use Add or Create actions. If making changes, click Save or Next after changes are complete."
			default to "To add a line, use Add or Create actions. If making changes, click Save or Next after changes are complete."
		AllowDuplicateTaxIdsOnSub
			default to 1
		NotificationEmailAddressOnSub
			if (UseSupplierPortal
			and EmailOnContractSubcontractorUpdate)
					required

		SupplierPrimaryEventAccess
			if (SupplierPrimaryEventAccess = true
			and !SupplierPrimaryEventAccessRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea
					invoked.SecurityClass		= "SupplierEventAccess_ST"

		SupplierEventAccess
			if (SupplierEventAccess = true
			and !SupplierContactEventAccessRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea
					invoked.SecurityClass		= "SupplierEventAccess_ST"

		SupplierPrimaryPlanHolderAccess
			if (SupplierPrimaryPlanHolderAccess)
				constraint (SupplierPrimaryEventAccess)
					"MustCheckViewAndRespondToSourcingEventsToCheckViewPlanHolders"
			if (SupplierPrimaryPlanHolderAccess = true
			and !SupplierPrimaryPlanHolderAccessRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierPlanHolderAccess_ST"	
					
		SupplierPlanHolderAccess
			if (SupplierPlanHolderAccess)
				constraint (SupplierEventAccess)
					"MustCheckViewAndRespondToSourcingEventsToCheckViewPlanHolders"
			if (SupplierPlanHolderAccess = true
			and !SupplierContactPlanHolderAccessRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierPlanHolderAccess_ST"	

		SupplierPrimaryEventMetricsAccess
			if (SupplierPrimaryEventMetricsAccess)
				constraint (SupplierPrimaryEventAccess)
					"MustCheckViewAndRespondToSourcingEventsToCheckViewEventMetrics"
			if (SupplierPrimaryEventMetricsAccess = true
			and !SupplierPrimaryEventMetricsAccessRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea
					invoked.SecurityClass		= "SupplierEventMetricsAccess_ST"

		SupplierEventMetricsAccess
			if (SupplierEventMetricsAccess)
				constraint (SupplierEventAccess)
					"MustCheckViewAndRespondToSourcingEventsToCheckViewEventMetrics"
		
			if (SupplierEventMetricsAccess = true
			and !SupplierContactEventMetricsAccessRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea
					invoked.SecurityClass		= "SupplierEventMetricsAccess_ST"

		SupplierPrimaryCMAccess
			if (SupplierPrimaryCMAccess = true
			and !SupplierPrimaryCMAccessRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea
					invoked.SecurityClass		= "SupplierCMAccess_ST"

		SupplierCMAccess
			if (SupplierCMAccess = true
			and !SupplierContactCMAccessRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierCMAccess_ST"	
					
		SupplierPrimaryTermsAccess
			if (SupplierPrimaryTermsAccess)
				constraint (SupplierPrimaryCMAccess)
					"MustCheckViewContractsToCheckNegotiateTerms"  
			
			if (SupplierPrimaryTermsAccess = true
			and !SupplierPrimaryTermsAccessRel exists)
				invoke Create RoleSecurityClass
					invoked.Role			= "SupplierPrimaryContact_ST"
					invoked.DataArea		= parentcontext.dataarea
					invoked.SecurityClass	= "SupplierTermsAccess_ST"

		SupplierTermsAccess
			if (SupplierTermsAccess)
				constraint (SupplierCMAccess)
					"MustCheckViewContractsToCheckNegotiateTerms"

			if (SupplierTermsAccess = true
			and !SupplierContactTermsAccessRel exists)
				invoke Create RoleSecurityClass
					invoked.Role			= "SupplierContact_ST"
					invoked.DataArea		= parentcontext.dataarea
					invoked.SecurityClass	= "SupplierTermsAccess_ST"

		SupplierPrimarySubcontractorAccess
			if (SupplierPrimarySubcontractorAccess)
				constraint (SupplierPrimaryCMAccess)
					"MustCheckViewContractsToCheckManageSubcontractors"

			if (SupplierPrimarySubcontractorAccess = true
			and !SupplierPrimarySubcontractorAccessRel exists)
				invoke Create RoleSecurityClass
					invoked.Role			= "SupplierPrimaryContact_ST"
					invoked.DataArea		= parentcontext.dataarea
					invoked.SecurityClass	= "SupplierSubcontractorAccess_ST"

		SupplierSubcontractorAccess
			if (SupplierSubcontractorAccess)
				constraint (SupplierCMAccess)
					"MustCheckViewContractsToCheckManageSubcontractors"

			if (SupplierSubcontractorAccess = true
			and !SupplierContactSubcontractorAccessRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierSubcontractorAccess_ST"	
		
		SupplierPrimarySOMOrdersAccess
			if (SupplierPrimarySOMOrdersAccess = true
			and !SOMPOrdersRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtOrders_ST"	
					
		SupplierSOMOrdersAccess
			if (SupplierSOMOrdersAccess = true
			and !SOMCOrdersRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtOrders_ST"	
		
		SupplierPrimarySOMAcknowledgementCreateAccess
			if (SupplierPrimarySOMAcknowledgementCreateAccess = true)
				constraint (SupplierPrimarySOMOrdersAccess)
					"MustCheckViewPurchaseOrdersForPrimaryContactToCreateAcknowledgements"  
			if (SupplierPrimarySOMAcknowledgementCreateAccess = true
			and !SOMPAcknowledgementsRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtAcknowledgements_ST"
					
		SupplierSOMAcknowledgementCreateAccess
			if (SupplierSOMAcknowledgementCreateAccess = true)
				constraint (SupplierSOMOrdersAccess)
					"MustCheckViewPurchaseOrdersForOtherContactsToCreateAcknowledgements"  
			if (SupplierSOMAcknowledgementCreateAccess = true
			and !SOMCAcknowledgementsRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtAcknowledgements_ST"	

		SupplierPrimarySOMReceiptsAccess
			if (SupplierPrimarySOMReceiptsAccess = true
			and !SOMPReceiptsRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtReceipts_ST"	
					
		SupplierSOMReceiptsAccess
			if (SupplierSOMReceiptsAccess = true
			and !SOMCReceiptsRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtReceipts_ST"	
		
		SupplierPrimarySOMInvoicesAccess
			if (SupplierPrimarySOMInvoicesAccess = true
			and !SOMPInvoicesRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtInvoices_ST"	
					
		SupplierSOMInvoicesAccess
			if (SupplierSOMInvoicesAccess = true
			and !SOMCInvoicesRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtInvoices_ST"	
		
		SupplierPrimarySOMPaymentsAccess
			if (SupplierPrimarySOMPaymentsAccess = true
			and !SOMPPaymentsRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtPayments_ST"	
					
		SupplierSOMPaymentsAccess
			if (SupplierSOMPaymentsAccess = true
			and !SOMCPaymentsRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtPayments_ST"	
		
		SupplierPrimarySOMInvoiceCreateAccess
			if (SupplierPrimarySOMInvoiceCreateAccess = true
			and !SOMPCreateInvoicesRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtInvoiceCreate_ST"	
					
		SupplierSOMInvoiceCreateAccess
			if (SupplierSOMInvoiceCreateAccess = true
			and !SOMCCreateInvoicesRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtInvoiceCreate_ST"	
		
		SupplierPrimarySOMItemsAccess
			if (SupplierPrimarySOMItemsAccess = true
			and !SOMPItemsRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtItems_ST"	
					
		SupplierSOMItemsAccess
			if (SupplierSOMItemsAccess = SupplierSOMItemsAccess
			and !SOMCItemsRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtItems_ST"	
		
		SupplierPrimaryVendorReturnsAccess
			if (SupplierPrimaryVendorReturnsAccess = true
			and !SOMPReturnsRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtReturns_ST"	
					
		SupplierVendorReturnsAccess
			if (SupplierVendorReturnsAccess = true
			and !SOMCReturnsRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtReturns_ST"	

		SupplierPrimaryRequisitionAccess
			if (SupplierPrimaryRequisitionAccess = true
			and !SOMPRequisitionsRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierRequisitions_ST"	
					
		SupplierRequisitionAccess
			if (SupplierRequisitionAccess = true
			and !SOMCRequisitionsRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierRequisitions_ST"	

		SupplierPrimaryMessagesAccess
			if (SupplierPrimaryMessagesAccess = true
			and !SOMPMessagesRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierMessagesAccess_ST"	
					
		SupplierMessagesAccess
			if (SupplierMessagesAccess = true
			and !SOMCMessagesRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierMessagesAccess_ST"	
		
		SupplierPrimaryPerformanceAccess
			if (SupplierPrimaryPerformanceAccess = true
			and !SOMPPerformanceRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtPerformance_ST"	
					
		SupplierPerformanceAccess
			if (SupplierPerformanceAccess = true
			and !SOMCPerformanceRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierOrderMgmtPerformance_ST"	
		
		SupplierPrimaryRecallAccess
			if (SupplierPrimaryRecallAccess = true
			and !SupplierPrimaryRecallAccessRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierRecallAccess_ST"	
					
		SupplierRecallAccess
			if (SupplierRecallAccess = true
			and !SupplierContactRecallAccessRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierRecallAccess_ST"	
		
		SupplierPrimaryItemProposalAccess
			if (SupplierPrimaryItemProposalAccess = true
			and !SupplierPrimaryItemProposalAccessRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierPrimaryContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierItemProposalAccess_ST"	
					
		SupplierItemProposalAccess
			if (SupplierItemProposalAccess = true
			and !SupplierContactItemProposalAccessRel exists)
				invoke Create RoleSecurityClass
					invoked.Role				= "SupplierContact_ST"
					invoked.DataArea			= parentcontext.dataarea 
					invoked.SecurityClass 		= "SupplierItemProposalAccess_ST"	

		SupplierSubmittedInvoiceCompany
					
			if (SupplierSubmittedInvoiceCompany entered)
				constraint (SupplierSubmittedInvoiceCompany.VendorGroup = SupplierGroup)
					"MustEnterASupplierSubmittedInvoiceCompanyThatHasTheSameVendorGroupAsTheSupplierGroup;UseSelectToViewAListOfCompanies"
		
		UseSupplierPortal
			default to true
			
		UseBidTabulationReport
			if (UseBidTabulationReport = false)
				constraint (BidTabulationOnEventRel !exists)
					"CannotSetUseBidTabluationReportToFalse;EventsExistThatUseBidTabulation"
			
			if (UseBidTabulationReport)
				constraint (BidTabulationDefault > 0)
					"MustSelectABidTabulationDefaultIfUsingBidTabulationReport"
							
		BidTabulationDefault
			if (UseBidTabulationReport = false)
				BidTabulationDefault = 0
	
	Derived Fields
		RepresentativeText is a StringField
			type is Text
			default label is "SupplierGroup"
			SupplierGroup " - " Description

		NeedsValidation is a ComputeField
			type is Numeric 6
			restricted
			(instance count of NeedsValidationRel)	

		PendingValidation is a ComputeField
			type is Numeric 6
			restricted
			(instance count of PendingValidationRel)	

		Validated is a ComputeField
			type is Numeric 6
			restricted
			(instance count of ValidatedRel)	

		Rejected is a ComputeField
			type is Numeric 6
			restricted
			(instance count of RejectedRel)

		
		SPDisablePortalEvents is a DerivedField 
			type is Boolean 
			restricted
			if (SupplierEventAccessRoleRel exists
			or (!ActorIsPrimaryContact and SupplierEventAccess)
			or (ActorIsPrimaryContact and SupplierPrimaryEventAccess))
				return false
			else
				return true
		
		SPDisablePortalPlanHolder is a DerivedField
			type is Boolean
			restricted
			if (SupplierPlanHolderAccessRoleRel exists
			or (!ActorIsPrimaryContact and SupplierPlanHolderAccess)
			or (ActorIsPrimaryContact and SupplierPrimaryPlanHolderAccess))
				return false
			else
				return true

		SPDisablePortalEventMetrics is a DerivedField
			type is Boolean
			restricted
			if (SupplierEventMetricsAccessRoleRel exists
			or (!ActorIsPrimaryContact and SupplierEventMetricsAccess)
			or (ActorIsPrimaryContact and SupplierPrimaryEventMetricsAccess))
				return false
			else
				return true
		
		SPDisablePortalContractManagement is a DerivedField 
			type is Boolean		
			restricted							
			if ((!ActorIsPrimaryContact and SupplierCMAccess)
			or (ActorIsPrimaryContact and SupplierPrimaryCMAccess)
			or (SupplierCMAccessRoleRel exists))			
				return false
			else 
				return true	
		
		SPDisablePortalItemProposals is a DerivedField 
			type is Boolean		
			restricted							
			if ((!ActorIsPrimaryContact and SupplierItemProposalAccess)
			or (ActorIsPrimaryContact and SupplierPrimaryItemProposalAccess)
			or (SupplierItemProposalAccessRoleRel exists))			
				return false
			else 
				return true	
		
		SPDisablePortalTerms is a DerivedField
			type is Boolean
			restricted
			if (SupplierTermsAccessRoleRel exists
			or (!ActorIsPrimaryContact and SupplierTermsAccess)
			or (ActorIsPrimaryContact and SupplierPrimaryTermsAccess))
				return false
			else
				return true
		
		SPDisablePortalSubcontractors is a DerivedField
			type is Boolean
			restricted
			if ((SupplierSubcontractorAccessRoleRel exists)
			or (!ActorIsPrimaryContact and SupplierSubcontractorAccess)
			or (ActorIsPrimaryContact and SupplierPrimarySubcontractorAccess))
				return false
			else
				return true
		
		SPDisablePortalPOs is a DerivedField
			type is Boolean
			restricted
			if ((!ActorIsPrimaryContact and SupplierSOMOrdersAccess)
			or (ActorIsPrimaryContact and SupplierPrimarySOMOrdersAccess)
			or (SOMOrdersRoleRel exists))
				return false			
			else
				return true
		
		SPDisablePortalAcknowledgments is a DerivedField
			type is Boolean
			restricted
			if ((!ActorIsPrimaryContact and SupplierPrimarySOMAcknowledgementCreateAccess)
			or (ActorIsPrimaryContact and SupplierPrimarySOMAcknowledgementCreateAccess)
			or (SOMAcknowledgmentsRoleRel exists))
				return false
			else
				return true

		SPDisablePortalReceipts is a DerivedField
			type is Boolean
			restricted
			if ((!ActorIsPrimaryContact and SupplierSOMReceiptsAccess)
			or (ActorIsPrimaryContact and SupplierPrimarySOMReceiptsAccess)
			or (SOMReceiptsRoleRel exists))							
				return false
			else 
				return true			

		SPDisablePortalPayments is a DerivedField
			type is Boolean
			restricted
			if ((!ActorIsPrimaryContact and SupplierSOMPaymentsAccess)
			or (ActorIsPrimaryContact and SupplierPrimarySOMPaymentsAccess)
			or (SOMPaymentsRoleRel exists))			
				return false
			else 
				return true	

		SPDisablePortalReturns is a DerivedField
			type is Boolean
			restricted
			if ((!ActorIsPrimaryContact and SupplierVendorReturnsAccess)
			or (ActorIsPrimaryContact and SupplierPrimaryVendorReturnsAccess)
			or (SOMReturnsRoleRel exists))			
				return false
			else 
				return true	

		SPDisablePortalRequisitons is a DerivedField
			type is Boolean
			restricted
			if ((!ActorIsPrimaryContact and SupplierRequisitionAccess)
			or (ActorIsPrimaryContact and SupplierPrimaryRequisitionAccess)
			or (SOMRequisitionsRoleRel exists))			
				return false
			else 
				return true	

		SPDisablePortalInvoices is a DerivedField
			type is Boolean
			restricted
			if ((!ActorIsPrimaryContact and SupplierSOMInvoicesAccess)
			or (ActorIsPrimaryContact and SupplierPrimarySOMInvoicesAccess)
			or (SOMInvoicesRoleRel exists))			
				return false			
			else
				return true
					
		SPDisablePortalInvoiceCreation is a DerivedField
			type is Boolean
			restricted
			if ((!ActorIsPrimaryContact and SupplierSOMInvoiceCreateAccess)			
			or (ActorIsPrimaryContact and SupplierPrimarySOMInvoiceCreateAccess)
			or (SOMCreateInvoicesRoleRel exists))
				return false			
			else
				return true		

		SPDisablePortalItems is a DerivedField
			type is Boolean
			restricted
			if ((!ActorIsPrimaryContact and SupplierSOMItemsAccess)
			or (ActorIsPrimaryContact and SupplierPrimarySOMItemsAccess)
			or (SOMItemsRoleRel exists))			
				return false
			else 
				return true
		
		SPDisablePortalMessages is a DerivedField
			type is Boolean
			restricted
			if (SupplierMessagesAccessRoleRel exists
			or (!ActorIsPrimaryContact and SupplierMessagesAccess)
			or (ActorIsPrimaryContact and SupplierPrimaryMessagesAccess))
				return false
			else
				return true
		
		SPDisablePerformanceScorecard is a DerivedField
			type is Boolean
			restricted
			if ((!ActorIsPrimaryContact and SupplierPerformanceAccess)
			or  (ActorIsPrimaryContact and SupplierPrimaryPerformanceAccess)
			or  (SOMPerformanceRoleRel exists))
				return false			
			else
				return true		
		
		SPDisablePortalRecallManagement is a DerivedField
			type is Boolean
			restricted
			if ((!ActorIsPrimaryContact and SupplierRecallAccess)
			or (ActorIsPrimaryContact and SupplierPrimaryRecallAccess)
			or (SupplierRecallAccessRoleRel exists))		
				return false			
			else 
				return true
				
		ActorIsPrimaryContact is a DerivedField
			type is Boolean
			restricted
			if (actor.agent(SupplierSourceId).IsPrimary)
				return true
			else 
				return false	
										
		NewLine	is a NativeField
			type is Alpha 1
			restricted

		LinkExampleText is a MessageField
			restricted
			"Example:http://www.infor.com/"
			
		ActorBusinessGroup is a DerivedField
			type is like BusinessGroup
			return actor.context.BusinessGroup
			

		SupplierExtEntityEnabled is a DerivedField  
			type is Boolean                         
			restricted
			default label is untranslatable
			return stackconfig(config).IFS_EnableSupplierExtEntity

		SupplierExtEntityGUID is a DerivedField  
			type is Alpha size 36                
			restricted
			default label is untranslatable
			return stackconfig(config).SupplierExtEntity

		SupplyManagementSupplierBaseURL is a DerivedField
			type is Alpha 300
			restricted
			return base url(webapp is SupplyManagementSupplier)

		DerivedPasswordPolicy is a DerivedField
			type is RichText
			default label is untranslatable
			if (SupplierExtEntityEnabled)
				if (SupplierExtEntityGUID != blank)
					invoke GetPasswordPolicy ExternalUserExecutor
						resume on error
						assign result to JSONResponse
						invoked.EntityId = SupplierExtEntityGUID
					LocalElementCounter		= 0
					TransientSingleJSONNode	= JSONResponse select "$.responsestatus"
					if (com.lawson.apps.security.base.Security_ActionBase.isEqualIgnoreCase(TransientSingleJSONNode, "Success"))
						TransientSingleJSONNode = JSONResponse select "$..passwordpolicy[*]"
						if (com.lawson.apps.security.base.Security_ActionBase.isNumeric(TransientSingleJSONNode))
							LocalArraySize = java.lang.Integer.parseInt(TransientSingleJSONNode)
						else
							LocalArraySize = 1
						TransientRawText = blank
						while (LocalElementCounter < LocalArraySize)
							TransientSingleJSONNode = JSONResponse select "$..passwordpolicy[<LocalElementCounter>].visible"
							if (TransientSingleJSONNode = "true")
								TransientSingleJSONNode = JSONResponse select "$..passwordpolicy[<LocalElementCounter>].langtext"
								TransientRawText += TransientSingleJSONNode + DerivedNewLineMF
							LocalElementCounter += 1
					else
						TransientRawText = PasswordPolicyErrorMF
				else
					TransientRawText = MissingIdentityMF
			return TransientRawText

		DerivedNewLineMF is a DerivedField
			type is RichText
			restricted
			return "<br>"

		MissingIdentityMF is a MessageField
			restricted
			"MissingExternalEntityIdentityId"

		PasswordPolicyErrorMF is a MessageField
			restricted
			"PasswordPolicyCannotBeDisplayedAtThisTime"
			
	Conditions
		InvoiceCompanyEntered
			restricted
			when (SupplierSubmittedInvoiceCompany entered)
		QuestionsExist
			restricted
			when (SupplierGroupQuestion set exists
			and   UseConditionalQuestions = false)
		QuestionsConditionalExist
			restricted
			when (SupplierGroupQuestion set exists
			and   UseConditionalQuestions)
		BusinessGroupAllowsAccess
			when ((actor.context.BusinessGroup != ""
			and	   actor.context.BusinessGroup = SupplierGroup)
			or	  (actor.context.BusinessGroup = ""))

		CanViewPlanHolderOrBidTabulations 
			restricted
			when (!SPDisablePortalPlanHolder
			or     UseBidTabulationReport)
		CanViewMetrics
			restricted
			when (!SPDisablePortalEventMetrics)
		CanViewPerformance
			restricted
			when (!SPDisablePerformanceScorecard)
		CanViewRecall
			restricted 
			when (!SPDisablePortalRecallManagement)
		CanViewPerformanceOrMetrics
			restricted 
			when (CanViewMetrics
			or    CanViewPerformance)
		CanViewInvoicesOrPayments 
			restricted 
			when (!SPDisablePortalInvoiceCreation
			or    !SPDisablePortalInvoices
			or    !SPDisablePortalPayments)
		CanViewOrdersOrReceiptsOrAcknowledgements
			restricted 
			when (!SPDisablePortalPOs
			or    !SPDisablePortalReceipts
			or    !SPDisablePortalAcknowledgments)
		CanViewReturnsOrItems 
			restricted 
			when (!SPDisablePortalReturns
			or    !SPDisablePortalItems)
		HasChangeOrderClassifications 
			restricted 
			when (ContractClassificationForChangeOrderRel exists
			and   !SPDisablePortalTerms)
		CanViewNegotiationOrProposals 
			restricted 
			when (!SPDisablePortalTerms)
		SupplierDialogAllowed
			restricted
			when (SupplierPrimaryMessagesAccess			
			or    SupplierMessagesAccess)
		DisplayVAT
			restricted
			when (TaxCodeDisplay = 0
			or    TaxCodeDisplay = 2)
		DisplayNonVAT
			restricted
			when (TaxCodeDisplay = 0
			or    TaxCodeDisplay = 1)
		ShowCredentialingPanel
			restricted
			when (SupplierGroupExtension.UseVendormate
			and   !QuickRegistration)
		ShowBankInformationPanel
			restricted
			when (AllowBankInformationSelect
			and   AllowBankInformation)
		ShowDiversityCodesPanel
			restricted
			when (AllowDiversitySelect
			and  !QuickRegistration)
		ShowQuestionsPanel
			restricted
			when (QuestionsExist
			and   AllowQuestionSelect)
		ShowConditionalQuestionsPanel
			restricted
			when (QuestionsConditionalExist
			and   SupplierGroupQuestionHaveNoConditionalQuestions
			and   AllowQuestionSelect)
		SupplierGroupQuestionHaveNoConditionalQuestions
			restricted
			when (SupplierGroupQuestionsActiveConditionalRel !exists)
		ShowCommodityCodesPanel
			restricted
			when (CommoditySelectWithTree
			and  !QuickRegistration)
		ShowCommodityCodesPanelNoTree
			restricted
			when (CommoditySelectLevelOne
			and  !QuickRegistration)
		ShowCertificationsPanel
			restricted
			when (AllowCertificationSelect
			and  !QuickRegistration)
		ShowProxyNotificationsPanel
			restricted
			when (AllowProxySelect
			and  !QuickRegistration)
		AdminEmail
			restricted
			when (AdminEmailAddress entered)
		CommoditySelectLevelOne
			restricted
			when (AllowCommoditySelect
			and	  CommodityRegistrationLevel.Level1)
		CommoditySelectSupplierContactWithTree
			restricted 
			when (AllowCommoditySelect
			and   CommodityRegistrationLevel.Level2)
		CommoditySelectSupplierContactNoTree 
			when (AllowCommoditySelect
			and  !CommodityRegistrationLevel.Level2)
		CommoditySelectSupplierContactWithTreeNotRegistering
			restricted 
			when (CommodityRegistrationLevel.Level2)
		CommoditySelectSupplierContactNoTreeNotRegistering 
			when (!CommodityRegistrationLevel.Level2)
		CommoditySelectWithTree
			restricted
			when (AllowCommoditySelect
			and	  !CommodityRegistrationLevel.Level1)
		CommoditySelectWithTreeNotRegistering
			when (!CommodityRegistrationLevel.Level1)
		CommoditySelectLevelOneNotRegistering 
			when (CommodityRegistrationLevel.Level1)
		HasReportedNoticesBySupplier
			restricted
			when (RecallNoticesBySupplierRel exists)
		HasContactsWithRoles
			restricted
			when (ContactsWithRolesRel exists)
		SupplierSubcontractorAccessAllowed
			restricted
			when (SupplierPrimarySubcontractorAccess
			or    SupplierSubcontractorAccess) 
		SupplierAccessOK
			restricted
			when (SupplierEventAccess                     
			or	  SupplierCMAccess
			or    SupplierSubcontractorAccess                        
			or    SupplierSOMInvoiceCreateAccess          
			or    SupplierSOMInvoicesAccess               
			or    SupplierSOMItemsAccess    
			or    SupplierSOMAcknowledgementCreateAccess              
			or    SupplierSOMOrdersAccess                 
			or    SupplierSOMPaymentsAccess               
			or    SupplierSOMReceiptsAccess
			or    SupplierVendorReturnsAccess
			or    SupplierRequisitionAccess)               
		PrimarySupplierAccessOK
			restricted
			when (SupplierPrimaryEventAccess                     
			or	  SupplierPrimaryCMAccess
			or    SupplierPrimarySubcontractorAccess                        
			or    SupplierPrimarySOMInvoiceCreateAccess          
			or    SupplierPrimarySOMInvoicesAccess               
			or    SupplierPrimarySOMItemsAccess                  
			or    SupplierPrimarySOMOrdersAccess                 
			or    SupplierPrimarySOMAcknowledgementCreateAccess                 
			or    SupplierPrimarySOMPaymentsAccess               
			or    SupplierPrimarySOMReceiptsAccess
			or    SupplierPrimaryVendorReturnsAccess
			or    SupplierPrimaryRequisitionAccess)
		
		AlertsPageOK 
			restricted 
			when (SPDisablePortalPOs = false
			or    SPDisablePortalInvoices = false
			or    SPDisablePortalReturns = false
			or    SPDisablePortalReturns = false)
		
		ShowSupplierMessages
			restricted
			when (SupplierPrimaryMessagesAccess
			or    SupplierMessagesAccess)
		
		ActorGroupExists
			restricted
			when (ActorGroupRel exists)
			
		UseBidTabulationReportTrue
			restricted
			when (UseBidTabulationReport = true)
		
		NoSuppliersWithBankInformation
			restricted
			when (SuppliersWithBankInformationRel !exists)

		NoSuppliersWithCommodityCodeCertification
			restricted
			when (SuppliersWithCommodityCodeCertificationRel !exists)
			
		CanRequestResponseModification
			restricted
			when (SourcingCompanyRequestModificationRel exists)

		ActorIsAnonymous 
			restricted 
			when (actor.agent(SupplierSourceId).Supplier.IsAnonymous)
		
		ActorIsNotAnonymous
			restricted 
			when (!actor.agent(SupplierSourceId).Supplier.IsAnonymous)
		
		CanDisplayMessages 
			restricted 
			when (SPDisablePortalMessages = false 
			and   ActorIsNotAnonymous)
		
		CanDisplayEvents 
			restricted 
			when (SPDisablePortalEvents = false
			and   ActorIsNotAnonymous)
		
		CanDisplayItemProposals 
			restricted 
			when (SPDisablePortalItemProposals = false
			and   ActorIsNotAnonymous)

		CanDisplayEventMetrics 
			restricted 
			when (SPDisablePortalEventMetrics = false
			and   ActorIsNotAnonymous)
		
		CanDisplayResponseModificationRequests 
			restricted 
			when (CanRequestResponseModification
			and   CanDisplayEvents
			and   ActorIsNotAnonymous)
		
		DisplayAnonymousContracts
			restricted
			when (DisplayContractsToAll
			and   actor.agent(SupplierSourceId).Supplier.IsAnonymous)

		DisplayAnonymousEvents
			restricted
			when (DisplayEventsToAll
			and actor.agent(SupplierSourceId).Supplier.IsAnonymous)

		CanDisplayEventsOrDisplayAnonymousEvents 
			restricted 
			when (CanDisplayEvents
			or    DisplayAnonymousEvents)
		
		SupplierViewAnyVisitInformation
			restricted 
			when (SupplierViewVisitNumber                    
		    or    SupplierViewMedicalRecordNumber            
	    	or    SupplierViewCaseID                         
		    or    SupplierViewProcedure                     
		    or    SupplierViewPractitioner                   
		    or    SupplierViewNurseCoordinator)

		SupplierViewAnyProcedureInformation
			restricted 
			when (SupplierViewAnyVisitInformation
			or    SupplierViewPatientName					   
			or    SupplierViewPatientBirthdate			   
			or    SupplierViewPatientGender				   
			or    SupplierViewSupplierOrderNumber            
			or    SupplierViewLotNumber                                
			or    SupplierViewSerialNumber                   
			or    SupplierViewUniqueDeviceId                 
			or    SupplierViewGTIN                           
			or    SupplierViewManufacturingDate              
			or    SupplierViewExpirationDate)               
		
		NotAllEEMigrationEmailFieldsPopulated
			restricted
			when (SupplierGroupExtension.EEMigrationUsernameChangeEmailSubject not entered
			or    SupplierGroupExtension.EEMigrationUsernameChangeEmailContent not entered
			or    SupplierGroupExtension.EEMigrationUsernameChangeFromEmailAddress not entered)

	Relations
		DiversityCodes is a PayablesDiversityCode set
		
		CertificationCodes is a PayablesCertificationCode set
		
		ActiveSupplierGroupQuestions is a SupplierGroupQuestion set
			Instance Selection
				where (related.Active)
				
		RecallGroupRel 
			one-to-one relation to RecallGroup 
			Field Mapping uses symbolic key 
				related.RecallGroup = SupplierGroup
		
		CustomerGroupRel 
			one-to-one relation to CustomerGroup 
			Field Mapping uses symbolic key 
				related.CustomerGroup = SupplierGroup	
		SupplierGroupQuestionsByDisplayOrder
			one-to-many relation to SupplierGroupQuestion
			Field Mapping uses ByDisplayOrder
				related.SupplierGroup   = SupplierGroup
			Instance Selection
				where (related.Active)
		
		SupplierGroupRequiredQuestionsByDisplayOrder
			one-to-many relation to SupplierGroupQuestion
			Field Mapping uses ByDisplayOrder
				related.SupplierGroup   = SupplierGroup
			Instance Selection
				where (related.Active
				and    related.ResponseRequired)		
				
		SupplierGroupQuestionsActiveConditionalRel
			one-to-many relation to SupplierGroupQuestion
			Field Mapping uses symbolic key
				related.SupplierGroup   = SupplierGroup
			Instance Selection
				where (related.Active
				and    related.HasDirectConditionalQuestions)		
				
		SuppliersWithBankInformationRel
			one-to-many relation to Supplier
			Field Mapping uses symbolic key
				related.SupplierGroup = SupplierGroup
			Instance Selection
				where (related.HasBankInformation)
		
		SuppliersWithCommodityCodeCertificationRel
			one-to-many relation to SupplierCertification
			Field Mapping uses symbolic key
				related.SupplierGroup  = SupplierGroup
			Instance Selection
				where (related.CommodityCode entered)
		
		ActorGroupRel 
			one-to-one relation to ActorGroup
			Field Mapping uses symbolic key
				related.ActorGroup       = SupplierInactivationActorGroup
		
		EmployeeRel 
			one-to-many relation to Employee
			Field Mapping uses symbolic key
				related.HROrganization     = SupplierGroup.BusinessGroup.FinanceEnterpriseGroup.HROrganization
		
		SourcingGroupRel
			one-to-one relation to SourcingGroup
			Field Mapping uses symbolic key
				related.SourcingGroup = SupplierGroup	
				
		SourcingCompanyRequestModificationRel
			one-to-many relation to SourcingCompany
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Company.SourcingGroup  = SourcingGroupRel.SourcingGroup
				and    related.CanRequestResponseModification)			

		SourcingCompanyExtensionRel 
			one-to-many relation to SourcingCompanyExtension
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Company.SourcingGroup  = SourcingGroupRel.SourcingGroup)
		
		SourcingQuestions
			one-to-many relation to Question
			Field Mapping uses symbolic key
				related.ProcurementGroup	= SupplierGroup
			Instance Selection
				where (related.Question.Active
				and	   !related.IsListQuestionWithoutAnswers)

		SupplierHasVATRel
			one-to-many relation to Supplier
			Field Mapping uses symbolic key
				related.SupplierGroup = SupplierGroup
			Instance Selection
				where (related.VATEntered)

		SupplierHasTaxRel
			one-to-many relation to Supplier
			Field Mapping uses symbolic key
				related.SupplierGroup = SupplierGroup
			Instance Selection
				where (related.NonVATTaxEntered)

		NeedsValidationRel
			one-to-many relation to Supplier
			Field Mapping uses symbolic key
				related.SupplierGroup = SupplierGroup
			Instance Selection
				where (related.SupplierStatus.NeedsValidation)

		PendingValidationRel
			one-to-many relation to Supplier
			Field Mapping uses symbolic key
				related.SupplierGroup = SupplierGroup
			Instance Selection
				where (related.SupplierStatus.PendingValidation)

		ValidatedRel
			one-to-many relation to Supplier
			Field Mapping uses symbolic key
				related.SupplierGroup = SupplierGroup
			Instance Selection
				where (related.SupplierStatus.Validated)

		RejectedRel
			one-to-many relation to Supplier
			Field Mapping uses symbolic key
				related.SupplierGroup = SupplierGroup
			Instance Selection
				where (related.SupplierStatus.Rejected)

		SupplierStatusRel
			one-to-one relation to SupplierStatus
			Field Mapping uses symbolic key
				related.SupplierGroup		= SupplierGroup
				related.SupplierStatus		= LocalCounter
	
		VendorGroupRel
			one-to-one relation to VendorGroup
			Field Mapping uses symbolic key
				related.VendorGroup			= SupplierGroup

		ContractGroupRel
			one-to-one relation to ContractGroup
			Field Mapping uses symbolic key
				related.ContractGroup 		= SupplierGroup 


		ContractClassificationForChangeOrderRel
			one-to-many relation to ContractClassification 
			Field Mapping uses symbolic key 
				related.ContractGroup         = SupplierGroup 
			Instance Selection 
				where (related.AllowChangeOrder)
		SupplierContactRoleSTRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor				= actor
				related.ActorRole.Role		= "SupplierContact_ST"
										
		SupplierPrimaryContactRoleSTRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor				= actor
				related.ActorRole.Role		= "SupplierPrimaryContact_ST"
		
		SupplierPrimaryEventAccessRel
			one-to-many relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierEventAccess_ST"	
		
		SupplierContactEventAccessRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierEventAccess_ST"	
		
		SupplierEventAccessRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           = actor
				related.ActorRole.Role  = "SupplierEventAccess_ST"

		SupplierPrimaryPlanHolderAccessRel
			one-to-many relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierPlanHolderAccess_ST"	
		
		SupplierContactPlanHolderAccessRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierPlanHolderAccess_ST"	
		
		SupplierPlanHolderAccessRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           = actor
				related.ActorRole.Role  = "SupplierPlanHolderAccess_ST"


		SupplierPrimaryEventMetricsAccessRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierEventMetricsAccess_ST"	
		
		SupplierContactEventMetricsAccessRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierEventMetricsAccess_ST"	
		
		SupplierEventMetricsAccessRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           = actor
				related.ActorRole.Role  = "SupplierEventMetricsAccess_ST"
		
		SupplierPrimaryCMAccessRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierCMAccess_ST"				
				
		SupplierContactCMAccessRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierCMAccess_ST"
		
		SupplierCMAccessRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           	= actor
				related.ActorRole.Role		= "SupplierCMAccess_ST"
		
		SupplierPrimaryTermsAccessRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierTermsAccess_ST"		
		
		SupplierContactTermsAccessRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierTermsAccess_ST"
		
		SupplierTermsAccessRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           	= actor
				related.ActorRole.Role		= "SupplierTermsAccess_ST"
		
		SupplierPrimarySubcontractorAccessRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierSubcontractorAccess_ST"		
		
		SupplierContactSubcontractorAccessRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierSubcontractorAccess_ST"
		
		SupplierSubcontractorAccessRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           	= actor
				related.ActorRole.Role		= "SupplierSubcontractorAccess_ST"
		
		SOMPOrdersRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea
				related.SecurityClass 		= "SupplierOrderMgmtOrders_ST"					
				
		SOMCOrdersRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierOrderMgmtOrders_ST"					
				
		SOMOrdersRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           	= actor
				related.ActorRole.Role		= "SupplierOrderMgmtOrders_ST"
		
		SOMPAcknowledgementsRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea
				related.SecurityClass 		= "SupplierOrderMgmtAcknowledgements_ST"					
				
		SOMCAcknowledgementsRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierOrderMgmtAcknowledgements_ST"

		SOMAcknowledgmentsRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           	= actor
				related.ActorRole.Role		= "SupplierOrderMgmtAcknowledgements_ST"

		SOMPReceiptsRel  
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierOrderMgmtReceipts_ST"					
				
		SOMCReceiptsRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierOrderMgmtReceipts_ST"					
				
		SOMReceiptsRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           	= actor
				related.ActorRole.Role		= "SupplierOrderMgmtReceipts_ST"
		
		SOMPInvoicesRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea
				related.SecurityClass 		= "SupplierOrderMgmtInvoices_ST"				
								
		SOMCInvoicesRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"
				related.DataArea			= parentcontext.dataarea
				related.SecurityClass 		= "SupplierOrderMgmtInvoices_ST"					
				
		SOMInvoicesRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           	= actor
				related.ActorRole.Role  	= "SupplierOrderMgmtInvoices_ST"
		
		SOMPPaymentsRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierOrderMgmtPayments_ST"
				
		SOMCPaymentsRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"	
				related.DataArea			= parentcontext.dataarea 					
				related.SecurityClass 		= "SupplierOrderMgmtPayments_ST"	

		SOMPaymentsRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           	= actor
				related.ActorRole.Role		= "SupplierOrderMgmtPayments_ST"
		
		SOMPCreateInvoicesRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea
				related.SecurityClass 		= "SupplierOrderMgmtInvoiceCreate_ST"				
				
		SOMCCreateInvoicesRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"
				related.DataArea			= parentcontext.dataarea
				related.SecurityClass 		= "SupplierOrderMgmtInvoiceCreate_ST"				
				
		SOMCreateInvoicesRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           	= actor
				related.ActorRole.Role  	= "SupplierOrderMgmtInvoiceCreate_ST"
		
		SOMPItemsRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea 				
				related.SecurityClass 		= "SupplierOrderMgmtItems_ST"
				
		SOMCItemsRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"
				related.DataArea			= parentcontext.dataarea 				
				related.SecurityClass 		= "SupplierOrderMgmtItems_ST"
				
		SOMItemsRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           	= actor
				related.ActorRole.Role		= "SupplierOrderMgmtItems_ST"

		SOMPReturnsRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea 				
				related.SecurityClass 		= "SupplierOrderMgmtReturns_ST"
				
		SOMCReturnsRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"
				related.DataArea			= parentcontext.dataarea 				
				related.SecurityClass 		= "SupplierOrderMgmtReturns_ST"

		SOMReturnsRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           	= actor
				related.ActorRole.Role		= "SupplierOrderMgmtReturns_ST"
		
		SOMPRequisitionsRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea 				
				related.SecurityClass 		= "SupplierRequisitions_ST"
				
		SOMCRequisitionsRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"
				related.DataArea			= parentcontext.dataarea 				
				related.SecurityClass 		= "SupplierRequisitions_ST"

		SOMRequisitionsRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           	= actor
				related.ActorRole.Role		= "SupplierRequisitions_ST"

		SOMPMessagesRel							
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierMessagesAccess_ST"
				
		SOMCMessagesRel							
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierMessagesAccess_ST"
		
		SupplierMessagesAccessRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           = actor
				related.ActorRole.Role  = "SupplierMessagesAccess_ST"
		
		SOMPPerformanceRel							
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierOrderMgmtPerformance_ST"
				
		SOMCPerformanceRel							
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierOrderMgmtPerformance_ST"
		
		SOMPerformanceRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           	= actor
				related.ActorRole.Role  	= "SupplierOrderMgmtPerformance_ST"
		
		SupplierPrimaryRecallAccessRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierRecallAccess_ST"
				
		SupplierContactRecallAccessRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"	
				related.DataArea			= parentcontext.dataarea 					
				related.SecurityClass 		= "SupplierRecallAccess_ST"	

		SupplierRecallAccessRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           	= actor
				related.ActorRole.Role		= "SupplierRecallAccess_ST"
		
		SupplierPrimaryItemProposalAccessRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierPrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea 
				related.SecurityClass 		= "SupplierItemProposalAccess_ST"
				
		SupplierContactItemProposalAccessRel
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "SupplierContact_ST"	
				related.DataArea			= parentcontext.dataarea 					
				related.SecurityClass 		= "SupplierItemProposalAccess_ST"	

		SupplierPrimaryAllAccessRel 
			one-to-one relation to RoleSecurityClass 
			Field Mapping uses symbolic key
				related.Role					= "SupplierPrimaryContact_ST"
				related.DataArea				= parentcontext.dataarea
				related.SecurityClass			= "IEFINCommonViewInformation_ST"

		SupplierContactAllAccessRel 
			one-to-one relation to RoleSecurityClass 
			Field Mapping uses symbolic key
				related.Role					= "SupplierContact_ST"
				related.DataArea				= parentcontext.dataarea
				related.SecurityClass			= "IEFINCommonViewInformation_ST"

		SupplierAnonymousAllAccessRel 
			one-to-one relation to RoleSecurityClass 
			Field Mapping uses symbolic key
				related.Role					= "SupplierAnonymous_ST"
				related.DataArea				= parentcontext.dataarea
				related.SecurityClass			= "IEFINCommonViewInformation_ST"	

		SupplierItemProposalAccessRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor           	= actor
				related.ActorRole.Role		= "SupplierItemProposalAccess_ST"
 
		RecallNoticesBySupplierRel
			one-to-many relation to RecallNotice
			Field Mapping uses ByReportedBySupplier
				related.ReportedBySupplier.SupplierGroup 	= actor.agent(SupplierSourceId).SupplierGroup
				related.ReportedBySupplier.Supplier		 	= actor.agent(SupplierSourceId).Supplier
				related.ReportedBySupplier.SupplierSourceId = actor.agent(SupplierSourceId).SupplierSourceId
												
	  	SupplierGroupExtension
	  		one-to-one relation to SupplierGroupExtension
	  		Field Mapping uses symbolic key
	  			related.SupplierGroup 			= SupplierGroup
	  			
	  	AnotherSupplierGroupRel
	  		one-to-many relation to SupplierGroup
	  		Field Mapping uses symbolic key
	  		Instance Selection
	  			where (related.SupplierGroup != SupplierGroup)
	  	
	  	ContactsWithRolesRel is a SupplierSourceId set
	  		Instance Selection
	  			where (related.HasContactRoles)
	  			
	  	BidTabulationOnEventRel is a SourcingEvent set 
			Instance Selection
				where (related.SupplierGroupRel.SupplierGroup = SupplierGroup
				and    related.DisplayBidTabulation > 1)      			
	  	
	  	InactivationLandingPageRel is a LandingPage set
	  		Instance Selection
	  			where (related.Description = "InactiveSuppliers")
	  			
		SupplierRel is a Supplier set
		
		SupplierSourceIdRel 
			one-to-many relation to SupplierSourceId
			Field Mapping uses symbolic key
				related.SupplierGroup     = SupplierGroup
		
	Rule Blocks	
			
		SetUseSupplierPortalToNo	
			initialize TermAndCondition
			initialize SupplierEmailHelpLink
			initialize InvoiceHeaderText
			initialize NotificationEmailAddressOnSub
			initialize RegistrationTermText
			initialize RegistrationLoginText	
 			initialize CompanyInformationText
 			initialize CompanyDiversityText
 			initialize QuestionsText
			initialize CommodityCodesText
			initialize ProxyNotificationsText	
			initialize BankInformationText
			initialize CertificationText
			initialize ContactInformationText	
			initialize CompleteRegistrationText
			initialize IncompleteRegistrationText
			initialize AdditionalContactText
			initialize InvoiceLineText
			initialize InvoiceAttachmentText
			initialize InvoiceSummaryText
			initialize InvoiceAddOnChargeText
			RequireSubcontractorPaymentAttachment	= false
			SendSupplierPerformanceEmail			= false
			CreateSupplierPerformanceMessage		= false
			SupplierPrimaryEventAccess				= false
			SupplierEventAccess						= false
			SupplierPrimaryPlanHolderAccess			= false
			SupplierPlanHolderAccess				= false
			SupplierPrimaryCMAccess					= false
			SupplierCMAccess						= false
			SupplierPrimaryRecallAccess				= false
			SupplierRecallAccess					= false
			SupplierPrimaryItemProposalAccess		= false
			SupplierItemProposalAccess				= false
			SupplierPrimaryEventMetricsAccess		= false
			SupplierEventMetricsAccess				= false
			SupplierPrimarySOMInvoiceCreateAccess	= false
			SupplierSOMInvoiceCreateAccess			= false
			SupplierPrimarySOMInvoicesAccess		= false
			SupplierSOMInvoicesAccess				= false
			SupplierPrimarySOMItemsAccess			= false
			SupplierSOMItemsAccess					= false
			SupplierPrimarySOMOrdersAccess			= false
			SupplierSOMOrdersAccess					= false
			SupplierPrimarySOMAcknowledgementCreateAccess	= false
			SupplierSOMAcknowledgementCreateAccess	= false
			SupplierPrimarySOMPaymentsAccess		= false
			SupplierSOMPaymentsAccess				= false
			SupplierPrimaryPerformanceAccess		= false
			SupplierPerformanceAccess				= false
			SupplierPrimarySOMReceiptsAccess		= false
			SupplierSOMReceiptsAccess				= false
			SupplierPrimaryMessagesAccess			= false
			SupplierMessagesAccess					= false
			SupplierPrimaryTermsAccess				= false
			SupplierTermsAccess						= false
			SupplierPrimarySubcontractorAccess		= false
			SupplierSubcontractorAccess				= false
			SupplierPrimaryVendorReturnsAccess      = false
			SupplierVendorReturnsAccess             = false
			SupplierPrimaryRequisitionAccess        = false
			SupplierRequisitionAccess               = false
			initialize SupplierSubmittedInvoiceCompany
			initialize SupplierEmailHelpLink
			DisplayGTINAndGLNInSupplierPortal		= false
			AllowDiversitySelect					= false
			AllowCommoditySelect					= false
			AllowProxySelect						= false
			AllowNonAwardedView						= false
			AllowCertificationSelect				= false
			invoke Update SupplierGroupExtension
				invoked.SupplierGroupExtension.UseVendormate = false
				initialize invoked.SupplierGroupExtension.VendormateCredentialText
				initialize invoked.SupplierGroupExtension.SupplierPerformanceEmailSubject
				initialize invoked.SupplierGroupExtension.SupplierPerformanceEmailContent
				initialize invoked.SupplierGroupExtension.TermsUpdatedEmailSubject
				initialize invoked.SupplierGroupExtension.TermsUpdatedEmailContent
				initialize invoked.SupplierGroupExtension.TermsApprovedEmailSubject
				initialize invoked.SupplierGroupExtension.TermsApprovedEmailContent
				initialize invoked.SupplierGroupExtension.ForgotUsernameEmailSubject
				initialize invoked.SupplierGroupExtension.ForgotUsernameEmailContent

		CreateSupplierStatus
			LocalCounter = 1
			while (LocalCounter < 5)
				if (!SupplierStatusRel exists)
					invoke Create SupplierStatus
						invoked.SupplierGroup  = SupplierGroup
						invoked.SupplierStatus = LocalCounter
				LocalCounter +=1
				if (LocalCounter = 3) 
					LocalCounter +=1
					
	Actions
		Create is a Create Action
			Field Rules
				
				RequireNoBidReason
					default to true

				SendSupplierPerformanceEmail
					if (UseSupplierPortal)
						default to true
				CreateSupplierPerformanceMessage
					if (UseSupplierPortal)
						default to true
					
			Action Rules
				
				if (UseSupplierPortal)
					constraint (SupplierAccessOK)
						"MustCheckAtLeastOneStrategicSourcing,ContractManagement,OrSupplierOrderManagementProcessForOtherContactsInSupplierPortalAccessTabOnLeft"
					
				if (UseSupplierPortal)
					constraint (PrimarySupplierAccessOK)
						"MustCheckAtLeastOneStrategicSourcing,ContractManagement,OrSupplierOrderManagementProcessForPrimaryContactsInSupplierPortalAccessTabOnLeft"
				
				if (UseSupplierPortal)
					AllowDiversitySelect = true
					AllowCommoditySelect = true
					AllowProxySelect     = true
					AllowNonAwardedView  = true
					AllowCertificationSelect = true
					
				SupplierInactivationActorGroup = "INACTIVESUPPLIERS"
				if (!ActorGroupExists)
					
					invoke Create ActorGroup
						invoked.ActorGroup  = "INACTIVESUPPLIERS"
					invoke UpdateTemplate InactivationLandingPageRel
						invoked.ActorGroup     = SupplierInactivationActorGroup
						invoked.effective date = current corporate date
						
				if (YellowAlert entered)
					constraint (YellowAlert >= 0)
						"CannotEnterNegativeDaysInYellowAlert"
					constraint (RedAlert entered)
						"MustEnterRedAlertNumberOfDays"
					constraint (YellowAlert > RedAlert)
						"YellowAlertNumberOfDaysMustBeGreaterThanRedAlertNumberOfDays"

				if (RedAlert entered)
					constraint (RedAlert >= 0)
						"CannotEnterNegativeDaysInRedAlert"
					constraint (YellowAlert entered)
						"MustEnterYellowAlertNumberOfDays"
					constraint (RedAlert < YellowAlert)
						"YellowAlertNumberOfDaysMustBeGreaterThanRedAlertNumberOfDays"

				if (AnotherSupplierGroupRel exists)
					if (PortalAccessFields entered)
						confirmation required 
							"SupplierPortalAccessFieldsEntered;OtherSupplierGroupsWillBeUpdatedWithTheseValues;DoYouWantToContinue?"
						invoke UpdatePortalAccess
							invoked.ParmFromSupplierGroup                           = SupplierGroup
							invoked.ParmSupplierPrimaryEventAccess                  = SupplierPrimaryEventAccess
							invoked.ParmSupplierEventAccess                         = SupplierEventAccess
							invoked.ParmSupplierPrimaryCMAccess                     = SupplierPrimaryCMAccess
							invoked.ParmSupplierCMAccess                            = SupplierCMAccess
							invoked.ParmSupplierPrimaryRecallAccess                 = SupplierPrimaryRecallAccess
							invoked.ParmSupplierRecallAccess                        = SupplierRecallAccess
							invoked.ParmSupplierPrimaryItemProposalAccess           = SupplierPrimaryItemProposalAccess
							invoked.ParmSupplierItemProposalAccess                  = SupplierItemProposalAccess
							invoked.ParmSupplierPrimaryEventMetricsAccess           = SupplierPrimaryEventMetricsAccess
							invoked.ParmSupplierEventMetricsAccess                  = SupplierEventMetricsAccess
							invoked.ParmSupplierPrimaryPlanHolderAccess             = SupplierPrimaryPlanHolderAccess
							invoked.ParmSupplierPlanHolderAccess                    = SupplierPlanHolderAccess
							invoked.ParmSupplierPrimarySOMInvoiceCreateAccess       = SupplierPrimarySOMInvoiceCreateAccess
							invoked.ParmSupplierSOMInvoiceCreateAccess              = SupplierSOMInvoiceCreateAccess
							invoked.ParmSupplierPrimarySOMInvoicesAccess            = SupplierPrimarySOMInvoicesAccess
							invoked.ParmSupplierSOMInvoicesAccess                   = SupplierSOMInvoicesAccess
							invoked.ParmSupplierPrimarySOMItemsAccess               = SupplierPrimarySOMItemsAccess
							invoked.ParmSupplierSOMItemsAccess                      = SupplierSOMItemsAccess
							invoked.ParmSupplierPrimarySOMOrdersAccess              = SupplierPrimarySOMOrdersAccess
							invoked.ParmSupplierSOMOrdersAccess                     = SupplierSOMOrdersAccess
							invoked.ParmSupplierPrimarySOMAcknowledgementCreateAccess = SupplierPrimarySOMAcknowledgementCreateAccess
							invoked.ParmSupplierSOMAcknowledgementCreateAccess		= SupplierSOMAcknowledgementCreateAccess
							invoked.ParmSupplierPrimarySOMPaymentsAccess            = SupplierPrimarySOMPaymentsAccess 
							invoked.ParmSupplierSOMPaymentsAccess                   = SupplierSOMPaymentsAccess
							invoked.ParmSupplierPrimaryPerformanceAccess            = SupplierPrimaryPerformanceAccess
							invoked.ParmSupplierPerformanceAccess                   = SupplierPerformanceAccess
							invoked.ParmSupplierPrimarySOMReceiptsAccess            = SupplierPrimarySOMReceiptsAccess
							invoked.ParmSupplierSOMReceiptsAccess                   = SupplierSOMReceiptsAccess
							invoked.ParmSupplierPrimaryMessagesAccess               = SupplierPrimaryMessagesAccess
							invoked.ParmSupplierMessagesAccess                      = SupplierMessagesAccess
							invoked.ParmSupplierPrimaryTermsAccess                  = SupplierPrimaryTermsAccess
							invoked.ParmSupplierTermsAccess                         = SupplierTermsAccess
							invoked.ParmSupplierPrimarySubcontractorAccess          = SupplierPrimarySubcontractorAccess
							invoked.ParmSupplierSubcontractorAccess                 = SupplierSubcontractorAccess 
							invoked.ParmSupplierPrimaryVendorReturnsAccess          = SupplierPrimaryVendorReturnsAccess
							invoked.ParmSupplierVendorReturnsAccess                 = SupplierVendorReturnsAccess
							invoked.ParmSupplierPrimaryRequisitionAccess            = SupplierPrimaryRequisitionAccess
							invoked.ParmSupplierRequisitionAccess                   = SupplierRequisitionAccess					
					else
					if (PortalAccessFields !entered)
						confirmation required 
							"NoSupplierPortalAccessFieldsEntered;SupplierGroupsWillBeUpdatedWithPortalAccessValuesFromOtherSupplierGroup;DoYouWantToContinue?"
						invoke UpdatePortalAccess
							invoked.ParmFromSupplierGroup                           = first AnotherSupplierGroupRel.SupplierGroup
							invoked.ParmSupplierPrimaryEventAccess                  = first AnotherSupplierGroupRel.SupplierPrimaryEventAccess
							invoked.ParmSupplierEventAccess                         = first AnotherSupplierGroupRel.SupplierEventAccess
							invoked.ParmSupplierPrimaryCMAccess                     = first AnotherSupplierGroupRel.SupplierPrimaryCMAccess
							invoked.ParmSupplierCMAccess                            = first AnotherSupplierGroupRel.SupplierCMAccess
							invoked.ParmSupplierPrimaryRecallAccess                 = first AnotherSupplierGroupRel.SupplierPrimaryRecallAccess
							invoked.ParmSupplierRecallAccess                        = first AnotherSupplierGroupRel.SupplierRecallAccess
							invoked.ParmSupplierPrimaryItemProposalAccess           = first AnotherSupplierGroupRel.SupplierPrimaryItemProposalAccess
							invoked.ParmSupplierItemProposalAccess                  = first AnotherSupplierGroupRel.SupplierItemProposalAccess
							invoked.ParmSupplierPrimaryEventMetricsAccess           = first AnotherSupplierGroupRel.SupplierPrimaryEventMetricsAccess
							invoked.ParmSupplierEventMetricsAccess                  = first AnotherSupplierGroupRel.SupplierEventMetricsAccess
							invoked.ParmSupplierPrimaryPlanHolderAccess             = first AnotherSupplierGroupRel.SupplierPrimaryPlanHolderAccess
							invoked.ParmSupplierPlanHolderAccess                    = first AnotherSupplierGroupRel.SupplierPlanHolderAccess
							invoked.ParmSupplierPrimarySOMInvoiceCreateAccess       = first AnotherSupplierGroupRel.SupplierPrimarySOMInvoiceCreateAccess
							invoked.ParmSupplierSOMInvoiceCreateAccess              = first AnotherSupplierGroupRel.SupplierSOMInvoiceCreateAccess
							invoked.ParmSupplierPrimarySOMInvoicesAccess            = first AnotherSupplierGroupRel.SupplierPrimarySOMInvoicesAccess
							invoked.ParmSupplierSOMInvoicesAccess                   = first AnotherSupplierGroupRel.SupplierSOMInvoicesAccess
							invoked.ParmSupplierPrimarySOMItemsAccess               = first AnotherSupplierGroupRel.SupplierPrimarySOMItemsAccess
							invoked.ParmSupplierSOMItemsAccess                      = first AnotherSupplierGroupRel.SupplierSOMItemsAccess
							invoked.ParmSupplierPrimarySOMOrdersAccess              = first AnotherSupplierGroupRel.SupplierPrimarySOMOrdersAccess
							invoked.ParmSupplierSOMOrdersAccess                     = first AnotherSupplierGroupRel.SupplierSOMOrdersAccess
							invoked.ParmSupplierPrimarySOMAcknowledgementCreateAccess = first AnotherSupplierGroupRel.SupplierPrimarySOMAcknowledgementCreateAccess
							invoked.ParmSupplierSOMAcknowledgementCreateAccess		= first AnotherSupplierGroupRel.SupplierSOMAcknowledgementCreateAccess
							invoked.ParmSupplierPrimarySOMPaymentsAccess            = first AnotherSupplierGroupRel.SupplierPrimarySOMPaymentsAccess 
							invoked.ParmSupplierSOMPaymentsAccess                   = first AnotherSupplierGroupRel.SupplierSOMPaymentsAccess
							invoked.ParmSupplierPrimaryPerformanceAccess            = first AnotherSupplierGroupRel.SupplierPrimaryPerformanceAccess
							invoked.ParmSupplierPerformanceAccess                   = first AnotherSupplierGroupRel.SupplierPerformanceAccess
							invoked.ParmSupplierPrimarySOMReceiptsAccess            = first AnotherSupplierGroupRel.SupplierPrimarySOMReceiptsAccess
							invoked.ParmSupplierSOMReceiptsAccess                   = first AnotherSupplierGroupRel.SupplierSOMReceiptsAccess
							invoked.ParmSupplierPrimaryMessagesAccess               = first AnotherSupplierGroupRel.SupplierPrimaryMessagesAccess
							invoked.ParmSupplierMessagesAccess                      = first AnotherSupplierGroupRel.SupplierMessagesAccess
							invoked.ParmSupplierPrimaryTermsAccess                  = first AnotherSupplierGroupRel.SupplierPrimaryTermsAccess
							invoked.ParmSupplierTermsAccess                         = first AnotherSupplierGroupRel.SupplierTermsAccess
							invoked.ParmSupplierPrimarySubcontractorAccess          = first AnotherSupplierGroupRel.SupplierPrimarySubcontractorAccess
							invoked.ParmSupplierSubcontractorAccess                 = first AnotherSupplierGroupRel.SupplierSubcontractorAccess 	
							invoked.ParmSupplierPrimaryVendorReturnsAccess          = first AnotherSupplierGroupRel.SupplierPrimaryVendorReturnsAccess
							invoked.ParmSupplierVendorReturnsAccess                 = first AnotherSupplierGroupRel.SupplierVendorReturnsAccess									
							invoked.ParmSupplierPrimaryRequisitionAccess            = first AnotherSupplierGroupRel.SupplierPrimaryRequisitionAccess
							invoked.ParmSupplierRequisitionAccess                   = first AnotherSupplierGroupRel.SupplierRequisitionAccess	
			Exit Rules
				include CreateSupplierStatus
				
				if (UseSupplierPortal = false)
					include SetUseSupplierPortalToNo

		UpdateFast is an Update Action
			restricted
			bypass field rules
		
		Update is an Update Action

			Action Rules
				if (UseSupplierPortal)
					constraint (SupplierAccessOK)
						"MustCheckAtLeastOneStrategicSourcing,ContractManagement,OrSupplierOrderManagementProcessInDefaultSupplierPortalSecurityForOtherContacts"
					
				if (UseSupplierPortal)
					constraint (PrimarySupplierAccessOK)
						"MustCheckAtLeastOneStrategicSourcing,ContractManagement,OrSupplierOrderManagementProcessInDefaultSupplierPortalSecurityForPrimaryContacts"
			
				if (TaxCodeDisplay changed)
					if (TaxCodeDisplay = 1)
						constraint (SupplierHasVATRel !exists)
							"CannotChange_Display_These_Tax_CodesToNotDisplayVAT;SuppliersAlreadExistWithVATRegistrationNumberEntered"
					if (TaxCodeDisplay = 2)
						constraint (SupplierHasTaxRel !exists)
							"CannotChange_Display_These_Tax_CodesToDisplayVATOnly;SuppliersAlreadExistWithNonVATTaxIdEntered"
				
				if (AllowBankInformation changed
				and AllowBankInformation = false)
					constraint (NoSuppliersWithBankInformation)
						"MustAllowBankInformation;BankInformationHasAlreadyBeenEnteredForSomeSuppliers"
				
				if (AllowCommodityCodeCertification changed
				and AllowCommodityCodeCertification = false)
					constraint (NoSuppliersWithCommodityCodeCertification)
						"MustAllowCommodityCodeCertification;CertificationsHaveAlreadyBeenEnteredForSomeSuppliers"
				
				if (PortalAccessFields changed)
					LocalPortalAccessChanged = true
				
				if (RequireEmailConfirmation changed
				and RequireEmailConfirmation = true)
					for each SupplierSourceIdRel
						invoke UpdateEmailAddress each

				if (AllowQuestionSelect changed
				and AllowQuestionSelect = false)
					constraint (UseConditionalQuestions = false)
						"DisplayQuestionsDuringRegistrationMustBeCheckedIfUseConditionalQuestionsIsChecked"

					constraint (SupplierGroupQuestionsByDisplayOrder !exists)
						"DisplayQuestionsDuringRegistrationMustBeChecked,QuestionsExistForSupplierGroup"

				if (YellowAlert entered)
					constraint (YellowAlert >= 0)
						"CannotEnterNegativeDaysInYellowAlert"
					constraint (RedAlert entered)
						"MustEnterRedAlertNumberOfDays"
					constraint (YellowAlert > RedAlert)
						"YellowAlertNumberOfDaysMustBeGreaterThanRedAlertNumberOfDays"

				if (RedAlert entered)
					constraint (RedAlert >= 0)
						"CannotEnterNegativeDaysInRedAlert"
					constraint (YellowAlert entered)
						"MustEnterYellowAlertNumberOfDays"
					constraint (RedAlert < YellowAlert)
						"YellowAlertNumberOfDaysMustBeGreaterThanRedAlertNumberOfDays"

			Exit Rules
				if (AnotherSupplierGroupRel exists)
					if (LocalPortalAccessChanged)
						confirmation required
							"SupplierPortalAccessChanged;AllSupplierGroupsWillBeUpdatedWithThisPortalAccess;DoYouWishToContinue?"
						invoke UpdatePortalAccess
							invoked.ParmFromSupplierGroup                           = SupplierGroup
							invoked.ParmSupplierPrimaryEventAccess                  = SupplierPrimaryEventAccess
							invoked.ParmSupplierEventAccess                         = SupplierEventAccess
							invoked.ParmSupplierPrimaryCMAccess                     = SupplierPrimaryCMAccess
							invoked.ParmSupplierCMAccess                            = SupplierCMAccess
							invoked.ParmSupplierPrimaryRecallAccess                 = SupplierPrimaryRecallAccess
							invoked.ParmSupplierRecallAccess                        = SupplierRecallAccess
							invoked.ParmSupplierPrimaryItemProposalAccess           = SupplierPrimaryItemProposalAccess
							invoked.ParmSupplierItemProposalAccess                  = SupplierItemProposalAccess
							invoked.ParmSupplierPrimaryEventMetricsAccess           = SupplierPrimaryEventMetricsAccess
							invoked.ParmSupplierEventMetricsAccess                  = SupplierEventMetricsAccess
							invoked.ParmSupplierPrimaryPlanHolderAccess             = SupplierPrimaryPlanHolderAccess
							invoked.ParmSupplierPlanHolderAccess                    = SupplierPlanHolderAccess
							invoked.ParmSupplierPrimarySOMInvoiceCreateAccess       = SupplierPrimarySOMInvoiceCreateAccess
							invoked.ParmSupplierSOMInvoiceCreateAccess              = SupplierSOMInvoiceCreateAccess
							invoked.ParmSupplierPrimarySOMInvoicesAccess            = SupplierPrimarySOMInvoicesAccess
							invoked.ParmSupplierSOMInvoicesAccess                   = SupplierSOMInvoicesAccess
							invoked.ParmSupplierPrimarySOMItemsAccess               = SupplierPrimarySOMItemsAccess
							invoked.ParmSupplierSOMItemsAccess                      = SupplierSOMItemsAccess
							invoked.ParmSupplierPrimarySOMOrdersAccess              = SupplierPrimarySOMOrdersAccess
							invoked.ParmSupplierSOMOrdersAccess                     = SupplierSOMOrdersAccess
							invoked.ParmSupplierPrimarySOMAcknowledgementCreateAccess	= SupplierPrimarySOMAcknowledgementCreateAccess
							invoked.ParmSupplierSOMAcknowledgementCreateAccess      = SupplierSOMAcknowledgementCreateAccess
							invoked.ParmSupplierPrimarySOMPaymentsAccess            = SupplierPrimarySOMPaymentsAccess 
							invoked.ParmSupplierSOMPaymentsAccess                   = SupplierSOMPaymentsAccess
							invoked.ParmSupplierPrimaryPerformanceAccess            = SupplierPrimaryPerformanceAccess
							invoked.ParmSupplierPerformanceAccess                   = SupplierPerformanceAccess
							invoked.ParmSupplierPrimarySOMReceiptsAccess            = SupplierPrimarySOMReceiptsAccess
							invoked.ParmSupplierSOMReceiptsAccess                   = SupplierSOMReceiptsAccess
							invoked.ParmSupplierPrimaryMessagesAccess               = SupplierPrimaryMessagesAccess
							invoked.ParmSupplierMessagesAccess                      = SupplierMessagesAccess
							invoked.ParmSupplierPrimaryTermsAccess                  = SupplierPrimaryTermsAccess
							invoked.ParmSupplierTermsAccess                         = SupplierTermsAccess
							invoked.ParmSupplierPrimarySubcontractorAccess          = SupplierPrimarySubcontractorAccess
							invoked.ParmSupplierSubcontractorAccess                 = SupplierSubcontractorAccess 
							invoked.ParmSupplierPrimaryVendorReturnsAccess          = SupplierPrimaryVendorReturnsAccess
							invoked.ParmSupplierVendorReturnsAccess                 = SupplierVendorReturnsAccess
							invoked.ParmSupplierPrimaryRequisitionAccess            = SupplierPrimaryRequisitionAccess
							invoked.ParmSupplierRequisitionAccess                   = SupplierRequisitionAccess				
				if (UseSupplierPortal changed
				and UseSupplierPortal = true)
					AllowDiversitySelect = true
					AllowCommoditySelect = true
					AllowProxySelect     = true
					AllowNonAwardedView  = true
					AllowCertificationSelect = true
				
				if (UseSupplierPortal changed
				and UseSupplierPortal = false)
					include SetUseSupplierPortalToNo
					
				include CreateSupplierStatus
		
				if (SupplierPrimaryEventAccess = false
				and SupplierPrimaryEventAccessRel exists)				
					invoke Delete SupplierPrimaryEventAccessRel
				
				if (SupplierEventAccess = false
				and SupplierContactEventAccessRel exists)				
					invoke Delete SupplierContactEventAccessRel
				
				if (SupplierPrimaryPlanHolderAccess = false
				and SupplierPrimaryPlanHolderAccessRel exists)				
					invoke Delete SupplierPrimaryPlanHolderAccessRel
				
				if (SupplierPlanHolderAccess = false
				and SupplierContactPlanHolderAccessRel exists)				
					invoke Delete SupplierContactPlanHolderAccessRel
				
				if (SupplierPrimaryEventMetricsAccess = false
				and SupplierPrimaryEventMetricsAccessRel exists)
					invoke Delete SupplierPrimaryEventMetricsAccessRel
					
				if (SupplierEventMetricsAccess = false
				and SupplierContactEventMetricsAccessRel exists)				
					invoke Delete SupplierContactEventMetricsAccessRel
				
				if (SupplierPrimaryCMAccess = false
				and SupplierPrimaryCMAccessRel exists)
					invoke Delete SupplierPrimaryCMAccessRel
					
				if (SupplierCMAccess = false
				and SupplierContactCMAccessRel exists)				
					invoke Delete SupplierContactCMAccessRel
					
				if (SupplierPrimaryTermsAccess = false
				and SupplierPrimaryTermsAccessRel exists)
					invoke Delete SupplierPrimaryTermsAccessRel
					
				if (SupplierTermsAccess = false
				and SupplierContactTermsAccessRel exists)				
					invoke Delete SupplierContactTermsAccessRel
					
				if (SupplierPrimarySubcontractorAccess = false
				and SupplierPrimarySubcontractorAccessRel exists)
					invoke Delete SupplierPrimarySubcontractorAccessRel
					
				if (SupplierSubcontractorAccess = false
				and SupplierContactSubcontractorAccessRel exists)				
					invoke Delete SupplierContactSubcontractorAccessRel
					
				if (SupplierPrimarySOMOrdersAccess = false
				and SOMPOrdersRel exists)
					invoke Delete SOMPOrdersRel
					
				if (SupplierSOMOrdersAccess = false
				and SOMCOrdersRel exists)				
					invoke Delete SOMCOrdersRel

				if (SupplierPrimarySOMAcknowledgementCreateAccess = false
				and SOMPAcknowledgementsRel exists)
					invoke Delete SOMPAcknowledgementsRel

				if (SupplierSOMAcknowledgementCreateAccess = false
				and SOMCAcknowledgementsRel exists)
					invoke Delete SOMCAcknowledgementsRel

				if (SupplierPrimarySOMReceiptsAccess = false
				and SOMPReceiptsRel exists)
					invoke Delete SOMPReceiptsRel
					
				if (SupplierSOMReceiptsAccess = false
				and SOMCReceiptsRel exists)				
					invoke Delete SOMCReceiptsRel
					
				if (SupplierPrimarySOMInvoicesAccess = false
				and SOMPInvoicesRel exists)
					invoke Delete SOMPInvoicesRel
					
				if (SupplierSOMInvoicesAccess = false
				and SOMCInvoicesRel exists)				
					invoke Delete SOMCInvoicesRel
					
				if (SupplierPrimarySOMPaymentsAccess = false
				and SOMPPaymentsRel exists)
					invoke Delete SOMPPaymentsRel
					
				if (SupplierSOMPaymentsAccess = false
				and SOMCPaymentsRel exists)				
					invoke Delete SOMCPaymentsRel
		
				if (SupplierPrimarySOMInvoiceCreateAccess = false
				and SOMPCreateInvoicesRel exists)
					invoke Delete SOMPCreateInvoicesRel
					
				if (SupplierSOMInvoiceCreateAccess = false
				and SOMCCreateInvoicesRel exists)				
					invoke Delete SOMCCreateInvoicesRel
		
				if (SupplierPrimarySOMItemsAccess = false
				and SOMPItemsRel exists)
					invoke Delete SOMPItemsRel
					
				if (SupplierSOMItemsAccess = false
				and SOMCItemsRel exists)				
					invoke Delete SOMCItemsRel
		
				if (SupplierPrimaryVendorReturnsAccess = false
				and SOMPReturnsRel exists)
					invoke Delete SOMPReturnsRel
					
				if (SupplierVendorReturnsAccess = false
				and SOMCReturnsRel exists)				
					invoke Delete SOMCReturnsRel

				if (SupplierPrimaryRequisitionAccess = false
				and SOMPRequisitionsRel exists)
					invoke Delete SOMPRequisitionsRel
					
				if (SupplierRequisitionAccess = false
				and SOMCRequisitionsRel exists)				
					invoke Delete SOMCRequisitionsRel

				if (SupplierPrimaryMessagesAccess = false
				and SOMPMessagesRel exists)
					invoke Delete SOMPMessagesRel
					
				if (SupplierMessagesAccess = false
				and SOMCMessagesRel exists)				
					invoke Delete SOMCMessagesRel
					
				if (SupplierPrimaryPerformanceAccess = false
				and SOMPPerformanceRel exists)
					invoke Delete SOMPPerformanceRel
					
				if (SupplierPerformanceAccess = false
				and SOMCPerformanceRel exists)				
					invoke Delete SOMCPerformanceRel
					
				if (SupplierPrimaryRecallAccess = false
				and SupplierPrimaryRecallAccessRel exists)
					invoke Delete SupplierPrimaryRecallAccessRel
					
				if (SupplierRecallAccess = false
				and SupplierContactRecallAccessRel exists)				
					invoke Delete SupplierContactRecallAccessRel
		
				if (SupplierPrimaryItemProposalAccess = false
				and SupplierPrimaryItemProposalAccessRel exists)
					invoke Delete SupplierPrimaryItemProposalAccessRel
					
				if (SupplierItemProposalAccess = false
				and SupplierContactItemProposalAccessRel exists)				
					invoke Delete SupplierContactItemProposalAccessRel			
		
		Delete is a Delete Action

		SupplierResponsesByCommodityCodeSet is a Set Action
			restricted
			Parameters
				PrmSupplierGroup				is a SupplierGroup
				PrmSupplier						is a Supplier
				PrmCommodityCode				is a CommodityCode
				PrmFinalizedDate				is Date
				PrmIncludeUnSubmittedResponses	is Boolean
				PrmIncludeNoBidResponses		is Boolean
				PrmEditDiversityCertDates		is Boolean
				PrmRequireCurrentDIversityCert	is Boolean
				PrmPrintParameters				is Boolean
			
			Parameter Rules
				PrmSupplierGroup
					required
			
				
			Action Rules
				Instance Rules
					SupplierGroup = PrmSupplierGroup

		UpdatePortalAccess is a Set Action
			restricted
			Parameters
				ParmFromSupplierGroup                       is like SupplierGroup
				ParmSupplierPrimaryEventAccess              is Boolean             
				ParmSupplierEventAccess                     is Boolean 
				ParmSupplierPrimaryCMAccess                 is Boolean 
				ParmSupplierCMAccess                        is Boolean 
				ParmSupplierPrimaryRecallAccess             is Boolean 
				ParmSupplierRecallAccess                    is Boolean 
				ParmSupplierPrimaryItemProposalAccess       is Boolean 
				ParmSupplierItemProposalAccess              is Boolean 
				ParmSupplierPrimaryEventMetricsAccess       is Boolean 
				ParmSupplierEventMetricsAccess              is Boolean 
				ParmSupplierPrimaryPlanHolderAccess         is Boolean 
				ParmSupplierPlanHolderAccess                is Boolean 
				ParmSupplierPrimarySOMInvoiceCreateAccess   is Boolean 
				ParmSupplierSOMInvoiceCreateAccess          is Boolean 
				ParmSupplierPrimarySOMInvoicesAccess        is Boolean 
				ParmSupplierSOMInvoicesAccess               is Boolean 
				ParmSupplierPrimarySOMItemsAccess           is Boolean 
				ParmSupplierSOMItemsAccess                  is Boolean 
				ParmSupplierPrimarySOMOrdersAccess          is Boolean 
				ParmSupplierSOMOrdersAccess                 is Boolean 
				ParmSupplierPrimarySOMAcknowledgementCreateAccess is Boolean
				ParmSupplierSOMAcknowledgementCreateAccess        is Boolean 
				ParmSupplierPrimarySOMPaymentsAccess        is Boolean 
				ParmSupplierSOMPaymentsAccess               is Boolean 
				ParmSupplierPrimaryPerformanceAccess        is Boolean 
				ParmSupplierPerformanceAccess               is Boolean 
				ParmSupplierPrimarySOMReceiptsAccess        is Boolean 
				ParmSupplierSOMReceiptsAccess               is Boolean 
				ParmSupplierPrimaryMessagesAccess           is Boolean 
				ParmSupplierMessagesAccess                  is Boolean 
				ParmSupplierPrimaryTermsAccess              is Boolean 
				ParmSupplierTermsAccess                     is Boolean 
				ParmSupplierPrimarySubcontractorAccess      is Boolean 
				ParmSupplierSubcontractorAccess             is Boolean 
				ParmSupplierPrimaryVendorReturnsAccess      is Boolean
				ParmSupplierVendorReturnsAccess             is Boolean
				ParmSupplierPrimaryRequisitionAccess        is Boolean
				ParmSupplierRequisitionAccess               is Boolean

			Instance Selection
				where (SupplierGroup != ParmFromSupplierGroup)
				
			Action Rules
				
				Instance Rules
					invoke UpdateFast
						invoked.SupplierPrimaryEventAccess         = ParmSupplierPrimaryEventAccess                           
						invoked.SupplierEventAccess                = ParmSupplierEventAccess                      
						invoked.SupplierPrimaryCMAccess            = ParmSupplierPrimaryCMAccess                  
						invoked.SupplierCMAccess                   = ParmSupplierCMAccess                         
						invoked.SupplierPrimaryRecallAccess        = ParmSupplierPrimaryRecallAccess              
						invoked.SupplierRecallAccess               = ParmSupplierRecallAccess                     
						invoked.SupplierPrimaryItemProposalAccess  = ParmSupplierPrimaryItemProposalAccess              
						invoked.SupplierItemProposalAccess         = ParmSupplierItemProposalAccess  
						invoked.SupplierPrimaryEventMetricsAccess  = ParmSupplierPrimaryEventMetricsAccess        
						invoked.SupplierEventMetricsAccess         = ParmSupplierEventMetricsAccess               
						invoked.SupplierPrimaryPlanHolderAccess    = ParmSupplierPrimaryPlanHolderAccess          
						invoked.SupplierPlanHolderAccess           = ParmSupplierPlanHolderAccess                 
						invoked.SupplierPrimarySOMInvoiceCreateAccess = ParmSupplierPrimarySOMInvoiceCreateAccess    
						invoked.SupplierSOMInvoiceCreateAccess     = ParmSupplierSOMInvoiceCreateAccess           
						invoked.SupplierPrimarySOMInvoicesAccess   = ParmSupplierPrimarySOMInvoicesAccess         
						invoked.SupplierSOMInvoicesAccess          = ParmSupplierSOMInvoicesAccess                
						invoked.SupplierPrimarySOMItemsAccess      = ParmSupplierPrimarySOMItemsAccess            
						invoked.SupplierSOMItemsAccess             = ParmSupplierSOMItemsAccess                   
						invoked.SupplierPrimarySOMOrdersAccess     = ParmSupplierPrimarySOMOrdersAccess           
						invoked.SupplierSOMOrdersAccess            = ParmSupplierSOMOrdersAccess                  
						invoked.SupplierPrimarySOMAcknowledgementCreateAccess = ParmSupplierPrimarySOMAcknowledgementCreateAccess           
						invoked.SupplierSOMAcknowledgementCreateAccess   = ParmSupplierSOMAcknowledgementCreateAccess                  
						invoked.SupplierPrimarySOMPaymentsAccess   = ParmSupplierPrimarySOMPaymentsAccess         
						invoked.SupplierSOMPaymentsAccess          = ParmSupplierSOMPaymentsAccess                
						invoked.SupplierPrimaryPerformanceAccess   = ParmSupplierPrimaryPerformanceAccess         
						invoked.SupplierPerformanceAccess          = ParmSupplierPerformanceAccess                
						invoked.SupplierPrimarySOMReceiptsAccess   = ParmSupplierPrimarySOMReceiptsAccess         
						invoked.SupplierSOMReceiptsAccess          = ParmSupplierSOMReceiptsAccess                
						invoked.SupplierPrimaryMessagesAccess      = ParmSupplierPrimaryMessagesAccess            
						invoked.SupplierMessagesAccess             = ParmSupplierMessagesAccess                   
						invoked.SupplierPrimaryTermsAccess         = ParmSupplierPrimaryTermsAccess               
						invoked.SupplierTermsAccess                = ParmSupplierTermsAccess                      
						invoked.SupplierPrimarySubcontractorAccess = ParmSupplierPrimarySubcontractorAccess       
						invoked.SupplierSubcontractorAccess        = ParmSupplierSubcontractorAccess              
						invoked.SupplierPrimaryVendorReturnsAccess = ParmSupplierPrimaryVendorReturnsAccess
						invoked.SupplierVendorReturnsAccess        = ParmSupplierVendorReturnsAccess
						invoked.SupplierPrimaryRequisitionAccess   = ParmSupplierPrimaryRequisitionAccess
						invoked.SupplierRequisitionAccess          = ParmSupplierRequisitionAccess

		UpdateSupplierBankInformationCountry is an Instance Action
			restricted
			
			Action Rules
			
				invoke UpdateBankInformationCountry Supplier
					invoked.SupplierGroup    = SupplierGroup
					
				invoke UpdateBankInformationCountry SupplierSourceId
					invoked.SupplierGroup    = SupplierGroup
		
		SupplierResponsesByCommodityCode is an Instance Action
			restricted
			Parameters
				PrmSupplierGroup				is a SupplierGroup
				PrmSupplier						is a Supplier
				PrmCommodityCode				is a CommodityCode
				PrmFinalizedDate				is Date
				PrmIncludeUnSubmittedResponses	is Boolean
				PrmIncludeNoBidResponses		is Boolean
				PrmEditDiversityCertDates		is Boolean
				PrmRequireCurrentDIversityCert	is Boolean
				PrmPrintParameters				is Boolean
			
			Parameter Rules
				PrmSupplierGroup
					required
					

		EnableProperSecurityForSupplierPortal is an Instance Action 
			restricted 
			Action Rules 

				if (SupplierPrimaryAllAccessRel exists) 
					invoke Delete SupplierPrimaryAllAccessRel

				if (SupplierContactAllAccessRel exists) 
					invoke Delete SupplierContactAllAccessRel

				if (SupplierAnonymousAllAccessRel exists) 				
					invoke Delete SupplierAnonymousAllAccessRel

			Exit Rules 

				invoke EnableProperSecurityForCustomerPortal CustomerGroupRel 

		
		PopulateExternalEntityMigrationEmailFields is a Set Action

			Parameters
				PrmSupplierGroup	is a SupplierGroup
			Instance Selection
				where ((SupplierGroup = PrmSupplierGroup
				or     PrmSupplierGroup not entered)
				and   (NotAllEEMigrationEmailFieldsPopulated))

			Action Rules
				Instance Rules
					invoke Update SupplierGroupExtension
						if (this instance.SupplierGroupExtension.EEMigrationUsernameChangeEmailSubject not entered)
							invoked.EEMigrationUsernameChangeEmailSubject		= "Your Username has changed"
						if (this instance.SupplierGroupExtension.EEMigrationUsernameChangeEmailContent not entered)
							invoked.EEMigrationUsernameChangeEmailContent		= "Your login Username has changed to be the email address this notification was sent to.  Your password remains the same."
						if (this instance.SupplierGroupExtension.EEMigrationUsernameChangeFromEmailAddress not entered)
							invoked.EEMigrationUsernameChangeFromEmailAddress	= AdminEmailAddress
