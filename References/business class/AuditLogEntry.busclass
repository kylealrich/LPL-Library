AuditLogEntry is a BusinessClass
    owned by la
    prefix is ALEHD
    representative text is "<BusinessView>(<SystemStamp>)"

    Ontology
    	symbolic key is AuditLogEntry

    Patterns
        disable Auditing
        disable EffectiveDated
        disable AsOfDateProcessing
        implements UniqueID
        implements VirtualBackRelSets
        implements IncrementalReplication
        	indicator field is Status
        		replicate when Status.Local
        			then set to Status.Archived
 			indicator field is ColumnarStatus
        		replicate when ColumnarStatus.Local
        			then set to ColumnarStatus.Archived
        			
    Persistent Fields
    	Status               is Alpha size 1
    		States
    			Local    value is "L"
    			Archived value is "A"
    	ColumnarStatus               is Alpha size 1
    		States
    			Local    value is "" 
    			Archived value is "A"
    	BusinessView         is like BusinessView
    	Action               is like BusinessAction
    	InitiatingAction     is like BusinessAction
    	InvokingAction       is like BusinessAction
    	Period               is Alpha size 1
    		States
    			Past   value is "P"
    			Future value is "F"
    	ActionType           is Alpha size 11
    		States
    			Unknown     value is "UNKNOWN"
    			Create      value is "CREATE"
    			Update      value is "UPDATE"
    			Delete      value is "DELETE"
    			Correction  value is "CORRECTION"
    			Override    value is "OVERRIDE"
    			Reverse     value is "REVERSE"
    			Invalidate  value is "INVALIDATE"
    			History     value is "HISTORY"
    			Purge       value is "PURGE"
    			PurgeFields value is "PURGEFIELDS"
    			View		value is "VIEW"
    			SystemNote  value is "SYSTEMNOTE"
    	BOUniqueID           is UniqueID
            default label is "BusinessObjectUniqueID"
    	AuditEntryID         is UniqueID
    	Actor                is like Actor
    	AuthenticatedActor   is like Actor
    	EntryStamp           is TimeStamp
    	SystemStamp          is TimeStamp
    	EffectiveDate        is Date
    	EffectiveTimeZone    is like TimeZone 
    	EffectiveThroughDate is Date
    	AppliedStamp         is TimeStamp
    	Subject              is like BusinessSubject
    	ReasonCode           is like ActionReason
		ActionRequestID      is UniqueID
		TransactionID        is UniqueID    	
		InstanceSelection    is Alpha size up to 2000
		Fields    			 is Alpha size up to 2000
		AccessType			 is Alpha size 1
			States
				ISD			value is "I"
				UI			value is "U"
				Document	value is "D"
				WebService  value is "W"
		UIType				 is Alpha size 1 
			States
				Audit		value is "A"
				List		value is "L"
				Form		value is "F"
				Page		value is "P"
				Record		value is "R"
		UIName			 	 is LPLName
		AsyncTriggerUID      is UniqueID
		FolderUID			 is UniqueID
		Mode 				is Numeric size 1
			States
				Update  value is 0
				View    value is 1
		FrameworkType

		
	Local Fields
		LocRepSetResetError is Text

	Derived Fields
		DataArea is a DerivedField	
			type is DataAreaName
			return parentcontext.dataarea  	
			
		ProductLine is a NativeField
			type is ProductLineName

        SystemStampDate is a DerivedField
            type is Date
            return SystemStamp date

        SystemStampYear is a DerivedField
            type is Year
            return SystemStampDate year

        SystemStampPeriod is a DerivedField
            type is Period
            return SystemStampDate period

        SystemStampMonth is a DerivedField
            type is Numeric size 2
            return SystemStampDate month

        SystemStampWeek is a DerivedField
            type is Numeric size 2
            return SystemStampDate week

        ConfigurationBusinessClass is a DerivedField
            type is like BusinessView
            if (IsUserAction)
                return UserActionRel.BusinessClass
            if (IsUserBusinessClass)
                return UserBusinessClassRel.BusinessClass
            if (IsUserCardView)
                return UserCardViewRel.BusinessView
            if (IsUserCube)
                return UserCubeRel.BusinessClass
            if (IsUserField)
                return UserFieldRel.BusinessClass
            if (IsUserForm)
                return UserFormRel.BusinessView
            if (IsUserKeyField)
                return UserKeyFieldRel.UserBusClassName
            if (IsUserList)
                return UserListRel.BusinessView
            if (IsUserRelation)
                return UserRelationRel.BusinessClass
            if (IsUserListView)
                return UserListViewRel.BusinessView
            return blank

        ConfigurationName is a DerivedField
            type is LPLName
            if (IsUserProd)
                return "Data_Area"
            if (IsUserAction)
                return UserActionRel.ActionName
            if (IsUserCardView)
                return UserCardViewRel.BusinessCardView
            if (IsUserField)
                return UserFieldRel.FieldName
            if (IsUserForm)
                return UserFormRel.BusinessForm
            if (IsUserKeyField)
                return UserKeyFieldRel.KeyFieldName
            if (IsUserList)
                return UserListRel.BusinessList
            if (IsUserMenu)
                return UserMenuRel.UserMenuName
            if (IsUserPage)
                return UserPageRel.UserPageName
            if (IsUserRelation)
                return UserRelationRel.RelationName
            if (IsUserSJRptMap)
                return UserSJRptMapRel.UserSJRptMapName
            if (IsUserWebApp)
                return UserWebAppRel.UserWebAppName
            if (IsUserWebServiceInterface)
                return UserWebServiceInterfaceRel.WebServiceInterface
            if (IsUserImage)
                return UserImageRel.UserImage
            if (IsSecurityClass)
                return SecurityClassRel.SecurityClass
            if (IsUserListView)
                return UserListViewRel.Name
            if (IsUserPhrase)
                return UserPhraseRel.Phrase
            return blank

        IsConfiguration is a DerivedField
            type is Boolean
            default label is "Configuration"
            if (IsUserList and UserListRel.GlobalList)
                return true
            if (IsUserForm and UserFormRel.Global)
                return true
            if (IsUserCardView and UserCardViewRel.Global)
                return true
            if (IsUserPage and UserPageRel.Global)
                return true
            if (IsUserMenu and UserMenuRel.Global)
                return true
            if (IsUserSJRptMap and UserSJRptMapRel.Global)
                return true
            if (IsUserWebApp or IsUserField or IsUserAction
            or IsUserRelation or IsUserCube or IsUserBusinessClass
            or IsUserKeyField or IsUserProd or IsUserWebServiceInterface
            or IsSecurityClass)
                return true
            return false

        IsPersonalization is a DerivedField
            type is Boolean
            default label is "Personalization"
            if (IsUserList and UserListRel.IsActor)
                return true
            if (IsUserForm and UserFormRel.IsActor)
                return true
            if (IsUserCardView and UserCardViewRel.IsActor)
                return true
            if (IsUserPage and UserPageRel.IsActor)
                return true
            if (IsUserMenu and UserMenuRel.IsActor)
                return true
            return false

        IsReport is a DerivedField
            type is Boolean
            default label is "Report"
            if (IsUserPage and UserPageRel.HasFolder)
                return true
            if (IsUserList and UserListRel.IsFolder)
                return true
            if (IsUserMenu and UserMenuRel.HasFolder)
                return true
            if (IsUserSJRptMap)
                return true
            return false
        
        ColumnarRepSetResetSuccessMessage is a MessageField
        	restricted
        	"ResetColumnarReplicationSetBusinessClassCompleted."
        
        ColumnarRepSetResetErrorMessage is a MessageField
        	restricted
        	"<LocRepSetResetError>"
        	
        ColumnarRepSetResetDeferredMessage is a MessageField
        	restricted
        	"ReplicationSetActive,ResetDeferred.ANewRequestHasBeenScheduled."
        	
    	ColumnarRepSetResetNoRecordMessage is a MessageField
    		restricted
    		"NoActiveColumnarIndicatorBasedAuditLogEntryReplicationSetBusinessClassRequiringResetFound."
    	
    	ColumnarRepSetResetMaxAttemptsMessage is a MessageField
    		restricted
    		"MaximumAttemptsHaveBeenTried.Aborting."
        	
        ColumnarRepSetResetMessage is a DerivedField
    		type is MessageField
        
        	if (LocRepSetResetError entered)
        		if (LocRepSetResetError = "DEFERRED")
        			return ColumnarRepSetResetDeferredMessage
        		
        		if (LocRepSetResetError = "NORECORD")
        			return ColumnarRepSetResetNoRecordMessage
        			
        		if (LocRepSetResetError = "MAXATTEMPT")
        			return ColumnarRepSetResetMaxAttemptsMessage
        		
        		return ColumnarRepSetResetErrorMessage
        		
        	return ColumnarRepSetResetSuccessMessage

        TransactionRecordExists is a DerivedField
            type is Boolean

            if (IsUserList and UserListRel exists)
                return true
            if (IsUserForm and UserFormRel exists)
                return true
            if (IsUserCardView and UserCardViewRel exists)
                return true
            if (IsUserPage and UserPageRel exists)
                return true
            if (IsUserMenu and UserMenuRel exists)
                return true
            if (IsUserSJRptMap and UserSJRptMapRel exists)
                return true
            if (IsUserWebApp and UserWebAppRel exists)
                return true
            if (IsUserProd and UserProdRel exists)
                return true
            if (IsUserBusinessClass and UserBusinessClassRel exists)
                return true
            if (IsUserKeyField and UserKeyFieldRel exists)
                return true
            if (IsUserField and UserFieldRel exists)
                return true
            if (IsUserAction and UserActionRel exists)
                return true
            if (IsUserCube and UserCubeRel exists)
                return true
            if (IsUserRelation and UserRelationRel exists)
                return true
            if (IsUserImage and UserImageRel exists)
                return true
            if (IsUserListView and UserListViewRel exists)
                return true
            if (IsUserPhrase and UserPhraseRel exists)
                return true
            if (IsUserWebServiceInterface and UserWebServiceInterfaceRel exists)
                return true
            if (IsSecurityClass and SecurityClassRel exists)
                return true
            if (IsActorRole and ActorRoleRel exists)
                return true
            if (IsConfigurationParameter and ConfigurationParameterRel exists)
                return true
            if (IsRole and RoleRel exists)
                return true
            if (IsRoleSecurityClass and RoleSecurityClassRel exists)
                return true
            if (IsReplicationSet and ReplicationSetRel exists)
                return true
            if (IsRepSetBC and RepSetBCRel exists)
                return true
            if (IsRepSetBCField and RepSetBCFieldRel exists)
                return true
            if (IsRepSetBCRelatedReplicate and RepSetBCRelatedReplicateRel exists)
                return true
            if (IsRepSetBCClientField and RepSetBCClientFieldRel exists)
                return true
            if (IsPfiTrigger and PfiTriggerRel exists)
                return true
            if (IsPfiTriggerFolder and PfiTriggerFolderRel exists)
                return true
            if (IsPfiTriggerVariable and PfiTriggerVariableRel exists)
                return true
            if (IsPfiFlowDefinition and PfiFlowDefinitionRel exists)
                return true
            if (IsPfiFlowVersion and PfiFlowVersionRel exists)
                return true
            if (IsPfiUserProfile and PfiUserProfileRel exists)
                return true
            if (IsPfiUserPreference and PfiUserPreferenceRel exists)
                return true
            if (IsPfiClassicApplication and PfiClassicApplicationRel exists)
                return true
            if (IsPfiClassicField and PfiClassicFieldRel exists)
                return true
            if (IsPfiServiceDefinition and PfiServiceDefinitionRel exists)
                return true
            if (IsPfiServiceVariable and PfiServiceVariableRel exists)
                return true
            if (IsPfiServiceFlowDefinition and PfiServiceFlowDefinitionRel exists)
                return true
            if (IsPfiDocument and PfiDocumentRel exists)
                return true
            if (IsPfiBciApiInfo and PfiBciApiInfoRel exists)
                return true
            if (IsPfiTask and PfiTaskRel exists)
                return true
            if (IsPfiFilterKey and PfiFilterKeyRel exists)
                return true
            if (IsPfiUserTask and PfiUserTaskRel exists)
                return true
            if (IsPfiUserCategory and PfiUserCategoryRel exists)
                return true
            if (IsPfiForm and PfiFormRel exists)
                return true
            if (IsPfiFormField and PfiFormFieldRel exists)
                return true
            return false

    Conditions
        AuditLogEntryExists
            when (AuditLogEntryRel exists)
        IsUserAction
            default label is "UserAction"
            when (BusinessView = "UserAction")

        IsUserBusinessClass
            default label is "UserBusinessClass"
            when (BusinessView = "UserBusinessClass")

        IsUserCardView
            default label is "UserCardView"
            when (BusinessView = "UserCardView")

        IsUserCube
            default label is "UserCube"
            when (BusinessView = "UserCube")

        IsUserField
            default label is "UserField"
            when (BusinessView = "UserField")

        IsUserForm
            default label is "UserForm"
            when (BusinessView = "UserForm")

        IsUserImage
            default label is "UserImage"
            when (BusinessView = "UserImage")

        IsUserList
            default label is "UserList"
            when (BusinessView = "UserList")

        IsUserKeyField
            default label is "UserKeyField"
            when (BusinessView = "UserKeyField")

        IsUserListView
            default label is "UserListView"
            when (BusinessView = "UserListView")

        IsUserMenu
            default label is "UserMenu"
            when (BusinessView = "UserMenu")

        IsUserPage
            default label is "UserPage"
            when (BusinessView = "UserPage")

        IsUserPhrase
            default label is "UserPhrase"
            when (BusinessView = "UserPhrase")

        IsUserProd
            default label is "UserProd"
            when (BusinessView = "UserProd")

        IsUserRelation
            default label is "UserRelation"
            when (BusinessView = "UserRelation")

        IsUserSJRptMap
            default label is "UserSJRptMap"
            when (BusinessView = "UserSJRptMap")

        IsUserWebApp
            default label is "UserWebApp"
            when (BusinessView = "UserWebApp")

        IsUserWebServiceInterface
            default label is "UserWebServiceInterface"
            when (BusinessView = "UserWebServiceInterface")

        IsConfigurationParameter
            default label is "ConfigurationParameter"
            when (BusinessView = "ConfigurationParameter")

        IsPfiConfigurationParameter
            default label is "PfiConfigurationParameter"
            when (BusinessView = "PfiConfigurationParameter")

        IsRole
            default label is "Role"
            when (BusinessView = "Role")

        IsRoleSecurityClass
            default label is "RoleSecurityClass"
            when (BusinessView = "RoleSecurityClass")

        IsActorRole
            default label is "ActorRole"
            when (BusinessView = "ActorRole")

        IsReplicationSet
            default label is "ReplicationSet"
            when (BusinessView = "ReplicationSet")

        IsRepSetBC
            default label is "RepSetBC"
            when (BusinessView = "RepSetBC")

        IsRepSetBCClientField
            default label is "RepSetBCClientField"
            when (BusinessView = "RepSetBCClientField")

        IsRepSetBCField
            default label is "RepSetBCField"
            when (BusinessView = "RepSetBCField")

        IsRepSetBCRelatedReplicate
            default label is "RepSetBCRelatedReplicate"
            when (BusinessView = "RepSetBCRelatedReplicate")

        IsSecurityClass
            default label is "SecurityClass"
            when (BusinessView = "SecurityClass")

        IsPfiTrigger
            default label is "PfiTrigger"
            when (BusinessView = "PfiTrigger")

        IsPfiTriggerFolder
            default label is "PfiTriggerFolder"
            when (BusinessView = "PfiTriggerFolder")

        IsPfiTriggerVariable
            default label is "PfiTriggerVariable"
            when (BusinessView = "PfiTriggerVariable")

        IsPfiFlowVersion
            default label is "PfiFlowVersion"
            when (BusinessView = "PfiFlowVersion")

        IsPfiFlowDefinition
            default label is "PfiFlowDefinition"
            when (BusinessView = "PfiFlowDefinition")

        IsPfiTask
            default label is "PfiTask"
            when (BusinessView = "PfiTask")

        IsPfiFilterKey
            default label is "PfiFilterKey"
            when (BusinessView = "PfiFilterKey")

        IsPfiUserProfile
            default label is "PfiUserProfile"
            when (BusinessView = "PfiUserProfile")

        IsPfiUserPreference
            default label is "PfiUserPreference"
            when (BusinessView = "PfiUserPreference")

        IsPfiClassicApplication
            default label is "PfiClassicApplication"
            when (BusinessView = "PfiClassicApplication")

        IsPfiClassicField
            default label is "PfiClassicField"
            when (BusinessView = "PfiClassicField")

        IsPfiServiceDefinition
            default label is "PfiServiceDefinition"
            when (BusinessView = "PfiServiceDefinition")

        IsPfiServiceVariable
            default label is "PfiServiceVariable"
            when (BusinessView = "PfiServiceVariable")

        IsPfiServiceFlowDefinition
            default label is "PfiServiceFlowDefinition"
            when (BusinessView = "PfiServiceFlowDefinition")

        IsPfiDocument
            default label is "PfiDocument"
            when (BusinessView = "PfiDocument")

        IsPfiBciApiInfo
            default label is "PfiBciApiInfo"
            when (BusinessView = "PfiBciApiInfo")

        IsPfiUserTask
            default label is "PfiUserTask"
            when (BusinessView = "PfiUserTask")

        IsPfiUserCategory
            default label is "PfiUserCategory"
            when (BusinessView = "PfiUserCategory")

        IsPfiForm
            default label is "PfiForm"
            when (BusinessView = "PfiForm")

        IsPfiFormField
            default label is "PfiFormField"
            when (BusinessView = "PfiFormField")

        ActionAndInitiatingActionIsDifferent
            when (Action != InitiatingAction)

        AuthenticatedActorIsDifferent
            when (AuthenticatedActor != Actor)

        UserListExists
            when (UserListRel exists)

        UserFormExists
            when (UserFormRel exists)

        UserCardViewExists
            when (UserCardViewRel exists)

        UserPageExists
            when (UserPageRel exists)

        UserMenuExists
            when (UserMenuRel exists)

        UserSJRptMapExists
            when (UserSJRptMapRel exists)

        UserWebAppExists
            when (UserWebAppRel exists)

        UserProdExists
            when (UserProdRel exists)

        UserBusinessClassExists
            when (UserBusinessClassRel exists)

        UserKeyFieldExists
            when (UserKeyFieldRel exists)

        UserFieldExists
            when (UserFieldRel exists)

        UserActionExists
            when (UserActionRel exists)

        UserCubeExists
            when (UserCubeRel exists)

        UserRelationExists
            when (UserRelationRel exists)

        UserImageExists
            when (UserImageRel exists)

        UserListViewExists
            when (UserListViewRel exists)

        UserPhraseExists
            when (UserPhraseRel exists)

        UserWebServiceInterfaceExists
            when (UserWebServiceInterfaceRel exists)

        SecurityClassExists
            when (SecurityClassRel exists)

        ActorRoleExists
            when (ActorRoleRel exists)

        ConfigurationParameterExists
            when (ConfigurationParameterRel exists)

        RoleExists
            when (RoleRel exists)

        RoleSecurityClassExists
            when (RoleSecurityClassRel exists)

        ReplicationSetExists
            when (ReplicationSetRel exists)

        RepSetBCExists
            when (RepSetBCRel exists)

        RepSetBCFieldExists
            when (RepSetBCFieldRel exists)

        RepSetBCRelatedReplicateExists
            when (RepSetBCRelatedReplicateRel exists)

        RepSetBCClientFieldExists
            when (RepSetBCClientFieldRel exists)

        PfiTriggerExists
            when (PfiTriggerRel exists)

        PfiTriggerFolderExists
            when (PfiTriggerFolderRel exists)

        PfiTriggerVariableExists
            when (PfiTriggerVariableRel exists)

        PfiFlowDefinitionExists
            when (PfiFlowDefinitionRel exists)

        PfiFlowVersionExists
            when (PfiFlowVersionRel exists)

        PfiUserProfileExists
            when (PfiUserProfileRel exists)

        PfiUserPreferenceExists
            when (PfiUserPreferenceRel exists)

        PfiClassicApplicationExists
            when (PfiClassicApplicationRel exists)

        PfiClassicFieldExists
            when (PfiClassicFieldRel exists)

        PfiServiceDefinitionExists
            when (PfiServiceDefinitionRel exists)

        PfiServiceVariableExists
            when (PfiServiceVariableRel exists)

        PfiServiceFlowDefinitionExists
            when (PfiServiceFlowDefinitionRel exists)

        PfiDocumentExists
            when (PfiDocumentRel exists)

        PfiBciApiInfoExists
            when (PfiBciApiInfoRel exists)

        PfiTaskExists
            when (PfiTaskRel exists)

        PfiFilterKeyExists
            when (PfiFilterKeyRel exists)

        PfiUserTaskExists
            when (PfiUserTaskRel exists)

        PfiUserCategoryExists
            when (PfiUserCategoryRel exists)

        PfiFormExists
            when (PfiFormRel exists)

        PfiFormFieldExists
            when (PfiFormFieldRel exists)

		IsConfigUpdate
			default label is "ConfigurationUpdate"
			when  (FrameworkType entered)
	
		ColumnarReplicationsExist
			when (RepSetBCColumnarRel exists)
			
		NonColumnarReplicationsExist
			when (RepSetBCNonColumnarRel exists)
			
		IgnoreStatusInitialValue
			restricted
			when (not NonColumnarReplicationsExist and ColumnarReplicationsExist)

    Actions
    	Create is a Create Action
    		restricted
    	Update is an Update Action
    		restricted
    	Delete is a Purge Action 
    		restricted
    	ViewSource is an Update Action 
    	
    	PurgeArchivedData is a Set Action



    	    Parameters
    	    	PrmIgnoreStatus is Boolean
    	    		default label is "IgnoreNonColumnarIncrementalStatus"
    	    	PrmIncludeColumnarStatus is Boolean	
    	    		default label is "IncludeColumnarIncrementalStatus"
    	    		
    	   	Parameter Rules
    	   		PrmIgnoreStatus
    	   			initial value is IgnoreStatusInitialValue
    	   			

    	   			if (PrmIgnoreStatus entered and not PrmIncludeColumnarStatus entered)
    	   				if (false) 
    	   					required
    	   				constraint (false)
    	   					"AtLeastOneIncrementalStatusTypeMustBeIncluded"
    	   		
    	   		PrmIncludeColumnarStatus
    	   			initial value is ColumnarReplicationsExist
    	   					
			Instance Selection
				where ((PrmIgnoreStatus or Status.Archived) and (not PrmIncludeColumnarStatus or ColumnarStatus.Archived))
			


			Sort Order is primary

			Action Rules
				Instance Rules
					invoke Delete

		Purge is a Set Action
			Parameters
    			ConfigThruDate 				is Date
    				default label is "FrameworkTypeThroughSystemDate"
				ConfigPurgeOffsetDays 		is Numeric size 3
					default label is "FrameworkTypePurgeOffsetDays"
				IncludeArchivedConfig		is Boolean
					default label is "IncludeArchivedFrameworkTypeRecords"
				NonConfigThruDate 			is Date
    				default label is "NonFrameworkTypeThroughSystemDate"
				NonConfigPurgeOffsetDays 	is Numeric size 3
					default label is "NonFrameworkTypePurgeOffsetDays"
				IncludeArchivedNonConfig		is Boolean
					default label is "IncludeArchivedNonFrameworkTypeRecords"

			Local Fields
				LocalConfigThruDate 	is Date
					value is ConfigThruDate
				LocalNonConfigThruDate 	is Date
					value is NonConfigThruDate

    		Parameter Rules
				ConfigThruDate
					if (ConfigThruDate entered)
						LocalConfigThruDate = (ConfigThruDate + 1 day)
					else
					if (not ConfigPurgeOffsetDays entered)
						required
							"MustEnterFrameworkTypeThroughSystemDateOrOffset"
					else
						LocalConfigThruDate  = current date - (ConfigPurgeOffsetDays - 1)

				ConfigPurgeOffsetDays
					initial value is 180
					constraint (not ConfigThruDate entered)
						"CannotEnterBothFrameworkTypeThroughSystemDateAndOffset"

				NonConfigThruDate
					if (NonConfigThruDate entered)
						LocalNonConfigThruDate = (NonConfigThruDate + 1 day)
					else
					if (not NonConfigPurgeOffsetDays entered)
						required
							"MustEnterNonFrameworkTypeThroughSystemDateOrOffset"
					else
						LocalNonConfigThruDate = current date - (NonConfigPurgeOffsetDays - 1)

				NonConfigPurgeOffsetDays
					initial value is 30
					constraint (not NonConfigThruDate entered)
						"CannotEnterBothNonFrameworkTypeThroughSystemDateAndOffset"

			Instance Selection
				where ((IsConfigUpdate and ((IncludeArchivedConfig and Status.Archived and ColumnarStatus.Archived) or SystemStamp < LocalConfigThruDate))
				or    (!IsConfigUpdate and ((IncludeArchivedNonConfig and Status.Archived and ColumnarStatus.Archived) or SystemStamp < LocalNonConfigThruDate)))



			Sort Order is primary 
			
			Action Rules
				Instance Rules
					invoke Delete		
				


		ResetColumnarReplicationSetBC is a Set Action
			default label is "ResetColumnarReplicationSetBusinessClass"
			no records message is "<ColumnarRepSetResetMessage>" // Always executes Empty Set Rules since the instance selection is "where false".
			confirmation required 
				"ThisWillResetTheColumnarAuditLogEntryReplicationSetBusinessClassIfItExists.Continue?"
				
			Parameters 
				AttemptNumber is Numeric size 1
				
			Local Fields
				LocRepSetBCView is a RepSetBC view
			
			Instance Selection
				where (false) 



			Sort Order is primary 
			
			Action Rules
				Set Rules
					Entrance Rules
						initialize LocRepSetResetError
				
				Empty Set Rules
					LocRepSetBCView = first ColumnarRepSetBCColumnarRel.RepSetBC
					increment AttemptNumber
					
					if (LocRepSetBCView.RepSetBC exists)
						if (not LocRepSetBCView.ReplicationSet.RunningInProcess)
							if (not LocRepSetBCView.IgnoreIndicatorOnFullReplication)
								invoke Update LocRepSetBCView.RepSetBC
									resume on error
									invoked.IgnoreIndicatorOnFullReplication = true
									
							invoke Reset LocRepSetBCView.RepSetBC in foreground 
								resume on error
									LocRepSetResetError = error message
									log "YELLOW_ALERT:_Audit\Log\EntryReset\Columnar\Replication\Set\B\CFor<parentcontext.dataarea><error message stack trace>"
						else
						if (AttemptNumber <= 5)
							LocRepSetResetError = "DEFERRED"

							invoke ResetColumnarReplicationSetBC AuditLogEntry in background 
								run after action background group LocRepSetBCView.ReplicationSet.ActionGroupID
								invoked.AttemptNumber = AttemptNumber + 1
						else
							LocRepSetResetError = "MAXATTEMPT"
					else
						LocRepSetResetError = "NORECORD"

    Relations
        AuditLogEntryRel
            one-to-one relation to AuditLogEntry
            include deleted record
            Field Mapping uses symbolic key
                related.AuditLogEntry = AuditLogEntry

        PfiTriggerRel
            one-to-one relation to PfiTrigger
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiTriggerFolderRel
            one-to-one relation to PfiTriggerFolder
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiTriggerVariableRel
            one-to-one relation to PfiTriggerVariable
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiFlowDefinitionRel
            one-to-one relation to PfiFlowDefinition
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiFlowVersionRel
            one-to-one relation to PfiFlowVersion
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiUserProfileRel
            one-to-one relation to PfiUserProfile
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiUserPreferenceRel
            one-to-one relation to PfiUserPreference
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiClassicApplicationRel
            one-to-one relation to PfiClassicApplication
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiClassicFieldRel
            one-to-one relation to PfiClassicField
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiServiceDefinitionRel
            one-to-one relation to PfiServiceDefinition
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiServiceVariableRel
            one-to-one relation to PfiServiceVariable
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiServiceFlowDefinitionRel
            one-to-one relation to PfiServiceFlowDefinition
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiDocumentRel
            one-to-one relation to PfiDocument
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiBciApiInfoRel
            one-to-one relation to PfiBciApiInfo
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiTaskRel
            one-to-one relation to PfiTask
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiFilterKeyRel
            one-to-one relation to PfiFilterKey
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiUserTaskRel
            one-to-one relation to PfiUserTask
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiUserCategoryRel
            one-to-one relation to PfiUserCategory
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiFormRel
            one-to-one relation to PfiForm
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        PfiFormFieldRel
            one-to-one relation to PfiFormField
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        ConfigurationParameterRel
            one-to-one relation to ConfigurationParameter
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        RoleRel
            one-to-one relation to Role
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        RoleSecurityClassRel
            one-to-one relation to RoleSecurityClass
            include deleted record
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        UserProdRel
            one-to-one relation to UserProd
            include deleted record
            Field Mapping uses symbolic key
                related.UserProd = BOUniqueID

        UserActionRel
            one-to-one relation to UserAction
            include deleted record
            Field Mapping uses symbolic key
                related.UserAction = BOUniqueID

        UserBusinessClassRel
            one-to-one relation to UserBusinessClass
            include deleted record
            Field Mapping uses symbolic key
                related.UserBusinessClass = BOUniqueID

        UserKeyFieldRel
            one-to-one relation to UserKeyField
            include deleted record
            Field Mapping uses symbolic key
                related.UserKeyField = BOUniqueID

        UserCardViewRel
            one-to-one relation to UserCardView
            include deleted record
            Field Mapping uses symbolic key
                related.UserCardView = BOUniqueID

        UserCubeRel
            one-to-one relation to UserCube
            include deleted record
            Field Mapping uses symbolic key
                related.UserCube = BOUniqueID

        UserFormRel
            one-to-one relation to UserForm
            include deleted record
            Field Mapping uses symbolic key
                related.UserForm = BOUniqueID

        UserListRel
            one-to-one relation to UserList
            include deleted record
            Field Mapping uses symbolic key
                related.UserList = BOUniqueID

        UserFieldRel
            one-to-one relation to UserField
            Field Mapping uses symbolic key
                related.UserField = BOUniqueID

        UserRelationRel
            one-to-one relation to UserRelation
            Field Mapping uses symbolic key
                related.UserRelation = BOUniqueID

        UserMenuRel
            one-to-one relation to UserMenu
            Field Mapping uses symbolic key
                related.UserMenu = BOUniqueID

        UserPageRel
            one-to-one relation to UserPage
            Field Mapping uses symbolic key
                related.UserPage = BOUniqueID

        UserSJRptMapRel
            one-to-one relation to UserSJRptMap
            Field Mapping uses symbolic key
                related.UserSJRptMap = BOUniqueID

        UserWebAppRel
            one-to-one relation to UserWebApp
            Field Mapping uses symbolic key
                related.UserWebApp = BOUniqueID

        UserWebServiceInterfaceRel
            one-to-one relation to UserWebServiceInterface
            Field Mapping uses symbolic key
                related.UserWebServiceInterface = BOUniqueID

        UserImageRel
            one-to-one relation to UserImage
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        SecurityClassRel
            one-to-one relation to SecurityClass
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        ActorRoleRel
            one-to-one relation to ActorRole
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        UserListViewRel
            one-to-one relation to UserListView
            Field Mapping uses symbolic key
                related.UserListView = BOUniqueID

        UserPhraseRel
            one-to-one relation to UserPhrase
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        ReplicationSetRel
            one-to-one relation to ReplicationSet
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        RepSetBCRel
            one-to-one relation to RepSetBC
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        RepSetBCClientFieldRel
            one-to-one relation to RepSetBCClientField
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        RepSetBCFieldRel
            one-to-one relation to RepSetBCField
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID

        RepSetBCRelatedReplicateRel
            one-to-one relation to RepSetBCRelatedReplicate
            Field Mapping uses unique id key
                related.UniqueID = BOUniqueID
                

       	RepSetBCColumnarRel
            one-to-many relation to RepSetBC
            Field Mapping uses ByBusinessClassAllSet
                related.BusinessClass = "AuditLogEntry"
            Instance Selection
            	where (related.IncrementalIndicatorField = "ColumnarStatus" and related.EnableIndicator and not related.DisableIncrementalReplication)
        

        ColumnarRepSetBCColumnarRel
            one-to-many relation to RepSetBC
            Field Mapping uses ByBusinessClassAllSet
                related.BusinessClass = "AuditLogEntry"
            Instance Selection
            	where (related.IncrementalIndicatorField = "ColumnarStatus" and related.EnableIndicator
            	and    related.IncrementalReplication and not related.DisableIncrementalReplication
            	and    not related.Inactive and related.ReplicationSet.ExportFormat = "R") 
        
        RepSetBCNonColumnarRel
            one-to-many relation to RepSetBC
            Field Mapping uses ByBusinessClassAllSet
                related.BusinessClass = "AuditLogEntry"
            Instance Selection 
            	where ((related.IncrementalIndicatorField = "Status" or related.IncrementalIndicatorField = blank) and related.EnableIndicator and not related.DisableIncrementalReplication)




