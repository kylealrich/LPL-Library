BODDataInitialLoad is a BusinessClass
    owned by integration
    prefix is BDL

    Ontology
        symbolic key is BODDataInitialLoad

    Patterns
        implements StaticJava
        disable AuditIndex
        disable Auditing
        disable EffectiveDated

    Persistent Fields
    	SelectType									is Numeric 1
    		States
    			CodeDefinition				value is 1 
    				default label is "CodeDefinition"
    			MasterData					value is 2 
    				default label is "MasterData"				
    			PartyMaster					value is 3 
    				default label is "PartyMaster"
    			TransactionData				value is 4
    				default label is "TransactionData"
    			Integration					value is 5
    				default label is "IntegrationWise"
    					
    	BODDataInitialLoadLifeCycleState			is Numeric size 1
            States
                CreateLayout	        	value is 0
                UpdateLayout				value is 1
                Completed     				value is 2
    	
    	Integration									is Numeric 5
    		States
    			EAM							value is 1
    				default label is "EAM"
    			SCE							value is 2
    				default label is "SCE"
    			XM							value is 3
    				default label is "XM"
    			CRM							value is 4
    				default label is "MSCRM"
    			Payroll						value is 5
    				default label is "Payroll_/G\F\C"
    			SFDC						value is 6
    				default label is "SFDC"
    			GRC						value is 7
    				default label is "GRC-\P\I"
    	
#ifdef module ap    		
    	SupplierFromVendorGroup						is a VendorGroup
    		delete cascades
    	SupplierToVendorGroup						is a VendorGroup
    		delete cascades
    	SupplierFromVendor							is a Vendor
    		context of SupplierFromVendorGroup
    		delete cascades
    	SupplierToVendor							is a Vendor
    		context of SupplierFromVendorGroup
    		delete cascades
    	SupplierSelectAll							is Boolean
    	SupplierTrigger								is Boolean
    	ShipFromVedorGroup							is a VendorGroup
    	ShipFromFromVendor							is a Vendor
    		context of ShipFromVedorGroup
    		delete cascades
    	ShipFromToVendor							is a Vendor
    		context of ShipFromVedorGroup
    		delete cascades
    	ShipFromFromVendorLocation					is a VendorLocation
    		context of ShipFromFromVendor
    		context of ShipFromVedorGroup
    		delete cascades
    	ShipFromToVendorLocation					is a VendorLocation
    		context of ShipFromFromVendor
    		context of ShipFromVedorGroup
    		delete cascades
    	ShipFromSelectAll							is Boolean
    	ShipFromTrigger								is Boolean
    	ContactMasterAPVendorGroup					is a VendorGroup
		ContactMasterAPFromVendor						is a Vendor
			context of ContactMasterAPVendorGroup
			delete cascades
		ContactMasterAPToVendor						is a Vendor
			context of ContactMasterAPVendorGroup
			delete cascades
		ContactMasterAPFromContactCode				is a VendorContactCode
			context of ContactMasterAPVendorGroup
			delete cascades
		ContactMasterAPToContactCode				is a VendorContactCode
			context of ContactMasterAPVendorGroup
			delete cascades
		ContactMasterAPSelectAll					is Boolean
		ContactMasterAPTrigger						is Boolean
		PayablesVendorGroup							is a VendorGroup
			delete cascades
		InvoiceCompany								is a PayablesCompany	
			delete cascades
		InvoiceFromCompany							is a PayablesCompany
			delete cascades
		InvoiceToCompany							is a PayablesCompany
			delete cascades
		PayablesVendor   							is a Vendor   
			context of PayablesVendorGroup
			delete cascades
		PayablesFromVendor							is a Vendor
			context of PayablesVendorGroup
			delete cascades
		PayablesToVendor							is a Vendor
			context of PayablesVendorGroup
			delete cascades
		FromInvoice									is a PayablesInvoice   
			context of InvoiceFromCompany
			delete cascades
		ToInvoice									is a PayablesInvoice   
			context of InvoiceFromCompany
			delete cascades
		InvoiceDateRange							is a DateRange
		CreateDateRange								is a DateRange
		PayablesInvoiceStatus                       is Numeric size 1
            States
	            Released			value is 1
	            Approved			value is 2
	            PendingApproval		value is 3
	            Rejected      		value is 4
	            Amended				value is 5 
	            Cancelled			value is 6		
	            Paid				value is 8
	            Historical			value is 9
		InvoiceSelectAll							is Boolean
		InvoiceTrigger								is Boolean
		SupplierBalanceFromVendorGroup				is a VendorGroup
			delete cascades
		SupplierBalanceToVendorGroup				is a VendorGroup
			delete cascades
		SupplierBalanceFromVendor					is a Vendor
			context of SupplierBalanceFromVendorGroup
			delete cascades
		SupplierBalanceToVendor						is a Vendor
			context of SupplierBalanceFromVendorGroup
			delete cascades
		SupplierBalanceFromLocation					is a VendorLocation
			context of SupplierBalanceFromVendorGroup
			context of SupplierBalanceFromVendor
			delete cascades
		SupplierBalanceToLocation				    is a VendorLocation
			context of SupplierBalanceFromVendorGroup
			context of SupplierBalanceFromVendor
			delete cascades
		SupplierBalanceSelectAll					is Boolean
		SupplierBalanceTrigger						is Boolean
		PayableTransactionFromCompany				is a PayablesCompany
			delete cascades
		PayableTransactionToCompany					is a PayablesCompany
			delete cascades
		PayableTransactionVendorGroup				is a VendorGroup
			delete cascades
		PayableTransactionFromVendor				is a Vendor
			context of PayableTransactionVendorGroup
			delete cascades
		PayableTransactionToVendor					is a Vendor
			context of PayableTransactionVendorGroup
			delete cascades
		PayableTransactionDateRange					is a DateRange
		PayableTransactionCreateDateRange			is a DateRange
		PayableTransactionFromInvoice				is a PayablesInvoice    
			context of PayableTransactionFromCompany
			delete cascades
		PayableTransactionToInvoice					is a PayablesInvoice	
			context of PayableTransactionFromCompany
			delete cascades
		PayableTransactionSelectAll					is Boolean
		PayableTransactionTrigger					is Boolean

		PayableBODSelectType is Numeric 1
			States
				PayableTransaction value is 1
					default label is "PayableTransaction"
				PayableTracker value is 2
					default label is "PayableTracker"
		
#endif
#ifdef module ic
#ifdef module GeneralLedger      
    	ItemFromItemGroup							is a ItemGroup
    		delete cascades
    	ItemToItemGroup								is a ItemGroup
    		delete cascades
    	ItemFromItem								is an Item
    		context of ItemFromItemGroup
    		delete cascades
    	ItemToItem									is an Item
    		context of ItemFromItemGroup
    		delete cascades
    	ItemSelectAll								is Boolean
    	ItemTrigger									is Boolean
    	CodeDefUOMFinancialEnterpriseGroup			is a FinanceEnterpriseGroup
    		delete cascades
    	UOMFromItemGroup							is a ItemGroup
    		delete cascades
    	UOMToItemGroup								is a ItemGroup
    		delete cascades
    	UOMFromUnitOfMeasure						is a UnitOfMeasure
    		context of UOMFromItemGroup
    		delete cascades
    	UOMToUnitOfMeasure							is a UnitOfMeasure
    		context of UOMFromItemGroup
    		delete cascades
    	UOMSelectAll								is Boolean
    	UOMTrigger									is Boolean
    	InventoryFromCompany						is a InventoryCompany
    		delete cascades
		InventoryToCompany							is a InventoryCompany
			delete cascades
		InventoryFromLocation						is a InventoryLocation
			context of InventoryFromCompany
			delete cascades
		InventoryToLocation							is a InventoryLocation
			context of InventoryFromCompany
			delete cascades
		InventorySelectAll							is Boolean
		InventoryTrigger							is Boolean
		InventoryCountCompany		 				is an InventoryCompany
			delete cascades
		InventoryCountFromLocation					is an InventoryLocation
			context of InventoryCountCompany
			delete cascades
		InventoryCountToLocation					is an InventoryLocation
			context of InventoryCountCompany
			delete cascades
		InventoryCountItemGroup						is a ItemGroup
			delete cascades
		InventoryCountItem							is an Item
			context of InventoryCountItemGroup
			delete cascades
		InventoryCountSelectAll						is Boolean
		InventoryCountTrigger						is Boolean
		IncludeInactiveItems						is Boolean
#endif
#endif
#ifdef module am
#ifdef module GeneralLedger	
    	AssetFinanceEnterpriseGroup					is a FinanceEnterpriseGroup
    		delete cascades
    	AssetFromCompany							is a Company
    		delete cascades
    	AssetToCompany								is a Company
    		delete cascades
    	AssetFromAsset								is an Asset
    		context of AssetFinanceEnterpriseGroup
    		delete cascades
    	AssetToAsset								is an Asset
    		context of AssetFinanceEnterpriseGroup
    		delete cascades
    	AssetSelectAll								is Boolean
    	AssetTrigger								is Boolean
    	AssetMasterTrigger							is Boolean
    	AssetTransactionTrigger						is Boolean
#endif
#endif
#ifdef module GeneralLedger
#ifdef module cashmgmt
#ifdef module cb    	
    	FinancialFinanceEnterpriseGroup				is a FinanceEnterpriseGroup
    		delete cascades
    	FinancialFromCashManagementGroup			is a CashManagementGroup
    		delete cascades
    	FinancialToCashManagementGroup	 			is a CashManagementGroup
    		delete cascades
    	FinancialFromBankEntity						is a BankEntity
    		context of FinancialFromCashManagementGroup
    		delete cascades
    	FinancialToBankEntity						is a BankEntity
    		context of FinancialFromCashManagementGroup
    		delete cascades
    	FinancialSelectAll							is Boolean
    	FinancialTrigger							is Boolean
    	RemittanceFromCompany						is a GeneralLedgerCompany
    	RemittanceToCompany							is a GeneralLedgerCompany
    	FSMRemittanceDateRange						is a DateRange
    	RemittanceSelectAll							is Boolean
    	RemittanceTrigger							is Boolean
    	CodeDefCashCodeManagementGroup				is a CashManagementGroup
    		delete cascades
    	CodeDefFromCashCode							is a CashCode
    		context of CodeDefCashCodeManagementGroup
    		delete cascades
    	CodeDefToCashCode							is a CashCode
    		context of CodeDefCashCodeManagementGroup
    		delete cascades
    	CodeDefCashCodeTrigger						is Boolean
#endif
#endif
#endif
#ifdef module GeneralLedger    	
    	CodeDefFinanceEnterpriseGroup				is a FinanceEnterpriseGroup
    		delete cascades
    	CodeDefFromAccountingEntity 				is a AccountingEntity
    		context of CodeDefFinanceEnterpriseGroup
    		delete cascades
    	CodeDefToAccountingEntity 					is a AccountingEntity
    		context of CodeDefFinanceEnterpriseGroup
    		delete cascades
    	CodeDefFromAccountingUnit					is a AccountingUnit
    		context of CodeDefFinanceEnterpriseGroup
    		context of CodeDefFromAccountingEntity
    		delete cascades
    	CodeDefToAccountingUnit						is a AccountingUnit
    		context of CodeDefFinanceEnterpriseGroup
    		context of CodeDefFromAccountingEntity
    		delete cascades
    	CodeDefAccountingUnitSelectAll				is Boolean
    	CodeDefAccountingUnitTrigger				is Boolean
    	CodeDefAccountingUnitTriggeredCount			is Numeric 9
    	CodeDefFinanceEnterpriseGroupAEGroup		is a FinanceEnterpriseGroup
    		delete cascades
    	CodeDefFromAccountingEntityAEGroup 			is a AccountingEntityGroup
    		context of CodeDefFinanceEnterpriseGroupAEGroup
    		delete cascades
    	CodeDefToAccountingEntityAEGroup 			is a AccountingEntityGroup
    		context of CodeDefFinanceEnterpriseGroupAEGroup
    		delete cascades
    	CodeDefAccountingEntitySelectAll			is Boolean
    	CodeDefAccountingEntityTrigger				is Boolean
    	CodeDefAccountingEntityTriggeredCount		is Numeric 9
    	FinanceDimension1FEG						is a FinanceEnterpriseGroup
    		delete cascades
    	CodeDefFromFinanceDimension1				is a FinanceDimension1
    		context of FinanceDimension1FEG
    		delete cascades
		CodeDefToFinanceDimension1					is a FinanceDimension1
			context of FinanceDimension1FEG
			delete cascades
		FinanceDimension1SelectAll					is Boolean
		FinanceDimension1Trigger					is Boolean
    	CodeDefFromFinanceDimension2				is a FinanceDimension2
    		context of FinanceDimension1FEG
    		delete cascades
		CodeDefToFinanceDimension2					is a FinanceDimension2
			context of FinanceDimension1FEG
			delete cascades
		FinanceDimension2SelectAll					is Boolean
		FinanceDimension2Trigger					is Boolean
    	CodeDefFromFinanceDimension3				is a FinanceDimension3
    		context of FinanceDimension1FEG
    		delete cascades
		CodeDefToFinanceDimension3					is a FinanceDimension3
			context of FinanceDimension1FEG
			delete cascades
		FinanceDimension3SelectAll					is Boolean
		FinanceDimension3Trigger					is Boolean
    	CodeDefFromFinanceDimension4				is a FinanceDimension4
    		context of FinanceDimension1FEG
    		delete cascades
		CodeDefToFinanceDimension4					is a FinanceDimension4
			context of FinanceDimension1FEG
			delete cascades
		FinanceDimension4SelectAll					is Boolean
		FinanceDimension4Trigger					is Boolean
    	CodeDefFromFinanceDimension5				is a FinanceDimension5
    		context of FinanceDimension1FEG
    		delete cascades
		CodeDefToFinanceDimension5					is a FinanceDimension5
			context of FinanceDimension1FEG
			delete cascades
		FinanceDimension5SelectAll					is Boolean
		FinanceDimension5Trigger					is Boolean
    	CodeDefFromFinanceDimension6				is a FinanceDimension6
    		context of FinanceDimension1FEG
    		delete cascades
		CodeDefToFinanceDimension6					is a FinanceDimension6
			context of FinanceDimension1FEG
			delete cascades
		FinanceDimension6SelectAll					is Boolean
		FinanceDimension6Trigger					is Boolean
    	CodeDefFromFinanceDimension7				is a FinanceDimension7
    		context of FinanceDimension1FEG
    		delete cascades
		CodeDefToFinanceDimension7					is a FinanceDimension7
			context of FinanceDimension1FEG
			delete cascades
		FinanceDimension7SelectAll					is Boolean
		FinanceDimension7Trigger					is Boolean
    	CodeDefFromFinanceDimension8				is a FinanceDimension8
    		context of FinanceDimension1FEG
    		delete cascades
		CodeDefToFinanceDimension8					is a FinanceDimension8
			context of FinanceDimension1FEG
			delete cascades
		FinanceDimension8SelectAll					is Boolean
		FinanceDimension8Trigger					is Boolean
    	CodeDefFromFinanceDimension9				is a FinanceDimension9
    		context of FinanceDimension1FEG
    		delete cascades
		CodeDefToFinanceDimension9					is a FinanceDimension9
			context of FinanceDimension1FEG
			delete cascades
		FinanceDimension9SelectAll					is Boolean
		FinanceDimension9Trigger					is Boolean
    	CodeDefFromFinanceDimension10				is a FinanceDimension10
    		context of FinanceDimension1FEG
    		delete cascades
		CodeDefToFinanceDimension10					is a FinanceDimension10
			context of FinanceDimension1FEG
			delete cascades
		FinanceDimension10SelectAll					is Boolean
		FinanceDimension10Trigger					is Boolean
		CodeDefAccountFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
    	CodeDefinitionFromAccount					is an Account
    		context of CodeDefAccountFinanceEnterpriseGroup
    		delete cascades
    	CodeDefinitionToAccount						is an Account
    		context of CodeDefAccountFinanceEnterpriseGroup
    		delete cascades
    	CodeDefAccountSelectAll						is Boolean
    	CodeDefAccountTrigger						is Boolean
    	AccountingFinanceEnterpriseGroup			is a FinanceEnterpriseGroup
    		delete cascades
		AccountingFromAccountingEntity				is an AccountingEntity
			context of AccountingFinanceEnterpriseGroup
			delete cascades
		AccountingToAccountingEntity				is an AccountingEntity
			context of AccountingFinanceEnterpriseGroup
			delete cascades
		AccountingSelectAll							is Boolean
		AccountingTrigger							is Boolean
		ReportingFinanceEnterpriseGroup				is a FinanceEnterpriseGroup
			delete cascades
		ReportingFromReportingChart					is a ReportingChart
			context of ReportingFinanceEnterpriseGroup
			delete cascades
		ReportingToReportingChart					is a ReportingChart
			context of ReportingFinanceEnterpriseGroup
			delete cascades
		ReportingSelectAll							is Boolean
		ReportingTrigger							is Boolean
		ChartOfAccountFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
			delete cascades
		FromChartOfAccount							is a ReportingChart
			context of ChartOfAccountFinanceEnterpriseGroup
			delete cascades
		ToChartOfAccount							is a ReportingChart
			context of ChartOfAccountFinanceEnterpriseGroup
			delete cascades
		ChartOfAccountSelectAll						is Boolean
		ChartOfAccountTrigger						is Boolean
		JournalEntryFinanceEnterpriseGroup			is a FinanceEnterpriseGroup
			delete cascades
		JournalEntryFromAccountingEntity			is an AccountingEntity
			context of JournalEntryFinanceEnterpriseGroup
			delete cascades
		JournalEntryToAccountingEntity				is an AccountingEntity
			context of JournalEntryFinanceEnterpriseGroup
			delete cascades
		JournalEntryFromLedger						is a Ledger   
			context of JournalEntryFinanceEnterpriseGroup
			delete cascades
		JournalEntryToLedger						is a Ledger  
			context of JournalEntryFinanceEnterpriseGroup
			delete cascades
		JournalEntryDateRange						is a DateRange
		JournalEntryFromPeriod						is a GeneralLedgerCalendarPeriod
			context of JournalEntryFinanceEnterpriseGroup
		JournalEntryToPeriod						is a GeneralLedgerCalendarPeriod
			context of JournalEntryFinanceEnterpriseGroup
		JournalEntryFromJournal						is Numeric 5
		JournalEntryToJournal						is Numeric 5
		JournalEntryCreateDateRange					is a DateRange
		JournalEntrySelectAll						is Boolean
		JournalEntryTrigger							is Boolean
		GLMovementFinanceEnterpriseGroup			is a FinanceEnterpriseGroup
			delete cascades
		GLMovementFromAccountingEntity				is an AccountingEntity
			context of GLMovementFinanceEnterpriseGroup
			delete cascades
		GLMovementToAccountingEntity				is an AccountingEntity
			context of GLMovementFinanceEnterpriseGroup
			delete cascades
		GLMovemnetDateRange							is a DateRange
		GLMovementCreateDateRange					is a DateRange
		GLMovementSelectAll							is Boolean
		GLMovementTrigger							is Boolean
		ReportingBasisLedgerFinanceEnterpriseGroup        is a FinanceEnterpriseGroup
			delete cascades
		ReportingBasisLedgerFrom						  is a Ledger
			context of ReportingBasisLedgerFinanceEnterpriseGroup
			delete cascades
		ReportingBasisLedgerTo							  is a Ledger
			context of ReportingBasisLedgerFinanceEnterpriseGroup
			delete cascades
		ReportingBasisLedgerSelectAll						is Boolean
		ReportingBasisLedgerTrigger						    is Boolean
#endif
#ifdef module glif
		CodeDefFromGeneralLedgerCompany						is a GeneralLedgerCompany
			delete cascades
		CodeDefToGeneralLedgerCompany						is a GeneralLedgerCompany
			delete cascades
		CodeDefGLCompanyTrigger								is Boolean
#endif
#ifdef module ar
#ifdef module GeneralLedger
    	CodeDefCustomerFEG							is a FinanceEnterpriseGroup
    		delete cascades
    	CodeDefFromCustomerMajorClass				is a CustomerMajorClass
    		context of CodeDefCustomerFEG
    		delete cascades
    	CodeDefToCustomerMajorClass					is a CustomerMajorClass
    		context of CodeDefCustomerFEG
    		delete cascades
    	CustomerMajorClassSelectAll					is Boolean
    	CustomerMajorClassTrigger					is Boolean
    	CodeDefFromTerritoryCompany					is a ReceivableCompany
    		delete cascades
    	CodeDefToTerritoryComapny					is a ReceivableCompany
    		delete cascades
    	CodeDefFromTerritory						is a Territory
    		context of CodeDefFromTerritoryCompany
    		delete cascades
    	CodeDefToTerritory							is a Territory
    		context of CodeDefFromTerritoryCompany
    		delete cascades
    	TerritorySelectAll							is Boolean
    	TerritoryTrigger							is Boolean
    	CustomerFromPartyReceivableCompany			is a ReceivableCompany
    		delete cascades
    	CustomerToPartyReceivableCompany			is a ReceivableCompany
    		delete cascades
    	CustomerPartyCustomerGroup					is a CustomerGroup
    		delete cascades
    	CustomerPartyFromCustomer					is a Customer
    		context of CustomerPartyCustomerGroup
    		delete cascades
    	CustomerPartyToCustomer						is a Customer
    		context of CustomerPartyCustomerGroup
    		delete cascades
    	CustomerPartySelectAll						is Boolean
    	CustomerPartyTrigger						is Boolean
    	BillToFinanceEnterpriseGroup				is a FinanceEnterpriseGroup
    		delete cascades
    	BillToCustomerGroup							is a CustomerGroup
    		delete cascades
    	BillToFromCustomer							is a Customer
    		context of BillToCustomerGroup
    		delete cascades
    	BillToToCustomer							is a Customer
    		context of BillToCustomerGroup
    		delete cascades
    	FromCustomerBillTo							is a CustomerBillTo
    		context of BillToFromCustomer
    		context of BillToCustomerGroup
    		delete cascades
    	ToCustomerBillTo							is a CustomerBillTo
    		context of BillToFromCustomer
    		context of BillToCustomerGroup
    		delete cascades
    	BillToSelectAll								is Boolean
    	BillToTrigger								is Boolean
    	ContactMasterARCustomerGroup				is a CustomerGroup
    		delete cascades
		ContactMasterARCompany						is a ReceivableCompany
			delete cascades
		ContactMasterARToCompany 					is a ReceivableCompany
			delete cascades
		ContactMasterARFromCustomer					is a Customer
			context of ContactMasterARCustomerGroup
			delete cascades
		ContactMasterARToCustomer					is a Customer
			context of ContactMasterARCustomerGroup
			delete cascades
		ContactMasterARFromCompanyCustomerContact	is a CompanyCustomerContact
			context of ContactMasterARCompany
			context of ContactMasterARFromCustomer
			delete cascades
		ContactMasterARToCompanyCustomerContact     is a CompanyCustomerContact
			context of ContactMasterARCompany
			context of ContactMasterARFromCustomer
			delete cascades
		ContactMasterARSelectAll					is Boolean
		ContactMasterARTrigger						is Boolean
		ReceivableInvoiceFromCompany				is a ReceivableCompany
			delete cascades
		ReceivableInvoiceToCompany					is a ReceivableCompany
			delete cascades
		ReceivableCustomerGroup						is a CustomerGroup
		ReceivableFromCustomer						is a Customer
			context of ReceivableCustomerGroup
			delete cascades
		ReceivableToCustomer						is a Customer
			context of ReceivableCustomerGroup
			delete cascades
		ReceivablesInvoiceType          			is a ReceivableInvoiceType
		FromReceivableInvoice						is a ReceivableInvoice   
			context of ReceivableInvoiceFromCompany
			delete cascades
		ToReceivableInvoice							is a ReceivableInvoice     
			context of ReceivableInvoiceFromCompany
			delete cascades
		ReceivableDateRange							is a DateRange
		ReceivableCreateDateRange					is a DateRange
		ReceivableInvoiceSelectAll					is Boolean
		ReceivableInvoiceTrigger					is Boolean
		
		ReceivablePaymentFromCompany 		is a ReceivableCompany
			delete cascades
		ReceivablePaymentToCompany			is a ReceivableCompany
			delete cascades
		ReceivablePaymentFromHeader			is a ReceivablePaymentHeader
			context of ReceivablePaymentFromCompany
			delete cascades
		ReceivablePaymentToHeader			is a ReceivablePaymentHeader
			context of ReceivablePaymentFromCompany
			delete cascades
		ReceivablePaymentDateRange			is a DateRange
		ReceivablePaymentStatus             is Numeric size 1
	        States
	            Unreleased         value is 0
	            ReleasedUnassigned value is 1
	            Open               value is 2
	            FullyApplied       value is 7
	            Closed             value is 8
	            Historical         value is 9
		ReceivablePaymentTrigger			is Boolean
		ReceivablePaymentSelectAll			is Boolean

		
		ReceivableBODSelectType is Numeric 1
			States
				ReceivablePayment value is 1
					default label is "ReceivablePayment"
				ReceivableTracker value is 2
					default label is "ReceivableTracker"
#endif
#endif
#ifdef module bl
#ifdef module ar
    	ShipToCompany								is a ReceivableCompany
    		delete cascades
    	ShipToToCompany								is a ReceivableCompany
    		delete cascades
    	ShipToCustomerGroup							is a CustomerGroup
    		delete cascades
    	ShipToCompanyCustomer						is a CompanyCustomer
    		context of ShipToCompany
    		context of ShipToFromCustomer
    		delete cascades
    	ShipToFromCustomer							is a Customer
    		context of ShipToCustomerGroup
    		delete cascades
    	ShipToToCustomer							is a Customer
    		context of ShipToCustomerGroup
    		delete cascades
    	ShipToFromCustomerShipTo					is a CustomerShipTo
    		context of ShipToCompany
    		context of ShipToFromCustomer
    		delete cascades
    	ShipToToCustomerShipTo						is a CustomerShipTo
    		context of ShipToCompany
    		context of ShipToFromCustomer
    		delete cascades
    	ShipToSelectAll								is Boolean
    	ShipToTrigger								is Boolean
#endif
#endif
#ifdef module hcmfn
#ifdef module rq
    	ContactMasterRQHROrganization				is a HROrganization
    		delete cascades
    	ContactMasterRQFromCompany					is an InventoryCompany
    		delete cascades
    	ContactMasterRQToCompany					is an InventoryCompany
    		delete cascades
    	ContactMasterRQFromRequester				is a Requester
    		context of ContactMasterRQHROrganization
    		delete cascades
    	ContactMasterRQToRequester					is a Requester
    		context of ContactMasterRQHROrganization
    		delete cascades
    	ContactMasterRQSelectAll					is Boolean
    	ContactMasterRQTrigger						is Boolean
    	RequestingFromCompany						is a InventoryCompany
    		delete cascades
		RequestingToCompany							is a InventoryCompany
			delete cascades
		RequestingFromLocation						is a RequestingLocation
			context of RequestingFromCompany
			delete cascades
		RequestingToLocation						is a RequestingLocation
			context of RequestingFromCompany
			delete cascades
		RequestingSelectAll							is Boolean
		RequestingTrigger							is Boolean
		ReqReturnCompany							is a InventoryCompany
			delete cascades
		ReqReturnQuantity                  		    is a Quantity
		RequisitionReturnSelectAll					is Boolean
		RequisitionReturnTrigger					is Boolean
#endif
#endif
#ifdef module hcmfn
#ifdef module po
		ContactMasterPOHROrganization				is a HROrganization
			delete cascades
		ContactMasterPOFromBuyer					is a Buyer
			context of ContactMasterPOHROrganization
			delete cascades
		ContactMasterPOToBuyer						is a Buyer
			context of ContactMasterPOHROrganization
			delete cascades
		ContactMasterPOSelectAll					is Boolean
		ContactMasterPOTrigger						is Boolean
		PurchaseOrderCompany						is a PurchasingCompany
			delete cascades
		PurchaseOrderToCompany						is a PurchasingCompany
			delete cascades
		PurchaseOrderVendorGroup					is a VendorGroup
			delete cascades
		PurchaseOrderVendor							is a Vendor
			context of PurchaseOrderVendorGroup
			delete cascades
		FromPurchaseOrder							is a PurchaseOrder
			context of PurchaseOrderCompany
			delete cascades
		ToPurchaseOrder								is a PurchaseOrder
			context of PurchaseOrderCompany
			delete cascades
		PurchaseOrderDateRange         	    		is a DateRange
		PurchaseOrderSelectAll						is Boolean
		PurchaseOrderTrigger						is Boolean
		ReceiveDeliveryCompany						is a PurchasingCompany
			delete cascades
		ReceiveDeliveryToCompany					is a PurchasingCompany
			delete cascades
		ReceiveDeliveryVendorGroup					is a VendorGroup
			delete cascades
		ReceivedVendor								is a Vendor
			context of ReceiveDeliveryVendorGroup
			delete cascades
		FromPurchaseOrderReceipt					is a PurchaseOrderReceipt
			context of ReceiveDeliveryCompany
			delete cascades
		ToPurchaseOrderReceipt						is a PurchaseOrderReceipt
			context of ReceiveDeliveryCompany
			delete cascades
		PurchaseOrderReceiptDateRange				is a DateRange
		ReceiveDeliverySelectAll					is Boolean
		ReceiveDeliveryTrigger						is Boolean
		BODContractGroup							is a ContractGroup
		FromContract								is a Contract
		ToContract									is a Contract
		ContractTrigger								is Boolean
#endif
#endif
#ifdef module GeneralLedger
#ifdef module currency	
		CurrencyExFinanceEnterpriseGroup			is a FinanceEnterpriseGroup
			delete cascades
		CurrencyExCurrencyTable						is a CurrencyTable
			context of CurrencyExFinanceEnterpriseGroup
			delete cascades
		CurrencyExSelectAll							is Boolean
		CurrencyExTrigger							is Boolean
		GLTranslationRateFinanceEnterpriseGroup     is a FinanceEnterpriseGroup
			delete cascades
		GLFromTranslationCode                       is a GeneralLedgerTranslationCode
		 	context of GLTranslationRateFinanceEnterpriseGroup
			delete cascades
		GLToTranslationCode                         is a GeneralLedgerTranslationCode
		 	context of GLTranslationRateFinanceEnterpriseGroup
			delete cascades
		GeneralLedgerTranslationCodeSelectAll			   is Boolean
			default label is "GlobalLedgerTranslationCodeSelectAll"
		GeneralLedgerTranslationRateTrigger                is Boolean		
			default label is "GlobalLedgerTranslationRateTrigger"
#endif
#endif
#ifdef module GeneralLedger
#ifdef module Projects
		ProjectFinanceEnterpriseGroup				is a FinanceEnterpriseGroup
		FromProject									is a Project
			context of ProjectFinanceEnterpriseGroup
		ToProject									is a Project
			context of ProjectFinanceEnterpriseGroup
		ProjectSelectAll							is Boolean
		ProjectTrigger								is Boolean
#endif
#endif
		
    	Trigger										is Boolean
    	CurrentDate      							is TimeStamp
    	
    Transient Fields
    Conditions
    	IsPartyMaster
        	restricted
			when (SelectType.PartyMaster)
		IsMaster
			restricted
			when(SelectType.MasterData)
		IsCodeDefinition
			restricted
			when(SelectType.CodeDefinition)
		IsEAMBODs
			restricted
			when(Integration.EAM)
		IsSCEBODs
			restricted
			when(Integration.SCE)
		IsXMBODs
			restricted
			when(Integration.XM)
		IsCRMBODs
			restricted
			when(Integration.CRM)
		IsPayrollBODs
			restricted
			when(Integration.Payroll)
		IsTransactionData
			restricted
			when(SelectType.TransactionData)
		IsSFDCBODs
			restricted
			when(Integration.SFDC)
		IsGRCBODs
			restricted
			when(Integration.GRC)
    	IsValidforTrigger
    		restricted
    		when(SupplierTrigger 
    		or ItemTrigger 
    		or AssetMasterTrigger 
    		or AssetTransactionTrigger
    		or FinancialTrigger 
    		or CustomerPartyTrigger 
    		or ShipFromTrigger 
    		or ShipToTrigger 
    		or BillToTrigger 
    		or InventoryTrigger 
    		or ContactMasterRQTrigger 
    		or ContactMasterPOTrigger 
    		or ContactMasterARTrigger 
    		or ContactMasterAPTrigger 
    		or AccountingTrigger 
    		or CurrencyExTrigger 
    		or RequestingTrigger 
    		or ReportingTrigger 
    		or CodeDefAccountTrigger 
    		or UOMTrigger 
    		or FinanceDimension1Trigger 
    		or FinanceDimension2Trigger 
    		or FinanceDimension3Trigger 
    		or FinanceDimension4Trigger 
    		or FinanceDimension5Trigger 
    		or FinanceDimension6Trigger 
    		or FinanceDimension7Trigger 
    		or FinanceDimension8Trigger 
    		or FinanceDimension9Trigger 
    		or FinanceDimension10Trigger 
    		or CodeDefAccountingUnitTrigger
    		or CodeDefAccountingEntityTrigger 
    		or CustomerMajorClassTrigger 
    		or TerritoryTrigger 
    		or PurchaseOrderTrigger 
    		or ReceiveDeliveryTrigger 
    		or InvoiceTrigger 
    		or RequisitionReturnTrigger 
    		or ChartOfAccountTrigger 
    		or InventoryCountTrigger 
    		or ReceivableInvoiceTrigger 
    		or SupplierBalanceTrigger
    		or JournalEntryTrigger
    		or PayableTransactionTrigger
    		or ProjectTrigger
    		or GeneralLedgerTranslationRateTrigger
    		or GLMovementTrigger
    		or ReportingBasisLedgerTrigger
    		or ReceivablePaymentTrigger
    		or RemittanceTrigger
    		or ContractTrigger
    		or CodeDefGLCompanyTrigger
    		or CodeDefCashCodeTrigger)
    	IsPayableTransaction
    		restricted
			when (PayableBODSelectType.PayableTransaction)
		IsPayableTracker
    		restricted
			when (PayableBODSelectType.PayableTracker)
		IsReceivablePayment
    		restricted
			when (ReceivableBODSelectType.ReceivablePayment)
		IsReceivableTracker
    		restricted
			when (ReceivableBODSelectType.ReceivableTracker)
		IsReceivablePaymentTracker
    		restricted
			when (ReceivableBODSelectType.ReceivablePayment or ReceivableBODSelectType.ReceivableTracker)
		IsPayableTrackerTransaction
    		restricted
			when (PayableBODSelectType.PayableTransaction or PayableBODSelectType.PayableTracker)
    	IsCondition1
    		restricted
    		when (IsPartyMaster or IsEAMBODs or IsSCEBODs or IsXMBODs or IsGRCBODs)
    	IsCondition2
    		restricted
    		when(IsPartyMaster or IsSCEBODs or IsCRMBODs or IsSFDCBODs)
    	IsCondition3
    		restricted
    		when(IsPartyMaster or IsCRMBODs or IsSFDCBODs)
    	IsCondition4
    		restricted
    		when(IsPartyMaster or IsSCEBODs)
    	IsCondition5
    		restricted
    		when(IsMaster or IsSCEBODs)
    	IsCondition6
    		restricted
    		when(IsMaster or IsCRMBODs or IsSFDCBODs)
    	IsCondition7
    		restricted
    		when(IsMaster or IsXMBODs or IsPayrollBODs)
    	IsCondition8
    		restricted
    		when(IsMaster or IsXMBODs)
    	IsCondition9
    		restricted
    		when(IsMaster or IsPayrollBODs)
    	IsCondition10
    		restricted
    		when(IsCodeDefinition or IsXMBODs)
    	IsCondition11
    		restricted
    		when(IsCodeDefinition)
    	IsCondition12
    		restricted
    		when(IsCodeDefinition or IsXMBODs)
    	IsCondition13
    		restricted
    		when(IsEAMBODs or IsSCEBODs)
    	IsCondition14
    		restricted
    		when(IsMaster or IsEAMBODs)
    	IsCondition15
    		restricted
    		when(IsMaster or IsSCEBODs or IsEAMBODs or IsCRMBODs or IsSFDCBODs or IsGRCBODs)
    	IsCondition16
    		restricted
    		when(IsTransactionData or IsPayrollBODs)
    	IsCondition17
    		restricted
    		when(IsTransactionData)
    	IsCondition18
    		restricted
    		when(IsEAMBODs or IsTransactionData)
    	IsCondition19
    		restricted
    		when(IsCodeDefinition or IsCRMBODs)
    	IsCondition20
    		restricted
    		when(IsPartyMaster or IsCRMBODs or IsSFDCBODs or IsGRCBODs)
    	IsCondition21
    		restricted
    		when(IsMaster or IsPayrollBODs or IsGRCBODs)

    	IsSupplierInvoiceFromVendorExists
    		restricted
    		when(PayablesFromVendor not entered and PayablesToVendor entered)
    	IsSupplierInvoiceVendorExists
    		restricted
    		when((PayablesFromVendor entered and PayablesVendorGroup entered) and InvoiceFromCompany entered)
    	IsSupplierInvoiceFromCompanyExists
    		restricted
    		when(InvoiceFromCompany not entered and InvoiceToCompany entered)
    	IsSupplierInvoiceCompanyExists
    		restricted
    		when((FromInvoice entered and ToInvoice entered) and (InvoiceFromCompany entered and InvoiceToCompany entered) and (InvoiceFromCompany != InvoiceToCompany ))
    	IsSupplierInvoiceFromInvoiceExists
    		restricted
    		when(FromInvoice not entered and ToInvoice entered)
    	IsSupplierInvoiceFromCompanyInvoiceExists
    		restricted
    		when((FromInvoice entered and ToInvoice entered) and InvoiceFromCompany not entered)
    	IsPayablesVendorExists
    		restricted
    		when(PayablesVendorGroup entered and PayablesFromVendor not entered)
    	IsSupplierInvoiceCreateDateExists
    		restricted
    		when(CreateDateRange.Begin entered and InvoiceDateRange.Begin entered)
    	IsSupplierFromCreateDateEndExists
    		restricted
    		when((CreateDateRange.Begin not entered and CreateDateRange.End entered) 
    		or (CreateDateRange.Begin entered and CreateDateRange.End not entered))
    	IsSupplierFromInvoiceDateEndExists
    		restricted
    		when((InvoiceDateRange.Begin not entered and InvoiceDateRange.End entered)
    		or (InvoiceDateRange.Begin entered and InvoiceDateRange.End not entered))
    	IsSupplierInvoiceSelectInvoiceOrCreateDate
    		restricted
    		when((FromInvoice entered and ToInvoice entered ) and CreateDateRange.Begin entered)
    	IsSupplierInvoiceSelectInvoiceOrInvoiceDate
    		restricted
    		when((FromInvoice entered and ToInvoice entered) and InvoiceDateRange.Begin entered)
    	IsSupplierInvoiceInvalidCriteria
    		restricted
    		when(PayablesFromVendor not entered and InvoiceFromCompany not entered and FromInvoice not entered and CreateDateRange.Begin not entered 
    		and InvoiceDateRange.Begin not entered and PayablesInvoiceStatus not entered )
    	IsValidForSupplierInvoice
    		restricted
    		when(PayablesVendorGroup entered or PayablesFromVendor entered or PayablesToVendor entered 
    		or InvoiceFromCompany entered or InvoiceToCompany entered or FromInvoice entered or ToInvoice entered 
			or InvoiceDateRange entered or CreateDateRange entered or PayablesInvoiceStatus entered or InvoiceTrigger)
    		

    	IsReceivableInvoiceFromCustomerExists
    		restricted
    		when(ReceivableFromCustomer not entered and ReceivableToCustomer entered)
    	IsReceivableInvoiceCustomerExists
    		restricted
    		when((ReceivableFromCustomer entered and ReceivableCustomerGroup entered) and ReceivableInvoiceFromCompany entered)
    	IsReceivableInvoiceReceivableFromCompanyExists
    		restricted
    		when(ReceivableInvoiceFromCompany not entered and ReceivableInvoiceToCompany entered)
    	IsReceivableInvoiceCompanyExists
    		restricted
    		when((FromReceivableInvoice entered and FromReceivableInvoice entered) and (ReceivableInvoiceFromCompany entered and ReceivableInvoiceToCompany entered) and (ReceivableInvoiceFromCompany != ReceivableInvoiceToCompany ))
    	IsReceivableInvoiceFromInvoiceExists
    		restricted
    		when(FromReceivableInvoice not entered and ToReceivableInvoice entered)
    	IsReceivableInvoiceFromCompanyInvoiceExists
    		restricted
    		when((FromReceivableInvoice entered and ToReceivableInvoice entered) and ReceivableInvoiceFromCompany not entered)
    	IsReceivableCustomerExists
    		restricted
    		when(ReceivableCustomerGroup entered and ReceivableFromCustomer not entered)
    	IsReceivableInvoiceCreateDateExists
    		restricted
    		when(ReceivableCreateDateRange.Begin entered and ReceivableDateRange.Begin entered)
    	IsReceivableFromCreateDateEndExists
    		restricted
    		when((ReceivableCreateDateRange.Begin not entered and ReceivableCreateDateRange.End entered) 
    		or (ReceivableCreateDateRange.Begin entered and ReceivableCreateDateRange.End not entered))
    	IsReceivableFromTransactionDateEndExists
    		restricted
    		when((ReceivableDateRange.Begin not entered and ReceivableDateRange.End entered)
    		or (ReceivableDateRange.Begin entered and ReceivableDateRange.End not entered))
    	IsReceivableInvoiceSelectInvoiceOrCreateDate
    		restricted
    		when((FromReceivableInvoice entered and ToReceivableInvoice entered ) and ReceivableCreateDateRange.Begin entered)
    	IsReceivableInvoiceSelectInvoiceOrTransactionDate
    		restricted
    		when((FromReceivableInvoice entered and ToReceivableInvoice entered) and ReceivableDateRange.Begin entered)
    	IsReceivableInvoiceInvalidCriteria
    		restricted
    		when(ReceivableFromCustomer not entered and ReceivableInvoiceFromCompany not entered and ReceivablesInvoiceType not entered and FromReceivableInvoice not entered and ReceivableDateRange.Begin not entered 
    		and ReceivableCreateDateRange.Begin not entered )
    	IsValidForReceivableInvoice
    		restricted
    		when(ReceivableCustomerGroup entered or ReceivableFromCustomer entered or ReceivableToCustomer entered
    		or ReceivableInvoiceFromCompany entered or ReceivableInvoiceToCompany entered or ReceivablesInvoiceType entered 
			or FromReceivableInvoice entered or ToReceivableInvoice entered 
			or ReceivableDateRange.Begin entered or ReceivableDateRange.End entered or ReceivableCreateDateRange.Begin entered 
			or ReceivableCreateDateRange.End entered or ReceivableInvoiceTrigger)
		
    		

    	IsPayablesTransactionFromVendorExists
    		restricted
    		when(PayableTransactionFromVendor not entered and PayableTransactionToVendor entered)
    	IsPayablesTransactionVendorExists
    		restricted
    		when((PayableTransactionFromVendor entered and PayableTransactionVendorGroup entered) and PayableTransactionFromCompany entered)
    	IsPayablesTransactionFromCompanyExists
    		restricted
    		when(PayableTransactionFromCompany not entered and PayableTransactionToCompany entered)
    	IsPayablesTransactionCompanyExists
    		restricted
    		when((PayableTransactionFromInvoice entered and PayableTransactionToInvoice entered) and (PayableTransactionFromCompany entered and PayableTransactionToCompany entered) and (PayableTransactionFromCompany != PayableTransactionToCompany ))
    	IsPayablesTransactionFromInvoiceExists
    		restricted
    		when(PayableTransactionFromInvoice not entered and PayableTransactionToInvoice entered)
    	IsPayablesTransactionFromCompanyInvoiceExists
    		restricted
    		when((PayableTransactionFromInvoice entered and PayableTransactionToInvoice entered) and PayableTransactionFromCompany not entered)
    	IsPayablesTransactionVendorRangeExists
    		restricted
    		when(PayableTransactionVendorGroup entered and PayableTransactionFromVendor not entered)
    	IsPayablesTransactionCreateDateExists
    		restricted
    		when(PayableTransactionCreateDateRange.Begin entered and PayableTransactionDateRange.Begin entered)
    	IsPayablesTransactionFromCreateDateEndExists
    		restricted
    		when((PayableTransactionCreateDateRange.Begin not entered and PayableTransactionCreateDateRange.End entered) 
    		or (PayableTransactionCreateDateRange.Begin entered and PayableTransactionCreateDateRange.End not entered))
    	IsPayablesTransactionFromCheckDateEndExists
    		restricted
    		when((PayableTransactionDateRange.Begin not entered and PayableTransactionDateRange.End entered)
    		or (PayableTransactionDateRange.Begin entered and PayableTransactionDateRange.End not entered))
    	IsPayablesTransactionSelectInvoiceOrCreateDate
    		restricted
    		when((PayableTransactionFromInvoice entered and PayableTransactionToInvoice entered ) and PayableTransactionCreateDateRange.Begin entered)
    	IsPayablesTransactionSelectInvoiceOrCheckDate
    		restricted
    		when((PayableTransactionFromInvoice entered and PayableTransactionToInvoice entered) and PayableTransactionDateRange.Begin entered)
    	IsPayablesTransactionInvalidCriteria
    		restricted
    		when(PayableTransactionFromVendor not entered and PayableTransactionFromCompany not entered and PayableTransactionFromInvoice not entered and PayableTransactionDateRange.Begin not entered 
    		and PayableTransactionCreateDateRange.Begin not entered )
    	IsValidForPayablesTransaction
    		restricted
    		when(PayableTransactionVendorGroup entered or PayableTransactionFromVendor entered or PayableTransactionToVendor entered 
    		or PayableTransactionFromCompany entered or PayableTransactionToCompany entered or PayableTransactionFromInvoice entered
    		or PayableTransactionToInvoice entered or PayableTransactionDateRange.Begin entered or PayableTransactionDateRange.End entered 
			or PayableTransactionCreateDateRange.Begin entered or PayableTransactionCreateDateRange.End entered or PayableTransactionTrigger)
			

		IsSSJEFromAccountingEntityExists
			restricted
			when(JournalEntryFromAccountingEntity not entered and JournalEntryToAccountingEntity entered)
		IsSSJEAccountingEntityRangeExists
    		restricted
    		when(((JournalEntryFromJournal entered and JournalEntryToJournal entered) or (JournalEntryFromPeriod entered and JournalEntryToPeriod entered)) and (JournalEntryFromAccountingEntity entered and JournalEntryToAccountingEntity entered) and (JournalEntryFromAccountingEntity != JournalEntryToAccountingEntity ))
    	IsSSJEFromJournalExists
    		restricted
    		when(JournalEntryFromJournal not entered and JournalEntryToJournal entered)
    	IsSSJEFromAccountingEntityJournalExists
    		restricted
    		when((JournalEntryFromJournal entered and JournalEntryToJournal entered) and JournalEntryFromAccountingEntity not entered)
    	IsSSJEJournalRangeExists
    		restricted
    		when((JournalEntryFromPeriod entered and JournalEntryToPeriod entered)  and (JournalEntryFromJournal entered and JournalEntryToJournal entered) and (JournalEntryFromJournal != JournalEntryToJournal ))
		IsSSJECreateDateExists
    		restricted
    		when(JournalEntryCreateDateRange.Begin entered and JournalEntryDateRange.Begin entered)
		IsSSJEFromCreateDateEndExists
    		restricted
    		when((JournalEntryCreateDateRange.Begin not entered and JournalEntryCreateDateRange.End entered) 
    		or (JournalEntryCreateDateRange.Begin entered and JournalEntryCreateDateRange.End not entered))
    	IsSSJEFromPostDateEndExists
    		restricted
    		when((JournalEntryDateRange.Begin not entered and JournalEntryDateRange.End entered)
    		or (JournalEntryDateRange.Begin entered and JournalEntryDateRange.End not entered))
    	IsSSJESelectJournalOrCreateDate
    		restricted
    		when((JournalEntryFromJournal entered and JournalEntryToJournal entered) and JournalEntryCreateDateRange.Begin entered)
    	IsSSJESelectJournalOrPostDate
    		restricted
    		when((JournalEntryFromJournal entered and JournalEntryToJournal entered) and JournalEntryDateRange.Begin entered)
    	IsSSJEInvalidCriteria
    		restricted
    		when(JournalEntryFromAccountingEntity not entered and JournalEntryFromJournal not entered and JournalEntryFromPeriod not entered and JournalEntryCreateDateRange.Begin not entered 
    		and JournalEntryDateRange.Begin not entered )
    	IsValidForSSJE
    		restricted
    		when(JournalEntryFinanceEnterpriseGroup entered or JournalEntryFromAccountingEntity entered or JournalEntryToAccountingEntity entered 
    		or JournalEntryFromJournal entered or JournalEntryToJournal entered or JournalEntryFromPeriod entered
    		or JournalEntryToPeriod entered or JournalEntryCreateDateRange.Begin entered or JournalEntryCreateDateRange.End entered 
			or JournalEntryDateRange.Begin entered or JournalEntryDateRange.End entered or JournalEntryTrigger)

		IsSSGLMovementFromAccountingEntityExists
    		restricted
    		when(GLMovementFromAccountingEntity not entered and GLMovementToAccountingEntity entered)
    	IsSSGLMovementCreateDateExists
    		restricted
    		when(GLMovementCreateDateRange.Begin entered and GLMovemnetDateRange.Begin entered)
    	IsSSGLMovementFromCreateDateEndExists
    		restricted
    		when((GLMovementCreateDateRange.Begin not entered and GLMovementCreateDateRange.End entered) 
    		or (GLMovementCreateDateRange.Begin entered and GLMovementCreateDateRange.End not entered))
    	IsSSLMovementPostDateEndExists
    		restricted
    		when((GLMovemnetDateRange.Begin not entered and GLMovemnetDateRange.End entered)
    		or (GLMovemnetDateRange.Begin entered and GLMovemnetDateRange.End not entered))
    	IsSSGLMovementInvalidCriteria
    		restricted
    		when(GLMovementFromAccountingEntity not entered and GLMovemnetDateRange.Begin not entered and GLMovementCreateDateRange.Begin not entered)
    	IsValidForSSGLMovement
    		restricted
    		when(GLMovementFinanceEnterpriseGroup entered or GLMovementFromAccountingEntity entered or GLMovementToAccountingEntity entered 
    		or GLMovemnetDateRange.Begin entered or GLMovemnetDateRange.End entered or GLMovementCreateDateRange.Begin entered or GLMovementCreateDateRange.End entered or GLMovementTrigger)

		IsValidForCustomerParty
			restricted
    		when(CustomerPartyCustomerGroup entered or CustomerFromPartyReceivableCompany entered or CustomerToPartyReceivableCompany entered 
    		or CustomerPartyFromCustomer entered or CustomerPartyToCustomer entered or CustomerPartyTrigger)
		CustomerPartyFromCustomerCheck
    		restricted
    		when(CustomerPartyFromCustomer not entered and CustomerPartyToCustomer entered )
    	CustomerPartyFromCompanyCheck
    		restricted
    		when(CustomerFromPartyReceivableCompany not entered and CustomerToPartyReceivableCompany entered)
    	CustomerPartyInvalidCriteria
    		restricted
    		when(CustomerPartyCustomerGroup not entered  and CustomerFromPartyReceivableCompany not entered)
    	CustomerPartyCustomerCheckForCustomerGroup
    		restricted
    		when(CustomerPartyCustomerGroup  entered and CustomerPartyFromCustomer not entered )
		CustomerPartyCustomerGroupselected
			restricted
			when(CustomerPartyCustomerGroup  entered and CustomerFromPartyReceivableCompany entered)

    	IsValidForReceivablePayment
    		restricted
    		when(ReceivablePaymentFromCompany entered or ReceivablePaymentToCompany entered or ReceivablePaymentFromHeader entered 
    		or ReceivablePaymentToHeader entered or ReceivablePaymentDateRange.Begin entered or ReceivablePaymentDateRange.End entered or ReceivablePaymentTrigger)
    	ReceivablePaymentFromCompanyCheck
    		restricted
    		when(ReceivablePaymentFromCompany not entered and ReceivablePaymentToCompany entered)
    	ReceivablePaymentFromHeaderCheck
    		restricted
    		when(ReceivablePaymentFromHeader not entered and ReceivablePaymentToHeader entered )
    	ReceivablePaymentFromDateCheck
    		restricted
    		when(ReceivablePaymentDateRange.Begin not entered and ReceivablePaymentDateRange.End entered )
    	ReceivablePaymentCompanyRangeExist
    		restricted
    		when(ReceivablePaymentFromCompany entered and ReceivablePaymentToCompany entered)
    	ReceivablePaymentRangeCheck
    		restricted
    		when((ReceivablePaymentCompanyRangeExist)
    		and (ReceivablePaymentFromHeader entered) 
    		and (ReceivablePaymentFromCompany != ReceivablePaymentToCompany))
    	ReceivablePaymentInvalidCriteria
    		restricted
    		when(ReceivablePaymentFromCompany not entered and ReceivablePaymentFromHeader not entered and ReceivablePaymentDateRange.Begin not entered)	
    	ReceivablePaymentToDateCheck
    		restricted
    		when(ReceivablePaymentDateRange.Begin entered and ReceivablePaymentDateRange.End not entered)   	

		IsValidForContactMasterAR
    		restricted
    		when(ContactMasterARCustomerGroup entered or ContactMasterARFromCustomer entered or ContactMasterARToCustomer entered or ContactMasterARCompany entered
    		or ContactMasterARToCompany entered or ContactMasterARFromCompanyCustomerContact entered or ContactMasterARToCompanyCustomerContact entered or ContactMasterARTrigger)
		ContactMasterARFromCompanyCheck
    		restricted
    		when(ContactMasterARCompany not entered and ContactMasterARToCompany entered)
    	ContactMasterARFromCustomerCheck
    		restricted
    		when(ContactMasterARFromCustomer not entered and ContactMasterARToCustomer entered )
    	ContactMasterARFromContactCheck
    		restricted
    		when(ContactMasterARFromCompanyCustomerContact not entered and ContactMasterARToCompanyCustomerContact entered )
    	ContactMasterARCustomerCheck
    		restricted
    		when(ContactMasterARCustomerGroup entered  and ContactMasterARFromCustomer not entered )
    	ContactMasterARCompanyRangeCheck
    		restricted
    		when((ContactMasterARCompany  entered and ContactMasterARToCompany entered)
    		and (ContactMasterARFromCompanyCustomerContact entered and ContactMasterARToCompanyCustomerContact entered)
    		and	(ContactMasterARCompany != ContactMasterARToCompany)
    		and	(ContactMasterARFromCompanyCustomerContact != ContactMasterARToCompanyCustomerContact))
    	ContactMasterARCustomerRangeCheck
    		restricted
    		when((ContactMasterARFromCustomer  entered and ContactMasterARToCustomer entered)
    		and (ContactMasterARFromCompanyCustomerContact entered and ContactMasterARToCompanyCustomerContact entered)
    		and	(ContactMasterARFromCustomer != ContactMasterARToCustomer)
    		and	(ContactMasterARFromCompanyCustomerContact != ContactMasterARToCompanyCustomerContact))
    	ContactMasterARCompanyContactRangeCheck
    		restricted
    		when((ContactMasterARCompany  entered and ContactMasterARToCompany entered)
    		and (ContactMasterARFromCompanyCustomerContact entered )
    		and	(ContactMasterARCompany != ContactMasterARToCompany))
    	ContactMasterARCustomerContactRangeCheck
    		restricted
    		when((ContactMasterARFromCustomer  entered and ContactMasterARToCustomer entered)
    		and (ContactMasterARFromCompanyCustomerContact entered)
    		and	(ContactMasterARFromCustomer != ContactMasterARToCustomer))
    	ContactMasterARInvalidCriteria
    		restricted
    		when(ContactMasterARCustomerGroup not entered and ContactMasterARCompany not entered and ContactMasterARFromCustomer not entered and ContactMasterARFromCompanyCustomerContact not entered)	
    		

    	IsContactMasterAPVendorRangeExists
    		restricted
    		when((ContactMasterAPFromVendor entered and ContactMasterAPToVendor entered) 
    		and (ContactMasterAPFromVendor != ContactMasterAPToVendor) and ContactMasterAPFromContactCode entered)
    	IsContactMasterAPContactCodeRangeExists 
    		restricted
    		when(ContactMasterAPFromVendor not entered and ContactMasterAPFromContactCode entered)
    	IsContactMasterAPFromVendorExists
    		restricted
    		when(ContactMasterAPFromVendor not entered and ContactMasterAPToVendor entered)
    	IsContactMasterAPVendorGroupExists			
    		restricted
    		when(ContactMasterAPVendorGroup entered and ContactMasterAPFromVendor not entered)
    	IsContactMasterAPFromContactCodeExists
    		restricted
    		when(ContactMasterAPFromContactCode not entered and ContactMasterAPToContactCode entered)
    	IsContactMasterAPInvalidCriteria	
    		restricted
    		when(ContactMasterAPVendorGroup not entered and ContactMasterAPFromVendor not entered and ContactMasterAPFromContactCode not entered)
    	IsValidForContactMasterAp
    		restricted
    		when(ContactMasterAPVendorGroup entered or ContactMasterAPFromVendor entered or ContactMasterAPToVendor entered 
    		or ContactMasterAPFromContactCode entered or ContactMasterAPToContactCode entered or ContactMasterAPTrigger)	

    	IsShipFromToVendor
    		restricted
    		when(ShipFromFromVendor not entered and ShipFromToVendor  entered)
    	IsShipFromVendorGroup
    		restricted
    		when(ShipFromVedorGroup entered and  ShipFromFromVendor not entered and ShipFromFromVendorLocation not entered)
		IsShipFromFromVendorExists
			restricted
			when(ShipFromVedorGroup entered and ShipFromFromVendor not entered )
    	IsShipFromInvalid
    		restricted
    		when(ShipFromTrigger and ShipFromVedorGroup not entered and ShipFromFromVendor not entered)
		IsShipFromToVendorLocation
    		restricted
    		when(ShipFromFromVendorLocation not entered and ShipFromToVendorLocation entered)		
    	IsShipFromVendorLocationRange
    		restricted
    		when(ShipFromFromVendor entered and ShipFromToVendor entered and (ShipFromFromVendor != ShipFromToVendor ) and ShipFromFromVendorLocation entered and ShipFromToVendorLocation entered )	
    	IsValidForShipFromParty
    		restricted
    		when(ShipFromVedorGroup entered or ShipFromFromVendor entered or ShipFromToVendor entered or ShipFromFromVendorLocation entered 
    		or ShipFromToVendorLocation entered or ShipFromSelectAll entered or ShipFromTrigger)			
    		

		IsPurchaseOrderFromCompanyExists
    		restricted
    		when(PurchaseOrderCompany not entered and PurchaseOrderToCompany entered)
    	IsPurchaseOrderCompanyExists
    		restricted
    		when((FromPurchaseOrder entered and ToPurchaseOrder entered) and (PurchaseOrderCompany entered and PurchaseOrderToCompany entered) and (PurchaseOrderCompany != PurchaseOrderToCompany ))
    	IsPurchaseOrderFromPOExists
    		restricted
    		when(FromPurchaseOrder not entered and ToPurchaseOrder entered)
    	IsPurchaseOrderFromCompanyPOExists
    		restricted
    		when((FromPurchaseOrder entered and ToPurchaseOrder entered) and PurchaseOrderCompany not entered)
    	IsPurchaseOrderPODateEndExists
    		restricted
    		when((PurchaseOrderDateRange.Begin not entered and PurchaseOrderDateRange.End entered) 
    		or (PurchaseOrderDateRange.Begin entered and PurchaseOrderDateRange.End not entered))
    	IsPurchaseOrderselectPOOrPODate
    		restricted
    		when((FromPurchaseOrder entered and ToPurchaseOrder entered ) and PurchaseOrderDateRange.Begin entered)
    	IsPurchaseOrderInvalidCriteria
    		restricted
    		when(PurchaseOrderCompany not entered and FromPurchaseOrder not entered and PurchaseOrderDateRange.Begin not entered)
    	IsValidForPurchaseOrder
    		restricted
    		when(PurchaseOrderCompany entered or PurchaseOrderToCompany entered or FromPurchaseOrder entered 
    		or ToPurchaseOrder entered or PurchaseOrderDateRange entered or PurchaseOrderTrigger)
    		

    	IsPurchaseOrderReceiptFromCompanyExists
    		restricted
    		when(ReceiveDeliveryCompany not entered and ReceiveDeliveryToCompany entered)
    	IsPurchaseOrderReceiptCompanyExists
    		restricted
    		when((FromPurchaseOrderReceipt entered and ToPurchaseOrderReceipt entered) and (ReceiveDeliveryCompany entered and ReceiveDeliveryToCompany entered) and (ReceiveDeliveryCompany != ReceiveDeliveryToCompany ))
    	IsPurchaseOrderReceiptFromReceiptExists
    		restricted
    		when(FromPurchaseOrderReceipt not entered and ToPurchaseOrderReceipt entered)
    	IsPurchaseOrderReceiptFromCompanyReceiptExists
    		restricted
    		when((FromPurchaseOrderReceipt entered and ToPurchaseOrderReceipt entered) and ReceiveDeliveryCompany not entered)
    	IsPurchaseOrderReceiptDateEndExists
    		restricted
    		when((PurchaseOrderReceiptDateRange.Begin not entered and PurchaseOrderReceiptDateRange.End entered) 
    		or (PurchaseOrderReceiptDateRange.Begin entered and PurchaseOrderReceiptDateRange.End not entered))
    	IsPurchaseOrderReceiptselectReceiptOrReceiptDate
    		restricted
    		when((FromPurchaseOrderReceipt entered and ToPurchaseOrderReceipt entered ) and PurchaseOrderReceiptDateRange.Begin entered)
    	IsPurchaseOrderReceiptInvalidCriteria
    		restricted
    		when(ReceiveDeliveryCompany not entered and FromPurchaseOrderReceipt not entered and PurchaseOrderReceiptDateRange.Begin not entered)
    	IsValidForPurchaseOrderReceipt
    		restricted
    		when(ReceiveDeliveryCompany entered or ReceiveDeliveryToCompany entered or FromPurchaseOrderReceipt entered 
    		or ToPurchaseOrderReceipt entered or PurchaseOrderReceiptDateRange entered or ReceiveDeliveryTrigger)

    	IsSupplierBalanceFromVendorCheck
			restricted
			when(SupplierBalanceFromVendor not entered and SupplierBalanceToVendor entered)
		IsSupplierBalanceVendorExists
			restricted
			when(SupplierBalanceFromVendorGroup entered and SupplierBalanceFromVendor not entered)
		IsSupplierBalanceFromVendorExists
			restricted
			when((SupplierBalanceFromLocation entered and SupplierBalanceToLocation entered) and SupplierBalanceFromVendor not entered)
		IsSupplierBalanceVendorLocationCheck
			restricted
			when((SupplierBalanceFromLocation entered and SupplierBalanceToLocation entered) and (SupplierBalanceFromVendor entered and SupplierBalanceToVendor entered) and (SupplierBalanceFromVendor != SupplierBalanceToVendor ))
		IsSupplierBalanceFromVendorLocationCheck
			restricted
			when(SupplierBalanceFromLocation not entered and SupplierBalanceToLocation entered)
		IsSupplierBalanceInalidCriteria
			restricted
			when(SupplierBalanceFromVendorGroup not entered and SupplierBalanceFromVendor not entered and SupplierBalanceFromLocation not entered)
		IsValidForSupplierBalance
			restricted
			when(SupplierBalanceFromVendorGroup entered or SupplierBalanceFromVendor entered or SupplierBalanceToVendor entered or 
			SupplierBalanceFromLocation entered or SupplierBalanceToLocation entered or SupplierBalanceTrigger)

		IsRemittanceAdviceFromCompanyCheck
			restricted
			when(RemittanceFromCompany not entered and RemittanceToCompany entered)
		IsRemittanceAdviceDateRangeCheck
			restricted
			when((FSMRemittanceDateRange.Begin not entered and FSMRemittanceDateRange.End entered)
			or	(FSMRemittanceDateRange.Begin entered and FSMRemittanceDateRange.End not entered))
		IsRemittanceAdviceInvalidCriteria
			restricted
			when(RemittanceFromCompany not entered and FSMRemittanceDateRange not entered)
		IsValidForRemittanceAdvice
			restricted
			when(RemittanceFromCompany entered or RemittanceToCompany entered or FSMRemittanceDateRange entered or RemittanceTrigger )	

		IsSupplierVendorGroup
    		restricted
    		when(SupplierFromVendorGroup not entered)
    	IsSupplierFromVendorExists
    		restricted
    		when(SupplierFromVendorGroup entered and SupplierFromVendor not entered)    	
    	IsSupplierFromVendor
    		restricted
    		when(SupplierFromVendor not entered and SupplierToVendor entered)
		IsSupplierPartyInvalidCriteria
    		restricted
    		when(SupplierFromVendorGroup not entered and SupplierFromVendor not entered and SupplierToVendor not entered)
    	IsValidForSupplierPartyMaster
			restricted
			when(SupplierFromVendorGroup entered or SupplierFromVendor entered or SupplierToVendor entered or SupplierTrigger)

		IsBillToCustomerGroup
			restricted
    		when(BillToCustomerGroup not entered)
    	IsBillToFromCustomer
    		restricted
    		when(BillToCustomerGroup entered and BillToFromCustomer not entered)
    	IsBillToFromCustomerExists
			restricted
    		when(BillToFromCustomer not entered and BillToToCustomer entered)
    	IsFromCustomerBillTo
			restricted
    		when(FromCustomerBillTo not entered and ToCustomerBillTo entered)
    	IsBillToFromCustomerRange
    		restricted
    		when((BillToFromCustomer entered and BillToToCustomer entered) 
    		and (FromCustomerBillTo entered)
    		and (BillToFromCustomer != BillToToCustomer))	    		
		IsBillToPartyInvalidCriteria
    		restricted
    		when(BillToCustomerGroup not entered and BillToFromCustomer not entered and BillToToCustomer not entered and FromCustomerBillTo not entered and ToCustomerBillTo not entered)
		IsValidForBillToPartyMaster
			restricted
    		when(BillToCustomerGroup entered or BillToFromCustomer entered or BillToToCustomer entered or FromCustomerBillTo entered or ToCustomerBillTo entered or BillToTrigger)    			

		IsItemFromItemGroup
			restricted
    		when(ItemFromItemGroup not entered)
    	IsItemFromItem
			restricted
    		when(ItemFromItemGroup entered and ItemFromItem not entered)
    	IsItemFromItemExists
    		restricted
    		when(ItemFromItem not entered and ItemToItem entered)
    	IsItemMasterInvalidCriteria
    		restricted
    		when(ItemFromItemGroup not entered and ItemFromItem not entered and ItemToItem not entered)
    	IsValidForItemMaster
    		restricted
    		when(ItemFromItemGroup entered or ItemFromItem entered or ItemToItem entered or ItemTrigger)

    	IsAccountingFinanceEnterpriseGroup
			restricted
    		when(AccountingFinanceEnterpriseGroup not entered)
    	IsAccountingFromAccountingEntity
			restricted
    		when(AccountingFinanceEnterpriseGroup entered and AccountingFromAccountingEntity not entered)
    	IsAccountingFromAccountingEntityExists
    		restricted
    		when(AccountingFromAccountingEntity not entered and AccountingToAccountingEntity entered)
    	IsAccountingEntityInvalidCriteria
    		restricted
    		when(AccountingFinanceEnterpriseGroup not entered and AccountingFromAccountingEntity not entered and AccountingToAccountingEntity not entered)
    	IsValidForAccountingEntity
    		restricted
    		when(AccountingFinanceEnterpriseGroup entered or AccountingFromAccountingEntity entered or AccountingToAccountingEntity entered or AccountingTrigger)

		IsCurrencyExFinanceEnterpriseGroup
			restricted
    		when(CurrencyExFinanceEnterpriseGroup not entered)
    	IsCurrencyExCurrencyTable
			restricted
    		when(CurrencyExCurrencyTable not entered)
    	IsCurrExchangeRateInvalidCriteria
    		restricted
    		when(CurrencyExFinanceEnterpriseGroup not entered and CurrencyExCurrencyTable not entered)
    	IsValidForCurrExchangeRate
    		restricted
    		when(CurrencyExFinanceEnterpriseGroup entered or CurrencyExCurrencyTable entered or CurrencyExTrigger)

		IsGLTranslationRateFinanceEnterpriseGroup
			restricted
    		when(GLTranslationRateFinanceEnterpriseGroup not entered)
    	IsGLFromTranslationCode
			restricted
    		when(GLTranslationRateFinanceEnterpriseGroup entered and GLFromTranslationCode not entered)
    	IsGLFromTranslationCodeExists
    		restricted
    		when(GLFromTranslationCode not entered and GLToTranslationCode entered)
    	IsCurrencyExchangePeriodRateInvalidCriteria
    		restricted
    		when(GLTranslationRateFinanceEnterpriseGroup not entered and GLFromTranslationCode not entered and GLToTranslationCode not entered)
    	IsValidForCurrencyExchangePeriodRate
    		restricted
    		when(GLTranslationRateFinanceEnterpriseGroup entered or GLFromTranslationCode entered or GLToTranslationCode entered or GeneralLedgerTranslationRateTrigger)

		IsProjectFinanceEnterpriseGroup
			restricted
    		when(ProjectFinanceEnterpriseGroup not entered)
    	IsFromProject
			restricted
    		when(ProjectFinanceEnterpriseGroup entered and FromProject not entered)
    	IsFromProjectExists
    		restricted
    		when(FromProject not entered and ToProject entered)
    	IsProjectMasterInvalidCriteria
    		restricted
    		when(ProjectFinanceEnterpriseGroup not entered and FromProject not entered and ToProject not entered)
    	IsValidForProjectMaster
    		restricted
    		when(ProjectFinanceEnterpriseGroup entered or FromProject entered or ToProject entered or ProjectTrigger)

		IsContactMasterPOHROrganization
			restricted
    		when(ContactMasterPOHROrganization not entered)
    	IsContactMasterPOFromBuyer
			restricted
    		when(ContactMasterPOHROrganization entered and ContactMasterPOFromBuyer not entered)
    	IsContactMasterPOFromBuyerExists
    		restricted
    		when(ContactMasterPOFromBuyer not entered and ContactMasterPOToBuyer entered)
    	IsContactMasterPOInvalidCriteria
    		restricted
    		when(ContactMasterPOHROrganization not entered and ContactMasterPOFromBuyer not entered and ContactMasterPOToBuyer not entered)
    	IsValidForContactMasterPO
    		restricted
    		when(ContactMasterPOHROrganization entered or ContactMasterPOFromBuyer entered or ContactMasterPOToBuyer entered or ContactMasterPOTrigger)    			

		IsInventoryFromCompany
			restricted
    		when(InventoryFromCompany not entered)
		IsInventoryToCompany
			restricted
    		when(InventoryFromCompany not entered and InventoryToCompany entered)
		IsInventoryToLocation
			restricted
    		when(InventoryFromLocation not entered and InventoryToLocation entered)
    	IsInventoryCompanyRange
    		restricted
    		when((InventoryFromCompany entered and InventoryToCompany entered) 
    		and (InventoryFromLocation entered)
    		and (InventoryFromCompany != InventoryToCompany))	    		
		IsInventoryLocationInvalidCriteria
    		restricted
    		when(InventoryFromCompany not entered and InventoryToCompany not entered and InventoryFromLocation not entered and InventoryToLocation not entered)
    	IsValidForInventoryLocation
    		restricted
    		when(InventoryFromCompany entered or InventoryToCompany entered or InventoryFromLocation entered or InventoryToLocation entered or InventoryTrigger)    			

		IsRequestingFromCompany
			restricted
    		when(RequestingFromCompany not entered)
		IsRequestingToCompany
			restricted
    		when(RequestingFromCompany not entered and RequestingToCompany entered)
		IsRequestingToLocation
			restricted
    		when(RequestingFromLocation not entered and RequestingToLocation entered)
    	IsRequestingCompanyRange
    		restricted
    		when((RequestingFromCompany entered and RequestingToCompany entered) 
    		and (RequestingFromLocation entered)
    		and (RequestingFromCompany != RequestingToCompany))	    		
		IsRequestingLocationInvalidCriteria
    		restricted
    		when(RequestingFromCompany not entered and RequestingToCompany not entered and RequestingFromLocation not entered and RequestingToLocation not entered)
    	IsValidForRequestingLocation
    		restricted
    		when(RequestingFromCompany entered or RequestingToCompany entered or RequestingFromLocation entered or RequestingToLocation entered or RequestingTrigger)    			

		IsAssetFinanceEnterpriseGroup
			restricted
    		when(AssetFinanceEnterpriseGroup not entered)
    	IsAssetFromCompany
    		restricted
    		when(AssetFinanceEnterpriseGroup entered and AssetFromCompany not entered)
    	IsAssetFromCompanyExists
			restricted
    		when(AssetFromCompany not entered and AssetToCompany entered)
    	IsAssetFromAsset
			restricted
    		when(AssetFromAsset not entered and AssetToAsset entered)
    	IsAssetFromCompanyRange
    		restricted
    		when((AssetFromCompany entered and AssetToCompany entered) 
    		and (AssetFromAsset entered)
    		and (AssetFromCompany != AssetToCompany))	    		
		IsAssetMasterInvalidCriteria
    		restricted
    		when(AssetFinanceEnterpriseGroup not entered and AssetFromCompany not entered and AssetToCompany not entered and AssetFromAsset not entered and AssetToAsset not entered)
		IsValidForAssetMaster
			restricted
    		when(AssetFinanceEnterpriseGroup entered or AssetFromCompany entered or AssetToCompany entered or AssetFromAsset entered or AssetToAsset entered or (AssetMasterTrigger or AssetTransactionTrigger))    			

		IsContactMasterRQHROrganization
			restricted
    		when(ContactMasterRQHROrganization not entered)
    	IsContactMasterRQFromRequester
			restricted
    		when(ContactMasterRQFromRequester not entered and ContactMasterRQToRequester entered)
		IsContactMasterRQInvalidCriteria
    		restricted
    		when(ContactMasterRQHROrganization not entered  and ContactMasterRQFromRequester not entered and ContactMasterRQToRequester not entered)
		IsValidForContactMasterRQ
			restricted
    		when(ContactMasterRQHROrganization entered or ContactMasterRQFromRequester entered or ContactMasterRQToRequester entered or ContactMasterRQTrigger)

		IsShipToCustomerGroup
			restricted
    		when(ShipToCustomerGroup not entered)
    	IsShipToCompanyExists
    		restricted
    		when(ShipToCustomerGroup entered and ShipToCompany not entered)
    	IsShipToCompany	
    		restricted
    		when(ShipToCompany not entered and ShipToToCompany entered)
    	IsShipToFromCustomer
    		restricted
    		when(ShipToFromCustomer not entered and ShipToToCustomer entered)
    	IsShipToFromCustomerShipTo
    		restricted
    		when(ShipToFromCustomerShipTo not entered and ShipToToCustomerShipTo entered)
    	IsShipToFromCustomerExists
    		restricted
    		when(ShipToCustomerGroup entered and ShipToCompany entered and ShipToFromCustomerShipTo entered and ShipToFromCustomer not entered)
    	IsShipToCompanyRange
    		restricted
    		when((ShipToCompany entered and ShipToToCompany entered) 
    		and (ShipToFromCustomer entered)
    		and (ShipToCompany != ShipToToCompany))
    	IsCustomerShipToRange
    		restricted
    		when((ShipToCompany entered and ShipToToCompany entered) 
    		and (ShipToFromCustomerShipTo entered)
    		and (ShipToCompany != ShipToToCompany))
    	IsShipToCustomerRange
    		restricted
    		when((ShipToFromCustomer entered and ShipToToCustomer entered) 
    		and (ShipToFromCustomerShipTo entered)
    		and (ShipToFromCustomer != ShipToToCustomer))
		IsShipToPartyInvalidCriteria
    		restricted
    		when(ShipToCustomerGroup not entered and ShipToCompany not entered and ShipToToCompany not entered and ShipToFromCustomer not entered 
    		and ShipToToCustomer not entered and ShipToFromCustomerShipTo not entered and ShipToToCustomerShipTo not entered)
		IsValidForShipToPartyMaster
			restricted
    		when(ShipToCustomerGroup entered or ShipToCompany entered or ShipToToCompany entered or ShipToFromCustomer entered 
    		or ShipToToCustomer entered or ShipToFromCustomerShipTo entered or ShipToToCustomerShipTo entered or ShipToTrigger)    

		IsContractGroup
			restricted
    		when(BODContractGroup not entered)
    	IsContractFromContract
			restricted
    		when(FromContract not entered and ToContract entered)
		IsContractInvalidCriteria
    		restricted
    		when(BODContractGroup not entered  and FromContract not entered and ToContract not entered)
		IsValidForContract
			restricted
    		when(BODContractGroup entered or FromContract entered or ToContract entered or ContractTrigger)
	   

		IsCashManagementGroup
			restricted
			when(CodeDefCashCodeManagementGroup not entered)
		IsCodeDefFromCashCode
			restricted
			when(CodeDefFromCashCode not entered and CodeDefToCashCode entered)
		IsCodeDefCashCodeInvalidCriteria
			restricted
			when(CodeDefCashCodeManagementGroup not entered and CodeDefFromCashCode not entered and CodeDefToCashCode not entered )
		IsValidForCodeDefCashCode
			restricted
			when(CodeDefCashCodeManagementGroup entered or CodeDefFromCashCode entered or CodeDefToCashCode entered or CodeDefCashCodeTrigger )


		IsCodeDefFromGLcompany
			restricted
			when(CodeDefFromGeneralLedgerCompany not entered and CodeDefToGeneralLedgerCompany entered)
		IsCodeDefGLCompanyInvalidCriteria
			restricted
			when(CodeDefFromGeneralLedgerCompany not entered and CodeDefToGeneralLedgerCompany not entered)	
		IsValidForCodeDefGLCompany
			restricted
			when(CodeDefFromGeneralLedgerCompany entered or CodeDefToGeneralLedgerCompany entered or CodeDefGLCompanyTrigger )
		 

		IsInventoryCountCompany
			restricted
			when(InventoryCountCompany not entered and InventoryCountFromLocation entered )
		IsInventoryCountLocation
			restricted
			when(InventoryCountCompany entered and (InventoryCountFromLocation not entered ))
		IsInventoryCountFromLocation
			restricted
			when(InventoryCountFromLocation not entered and InventoryCountToLocation entered)
		IsInventoryCountInvalidCriteria
			restricted
			when(InventoryCountCompany not entered and InventoryCountFromLocation not entered and InventoryCountToLocation not entered and InventoryCountItem not entered  )
		IsValidForInventoryCount
			restricted
			when(InventoryCountCompany entered or InventoryCountFromLocation entered or InventoryCountToLocation entered or InventoryCountItem entered or InventoryCountTrigger )	
 

		IsCodeDefFromTerritoryCompanyRange
    		restricted
    		when((CodeDefFromTerritoryCompany entered and CodeDefToTerritoryComapny entered) 
    		and (CodeDefFromTerritory entered or CodeDefToTerritory entered))
    		
    	IsValidForCodeDefTerritory
			restricted
			when(CodeDefFromTerritoryCompany entered)	
    	
 
	Local Fields
		LocalActionCode				is Alpha size 1
            States
                Create  value is "C"
                Update	value is "U"
                Trigger	value is "T"
	
	Derived Fields
	
	Relations
		
		ItemLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company												= InventoryCountCompany 	
				related.InventoryLocation									= InventoryCountFromLocation
				related.Item												= InventoryCountItem	

	Field Rules
    	CurrentDate
			default to current timestamp
		SelectType
			required
			if(SelectType entered)
				cannot be changed
					"SelectTypeCannotBeChanged"
					
		PayableBODSelectType
			if(PayableBODSelectType entered)
				if( old PayableBODSelectType != blank and PayableBODSelectType != old PayableBODSelectType )
					cannot be changed
						"Payable_\B\O\DSelectTypeCannotBeChanged"
			if(old PayableBODSelectType.PayableTransaction or old PayableBODSelectType.PayableTracker)
					if(PayableBODSelectType = blank)
						required
					
		ReceivableBODSelectType
			if(ReceivableBODSelectType entered)
				if(ReceivableBODSelectType changed and old ReceivableBODSelectType != blank)
					cannot be changed
						"Receivable_\B\O\DSelectTypeCannotBeChanged"
			if(old ReceivableBODSelectType.ReceivablePayment or old ReceivableBODSelectType.ReceivableTracker)
					if(ReceivableBODSelectType = blank)
						required
						
		Integration
			if(SelectType.Integration)
				required
				cannot be changed
		PayablesToVendor
    		if(PayablesFromVendor entered and PayablesToVendor not entered)
    			default to PayablesFromVendor
    	InvoiceToCompany
    		if(InvoiceFromCompany entered and InvoiceToCompany not entered)
    			default to InvoiceFromCompany
    	ToInvoice
    		if(FromInvoice entered and ToInvoice not entered)
    			default to FromInvoice
    	ReceivableToCustomer
    		if(ReceivableFromCustomer entered and ReceivableToCustomer not entered)
    			default to ReceivableFromCustomer
    	ReceivableInvoiceToCompany
    		if(ReceivableInvoiceFromCompany entered and ReceivableInvoiceToCompany not entered)
    			default to ReceivableInvoiceFromCompany
    	ToReceivableInvoice
    		if(FromReceivableInvoice entered and ToReceivableInvoice not entered)
    			default to FromReceivableInvoice
    	PayableTransactionToVendor
    		if(PayableTransactionFromVendor entered and PayableTransactionToVendor not entered)
    			default to PayableTransactionFromVendor
    	PayableTransactionToCompany
    		if(PayableTransactionFromCompany entered and PayableTransactionToCompany not entered)
    			default to PayableTransactionFromCompany
    	PayableTransactionToInvoice
    		if(PayableTransactionFromInvoice entered and PayableTransactionToInvoice not entered)
    			default to PayableTransactionFromInvoice
    	JournalEntryToAccountingEntity
    		if(JournalEntryFromAccountingEntity entered and JournalEntryToAccountingEntity not entered)
    			default to JournalEntryFromAccountingEntity
    	JournalEntryToJournal
    		if(JournalEntryFromJournal entered and JournalEntryToJournal not entered )
    			default to JournalEntryFromJournal
    	JournalEntryToPeriod
    		if(JournalEntryFromPeriod entered and JournalEntryToPeriod not entered)
    			default to JournalEntryFromPeriod
    	GLMovementToAccountingEntity
    		if(GLMovementFromAccountingEntity entered and GLMovementToAccountingEntity not entered )
    			default to GLMovementFromAccountingEntity
    	CustomerToPartyReceivableCompany
    		if (CustomerFromPartyReceivableCompany  entered and CustomerToPartyReceivableCompany not entered)
				default to CustomerFromPartyReceivableCompany
		CustomerPartyToCustomer
			if (CustomerPartyFromCustomer  entered and CustomerPartyToCustomer not entered)
				default to CustomerPartyFromCustomer
		ReceivablePaymentToCompany
			if (ReceivablePaymentFromCompany  entered and ReceivablePaymentToCompany not entered)
				default to ReceivablePaymentFromCompany
		ReceivablePaymentToHeader
			if (ReceivablePaymentFromHeader  entered and ReceivablePaymentToHeader not entered)
				default to ReceivablePaymentFromHeader
		ContactMasterARToCompany
			if (ContactMasterARCompany  entered and ContactMasterARToCompany not entered)
				default to ContactMasterARCompany
		ContactMasterARToCustomer
			if (ContactMasterARFromCustomer  entered and ContactMasterARToCustomer not entered)
				default to ContactMasterARFromCustomer
		ContactMasterARToCompanyCustomerContact
			if (ContactMasterARFromCompanyCustomerContact  entered and ContactMasterARToCompanyCustomerContact not entered)
				default to ContactMasterARFromCompanyCustomerContact
		ShipFromToVendor
    		if(ShipFromFromVendor entered and ShipFromToVendor not entered )
    			default to ShipFromFromVendor
    	ShipFromToVendorLocation
    		if(ShipFromFromVendorLocation entered and ShipFromToVendorLocation not entered)
    			default to ShipFromFromVendorLocation
    	ContactMasterAPToVendor
    		if(ContactMasterAPFromVendor entered and ContactMasterAPToVendor not entered)
    			default to ContactMasterAPFromVendor
    	ContactMasterAPToContactCode
    		if(ContactMasterAPFromContactCode entered and ContactMasterAPToContactCode not entered)
    			default to ContactMasterAPFromContactCode
    	PurchaseOrderToCompany
    		if(PurchaseOrderCompany entered and PurchaseOrderToCompany not entered)
    			default to PurchaseOrderCompany
    	ReceiveDeliveryToCompany
    		if(ReceiveDeliveryCompany entered and ReceiveDeliveryToCompany not entered)
    			default to ReceiveDeliveryCompany
    	SupplierBalanceToVendor
    		if(SupplierBalanceFromVendor entered and SupplierBalanceToVendor not entered)
    			default to SupplierBalanceFromVendor
    	SupplierBalanceToLocation
    		if(SupplierBalanceFromLocation entered and SupplierBalanceToLocation not entered)
    			default to SupplierBalanceFromLocation
    	RemittanceToCompany
    		if(RemittanceFromCompany entered and RemittanceToCompany not entered)
    			default to RemittanceFromCompany
    	SupplierToVendor
			if (SupplierFromVendor  entered and SupplierToVendor not entered)
				default to SupplierFromVendor
    	BillToToCustomer
			if (BillToFromCustomer  entered and BillToToCustomer not entered)
				default to BillToFromCustomer
    	ToCustomerBillTo		
			if (FromCustomerBillTo  entered and ToCustomerBillTo not entered)
				default to FromCustomerBillTo
    	ItemToItem
    		if (ItemFromItem  entered and ItemToItem not entered)
				default to ItemFromItem
		AccountingToAccountingEntity
			if (AccountingFromAccountingEntity  entered and AccountingToAccountingEntity not entered)
				default to AccountingFromAccountingEntity
    	GLToTranslationCode
    		if (GLFromTranslationCode  entered and GLToTranslationCode not entered)
				default to GLFromTranslationCode
    	ToProject
    		if (FromProject entered and ToProject not entered)
				default to FromProject
    	ContactMasterPOToBuyer
    		if (ContactMasterPOFromBuyer entered and ContactMasterPOToBuyer not entered)
				default to ContactMasterPOFromBuyer
    	InventoryToCompany
    		if (InventoryFromCompany entered and InventoryToCompany not entered)
				default to InventoryFromCompany
		InventoryToLocation		
			if (InventoryFromLocation entered and InventoryToLocation not entered)
				default to InventoryFromLocation
		RequestingToCompany
    		if (RequestingFromCompany entered and RequestingToCompany not entered)
				default to RequestingFromCompany
		RequestingToLocation		
			if (RequestingFromLocation entered and RequestingToLocation not entered)
				default to RequestingFromLocation		
		AssetToCompany
			if (AssetFromCompany  entered and AssetToCompany not entered)
				default to AssetFromCompany
    	AssetToAsset		
			if (AssetFromAsset  entered and AssetToAsset not entered)
				default to AssetFromAsset
		ContactMasterRQToCompany
			if (ContactMasterRQFromCompany  entered and ContactMasterRQToCompany not entered)
				default to ContactMasterRQFromCompany
    	ContactMasterRQToRequester		
			if (ContactMasterRQFromRequester  entered and ContactMasterRQToRequester not entered)
				default to ContactMasterRQFromRequester
		ShipToToCompany
			if (ShipToCompany  entered and ShipToToCompany not entered)
				default to ShipToCompany		
		ShipToToCustomer
			if (ShipToFromCustomer  entered and ShipToToCustomer not entered)
				default to ShipToFromCustomer
		ShipToToCustomerShipTo
			if (ShipToFromCustomerShipTo  entered and ShipToToCustomerShipTo not entered)
				default to ShipToFromCustomerShipTo
		ToContract
			if(FromContract entered and ToContract not entered)
				default to FromContract
		CodeDefToCashCode
			if(CodeDefFromCashCode entered and CodeDefToCashCode not entered)
				default to CodeDefFromCashCode
		CodeDefToGeneralLedgerCompany
			if(CodeDefFromGeneralLedgerCompany entered and CodeDefToGeneralLedgerCompany not entered)
				default to CodeDefFromGeneralLedgerCompany
		InventoryCountToLocation
			if(InventoryCountFromLocation entered and InventoryCountToLocation not entered)
				default to InventoryCountFromLocation
				
		InventoryCountItemGroup
			default to actor.context.InventoryCompany.ItemGroup
			
		InventoryCountItem	
			if (InventoryCountFromLocation entered and InventoryCountToLocation = InventoryCountFromLocation)
				constraint (ItemLocationRel exists)                                                  
					"Item<InventoryCountItem>DoesNotExistIn<InventoryCountFromLocation>"
		
		IncludeInactiveItems
            default to true


		CodeDefToTerritory					
			if(CodeDefFromTerritoryCompany entered and CodeDefToTerritoryComapny not entered and CodeDefFromTerritory entered)
    			default to CodeDefFromTerritory
    			
    	CodeDefToTerritoryComapny					
			if(CodeDefFromTerritoryCompany entered and CodeDefToTerritoryComapny not entered and CodeDefFromTerritory not entered and CodeDefToTerritory not entered)
    			default to CodeDefFromTerritoryCompany
						
    Rule Blocks

    	SupplierPartyMasterCriteria
    		invoke BODDataInitialLoadVendorCriteria Vendor
    			invoked.PrmVendorGroup				= SupplierFromVendorGroup
				invoked.PrmFromVendor				= SupplierFromVendor
				invoked.PrmToVendor					= SupplierToVendor

		FinancialPartyMasterCriteria1
			invoke BODDataInitialLoadBankEntityCriteria BankEntity
				invoked.PrmFromCashManagementGroup	= FinancialFromCashManagementGroup
				invoked.PrmFromBankEntity			= FinancialFromBankEntity
				invoked.PrmToBankEntity				= FinancialToBankEntity

		ItemMasterCriteria
			invoke BODDataInitialLoadItemCriteria Item
				invoked.PrmFromItemGroup			= ItemFromItemGroup
				invoked.PrmFromItem					= ItemFromItem
				invoked.PrmToItem					= ItemToItem

		AssetMasterCriteria
			invoke BODDataInitialLoadAssetCriteria Asset
				invoked.PrmFEG						= AssetFinanceEnterpriseGroup
				invoked.PrmFromCompany				= AssetFromCompany
				invoked.PrmToCompany				= AssetToCompany
				invoked.PrmFromAsset				= AssetFromAsset
				invoked.PrmToAsset					= AssetToAsset
		AssetTransactionCriteria
			invoke BODDataInitialLoadAssetTransactionCriteria Asset
				invoked.PrmFEG						= AssetFinanceEnterpriseGroup
				invoked.PrmFromCompany				= AssetFromCompany
				invoked.PrmToCompany				= AssetToCompany
				invoked.PrmFromAsset				= AssetFromAsset
				invoked.PrmToAsset					= AssetToAsset

		CustomerPartyMasterCriteria
			invoke BODDataInitialLoadCompanyCustomerCriteria CompanyCustomer
				invoked.PrmCustomerGroup			= CustomerPartyCustomerGroup
				invoked.PrmFromCompany				= CustomerFromPartyReceivableCompany
				invoked.PrmToCompany				= CustomerToPartyReceivableCompany
				invoked.PrmFromCustomer				= CustomerPartyFromCustomer
				invoked.PrmToCustomer				= CustomerPartyToCustomer

		ShipFromPartyMasterCriteria1
			invoke BODDataInitialLoadVendorLocationCriteria VendorLocation
				invoked.PrmVendorGroup				= ShipFromVedorGroup
				invoked.PrmFromVendor				= ShipFromFromVendor
				invoked.PrmToVendor					= ShipFromToVendor
				invoked.PrmFromVendorLocation		= ShipFromFromVendorLocation
				invoked.PrmToVendorLocation			= ShipFromToVendorLocation

		ShipToPartyMasterCriteria
			invoke BODDataInitialLoadCustomerShipToCriteria CustomerShipTo
				invoked.PrmCustomerGroup			= ShipToCustomerGroup
				invoked.PrmFromCompany				= ShipToCompany
				invoked.PrmToCompany				= ShipToToCompany
				invoked.PrmFromCustomer				= ShipToFromCustomer
				invoked.PrmToCustomer				= ShipToToCustomer
				invoked.PrmFromCustomerShipTo		= ShipToFromCustomerShipTo
				invoked.PrmToCustomerShipTo			= ShipToToCustomerShipTo

		BillToPartyMasterCriteria
			invoke BODDataInitialLoadCustomerBillToCriteria CustomerBillTo
				invoked.PrmCustomerGroup			= BillToCustomerGroup
				invoked.PrmFromCustomer				= BillToFromCustomer
				invoked.PrmToCustomer				= BillToToCustomer
				invoked.PrmFromCustomerBillTo		= FromCustomerBillTo
				invoked.PrmToCustomerBillTo			= ToCustomerBillTo

		InventoryLocationCriteria
			invoke BODDataInitialLoadInventoryLocationCriteria InventoryLocation
				invoked.PrmFromCompany				= InventoryFromCompany
				invoked.PrmToCompany				= InventoryToCompany
				invoked.PrmFromInventoryLocation	= InventoryFromLocation
				invoked.PrmToInventoryLocation		= InventoryToLocation

		ContactMasterRQCriteria
			invoke BODDataInitialLoadContactMasterRQCriteria Requester
				invoked.PrmHROrganization			= ContactMasterRQHROrganization
				invoked.PrmFromRequester			= ContactMasterRQFromRequester
				invoked.PrmToRequester				= ContactMasterRQToRequester

		ContactMasterPOCriteria
			invoke BODDataInitialLoadContactMasterPOCriteria Buyer
				invoked.PrmHROrganization			= ContactMasterPOHROrganization
				invoked.PrmFromBuyer				= ContactMasterPOFromBuyer
				invoked.PrmToBuyer					= ContactMasterPOToBuyer

		ContactMasterARCriteria
			invoke BODDataInitialLoadContactMasterARCriteria CompanyCustomerContact
				invoked.PrmCustomerGroup				= ContactMasterARCustomerGroup
				invoked.PrmFromCompany					= ContactMasterARCompany
				invoked.PrmToCompany					= ContactMasterARToCompany
				invoked.PrmFromCustomer					= ContactMasterARFromCustomer
				invoked.PrmToCustomer					= ContactMasterARToCustomer
				invoked.PrmFromCompanyCustomerContact	= ContactMasterARFromCompanyCustomerContact
				invoked.PrmToCompanyCustomerContact		= ContactMasterARToCompanyCustomerContact

		ContactMasterAPCriteria
			invoke BODDataInitialLoadContactMasterAPCriteria VendorContact
				invoked.PrmVendorGroup				= ContactMasterAPVendorGroup
				invoked.PrmFromVendor				= ContactMasterAPFromVendor
				invoked.PrmToVendor					= ContactMasterAPToVendor
				invoked.PrmFromContactCode			= ContactMasterAPFromContactCode
				invoked.PrmToContactCode			= ContactMasterAPToContactCode

		AccountingEntityCriteria
			invoke BODDataInitialLoadAccountingEntityCriteria AccountingEntity
				invoked.PrmFEG								= AccountingFinanceEnterpriseGroup
				invoked.PrmFromAccountingEntity				= AccountingFromAccountingEntity
				invoked.PrmToAccountingEntity				= AccountingToAccountingEntity

		CurrExchangeRateCriteria
			invoke BODDataInitialLoadCurrencyExchangeRateCriteria CurrExchangeRate
				invoked.PrmFEG								= CurrencyExFinanceEnterpriseGroup
				invoked.PrmCurrencyTable					= CurrencyExCurrencyTable

		GeneralLedgerTranslationRateCriteria
			invoke BODDataInitialLoadGeneralLedgerTranslationRateCriteria GeneralLedgerTranslationRate
				invoked.PrmFEG								= GLTranslationRateFinanceEnterpriseGroup
				invoked.PrmGLFromTranslationCode		    = GLFromTranslationCode
				invoked.PrmGLToTranslationCode		    	= GLToTranslationCode

		ReportingBasisLedgerCriteria1
			invoke BODDataInitialLoadReportingBasisLedgerCriteria1 LedgerHierarchy
				invoked.PrmFEG								= ReportingBasisLedgerFinanceEnterpriseGroup
				invoked.PrmReportingBasisLedgerFrom		    = ReportingBasisLedgerFrom
				invoked.PrmReportingBasisLedgerTo		    = ReportingBasisLedgerTo

		RequestingLocationCriteria
			invoke BODDataInitialLoadRequestingLocationCriteria RequestingLocation
				invoked.PrmFromCompany						= RequestingFromCompany
				invoked.PrmToCompany						= RequestingToCompany
				invoked.PrmFromLocation						= RequestingFromLocation
				invoked.PrmToLocation						= RequestingToLocation

		ReportingChartCriteria1
			invoke BODDataInitialLoadReportingChartCriteria1 ReportingChart
				invoked.PrmFEG									= ReportingFinanceEnterpriseGroup
				invoked.PrmFromReportingChart					= ReportingFromReportingChart
				invoked.PrmToReportingChart						= ReportingToReportingChart

		CodeDefUOMCriteria1
			invoke BODDataInitialLoadCodeDefUOMCriteria UnitOfMeasure
				invoked.PrmFEG							= CodeDefUOMFinancialEnterpriseGroup
				invoked.PrmFromItemGroup				= UOMFromItemGroup
				invoked.PrmFromUOM						= UOMFromUnitOfMeasure
				invoked.PrmToUOM						= UOMToUnitOfMeasure

		CodeDefAccountCriteria1
			invoke BODDataInitialLoadCodeDefAccountCriteria1 Account
				invoked.PrmFEG						= CodeDefAccountFinanceEnterpriseGroup
				invoked.PrmFromAccount				= CodeDefinitionFromAccount
				invoked.PrmToAccount				= CodeDefinitionToAccount

		CodeDefFinanceDimension1Criteria1
			invoke BODDataInitialLoadCodeDefFinanceDimension1Criteria1 FinanceDimension1
				invoked.PrmFEG								= FinanceDimension1FEG
				invoked.PrmFromFinanceDimension1			= CodeDefFromFinanceDimension1
				invoked.PrmToFinanceDimension1				= CodeDefToFinanceDimension1

		CodeDefFinanceDimension2Criteria1
			invoke BODDataInitialLoadCodeDefFinanceDimension2Criteria1 FinanceDimension2
				invoked.PrmFEG								= FinanceDimension1FEG
				invoked.PrmFromFinanceDimension2			= CodeDefFromFinanceDimension2
				invoked.PrmToFinanceDimension2				= CodeDefToFinanceDimension2

		CodeDefFinanceDimension3Criteria1
			invoke BODDataInitialLoadCodeDefFinanceDimension3Criteria1 FinanceDimension3
				invoked.PrmFEG								= FinanceDimension1FEG
				invoked.PrmFromFinanceDimension3			= CodeDefFromFinanceDimension3
				invoked.PrmToFinanceDimension3				= CodeDefToFinanceDimension3

		CodeDefFinanceDimension4Criteria1
			invoke BODDataInitialLoadCodeDefFinanceDimension4Criteria1 FinanceDimension4
				invoked.PrmFEG								= FinanceDimension1FEG
				invoked.PrmFromFinanceDimension4			= CodeDefFromFinanceDimension4
				invoked.PrmToFinanceDimension4				= CodeDefToFinanceDimension4

		CodeDefFinanceDimension5Criteria1
			invoke BODDataInitialLoadCodeDefFinanceDimension5Criteria1 FinanceDimension5
				invoked.PrmFEG								= FinanceDimension1FEG
				invoked.PrmFromFinanceDimension5			= CodeDefFromFinanceDimension5
				invoked.PrmToFinanceDimension5				= CodeDefToFinanceDimension5

		CodeDefFinanceDimension6Criteria1
			invoke BODDataInitialLoadCodeDefFinanceDimension6Criteria1 FinanceDimension6
				invoked.PrmFEG								= FinanceDimension1FEG
				invoked.PrmFromFinanceDimension6			= CodeDefFromFinanceDimension6
				invoked.PrmToFinanceDimension6				= CodeDefToFinanceDimension6

		CodeDefFinanceDimension7Criteria1
			invoke BODDataInitialLoadCodeDefFinanceDimension7Criteria1 FinanceDimension7
				invoked.PrmFEG								= FinanceDimension1FEG
				invoked.PrmFromFinanceDimension7			= CodeDefFromFinanceDimension7
				invoked.PrmToFinanceDimension7				= CodeDefToFinanceDimension7

		CodeDefFinanceDimension8Criteria1
			invoke BODDataInitialLoadCodeDefFinanceDimension8Criteria1 FinanceDimension8
				invoked.PrmFEG								= FinanceDimension1FEG
				invoked.PrmFromFinanceDimension8			= CodeDefFromFinanceDimension8
				invoked.PrmToFinanceDimension8				= CodeDefToFinanceDimension8

		CodeDefFinanceDimension9Criteria1
			invoke BODDataInitialLoadCodeDefFinanceDimension9Criteria1 FinanceDimension9
				invoked.PrmFEG								= FinanceDimension1FEG
				invoked.PrmFromFinanceDimension9			= CodeDefFromFinanceDimension9
				invoked.PrmToFinanceDimension9				= CodeDefToFinanceDimension9

		CodeDefFinanceDimension10Criteria1
			invoke BODDataInitialLoadCodeDefFinanceDimension10Criteria1 FinanceDimension10
				invoked.PrmFEG								= FinanceDimension1FEG
				invoked.PrmFromFinanceDimension10			= CodeDefFromFinanceDimension10
				invoked.PrmToFinanceDimension10				= CodeDefToFinanceDimension10

		CodeDefCustomerMajorClassCriteria1
			invoke BODDataInitialLoadCustomerMajorClassCriteria1 CustomerMajorClass
				invoked.PrmFEG								= CodeDefCustomerFEG
				invoked.PrmFromCustomerType					= CodeDefFromCustomerMajorClass
				invoked.PrmToCustomerType					= CodeDefToCustomerMajorClass

		CodeDefTerritoryCriteria1
			invoke BODDataInitialLoadTerritoryCriteria1 Territory
				invoked.PrmFromTerritoryCompany					= CodeDefFromTerritoryCompany
				invoked.PrmToTerritoryCompany					= CodeDefToTerritoryComapny
		CodeDefTerritoryCriteria2
			invoke BODDataInitialLoadTerritoryCriteria2 Territory
				invoked.PrmFromTerritoryCompany				= CodeDefFromTerritoryCompany
				invoked.PrmFromTerritory					= CodeDefFromTerritory
				invoked.PrmToTerritory						= CodeDefToTerritory

		CodeDefAccountingUnitCriteria1
			invoke BODDataInitialLoadAccountingUnitCriteria1 AccountingUnit
				invoked.PrmFEG									= CodeDefFinanceEnterpriseGroup
				invoked.PrmFromAccountingEntity					= CodeDefFromAccountingEntity
				invoked.PrmToAccountingEntity					= CodeDefToAccountingEntity
		CodeDefAccountingUnitCriteria2
			invoke BODDataInitialLoadAccountingUnitCriteria2 AccountingUnit
				invoked.PrmFEG								= CodeDefFinanceEnterpriseGroup
				invoked.PrmFromAccountingEntity				= CodeDefFromAccountingEntity
				invoked.PrmFromAccountingUnit				= CodeDefFromAccountingUnit
				invoked.PrmToAccountingUnit					= CodeDefToAccountingUnit

		CodeDefAccountingEntityCriteria1
			invoke BODDataInitialLoadCodeDefAccountingEntityCriteria1 AccountingEntityGroupMember
				invoked.PrmFEG						= CodeDefFinanceEnterpriseGroupAEGroup
				invoked.PrmFromAccountingEntityGroup		= CodeDefFromAccountingEntityAEGroup
				invoked.PrmToAccountingEntityGroup		= CodeDefToAccountingEntityAEGroup	

		PurchaseOrderCriteria
			invoke BODDataInitialLoadPurchaseOrderCriteria PurchaseOrder
				invoked.PrmFromCompany				= PurchaseOrderCompany
				invoked.PrmToCompany				= PurchaseOrderToCompany
				invoked.PrmFromPurchaseOrder		= FromPurchaseOrder
				invoked.PrmToPurchaseOrder			= ToPurchaseOrder
				invoked.PrmDateRange				= PurchaseOrderDateRange

		PurchaseOrderReceiptCriteria
			invoke BODDataInitialLoadPurchaseOrderReceiptCriteria PurchaseOrderReceipt
				invoked.PrmFromCompany					= ReceiveDeliveryCompany
				invoked.PrmToCompany					= ReceiveDeliveryToCompany
				invoked.PrmFromPurchaseOrderReceipt		= FromPurchaseOrderReceipt
				invoked.PrmToPurchaseOrderReceipt		= ToPurchaseOrderReceipt
				invoked.PrmDateRange					= PurchaseOrderReceiptDateRange

		PayablesInvoiceCriteria1
			invoke BODDataInitialLoadPayablesInvoiceCriteria PayablesInvoice
				invoked.PrmVendorGroup					= PayablesVendorGroup
				invoked.PrmFromCompany					= InvoiceFromCompany
				invoked.PrmToCompany					= InvoiceToCompany
				invoked.PrmFromVendor					= PayablesFromVendor
				invoked.PrmToVendor						= PayablesToVendor
				invoked.PrmFromInvoice					= FromInvoice
				invoked.PrmToInvoice					= ToInvoice
				invoked.PrmDateRange					= InvoiceDateRange
				invoked.PrmCreateDateRange				= CreateDateRange
				invoked.PrmStatus						= PayablesInvoiceStatus
				

		RequisitionReturnCriteria1
			invoke BODDataInitialLoadRequisitionReturnCriteria1 RequisitionLine
				invoked.PrmCompany					= ReqReturnCompany
				invoked.PrmReturnedQuantity         = ReqReturnQuantity

		ChartOfAccountCriteria1
			invoke BODDataInitialLoadChartOfAccountCriteria1 ReportingChartAccount
				invoked.PrmFinanceEnterpriseGroup				= ChartOfAccountFinanceEnterpriseGroup
				invoked.PrmFromReportingChart					= FromChartOfAccount
				invoked.PrmToReportingChart						= ToChartOfAccount

		InventoryCountCriteria1
			invoke BODDataInitialLoadInventoryCountCriteria1 ItemLocation
				invoked.PrmCompany  				= InventoryCountCompany
				invoked.PrmFromLocation 			= InventoryCountFromLocation
				invoked.PrmToLocation 				= InventoryCountToLocation
				invoked.PrmItem						= InventoryCountItem
		
		InventoryCountCriteria2
			invoke BODDataInitialLoadInventoryCountCriteria2 ItemLocation
				invoked.PrmCompany  				= InventoryCountCompany
				invoked.PrmFromLocation 			= InventoryCountFromLocation
				invoked.PrmToLocation 				= InventoryCountToLocation
				invoked.PrmItem						= InventoryCountItem
				

		ReceivableInvoiceCriteria1
			invoke BODDataInitialLoadReceivableInvoiceCriteria ReceivableInvoice
				invoked.PrmCustomerGroup			= ReceivableCustomerGroup
				invoked.PrmFromCompany				= ReceivableInvoiceFromCompany
				invoked.PrmToCompany				= ReceivableInvoiceToCompany
				invoked.PrmFromCustomer				= ReceivableFromCustomer
				invoked.PrmToCustomer				= ReceivableToCustomer
				invoked.PrmReceivableInvoiceType	= ReceivablesInvoiceType
				invoked.PrmFromReceivableInvoice    = FromReceivableInvoice
				invoked.PrmToReceivableInvoice		= ToReceivableInvoice
				invoked.PrmDate						= ReceivableDateRange
				invoked.PrmCreateDateRange          = ReceivableCreateDateRange

		SupplierBalanceCriteria
			invoke BODDataInitialLoadSupplierBalanceCriteria VendorBalance
				invoked.PrmFromVendorGroup			= SupplierBalanceFromVendorGroup
				invoked.PrmFromVendor				= SupplierBalanceFromVendor
				invoked.PrmToVendor					= SupplierBalanceToVendor
				invoked.PrmFromLocation				= SupplierBalanceFromLocation
				invoked.PrmToLocation				= SupplierBalanceToLocation

		PayableTransactionCriteria1
			if(IsPayableTransaction)
				invoke BODDataInitialLoadPayableTransactionCriteria PayablesInvoicePayment
					invoked.PrmVendorGroup				= PayableTransactionVendorGroup
					invoked.PrmFromCompany				= PayableTransactionFromCompany
					invoked.PrmToCompany				= PayableTransactionToCompany
					invoked.PrmFromVendor				= PayableTransactionFromVendor
					invoked.PrmToVendor					= PayableTransactionToVendor
					invoked.PrmFromPayablesInvoice		= PayableTransactionFromInvoice
					invoked.PrmToPayablesInvoice		= PayableTransactionToInvoice
					invoked.PrmCheckDateRange			= PayableTransactionDateRange
					invoked.PrmCreateDateRange			= PayableTransactionCreateDateRange
			if(IsPayableTracker)	
				invoke BODDataInitialLoadCriteriaPayableTracker CashLedgerPayablesPayment
					invoked.PrmVendorGroup					= PayableTransactionVendorGroup
					invoked.PrmFromCompany					= PayableTransactionFromCompany
					invoked.PrmToCompany					= PayableTransactionToCompany
					invoked.PrmFromVendor					= PayableTransactionFromVendor
					invoked.PrmToVendor						= PayableTransactionToVendor
					invoked.PrmPaymentDateRange				= PayableTransactionCreateDateRange	
				

		JournalEntryCriteria1
			invoke BODDataInitialLoadJournalEntryCriteria GeneralLedgerJournalControl
				invoked.PrmFinanceEnterpriseGroup				= JournalEntryFinanceEnterpriseGroup
				invoked.PrmFromAccountingEntity					= JournalEntryFromAccountingEntity
				invoked.PrmToAccountingEntity					= JournalEntryToAccountingEntity
				invoked.PrmFromJournal							= JournalEntryFromJournal
				invoked.PrmToJournal							= JournalEntryToJournal
				invoked.PrmPostingDateRange						= JournalEntryDateRange
				invoked.PrmCreateDateRange						= JournalEntryCreateDateRange
				invoked.PrmFromPeriod							= JournalEntryFromPeriod
				invoked.PrmToPeriod								= JournalEntryToPeriod
			
		GLMovementCriteria1
			invoke BODDataInitialLoadGeneralLedgerTotalCriteria GeneralLedgerTotal
				invoked.PrmFinanceEnterpriseGroup				= GLMovementFinanceEnterpriseGroup
				invoked.PrmFromAccountingEntity					= GLMovementFromAccountingEntity
				invoked.PrmToAccountingEntity					= GLMovementToAccountingEntity
				invoked.PrmDateRange							= GLMovemnetDateRange
				invoked.PrmCreateDateRange						= GLMovementCreateDateRange

		ProjectMasterCriteria
			invoke BODDataInitialLoadProjectCriteria Project
				invoked.PrmFinanceEnterpriseGroup	= ProjectFinanceEnterpriseGroup
				invoked.PrmFromProject				= FromProject
				invoked.PrmToProject				= ToProject

		ReceivablePaymentCriteria
			if(IsReceivablePayment)
				invoke BODDataInitialLoadCriteriaReceivablePayment ReceivablePaymentHeader
					invoked.PrmFromCompany						= ReceivablePaymentFromCompany
					invoked.PrmToCompany						= ReceivablePaymentToCompany
					invoked.PrmFromReceivablePaymentHeader		= ReceivablePaymentFromHeader	
					invoked.PrmToReceivablePaymentHeader		= ReceivablePaymentToHeader
					invoked.PrmDateRange 						= ReceivablePaymentDateRange

			if(IsReceivableTracker)
				invoke BODDataInitialLoadCriteriaReceivableTracker ReceivablePayment
					invoked.PrmFromCompany						= ReceivablePaymentFromCompany
					invoked.PrmToCompany						= ReceivablePaymentToCompany
					invoked.PrmFromReceivablePaymentHeader		= ReceivablePaymentFromHeader	
					invoked.PrmToReceivablePaymentHeader		= ReceivablePaymentToHeader
			

		RemittanceCriteria
			invoke BODDataInitialLoadRemittanceAdvice CashLedgerPayablesPayment
				invoked.PrmFromCompany = RemittanceFromCompany
				invoked.PrmToCompany   = RemittanceToCompany
				invoked.PrmDateRange   = FSMRemittanceDateRange
				

		ContractCriteria
			invoke BODDataInitialLoadContractCriteria Contract
				invoked.PrmContractGroup = BODContractGroup
				invoked.PrmFromContract	 = FromContract
				invoked.PrmToContract    = ToContract
				

		CodeDefCashCodeCriteria
			invoke BODDataInitialLoadCashCodeCriteria CashCode
				invoked.PrmCashManagementGroup 	= CodeDefCashCodeManagementGroup
				invoked.PrmFromCashCode 		= CodeDefFromCashCode
				invoked.PrmToCashCode 			= CodeDefToCashCode
				

		CodeDefGeneralLedgerCompanyCriteria
			invoke BODDataInitialLoadGeneralLedgerCompanyCriteria GeneralLedgerCompany
				invoked.PrmFromGeneralLedgerCompany = CodeDefFromGeneralLedgerCompany
				invoked.PrmToGeneralLedgerCompany 	= CodeDefToGeneralLedgerCompany

		SupplierInvoiceRules
			if(PayablesFromVendor  entered or PayablesToVendor entered)
				constraint(PayablesVendorGroup entered)
					"VendorGroupIsRequired"
			constraint(!IsSupplierInvoiceFromVendorExists)
				"FromVendorIsRequired"
			constraint(!IsSupplierInvoiceVendorExists)
				"IfVendorEnteredCompanyMustBeBlank"
			constraint(!IsSupplierInvoiceFromCompanyExists)
				"FromCompanyIsRequired"
			constraint(!IsSupplierInvoiceCompanyExists)
				"IfCompanyRangeEnteredInvoiceValuesMustBeBlank"
			constraint(!IsSupplierInvoiceFromInvoiceExists)
				"FromInvoiceIsRequired"
			constraint(!IsSupplierInvoiceFromCompanyInvoiceExists)
				"IfInvoiceValuesEnteredFromCompanyIsRequired"
			constraint(!IsPayablesVendorExists)
				"VendorIsMandatoryIfVendorGroupSelected"
			constraint(!IsSupplierInvoiceCreateDateExists)
				"EitherSelectInvoiceDateOrCreateDate"
			constraint(!IsSupplierFromCreateDateEndExists)
				"CreateDateRangeIsRequired"
			constraint(!IsSupplierFromInvoiceDateEndExists)
				"InvoiceDateRangeIsRequired"
			constraint(!IsSupplierInvoiceSelectInvoiceOrCreateDate)
				"IfInvoiceEnteredCreateDateShouldBeBlank"
			constraint(!IsSupplierInvoiceSelectInvoiceOrInvoiceDate)
				"IfInvoiceEnteredInvoiceDateShouldBeBlank"
			constraint(!IsSupplierInvoiceInvalidCriteria)
				"InvalidSelectionCriteria"
		InvoiceRules	
			if(ReceivableFromCustomer  entered or ReceivableToCustomer entered)
				constraint(ReceivableCustomerGroup entered)
					"CustomerGroupIsRequired"
			constraint(!IsReceivableInvoiceFromCustomerExists)
				"FromCustomerIsRequired"
			constraint(!IsReceivableInvoiceCustomerExists)
				"IfCustomerEnteredCompanyMustBeBlank"
			constraint(!IsReceivableInvoiceReceivableFromCompanyExists)
				"FromCompanyIsRequired"
			constraint(!IsReceivableInvoiceCompanyExists)
				"IfCompanyRangeEnteredInvoiceValuesMustBeBlank"
			constraint(!IsReceivableInvoiceFromInvoiceExists)
				"FromInvoiceIsRequired"
			constraint(!IsReceivableInvoiceFromCompanyInvoiceExists)
				"IfInvoiceValuesEnteredFromCompanyIsRequired"
			constraint(!IsReceivableCustomerExists)
				"CustomerIsMandatoryIfCustomerGroupSelected"
			constraint(!IsReceivableInvoiceCreateDateExists)
				"EitherSelectTransactionDateOrCreateDate"
			constraint(!IsReceivableFromCreateDateEndExists)
				"CreateDateRangeIsRequired"
			constraint(!IsReceivableFromTransactionDateEndExists)
				"TransactionDateRangeIsRequired"
			constraint(!IsReceivableInvoiceSelectInvoiceOrCreateDate)
				"IfInvoiceEnteredCreateDateShouldBeBlank"
			constraint(!IsReceivableInvoiceSelectInvoiceOrTransactionDate)
				"IfInvoiceEnteredTransactionDateShouldBeBlank"
			constraint(!IsReceivableInvoiceInvalidCriteria)
				"InvalidSelectionCriteria"
				
		PayablesTransactionRules
			if(PayableTransactionFromVendor  entered or PayableTransactionToVendor entered)
				constraint(PayableTransactionVendorGroup entered)
					"VendorGroupIsRequired"
			constraint(!IsPayablesTransactionFromVendorExists)
				"FromVendorIsRequired"
			constraint(!IsPayablesTransactionVendorExists)
				"IfVendorEnteredCompanyMustBeBlank"
			constraint(!IsPayablesTransactionFromCompanyExists)
				"FromCompanyIsRequired"
			constraint(!IsPayablesTransactionCompanyExists)
				"IfCompanyRangeEnteredInvoiceValuesMustBeBlank"
			constraint(!IsPayablesTransactionFromInvoiceExists)
				"FromInvoiceIsRequired"
			constraint(!IsPayablesTransactionFromCompanyInvoiceExists)
				"IfInvoiceValuesEnteredFromCompanyIsRequired"
			constraint(!IsPayablesTransactionVendorRangeExists)
				"VendorIsMandatoryIfVendorGroupSelected"
			constraint(!IsPayablesTransactionCreateDateExists)
				"EitherSelectCheckDateOrCreateDate"
			constraint(!IsPayablesTransactionFromCreateDateEndExists)
				"DateRangeIsRequired"
			constraint(!IsPayablesTransactionFromCheckDateEndExists)
				"CheckDateRangeIsRequired"
			constraint(!IsPayablesTransactionSelectInvoiceOrCreateDate)
				"IfInvoiceEnteredCreateDateShouldBeBlank"
			constraint(!IsPayablesTransactionSelectInvoiceOrCheckDate)
				"IfInvoiceEnteredCheckDateShouldBeBlank"
			constraint(!IsPayablesTransactionInvalidCriteria)
				"InvalidSelectionCriteria"
				
		SSJERules
			if(JournalEntryFromAccountingEntity  entered or JournalEntryToAccountingEntity entered)
				constraint(JournalEntryFinanceEnterpriseGroup entered)
					"FinanceEnterpriseGroupIsRequired"
			constraint(!IsSSJEFromAccountingEntityExists)
				"FromAccountingEntityIsRequired"
			constraint(!IsSSJEFromJournalExists)
				"FromFromJournalIsRequired"
			constraint(!IsSSJEAccountingEntityRangeExists)
				"IfAccountingEntityRangeEnteredOtherValuesMustBeBlank"
			constraint(!IsSSJEFromAccountingEntityJournalExists)
				"IfJournalValuesEnteredFromAccountingEntityIsRequired"
			constraint(!IsSSJEJournalRangeExists)
				"IfJournalRangeIsEnteredPeriodMustBeBlank"
			constraint(!IsSSJECreateDateExists)
				"EitherSelectCreateDateOrPostDate"
			constraint(!IsSSJEFromCreateDateEndExists)
				"CreateDateRangeIsRequired"
			constraint(!IsSSJEFromPostDateEndExists)
				"PostDateRangeIsRequired"
			constraint(!IsSSJESelectJournalOrCreateDate)
				"IfJournalEnteredCreateDateShouldBeBlank"
			constraint(!IsSSJESelectJournalOrPostDate)
				"IfJournalEnteredPostDateShouldBeBlank"
			constraint(!IsSSJEInvalidCriteria)
				"InvalidSelectionCriteria"
				
		GLMovementRules
			if(GLMovementFromAccountingEntity  entered or GLMovementToAccountingEntity entered)
				constraint(GLMovementFinanceEnterpriseGroup entered)
					"FinanceEnterpriseGroupIsRequired"
			constraint(!IsSSGLMovementFromAccountingEntityExists)
				"FromAccountingEntityIsRequired"
			constraint(!IsSSGLMovementCreateDateExists)
				"EitherSelectPeriodDateOrCreateDate"
			constraint(!IsSSGLMovementFromCreateDateEndExists)
				"CreateDateRangeIsRequired"
			constraint(!IsSSLMovementPostDateEndExists)
				"PeriodDateRangeIsRequired"
			constraint(!IsSSGLMovementInvalidCriteria)
				"InvalidSelectionCriteria"
		CustomerPartyRules
	    	if(CustomerPartyFromCustomer entered or CustomerPartyToCustomer entered)
	    		constraint (CustomerPartyCustomerGroup entered)
	    			"Customer\GroupIsRequired"
	    	constraint (!CustomerPartyFromCustomerCheck)	
	    		"From\CustomerIsMandatoryToEnter_\To\Customer"
	    	constraint (!CustomerPartyCustomerCheckForCustomerGroup)
	    		"If_\Customer\GroupSelected_\CustomerIsRequired"
	    	constraint (!CustomerPartyFromCompanyCheck)
	    		"From\CompanyIsMandatoryToEnter_\To\Company"
	    	constraint (!CustomerPartyCustomerGroupselected)
	    		"If_\Customer\GroupSelected_\CompanyShouldBeBlank"
	    	constraint (!CustomerPartyInvalidCriteria)
	    		"InvalidSelectionCriteria"
		
		ReceivablePaymentRules
	    	constraint (!ReceivablePaymentFromCompanyCheck)	
	    		"From\CompanyIsMandatoryToEnter_\To\Company"
	    	constraint (!ReceivablePaymentFromHeaderCheck)	
	    		"From\Receivable\PaymentIsMandatoryToEnter_\To\Receivable\Payment"
	    	constraint (!ReceivablePaymentFromDateCheck)	
	    		"From\Deposite\DateIsMandatoryToEnter_\To\Deposite\Date"  	
	    	constraint (!ReceivablePaymentRangeCheck)
	    		"If_\Company\RangeEnteredReceivable\Payment\HeaderValuesMustBeBlank"
	    	constraint (!ReceivablePaymentToDateCheck)
	    		"If_\From\Deposite\DateEntered_\To\Deposite\DateIsRequired"
			constraint (!ReceivablePaymentInvalidCriteria)
	    		"InvalidSelectionCriteria"
	    		
	    ContactMasterARRules
	    	if(ContactMasterARFromCustomer entered or ContactMasterARToCustomer entered)
	    		constraint (ContactMasterARCustomerGroup entered)
	    			"Customer\GroupIsRequired"
	    	constraint (!ContactMasterARFromCompanyCheck)	
	    		"From\CompanyIsMandatoryToEnter_\To\Company"
	    	constraint (!ContactMasterARFromCustomerCheck)	
	    		"From\CustomerIsMandatoryToEnter_\To\Customer"
	    	constraint (!ContactMasterARFromContactCheck)	
	    		"From\ContactIsMandatoryToEnter_\To\Contact"
	    	constraint (!ContactMasterARCustomerCheck)
	    		"If_\Customer\GroupSelected_\CustomerIsRequired"  	
	    	constraint (!ContactMasterARCompanyRangeCheck)
	    		"If_\Contact\RangeEntered_\ToCompanyAnd_To\CustomerShouldNotEnter"
	    	constraint (!ContactMasterARCustomerRangeCheck)
	    		"If_\Contact\RangeEntered_\To\CustomerAnd_\ToCompanyShouldNotEnter"
	    	constraint (!ContactMasterARCompanyContactRangeCheck)
	    		"If_Company\RangeEntered_\ContactOr_\Contact\RangeShouldBeBlank"
	    	constraint (!ContactMasterARCustomerContactRangeCheck)
	    		"If_\Customer\RangeEntered_\ContactOr_\Contact\RangeShouldBeBlank"
			constraint (!ContactMasterARInvalidCriteria)
	    		"InvalidSelectionCriteria"
	    		
	    ContactMasterAPRules
			if(ContactMasterAPFromVendor entered or ContactMasterAPFromContactCode entered)
				constraint(ContactMasterAPVendorGroup entered)
					"Vendor_GroupIsRequired"							
			constraint (!IsContactMasterAPVendorRangeExists)		
				"If_VendorRangeIsSelected_Contact_CodeMustBeBlank"		
			constraint (!IsContactMasterAPContactCodeRangeExists)	
				"From\VendorIsRequired"
			constraint (!IsContactMasterAPFromVendorExists)			
				"From\VendorIsRequired"
			constraint (!IsContactMasterAPVendorGroupExists)		
				"From\VendorOr_VendorRangeIsMandatoryIf_Vendor_GroupSelected"
			constraint (!IsContactMasterAPFromContactCodeExists)	
				"From\Contact\CodeIsRequired"
			constraint (!IsContactMasterAPInvalidCriteria)			
				"InvalidSelectionCritera"
				
	    ShipFromPartyRules
			if(ShipFromFromVendor entered or ShipFromToVendor entered or ShipFromFromVendorLocation entered)
				constraint(ShipFromVedorGroup entered)
					"Vendor\GroupIsMandatory"
			constraint(!IsShipFromToVendor)
				"From\VendorIsRequired"		
			constraint(!IsShipFromVendorGroup)
				"From\VendorOr_VendorRangeIsMandatoryForTheSelected_Vendor\Group"		
			constraint(!IsShipFromFromVendorExists)
				"From\VendorIsMandatory"
			constraint(!IsShipFromInvalid)
				"InvalidSelectionCriteria"	
			constraint(!IsShipFromToVendorLocation)
				"From\Vendor\LocationIsMandatory"
			constraint(!IsShipFromVendorLocationRange)
				"Vendor\LocationRangeCannotBeSelectedWhenThe_VendorRangeIsSelected"		
			
		SupplierBalanceRules	
	    	if(SupplierBalanceFromVendor entered or SupplierBalanceToVendor entered)
	    		constraint (SupplierBalanceFromVendorGroup entered)
	    			"Vendor\GroupIsRequired"
	    	constraint(!IsSupplierBalanceFromVendorCheck)
	    		"From\VendorIsMandatoryToEnter_\To\Vendor"
	    	constraint(!IsSupplierBalanceVendorExists)
	    		"VendorIsMandatoryIfVendor\GroupSelected"
	    	constraint(!IsSupplierBalanceFromVendorExists)
	    		"If_\Vendor\Location\RangeEntered_From\VendorIsRequired"
	    	constraint(!IsSupplierBalanceVendorLocationCheck)
	    		"If_\Vendor\RangeEntered_Vendor\LocationValuesMustBeBlank"
	    	constraint(!IsSupplierBalanceFromVendorLocationCheck)
	    		"From\Vendor\LocationIsMandatoryToEnter_\To\Vendor\Location"
	    	constraint(!IsSupplierBalanceInalidCriteria)
	    		"InvalidSelectionCriteria"
	    	
		PurchaseOrderRules
			constraint(!IsPurchaseOrderFromCompanyExists)
				"FromCompanyIsRequired"
			constraint(!IsPurchaseOrderCompanyExists)
				"IfCompanyRangeEnteredPurchaseOrderValuesMustBeBlank"
			constraint(!IsPurchaseOrderFromPOExists)
				"FromPurchaseOrderIsRequired"
			constraint(!IsPurchaseOrderFromCompanyPOExists)
				"IfPurchaseorderValuesEnteredFromCompanyIsRequired"
			constraint(!IsPurchaseOrderPODateEndExists)
				"PurchaseOrderDateRangeIsRequired"
			constraint(!IsPurchaseOrderselectPOOrPODate)
				"IfPurchaseOrderEnteredPurchaseOrderDateShouldBeBlank"
			constraint(!IsPurchaseOrderInvalidCriteria)
				"InvalidSelectionCriteria"
		PurchaseOrderReceiptRules
			constraint(!IsPurchaseOrderReceiptFromCompanyExists)
				"FromCompanyIsRequired"
			constraint(!IsPurchaseOrderReceiptCompanyExists)
				"IfCompanyRangeEnteredPurcahseOrderReceiptValuesMustBeBlank"
			constraint(!IsPurchaseOrderReceiptFromReceiptExists)
				"FromPurchaseOrderReceiptIsRequired"
			constraint(!IsPurchaseOrderReceiptFromCompanyReceiptExists)
				"IfPurchaseorderReceiptValuesEnteredFromCompanyIsRequired"
			constraint(!IsPurchaseOrderReceiptDateEndExists)
				"ReceivedDateRangeIsRequired"
			constraint(!IsPurchaseOrderReceiptselectReceiptOrReceiptDate)
				"IfPurchaseOrderReceiptEnteredReceivedDateShouldBeBlank"
			constraint(!IsPurchaseOrderReceiptInvalidCriteria)
				"InvalidSelectionCriteria"
		RemittanceAdviceRules
			constraint(!IsRemittanceAdviceFromCompanyCheck)
				"FromCompanyIsRequired"
			constraint(!IsRemittanceAdviceDateRangeCheck)
				"PaymentDateRangeIsRequired"
			constraint(!IsRemittanceAdviceInvalidCriteria)
				"InvalidSelectionCriteria"

		SupplierPartyMasterRules
			constraint(!IsSupplierPartyInvalidCriteria)
				"InvalidSelectionCriteria"
			constraint (!IsSupplierVendorGroup)
				"Vendor\GroupIsRequired"
			constraint (!IsSupplierFromVendorExists)			
	    		"From\VendorIsRequired"
	    	constraint (!IsSupplierFromVendor)			
	    		"From\VendorIsRequired"

		BillToPartyMasterRules
			constraint (!IsBillToPartyInvalidCriteria)
	    		"InvalidSelectionCriteria"
			constraint (!IsBillToCustomerGroup)
				"Customer\GroupIsRequired"
	    	constraint (!IsBillToFromCustomer)	
	    		"From\CustomerIsRequired"	    	
	    	constraint (!IsBillToFromCustomerExists)	
	    		"From\CustomerIsRequired"
	    	constraint (!IsFromCustomerBillTo)
				"From\Customer\Bill\ToIsRequired"
			constraint (!IsBillToFromCustomerRange)
				"If_Customer\RangeEntered_Customer\Bill\ToMustBeBlank"			

		ItemMasterRules
			constraint (!IsItemMasterInvalidCriteria)
	    		"InvalidSelectionCriteria"
			constraint (!IsItemFromItemGroup)
	    		"Item\GroupIsRequired"
			constraint (!IsItemFromItemExists)
	    		"From\ItemIsRequired"
			constraint (!IsItemFromItem)
	    		"From\ItemIsRequired"
			

		AccountingEntityRules
			constraint (!IsAccountingEntityInvalidCriteria)
	    		"InvalidSelectionCriteria"
			constraint (!IsAccountingFinanceEnterpriseGroup)
	    		"Finance\Enterprise\GroupIsRequired"
			constraint (!IsAccountingFromAccountingEntityExists)
	    		"From\Accounting\EntityIsRequired"
			constraint (!IsAccountingFromAccountingEntity)
	    		"From\Accounting\EntityIsRequired"			

		CurrExchangeRateRules
			constraint (!IsCurrExchangeRateInvalidCriteria)
	    		"InvalidSelectionCriteria"
			constraint (!IsCurrencyExFinanceEnterpriseGroup)
	    		"Finance\Enterprise\GroupIsRequired"
	    	constraint (!IsCurrencyExCurrencyTable)
	    		"Currency\TableIsRequired"

		CurrencyExchangePeriodRateRules
			constraint (!IsCurrencyExchangePeriodRateInvalidCriteria)
	    		"InvalidSelectionCriteria"
			constraint (!IsGLTranslationRateFinanceEnterpriseGroup)
	    		"Finance\Enterprise\GroupIsRequired"
			constraint (!IsGLFromTranslationCodeExists)
	    		"From\Currency\Exchange\Period\RateIsRequired"
			constraint (!IsGLFromTranslationCode)
	    		"From\Currency\Exchange\Period\RateIsRequired"

		ProjectMasterRules
			constraint (!IsProjectMasterInvalidCriteria)
	    		"InvalidSelectionCriteria"
			constraint (!IsProjectFinanceEnterpriseGroup)
	    		"Finance\Enterprise\GroupIsRequired"
			constraint (!IsFromProjectExists)
	    		"From\ProjectIsRequired"
			constraint (!IsFromProject)
	    		"From\ProjectIsRequired"	

		ContactMasterPORules
			constraint (!IsContactMasterPOInvalidCriteria)
	    		"InvalidSelectionCriteria"
			constraint (!IsContactMasterPOHROrganization)
	    		"HR\OrganizationIsRequired"
			constraint (!IsContactMasterPOFromBuyerExists)
	    		"From\BuyerIsRequired"
			constraint (!IsContactMasterPOFromBuyer)
	    		"From\BuyerIsRequired"		

		InventoryLocationRules	
			constraint (!IsInventoryLocationInvalidCriteria)
	    		"InvalidSelectionCriteria"
			constraint (!IsInventoryFromCompany)
	    		"From\CompanyIsRequired"
			constraint (!IsInventoryToCompany)
	    		"From\CompanyIsRequired"
			constraint (!IsInventoryToLocation)
	    		"From\LocationIsRequired"
	    	constraint (!IsInventoryCompanyRange)
				"If_Company\RangeEntered_LocationMustBeBlank"

		RequestingLocationRules
			constraint (!IsRequestingLocationInvalidCriteria)
	    		"InvalidSelectionCriteria"
			constraint (!IsRequestingFromCompany)
	    		"From\CompanyIsRequired"
			constraint (!IsRequestingToCompany)
	    		"From\CompanyIsRequired"
			constraint (!IsRequestingToLocation)
	    		"From\LocationIsRequired"
	    	constraint (!IsRequestingCompanyRange)
				"If_Company\RangeEntered_LocationMustBeBlank"

		AssetMasterRules
			constraint (!IsAssetMasterInvalidCriteria)
	    		"InvalidSelectionCriteria"
			constraint (!IsAssetFinanceEnterpriseGroup)
				"Finance\Enterprise\GroupIsRequired"
	    	constraint (!IsAssetFromCompany)	
	    		"From\CompanyIsRequired"	    	
	    	constraint (!IsAssetFromCompanyExists)	
	    		"From\CompanyIsRequired"
	    	constraint (!IsAssetFromAsset)
				"From\AssetIsRequired"
			constraint (!IsAssetFromCompanyRange)
				"If_Company\RangeEntered_AssetMustBeBlank"

		ContactMasterRQRules
			constraint (!IsContactMasterRQInvalidCriteria)
	    		"InvalidSelectionCriteria"
			constraint (!IsContactMasterRQHROrganization)
				"HR\OrganizationIsRequired"
	    	constraint (!IsContactMasterRQFromRequester)
				"From\RequesterIsRequired"

		ShipToPartyMasterRules
			constraint (!IsShipToPartyInvalidCriteria)
	    		"InvalidSelectionCriteria"
			constraint (!IsShipToCustomerGroup)
				"Customer\GroupIsRequired"
			constraint (!IsShipToCompanyExists)
				"From\CompanyIsRequired"
			constraint (!IsShipToCompany)
				"From\CompanyIsRequired"
			constraint (!IsShipToFromCustomer)
				"From\CustomerIsRequired"
			constraint (!IsShipToFromCustomerShipTo)
				"From\Customer\Ship\ToIsRequired"			
			constraint (!IsShipToCompanyRange)
				"IfCompany\RangeEntered_CustomerMustBeBlank"
			constraint (!IsCustomerShipToRange)
				"If_Company\RangeEntered_Customer\Ship\ToMustBeBlank"
			constraint (!IsShipToCustomerRange)
				"If_Customer\RangeEnteredCustomer\Ship\ToMustBeBlank"
			constraint (!IsShipToFromCustomerExists)
				"If_Customer\Ship\ToEntered_CustomerIsRequired"
				

		ContractRules
			constraint(!IsContractInvalidCriteria)
				"InvalidSelectionCriteria"
			constraint(!IsContractGroup)
				"ContractGroupIsRequired"
			constraint(!IsContractFromContract)
				"FromContractIsRequired"

		CodeDefCashCodeRules
			constraint(!IsCodeDefCashCodeInvalidCriteria)
				"InvalidSelectionCriteria"
			constraint(!IsCashManagementGroup)
				"CashManagementGroupIsRequired"
			constraint(!IsCodeDefFromCashCode)
				"FromCashCodeIsRequired"
				

		CodeDefGLCompanyRules
			constraint(!IsCodeDefGLCompanyInvalidCriteria)
				"InvalidSelectionCriteria"
			constraint(!IsCodeDefFromGLcompany)
				"FromGLCompanyIsRequired"

		InventoryCountRules
			constraint(!IsInventoryCountCompany)
				"CompanyIsRequired"
			constraint(!IsInventoryCountFromLocation)
				"FromLocationIsRequired"
			constraint(!IsInventoryCountInvalidCriteria)
				"InvalidSelectionCriteria"		
			constraint(!IsInventoryCountLocation)
				"LocationIsRequired"


		CodeDefTerritoryRules
			constraint (!IsCodeDefFromTerritoryCompanyRange)
				"If_Company\RangeEntered_TerritoryMustBeBlank"
			
		ErrorValidationRules
			if(IsValidForSupplierInvoice)
				include SupplierInvoiceRules
			if(IsValidForReceivableInvoice)
				include InvoiceRules
			if(IsValidForPayablesTransaction)
				include PayablesTransactionRules
			if(IsValidForSSJE)
				include SSJERules
			if(IsValidForSSGLMovement)
				include GLMovementRules
			if (IsValidForCustomerParty)
				include CustomerPartyRules
			if (IsValidForReceivablePayment)
				include ReceivablePaymentRules
			if (IsValidForContactMasterAR)
				include ContactMasterARRules
			if (IsValidForShipFromParty)
				include ShipFromPartyRules	
			if (IsValidForContactMasterAp)
				include ContactMasterAPRules
			if (IsValidForPurchaseOrder)
				include PurchaseOrderRules
			if (IsValidForPurchaseOrderReceipt)
				include PurchaseOrderReceiptRules
			if (IsValidForSupplierBalance)
				include SupplierBalanceRules
			if (IsValidForRemittanceAdvice)
				include RemittanceAdviceRules
			if (IsValidForSupplierPartyMaster)
				include	SupplierPartyMasterRules
			if(IsValidForBillToPartyMaster)
				include BillToPartyMasterRules
			if (IsValidForItemMaster)
				include ItemMasterRules
			if (IsValidForAccountingEntity)
				include AccountingEntityRules
			if (IsValidForCurrExchangeRate)
				include CurrExchangeRateRules
			if (IsValidForCurrencyExchangePeriodRate)
				include CurrencyExchangePeriodRateRules
			if (IsValidForProjectMaster)
				include ProjectMasterRules
			if (IsValidForContactMasterPO)
				include ContactMasterPORules
			if (IsValidForInventoryLocation)
				include InventoryLocationRules
			if (IsValidForRequestingLocation)
				include RequestingLocationRules
			if (IsValidForAssetMaster)
				include AssetMasterRules
			if (IsValidForContactMasterRQ)
				include ContactMasterRQRules
			if (IsValidForShipToPartyMaster)
				include ShipToPartyMasterRules
			if (IsValidForContract)
				include ContractRules
			if (IsValidForCodeDefCashCode)
				include CodeDefCashCodeRules
			if (IsValidForCodeDefGLCompany)
				include CodeDefGLCompanyRules
			if (IsValidForInventoryCount)
				include InventoryCountRules
			if (IsValidForCodeDefTerritory)
				include CodeDefTerritoryRules
				
	StateCycles
		BODDataInitialLoadLifeCycle is a StateCycle
			state field is BODDataInitialLoadLifeCycleState
			CreateLayout is a State
				Create is a Create Action
					Action Rules
						make transition to UpdateLayout
					
			UpdateLayout is a State
				Update is an Update Action
					Entrance Rules
						include ErrorValidationRules	
							
					Action Rules
					
			Completed is a State
				Update is an Update Action
					Entrance Rules
						include ErrorValidationRules
							
					Action Rules

	Actions
		TriggerNow is an Instance Action
			valid when(IsValidforTrigger)
			Action Rules
#ifdef module ap					
				if(IsCondition1 and SupplierTrigger)
					include SupplierPartyMasterCriteria
#endif	
#ifdef module ic
				if(IsCondition15 and ItemTrigger)
					include ItemMasterCriteria
#endif	
#ifdef module GeneralLedger
#ifdef module am	
				if(IsCondition14 and AssetMasterTrigger)
					include AssetMasterCriteria
				if(IsCondition14 and AssetTransactionTrigger)
					include AssetTransactionCriteria
					
					
#endif	
#endif
#ifdef module cashmgmt
#ifdef module cb
				if(FinancialTrigger)
					if(SelectType.PartyMaster and (FinancialFromBankEntity entered and FinancialToBankEntity entered))
						include FinancialPartyMasterCriteria1
#endif
#endif
#ifdef module GeneralLedger
#ifdef module ar
				if(IsCondition20 and CustomerPartyTrigger)
					include CustomerPartyMasterCriteria
#endif
#endif	
#ifdef module ap										
				if(ShipFromTrigger)
					if(IsCondition4 and ShipFromTrigger)
						include ShipFromPartyMasterCriteria1
#endif
#ifdef module ar
#ifdef module bl					
				if(IsCondition2 and ShipToTrigger)					
					include ShipToPartyMasterCriteria
#endif
#endif
#ifdef module GeneralLedger
#ifdef module ic	
				if(IsCondition3 and BillToTrigger)
					include BillToPartyMasterCriteria
#endif
#endif
#ifdef module GeneralLedger
#ifdef module ic
				if(SelectType.MasterData and InventoryTrigger)
					include InventoryLocationCriteria										
#endif
#endif
#ifdef module hcmfn
#ifdef module rq
				if(IsMaster and ContactMasterRQTrigger)
					include ContactMasterRQCriteria
#endif
#endif
#ifdef module hcmfn
#ifdef module po	
				if(IsMaster and ContactMasterPOTrigger)
					include ContactMasterPOCriteria
#endif
#endif
#ifdef module ar							
				if(IsCondition6 and ContactMasterARTrigger)
					include ContactMasterARCriteria
#endif
#ifdef module ap
				if(IsMaster and ContactMasterAPTrigger)
					include ContactMasterAPCriteria
#endif
#ifdef module GeneralLedger								
				if(IsCondition7 and AccountingTrigger)					
					include AccountingEntityCriteria
#endif
#ifdef module GeneralLedger
#ifdef module currency
				if(IsMaster and CurrencyExTrigger)
					include CurrExchangeRateCriteria
#endif
#endif
#ifdef module GeneralLedger
#ifdef module currency
				if(IsMaster and GeneralLedgerTranslationRateTrigger)
					include GeneralLedgerTranslationRateCriteria
#endif
#endif
#ifdef module GeneralLedger
			  	if(ReportingBasisLedgerTrigger)
					if(IsCodeDefinition and (ReportingBasisLedgerFrom entered and ReportingBasisLedgerTo entered))
						include ReportingBasisLedgerCriteria1
#endif
#ifdef module rq								
				if(IsCondition5 and RequestingTrigger)
					include RequestingLocationCriteria
#endif
#ifdef module GeneralLedger						
				if(ReportingTrigger)
					if(IsCondition9 and (ReportingFromReportingChart entered and ReportingToReportingChart entered))
						include ReportingChartCriteria1
#endif
#ifdef module GeneralLedger
#ifdef module ic										
				if(UOMTrigger)
					if(IsCondition19 and (UOMFromUnitOfMeasure entered and UOMToUnitOfMeasure entered))
						include CodeDefUOMCriteria1
#endif
#endif
#ifdef module GeneralLedger								
				if(CodeDefAccountTrigger)
					if(IsCondition10 and (CodeDefinitionFromAccount entered and CodeDefinitionToAccount entered))
						include CodeDefAccountCriteria1
#endif
#ifdef module GeneralLedger					
				if(FinanceDimension1Trigger)
					if(IsCondition12 and (CodeDefFromFinanceDimension1 entered and CodeDefToFinanceDimension1 entered))
						include CodeDefFinanceDimension1Criteria1
#endif
#ifdef module GeneralLedger									
				if(FinanceDimension2Trigger)
					if(IsCondition12 and (CodeDefFromFinanceDimension2 entered and CodeDefToFinanceDimension2 entered))
						include CodeDefFinanceDimension2Criteria1
#endif
#ifdef module GeneralLedger		
				if(FinanceDimension3Trigger)
					if(IsCondition12 and (CodeDefFromFinanceDimension3 entered and CodeDefToFinanceDimension3 entered))
						include CodeDefFinanceDimension3Criteria1
#endif
#ifdef module GeneralLedger							
				if(FinanceDimension4Trigger)
					if(IsCondition12 and (CodeDefFromFinanceDimension4 entered and CodeDefToFinanceDimension4 entered))
						include CodeDefFinanceDimension4Criteria1
#endif
#ifdef module GeneralLedger		
				if(FinanceDimension5Trigger)
					if(IsCondition12 and (CodeDefFromFinanceDimension5 entered and CodeDefToFinanceDimension5 entered))
						include CodeDefFinanceDimension5Criteria1
#endif
#ifdef module GeneralLedger		
				if(FinanceDimension6Trigger)
					if(IsCondition12 and (CodeDefFromFinanceDimension6 entered and CodeDefToFinanceDimension6 entered))
						include CodeDefFinanceDimension6Criteria1
#endif
#ifdef module GeneralLedger							
				if(FinanceDimension7Trigger)
					if(IsCondition12 and (CodeDefFromFinanceDimension7 entered and CodeDefToFinanceDimension7 entered))
						include CodeDefFinanceDimension7Criteria1
#endif
#ifdef module GeneralLedger	
				if(FinanceDimension8Trigger)
					if(IsCondition12 and (CodeDefFromFinanceDimension8 entered and CodeDefToFinanceDimension8 entered))
						include CodeDefFinanceDimension8Criteria1
#endif
#ifdef module GeneralLedger							
				if(FinanceDimension9Trigger)
					if(IsCondition12 and (CodeDefFromFinanceDimension9 entered and CodeDefToFinanceDimension9 entered))
						include CodeDefFinanceDimension9Criteria1
#endif
#ifdef module GeneralLedger
				if(FinanceDimension10Trigger)
					if(IsCondition12 and (CodeDefFromFinanceDimension10 entered and CodeDefToFinanceDimension10 entered))
						include CodeDefFinanceDimension10Criteria1
#endif	
#ifdef module ar	
				if(CustomerMajorClassTrigger)
					if(IsCondition11 and (CodeDefFromCustomerMajorClass entered and CodeDefToCustomerMajorClass entered))
						include CodeDefCustomerMajorClassCriteria1
#endif
#ifdef module ar									
				if(TerritoryTrigger)
					if(IsCodeDefinition and (CodeDefFromTerritoryCompany entered and CodeDefToTerritoryComapny entered))
						include CodeDefTerritoryCriteria1
					else
						if(IsCodeDefinition and (CodeDefFromTerritory entered and CodeDefToTerritory entered))
							include CodeDefTerritoryCriteria2
#endif
#ifdef module GeneralLedger								
				if(CodeDefAccountingUnitTrigger)
					if(IsCondition10 and (CodeDefFromAccountingEntity entered and CodeDefToAccountingEntity entered))
						include CodeDefAccountingUnitCriteria1
					else
						if(IsCondition10 and (CodeDefFromAccountingUnit entered and CodeDefToAccountingUnit entered))
							include CodeDefAccountingUnitCriteria2
#endif
#ifdef module GeneralLedger								
				if(CodeDefAccountingEntityTrigger)
					if(IsCodeDefinition and (CodeDefFromAccountingEntityAEGroup entered and CodeDefToAccountingEntityAEGroup entered))
						include CodeDefAccountingEntityCriteria1
#endif
#ifdef module po										
				if(IsTransactionData and PurchaseOrderTrigger)
					include PurchaseOrderCriteria
#endif
#ifdef module po										
				if(IsTransactionData and ReceiveDeliveryTrigger)
					include PurchaseOrderReceiptCriteria
#endif
#ifdef module ap
				if(IsCondition18 and InvoiceTrigger)
					include PayablesInvoiceCriteria1
							
#endif
#ifdef module rq			
				if(RequisitionReturnTrigger)
					if(SelectType.Integration and (ReqReturnCompany entered))
						include RequisitionReturnCriteria1
#endif
#ifdef module GeneralLedger
				if(ChartOfAccountTrigger)
					if(IsCondition21 and (FromChartOfAccount entered and ToChartOfAccount entered))
						include ChartOfAccountCriteria1
#endif
#ifdef module ic							
				if(InventoryCountTrigger)
					if(IsCondition18 and (InventoryCountTrigger and IncludeInactiveItems))
						include InventoryCountCriteria1
					else				
					if(IsCondition18 and (InventoryCountTrigger and !IncludeInactiveItems))
						include InventoryCountCriteria2
#endif
#ifdef module ar
						
				if(IsCondition17 and ReceivableInvoiceTrigger)
					include ReceivableInvoiceCriteria1
#endif
#ifdef module ap									
				if(IsTransactionData and SupplierBalanceTrigger)
					include SupplierBalanceCriteria
#endif

#ifdef module ap
				if(IsTransactionData and PayableTransactionTrigger)
					include PayableTransactionCriteria1
#endif
#ifdef module GeneralLedger									
				if(IsTransactionData and JournalEntryTrigger)
					include JournalEntryCriteria1
#endif

#ifdef module GeneralLedger									
				if(IsTransactionData and GLMovementTrigger)
					include GLMovementCriteria1
#endif
#ifdef module GeneralLedger
#ifdef module Projects	
				if(IsMaster and ProjectTrigger)
					include ProjectMasterCriteria
#endif
#endif
#ifdef module ar								
				if(IsCondition17 and ReceivablePaymentTrigger)
					include ReceivablePaymentCriteria
#endif
#ifdef module GeneralLedger
#ifdef module cb  
				if(IsTransactionData and RemittanceTrigger)
					include RemittanceCriteria
#endif
#endif
#ifdef module po
				if(IsTransactionData and ContractTrigger)
					include ContractCriteria
#endif
#ifdef module glif
			  	if(IsCodeDefinition and CodeDefGLCompanyTrigger)
					include CodeDefGeneralLedgerCompanyCriteria
#endif
#ifdef module cb
			  	if(IsCodeDefinition and CodeDefCashCodeTrigger)
					include CodeDefCashCodeCriteria
#endif
				make transition to Completed						
		
		Delete is a Delete Action
		
		PurgeInitialLoad is a Set Action
            Parameters
                OffsetDays         is Numeric size 4
               
            Local Fields
                LocalToDate     is Date
               
            Parameter Rules
               
                OffsetDays
                    if (OffsetDays not entered)
                        required
                            "OffsetDaysIsRequired"
                    if (OffsetDays entered)
                        LocalToDate = current corporate date - OffsetDays
                       
            Instance Selection
                where (LocalToDate entered
                and      LocalToDate > CurrentDate)
                           
            Action Rules
                Instance Rules
                    invoke Delete
						

