FinanceDimension2Upload is a BusinessClass
	owned by GeneralLedger
	prefix is FD2UP   
    
    Ontology
    	symbolic key is FinanceDimension2Upload

    Patterns
 		disable Auditing 
 		disable EffectiveDated
 		disable AsOfDateProcessing
		implements InlineUserFields
			size is 3000
			
    Persistent Fields
    	ParentFinanceDimension2		is like FinanceDimension2
    	FinanceDimension2			is like FinanceDimension2
		SequenceDimension2			is like FinanceDimension2
		ParentSequenceDimension2	is like FinanceDimension2
		RecordType					is Numeric 1
		    States	    
		    	Summary	value is 2
		    	Posting	value is 1		
		Description	
		Active
    	SystemDimension				is Boolean
    	BudgetIdentifier
    	IncludeInBudgetEdit			is Boolean     	
		ErrorMessage				is Alpha 150
		FundingType					is a ProjectFundingType				
		Department					is a FinanceDimension2Department	
		Division					is a FinanceDimension2Division		
 		DateRange														
        Amount						is a CurrencyAmount 				
			precision is Currency.NumberOfDecimals
		RevenueCodeBlockOption		is Numeric size 1					
			default label is "RevenueStructureOption"
			States
				FullStructure		value is 1
				PartialStructure	value is 2
				None				value is 3
		RevenueFullAccount			is a FinanceCodeBlockFullNoProjectFD2
			default label is "FullRevenueFinanceStructure"		
		RevenuePartialAccount		is a FinanceCodeBlockNoProjectFD2	
			default label is "PartialRevenueFinanceStructure"
		RevenueAccountOnly			is a GeneralLedgerChartAccount		
		RevenueDimension			is a ProjectCodeBlock				
		RevenueRecognitionOption	is Numeric 1						
			States
				Detail				value is 0
				Summary				value is 1
 		Currency					is a FromCurrency					
		PersonResponsible			is an Employee						
 		EstimateCloseDate			is Date								
 		ActualDate					is Date								
 		SubmitDate					is Date								
 		NoticeDate					is Date								
 		ReceiveDate					is Date								
 		ProposalDate				is Date								
 		MatchRequired				is Boolean							
 		MatchPercent				is Percent size 7.3					
		MajorCategory				is a ProjectMajorCategory
		CFDANumber					is a FinanceDimension2ALNCode		
			default label is "A\L\N"
		CustomerPoNumber 			is Alpha 22							
		DocumentNumber 				is Alpha 50							
		ProgramTitle 				is a FinanceDimension2ProgramTitle  
		OffsetAccount				is a FinanceCodeBlockFullOffset		
			default label is "OffsetFinanceStructure"		
		InvoiceFinanceCodeBlock		is a FinanceCodeBlockFull
			default label is "ReceivableFinanceStructure"
#ifdef module ar 		
		PerformFundEdits 			is a PerformExternalFundEdits		
		CompanyCustomerGroup											
#endif
#ifndef module ar
		PerformFundEdits			is Boolean
		CompanyCustomerGroup		is a GlonlyCompanyCustomerGroup		
#endif					
		ARInterfaceOption			is Numeric 1						
			States
				Summary						value is 1
				Detail						value is 2
				SummarizeByPostingProject	value is 3 		
		LetterOfCredit 				is Alpha 20							
		InvoiceFormat				
		AddressCode
		ProjectJurisdictionCode
		PrimeFlag          			is Numeric 1						
			default label is "DirectOrPassThru"
			States
				Direct					value is 1
				PassThru				value is 2
#ifdef module ar		
		PrimeSponsor                is a CompanyAndCustomer				
#endif        
#ifndef module ar		
		PrimeSponsor                is a GlonlyCompanyAndCustomer		
#endif        
		PrimeSponsorAwardNumber		is Alpha 30							
		GrantID						is Alpha 30							
		SEFAFlag                    is Boolean  						

		IndirectExpenseAccount	is a GeneralLedgerChartAccount			
			delete ignored			
		ProgramIncomeEarned     is a GeneralLedgerChartAccount			
			delete ignored		
		ProjectTeam														
    	PreAwardID 				is Alpha size 25 
    		default label is "Pre-AwardID"

   	Context Fields
   		
    Transient Fields
		BypassEdits	 		    
		
	Derived Fields
		SummaryPrefix			is a StringField
			type is AlphaUpper 15
			restricted
			FinanceDimension2Structure.StructureSequence
			"_*"
				
		DerivedParentFinanceDimension2 is a DerivedField
			type is like FinanceDimension2
			restricted
			if (ParentFinanceDimension2 entered)
				return DerivedParentFinanceDimension2String
			else
				return TopNodeString

		DerivedSequenceParentDimension2 is a DerivedField
			type is like FinanceDimension2
			restricted
			if (ParentSequenceDimension2 entered)
				return ParentSequenceDimension2
			else
				return DerivedParentFinanceDimension2
							
		TopNodeString			is a StringField
			type is AlphaUpper 25
			restricted
			FinanceDimension2Structure.StructureSequence
			"_TOP_NODE"
							
		DerivedParentFinanceDimension2String is a StringField
			type is AlphaUpper 25
			restricted
			FinanceDimension2Structure.StructureSequence
			"_"
			ParentFinanceDimension2
		
		DerivedSummaryFinanceDimension2 is a StringField
			type is AlphaUpper 25
			restricted
			FinanceDimension2Structure.StructureSequence
			"_"
			FinanceDimension2

		DerivedSummarySequenceDimension2 is a DerivedField
			type is like FinanceDimension2
			restricted
			if (SequenceDimension2 entered)
				return SequenceDimension2
			else 
				return DerivedSummaryFinanceDimension2

	Local Fields
		LocalCodeBlockRelation						is a CodeBlockRelation

					
	Conditions

 		ErrorTransaction
 			restricted
 			when (ErrorMessage entered)
 			
		IsProjectInvoicing
			restricted
			when (FinanceEnterpriseGroup.ProjectInvoicing
			and   RecordType.Posting
			and   !IsASystemDimension)			
 
		IsInternalFund
			restricted
			when (FinanceEnterpriseGroup.ProjectInvoicing
			and   FundingType.InternalFund
			and   RecordType.Posting)	
			
		IsExternalGrant
			restricted
			when (FinanceEnterpriseGroup.ProjectInvoicing
			and   FundingType.ExternalGrant
			and   RecordType.Posting)
			
		IsExternalCustomer
			restricted
			when (FinanceEnterpriseGroup.ProjectInvoicing
			and   FundingType.ExternalCustomer
			and   RecordType.Posting)
			
		IsExternalGrantOrCustomer
			restricted		
			when (IsExternalGrant
			or    IsExternalCustomer)						

		IsIntercompanyBilling
			restricted
			when (FinanceEnterpriseGroup.ProjectInvoicing
			and   FundingType.IntercompanyBilling
			and   RecordType.Posting)
			
		IsProjectInvoicingSummary
			restricted
			when (FinanceEnterpriseGroup.ProjectInvoicing
			and   RecordType.Summary
			and   !IsASystemDimension)			
			
		SummaryInEnterpriseStructure
			restricted
			when (RecordType.Summary
			and   FinanceDimension2Structure = FinanceEnterpriseGroup.EnterpriseDim2Structure)
			
		ProjectInvoicingNotInEnterpriseStructure
			restricted
			when (!InEnterpriseStructure
			and   FinanceEnterpriseGroup.ProjectInvoicing)
			
 		InEnterpriseStructure
			restricted
			when (FinanceDimension2Structure = FinanceEnterpriseGroup.EnterpriseDim2Structure)
 
 		IsASystemDimension
			restricted
			when (SystemDimension)
			
		FromOrToRelationExists
 			restricted
 			when (CodeBlockRelationFromRel exists
 			or    CodeBlockRelationToRel exists)
#ifdef module ar
		RelatedPrimeSponsorCompanyCustomerExists
			restricted		
      		when (CompanyCustomerPrimeSponsorRel exists)
#endif			

 	Sets
		ByDimension
			Sort Order
				FinanceEnterpriseGroup
				FinanceDimension2Structure
				FinanceDimension2
				FinanceDimension2Upload.RunGroup
				FinanceDimension2Upload.Sequence
 	
	Relations
		FinanceDimension2HierarchyRel
			one-to-one relation to FinanceDimension2Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.FinanceDimension2Structure = FinanceDimension2Structure
				related.FinanceDimension2		   = FinanceDimension2
		OtherRecordsInRunGroupRel
			one-to-many relation to FinanceDimension2Upload
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.FinanceDimension2Structure = FinanceDimension2Structure
			Instance Selection
				where (related.FinanceDimension2Upload.RunGroup = FinanceDimension2Upload.RunGroup)
		CodeBlockRelationFromRel
			one-to-many relation to CodeBlockRelation
			Field Mapping uses ByFromTo
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FromField					= 7
		CodeBlockRelationToRel
			one-to-many relation to CodeBlockRelation
			Field Mapping uses ByToFrom
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.ToField						= 7
		CodeBlockRelationRuleDynamicRel
			one-to-many relation to CodeBlockRelationRule
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.CodeBlockRelation				= LocalCodeBlockRelation
			Instance Selection
				where (related.Active
				and    related.DynamicCreate)
				
#ifdef module ar				
        CompanyCustomerPrimeSponsorRel
	        classic name is ARCUSTOMER
            one-to-one relation to CompanyCustomer
            required
            Field Mapping uses symbolic key
                related.Company  = PrimeSponsor.Company
                related.Customer = PrimeSponsor.Customer
#endif
	Field Rules
    	FinanceDimension2
    		required
		RecordType
		   	required	
			if (RecordType.Posting)			
				constraint (!ProjectInvoicingNotInEnterpriseStructure)
					"RecordTypeMustBeSummaryForNonEnterpriseStructureUsing<FinanceEnterpriseGroup.ProjectLabel>Invoicing"			
		Description
			required
		BudgetIdentifier
			constraint (RecordType.Summary)
				"NotValidForPostingDimension"
		IncludeInBudgetEdit
			constraint (RecordType.Posting)
				"NotValidForSummaryDimension"
				
		FundingType
			if (!BypassEdits)		
				if (IsProjectInvoicing)
					required
				else
					cannot be entered
						"FundingTypeIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"
		Department
			if (!IsProjectInvoicing)		
				cannot be entered
					"DepartmentIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"				
							
		Division
			if (!IsProjectInvoicing)		
				cannot be entered
					"DivisionIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"				

 		DateRange
			if (!BypassEdits) 		
				if (IsProjectInvoicing)		
					required
				else
					cannot be entered
						"DateRangeIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"				

        Amount
			if (!BypassEdits)        
				if (!IsProjectInvoicing)		
					cannot be entered
						"AmountIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"				
        
 		Currency
			if (!BypassEdits) 		
				if (IsProjectInvoicing)	
					if (Amount entered)					
						required
							"CurrencyRequiredFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"
				else
					cannot be entered
						"CurrencyIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"				

		RevenueCodeBlockOption
			if (!BypassEdits)
				if (IsProjectInvoicing)
					required
						"RevenueStructureOptionRequiredFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"
					if (RevenueCodeBlockOption.None)
						constraint (FundingType.InternalFund)
							"RevenueStructureOptionOfNoneValidForInternalFundingTypeOnly"
				else
					cannot be entered
						"RevenueStructureOptionOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"

		RevenueFullAccount
			if (!BypassEdits)
				if (RevenueCodeBlockOption.FullStructure)
					required
						"FullRevenueFinanceStructureRequiredFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"
				else
					cannot be entered
						"CannotEnterFullRevenueFinanceStructureUnlessRevenueStructureOptionIs_Full"

		RevenuePartialAccount
			if (!BypassEdits)
				if (RevenueCodeBlockOption.PartialStructure)
					required
						"PartialRevenueFinanceStructureRequiredFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"
					constraint (RevenuePartialAccount.GeneralLedgerChartAccount entered)
						"Revenue<FinanceEnterpriseGroup.AccountLabel>Required"
				else
					cannot be entered
						"CannotEnterPartialRevenueFinanceStructureUnlessRevenueStructureOptionIs_Partial"

		RevenueRecognitionOption
			if (!BypassEdits)	
				if (RevenueRecognitionOption entered)				
					constraint (IsProjectInvoicing)
						"RevenueRecognitionOptionIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"

		OffsetAccount
			if (!BypassEdits)		
				if  (IsInternalFund
				and !RevenueCodeBlockOption.None)
					required
						"OffsetAccountRequiredWhenFundTypeIsInternalFunding"
#ifdef module intercobilling
				if (IsIntercompanyBilling)		
					required
						"PayablesExpenseFinanceStructureRequiredWhenFundTypeIsIntercompanyBilling"
#endif						
				if (!IsInternalFund
				and !IsIntercompanyBilling)
					cannot be entered
						"OffsetAccountIsOnlyValidWhenFundTypeIsInternalFundingOrIntercompanyBilling"
#ifdef module ar 
		InvoiceFinanceCodeBlock
			if (!BypassEdits)
				if (CompanyCustomerGroup.ReceivableCompany.DetailedInvoiceAccrualDistributions)
					required
						"ReceivableFinanceStructureRequiredFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"
#endif
		PersonResponsible
			if (!BypassEdits)
				if (PersonResponsible entered)					
					constraint (IsProjectInvoicingSummary)
						"PersonResponsibleValidForFinanceEnterpriseGroupThatIsSetupForProjectInvoicing<FinanceEnterpriseGroup.FinanceDimension2Label>"
					constraint (SummaryInEnterpriseStructure)
						"PersonResponsibleValidForSummaryWithinEnterpriseStructureOnly<FinanceEnterpriseGroup.FinanceDimension2Label>"

		ProjectTeam
			if (!BypassEdits)	
				if (ProjectTeam entered)				
					constraint (IsProjectInvoicingSummary)
						"ResponsibleTeamValidForFinanceEnterpriseGroupThatIsSetupForProjectInvoicing<FinanceEnterpriseGroup.FinanceDimension2Label>"
					constraint (SummaryInEnterpriseStructure)
						"ResponsibleTeamValidForSummaryWithinEnterpriseStructureOnly<FinanceEnterpriseGroup.FinanceDimension2Label>"

 		EstimateCloseDate
			if (!BypassEdits) 		
				if (!IsProjectInvoicing)		
					cannot be entered
						"EstimateCloseDateIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"				




 		ActualDate
			if (!BypassEdits) 		
				if (!IsProjectInvoicing)		
					cannot be entered
						"ActualDateIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"				




				
 		SubmitDate
			if (!BypassEdits) 		
				if (!IsProjectInvoicing)		
					cannot be entered
						"SubmitDateIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"				
 							
 		NoticeDate
			if (!BypassEdits) 		
				if (!IsProjectInvoicing)		
					cannot be entered
						"NoticeDateIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"				
 							
 		ReceiveDate
			if (!BypassEdits) 		
				if (!IsProjectInvoicing)		
					cannot be entered
						"ReceiveDateIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"				
 							
 		ProposalDate
			if (!BypassEdits) 		
				if (!IsProjectInvoicing)		
					cannot be entered
						"ProposalDateIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>tInvoicing"				
		



















        
#ifdef module ar        
        CompanyCustomerGroup
			if (!BypassEdits)        
				if (IsExternalGrantOrCustomer
				or  IsIntercompanyBilling)
					required
				else
					cannot be entered
						"CompanyCustomerGroupIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>InvoicingAndExternalGrantOrExternalCustomer"				
#endif									
		CFDANumber
			if (!BypassEdits)		
				if (!IsProjectInvoicing)		
					cannot be entered
						"A\L\NIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"				
							
		CustomerPoNumber
			if (!BypassEdits)		
				if (!IsProjectInvoicing)		
					cannot be entered
						"CustomerPoNumberIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"				
		 			
		ProgramTitle
			if (!BypassEdits)		 				
				if (!IsProjectInvoicing)		
					cannot be entered
						"ProgramTitleIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"				
					
		MajorCategory
			if (!BypassEdits)		
				if (!IsProjectInvoicing)		
					cannot be entered
						"MajorCategoryIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"				
							
		ARInterfaceOption
			if (!BypassEdits)					
				if (!IsProjectInvoicing)		
					cannot be entered
						"ARInterfaceOptionIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"				
				else
					default to ARInterfaceOption.SummarizeByPostingProject							

		DocumentNumber
			if (!BypassEdits)		
				if (!IsProjectInvoicing)

					cannot be entered
						"DocumentNumberIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"//AndARInterfaceOptionOfSummary"				

		LetterOfCredit
			if (!BypassEdits)		
				if (!IsProjectInvoicing)

					cannot be entered
						"LetterOfCreditIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"//AndARInterfaceOptionOfSummary"
				else					
					if (DocumentNumber entered)
						required		
							"LetterOfCreditRequired;DocumentNumberIsEntered"								
					
		ProjectJurisdictionCode
			if (!BypassEdits)			
				if (!IsProjectInvoicing)		
					cannot be entered
						"JurisdictionCodeIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"
				else
					if (!IsExternalGrantOrCustomer)
						cannot be entered
							"JurisdictionCodeIsOnlyValidForExternalGrantOrExternalCustomer"
					
		PreAwardID
			if (!BypassEdits)		
				if (!IsProjectInvoicing)		
					cannot be entered
						"Pre-AwardIDIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"
		PrimeFlag		
			if (!IsProjectInvoicing)		
				cannot be entered
					"PrimeFlagIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"
			else
				if (PrimeFlag.PassThru)
					constraint (PrimeSponsor.Company entered and PrimeSponsor.Customer entered)
						"PrimeSponsorCompanyAndPrimeSponsorCustomerRequiredForPassThru"
#ifdef module ar						
					constraint (RelatedPrimeSponsorCompanyCustomerExists)
						"PrimeSponsorCustomerInvalidForPrimeSponsorCompany"				
#endif
						
#ifdef module ar
        PrimeSponsor
			if (!BypassEdits)        
				if (!IsProjectInvoicing)		
					cannot be entered
						"PrimeSponsorCompanyIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"







#endif        
		PrimeSponsorAwardNumber
			if (!BypassEdits)		
				if (!IsProjectInvoicing)		
					cannot be entered
						"PrimeSponsorAwardNumberIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"
		
		SEFAFlag
			if (!BypassEdits)		     
				if (!IsProjectInvoicing)		
					cannot be entered
						"SEFAFlagIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"
						
		IndirectExpenseAccount
			if (!BypassEdits)		
				if (!IsProjectInvoicing)		
					cannot be entered
						"IndirectExpenseAccountIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"

		ProgramIncomeEarned
			if (!BypassEdits)		
				if (!IsProjectInvoicing)		
					cannot be entered
						"ProgramIncomeEarnedIsOnlyValidFor<FinanceEnterpriseGroup.ProjectLabel>Invoicing"
					




				
							
    Actions
		Create is a Create Action
			Entrance Rules
				if (!FinanceDimension2Upload.Sequence entered)
					FinanceDimension2Upload.Sequence = (last OtherRecordsInRunGroupRel.FinanceDimension2Upload.Sequence + 1)
					
		Update is an Update Action
			Exit Rules

		Delete is a Delete Action
	
		Purge is a Purge Action
			restricted
			
		UploadHierarchy is a Set Action
			restricted
			
			Parameters
				PrmFinanceEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmFinanceDimension2Structure		is a FinanceDimension2Structure
					default label is "FinanceDimension2Structure"
				PrmRunGroup							is AlphaUpper 30
					default label is "RunGroup"
				
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmFinanceDimension2Structure
					required
				PrmRunGroup
					required
					
			Local Fields	
				LocalRecordCreated		is Boolean
				LocalErrorMessage		is Alpha 150
				LocalFinanceDimension2	is a FinanceDimension2
				DynamicRulesExist		is Boolean		
				
			Instance Selection
				where (FinanceEnterpriseGroup		    = PrmFinanceEnterpriseGroup
				and	   FinanceDimension2Structure	    = PrmFinanceDimension2Structure
				and    FinanceDimension2Upload.RunGroup = PrmRunGroup)

			Set Is
				PrmFinanceEnterpriseGroup
				PrmFinanceDimension2Structure
								
			Sort Order
				FinanceEnterpriseGroup
				FinanceDimension2Structure
				FinanceDimension2Upload.RunGroup
				FinanceDimension2Upload.Sequence

			Action Rules
				FinanceEnterpriseGroup Set Rules
					Entrance Rules
						DynamicRulesExist = false
						if (FromOrToRelationExists)
							if (CodeBlockRelationToRel exists)
								for each CodeBlockRelationToRel
									LocalCodeBlockRelation		= each.CodeBlockRelation
									if (CodeBlockRelationRuleDynamicRel exists)
										DynamicRulesExist = true
							if (!DynamicRulesExist
							and CodeBlockRelationFromRel exists)
								for each CodeBlockRelationFromRel
									LocalCodeBlockRelation		= each.CodeBlockRelation
									if (CodeBlockRelationRuleDynamicRel exists)
										DynamicRulesExist = true
										
					Exit Rules



								
				Instance Rules
					initialize LocalErrorMessage
					if (RecordType.Posting)
						LocalFinanceDimension2 = FinanceDimension2
					else
						LocalFinanceDimension2 = DerivedSummarySequenceDimension2
					if (LocalFinanceDimension2 exists)
						if  (RecordType.Posting
						and !FinanceDimension2HierarchyRel exists)
							invoke AddPostingDimensionToStructure LocalFinanceDimension2
								resume on error
									LocalErrorMessage		= error message		
								invoked.PrmStructure		= FinanceDimension2Structure			
								invoked.PrmParentDimension  = DerivedSequenceParentDimension2
						else					
							if (DerivedSequenceParentDimension2 != LocalFinanceDimension2.DerivedParentDimension)
								invoke Move LocalFinanceDimension2
									resume on error
										LocalErrorMessage	= error message
									invoked.NewParent = DerivedParentFinanceDimension2
							if (!LocalErrorMessage entered)
								invoke Update LocalFinanceDimension2
									resume on error
										LocalErrorMessage	= error message							
									fill in fields from this instance
										except invoked.FinanceDimension2 
										except invoked.ParentFinanceDimension2
										except invoked.ParentDimension
									invoked.BypassUpdateStructure = true
								if (!LocalErrorMessage entered)
									invoke UpdateStructure LocalFinanceDimension2
										resume on error
											LocalErrorMessage	= error message											
					else
						LocalRecordCreated = true
						invoke Create FinanceDimension2
							resume on error
								LocalErrorMessage		= error message
							fill in fields from this instance
								except invoked.ParentFinanceDimension2
							invoked.DimensionType 				   = RecordType
							if (!DynamicRulesExist)
								invoked.BypassNewStructureNotification = true
							else
								invoked.BypassNewStructureNotification = false						
							if (ParentFinanceDimension2 entered)
								invoked.ParentDimension = DerivedParentFinanceDimension2
					if (!LocalErrorMessage entered)
						invoke Delete
						if (DynamicRulesExist)
							commit transaction
					else
						ErrorMessage				= LocalErrorMessage

		ResetAllErrors is a Set Action
			restricted
		
			Parameters
				PrmFinanceEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmFinanceDimension2Structure		is a FinanceDimension2Structure
					default label is "FinanceDimension2Structure"
				PrmRunGroup							is AlphaUpper 30
					default label is "RunGroup"

			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmFinanceDimension2Structure
					required
				PrmRunGroup
					required
														
			Instance Selection
				where (FinanceEnterpriseGroup		    = PrmFinanceEnterpriseGroup
				and	   FinanceDimension2Structure	    = PrmFinanceDimension2Structure
				and    FinanceDimension2Upload.RunGroup = PrmRunGroup
				and    ErrorMessage entered)
				
			Action Rules
			
				Instance Rules
					initialize ErrorMessage

		DeleteAll is a Set Action
			restricted
		
			Parameters
				PrmFinanceEnterpriseGroup   	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmFinanceDimension2Structure   is a FinanceDimension2Structure
					default label is "<FinanceEnterpriseGroup.FinanceDimension2Label>Structure"
				PrmRunGroup						is AlphaUpper 30
				
			Instance Selection
				where (FinanceEnterpriseGroup		    = PrmFinanceEnterpriseGroup
				and	   FinanceDimension2Structure	    = PrmFinanceDimension2Structure
				and    FinanceDimension2Upload.RunGroup = PrmRunGroup)
				
			Action Rules
			
				Instance Rules
					invoke Purge								

		SetRevenueFields is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup     is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
			Instance Selection
				where ((FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				or      PrmFinanceEnterpriseGroup not entered)
				and     RecordType.Posting
				and     RevenueCodeBlockOption not entered)
			Action Rules
				Instance Rules
					if (RevenueAccountOnly entered)
						RevenueCodeBlockOption = 2
						RevenuePartialAccount.GeneralLedgerChartAccount = RevenueAccountOnly
						RevenuePartialAccount.FinanceDimension1 = RevenueDimension.FinanceDimension1
						RevenuePartialAccount.FinanceDimension3 = RevenueDimension.FinanceDimension3
						RevenuePartialAccount.FinanceDimension4 = RevenueDimension.FinanceDimension4
						RevenuePartialAccount.FinanceDimension5 = RevenueDimension.FinanceDimension5
						RevenuePartialAccount.FinanceDimension6 = RevenueDimension.FinanceDimension6
						RevenuePartialAccount.FinanceDimension7 = RevenueDimension.FinanceDimension7
						RevenuePartialAccount.FinanceDimension8 = RevenueDimension.FinanceDimension8
						RevenuePartialAccount.FinanceDimension9 = RevenueDimension.FinanceDimension9
						RevenuePartialAccount.FinanceDimension10 = RevenueDimension.FinanceDimension10
					else
					if (RevenueFullAccount entered)
						RevenueCodeBlockOption = 1
