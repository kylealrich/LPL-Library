AssetProjectionParameter is a BusinessClass
    owned by am
    prefix is AMAPP

    Ontology
        symbolic key is AssetProjectionParameter

    Patterns
        implements StaticJava
        disable AuditIndex

    Persistent Fields
		Description
		Book
		Company
		Method
		MethodComputeProjection	is an AssetProjectionParameter compute in subject AssetMethodFormula			
		Life					
		LifeRemaining			
		InServiceDate			is Date
		Convention				
		Basis					is an InternationalAmount
		SalvageValue			is an InternationalAmount
		YearToDateDepreciation	is an InternationalAmount
		LifeToDateDepreciation	is an InternationalAmount
		YearPlacedInService
    
	Local Fields
		LocalPrevYearEndDate				is Date
    	LocalYearEndDate					is Date
		LocalYearBeginDate					is Date

		LocalInServiceDate					is Date

		LocalFirstLastFl					is like FirstAndLastYear
    	LocalBusPercent						is like BusinessPercent
		LocalCompany						is like Company
	
    	LocalMethodSwitch					is Boolean
		LocalDeprClsPd						is Numeric 2
		LocalPdPerYear						is Numeric 2
		I64									is Numeric 2
		
		LocalMethTbYear						is like YearPlacedInService
		LocalLife							is like Life
		LocalLifeRem						is like LifeRemaining
		LocalProcessedMonths				is like LifeRemaining

		LocalDeprYTD						is an InternationalAmount
		LocalDeprLTD						is an InternationalAmount
		LocalAnnualDepreciation				is an InternationalAmount
		LocalBasis							is an InternationalAmount
		LocalSalvage						is an InternationalAmount
		LocalDeprSave						is an InternationalAmount
		LocalBeginningYearLife				is an InternationalAmount
		LocalDeprOverage					is an InternationalAmount

		LocalConvention						is like Convention
		LocalMethod							is a Method
		LocalOptMethod						is a Method
		LocalMethodComputeProjection		is an AssetProjectionParameter compute in subject AssetMethodFormula

		TempYearToDateDepreciation			is an InternationalAmount
		TempLifeToDateDepreciation			is an InternationalAmount
		TempLifeRemaining					is like LifeRemaining

		LocalTriggerAnnualDepreciation		is an InternationalAmount
		AnnualDepreciation
		PercentTableYear					is Numeric 2
		PercentTableAnnualAmount			is an InternationalAmount
		PercentTableLTD						is an InternationalAmount

		LocalLifeInYrs						is Decimal size 5.2
		LocalSumOfYrs						is Decimal size 5.2	
		LocalNumberYearsRemaining			is Decimal size 7.3
		LocalDigitsValueNumberYears			is Decimal size 7.3
		LocalDigitsValue					is Decimal size 7.3

		NumberOfPeriodsFirstYear			is Decimal 9.5
		MonthsProcessed
		TempLocalAnnualDepreciation			is an InternationalAmount
		LocalShortYearAmount				is an InternationalAmount
		LocalAnnualAddition					is an InternationalAmount
		LocalDifference                     is Numeric size 3
		LocalFutureYearEndDate              is Date

	Transient Fields
		ProjectionCurrency				is a Currency
			derive value from Book.Currency	
			
    Derived Fields
    	MethodComputeOutput is a DerivedField	
    		type is like InternationalAmount
    		restricted
    		return MethodComputeProjection compute value for AssetProjectionParameterRel	

		DigitsValue       is a DerivedField
			type is Numeric 12
 			restricted	
 			LocalDigitsValue = LocalDigitsValueNumberYears
 			round LocalDigitsValue down to nearest 1
 			return LocalDigitsValue

    Relations
		AssetProjectionParameterRel
			one-to-one relation to AssetProjectionParameter
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup									= FinanceEnterpriseGroup
				related.AssetProjectionParameter								= AssetProjectionParameter 	

        BookCalendarRel
            one-to-one relation to BookCalendar
            Field Mapping uses Set5
                related.Book    					= Book
                related.Company 					= Company

		AssetProjectionRel
			one-to-many relation to AssetProjection
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Actor	= actor
				and related.AssetProjectionParameter = AssetProjectionParameter)			
		
		CompanySecurityGroupMemberRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= actor.context.CompanySecurityGroup.FinanceDimensionStructure
				related.Company                     = Company						
		
    Conditions
		ProjectionExist
			restricted
			when (AssetProjectionRel exist)

		IsCustomMethod
			restricted
			when (Method.MethodCategoryType.User
			and Method.RecordType.Compute)
		
		SecurityGroupAllowsAccess
			when (actor.context.CompanySecurityGroup = blank
			or    CompanySecurityGroupMemberRel exists)
    
    Sets

    Field Rules
    	
    	Book
    		required
    		
    	Company
    		required
    		
    	ProjectionCurrency
    		default to Book.Currency
    		
    	Description
    		required

		Method
			if (MethodComputeProjection not entered)
				required
					"MethodOrCustomComputeRequired"
			constraint (MethodComputeProjection not entered)
				"CannotEnterBothMethodAndCustomCompute"
			constraint (!IsCustomMethod)
				"MethodIsACustomMethodUseCustomCompute"

		InServiceDate
			required										
			
		Life
			
	
		LifeRemaining
			constraint (LifeRemaining <= Life)
				"LifeRemainingCannotbeGreaterThanTheAssetLife"

		Convention
			required										

		Basis
			required										
			
		SalvageValue
			if (SalvageValue < 0)
				constraint (Basis < 0)
					"ValueMustHaveSameSignAsBasis"			
			if (SalvageValue > 0)
				constraint (Basis > 0)
					"ValueMustHaveSameSignAsBasis"			
					
		YearToDateDepreciation
			if (YearToDateDepreciation < 0)
				constraint (Basis < 0)
					"ValueMustHaveSameSignAsBasis"			
			if (YearToDateDepreciation > 0)
				constraint (Basis > 0)
					"ValueMustHaveSameSignAsBasis"			
			constraint (YearToDateDepreciation <= LifeToDateDepreciation)
				"YearToDateCannotExceedLifeToDateDepreciation"		

		LifeToDateDepreciation
			if (LifeToDateDepreciation < 0)
				constraint (Basis < 0)
					"ValueMustHaveSameSignAsBasis"			
			if (LifeToDateDepreciation > 0)
				constraint (Basis > 0)
					"ValueMustHaveSameSignAsBasis"			
			constraint (LifeToDateDepreciation <= Basis)
				"LifeToDateDepreciationCannotExceedBasis"
			constraint (LifeToDateDepreciation <= (Basis - SalvageValue))
				"LifeToDateDepreciationCannotExceedBasisLessSalvageValue"
				
	Rule Blocks

		ProcessDepreciation
			if ((LocalBasis > 0
			and (LocalDeprLTD >= LocalBasis - LocalSalvage))
			or (LocalBasis < 0
			and LocalDeprLTD <= LocalBasis - LocalSalvage))
				I64 = 100
			else
				increment LocalMethTbYear by 1

				LocalFirstLastFl	= "M"
				if (LocalMethod = "SYD")
					include SYDCalculation
				else
					include AnnualDepreciation

				LocalAnnualDepreciation	= LocalAnnualDepreciation + LocalAnnualAddition
				if (LocalLifeRem <= 12)
					LocalFirstLastFl = "L"

					initialize LocalLifeRem
					LocalAnnualDepreciation = LocalBasis - LocalSalvage - LocalDeprLTD
				
				LocalDeprLTD = LocalDeprLTD + LocalAnnualDepreciation
				if (LocalDeprLTD > LocalBasis - LocalSalvage - LifeToDateDepreciation)
					LocalDeprOverage		=  LocalBasis - LocalSalvage - LifeToDateDepreciation
					LocalDeprOverage		= LocalDeprOverage - LocalDeprLTD
					LocalDeprLTD			= LocalDeprLTD + LocalDeprOverage
					LocalAnnualDepreciation	= LocalAnnualDepreciation + LocalDeprOverage
				if (LocalAnnualDepreciation != 0)
					invoke Create AssetProjection
						invoked.FinanceEnterpriseGroup							= FinanceEnterpriseGroup
						invoked.Actor											= actor
						invoked.Company											= Company
						invoked.Book											= Book
						invoked.Method											= LocalMethod
						invoked.AssetProjection.Period							= I64
						invoked.DepreciationAmount								= LocalAnnualDepreciation
						invoked.AssetProjectionParameter						= AssetProjectionParameter.AssetProjectionParameter
					if (MethodComputeProjection entered)
						include TempFieldsCustomCompute
				LocalLifeRem 		= LocalLifeRem - 12
				
		FirstYearDepr
			AnnualDepreciation.InFirstAndLastYear		= LocalFirstLastFl
			AnnualDepreciation.InBook					= Book
			AnnualDepreciation.InCompany				= Company
			AnnualDepreciation.InServiceDate			= LocalInServiceDate
			AnnualDepreciation.InDepreciationStartDate	= LocalInServiceDate
			AnnualDepreciation.InYearBeginDate			= LocalYearBeginDate
			AnnualDepreciation.InYearEndDate			= LocalYearEndDate
			if (LocalInServiceDate > BookCalendarRel.YearEndDate)
				LocalFutureYearEndDate = BookCalendarRel.YearEndDate
				while LocalFutureYearEndDate <= LocalInServiceDate
					LocalDifference += 1
					LocalFutureYearEndDate	= LocalFutureYearEndDate + 1 year				
				AnnualDepreciation.InYearBeginDate		= BookCalendarRel.YearBeginDate + LocalDifference as years
				AnnualDepreciation.InYearEndDate		= BookCalendarRel.YearEndDate + LocalDifference as years
			AnnualDepreciation.InPrevYearEndDate		= LocalPrevYearEndDate
			AnnualDepreciation.InMethod					= LocalMethod
			AnnualDepreciation.Convention				= LocalConvention
			AnnualDepreciation.InLife					= LocalLife
			AnnualDepreciation.InBusinessPercent		= LocalBusPercent
			AnnualDepreciation.InStartDate				= LocalYearBeginDate
			AnnualDepreciation.InBasis					= LocalBasis
			if (LocalMethod		= "SYD")
				AnnualDepreciation.SYDFirstTime			= true
			LocalAnnualDepreciation						= AnnualDepreciation.FirstYearDepreciation

		AnnualDepreciation
			AnnualDepreciation.InFirstAndLastYear		= LocalFirstLastFl
			AnnualDepreciation.InBook					= Book
			AnnualDepreciation.InMethod					= LocalMethod
			AnnualDepreciation.InTableYear				= LocalMethTbYear
			AnnualDepreciation.InYearBeginDate			= LocalYearBeginDate
			AnnualDepreciation.Convention				= LocalConvention
			AnnualDepreciation.InServiceDate			= LocalInServiceDate
			AnnualDepreciation.InPrevYearEndDate		= LocalPrevYearEndDate
			AnnualDepreciation.InDepreciationStartDate	= LocalInServiceDate
			AnnualDepreciation.InCompany				= Company
			AnnualDepreciation.InBasis					= LocalBasis
			AnnualDepreciation.InSalvageValue			= LocalSalvage
			AnnualDepreciation.InLife					= LocalLife
			AnnualDepreciation.InLifeRemaining			= LocalLifeRem
			AnnualDepreciation.InLTDDepr				= LocalDeprLTD
			AnnualDepreciation.InYTDDepr				= LocalDeprYTD
			AnnualDepreciation.InBusinessPercent		= LocalBusPercent
			AnnualDepreciation.LocalDeprLTD 			= LocalDeprLTD
			if (LocalMethod		= "125DB"
			or LocalMethod		= "175DB"
			or LocalMethod		= "200DB"
			or LocalMethod		= "200DB30%"
			or LocalMethod		= "200DB50%"
			or LocalMethod		= "150DB"
			or LocalMethod		= "150DB30%"
			or LocalMethod		= "150DB50%")
				LocalTriggerAnnualDepreciation			= AnnualDepreciation.CalculateDeclingBalance
			else
				if (LocalMethod		= "SYD")
					AnnualDepreciation.SYDFirstTime		= true
				LocalTriggerAnnualDepreciation			= AnnualDepreciation.ComputeAnnualDepreciation
				if (Method entered)
					LocalAnnualDepreciation				= LocalTriggerAnnualDepreciation
				else
					LocalAnnualDepreciation				= MethodComputeOutput
		
		TempFieldsCustomCompute
			YearToDateDepreciation		= LocalDeprYTD
			LifeToDateDepreciation		= LocalDeprLTD
			LifeRemaining				= LocalLifeRem
			
		ResetTempFieldsCustomCompute
			YearToDateDepreciation		= TempYearToDateDepreciation
			LifeToDateDepreciation		= TempLifeToDateDepreciation
			LifeRemaining				= TempLifeRemaining		
		
		GetPercentAnnualAmount
			PercentTableAnnualAmount	= ((LocalMethod.MethodPercents.MethodPercent[PercentTableYear]/100) * LocalBasis)

		SYDCalculation
			LocalLifeInYrs				= Life /12
			LocalSumOfYrs				= LocalLifeInYrs 
			LocalSumOfYrs				*= (LocalLifeInYrs +1)
			LocalSumOfYrs				/= 2		
			LocalNumberYearsRemaining	= (LocalLifeRem /12)
			LocalDigitsValueNumberYears	= LocalNumberYearsRemaining
			LocalAnnualDepreciation		= (DigitsValue * LocalBasis)
			LocalAnnualDepreciation		/=	LocalSumOfYrs

		PeriodsFirstYear
			initialize NumberOfPeriodsFirstYear
			if (Convention.HalfYear)
				NumberOfPeriodsFirstYear				= 6
			else
				MonthsProcessed.InServiceDate	 		= InServiceDate
				MonthsProcessed.InDeprStartDate			= InServiceDate
				MonthsProcessed.InYearBeginDate			= LocalYearBeginDate
				MonthsProcessed.InPrevYearEndDate		= LocalPrevYearEndDate
				MonthsProcessed.InYearEndDate			= LocalYearEndDate		
				MonthsProcessed.Convention				= Convention
				MonthsProcessed.InLife					= Life
				MonthsProcessed.LastPeriodEnd			= LocalYearEndDate
				MonthsProcessed.InBook					= Book
				MonthsProcessed.InCompany				= Company
				NumberOfPeriodsFirstYear				= MonthsProcessed.ReturnNumberOfMonthsProcessed

	Actions	
		
		Create is a Create Action
		
		Update is an Update Action
			Action Rules
				invoke Delete AssetProjectionRel	

		Delete is a Delete Action

		CreateProjections is an Instance Action
			Action Rules
				invoke Delete AssetProjectionRel
				
				if (MethodComputeProjection entered)
					TempYearToDateDepreciation		= YearToDateDepreciation
					TempLifeToDateDepreciation		= LifeToDateDepreciation
					TempLifeRemaining				= LifeRemaining
				
				LocalYearEndDate	= BookCalendarRel.YearEndDate
				LocalBusPercent		= 100
				LocalMethodSwitch	= Book.MethodSwitch		
					
				initialize LocalDeprClsPd
				initialize LocalAnnualAddition
				LocalPdPerYear 					= 1
				LocalLife 						= Life
				LocalDeprYTD					= YearToDateDepreciation
				LocalDeprLTD					= LifeToDateDepreciation
				LocalSalvage					= SalvageValue
				LocalLifeRem					= LifeRemaining
				LocalBasis						= Basis
				LocalConvention					= Convention
				LocalMethTbYear					= YearPlacedInService
				LocalMethod						= Method
				LocalMethodComputeProjection	= MethodComputeProjection
				LocalInServiceDate				= InServiceDate
				
				if (LocalLifeRem not entered)
					LocalLifeRem = LocalLife
				LocalOptMethod = LocalMethod.DepreciationOptimizingMethod
				
				if (LocalMethTbYear not entered
				and LocalMethod.RecordType != "C")
					LocalMethTbYear = 1
	
				LocalYearEndDate		= BookCalendarRel.YearEndDate
				LocalYearBeginDate		= BookCalendarRel.YearBeginDate
				LocalPrevYearEndDate	= BookCalendarRel.YearBeginDate - 1 day
				LocalCompany			= Company
				if (LocalLifeRem > 12
				and LocalDeprYTD = LocalDeprLTD
				and InServiceDate >= BookCalendarRel.YearBeginDate)
					if (Method entered)
						initialize LocalDeprYTD
						initialize LocalDeprLTD
						initialize LocalDeprClsPd

						LocalFirstLastFl		= "F"
						include FirstYearDepr
						include PeriodsFirstYear
						LocalProcessedMonths	= NumberOfPeriodsFirstYear
						if (!LocalLifeRem > NumberOfPeriodsFirstYear)
							LocalAnnualDepreciation = LocalBasis - LocalSalvage - LocalDeprLTD + LocalDeprYTD
					else
						LocalAnnualDepreciation	= MethodComputeOutput
						if (LocalConvention.HalfYear)
							LocalAnnualDepreciation = LocalAnnualDepreciation / 2

					if (!LocalProcessedMonths = 12
					and LocalMethod = "SYD")
						TempLocalAnnualDepreciation 	= LocalAnnualDepreciation
						include SYDCalculation
						LocalShortYearAmount			= LocalAnnualDepreciation - TempLocalAnnualDepreciation
						LocalAnnualAddition				= LocalShortYearAmount / (Life /12)
						LocalAnnualDepreciation			= TempLocalAnnualDepreciation

				else
					if (LocalLife < ((LocalLife - LocalLifeRem) + 12))
						LocalFirstLastFl		= "L"
						LocalProcessedMonths	= LocalLifeRem
						LocalAnnualDepreciation	= (LocalBasis - LocalSalvage - LocalDeprLTD)
					else
						LocalFirstLastFl		= "M"
						LocalPdPerYear			= BookCalendarRel.DepreciationPeriodsPerYear
						LocalDeprSave			= LocalLifeRem / 12
						if (LocalMethod = "SL")
							LocalDeprClsPd		= BookCalendarRel.NumberOfDepreciationPeriodsClosed
						else
							if (LocalDeprYTD entered)
								LocalLifeRem = ((LocalDeprSave * 12) + 12)
								LocalDeprLTD = LocalDeprLTD - LocalDeprYTD
								initialize LocalDeprYTD
						include AnnualDepreciation
						if(Convention.HalfYear)
							LocalProcessedMonths				= 6
						else
							LocalBeginningYearLife	= (((LocalLifeRem * LocalPdPerYear) + (LocalDeprClsPd * 12)) / LocalPdPerYear)
							LocalLifeRem			= LocalBeginningYearLife
							LocalProcessedMonths	= 12
						LocalAnnualDepreciation	= LocalAnnualDepreciation - LocalDeprYTD
						initialize LocalDeprYTD
						initialize LocalDeprClsPd
				
				LocalLifeRem -= LocalProcessedMonths
				if (LocalMethod 	= "SL30%"
				or LocalMethod		= "200DB30%"
				or LocalMethod		= "150DB30%"
				or LocalMethod		= "100%BONUS"
				or LocalMethod		= "SL40%"
				or LocalMethod		= "200DB40%"
				or LocalMethod		= "150DB40%"			
				or LocalMethod		= "SL50%"
				or LocalMethod		= "200DB50%"
				or LocalMethod		= "150DB50%"
				or LocalMethod		= "SL75%")
					LocalAnnualDepreciation = LocalAnnualDepreciation + AnnualDepreciation.LocalDeprBonus
				if (LocalFirstLastFl.First)
					if (LocalMethod.RecordType.Percent)
						PercentTableYear = 1
						include GetPercentAnnualAmount
						LocalAnnualDepreciation = PercentTableAnnualAmount - LifeToDateDepreciation  
						PercentTableLTD 		= LocalAnnualDepreciation
					else
						LocalAnnualDepreciation = LocalAnnualDepreciation - LifeToDateDepreciation
					LocalFirstLastFl 		= "M"
				if (LocalMethTbYear > 1)
					PercentTableLTD 	+= LocalAnnualDepreciation
				LocalDeprLTD = LocalDeprLTD + LocalAnnualDepreciation
				if (LocalAnnualDepreciation != 0)
					invoke Create AssetProjection
						invoked.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
						invoked.Actor										= actor
						invoked.Company										= Company
						invoked.Book										= Book
						invoked.Method										= LocalMethod
						invoked.AssetProjection.Period						= 1
						invoked.DepreciationAmount							= LocalAnnualDepreciation
						invoked.AssetProjectionParameter					= AssetProjectionParameter.AssetProjectionParameter
				if (MethodComputeProjection entered)					
					include TempFieldsCustomCompute
					
				I64 = 1
				while (I64 <= 65)
					increment I64 by 1	
					if (LocalMethod.RecordType.Percent) 
						PercentTableYear = I64
						if (I64 = 51)
							end while 
						else 
							if (LocalMethod.MethodPercents.MethodPercent[PercentTableYear] entered)
								include GetPercentAnnualAmount
								LocalAnnualDepreciation = PercentTableAnnualAmount  
								if (LocalAnnualDepreciation != 0)
									invoke Create AssetProjection
										invoked.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
										invoked.Actor										= actor
										invoked.Company										= Company
										invoked.Book										= Book
										invoked.Method										= LocalMethod
										invoked.AssetProjection.Period						= I64
										invoked.DepreciationAmount							= LocalAnnualDepreciation
										invoked.AssetProjectionParameter					= AssetProjectionParameter.AssetProjectionParameter
								else 
									end while
					else	
						include ProcessDepreciation
				
				if (MethodComputeProjection entered)
					include ResetTempFieldsCustomCompute	
