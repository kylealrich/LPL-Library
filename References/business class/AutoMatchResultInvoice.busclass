AutoMatchResultInvoice is a BusinessClass
    owned by ma
    prefix is AuMRI

    Ontology
		symbolic key is AutoMatchResultInvoice

    Patterns
    	disable AuditIndex
    	disable Auditing
    	disable EffectiveDated
		implements CreateStamp	
		implements UpdateStamp	

    Persistent Fields
		Invoice
		Suffix
		PurchaseOrder				is like PurchaseOrder
		ServiceContract				is like Contract
    	Buyer						is like Buyer
    	Vendor						is like Vendor
		VendorName 
			holds pii
		Operator
        MatchStatus                   is Numeric size 1
            States
                Unmatched                 value is 0
                POCostMessagesExist       value is 1
                Matched                   value is 2
                MatchedOutOfTolerance     value is 3
                MatchedInTolerance        value is 4
                MatchedWithAutoChargeback value is 5
                ApprovedNoReceipt         value is 6
    	SystemOwner					is Numeric 1
    		States
    			Payables    value is 1
    			Procurement	value is 2
    	InvoiceDate					is Date
    	DueDate 					is Date
		ErrorMessage				is Alpha 200
		ErrorNumber
        MatchErrorType              is Numeric size 2
            States
                MissingData          value is 1
                CostError            value is 2
                NoReceiptInformation value is 3
		InvoiceAmount				is an InternationalAmount
		FunctionalAmount    		is an InternationalAmount
		MatchNotAttempted			is Boolean
		CostVarianceCreated			is Boolean
		Year
		Month						is Numeric 2

	Transient Fields
		UnmatchedAmount				is an InternationalAmount
		ErrorAmount					is an InternationalAmount
		TotalChargebackAmount		is an InternationalAmount

	Local Fields
		CallUpdateTotals			is Boolean
		NextSentence				is Boolean		
		LocalPayablesInvoice		is like PayablesInvoice
		AutoMatchError				is Boolean
		AutoMatchErrorMessage		is Alpha 200
		NewMatchWork 				is a MatchWork view
		DistribCount                is Numeric size 9
		MatchInvoiceErrorMessages
		LocalFinanceEnterpriseGroup is like FinanceEnterpriseGroup
		LocalAutoMatchResult		is like AutoMatchResult
		LocalVendorGroup			is like VendorGroup
		LocalVendor					is like Vendor
		LocalBuyer					is like Buyer
		LocalErrorNumber			is Numeric 3
		
	Context Fields
		MatchWork
				
	Derived Fields

		MatchProcessingInBackgroundAsyncFailureMsg is a MessageField
			"MatchBackgroundActionFailed;CheckMyActionsOrAsyncQueue"




		PurchaseOrderLineIsClosedMsg is a MessageField
			"PurchaseOrderLineIsClosed"

		DerivedBuyerName is a DerivedField
		    type is Alpha size 100		
			default label is "Name"
			if (PayablesInvoice.MatchProcessType.ServiceContract)
			    return PayablesInvoice.ServiceContract.Buyer.Name
			else
				return PayablesInvoice.FirstPurchaseOrder.Buyer.Name

	Sets

 		ByBuyer
 			Sort Order
 				AutoMatchResult
 				Buyer
 				Year
 				Month
 				Invoice
 				Company
 				PayablesInvoice

 		ByVendorName
 			Sort Order
 				VendorName
 				Invoice
 				Company
 				PayablesInvoice
 				AutoMatchResult

 		ByVendor
 			Sort Order
 				AutoMatchResult
 				Vendor
 				Year
 				Month
 				Invoice
 				Company
 				PayablesInvoice

 		ByOperator
 			Sort Order
 				Operator
 				Invoice
 				Company
 				PayablesInvoice
 				AutoMatchResult

 		ByInvoice
 			Sort Order
 				Invoice
 				Company
 				PayablesInvoice
 				AutoMatchResult
 				
 		ByCompanyPurchaseOrder
 			Sort Order
 				Company
 				PurchaseOrder
 				AutoMatchResult
 				PayablesInvoice
 				
 		ByCompanyInvoiceOnly
 			allow duplicates
 			Sort Order
 				Company
 				Invoice

 		ByResult
 			Sort Order
 				AutoMatchResult
 				Company
 				Invoice
 				PayablesInvoice

 		ByErrorNumber
 			Sort Order
 				AutoMatchResult
 				ErrorNumber
 				Year
 				Month
 				Invoice
 				Company
 				PayablesInvoice

	Relations

		PurchaseOrderRel
			one-to-one relation to PurchaseOrder
			Field Mapping uses symbolic key
				related.Company				= Company
				related.PurchaseOrder		= PurchaseOrder

		LocalInvoiceResultRel
			one-to-one relation to AutoMatchResultInvoice
			Field Mapping uses symbolic key
				related.Company				= Company
				related.AutoMatchResult		= AutoMatchResult
				related.PayablesInvoice		= LocalPayablesInvoice

		MatchNotAttemptedForSamePODiffInvoiceRel
			one-to-many relation to AutoMatchResultInvoice
			Field Mapping uses ByCompanyPurchaseOrder
                related.Company 							= Company
                related.PurchaseOrder						= PurchaseOrder
                related.AutoMatchResult						= AutoMatchResult
			Instance Selection
				where (related.PayablesInvoice 		!= PayablesInvoice
				and    related.MatchNotAttempted)

		MatchInProcessForSamePODiffInvoiceRel
			one-to-many relation to AutoMatchResultInvoice
			Field Mapping uses ByCompanyPurchaseOrder
                related.Company 							= Company
                related.PurchaseOrder						= PurchaseOrder
                related.AutoMatchResult						= AutoMatchResult
			Instance Selection
				where (related.PayablesInvoice 		!= PayablesInvoice
				and    related.PayablesInvoice.BackgroundProcessing entered)

		OtherInvoicesForSamePORel
			one-to-many relation to AutoMatchResultInvoice
			Field Mapping uses ByCompanyPurchaseOrder
                related.Company 							= Company
                related.PurchaseOrder						= PurchaseOrder
                related.AutoMatchResult						= AutoMatchResult
			Instance Selection
				where (related.PayablesInvoice 		!= PayablesInvoice)

		InvoicesForSamePOStillProcessingRel
			one-to-many relation to AutoMatchResultInvoice
			Field Mapping uses ByCompanyPurchaseOrder
                related.Company 							= Company
                related.PurchaseOrder						= PurchaseOrder
                related.AutoMatchResult						= AutoMatchResult
			Instance Selection
				where (related.PayablesInvoice	!= PayablesInvoice
			    and    related.MatchStatus not entered
			    and    related.ErrorMessage not entered
			    and    not related.MatchNotAttempted)

		MatchCompanyRel
			one-to-one relation to MatchCompany
			Field Mapping uses symbolic key
				related.Company = Company

		BuyerSummaryRel
			one-to-many relation to AutoMatchResultSummary
			Field Mapping uses ByBuyer
				related.FinanceEnterpriseGroup 	= LocalFinanceEnterpriseGroup
				related.AutoMatchResult			= AutoMatchResult
				related.Buyer					= Buyer
				related.Year					= Year
				related.Month					= Month

		BuyerSummaryTotalRel
			one-to-many relation to AutoMatchResultSummary
			Field Mapping uses ByBuyer
				related.FinanceEnterpriseGroup 	= LocalFinanceEnterpriseGroup
				related.AutoMatchResult			= AutoMatchResult
				related.Buyer					= Buyer
				related.Year					= blank
				related.Month					= blank

		VendorSummaryRel
			one-to-many relation to AutoMatchResultSummary
			Field Mapping uses ByVendor
				related.FinanceEnterpriseGroup 	= LocalFinanceEnterpriseGroup
				related.AutoMatchResult			= AutoMatchResult
				related.VendorGroup				= LocalVendorGroup
				related.Vendor					= Vendor
				related.Year					= Year
				related.Month					= Month

		VendorSummaryTotalRel
			one-to-many relation to AutoMatchResultSummary
			Field Mapping uses ByVendor
				related.FinanceEnterpriseGroup 	= LocalFinanceEnterpriseGroup
				related.AutoMatchResult			= AutoMatchResult
				related.VendorGroup				= LocalVendorGroup
				related.Vendor					= Vendor
				related.Year					= blank
				related.Month					= blank

		ErrorNumberSummaryRel
			one-to-many relation to AutoMatchResultSummary
			Field Mapping uses ByErrorNumber
				related.FinanceEnterpriseGroup 	= LocalFinanceEnterpriseGroup
				related.AutoMatchResult			= AutoMatchResult
				related.ErrorNumber				= ErrorNumber
				related.Year					= Year
				related.Month					= Month

		ErrorNumberSummaryTotalRel
			one-to-many relation to AutoMatchResultSummary
			Field Mapping uses ByErrorNumber
				related.FinanceEnterpriseGroup 	= LocalFinanceEnterpriseGroup
				related.AutoMatchResult			= AutoMatchResult
				related.ErrorNumber				= ErrorNumber
				related.Year					= blank
				related.Month					= blank

	 	AsyncErrorRel
			one-to-many relation to PayablesInvoiceError
			Field Mapping uses symbolic key
				related.Company			= Company
				related.PayablesInvoice	= PayablesInvoice
			Instance Selection
				where (related.ErrorType.AsyncFailure)

		GeneralLedgerCompanyRel			
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company
	Conditions

		InvoiceUnmatched
        	restricted
			when (MatchStatus = 0
			or    MatchStatus = 1)

		InvoiceMatched
			when (MatchStatus > 1)

		MatchStatusHasChanged
			when (MatchStatus != PayablesInvoice.MatchStatus)

		AsyncError
			when (AsyncErrorRel exists)
			
	Field Rules

	Create Rules
		Vendor 				= PayablesInvoice.Vendor
		VendorName			= PayablesInvoice.Vendor.VendorName
		if (PayablesInvoice.MatchProcessType.ServiceContract)
			Buyer 			= PayablesInvoice.ServiceContract.Buyer
		else	
			Buyer 			= PayablesInvoice.FirstPurchaseOrder.Buyer
		Operator			= PayablesInvoice.Operator
		Invoice				= PayablesInvoice.Invoice
		Suffix 				= PayablesInvoice.Suffix
		PurchaseOrder		= PayablesInvoice.FirstPurchaseOrder
		ServiceContract		= PayablesInvoice.ServiceContract
    	InvoiceDate			= PayablesInvoice.InvoiceDate
    	DueDate				= PayablesInvoice.DueDate
		InvoiceAmount 		= PayablesInvoice.InvoiceAmount.CurrencyAmount
		FunctionalAmount 	= PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount

	Actions
		Create is a Create Action
			restricted
			Exit Rules
				invoke UpdateResults

				if  ((MatchCompanyRel.NoReceiptNotifyOption.Batch
				or    MatchCompanyRel.NoReceiptNotifyOption.OnlineAndBatch)
				and  PayablesInvoice.UnmatchedNoReceiptsInPool)

					invoke EmailNoReceiptInPool PayablesInvoice

				
		Update is an Update Action
			restricted
			Exit Rules

				
		UpdateFromMatch is an Update Action
			bypass field rules
			restricted
			Action Rules


				if  (SystemOwner not entered)
					SystemOwner 	= 1

				if  (MatchErrorType not entered
				and  ErrorMessage contains "Receipt")
					MatchErrorType = 3

				if  (PayablesInvoice.BackgroundProcessing entered
				and (UnmatchedAmount entered
				or   ErrorMessage entered))
					if  (!PayablesInvoice.TaxEntityUsesSabrix
					or    PayablesInvoice.CreditForRebill)
						invoke FastUpdate PayablesInvoice
							initialize invoked.BackgroundProcessing
					else
					if  (PayablesInvoice.TaxConfigurationRel.OneSourceVersionType.Generic)
						invoke FastUpdate PayablesInvoice
							initialize invoked.BackgroundProcessing
							initialize invoked.POTaxAmount
					else
					if (PayablesInvoice.TotalTaxAmount entered)

						invoke OneSourceResetDistributions PayablesInvoiceDistribution
							invoked.PrmCompany = Company
							invoked.PrmPayablesInvoice = PayablesInvoice
					else
					if (PayablesInvoice.BackgroundProcessing entered)
						invoke ResetAmounts PayablesInvoice

				MatchStatus = PayablesInvoice.MatchStatus

				if (InvoiceMatched)
					initialize ErrorMessage

				if  (PayablesInvoice.MatchLevel.InvoiceMatch
				and !PayablesInvoice.InvoiceType.MatchPrepayment)

					for each MatchWork.MatchWorkInvoiceRel

						if (each.PayablesInvoice != PayablesInvoice)

							LocalPayablesInvoice = each.PayablesInvoice
							invoke Update LocalInvoiceResultRel
								invoked.MatchStatus 	= MatchStatus
								invoked.ErrorMessage 	= ErrorMessage
				else										
				if  (PayablesInvoice.MatchPrepaymentMethod.PrepayFromInvoice)

					for each OtherInvoicesForSamePORel

						if (each.PayablesInvoice != PayablesInvoice)

							LocalPayablesInvoice = each.PayablesInvoice
							invoke Update LocalInvoiceResultRel
								invoked.MatchStatus 	= MatchStatus
								invoked.ErrorMessage 	= ErrorMessage
								invoked.SystemOwner 	= SystemOwner
								invoked.MatchStatus 	= each.PayablesInvoice.MatchStatus
										
			Exit Rules






							
				if  (ErrorMessage entered 
				and  MatchErrorType.MissingData
				and  !AutoMatchResult.SelectionComplete)
					NextSentence = true 
				else 
				if  (!PayablesInvoice.MatchLevel.InvoiceMatch
				or    PayablesInvoice.MatchPrepaymentMethod.EligibleForPrepay)
					if  (MatchNotAttemptedForSamePODiffInvoiceRel exists)

						if  (PayablesInvoice.TaxEntityUsesSabrix)
						    invoke AutoMatchOneSource first MatchNotAttemptedForSamePODiffInvoiceRel
						else
						if  (PayablesInvoice.CallVertexByDocument)
						    invoke AutoMatchVertex first MatchNotAttemptedForSamePODiffInvoiceRel
						else
							invoke AutoMatch first MatchNotAttemptedForSamePODiffInvoiceRel
					else
					if (InvoicesForSamePOStillProcessingRel exists)

					    invoke UpdateResults
					else

						invoke UpdateResults
				else
					invoke UpdateResults

											

		UpdateResults is an Instance Action
			restricted
			Exit Rules

				if  (AutoMatchResult.SelectionComplete)

					CallUpdateTotals = true

					for each AutoMatchResult.InProcessInvoicesRel

						if  (each.Suffix entered)
							NextSentence = true
						else
						if  (each.PayablesInvoice.MatchStatus < 2
						and  each.ErrorMessage not entered
						and !each.PayablesInvoice.AsyncErrorRel exists)


							CallUpdateTotals = false

							if  (each.MatchNotAttempted
							and  !each.MatchInProcessForSamePODiffInvoiceRel exists)

								if  (PayablesInvoice.TaxEntityUsesSabrix)
								    invoke AutoMatchOneSource
								else
								if  (PayablesInvoice.CallVertexByDocument)
								    invoke AutoMatchVertex
								else
								    invoke AutoMatch each

							end for each
						else
						if  (each.PayablesInvoice.BackgroundProcessing entered
						and  each.PayablesInvoice != PayablesInvoice)


							CallUpdateTotals = false
							end for each
					
					if  (CallUpdateTotals)

						invoke UpdateTotalsAndMarkComplete AutoMatchResultInvoice
							invoked.PrmFinanceEnterpriseGroup	= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
							invoked.PrmAutoMatchResult			= AutoMatchResult
					else
					if  (AutoMatchResult.PerfectMatchCount not entered 
					and  AutoMatchResult.UnmatchedCount not entered 
					and  AutoMatchResult.ErrorCount not entered
					and  AutoMatchResult.DoneProcessing)
						invoke UpdateTotalsAndMarkComplete AutoMatchResultInvoice
							invoked.PrmFinanceEnterpriseGroup	= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
							invoked.PrmAutoMatchResult			= AutoMatchResult

		Delete is a Delete Action
			restricted

		FastDelete is a Delete Action
			restricted
			bypass relational integrity rules

		Purge is a Purge Action
			restricted
			bypass relational integrity rules

		MarkAsCostVarianceCreatedToTrue	is an Instance Action
			restricted
			Action Rules
				CostVarianceCreated = true
						
		AutoMatch is an Instance Action
			restricted
			Entrance Rules



				MatchNotAttempted = false
				

				invoke FastUpdate PayablesInvoice
					invoked.BackgroundProcessing = 3 
			Action Rules
				initialize AutoMatchError
				
				if (!PayablesInvoice.CreditOrDebitMemo)
					if (PurchaseOrderRel.NumberOfLines = PurchaseOrderRel.NumberOfClosedLines)	
						AutoMatchError 			= true
						AutoMatchErrorMessage	= MatchInvoiceErrorMessages.NoOpenLinesOnPurchaseOrderMsg
					else
						for each PayablesInvoice.PayablesInvoiceDetailRel
							if  (each.PurchaseOrderLine.Closed.Yes)
								AutoMatchError 			= true
								AutoMatchErrorMessage	= MatchInvoiceErrorMessages.PurchaseOrderLineClosedMsg + "; line: " + each.PurchaseOrderLine

				if (PayablesInvoice.MatchReconQueueRel not exists)
					invoke CreateOnly MatchWork
						assign result to NewMatchWork
						invoked.Company						= Company
						invoked.PayablesInvoice				= PayablesInvoice
						invoked.ProcessMode					= "B"
						invoked.DocumentType				= "I"
						invoked.MatchPoint					= AutoMatchResult.PrmMatchPoint

					invoke CreateForBudgetProcessing MatchReconQueue
						invoked.Company				= Company
						invoked.PayablesInvoice		= PayablesInvoice
						invoked.MatchWork			= NewMatchWork.MatchWork
					
				if  (!AutoMatchError)
					invoke BatchMatch PayablesInvoice.MatchReconQueueRel.MatchWork
						resume on error
							AutoMatchError 			= true
							AutoMatchErrorMessage	= error message
							
						invoked.PrmCompany 					= Company
						invoked.PrmInvoice 					= PayablesInvoice
						invoked.PrmMatchWork 				= PayablesInvoice.MatchReconQueueRel.MatchWork
						invoked.PrmAutoMatchResult			= AutoMatchResult						



				if  (AutoMatchError)
					invoke UpdateFromMatch  
						invoked.ErrorMessage 				= AutoMatchErrorMessage
						invoked.UnmatchedAmount				= PayablesInvoice.InvoiceAmount.CurrencyAmount

					invoke Update PayablesInvoice.MatchReconQueueRel.MatchWork
						initialize invoked.LinkedAutoMatchResult

		AutoMatchVertex is an Instance Action
			restricted
			Entrance Rules

				MatchNotAttempted = false
				

				invoke FastUpdate PayablesInvoice
					invoked.BackgroundProcessing = 3 
			Action Rules
				initialize AutoMatchError
				
				if (!PayablesInvoice.CreditOrDebitMemo)
					if (PurchaseOrderRel.NumberOfLines = PurchaseOrderRel.NumberOfClosedLines)	
						AutoMatchError 			= true
						AutoMatchErrorMessage	= MatchInvoiceErrorMessages.NoOpenLinesOnPurchaseOrderMsg
					else
						for each PayablesInvoice.PayablesInvoiceDetailRel
							if  (each.PurchaseOrderLine.Closed.Yes)
								AutoMatchError 			= true
								AutoMatchErrorMessage	= MatchInvoiceErrorMessages.PurchaseOrderLineClosedMsg + "; line: " + each.PurchaseOrderLine

				if  (!AutoMatchError)
					if  (PayablesInvoice.DetailCountExceedsVertexOneCallSetting
					and  !PayablesInvoice.HasUnprocessedThirdPartyTaxDetails)
						invoke ProcessVertexSet PayablesInvoiceDetail
							invoked.PrmCompany 			= Company
							invoked.PrmPayablesInvoice 	= PayablesInvoice
							invoked.PrmMatchFrom 		= 1 
							invoked.PrmAutoMatchResult	= AutoMatchResult
					else 
						invoke ProcessVertexForMatch PayablesInvoiceDetail
							resume on error
								AutoMatchError 			= true
								AutoMatchErrorMessage	= error message
							invoked.PrmCompany 			= Company
							invoked.PrmPayablesInvoice 	= PayablesInvoice
							invoked.PrmAutoMatchResult	= AutoMatchResult

				if  (AutoMatchError)
					invoke UpdateFromMatch  
						invoked.ErrorMessage 				= AutoMatchErrorMessage
						invoked.UnmatchedAmount				= PayablesInvoice.InvoiceAmount.CurrencyAmount

					invoke Update PayablesInvoice.MatchReconQueueRel.MatchWork
						initialize invoked.LinkedAutoMatchResult

		AutoMatchOneSource is an Instance Action
			restricted
			Entrance Rules



				MatchNotAttempted = false
				

				invoke FastUpdate PayablesInvoice
					invoked.BackgroundProcessing = 3 
			Action Rules
				initialize AutoMatchError
				
				if (!PayablesInvoice.CreditOrDebitMemo)
					if (PurchaseOrderRel.NumberOfLines = PurchaseOrderRel.NumberOfClosedLines)	
						AutoMatchError 			= true
						AutoMatchErrorMessage	= MatchInvoiceErrorMessages.NoOpenLinesOnPurchaseOrderMsg
					else
						for each PayablesInvoice.PayablesInvoiceDetailRel
							if  (each.PurchaseOrderLine.Closed.Yes)
								AutoMatchError 			= true
								AutoMatchErrorMessage	= MatchInvoiceErrorMessages.PurchaseOrderLineClosedMsg + "; line: " + each.PurchaseOrderLine

				if  (!AutoMatchError)
					if  (PayablesInvoice.OneSourceMatchOneCallPerInvoice)
						initialize DistribCount
					    for each PayablesInvoice.PayablesInvoiceDistributionDistributionTypeDistributionsRel
							DistribCount += 1
							if (DistribCount > PayablesInvoice.NumberOfLinesForOneSourceMatchProcessByInvoice)
							    end for each
							else
							if (each.DistributionAccount.ToAccountingEntity != PayablesInvoice.Company.AccountingEntity)
							    DistribCount = PayablesInvoice.NumberOfLinesForOneSourceMatchProcessByInvoice + 1
							    end for each



					if (PayablesInvoice.CreditForRebill)

						invoke OneSourceCreditRebillMatch PayablesInvoiceDistribution
							resume on error
								AutoMatchError 			= true
								AutoMatchErrorMessage	= error message
							invoked.PrmCompany 				= Company
							invoked.PrmPayablesInvoice 		= PayablesInvoice
							invoked.PrmAutoMatchResult		= AutoMatchResult						
					else
					if  (PayablesInvoice.OneSourceMatchOneCallPerInvoice
					and  DistribCount < PayablesInvoice.NumberOfLinesForOneSourceMatchProcessByInvoice)

						invoke LoadOneSourceForMatch PayablesInvoiceDistribution
							resume on error
								AutoMatchError 			= true
								AutoMatchErrorMessage	= error message
							invoked.PrmCompany 				= Company
							invoked.PrmPayablesInvoice 		= PayablesInvoice
							invoked.PrmAutoMatchResult		= AutoMatchResult						
					else
					if (PayablesInvoice.TaxConfigurationRel.OneSourceVersionType.Generic)

						invoke ProcessOneSourceForMatch PayablesInvoiceDetail
							resume on error
								AutoMatchError 			= true
								AutoMatchErrorMessage	= error message
							invoked.PrmCompany = Company
							invoked.PrmPayablesInvoice = PayablesInvoice
							invoked.PrmAutoMatchResult		= AutoMatchResult
					else

						invoke ProcessOneSourceForMatch PayablesInvoiceDistribution
							resume on error
								AutoMatchError 			= true
								AutoMatchErrorMessage	= error message
							invoked.PrmCompany 				= Company
							invoked.PrmPayablesInvoice 		= PayablesInvoice
							invoked.PrmAutoMatchResult		= AutoMatchResult						



				if  (AutoMatchError)
					invoke UpdateFromMatch  
						invoked.ErrorMessage 				= AutoMatchErrorMessage
						invoked.UnmatchedAmount				= PayablesInvoice.InvoiceAmount.CurrencyAmount

					invoke Update PayablesInvoice.MatchReconQueueRel.MatchWork
						initialize invoked.LinkedAutoMatchResult

		UpdateTotalsAndMarkComplete is a Set Action
			run in foreground
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
				PrmAutoMatchResult				is a AutoMatchResult

			Sort Order
				Company
				AutoMatchResult
				PayablesInvoice

			Instance Selection
				where (PrmFinanceEnterpriseGroup	= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				and    PrmAutoMatchResult			= AutoMatchResult)

			Local Fields
				PerfectMatchCount					is Numeric 9
				PerfectMatchAmount					is an InternationalAmount
				MatchedInToleranceCount				is Numeric 9
				MatchedInToleranceAmount			is an InternationalAmount
				MatchedOutOfToleranceCount			is Numeric 9
				MatchedOutOfToleranceAmount			is an InternationalAmount
				MatchedWithChargebackCount			is Numeric 9
				MatchedWithChargebackAmount			is an InternationalAmount
				TotalChargebackAmount				is an InternationalAmount
				MatchedWithServiceContractCount		is Numeric 9
				MatchedWithServiceContractAmount	is an InternationalAmount
				UnmatchedCount						is Numeric 9
				UnmatchedAmount						is an InternationalAmount
				ErrorCount							is Numeric 9
				ErrorAmount							is an InternationalAmount


			Action Rules
				Set Rules
							
					Exit Rules
						invoke Update PrmAutoMatchResult
							invoked.PerfectMatchCount					= PerfectMatchCount
							invoked.PerfectMatchAmount					= PerfectMatchAmount
							invoked.MatchedInToleranceCount				= MatchedInToleranceCount
							invoked.MatchedInToleranceAmount			= MatchedInToleranceAmount
							invoked.MatchedOutOfToleranceCount			= MatchedOutOfToleranceCount
							invoked.MatchedOutOfToleranceAmount			= MatchedOutOfToleranceAmount
							invoked.MatchedWithChargebackCount			= MatchedWithChargebackCount
							invoked.MatchedWithChargebackAmount			= MatchedWithChargebackAmount
							invoked.TotalChargebackAmount				= TotalChargebackAmount
							invoked.MatchedWithServiceContractCount		= MatchedWithServiceContractCount
							invoked.MatchedWithServiceContractAmount	= MatchedWithServiceContractAmount
							invoked.UnmatchedCount						= UnmatchedCount
							invoked.UnmatchedAmount						= UnmatchedAmount
							invoked.ErrorCount							= ErrorCount
							invoked.ErrorAmount							= ErrorAmount
							invoked.ProcessingComplete					= true
							invoked.MarkedComplete 						= current timestamp

						if (!PrmAutoMatchResult.PrmSummarize.DoNotSummarize)
							invoke Summarize AutoMatchResultInvoice
								invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.PrmAutoMatchResult				= PrmAutoMatchResult

				Company Set Rules
					Exit Rules

						if (AutoMatchResult.PrmInterfaceRun not entered
						and !AutoMatchResult.ProcessingComplete)

							invoke CleanupMatchedInvoiceWorkFiles MatchWork
								invoked.PrmCompany	= Company

							
				Instance Rules

					if  (MatchErrorType.MissingData
					or   MatchErrorType.CostError)
						ErrorAmount 							+= InvoiceAmount
						ErrorCount  							+= 1
					else
					if  (Suffix = 111)
						TotalChargebackAmount 					+= InvoiceAmount * -1
					else					
					if  (PayablesInvoice.MatchStatus.Unmatched
					or   PayablesInvoice.MatchStatus.POCostMessagesExist)
						UnmatchedCount							+= 1
						UnmatchedAmount							+= InvoiceAmount
					else
					if  (PayablesInvoice.MatchStatus.Matched)
						if  (PayablesInvoice.MatchProcessType.ServiceContract)
							MatchedWithServiceContractCount		+= 1
							MatchedWithServiceContractAmount	+= InvoiceAmount
						else
							PerfectMatchCount					+= 1
							PerfectMatchAmount					+= InvoiceAmount
					else
					if  (PayablesInvoice.MatchStatus.MatchedOutOfTolerance)
						MatchedOutOfToleranceCount				+= 1
						MatchedOutOfToleranceAmount				+= InvoiceAmount
					else
					if  (PayablesInvoice.MatchStatus.MatchedInTolerance)
						MatchedInToleranceCount					+= 1
						MatchedInToleranceAmount				+= InvoiceAmount
					else
					if  (PayablesInvoice.MatchStatus.MatchedWithAutoChargeback)
						MatchedWithChargebackCount				+= 1
						MatchedWithChargebackAmount				+= InvoiceAmount
						TotalChargebackAmount					+= PayablesInvoice.NonCancelledChargebackRel.InvoiceAmount.CurrencyAmount

		Summarize is a Set Action
			default label is "SummarizeUnmatchedResults"
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
				PrmAutoMatchResult				is a AutoMatchResult

			Sort Order
				Company
				AutoMatchResult
				PayablesInvoice

			Instance Selection
				where (PrmFinanceEnterpriseGroup	= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				and    PrmAutoMatchResult			= AutoMatchResult
				and    ErrorMessage entered)

			Local Fields

			Action Rules
				Set Rules
					Entrance Rules
						if (AutoMatchResult.AutoMatchResultSummaryRel exists)
							invoke Delete AutoMatchResult.AutoMatchResultSummaryRel
					Exit Rules
						invoke Update PrmAutoMatchResult
							invoked.SummaryComplete					= true

				Instance Rules

					LocalFinanceEnterpriseGroup = AutoMatchResult.FinanceEnterpriseGroup
					LocalVendorGroup			= PayablesInvoice.VendorGroup
					Year						= DueDate year
					Month						= DueDate month

					MatchInvoiceErrorMessages.ErrorMessage = ErrorMessage
					LocalErrorNumber = MatchInvoiceErrorMessages.DerivedErrorNumber
					if (LocalErrorNumber not entered)
						LocalErrorNumber = 999
							
					ErrorNumber = LocalErrorNumber





					if  (ErrorMessage entered)
						if (VendorSummaryRel exists)

							invoke FastUpdate VendorSummaryRel
								invoked.TotalAmount		+= InvoiceAmount
								invoked.TotalCount		+= 1
						else

							invoke Create AutoMatchResultSummary
								invoked.FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
								invoked.AutoMatchResult			= AutoMatchResult
								invoked.SummaryType				= 1 
								invoked.Vendor					= Vendor
								invoked.VendorGroup				= PayablesInvoice.VendorGroup
								invoked.Year					= Year
								invoked.Month					= Month
								invoked.TotalAmount				+= InvoiceAmount
								invoked.TotalCount				+= 1

						if (VendorSummaryTotalRel exists)

							invoke FastUpdate VendorSummaryTotalRel
								invoked.TotalAmount		+= InvoiceAmount
								invoked.TotalCount		+= 1
						else

							invoke Create AutoMatchResultSummary
								invoked.FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
								invoked.AutoMatchResult			= AutoMatchResult
								invoked.SummaryType				= 1 
								invoked.Vendor					= Vendor
								invoked.VendorGroup				= PayablesInvoice.VendorGroup
								invoked.TotalAmount				+= InvoiceAmount
								invoked.TotalCount				+= 1

						if (BuyerSummaryRel exists)

							invoke FastUpdate BuyerSummaryRel
								invoked.TotalAmount		+= InvoiceAmount
								invoked.TotalCount		+= 1
						else

							invoke Create AutoMatchResultSummary
								invoked.FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
								invoked.AutoMatchResult			= AutoMatchResult
								invoked.SummaryType				= 2 
								invoked.Buyer					= Buyer
								invoked.Year					= Year
								invoked.Month					= Month
								invoked.TotalAmount				+= InvoiceAmount
								invoked.TotalCount				+= 1

						if (BuyerSummaryTotalRel exists)

							invoke FastUpdate BuyerSummaryTotalRel
								invoked.TotalAmount		+= InvoiceAmount
								invoked.TotalCount		+= 1
						else

							invoke Create AutoMatchResultSummary
								invoked.FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
								invoked.AutoMatchResult			= AutoMatchResult
								invoked.SummaryType				= 2 
								invoked.Buyer					= Buyer
								invoked.TotalAmount				+= InvoiceAmount
								invoked.TotalCount				+= 1
							
						if (ErrorNumberSummaryRel exists)

							invoke FastUpdate ErrorNumberSummaryRel
								invoked.TotalAmount		+= InvoiceAmount
								invoked.TotalCount		+= 1
						else

							invoke Create AutoMatchResultSummary
								invoked.FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
								invoked.AutoMatchResult			= AutoMatchResult
								invoked.SummaryType				= 3 
								invoked.ErrorNumber				= LocalErrorNumber
								invoked.Year					= Year
								invoked.Month					= Month
								invoked.TotalAmount				+= InvoiceAmount
								invoked.TotalCount				+= 1
					
						if (ErrorNumberSummaryTotalRel exists)

							invoke FastUpdate ErrorNumberSummaryTotalRel
								invoked.TotalAmount		+= InvoiceAmount
								invoked.TotalCount		+= 1
						else

							invoke Create AutoMatchResultSummary
								invoked.FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
								invoked.AutoMatchResult			= AutoMatchResult
								invoked.SummaryType				= 3 
								invoked.ErrorNumber				= LocalErrorNumber
								invoked.TotalAmount				+= InvoiceAmount
								invoked.TotalCount				+= 1
					
					
