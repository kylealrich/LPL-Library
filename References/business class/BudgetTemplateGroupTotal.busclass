BudgetTemplateGroupTotal is a BusinessClass
	owned by GeneralLedger
	prefix is BDTGT   
   
    Ontology
    	symbolic key is BudgetTemplateGroupTotal

    Patterns
    	implements DynamicCreation
 		disable Auditing 
 		disable EffectiveDated
 		disable AsOfDateProcessing

    Persistent Fields
        Amount                  			is a TotalAmount
        HasError							is Boolean
			default label is "ErrorExists"        

		RecoveryCount						is Decimal 6
		BudgetEditBatch
		OriginatingDocument					is BusinessObjectReference
		
    Transient Fields
		TransientOriginatingSystemCode		is AlphaUpper 2
			default label is "SystemCode"
			derive value from DerivedOriginatingSystemCode
	Local Fields
		LocalBudgetEditGroup				is UniqueID
		LocalGeneralLedgerCalendarPeriod	is a GeneralLedgerCalendarPeriod
		LocalBudgetGroup					is a BudgetGroup
		BudgetGroupTotal
		BudgetGroupAmount
		BudgetGroupCheck
		PreviousAmount						is a TotalAmount
		DocumentRef							is BusinessObjectReference
		LocalFEG							is like FinanceEnterpriseGroup
		SC									is like Scenario
		BT									is like BudgetTemplate

	Derived Fields
		EditTotalsRouteMessage is a DerivedField
			type is Alpha 150
			restricted
			if (first ProcessingTemplatesRel exists)
				return "EditHasBeenRoutedToBudgetBatchEdit._ThisWillRunAfterBudgetTemplatesFinishedProcessing"
			else
				return "EditHasBeenSubmitted"
		ErrorExistsMessage	is a MessageField
			"ErrorExists"
		DerivedOriginatingSystemCode is a DerivedField
			type is AlphaUpper size 2
			restricted
			if (OriginatingDocument.BusinessClassName = "PayablesInvoice"
			or	OriginatingDocument.BusinessClassName = "ExpenseManagementTravelPlan")
				return "AP"
			if (OriginatingDocument.BusinessClassName = "PurchaseOrder"
			or  OriginatingDocument.BusinessClassName = "Contract")
				return "PO"
			if (OriginatingDocument.BusinessClassName = "Requisition")
				return "RQ"
			if (OriginatingDocument.BusinessClassName = "AllocationRun")
				return "CA"
			if (OriginatingDocument.BusinessClassName = "CashLedgerTransaction"
			or	OriginatingDocument.BusinessClassName = "CashLedgerReconciliationAdjustment"
			or	OriginatingDocument.BusinessClassName = "CashLedgerCashReceiptHeader"
			or	OriginatingDocument.BusinessClassName = "CashLedgerElectronicFundsTransferTransaction"
			or	OriginatingDocument.BusinessClassName = "CashLedgerReturnedPayment"
			or	OriginatingDocument.BusinessClassName = "CashLedgerPayment"
			or	OriginatingDocument.BusinessClassName = "CashLedgerFundTransferHeader"
			or 	OriginatingDocument.BusinessClassName = "NonCashLedgerTransaction"
			or	OriginatingDocument.BusinessClassName = "BankStatementLine"
			or	OriginatingDocument.BusinessClassName = "WireTransferBatchDetail")
				return "CB"
			if (OriginatingDocument.BusinessClassName = "GeneralLedgerJournalControl"
			or  OriginatingDocument.BusinessClassName = "GLTransactionInterfaceResult"
			or  OriginatingDocument.BusinessClassName = "BudgetChangeOrder")
				return "GL"
			if (OriginatingDocument.BusinessClassName = "RecurringJournalControl")
				return "RJ"
			return blank
		DerivedDocumentNumber is a DerivedField
			type is AlphaUpper size 42
			default label is "SourceDocumentNumber"
#ifdef module ap			
			if (OriginatingDocument.BusinessClassName = "PayablesInvoice") 
				return OriginatingDocument(PayablesInvoice).PayablesInvoice 
			if (OriginatingDocument.BusinessClassName = "ExpenseManagementTravelPlan") 
				return OriginatingDocument(ExpenseManagementTravelPlan).ExpenseManagementTravelPlan 
#endif
#ifdef module po
			if (OriginatingDocument.BusinessClassName = "PurchaseOrder") 
				return OriginatingDocument(PurchaseOrder).PurchaseOrder 
			if (OriginatingDocument.BusinessClassName = "Contract") 
				return OriginatingDocument(Contract).Contract 
#endif			
#ifdef module rq
			if (OriginatingDocument.BusinessClassName = "Requisition") 
				return OriginatingDocument(Requisition).Requisition 
#endif			
#ifdef module Allocations
			if (OriginatingDocument.BusinessClassName = "AllocationRun") 
				return OriginatingDocument(AllocationRun).AllocationRun
#endif
#ifdef module cb
			if (OriginatingDocument.BusinessClassName = "CashLedgerTransaction") 
				return OriginatingDocument(CashLedgerTransaction).TransactionNumber
			if (OriginatingDocument.BusinessClassName = "CashLedgerReconciliationAdjustment") 
				return OriginatingDocument(CashLedgerReconciliationAdjustment).TransactionNumber
			if (OriginatingDocument.BusinessClassName = "CashLedgerCashReceiptHeader") 
				return OriginatingDocument(CashLedgerCashReceiptHeader).CashLedgerCashReceiptHeader.TransactionNumber
			if (OriginatingDocument.BusinessClassName = "CashLedgerElectronicFundsTransferTransaction") 
				return OriginatingDocument(CashLedgerElectronicFundsTransferTransaction).Reference
			if (OriginatingDocument.BusinessClassName = "CashLedgerReturnedPayment") 
				return OriginatingDocument(CashLedgerReturnedPayment).TransactionNumber
			if (OriginatingDocument.BusinessClassName = "CashLedgerPayment") 
				return OriginatingDocument(CashLedgerPayment).Reference
			if (OriginatingDocument.BusinessClassName = "CashLedgerFundTransferHeader") 
				return OriginatingDocument(CashLedgerFundTransferHeader).CashLedgerFundTransferHeader
			if (OriginatingDocument.BusinessClassName = "WireTransferBatchDetail") 
				return DerivedWireTransferBatchDetail
#endif
#ifdef module cashmgmt
			if (OriginatingDocument.BusinessClassName = "NonCashLedgerTransaction")
				return OriginatingDocument(NonCashLedgerTransaction).TransactionNumber
			if (OriginatingDocument.BusinessClassName = "BankStatementLine")
				return DerivedBankStatement
#endif
			if (OriginatingDocument.BusinessClassName = "GeneralLedgerJournalControl") 
				return OriginatingDocument(GeneralLedgerJournalControl).GeneralLedgerJournalControl
			if (OriginatingDocument.BusinessClassName = "GLTransactionInterfaceResult") 
				return OriginatingDocument(GLTransactionInterfaceResult).GLTransactionInterfaceResult
			if (OriginatingDocument.BusinessClassName = "BudgetChangeOrder") 
				return OriginatingDocument(BudgetChangeOrder).BudgetChangeOrder

			if (OriginatingDocument.BusinessClassName = "RecurringJournalControl") 
				return OriginatingDocument(RecurringJournalControl).RecurringJournalControl 
			return blank
#ifdef module cashmgmt

		DerivedBankStatement 	is a DerivedField
			type is Alpha 26
			restricted
			if (!OriginatingDocument(BankStatementLine).BankStatementLine.SequenceNumber entered)
				return OriginatingDocument(BankStatementLine).BankStatement + "-" + OriginatingDocument(BankStatementLine).BankStatementLine.LineNumber
			else
				return OriginatingDocument(BankStatementLine).BankStatement + "-" + OriginatingDocument(BankStatementLine).BankStatementLine.LineNumber + "-" + OriginatingDocument(BankStatementLine).BankStatementLine.SequenceNumber
#endif

#ifdef module cb					
		DerivedWireTransferBatchDetail	is a DerivedField
			type is Alpha 25
			restricted
			return OriginatingDocument(WireTransferBatchDetail).WireTransferBatch + "-" + OriginatingDocument(WireTransferBatchDetail).WireTransferBatchDetail
#endif	
	Conditions
		BypassBudgetEditWithEmptyUnreleasedTemplateObligation
			restricted
			when (config.BypassBudgetEditWithEmptyUnreleasedTemplateObligation not = false)

		SecurityGroupAllowsAccess
            when (BudgetTemplateGroupTotal.BudgetGroup.AccountingEntity not entered
            or   (BudgetTemplateGroupTotal.BudgetGroup.AccountingEntity entered 
            and   BudgetTemplateGroupTotal.BudgetGroup.AccountingEntity.AccountingEntitySecurityGroupAllowsAccess))

		BudgetEditErrorOnTransactionRelease
			restricted
			when (BudgetEditErrorByBudgetGroupRel exists)
		
		BudgetEditErrorOnTransactionCreateOrUpdate
			restricted
			when (BudgetEditErrorByHeaderIDRel exists)

	Relations
		GroupTotalsRel
			one-to-many relation to BudgetTemplateGroupTotal
			Field Mapping uses ByBudgetGroup
				related.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
				related.BudgetTemplateGroupTotal.BudgetEditGroup	= LocalBudgetEditGroup
		GroupTotalsForFEGRel
			one-to-many relation to BudgetTemplateGroupTotal
			Field Mapping uses ByBudgetGroup
				related.FinanceEnterpriseGroup						= LocalFEG
				related.BudgetTemplateGroupTotal.BudgetEditGroup	= LocalBudgetEditGroup
		BudgetEditErrorRel
			one-to-many relation to BudgetEditError
			Field Mapping uses ByBudgetGroup
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.BudgetEditError.BudgetEditGroup		= LocalBudgetEditGroup

		OtherBudgetEditBatchRel
			one-to-many relation to BudgetEditBatch
			Field Mapping uses ByDocumentID
				related.DocumentID		= LocalBudgetEditGroup
				related.CompletionTime	= blank








				
		ProcessingTemplatesRel	
			one-to-many relation to BudgetTemplate 
			Field Mapping uses ByStatus
				related.FinanceEnterpriseGroup		= LocalFEG
			Instance Selection
				where (related.Status	!= 2 
				and related.Status 		!= 0 
				and related.Status 		!= 3) 

		RebuildTemplatesRel
			one-to-many relation to BudgetTemplate
			Field Mapping uses ByStatus
			Instance Selection
				where (related.Status						!= BudgetTemplate.Status.Clearing)
						
		RebuildTotalsRel
			one-to-one relation to BudgetRebuildBTGT
			Field Mapping uses symbolic key
				related.BudgetRebuildBTGT.DocumentID	= LocalBudgetEditGroup
			
		AvailableTemplatesRel	
			one-to-many relation to BudgetTemplate 
			Field Mapping uses ByStatus
				related.FinanceEnterpriseGroup		= LocalFEG
			Instance Selection
				where (related.Status  				!= 3) 
							
		LazyDocumentRel
			one-to-one relation to BudgetLazyDocument
			Field Mapping uses symbolic key
				related.BudgetLazyDocument.DocumentID	= LocalBudgetEditGroup
		
		BudgetEditErrorByBudgetGroupRel
			one-to-many relation to BudgetEditError
			Field Mapping uses ByBudgetGroup
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.BudgetEditError.BudgetEditGroup	= BudgetTemplateGroupTotal.BudgetEditGroup
			Instance Selection
				where  (related.Scenario				= BudgetTemplateGroupTotal.Scenario
				and		related.BudgetTemplate			= BudgetTemplateGroupTotal.BudgetTemplate
				and		related.BudgetGroup				= BudgetTemplateGroupTotal.BudgetGroup
				and     related.BudgetTemplatePeriod    = BudgetTemplateGroupTotal.GeneralLedgerCalendarPeriod)
		BudgetEditErrorByHeaderIDRel
			one-to-many relation to BudgetEditError
			Field Mapping uses ByHeaderUniqueID
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.HeaderUniqueID					= BudgetTemplateGroupTotal.BudgetEditGroup
			Instance Selection
				where  (related.Scenario				= BudgetTemplateGroupTotal.Scenario
				and		related.BudgetTemplate			= BudgetTemplateGroupTotal.BudgetTemplate
				and		related.BudgetGroup				= BudgetTemplateGroupTotal.BudgetGroup
				and     related.BudgetTemplatePeriod    = BudgetTemplateGroupTotal.GeneralLedgerCalendarPeriod)
		GLCommitDocumentUniqueIDRel
    		one-to-one relation to GLCommitDocument
    		Field Mapping uses ByHeaderUniqueID
    			related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
    			related.HeaderUniqueID		   = BudgetTemplateGroupTotal.BudgetEditGroup
		GeneralLedgerJournalControlUniqueIDRel
			one-to-one relation to GeneralLedgerJournalControl
			Field Mapping uses unique id key
				related.UniqueID	= BudgetTemplateGroupTotal.BudgetEditGroup
		BudgetChangeOrderUniqueIDRel
			one-to-one relation to BudgetChangeOrder
			Field Mapping uses unique id key
			 	related.UniqueID 	= BudgetTemplateGroupTotal.BudgetEditGroup
		GLInterfaceBudgetGroupUniqueIDRel
			one-to-one relation to GLInterfaceBudgetGroup
			Field Mapping uses unique id key
				related.UniqueID 	= BudgetTemplateGroupTotal.BudgetEditGroup	
#ifdef module Allocations
		AllocationRunUniqueIDRel
			one-to-one relation to AllocationRun
			Field Mapping uses unique id key
				related.UniqueID 	= BudgetTemplateGroupTotal.BudgetEditGroup
#endif
		BudgetEditConfigurationRel
			one-to-one relation to BudgetEditConfiguration
			Field Mapping uses symbolic key
				related.BudgetEditConfiguration = FinanceEnterpriseGroup
		
	Sets
		ByBudgetGroup
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				BudgetTemplateGroupTotal.BudgetEditGroup
		ByTemplateBudgetGroup
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				BudgetTemplateGroupTotal.BudgetGroup
		ByYearAndPeriod
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				BudgetTemplateGroupTotal.BudgetEditGroup
				BudgetTemplateGroupTotal.BudgetGroup
				BudgetTemplateGroupTotal.GeneralLedgerCalendarYear
				BudgetTemplateGroupTotal.GeneralLedgerCalendarPeriod

	Field Rules
					
	Rule Blocks
		RouteEdits

			LocalBudgetEditGroup	= PrmBudgetEditGroup
			LocalFEG				= PrmFinanceEnterpriseGroup









			

			if (RebuildTotalsRel.BudgetRebuildBTGT.DocumentID entered)
				invoke Update RebuildTotalsRel.BudgetRebuildBTGT
					invoked.BudgetRebuildBTGT.DocumentID				= PrmBudgetEditGroup
					invoked.BusinessClassName							= PrmBusinessClassName
					invoked.FinanceEnterpriseGroup						= PrmFinanceEnterpriseGroup					
					invoked.IsBatch										= PrmIsBatch
					invoked.Timestamp									= current timestamp
					invoked.BudgetEditTotalsProcessing					= PrmTotalsProcessing
					invoked.ActionCode									= PrmActionCode
					invoked.BudgetEditMode								= PrmMode
					invoked.BudgetEditCallBack							= PrmBudgetEditCallBack
				if (first ProcessingTemplatesRel.BudgetTemplate not entered)
					constraint (AvailableTemplatesRel exists)
						"NoAvailableTemplateForBusinessClass<PrmBusinessClassName>WithUniqueID<PrmBudgetEditGroup>"
					invoke ReleaseCallback first AvailableTemplatesRel.BudgetTemplate in background
						invoked.PrmBusinessClassName			= PrmBusinessClassName
						invoked.PrmBusinessObjectKey			= PrmBudgetEditGroup
						invoked.PrmIsBatch						= false 
						invoked.PrmActionCode					= PrmActionCode
						invoked.PrmBudgetEditMode				= PrmMode
						invoked.PrmBudgetEditTotalsProcessing	= PrmTotalsProcessing										
						invoked.PrmBudgetEditCallBack			= PrmBudgetEditCallBack	
			else 
			if (BypassBudgetEditWithEmptyUnreleasedTemplateObligation and IsEmpty)
				if (PrmBudgetEditCallBack entered)
					Result		= PrmBudgetEditCallBack.Success
					UniqueID	= PrmBudgetEditGroup
					Result		= PrmBudgetEditCallBack.InitiateFlow
			else
			if (LazyDocumentRel exists
			and not PrmIsBatch)
				invoke Release LazyDocumentRel.BudgetLazyDocument 
					invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
					invoked.PrmBusinessClassName			= PrmBusinessClassName
					invoked.PrmBudgetEditGroup				= PrmBudgetEditGroup
					invoked.PrmIsBatch						= PrmIsBatch	
					invoked.PrmActionCode					= PrmActionCode
					invoked.PrmMode							= PrmMode
					invoked.PrmTotalsProcessing				= PrmTotalsProcessing										
					invoked.PrmBudgetEditCallBack			= PrmBudgetEditCallBack
					invoked.PrmEditContext					= PrmEditContext
			else
			if (BudgetEditConfigurationRel.BatchBudgetEdit)
				if (OtherBudgetEditBatchRel not exists)
					invoke EditTotalsBatch
						invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
						invoked.PrmBudgetEditGroup			= PrmBudgetEditGroup
						invoked.PrmMode						= PrmMode
						invoked.PrmTotalsProcessing			= PrmTotalsProcessing
						invoked.PrmBudgetEditCallBack		= PrmBudgetEditCallBack
						invoked.PrmActionCode				= PrmActionCode
						invoked.PrmBusinessClassName		= PrmBusinessClassName
						invoked.PrmEditContext				= PrmEditContext
				
				if (ProcessingTemplatesRel not exists)	
					if (not PrmIsBatch)
						invoke InitiateBudgetEdit BudgetEditConfigurationRel
			else
			if (OtherBudgetEditBatchRel exists) 

				invoke ProcessBatchEdits BudgetEditBatch
					invoked.FEG							= PrmFinanceEnterpriseGroup
			else
			if (instance count of GroupTotalsForFEGRel > 50)
				invoke EditTotalsBatch
					invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
					invoked.PrmBudgetEditGroup			= PrmBudgetEditGroup
					invoked.PrmMode						= PrmMode
					invoked.PrmTotalsProcessing			= PrmTotalsProcessing
					invoked.PrmBudgetEditCallBack		= PrmBudgetEditCallBack
					invoked.PrmActionCode				= PrmActionCode
					invoked.PrmBusinessClassName		= PrmBusinessClassName
					invoked.PrmEditContext				= PrmEditContext
				invoke ProcessBatchEdits BudgetEditBatch
					invoked.FEG							= PrmFinanceEnterpriseGroup
			else
			if (first ProcessingTemplatesRel.BudgetTemplate entered)


				invoke EditTotalsBatch
					invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
					invoked.PrmBudgetEditGroup			= PrmBudgetEditGroup
					invoked.PrmMode						= PrmMode
					invoked.PrmTotalsProcessing			= PrmTotalsProcessing
					invoked.PrmBudgetEditCallBack		= PrmBudgetEditCallBack
					invoked.PrmActionCode				= PrmActionCode
					invoked.PrmBusinessClassName		= PrmBusinessClassName
					invoked.PrmEditContext				= PrmEditContext
			else
			if (PrmIsBatch)
				invoke EditTotalsBatch
					invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
					invoked.PrmBudgetEditGroup			= PrmBudgetEditGroup
					invoked.PrmMode						= PrmMode
					invoked.PrmTotalsProcessing			= PrmTotalsProcessing
					invoked.PrmBudgetEditCallBack		= PrmBudgetEditCallBack
					invoked.PrmActionCode				= PrmActionCode
					invoked.PrmBusinessClassName		= PrmBusinessClassName
					invoked.PrmEditContext				= PrmEditContext
			else
				invoke EditTotals
					invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
					invoked.PrmBudgetEditGroup			= PrmBudgetEditGroup
					invoked.PrmMode						= PrmMode
					invoked.PrmTotalsProcessing			= PrmTotalsProcessing
					invoked.PrmBudgetEditCallBack		= PrmBudgetEditCallBack
					invoked.PrmActionCode				= PrmActionCode
					invoked.PrmBusinessClassName		= PrmBusinessClassName
					invoked.PrmEditContext				= PrmEditContext
					invoked.PrmCurrencyTable			= PrmCurrencyTable
					
		ChangeOrderCheckGroupTotalBudget
			LocalBudgetEditGroup = PrmBudgetEditGroup
			invoke Purge BudgetEditErrorRel
			for each GroupTotalsRel
				if (each.HasError)
					invoke SetErrorFalse each.BudgetTemplateGroupTotal
				invoke CheckGroupTotalBudget each.BudgetTemplate
					invoked.PrmGroupTotal	= each.BudgetTemplateGroupTotal
					invoked.PrmCounter		= ErrorCount
				if (each.HasError)
					increment ErrorCount
					if (ErrorCount = 50)
						end for each
    Actions
	
    	Create is a Create Action
    		restricted

		Update is an Update Action
			restricted

		Delete is a Delete Action
			restricted

		Purge is a Purge Action
			restricted
			bypass relational integrity rules

		PurgeGroupTotalsForEditGroup is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmBudgetEditGroup			is UniqueID
					default label is "BudgetEditGroup"
			Parameter Rules
				PrmFinanceEnterpriseGroup	
					required
				PrmBudgetEditGroup			
					required			
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and BudgetTemplateGroupTotal.BudgetTemplateGroupTotal.BudgetEditGroup = PrmBudgetEditGroup)
			Action Rules
				Instance Rules
					invoke Purge BudgetTemplateGroupTotal

		PurgeGroupTotalsForTemplate is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmScenario					is a Scenario
					default label is "Scenario"
				PrmBudgetTemplate			is a BudgetTemplate
					default label is "BudgetTemplate"
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and Scenario = PrmScenario
				and BudgetTemplate = PrmBudgetTemplate)
			Action Rules
				Instance Rules
					invoke Purge BudgetTemplateGroupTotal

		EditTotalsRoute is a Set Action
			restricted
			run in foreground
			completion message is "<EditTotalsRouteMessage>"			
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmBudgetEditGroup			is UniqueID
					default label is "BudgetEditGroup"
				PrmMode						is a BudgetEditMode
					default label is "Mode"
				PrmIsBatch					is Boolean
					default label is "IsBatch"
				PrmTotalsProcessing			is a BudgetEditTotalsProcessing
					default label is "TotalsProcessing"
				PrmBudgetEditCallBack		is a BudgetEditCallBack
					default label is "CallBack"
				PrmActionCode				is an ActionCode
					default label is "ActionCode"
				PrmBusinessClassName		is Alpha 100
					default label is "BusinessClass"
				PrmEditContext				is Alpha 256
					default label is "EditContext"
				PrmCurrencyTable			is a CurrencyTable
					default label is "CurrencyTable"
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmBudgetEditGroup
					required
				PrmMode
					default to BudgetEditMode.Hard
				PrmTotalsProcessing
					default to BudgetEditTotalsProcessing.Purge
				PrmBudgetEditCallBack
					if (!PrmMode.UpdateOnly)
						required
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and BudgetTemplateGroupTotal.BudgetTemplateGroupTotal.BudgetEditGroup = PrmBudgetEditGroup)
			Sort Order
				FinanceEnterpriseGroup
				BudgetTemplateGroupTotal.BudgetEditGroup

			Local Fields
				IsEmpty		is Boolean
				Result		is Boolean
			Action Rules
				Empty Set Rules


					IsEmpty	= true
					include RouteEdits
				Set Rules
					Entrance Rules


						include RouteEdits

		EditTotals is a Set Action
			restricted

			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmBudgetEditGroup			is UniqueID
					default label is "BudgetEditGroup"
				PrmMode						is a BudgetEditMode
					default label is "Mode"
				PrmTotalsProcessing			is a BudgetEditTotalsProcessing
					default label is "TotalsProcessing"
				PrmBudgetEditCallBack		is a BudgetEditCallBack
					default label is "CallBack"
				PrmActionCode				is an ActionCode
					default label is "ActionCode"
				PrmBusinessClassName		is Alpha 100
					default label is "BusinessClass"
				PrmEditContext				is Alpha 100
					default label is "EditContext"
				PrmCurrencyTable			is a CurrencyTable
					default label is "CurrencyTable"
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmBudgetEditGroup
					required
				PrmMode
					default to BudgetEditMode.Hard
				PrmTotalsProcessing
					default to BudgetEditTotalsProcessing.Purge
				PrmBudgetEditCallBack
					if (!PrmMode.UpdateOnly)
						required
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and BudgetTemplateGroupTotal.BudgetTemplateGroupTotal.BudgetEditGroup = PrmBudgetEditGroup)
			Sort Order
				FinanceEnterpriseGroup
				BudgetTemplateGroupTotal.BudgetEditGroup
			Local Fields
				ErrorCount	is Numeric 4
				Result		is Boolean
				EvaluatingFlow
				UniqueID
				ActionCode	
				RebuildTotals	is Boolean
			Action Rules
				Empty Set Rules
					LocalBudgetEditGroup	= PrmBudgetEditGroup

					if (RebuildTotalsRel.BudgetRebuildBTGT.DocumentID not entered)						
						ActionCode	= PrmActionCode
						if (PrmBudgetEditCallBack entered)

							Result	= PrmBudgetEditCallBack.Success

							UniqueID			= PrmBudgetEditGroup
							Result				= PrmBudgetEditCallBack.InitiateFlow


					else

						invoke ReleaseCallback first RebuildTemplatesRel.BudgetTemplate
							invoked.PrmBusinessClassName			= PrmBusinessClassName
							invoked.PrmBusinessObjectKey			= LocalBudgetEditGroup
							invoked.PrmIsBatch						= false	
							invoked.PrmBudgetEditMode				= PrmMode
							invoked.PrmBudgetEditTotalsProcessing	= PrmTotalsProcessing										
													
				Set Rules
					Entrance Rules

						LocalBudgetEditGroup	= PrmBudgetEditGroup

						if (RebuildTotalsRel.BudgetRebuildBTGT.DocumentID entered)

							RebuildTotals	= true
						if (!RebuildTotals)						
							ActionCode			 = PrmActionCode
							LocalBudgetEditGroup = PrmBudgetEditGroup
							invoke Purge BudgetEditErrorRel


							for each GroupTotalsRel
								LocalBudgetGroup	= each.BudgetTemplateGroupTotal.BudgetGroup
								LocalFEG			= each.BudgetTemplateGroupTotal.FinanceEnterpriseGroup
								SC					= each.BudgetTemplateGroupTotal.Scenario
								BT					= each.BudgetTemplateGroupTotal.BudgetTemplate
								if (each.HasError)
									invoke SetErrorFalse each.BudgetTemplateGroupTotal
								invoke CheckGroupTotal each.BudgetTemplate
									invoked.PrmGroupTotal	= each.BudgetTemplateGroupTotal
									invoked.PrmCounter		= ErrorCount
								if (each.HasError)
									increment ErrorCount
									if (ErrorCount = 50)
										end for each

						else
							invoke ReleaseCallback first RebuildTemplatesRel.BudgetTemplate in background
								invoked.PrmBusinessClassName			= PrmBusinessClassName
								invoked.PrmBusinessObjectKey			= LocalBudgetEditGroup						
								invoked.PrmIsBatch						= false	
								invoked.PrmBudgetEditMode				= PrmMode
								invoked.PrmBudgetEditTotalsProcessing	= PrmTotalsProcessing										
					Exit Rules

						if (!RebuildTotals)						
							ActionCode	= PrmActionCode
							if (ErrorCount = 0
							or PrmMode.Soft
							or PrmMode.Test
							or PrmMode.UpdateOnly) 
								if (PrmBudgetEditCallBack entered)
									display "BudgetTemplateGroupTotalCallingSuccess"
									Result	= PrmBudgetEditCallBack.Success								



							else 
								if (PrmBudgetEditCallBack entered)

									Result	= PrmBudgetEditCallBack.Failure


							if (PrmBudgetEditCallBack entered)

								UniqueID			= PrmBudgetEditGroup
								Result	= PrmBudgetEditCallBack.InitiateFlow
						else

							invoke ReleaseCallback first RebuildTemplatesRel.BudgetTemplate
								invoked.PrmBusinessClassName			= PrmBusinessClassName
								invoked.PrmBusinessObjectKey			= LocalBudgetEditGroup						
								invoked.PrmIsBatch						= false	
								invoked.PrmBudgetEditMode				= PrmMode
								invoked.PrmBudgetEditTotalsProcessing	= PrmTotalsProcessing										

				Instance Rules

					if (!RebuildTotals)
						if ((ErrorCount = 0
							and !PrmMode.Test)
						or PrmMode.Soft
						or PrmMode.UpdateOnly)	
							LocalBudgetGroup					= BudgetTemplateGroupTotal.BudgetGroup
							LocalGeneralLedgerCalendarPeriod	= BudgetTemplateGroupTotal.GeneralLedgerCalendarPeriod


							PreviousAmount					= BudgetGroupTotal.Amount


							invoke Update BudgetGroupTotal
								invoked.BusinessClassName	= PrmBusinessClassName
								invoked.EditContext			= PrmEditContext
								invoked.IncrementAmount		= Amount
								invoked.Amount				+= Amount
								invoked.IsSetAmounts		= true
	        					invoked.PreviousAmount		= PreviousAmount
							if (BudgetTemplate.CheckGroups)
								increment BudgetGroupCheck.Count
							if (PrmTotalsProcessing.Purge)

								invoke Purge BudgetTemplateGroupTotal
							else
							if (PrmTotalsProcessing.Reverse)
								Amount	= -1.0 * Amount
								if (PrmBusinessClassName = "PayablesInvoice"
								and PrmEditContext 		 = "Cancel")
								    invoke Purge

		EditTotalsBudget is a Set Action
			restricted

			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmBudgetEditGroup			is UniqueID
					default label is "BudgetEditGroup"
				PrmScenario					is a Scenario
					default label is "Scenario"
				PrmBudgetChangeOrder		is a BudgetChangeOrder
					default label is "BudgetChangeOrder"
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmBudgetEditGroup
					required
				PrmBudgetChangeOrder
					required
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and BudgetTemplateGroupTotal.BudgetTemplateGroupTotal.BudgetEditGroup = PrmBudgetEditGroup)
			Sort Order
				FinanceEnterpriseGroup
				BudgetTemplateGroupTotal.BudgetEditGroup
			Local Fields
				ErrorCount	is Numeric 4
				Result		is Boolean
				EvaluatingFlow
				UniqueID
				ActionCode	
			Action Rules
				Empty Set Rules

					invoke EditInProgress.Success PrmBudgetChangeOrder
				Set Rules
					Entrance Rules

						include ChangeOrderCheckGroupTotalBudget
					Exit Rules

						if (ErrorCount = 0)

							invoke EditInProgress.Success PrmBudgetChangeOrder
						else

							invoke EditInProgress.Failure PrmBudgetChangeOrder
				Instance Rules

					if (ErrorCount = 0)
						LocalBudgetGroup					= BudgetTemplateGroupTotal.BudgetGroup
						LocalGeneralLedgerCalendarPeriod	= BudgetTemplateGroupTotal.GeneralLedgerCalendarPeriod
						if (Amount entered)
							if (BudgetGroupAmount not exists)

								invoke CopyBudgetAmounts LocalBudgetGroup

							increment BudgetGroupAmount.Amount by Amount
							if (BudgetTemplate.CheckGroups)
								increment BudgetGroupCheck.Count
						invoke Purge BudgetTemplateGroupTotal

		EditTotalsBudgetForApproval is a Set Action
			restricted
			default label is untranslatable
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmBudgetEditGroup			is UniqueID
					default label is "BudgetEditGroup"
				PrmScenario					is a Scenario
					default label is "Scenario"
				PrmBudgetChangeOrder		is a BudgetChangeOrder
					default label is "BudgetChangeOrder"
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmBudgetEditGroup
					required
				PrmBudgetChangeOrder
					required
			Instance Selection
				where (FinanceEnterpriseGroup											 = PrmFinanceEnterpriseGroup
				and    BudgetTemplateGroupTotal.BudgetTemplateGroupTotal.BudgetEditGroup = PrmBudgetEditGroup)
			Sort Order is ByBudgetGroup
			Local Fields
				ErrorCount	is Numeric 4
			Action Rules
				Empty Set Rules
					invoke EditInProgress.InitiateApproval PrmBudgetChangeOrder
				Set Rules
					Entrance Rules
						include ChangeOrderCheckGroupTotalBudget
					Exit Rules
						if (ErrorCount = 0)
							invoke EditInProgress.InitiateApproval PrmBudgetChangeOrder
						else
							invoke EditInProgress.Failure PrmBudgetChangeOrder

		EditTotalsBatch is a Set Action
			restricted
			run in foreground
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmBudgetEditGroup			is UniqueID
					default label is "BudgetEditGroup"
				PrmMode						is a BudgetEditMode
					default label is "Mode"
				PrmTotalsProcessing			is a BudgetEditTotalsProcessing
					default label is "TotalsProcessing"
				PrmBudgetEditCallBack		is a BudgetEditCallBack
					default label is "CallBack"
				PrmActionCode				is an ActionCode
					default label is "ActionCode"
				PrmBusinessClassName		is Alpha 100
					default label is "BusinessClass"
				PrmEditContext				is Alpha 100
					default label is "EditContext"
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmBudgetEditGroup
					required
				PrmMode
					default to BudgetEditMode.Hard
				PrmTotalsProcessing
					default to BudgetEditTotalsProcessing.Purge
				PrmBudgetEditCallBack
					if (!PrmMode.UpdateOnly)
						required
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and BudgetTemplateGroupTotal.BudgetTemplateGroupTotal.BudgetEditGroup = PrmBudgetEditGroup)
			Sort Order
				FinanceEnterpriseGroup
				BudgetTemplateGroupTotal.BudgetEditGroup
			Action Rules
				Empty Set Rules
					LocalBudgetEditGroup									= PrmBudgetEditGroup
					constraint (OtherBudgetEditBatchRel not exists) 
						"BudgetEditBatch<first OtherBudgetEditBatchRel.BudgetEditBatch>ForThisDocumentHasNotCompleted"
					invoke Create BudgetEditBatch
						invoked.DocumentID									= PrmBudgetEditGroup			
						invoked.BudgetEditCallBackWrap.FEG					= PrmFinanceEnterpriseGroup			
						invoked.BudgetEditMode								= PrmMode
						invoked.BudgetEditTotalsProcessing					= PrmTotalsProcessing
						invoked.BudgetEditCallBackWrap.BudgetEditCallBack	= PrmBudgetEditCallBack
						invoked.PActionCode									= PrmActionCode
						invoked.CreateTime									= current timestamp  
						invoked.BusinessClassName							= PrmBusinessClassName
						invoked.EditContext									= PrmEditContext
				Set Rules
					Entrance Rules

						LocalBudgetEditGroup									= PrmBudgetEditGroup
						constraint (OtherBudgetEditBatchRel not exists) 
							"BudgetEditBatch<first OtherBudgetEditBatchRel.BudgetEditBatch>ForThisDocumentHasNotCompleted"
						invoke Create BudgetEditBatch
							invoked.DocumentID									= PrmBudgetEditGroup			
							invoked.BudgetEditCallBackWrap.FEG					= FinanceEnterpriseGroup			
							invoked.BudgetEditMode								= PrmMode
							invoked.BudgetEditTotalsProcessing					= PrmTotalsProcessing
							invoked.BudgetEditCallBackWrap.BudgetEditCallBack	= PrmBudgetEditCallBack
							invoked.PActionCode									= PrmActionCode
							invoked.CreateTime									= current timestamp  
							invoked.BusinessClassName							= PrmBusinessClassName
							invoked.EditContext									= PrmEditContext
				Instance Rules

		SetError is an Instance Action
			restricted
			Action Rules
				HasError = true

		SetErrorFalse is an Instance Action
			restricted
			Action Rules
				HasError = false

		UsedInBatch is an Instance Action
			restricted
			Parameters
				PrmBudgetEditBatch	is a BudgetEditBatch
			Action Rules

				BudgetEditBatch	= PrmBudgetEditBatch
				RecoveryCount	+= 1
			 
		ClearRecoveryCount is an Instance Action
			restricted
			Action Rules
				RecoveryCount	= 0

		PurgeIt is an Instance Action
			restricted
			Action Rules
				invoke Purge

		TestEditTotals is an Instance Action
			restricted
			Parameters
				PrmMode						is a BudgetEditMode
					default label is "Mode"
				PrmTotalsProcessing			is a BudgetEditTotalsProcessing
					default label is "TotalsProcessing"
				IsBatch 					is Boolean
			Action Rules

				invoke EditTotalsRoute 
					invoked.PrmIsBatch					= IsBatch
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmBudgetEditGroup			= Scenario.UniqueID
					invoked.PrmMode						= PrmMode
					invoked.PrmTotalsProcessing			= PrmTotalsProcessing
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackTest.Scenario		= Scenario
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackTest.BudgetTemplate	= BudgetTemplate
					invoked.PrmBusinessClassName		= "Scenario"
					invoked.PrmEditContext				= "TestEditTotals"
				LocalBudgetEditGroup = BudgetTemplateGroupTotal.BudgetEditGroup
				for each GroupTotalsRel


		TestRelease is a Set Action
			restricted
			Parameters
				PrmMode						is a BudgetEditMode
					default label is "Mode"
				PrmTotalsProcessing			is a BudgetEditTotalsProcessing
					default label is "TotalsProcessing"
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
				PrmScenario					is a Scenario
				PrmBudgetTemplate			is a BudgetTemplate
				IsBatch 					is Boolean
				
			Action Rules
				Empty Set Rules

					invoke EditTotalsRoute 
						invoked.PrmIsBatch					= IsBatch
						invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
						invoked.PrmBudgetEditGroup			= PrmScenario.UniqueID
						invoked.PrmMode						= PrmMode
						invoked.PrmTotalsProcessing			= PrmTotalsProcessing
						invoked.PrmBudgetEditCallBack.BudgetEditCallBackTest.Scenario		= PrmScenario
						invoked.PrmBudgetEditCallBack.BudgetEditCallBackTest.BudgetTemplate	= PrmBudgetTemplate
						invoked.PrmBusinessClassName		= "Scenario"
						invoked.PrmEditContext				= "RebuildTotals"
					LocalBudgetEditGroup = BudgetTemplateGroupTotal.BudgetEditGroup
					for each GroupTotalsRel

				Set Rules
					Entrance Rules

						invoke EditTotalsRoute 
							invoked.PrmIsBatch					= IsBatch
							invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
							invoked.PrmBudgetEditGroup			= PrmScenario.UniqueID
							invoked.PrmMode						= PrmMode
							invoked.PrmTotalsProcessing			= PrmTotalsProcessing
							invoked.PrmBudgetEditCallBack.BudgetEditCallBackTest.Scenario		= PrmScenario
							invoked.PrmBudgetEditCallBack.BudgetEditCallBackTest.BudgetTemplate	= PrmBudgetTemplate
							invoked.PrmBusinessClassName		= "Scenario"
							invoked.PrmEditContext				= "RebuildTotals"
						LocalBudgetEditGroup = BudgetTemplateGroupTotal.BudgetEditGroup
						for each GroupTotalsRel


		TestPurge is an Instance Action
			restricted
			Action Rules
				invoke PurgeGroupTotalsForEditGroup 
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmBudgetEditGroup			= Scenario.UniqueID							
				
		PopulateOriginatingDocumentField is a Set Action
			restricted
			Instance Selection
				where  (OriginatingDocument not entered)
			Action Rules
				Instance Rules
					if (GLCommitDocumentUniqueIDRel exists)
						OriginatingDocument = GLCommitDocumentUniqueIDRel.HeaderObjectReference
					else 
					if (GeneralLedgerJournalControlUniqueIDRel exists)
						OriginatingDocument = reference to GeneralLedgerJournalControlUniqueIDRel.GeneralLedgerJournalControl
					else
					if (BudgetChangeOrderUniqueIDRel exists)
						OriginatingDocument = reference to BudgetChangeOrderUniqueIDRel.BudgetChangeOrder
					else
					if (GLInterfaceBudgetGroupUniqueIDRel exists)
						OriginatingDocument = reference to GLInterfaceBudgetGroupUniqueIDRel.GLInterfaceBudgetGroup.OriginatingInterfaceRun
#ifdef module Allocations
					else
					if (AllocationRunUniqueIDRel exists)
						OriginatingDocument = reference to AllocationRunUniqueIDRel.AllocationRun
#endif
