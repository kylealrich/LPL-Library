SystemCalendarPeriodGroup is a BusinessClass
	owned by sc
	prefix is SCPS

	Ontology
		symbolic key is SystemCalendarPeriodGroup

    Patterns
        implements StaticJava

	Persistent Fields
		Description		is Alpha size 50
		LastPeriod		is Numeric size 4
	
	Context Fields
		CalendarQueryDate

	Derived Fields
		ISOExplanation is a MessageField
			"AllWeeksBeginOnA_Monday._Week_OneStartsOn_MondayOfTheFirstWeekOfTheCalendarYearContainingA_Thursday._TheLastWeekEndsOnThe_SundayPriorTo_Week_OneOfTheNextYear."
		Excel1Explanation is a MessageField
			"Week_OneBeginsOn_January_1st._Week_TwoBeginsOnTheFollowing_Sunday." 
		Excel2Explanation is a MessageField
			"Week_OneBeginsOn_January_1st._Week_TwoBeginsOnTheFollowing_Monday." 		
		SimpleNumberingExplanation is a MessageField
			"Week_OneBeginsOn_January_1st._Week_TwoBeginsOn_January_8th._Week_53HasOnlyOneOrTwoDays."						
	Field Rules

		Description
			required
				"PleaseEnterADescription"			

	Actions
		Create is a Create Action
		Update is an Update Action
		Delete is a Delete Action
		
		CreatePeriods is an Instance Action
			Parameters
				Year			   is Year
				PeriodFrequency	   is a SystemPeriodFrequency
				BeginningDate	   is a SystemCalendarDate
				WeeklyOption	   is Numeric 1
				    States
				    	ISO		   value is 1
				    	Excel1     value is 2
				    	Excel2     value is 3
				    	Simple     value is 4









				PeriodNameTemplate is Alpha size 50
					Text Variables
						PeriodNumber
						FromDate
						ToDate
						Year					
				
			Parameter Rules
				Year
					required
				PeriodFrequency
					required
				BeginningDate
				    if (!PeriodFrequency.Weekly)
						required		
					else
						cannot be entered
				WeeklyOption
					default to WeeklyOption.ISO
						
			Local Fields
				PeriodCount		is Numeric size 2
				WeekCount       is Numeric size 2		
				Quarter			is Numeric size 1
				MaxPeriods		is Numeric size 2
				FirstOfMonth    is Boolean
				FromDate		is a SystemCalendarDate
				ToDate			is a SystemCalendarDate
				TempYear		is Year
				TempYearPlus1   is Year
				TempYearMinus1  is Year
				TempPeriod      is Numeric size 2
				WeekArray		is a SystemCalendarWeekArray
				YearDiff		is Numeric 6
				SkipPeriod		is Boolean
											
			Action Rules			
				if (!PeriodFrequency.Weekly)
					TempYear       = BeginningDate year
					TempYearPlus1  = (TempYear + 1)
					TempYearMinus1 = (TempYear - 1)
					
					constraint (Year >= TempYearMinus1
					and			Year <= TempYearPlus1) 
						"BeginningDateOutOfRangeForYear"
								



				if (PeriodFrequency.Weekly)
					MaxPeriods = 53
				else
				if (PeriodFrequency.BiWeekly)
					MaxPeriods = 26
				else
				if (PeriodFrequency.SemiMonthly)
					MaxPeriods = 24
				else
				if (PeriodFrequency.Monthly)
					MaxPeriods = 12
				else
				if (PeriodFrequency.445)
					MaxPeriods = 13
					while (WeekCount < MaxPeriods)
						WeekCount +=1
						if (WeekCount = 3
						or  WeekCount = 6
						or  WeekCount = 9
						or  WeekCount = 12)
							WeekArray.DayCountGroup[WeekCount].DayCount = 34
						else
							WeekArray.DayCountGroup[WeekCount].DayCount = 27
				else
				if (PeriodFrequency.454)
					MaxPeriods = 13
					while (WeekCount < MaxPeriods)
						WeekCount +=1
						if (WeekCount = 2
						or  WeekCount = 5
						or  WeekCount = 8
						or  WeekCount = 11)
							WeekArray.DayCountGroup[WeekCount].DayCount = 34
						else
							WeekArray.DayCountGroup[WeekCount].DayCount = 27					
				else
				if (PeriodFrequency.544)
					MaxPeriods = 13
					while (WeekCount < MaxPeriods)
						WeekCount +=1					
						if (WeekCount = 1
						or  WeekCount = 4
						or  WeekCount = 7
						or  WeekCount = 10)
							WeekArray.DayCountGroup[WeekCount].DayCount = 34
						else
							WeekArray.DayCountGroup[WeekCount].DayCount = 27					
				else
				if (PeriodFrequency.Quarterly)
					MaxPeriods = 4
					
				if (PeriodFrequency.Monthly
				or  PeriodFrequency.SemiMonthly
				or  PeriodFrequency.Quarterly)	
					FromDate = (BeginningDate - BeginningDate day + 1)
				else
				if (PeriodFrequency.Weekly)
					FromDate = "20120101"
					YearDiff = (Year - FromDate year)
					FromDate += YearDiff as years
					if (WeeklyOption.ISO)
						while (FromDate week day != 5)
							FromDate += 1
						while (FromDate week day != 2)
							FromDate -= 1						  
				else
					FromDate = BeginningDate
					
				Quarter		 = 3
				FirstOfMonth = true			
							
				while (PeriodCount < MaxPeriods)
					PeriodCount +=1
					if (PeriodFrequency.Weekly)
						if (PeriodCount = 1)
							if (WeeklyOption.ISO
							or  WeeklyOption.Excel2)
								ToDate = FromDate

								while (ToDate week day != 1)
									ToDate += 1
						    else
						    if (WeeklyOption.Excel1)
						    	ToDate = FromDate

								while (ToDate week day != 7)
									ToDate += 1
							else

								ToDate = (FromDate + 6)
						else
							ToDate = (FromDate + 6)
						if (ToDate year > Year)
							if (WeeklyOption.ISO)
								if (ToDate day > 3)



									while (ToDate week day != 1
									or     ToDate year != Year)
										ToDate -= 1
									if (ToDate < FromDate)
										SkipPeriod = true	
							else
								ToDate = "20121231"
								ToDate += YearDiff as years
							PeriodCount  = 53	
					else
					if (PeriodFrequency.BiWeekly)
						ToDate = (FromDate + 13)
					else
					if (PeriodFrequency.SemiMonthly)
						if (FirstOfMonth)
						    ToDate = (FromDate + 14)
						    FirstOfMonth = false
						else							
							ToDate = (FromDate + FromDate days in month - FromDate day)
							FirstOfMonth = true					    
					else
					if (PeriodFrequency.Monthly)
						ToDate = (FromDate + FromDate days in month - 1)
					else
					if (PeriodFrequency.445
					or  PeriodFrequency.454
					or  PeriodFrequency.544)
						ToDate = (FromDate + WeekArray.DayCountGroup[PeriodCount].DayCount)
					else
					if (PeriodFrequency.Quarterly)
						ToDate = (FromDate + Quarter as months - 1)					
					TempPeriod += 1
					if (!SkipPeriod)
						invoke Create SystemCalendarPeriod	
							invoked.EnterpriseGroup 		    = EnterpriseGroup
							invoked.SystemCalendar			    = SystemCalendar
							invoked.SystemCalendarPeriodGroup   = SystemCalendarPeriodGroup
							invoked.SystemCalendarPeriod.Year   = Year
							invoked.SystemCalendarPeriod.Period = TempPeriod
							invoked.DateRange.FromDate		    = FromDate
							invoked.DateRange.ToDate 		    = ToDate
							invoked.PeriodNameTemplate		    = PeriodNameTemplate
						FromDate = (ToDate + 1)
								 
						
					
