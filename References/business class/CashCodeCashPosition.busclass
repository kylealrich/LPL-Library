CashCodeCashPosition is a BusinessClass
    owned by cb
    prefix is CCCP

    Ontology
        symbolic key is CashCodeCashPosition

    Patterns
        implements StaticJava
        disable AuditIndex

    Persistent Fields
        CashManagementAccount
        PostingPeriod 				is like GeneralLedgerCalendarPeriod
        ClosedPeriodBalance			is Boolean
        	default label is "PeriodEndBalance"
        LastPeriodDate				is Date
        LastPeriodBalance			is a FinanceAmountOnlyGroup
        NetPeriodAmount				is a FinanceAmountOnlyGroup
        DebitPeriodAmount			is a FinanceAmountOnlyGroup
        CreditPeriodAmount			is a FinanceAmountOnlyGroup
        EndingBalance				is a FinanceAmountOnlyGroup
        PeriodPostedBalance			is a FinanceAmountOnlyGroup
		OpenBalance					is a FinanceAmountOnlyGroup
		OpenRecordCount				is Numeric 10	
        BankAccountCurrency			is a Currency
        FunctionalCurrency			is a Currency
        CashAccount					is a FinanceCodeBlockFull
        	context of CashManagementGroup
        UpdateTimeStamp				is TimeStamp
        CompanyCashCode

	Transient Fields
		BypassActiveCodeBlockEdit

	Derived Fields

	Local Fields
		LocalCurrencyTable				is like CurrencyTable
		LocalCurrencyCalculationGroup	is a CurrencyCalculationGroup

    Relations
		PreviousBankAccountBalanceRel
			one-to-many relation to BankAccountBalance
			Field Mapping uses Set2
				related.CashManagementGroup	= CashManagementGroup
				related.CashCode			= CashCode
			Instance Selection
				where (related.BankAccountBalance < CashCodeCashPosition)

		GeneralLedgerClosePeriodRel
			one-to-many relation to GeneralLedgerClosePeriod
			Field Mapping uses ByEndDate
				related.FinanceEnterpriseGroup		  	= CashManagementGroup
				related.GeneralLedgerCloseConfiguration = CashManagementAccount.LegalEntity.AccountingEntity.CloseConfiguration
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date >= CashCodeCashPosition)

	Rule Blocks
		SetPaymentCurrencyAmountFields
			LocalCurrencyTable														= CashManagementGroup.FinanceEnterpriseGroup.CurrencyTable
			LocalCurrencyCalculationGroup.FinanceEnterpriseGroup					= CashManagementGroup
			LocalCurrencyCalculationGroup.ExchangeDate								= CashCodeCashPosition
			LocalCurrencyCalculationGroup.FromCurrency								= CashCode.Currency
			LocalCurrencyCalculationGroup.FunctionalAmount.ToCurrency				= Company.AccountingEntity.FunctionalCurrency
			LocalCurrencyCalculationGroup.AlternateAmount.ToCurrency				= Company.AccountingEntity.AlternateCurrency
			LocalCurrencyCalculationGroup.AlternateAmount2.ToCurrency				= Company.AccountingEntity.AlternateCurrency2
			LocalCurrencyCalculationGroup.AlternateAmount3.ToCurrency				= Company.AccountingEntity.AlternateCurrency3
			LocalCurrencyCalculationGroup.ReportAmount1.ToCurrency					= Company.FinanceEnterpriseGroup.ReportCurrencyOne
			LocalCurrencyCalculationGroup.ReportAmount2.ToCurrency					= Company.FinanceEnterpriseGroup.ReportCurrencyTwo
			LocalCurrencyCalculationGroup.ReportAmount3.ToCurrency					= Company.FinanceEnterpriseGroup.ReportCurrencyThree
			LocalCurrencyCalculationGroup.ReportAmount4.ToCurrency					= Company.FinanceEnterpriseGroup.ReportCurrencyFour
			LocalCurrencyCalculationGroup.ReportAmount5.ToCurrency					= Company.FinanceEnterpriseGroup.ReportCurrencyFive
	
    Field Rules
    	CashManagementAccount
    		default to CashCode.BankAccountNumber
    		
		PostingPeriod
			default to first GeneralLedgerClosePeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
			
    	LastPeriodDate
    		default to first PreviousBankAccountBalanceRel.BankAccountBalance
    		
    	BankAccountCurrency
   			default to CashManagementAccount.Currency
    			
    	FunctionalCurrency
    		default to Company.AccountingEntity.FunctionalCurrency
    			
    	CashAccount
    		default to CompanyCashCode.CashAccount
    	
    	UpdateTimeStamp
    		default to current timestamp

        LastPeriodBalance
			if (LastPeriodBalance.FunctionalAmount !entered)
				initialize LocalCurrencyCalculationGroup
				LocalCurrencyCalculationGroup.CurrencyAmount	= LastPeriodBalance.TransactionAmount
				include SetPaymentCurrencyAmountFields
				LastPeriodBalance.FunctionalAmount				= LocalCurrencyCalculationGroup.FunctionalAmount.OutputCurrencyAmount
				LastPeriodBalance.AlternateAmount				= LocalCurrencyCalculationGroup.AlternateAmount.OutputCurrencyAmount
				LastPeriodBalance.AlternateAmount2 				= LocalCurrencyCalculationGroup.AlternateAmount2.OutputCurrencyAmount
				LastPeriodBalance.AlternateAmount3				= LocalCurrencyCalculationGroup.AlternateAmount3.OutputCurrencyAmount
				LastPeriodBalance.ProjectAmount   				= LocalCurrencyCalculationGroup.ProjectAmount.OutputCurrencyAmount
				LastPeriodBalance.ReportAmount1     			= LocalCurrencyCalculationGroup.ReportAmount1.OutputCurrencyAmount
				LastPeriodBalance.ReportAmount1     			= LocalCurrencyCalculationGroup.ReportAmount1.OutputCurrencyAmount
				LastPeriodBalance.ReportAmount2      			= LocalCurrencyCalculationGroup.ReportAmount2.OutputCurrencyAmount
				LastPeriodBalance.ReportAmount3					= LocalCurrencyCalculationGroup.ReportAmount3.OutputCurrencyAmount
				LastPeriodBalance.ReportAmount4					= LocalCurrencyCalculationGroup.ReportAmount4.OutputCurrencyAmount
				LastPeriodBalance.ReportAmount5					= LocalCurrencyCalculationGroup.ReportAmount5.OutputCurrencyAmount

        NetPeriodAmount
			if (NetPeriodAmount.FunctionalAmount !entered)
				initialize LocalCurrencyCalculationGroup
	        	LocalCurrencyCalculationGroup.CurrencyAmount	= NetPeriodAmount.TransactionAmount
	 			include SetPaymentCurrencyAmountFields
				NetPeriodAmount.FunctionalAmount				= LocalCurrencyCalculationGroup.FunctionalAmount.OutputCurrencyAmount
				NetPeriodAmount.AlternateAmount					= LocalCurrencyCalculationGroup.AlternateAmount.OutputCurrencyAmount
				NetPeriodAmount.AlternateAmount2 				= LocalCurrencyCalculationGroup.AlternateAmount2.OutputCurrencyAmount
				NetPeriodAmount.AlternateAmount3				= LocalCurrencyCalculationGroup.AlternateAmount3.OutputCurrencyAmount
				NetPeriodAmount.ProjectAmount   				= LocalCurrencyCalculationGroup.ProjectAmount.OutputCurrencyAmount
				NetPeriodAmount.ReportAmount1     				= LocalCurrencyCalculationGroup.ReportAmount1.OutputCurrencyAmount
				NetPeriodAmount.ReportAmount1    			 	= LocalCurrencyCalculationGroup.ReportAmount1.OutputCurrencyAmount
				NetPeriodAmount.ReportAmount2    			  	= LocalCurrencyCalculationGroup.ReportAmount2.OutputCurrencyAmount
				NetPeriodAmount.ReportAmount3					= LocalCurrencyCalculationGroup.ReportAmount3.OutputCurrencyAmount
				NetPeriodAmount.ReportAmount4					= LocalCurrencyCalculationGroup.ReportAmount4.OutputCurrencyAmount
				NetPeriodAmount.ReportAmount5					= LocalCurrencyCalculationGroup.ReportAmount5.OutputCurrencyAmount

        DebitPeriodAmount
			if (DebitPeriodAmount.FunctionalAmount !entered)
				initialize LocalCurrencyCalculationGroup
	        	LocalCurrencyCalculationGroup.CurrencyAmount	= DebitPeriodAmount.TransactionAmount
	 			include SetPaymentCurrencyAmountFields
				DebitPeriodAmount.FunctionalAmount				= LocalCurrencyCalculationGroup.FunctionalAmount.OutputCurrencyAmount
				DebitPeriodAmount.AlternateAmount				= LocalCurrencyCalculationGroup.AlternateAmount.OutputCurrencyAmount
				DebitPeriodAmount.AlternateAmount2 				= LocalCurrencyCalculationGroup.AlternateAmount2.OutputCurrencyAmount
				DebitPeriodAmount.AlternateAmount3				= LocalCurrencyCalculationGroup.AlternateAmount3.OutputCurrencyAmount
				DebitPeriodAmount.ProjectAmount   				= LocalCurrencyCalculationGroup.ProjectAmount.OutputCurrencyAmount
				DebitPeriodAmount.ReportAmount1    			 	= LocalCurrencyCalculationGroup.ReportAmount1.OutputCurrencyAmount
				DebitPeriodAmount.ReportAmount1    			 	= LocalCurrencyCalculationGroup.ReportAmount1.OutputCurrencyAmount
				DebitPeriodAmount.ReportAmount2     		 	= LocalCurrencyCalculationGroup.ReportAmount2.OutputCurrencyAmount
				DebitPeriodAmount.ReportAmount3					= LocalCurrencyCalculationGroup.ReportAmount3.OutputCurrencyAmount
				DebitPeriodAmount.ReportAmount4					= LocalCurrencyCalculationGroup.ReportAmount4.OutputCurrencyAmount
				DebitPeriodAmount.ReportAmount5					= LocalCurrencyCalculationGroup.ReportAmount5.OutputCurrencyAmount

        CreditPeriodAmount
			if (CreditPeriodAmount.FunctionalAmount !entered)
				initialize LocalCurrencyCalculationGroup
	        	LocalCurrencyCalculationGroup.CurrencyAmount	= CreditPeriodAmount.TransactionAmount
	 			include SetPaymentCurrencyAmountFields
				CreditPeriodAmount.FunctionalAmount				= LocalCurrencyCalculationGroup.FunctionalAmount.OutputCurrencyAmount
				CreditPeriodAmount.AlternateAmount				= LocalCurrencyCalculationGroup.AlternateAmount.OutputCurrencyAmount
				CreditPeriodAmount.AlternateAmount2 			= LocalCurrencyCalculationGroup.AlternateAmount2.OutputCurrencyAmount
				CreditPeriodAmount.AlternateAmount3				= LocalCurrencyCalculationGroup.AlternateAmount3.OutputCurrencyAmount
				CreditPeriodAmount.ProjectAmount   				= LocalCurrencyCalculationGroup.ProjectAmount.OutputCurrencyAmount
				CreditPeriodAmount.ReportAmount1     			= LocalCurrencyCalculationGroup.ReportAmount1.OutputCurrencyAmount
				CreditPeriodAmount.ReportAmount1     			= LocalCurrencyCalculationGroup.ReportAmount1.OutputCurrencyAmount
				CreditPeriodAmount.ReportAmount2      			= LocalCurrencyCalculationGroup.ReportAmount2.OutputCurrencyAmount
				CreditPeriodAmount.ReportAmount3				= LocalCurrencyCalculationGroup.ReportAmount3.OutputCurrencyAmount
				CreditPeriodAmount.ReportAmount4				= LocalCurrencyCalculationGroup.ReportAmount4.OutputCurrencyAmount
				CreditPeriodAmount.ReportAmount5				= LocalCurrencyCalculationGroup.ReportAmount5.OutputCurrencyAmount

        EndingBalance
			if (EndingBalance.FunctionalAmount !entered)
				initialize LocalCurrencyCalculationGroup
	        	LocalCurrencyCalculationGroup.CurrencyAmount	= EndingBalance.TransactionAmount
	 			include SetPaymentCurrencyAmountFields
				EndingBalance.FunctionalAmount					= LocalCurrencyCalculationGroup.FunctionalAmount.OutputCurrencyAmount
				EndingBalance.AlternateAmount					= LocalCurrencyCalculationGroup.AlternateAmount.OutputCurrencyAmount
				EndingBalance.AlternateAmount2 					= LocalCurrencyCalculationGroup.AlternateAmount2.OutputCurrencyAmount
				EndingBalance.AlternateAmount3					= LocalCurrencyCalculationGroup.AlternateAmount3.OutputCurrencyAmount
				EndingBalance.ProjectAmount   					= LocalCurrencyCalculationGroup.ProjectAmount.OutputCurrencyAmount
				EndingBalance.ReportAmount1     				= LocalCurrencyCalculationGroup.ReportAmount1.OutputCurrencyAmount
				EndingBalance.ReportAmount1     				= LocalCurrencyCalculationGroup.ReportAmount1.OutputCurrencyAmount
				EndingBalance.ReportAmount2      				= LocalCurrencyCalculationGroup.ReportAmount2.OutputCurrencyAmount
				EndingBalance.ReportAmount3						= LocalCurrencyCalculationGroup.ReportAmount3.OutputCurrencyAmount
				EndingBalance.ReportAmount4						= LocalCurrencyCalculationGroup.ReportAmount4.OutputCurrencyAmount
				EndingBalance.ReportAmount5						= LocalCurrencyCalculationGroup.ReportAmount5.OutputCurrencyAmount
    

    Sets

        ByCashCodeDescendingDate
            indexed
            Sort Order
            	CashManagementGroup
                CashCode
                CashCodeCashPosition descending
                Company

		ByDescendingDateCashCode
			Sort Order
				CashManagementGroup
				CashCodeCashPosition descending
				CashCode
				Company

        ByDescendingDateCashManagementAccount
            indexed
            Sort Order
            	CashManagementGroup
                CashCodeCashPosition descending
            	CashManagementAccount
                CashCode
                Company

	Actions
		Create is an Action
			Entrance Rules
				BypassActiveCodeBlockEdit = true
		
		Update is an Action
		
		Delete is an Action
