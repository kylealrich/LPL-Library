ContractSubclassification is a BusinessClass
    owned by po
    prefix is CSCL

	Ontology
		symbolic key is ContractSubclassification

	Persistent Fields
		PerformanceEvaluationTemplate
		Description									is a Description4
		Type                                        is Numeric size 2
			States
				NoApprovals							value is 1
				ApprovalsWithNoRedlining            value is 2
				ApprovalsWithRedliningOnDocument    value is 3
				ApprovalsWithRedliningOnContract    value is 4
		RequireFullDistributionForSpecialItem       is Boolean
		ShowHealthcareInformation                   is Boolean
		RequireCommodityCodeForServiceItem			is Boolean
		RequireCommodityCodeForNonServiceItem		is Boolean
		RequireManufacturerCodeForNonServiceItem	is Boolean	
		RequireManufacturerNumberForNonServiceItem	is Boolean
		RequireContractApproval						is Boolean
		RequireFinalApproval						is Boolean
		RequireContractNegotiation					is Boolean
		RequireAddendumApproval						is Boolean
		RequireAddendumNegotiation					is Boolean
		RequireFinalAddendumApproval				is Boolean
		RequireAmendmentApproval					is Boolean
		RequireAmendmentNegotiation					is Boolean
		RequireFinalAmendmentApproval				is Boolean
		RequireApprovalWithWordDocument				is Boolean
		RequireApprovalWithWordDocDuringAddendum 	is Boolean
		RequireFinalApprovalWithWordDocument		is Boolean
		RequireMatrixInitialApproval                is Boolean 
		RequireMatrixAmendmentApproval              is Boolean 
		RequireMatrixAddendumApproval               is Boolean 
		ContractDocumentTemplate					
			default label is "DocumentTemplate"
		ContractIDMDocumentTemplate     			is an IDMOutputSettings
			default label is "IDMDocumentTemplate"
			protected
			restricted
		SourcingEligible							is Boolean
		Active										is Boolean
		AddendumDocumentTemplate
			default label is "AddendumTemplate"
		AllowUpdatesDuringApproval					is Boolean
		UseSupplierPortalForNegotiations			is Boolean
		RequireNegotiationFinalApproval				is Boolean
		RequireTermAndConditionApproval				is Boolean
		AllowUpdatesDuringFinalApproval				is Boolean
		AllowUpdatesDuringAddendumApproval			is Boolean
		UseSupplierPortalForAddendumNegotiations	is Boolean
		RequireAddendumNegotiationFinalApproval		is Boolean
		RequireAddendumTermAndConditionApproval		is Boolean
		AllowUpdatesDuringAddendumFinalApproval		is Boolean
		DoNotDisplayContractsToAll                  is Boolean
			default label is "DoNotAllowSuppliersToViewContractsAnonymously"
		SupplierCanView                             
			default label is "AllowSupplierToViewCommentsAndAttachmentsOnPortal"
		SetActiveLineToAmendment                    is Boolean
			default label is "ChangeToActiveContractLineSetsStatusToAmendment"
		UseIDM										is Boolean				
		UseIDMForContract							is Boolean
			default label is "UseIDMTemplate"
			restricted
			protected
		ContractDocumentIDMTemplate     			is an IDMTemplate
			default label is "DocumentTemplate"
		AllowChangeOrder                            is Boolean
		ChangeOrderAmendmentAddendum                is Numeric 1
			States
				Addendum 							value 1  
				Amendment                           value 2
			default label is "ContractAddendumOrAmendmentWhenChangeOrderIsCreated"
		ChangeOrderChangeLifetimeMaximum            is Boolean
			default label is "UpdateContractLifetimeMaximumWhenChangeOrderUpdatesOccur"
		ChangeOrderManualUpdates                    is Boolean
			default label is "AllowFieldsAffectedByChangeOrdersToBeUpdatedDirectly"
		MultipleChangeOrdersAllowed                  is Boolean
			default label is "AllowMultipleChangeOrdersPerAmendmentOrAddendum"
		ChangeOrderAutoCreateDocument                is Boolean
			default label is "CreateContractDocumentWhenChangeIsCompletedAndContractIsActivated"
		ChangeOrderEditBudgets                       is Boolean
			default label is "EditBudgetsWhenChangeOrderIsSubmitted"
		AutomaticUpdateHeaderLifetimeMaximumAmount	is Boolean
		AddendumDocumentIDMTemplate					is an IDMTemplate
			default label is "AddendumTemplate"
		CostChangeTolerancePercent                  is Percent size 6.3
			default label is "PercentNotToExceed"
		CostChangeToleranceAmount                   is an InternationalAmount
			default label is "AmountNotToExceed"
		Connector
		ToleranceHandling                           is Numeric 1
			States
				CreateToleranceErrorRecord          value 1
				OnlineError                         value 2
		UseForInterface                             is Boolean
		UseForCapitatedContracts                    is Boolean 
		EnableClinicalSystemUseLocations    		is Boolean 
			default label is "SetForClinicalUseSystemsToTrueForEligibleContracts"			
	
	Local Fields
		LocalUpdateFromClassification is Boolean
			
	Derived Fields
	
		ActorContractClassificationGroup is a DerivedField
			type is like ContractClassificationGroup
			return actor.context.ContractClassificationGroup

		AndMessage is a MessageField
			"And"
			
		OrMessage is a MessageField
			"Or"
		
		ConnectorState is a DerivedField
			type is Alpha size 10
			if (Connector = "A")
				return AndMessage
			else
			if (Connector = "O")
				return OrMessage
			else
				return blank
	
	Relations

		PeformanceEvaluationTemplateExistsRel
            one-to-many relation to PerformanceEvaluationTemplate
            Field Mapping uses symbolic key
                related.SupplierGroup       = ContractGroup
		SubclassificationToContractsRel 
			one-to-many relation to Contract
			Field Mapping uses ByClassification
				related.ContractClassification 		= ContractClassification
				related.ContractSubclassification 	= ContractSubclassification	
				related.ContractGroup    			= ContractGroup
		
		InUseContractsForThisSubclassificationRel 
			one-to-many relation to Contract
			Field Mapping uses ByClassification
				related.ContractClassification 		= ContractClassification
				related.ContractSubclassification 	= ContractSubclassification	
				related.ContractGroup    			= ContractGroup
			Instance Selection
				where (!related.ContractStatus.Closed)
	
		SupplierGroupRel
			one-to-one relation to SupplierGroup
			Field Mapping uses symbolic key
				related.SupplierGroup   = ContractGroup
		
		SourcingCompanyRel 
			one-to-many relation to SourcingCompany
			Field Mapping uses BySourcingGroup 
				related.SourcingGroup	= ContractGroup

		ContractsWithPendingTermChangesRel 
			one-to-many relation to Contract
			Field Mapping uses ByClassification
				related.ContractClassification 		= ContractClassification
				related.ContractSubclassification 	= ContractSubclassification	
				related.ContractGroup    			= ContractGroup
			Instance Selection
				where (related.InProgress
				and	   related.HasUnapprovedArticleOrTermChanges)
				
		ContractClassificationGroupDetailRel
			one-to-many relation to ContractClassificationGroupMember 
			Field Mapping uses symbolic key
				related.ContractGroup                       = ContractGroup
				related.ContractClassificationGroup         = ActorContractClassificationGroup
				related.ContractClassification              = ContractClassification

		ContractSubclassificationGroupDetailRel
			one-to-many relation to ContractClassificationGroupMember 
			Field Mapping uses symbolic key
				related.ContractGroup                       = ContractGroup
				related.ContractClassificationGroup         = ActorContractClassificationGroup
				related.ContractClassification              = ContractClassification
				related.ContractSubclassification           = ContractSubclassification
		
		ActorContextSubClassRel
			one-to-many relation to ActorContext
			Field Mapping uses symbolic key
				related.Actor             = actor
			Instance Selection
				where (related.ContextProperty.KeyField   = "ContractSubclassification")
		
		ContractRedlineDocumentRel 
			one-to-many relation to Contract
			Field Mapping uses ByClassification
				related.ContractClassification 		= ContractClassification
				related.ContractSubclassification 	= ContractSubclassification	
				related.ContractGroup    			= ContractGroup
			Instance Selection
				where (!related.ContractStatus.Closed
				and     related.RedlineDocumentExists)
		
	Conditions
		IsPerformanceEvaluationTemplate
			restricted
			when (PerformanceEvaluationTemplate = true)

		PerformanceEvaluationTemplateExists
			when (PeformanceEvaluationTemplateExistsRel exists)
			
		SourcingCompanyExists
			restricted
			when (SourcingCompanyRel exists)

		HasContractDocumentTemplate
			restricted
			when (ContractDocumentTemplate entered)
		
		HasCostChangeTolerances
			restricted
			when (ToleranceHandling > 0)

		HasAddendumDocumentTemplate
			restricted
			when (AddendumDocumentTemplate entered)

		HasContractsWithPendingTermChanges
			restricted
			when (ContractsWithPendingTermChangesRel exists)
			
		SuppliersCanViewAllContracts
			restricted
			when (SupplierGroupRel.DisplayContractsToAll = true)
		
		SubClassActorContextExists
			restricted
			when (ActorContextSubClassRel exists)
		
		BasicApprovals
			restricted
			when (Type = 2)
			
		ContractRedlining
			restricted
			when (Type = 4)
			
		DocumentRedlining
			restricted
			when (Type = 3)
			
		ContractsExistForSubclassification
			restricted
			when (InUseContractsForThisSubclassificationRel exists)
		
		NoApprovals
			restricted   
			when (!RequireContractApproval						
			and   !RequireFinalApproval						
		    and   !RequireContractNegotiation					
		    and   !RequireAddendumApproval						
		    and   !RequireAddendumNegotiation					
		    and   !RequireFinalAddendumApproval				
		    and   !RequireAmendmentApproval					
		    and   !RequireAmendmentNegotiation					
		    and   !RequireFinalAmendmentApproval
			or    !RequireMatrixInitialApproval  
		    and   !RequireApprovalWithWordDocument				
			and   !RequireApprovalWithWordDocDuringAddendum)
		    
		ContractApprovalsEntered
			restricted  
			when (RequireContractApproval						
			or    RequireFinalApproval						
		    or    RequireContractNegotiation					
		    or    RequireAddendumApproval						
		    or    RequireAddendumNegotiation					
		    or    RequireFinalAddendumApproval				
		    or    RequireAmendmentApproval					
			or    RequireMatrixInitialApproval  
		    or    RequireAmendmentNegotiation					
		    or    RequireFinalAmendmentApproval)
		    
		ContractRedlineApprovalsEntered
			restricted
			when (RequireContractNegotiation					
		    or    RequireAddendumNegotiation			
			or    RequireTermAndConditionApproval				
			or	  RequireAddendumTermAndConditionApproval		
			or    RequireContractApproval   
			or    RequireAddendumApproval)		 				 

		ContractRedlineApprovalsOnly
			restricted
			when (RequireTermAndConditionApproval
			or    RequireAddendumTermAndConditionApproval)
		
		ContractSubclassificationGroupAllowsAccess
			restricted
			when   ((ActorContractClassificationGroup entered
			and    ContractSubclassificationGroupDetailRel exists)
			or	   ActorContractClassificationGroup !entered)
		
		HasSecurityAccess
			restricted
			when ((ContractGroup.BusinessGroupAllowsAccess
			and   ContractSubclassificationGroupAllowsAccess
			and   ContractSubclassification entered
			and  ((ContractSubclassification = any actor.context.ContractSubclassification
		    and    SubClassActorContextExists)
			or    !SubClassActorContextExists))
			or    ContractSubclassification !entered)
		
		NotForDocumentRedlineApprovals
			restricted
			when (RequireContractApproval
			or    RequireAddendumApproval)
		
		DocumentRedlineApprovalsEntered
			restricted
			when (RequireApprovalWithWordDocument				
			or    RequireApprovalWithWordDocDuringAddendum) 
			
		HasContractsWithRedlineDocuments
			restricted
			when (ContractRedlineDocumentRel exists)		 
			
	Field Rules
		PerformanceEvaluationTemplate
			constraint (PerformanceEvaluationTemplate.TotalCategoryWeighting = 100%)
				"CannotUseAsCurrentPerformanceEvaluationTemplate;TotalCategoryWeightingDoesNotEqual100%"
		Description
			required
		Type
			initial value is ContractClassification.Type
			required
		
		SourcingEligible
			initial value is ContractClassification.SourcingEligible
			if (SourcingEligible)
				constraint (SourcingCompanyExists)
					"NotEligibleForEventCreation;NoSourcingCompaniesAreSetupForAssociatedSourcingGroup"
		RequireCommodityCodeForServiceItem
			initial value is ContractClassification.RequireCommodityCodeForServiceItem
		RequireCommodityCodeForNonServiceItem
			initial value is ContractClassification.RequireCommodityCodeForNonServiceItem	
		RequireManufacturerCodeForNonServiceItem
			initial value is ContractClassification.RequireManufacturerCodeForNonServiceItem	
		RequireManufacturerNumberForNonServiceItem
			initial value is ContractClassification.RequireManufacturerNumberForNonServiceItem
		RequireContractApproval		
			initial value is ContractClassification.RequireContractApproval
		RequireFinalApproval	
			initial value is ContractClassification.RequireFinalApproval
		RequireContractNegotiation	
			initial value is ContractClassification.RequireContractNegotiation
		RequireAddendumApproval	
			initial value is ContractClassification.RequireAddendumApproval
		RequireAddendumNegotiation	
			initial value is ContractClassification.RequireAddendumNegotiation
		RequireFinalAddendumApproval
			initial value is ContractClassification.RequireFinalAddendumApproval
		RequireAmendmentApproval	
			initial value is ContractClassification.RequireAmendmentApproval
		RequireAmendmentNegotiation	
			initial value is ContractClassification.RequireAmendmentNegotiation
		RequireFinalAmendmentApproval	
			initial value is ContractClassification.RequireFinalAmendmentApproval
		RequireApprovalWithWordDocument				
			initial value is ContractClassification.RequireApprovalWithWordDocument
		RequireApprovalWithWordDocDuringAddendum
			initial value is ContractClassification.RequireApprovalWithWordDocDuringAddendum
		ContractDocumentTemplate
			initial value is ContractClassification.ContractDocumentTemplate
		AddendumDocumentTemplate
			initial value is ContractClassification.AddendumDocumentTemplate
		Active	
			initial value is ContractClassification.Active
		AllowUpdatesDuringApproval
			initial value is ContractClassification.AllowUpdatesDuringApproval
			if (Type = 4)
				if (RequireContractApproval = true)
					AllowUpdatesDuringApproval = true
				if (RequireContractApproval = false)
					AllowUpdatesDuringApproval = false
		RequireNegotiationFinalApproval
			initial value is ContractClassification.RequireNegotiationFinalApproval
			if (RequireNegotiationFinalApproval changed)
				constraint (!HasContractsWithPendingTermChanges)
					"RequireFinalApprovalAfterSupplierPortalNegotiationsCannotBeChanged;ContractsUsingThisClassificationExistThatAreInTheApprovalProcess"
			constraint (UseSupplierPortalForNegotiations)
				"RequireFinalApprovalAfterSupplierPortalNegotiationsMustBeBlankWhenUseSupplierPortalForNegotiationsIsSetToNo"
			constraint (RequireContractNegotiation)
				"RequireFinalApprovalAfterSupplierPortalNegotiationsMustBeBlankWhenRequireSupplierContractNegotiationsIsSetToNo"
		UseSupplierPortalForNegotiations
			initial value is ContractClassification.UseSupplierPortalForNegotiations
			if (Type = 4)
				if (RequireContractNegotiation = true)
					UseSupplierPortalForNegotiations = true
				if (RequireContractNegotiation = false)
					UseSupplierPortalForNegotiations = false
		RequireTermAndConditionApproval
			initial value is ContractClassification.RequireTermAndConditionApproval
			if (RequireTermAndConditionApproval changed)
				constraint (!HasContractsWithPendingTermChanges)
					"RequireApprovalOfTermAndConditionUpdatesCannotBeChanged;ContractsUsingThisClassificationExistThatAreInTheApprovalProcess"
			constraint (RequireContractApproval)
				"RequireApprovalOfTermAndConditionUpdatesMustBeBlankWhenRequireInternalContractApprovalBeforeNegotiationsIsSetToNo"
		AllowUpdatesDuringFinalApproval
			initial value is ContractClassification.AllowUpdatesDuringFinalApproval
			if (Type = 4)
				if (RequireNegotiationFinalApproval = true)
					AllowUpdatesDuringFinalApproval = true
				if (RequireNegotiationFinalApproval = false)
					AllowUpdatesDuringFinalApproval = false
		AllowUpdatesDuringAddendumApproval
			initial value is ContractClassification.AllowUpdatesDuringAddendumApproval
			if (Type = 4)
				if (RequireAddendumApproval = true)
					AllowUpdatesDuringAddendumApproval = true
				if (RequireAddendumApproval = false)
					AllowUpdatesDuringAddendumApproval = false
		RequireAddendumNegotiationFinalApproval
			initial value is ContractClassification.RequireAddendumNegotiationFinalApproval
			if (RequireAddendumNegotiationFinalApproval changed)
				constraint (!HasContractsWithPendingTermChanges)
					"RequireAddendumFinalApprovalAfterSupplierPortalNegotiationsCannotBeChanged;ContractsUsingThisClassificationExistThatAreInTheApprovalProcess"
			constraint (UseSupplierPortalForAddendumNegotiations)
				"RequireAddendumFinalApprovalAfterSupplierPortalNegotiationsMustBeBlankWhenUseSupplierPortalForAddendumNegotiationsIsSetToNo"
			constraint (RequireAddendumNegotiation)
				"RequireAddendumFinalApprovalAfterSupplierPortalNegotiationsMustBeBlankWhenRequireSupplierContractAddendumNegotiationsIsSetToNo"
		UseSupplierPortalForAddendumNegotiations
			initial value is ContractClassification.UseSupplierPortalForAddendumNegotiations
			if (Type = 4)
				if (RequireAddendumNegotiation = true)
					UseSupplierPortalForAddendumNegotiations = true
				if (RequireAddendumNegotiation = false)
					UseSupplierPortalForAddendumNegotiations = false
		RequireAddendumTermAndConditionApproval
			initial value is ContractClassification.RequireAddendumTermAndConditionApproval
			if (RequireAddendumTermAndConditionApproval changed)
				constraint (!HasContractsWithPendingTermChanges)
					"RequireApprovalOfTermAndConditionUpdatesCannotBeChanged;ContractsUsingThisClassificationExistThatAreInTheApprovalProcess"
			constraint (RequireAddendumApproval)
				"RequireApprovalOfTermAndConditionUpdatesMustBeBlankWhenRequireInternalContractAddendumApprovalBeforeNegotiationsIsSetToNo"
		AllowUpdatesDuringAddendumFinalApproval
			initial value is ContractClassification.AllowUpdatesDuringAddendumFinalApproval
			if (Type = 4)
				if (RequireAddendumNegotiationFinalApproval = true)
					AllowUpdatesDuringAddendumFinalApproval = true
				if (RequireAddendumNegotiationFinalApproval = false)
					AllowUpdatesDuringAddendumFinalApproval = false
		DoNotDisplayContractsToAll
			initial value is ContractClassification.DoNotDisplayContractsToAll
		ContractDocumentIDMTemplate
			if (UseIDM)
				constraint (ContractDocumentIDMTemplate.IDMDocumentType.ContractDocument)
					"InvalidTemplate"
			else
				initialize
		AddendumDocumentIDMTemplate
			if (UseIDM)
				constraint (AddendumDocumentIDMTemplate.IDMDocumentType.AddendumDocument)
					"InvalidTemplate"
			else
				initialize
		AllowChangeOrder
			initial value is ContractClassification.AllowChangeOrder
			if (!AllowChangeOrder)
				ChangeOrderAmendmentAddendum = 0
				ChangeOrderChangeLifetimeMaximum = false
				ChangeOrderManualUpdates		 = false                    
				MultipleChangeOrdersAllowed      = false            
				ChangeOrderAutoCreateDocument    = false            
				ChangeOrderEditBudgets			 = false
		ChangeOrderAmendmentAddendum
			initial value is ContractClassification.ChangeOrderAmendmentAddendum
		ChangeOrderChangeLifetimeMaximum            
			initial value is ContractClassification.ChangeOrderChangeLifetimeMaximum
		CostChangeTolerancePercent                  
			initial value is ContractClassification.CostChangeTolerancePercent
		CostChangeToleranceAmount                   
			initial value is ContractClassification.CostChangeToleranceAmount
		AutomaticUpdateHeaderLifetimeMaximumAmount
			initial value is ContractClassification.AutomaticUpdateHeaderLifetimeMaximumAmount
		Connector
			initial value is ContractClassification.Connector
		ToleranceHandling                           
			initial value is ContractClassification.ToleranceHandling
		UseForInterface                             		
			initial value is ContractClassification.UseForInterface
		RequireMatrixInitialApproval                 
			initial value is ContractClassification.RequireMatrixInitialApproval
		RequireMatrixAmendmentApproval               
			initial value is ContractClassification.RequireMatrixAmendmentApproval
		RequireMatrixAddendumApproval   
			initial value is ContractClassification.RequireMatrixAddendumApproval

	Attach Rules
		constraint (Active)
			"ContractSubclassificationIsNotActive"

	Actions
		Create is a Create Action
			Field Rules
				RequireApprovalWithWordDocument	
					if (Type = 3)
						default to true
				AllowUpdatesDuringApproval
					if (RequireTermAndConditionApproval)
						default to true
				AllowUpdatesDuringFinalApproval
					if (RequireNegotiationFinalApproval)
						default to true
				AllowUpdatesDuringAddendumApproval
					if (RequireAddendumTermAndConditionApproval)
						default to true
				AllowUpdatesDuringAddendumFinalApproval
					if (RequireAddendumNegotiationFinalApproval)
						default to true
				UseIDM
					default to ContractClassification.UseIDM
				ContractDocumentIDMTemplate
					default to ContractClassification.ContractDocumentIDMTemplate
				AddendumDocumentIDMTemplate
					default to ContractClassification.AddendumDocumentIDMTemplate

			Action Rules
				if (Active)
					constraint (ContractClassification.Active)
						"AnActiveContractSubclassificationRequiresAnActiveContractClassification"

				if (Type = Type.ApprovalsWithRedliningOnDocument
				and !UseIDM)
					confirmation required
						"UnlessUsing_InforAsASingleTenantOrOnPremise,MustCheck_Use_IDMIfYouWantToPerformApprovalsWithRedliningOnDocument;DoYouWantToContinue?"	
				if (ToleranceHandling > 0)
					if (CostChangeToleranceAmount = 0)
						constraint (CostChangeTolerancePercent > 0)
							"IfToleranceHandlingIsDefined,ToleranceAmountOrPercentMustBeGreaterThanZero"
				if (CostChangeToleranceAmount > 0
				or  CostChangeTolerancePercent > 0)
					constraint (ToleranceHandling > 0)
						"MustDefineToleranceHandlingIfTolerancePercentOrAmountIsGreaterThanZero"
				if (CostChangeToleranceAmount > 0
				and CostChangeTolerancePercent > 0)
					constraint (Connector entered)
						"MustDefineAndOrIfToleranceAmountAndPercentAreBothEntered"
				if (CostChangeToleranceAmount = 0
				or  CostChangeTolerancePercent = 0)
					initialize Connector
				if (ToleranceHandling = 0)
					UseForInterface = false													
		Update is an Update Action
			Action Rules
				if (!DocumentRedlineApprovalsEntered)
					constraint (!HasContractsWithRedlineDocuments)
						"MustSelectAtLeastOne_'RequireInternalContractApprovalUsingDocumentRedliningBeforeNegotiations'_Option;ContractsWithRedlineDocumentsExist"
				
				if (Active)
					constraint (ContractClassification.Active)
						"AnActiveContractSubclassificationRequiresAnActiveContractClassification"
						
				if (UseIDM changed) 
					if (UseIDM)
						if (not LocalUpdateFromClassification)
							confirmation required
								"Switching_Contract_SubclassificationToUseIDM.Continue?"
					else
						constraint (!ContractsExistForSubclassification)
							"CannotChangeUseIDMToFalse;OpenContractsExistThatUseIDM"
				if (Type !=4)
						constraint (!ContractRedlineApprovalsOnly)
							"CannotChangeTypeFromApprovalsWithRedliningOnContractIfApprovalFieldsCheckedThatOnlyPertainToThatType"
					if (Type !=3)
						constraint (!DocumentRedlineApprovalsEntered)
							"CannotChangeTypeFromApprovalsWithRedliningOnDocumentIfApprovalFieldsCheckedThatOnlyPertainToThatType"
						
					if (Type = 1)
						constraint (NoApprovals)
							"CannotChangeToNoApprovalTypeIfApprovalOptionsSelected"
							
					if (Type = 3)
						constraint (!NotForDocumentRedlineApprovals)
							"CannotChangeToRedliningOnDocumentTYpeIfApprovalsWithNoRedlining_'RequireInternalContractApprovalBeforeNegotiations'_DraftOrAmendmentOptionsAreChecked"

				if (Type = 3
				and UseSupplierPortalForNegotiations changed)
					constraint (!ContractsExistForSubclassification)
						"CannotChangeUseSupplierPortalForAllNegotiationsFlag;ContractsExistForSubclassification"						

				if (ToleranceHandling > 0)
					if (CostChangeToleranceAmount = 0)
						constraint (CostChangeTolerancePercent > 0)
							"IfToleranceHandlingIsDefined,ToleranceAmountOrPercentMustBeGreaterThanZero"
				if (CostChangeToleranceAmount > 0
				or  CostChangeTolerancePercent > 0)
					constraint (ToleranceHandling > 0)
						"MustDefineToleranceHandlingIfTolerancePercentOrAmountIsGreaterThanZero"
				if (CostChangeToleranceAmount > 0
				and CostChangeTolerancePercent > 0)
					constraint (Connector entered)
						"MustDefineAndOrIfToleranceAmountAndPercentAreBothEntered"
				if (CostChangeToleranceAmount = 0
				or  CostChangeTolerancePercent = 0)
					initialize Connector
				if (ToleranceHandling = 0)
					UseForInterface = false					

				if (UseForCapitatedContracts changed)
					constraint (!ContractsExistForSubclassification)
						"CannotChangeUseForCapitatedContractsFlag;ContractsExistForSubclassification"
			Exit Rules
				if (UseIDM changed)
					if (UseIDM)
						for each InUseContractsForThisSubclassificationRel
							invoke FastUpdate each
								invoked.UseIDM = true
								if (Type = 3)
									invoked.UseIDMPerClassificationAndSubClass = true

		Delete is a Delete Action
			Action Rules
				constraint (!SubclassificationToContractsRel exists)
					"CannotDelete;ContractsExistForThisContractSubclassification"

		SyncUseIDMAndUseIDMTemplateForContracts is a Set Action
			restricted
			default label is untranslatable

			Instance Selection
				where (UseIDM not = UseIDMForContract)

			Action Rules
				Instance Rules
					UseIDM = true
					UseIDMForContract = true
