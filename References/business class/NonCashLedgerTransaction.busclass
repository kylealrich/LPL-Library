NonCashLedgerTransaction is a BusinessClass
	owned by cashmgmt
	prefix is NCLT

	Ontology
		symbolic key is NonCashLedgerTransaction
		
	Persistent Fields								
		BankStatement
			delete ignored
		TransactionNumber				is Alpha 16 
		TransactionDate					is Date
		ReconciledDate					is Date
		TransactionAmount				is an InternationalAmount
		DebitCreditIndicator
		SignedAmount					is an InternationalAmount
		ReconciledAmount				is an InternationalAmount
		Description						is Alpha 100
		VoidTransaction					is Boolean
		Status			is Numeric 2
			States
				Open			value is 0
				Reconciled		value is 1
		TransactionDataOne				is a TransactionData
		TransactionDataTwo				is a TransactionData
		TransactionDataThree			is a TransactionData
		TransactionDataFour				is a TransactionData
		TransactionPostingDate			is a PostingDate
		VoidDate						is a PostingDate
		SystemCode						is a GeneralLedgerSystemCode
		Reference						
    	Comment							is Text
		TransactionDistributionAmount	is an InternationalAmount
		BaseTotalDistributionAmount		is a DocumentCurrencyTotals
		OffsetDistributionCreated		is Boolean
		BudgetEditProcessing 			is Numeric size 1
			States
                NotInProcessing value is 0
                InProcess  		value is 1
                Failure    		value is 2
                Success    		value is 3
		TransactionPostingDatePeriod	is like GeneralLedgerCalendarPeriod
		VoidDatePeriod					is like GeneralLedgerCalendarPeriod
                		
	Context Fields
		TransactionDateRange		is a DateRange
		SearchAmountRange

	Derived Fields
		ReconciliationVariance is a DerivedField
			type is like InternationalAmount
			if (ReconciledAmount entered)
				return (ReconciledAmount - TransactionAmount)




			
		OutOfBalanceAmount is a DerivedField
			type is like InternationalAmount
			if (DebitCreditIndicator.Debit)
				return (ReconciliationVariance - TransactionDistributionAmount)
			else
				return (ReconciliationVariance + TransactionDistributionAmount)

		DerivedHeaderBudgetErrorCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (HeaderBudgetEditErrorExists)
				return "(" + instance count of HeaderBudgetEditErrorRel + ")"
			else
				return ""

		DerivedWarningBudgetErrorCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (DistributionBudgetEditErrorExists)
				return "(" + instance count of DistributionBudgetEditErrorRel + ")"
			else
				return ""

		DerivedFirstErrorMessage is a DerivedField
			type is Alpha size up to 200
        	restricted
        	if (HeaderBudgetEditErrorRel exists)
        		return MouseOverBudgetErrorMessage
			if (DistributionBudgetEditErrorRel exists)
				return MouseOverBudgetErrorMessage
				
		MouseOverBudgetErrorMessage is a MessageField
			restricted
			"BudgetErrorsExist;SeeBudgetErrorTabForDetails"

		TransactionPostingPeriod is a DerivedField
			type is like GeneralLedgerCalendarPeriod
			LocalPostingDate = TransactionPostingDate
			return first GeneralLedgerClosePeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
		
		TransactionPostingPeriodDate is a DerivedField
			type is Date
			LocalPostingDate = TransactionPostingDate
			return first GeneralLedgerClosePeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
			
		VoidPostingPeriod is a DerivedField
			type is like GeneralLedgerCalendarPeriod
			if (VoidDate entered)
				LocalPostingDate = VoidDate
				return first GeneralLedgerClosePeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
		
		VoidPostingPeriodDate is a DerivedField
			type is Date
			if (VoidDate entered)
				LocalPostingDate = VoidDate
				return first GeneralLedgerClosePeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
					
	Transient Fields
		TransientFromCurrency		is a FromCurrency
			derive value from CashManagementAccount.Currency

	Local Fields
		LocalActionSubmitForApproval			is Boolean
		LocalActionUnreleaseToRelease			is Boolean
		LocalPostingDate						is a PostingDate
		BankStatementReleaseAllAction			is Boolean
															
	Relations
		UnreleasedDistributionRel is a NonCashLedgerDistribution set
			Instance Selection
				where (related.Status.Entered)

		ReleasedDistributionRel is a NonCashLedgerDistribution set
			Instance Selection
				where (related.Status.Released
				or     related.Status.Posted)

		PendingApprovalDistributionRel is a NonCashLedgerDistribution set
			Instance Selection
				where (related.Status.PendingApproval)

		NonCashLedgerDistributionsRel
            one-to-many relation to NonCashLedgerDistribution
            Field Mapping uses symbolic key
            	related.CashManagementGroup 	= CashManagementAccount.CashManagementGroup	
                related.CashManagementAccount 	= CashManagementAccount
            Instance Selection
                where (related.NonCashLedgerTransaction = NonCashLedgerTransaction)

		HeaderBudgetEditErrorRel
			one-to-many relation to BudgetEditError
			Field Mapping uses ByBudgetGroup
				related.FinanceEnterpriseGroup			= CashManagementGroup
				related.BudgetEditError.BudgetEditGroup	= UniqueID

		DistributionBudgetEditErrorRel
			one-to-many relation to BudgetEditError
			Field Mapping uses ByHeaderUniqueID
				related.FinanceEnterpriseGroup			= CashManagementGroup
				related.HeaderUniqueID                  = UniqueID

		GeneralLedgerSystemCodeRel		
			one-to-one relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.GeneralLedgerSystemCode	= "CB"	

		GLCommitRel		
			one-to-many relation to GLCommit
			Field Mapping uses BySystemAndHeaderUniqueID	
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.HeaderUniqueID			= UniqueID



		OpenGLCommitDrillRel	
			one-to-many relation to GLCommit
			Field Mapping uses BySystemAndHeaderUniqueID
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.HeaderUniqueID			= UniqueID
			Instance Selection
				where (related.Status = 0
				or     related.Status = 2
				or     related.Status = 3)
				










		GLCommitDocumentsRel	
			one-to-one relation to GLCommitDocument
			Field Mapping uses ByHeaderObjectReference
				related.HeaderObjectReference = reference to this instance
								  
		BudgetTemplateGroupTotalRel
			one-to-many relation to BudgetTemplateGroupTotal
			Field Mapping uses ByBudgetGroup
				related.FinanceEnterpriseGroup                    = CashManagementGroup
				related.BudgetTemplateGroupTotal.BudgetEditGroup  = UniqueID
		
		GeneralLedgerClosePeriodRel
			one-to-many relation to GeneralLedgerClosePeriod
			Field Mapping uses ByEndDate
				related.FinanceEnterpriseGroup		  	= CashManagementGroup
				related.GeneralLedgerCloseConfiguration = CashManagementAccount.LegalEntity.AccountingEntity.CloseConfiguration
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date >= LocalPostingDate)
				
	Sets
		ByTransactionNumber
			Sort Order
				CashManagementGroup
				CashManagementAccount
				TransactionNumber
				NonCashLedgerTransaction

		ByTransactionDate
			Sort Order
				CashManagementGroup
				CashManagementAccount
				TransactionDate
				NonCashLedgerTransaction

		ByStatus
			Sort Order
				CashManagementGroup
				CashManagementAccount
				Status
				TransactionDate
				ReconciledDate
				NonCashLedgerTransaction
 				TransactionAmount
				VoidTransaction
				VoidDatePeriod
 				TransactionPostingDatePeriod
				DebitCreditIndicator

    Conditions
    	RecordExists
    		restricted
    		when (NonCashLedgerTransaction exists)
    		
		CanBeUpdated
			restricted
			when (Status.Open
			and   !BudgetEditInProgress			
			and   !BankStatementReconciliation set exists)

		DistributionsOutOfBalance
			restricted
			when (OutOfBalanceAmount != 0)

		DistributionsCanBeReleased
			restricted
			when (!CashManagementGroup.BankStatementDistribApprovalRequired
			and   !BankStatement.StatementStatus.Unreconciled
			and   !BudgetEditInProgress			
			and   UnreleasedDistributionRel exists
			and   !DistributionsOutOfBalance)

		HasReleasedDistributions
			restricted
			when (ReleasedDistributionRel exists)
			
		NonCashTransactionSearchCondition
			restricted
            when ((!TransactionDateRange entered
            or     TransactionDateRange entered
            and    TransactionDate within TransactionDateRange)
            and	  (!SearchAmountRange entered
            or	   SearchAmountRange entered
            and    TransactionAmount within SearchAmountRange))
 
 		BudgetEditingInformationExists
			restricted
			when (BudgetTemplateGroupTotalRel exists)
		
		BudgetEditErrorExists
			when (HeaderBudgetEditErrorRel exists
			or    DistributionBudgetEditErrorRel exists)
			
		HeaderBudgetEditErrorExists
			restricted
			when (HeaderBudgetEditErrorRel exists)
			
		DistributionBudgetEditErrorExists
			restricted
			when (DistributionBudgetEditErrorRel exists)
		
		BudgetEditInProgress
			restricted
        	when (BudgetEditProcessing.InProcess)
        
        BudgetEditFailure
        	restricted
    		when (BudgetEditProcessing.Failure)

		GLCommitRelExists
			restricted
			when (GLCommitRel exists)

		OpenGLCommitRelExists
			restricted
			when (OpenGLCommitDrillRel exists)
			
		IsValidForActorContext
			restricted
			when ((actor.context.FinanceEnterpriseGroup != ""
			and   CashManagementGroup = actor.context.FinanceEnterpriseGroup)
			or   (actor.context.FinanceEnterpriseGroup = ""))

		HasReconciliationDetails
			restricted
			when (first BankStatementReconciliation set.ReconMatchNumber entered)
			 
	Field Rules
		TransactionNumber
			required
			
		TransactionDate
			required
			
		TransactionAmount
			required
			if (!VoidTransaction)
				if (DebitCreditIndicator.Debit)
					SignedAmount	= (TransactionAmount	* -1)
				else
					SignedAmount	= TransactionAmount
			else
				if (DebitCreditIndicator.Credit)
					SignedAmount	= (TransactionAmount	* -1)
				else
					SignedAmount	= TransactionAmount
				
		DebitCreditIndicator
			required

		Description
			required
		


			
		ReconciledDate
			force default to BankStatement.StatementDate

		TransactionPostingDate
			default to TransactionDate

		TransactionPostingDatePeriod
			force default to TransactionPostingPeriod

		VoidDatePeriod
			force default to VoidPostingPeriod
			
	Rule Blocks
		DistributionBalancingAndOffset



			if (!OffsetDistributionCreated)
				invoke Create NonCashLedgerDistribution
					fill in fields from this instance
					invoked.GLFinanceCodeBlock			= CashManagementAccount.GLAccount
					invoked.StatementDate				= BankStatement.StatementDate
					invoked.PostingDate					= BankStatement.CashLedgerPostingDate
					if (DebitCreditIndicator.Debit)
						invoked.GLTransactionAmount		= ReconciliationVariance * -1
						invoked.GLBaseAmount			= BaseTotalDistributionAmount * -1
					else
						invoked.GLTransactionAmount		= ReconciliationVariance
						invoked.GLBaseAmount			= BaseTotalDistributionAmount
					invoked.CashAccountDistribution				= true
					invoked.BypassBudgetAndCommitmentProcessing = true
					invoked.BypassUnpostBankStatement			= true		
				OffsetDistributionCreated	= true

		ReleaseExitRules

			if (GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
			or 	GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
				invoke UpdateToReleased GLCommit
					invoked.PrmFinanceEnterpriseGroup	= CashManagementGroup  
					invoked.PrmUniqueID					= UniqueID
					invoked.PrmAccountingEntity			= CashManagementAccount.LegalEntity.AccountingEntity


		PerformBudgetEditsForApprovalOrRelease






			if ((GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
			or   GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
        	and  GLCommitRelExists)
 				BudgetEditProcessing = BudgetEditProcessing.InProcess                   
				invoke Delete HeaderBudgetEditErrorRel
				invoke Delete DistributionBudgetEditErrorRel 
				invoke EditTotalsRoute BudgetTemplateGroupTotal 	
					invoked.PrmFinanceEnterpriseGroup    															= CashManagementGroup
					invoked.PrmBudgetEditGroup           															= UniqueID
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBNonCashLedgerTran.CashManagementAccount		= CashManagementAccount
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBNonCashLedgerTran.NonCashLedgerTransaction	= NonCashLedgerTransaction
					invoked.PrmBusinessClassName  					              									= "NonCashLedgerTransaction"	
					if (LocalActionUnreleaseToRelease)
						invoked.PrmActionCode											= "R"  
						invoked.PrmEditContext                      					= "Release"	
						if  (GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit)
							invoked.PrmMode												= BudgetEditMode.Hard
						else	
							invoked.PrmMode												= BudgetEditMode.UpdateOnly
					else	 
					if (LocalActionSubmitForApproval)
						invoked.PrmActionCode											= "A" 	
						invoked.PrmEditContext                      					= "ReleaseFromApproval"	
						if (GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit)   
							invoked.PrmMode												= BudgetEditMode.Hard
						else	
							invoked.PrmMode												= BudgetEditMode.UpdateOnly
			else
				BudgetEditProcessing = BudgetEditProcessing.NotInProcessing			
				if (LocalActionUnreleaseToRelease)
					invoke FinalRelease
				else	
				if (LocalActionSubmitForApproval)
					invoke FinalApproval

  	Actions
  		LoadTransactionsIntoReconciliation is a Set Action
  			default label is untranslatable
  			restricted
  			completion message is "LoadTransactionsIntoReconciliationHasBeenSubmittedToTheQueueForProcessing"
  			Parameters
  				PrmCashManagementGroup			is a CashManagementGroup
  				PrmCashManagementAccount		is a CashManagementAccount
  				PrmBankStatement				is a BankStatement
  				PrmLastNonCashLedgerTransaction	is a NonCashLedgerTransaction
  				PrmMassStatementLoad			is Boolean
  				PrmMassAccountLoad				is Boolean
  				
  			Local Fields
  				BackgroundGroup					is AlphaUpper up to 50
  					
  			Instance Selection
  				where (CashManagementGroup		= PrmCashManagementGroup
  				and    CashManagementAccount	= PrmCashManagementAccount
  				and    !Status.Reconciled
				and	   !BankStatementReconciliation set exists
  				and    PrmBankStatement			= PrmBankStatement) 
  				
 			Sort Order
				CashManagementGroup
				CashManagementAccount
				Status

  			Action Rules
				Empty Set Rules
					if (PrmBankStatement entered)
						increment PrmBankStatement.CompletedReconLoadProcesses
						if (PrmBankStatement.CompletedReconLoadProcesses = PrmBankStatement.TotalReconciliationProcesses)
							if (PrmMassStatementLoad)
								BackgroundGroup = PrmCashManagementGroup + current corporate date
							else
								BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + PrmBankStatement
							invoke ReconcileStatementLines BankStatementReconciliation in background group(BackgroundGroup)
								invoked.PrmCashManagementGroup		= PrmCashManagementGroup
								invoked.PrmCashManagementAccount	= PrmCashManagementAccount
								invoked.PrmBankStatement			= PrmBankStatement
					else
						increment PrmCashManagementAccount.CompletedReconLoadProcesses
						if (PrmCashManagementAccount.CompletedReconLoadProcesses = PrmCashManagementAccount.TotalReconciliationProcesses)
							if (PrmMassAccountLoad)
								BackgroundGroup = PrmCashManagementGroup + current corporate date
							else
								BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + current corporate date
							invoke ReconcileStatementLines PrmCashManagementAccount in background group(BackgroundGroup)
								invoked.PrmMassAccountLoad	= PrmMassAccountLoad
								
				Set Rules
					Exit Rules
						if (PrmBankStatement entered)
							increment PrmBankStatement.CompletedReconLoadProcesses
							if (PrmBankStatement.CompletedReconLoadProcesses = PrmBankStatement.TotalReconciliationProcesses)
								if (PrmMassStatementLoad)
									BackgroundGroup = PrmCashManagementGroup + current corporate date
								else
									BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + PrmBankStatement
								invoke ReconcileStatementLines BankStatementReconciliation in background group(BackgroundGroup)
									invoked.PrmCashManagementGroup		= PrmCashManagementGroup
									invoked.PrmCashManagementAccount	= PrmCashManagementAccount
									invoked.PrmBankStatement			= PrmBankStatement
						else
							increment PrmCashManagementAccount.CompletedReconLoadProcesses
							if (PrmCashManagementAccount.CompletedReconLoadProcesses = PrmCashManagementAccount.TotalReconciliationProcesses)
								if (PrmMassAccountLoad)
									BackgroundGroup = PrmCashManagementGroup + current corporate date
								else
									BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + current corporate date
								invoke ReconcileStatementLines PrmCashManagementAccount in background group(BackgroundGroup)
									invoked.PrmMassAccountLoad	= PrmMassAccountLoad
										
  				Instance Rules

					invoke Create BankStatementReconciliation
						fill in fields from this instance
						invoked.LineType	= 3 
						if (PrmCashManagementAccount.ReconcileToOtherSystem.Secondary)
							invoked.SecondaryReconTransaction	= true
						if (VoidTransaction)
							invoked.Function	= 1 

  		Create is a Create Action
  					
  		Update is an Update Action
  			valid when (CanBeUpdated)
  			
  		ReconcileTransaction is an Instance Action
  			default label is untranslatable
  			restricted
  			Parameters
  				PrmReconciledAmount	is an InternationalAmount
  				PrmBankStatement	is a BankStatement
  				PrmTransactionDate	is Date	

			Action Rules
				Status				= 1
				BankStatement		= PrmBankStatement
  				ReconciledAmount	= PrmReconciledAmount
  				ReconciledDate		= PrmTransactionDate	
				if (ReconciliationVariance entered)
					invoke Create NonCashLedgerDistribution
						invoked.CashManagementGroup			= CashManagementGroup
						invoked.CashManagementAccount		= CashManagementAccount
						invoked.NonCashLedgerTransaction	= NonCashLedgerTransaction
						invoked.StatementDate				= PrmBankStatement.StatementDate
						invoked.PostingDate					= PrmBankStatement.CashLedgerPostingDate
						invoked.GLFinanceCodeBlock			= CashManagementAccount.ReconVariancePostingAccount
						if (DebitCreditIndicator.Debit)
							invoked.GLTransactionAmount			= ReconciliationVariance
						else
							invoked.GLTransactionAmount			= (ReconciliationVariance * -1)
						invoked.BankStatement				= PrmBankStatement
						
  		UnreconcileTransaction is an Instance Action
  			default label is untranslatable
  			restricted
  			Action Rules
  				constraint (!PendingApprovalDistributionRel exists)
  					"CannotUnreconcileWhenVarianceDistributionsArePendingApproval"
  				constraint (!ReleasedDistributionRel exists)
  					"DistributionsAreReleasedOrPosted;CannotUnreconcile"
				Status				= 0

				OffsetDistributionCreated	= false
				initialize ReconciledAmount
				initialize BankStatement
				initialize ReconciledDate
				
				invoke Delete Entered UnreleasedDistributionRel

						
		UpdateDocumentTotals is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmDocumentCurrencyTotals		is a DocumentCurrencyTotals
			Action Rules
				BaseTotalDistributionAmount = PrmDocumentCurrencyTotals			

		ReleaseAllStatementDistributions is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
				PrmCashManagementAccount	is a CashManagementAccount
				PrmBankStatement			is a BankStatement
				PrmRequiresApproval			is Boolean
					
			Parameter Rules
				PrmCashManagementAccount	required
				PrmBankStatement			required
				
			Instance Selection
				where (CashManagementGroup			= PrmCashManagementGroup
				and    CashManagementAccount		= PrmCashManagementAccount
				and    BankStatement				= PrmBankStatement
				and   !BudgetEditInProgress										
				and    UnreleasedDistributionRel	exists
				and    !DistributionsOutOfBalance)
			
			Action Rules



						
				Instance Rules

					BankStatementReleaseAllAction = true	

					if (PrmRequiresApproval)
						include DistributionBalancingAndOffset 
						invoke SetToPendingApproval Entered UnreleasedDistributionRel
					else
						invoke ReleaseDistributions  

		ReleaseDistributions is an Instance Action
			valid when (DistributionsCanBeReleased)
			Action Rules
				constraint (all UnreleasedDistributionRel.DistributionAmount entered)
					"ReconciliationVarianceHasDistributionsWithZeroAmount:CannotRelease"
				LocalActionUnreleaseToRelease = true
				include PerformBudgetEditsForApprovalOrRelease



		FinalRelease is an Instance Action		//	"Unreleased" State
			default label is untranslatable
			restricted	
			Entrance Rules
			Action Rules
				BudgetEditProcessing = BudgetEditProcessing.NotInProcessing
				include DistributionBalancingAndOffset

				invoke ReleaseDistribution Entered UnreleasedDistributionRel
				if (!BankStatementReleaseAllAction)	
					invoke UpdatePostedStatus BankStatement
			Exit Rules
				include ReleaseExitRules


		ApproveAllStatementDistributionsByLine is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
				PrmCashManagementAccount	is a CashManagementAccount
				PrmBankStatement			is a BankStatement
					
			Parameter Rules
				PrmCashManagementAccount	required
				PrmBankStatement			required
				
			Instance Selection
				where (CashManagementGroup			= PrmCashManagementGroup
				and    CashManagementAccount		= PrmCashManagementAccount
				and    BankStatement				= PrmBankStatement)
			
			Action Rules
				Instance Rules
					invoke ReleaseApprovedDistributions
				

		ReleaseApprovedDistributions is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				LocalActionSubmitForApproval = true
				include PerformBudgetEditsForApprovalOrRelease                                         


		FinalApproval is an Instance Action
			default label is untranslatable
			restricted	
			Action Rules
				BudgetEditProcessing = BudgetEditProcessing.NotInProcessing
				include DistributionBalancingAndOffset
				invoke ReleaseDistribution Entered UnreleasedDistributionRel
				invoke ReleaseDistribution PendingApproval PendingApprovalDistributionRel
			Exit Rules
				include ReleaseExitRules
				
		UpdateBudgetResults is an Instance Action	
			default label is untranslatable
			restricted
			Parameters
				ParmSuccess    	is Boolean
				ParmActionCode	is an ActionCode
			Action Rules
				if (ParmSuccess)
					BudgetEditProcessing = BudgetEditProcessing.Success
					if (ParmActionCode.Release)  
						invoke FinalRelease
					else
					if (ParmActionCode.Approve) 
						invoke FinalApproval
				else
					BudgetEditProcessing = BudgetEditProcessing.Failure				  			

		RebuildCommitmentTotals is an Instance Action		
			default label is untranslatable
			restricted
			Parameters
				IsBatch        is Boolean
				BudgetEditMode
				BudgetEditTotalsProcessing
				ActionCode
			Action Rules
				invoke Delete HeaderBudgetEditErrorRel
				invoke Delete DistributionBudgetEditErrorRel
				invoke Delete BudgetTemplateGroupTotalRel
				for each UnreleasedDistributionRel
					invoke RecalculateCommitmentAmounts each
				invoke EditTotalsRoute BudgetTemplateGroupTotal 	
					invoked.PrmFinanceEnterpriseGroup    															= CashManagementGroup
					invoked.PrmBudgetEditGroup           															= UniqueID
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBNonCashLedgerTran.CashManagementAccount		= CashManagementAccount
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBNonCashLedgerTran.NonCashLedgerTransaction	= NonCashLedgerTransaction
					invoked.PrmBusinessClassName  					              									= "NonCashLedgerTransaction"
					if (ActionCode.Release)
						invoked.PrmActionCode					= "R"  
						invoked.PrmEditContext                  = "Release"
						invoked.PrmMode							= BudgetEditMode.Hard
					else	 
					if (ActionCode.Approve)
						invoked.PrmActionCode					= "A" 	
						invoked.PrmEditContext                  = "ReleaseFromApproval"
						invoked.PrmMode							= BudgetEditMode.Hard






  		Delete is a Delete Action
   			valid when (CanBeUpdated)
			Entrance Rules
				if (GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
				or 	GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
					invoke Delete HeaderBudgetEditErrorRel
					invoke Delete DistributionBudgetEditErrorRel 
							 		
  		Purge is a Purge Action
  			restricted
  			
  		NonCashLedgerTransactionPurge is a Set Action
			restricted
			Parameters
				PrmCashManagementGroup       is a CashManagementGroup
				PrmCashManagementAccount     is a CashManagementAccount
				PrmNonCashLedgerTransactionCutOffDate is Date
				
			Parameter Rules

			Instance Selection
				where (CashManagementGroup		    =  PrmCashManagementGroup
				and    CashManagementAccount        =  PrmCashManagementAccount
				and    Status.Reconciled
				and    TransactionDate               <= PrmNonCashLedgerTransactionCutOffDate)
				
			Action Rules
				Instance Rules
					invoke Purge NonCashLedgerDistributionsRel
					invoke Purge

		UpdatePostingPeriods is a Set Action
			restricted
			default label is "UpdateNonCashLedgerTransactionPostingPeriods"

			Parameters
				PrmCashManagementGroup       is a CashManagementGroup
					default label is "CashManagementGroup"
				
			Parameter Rules
				PrmCashManagementGroup
					required

			Sort Order is ByStatus

			Instance Selection
				where (CashManagementGroup = PrmCashManagementGroup
				and   (TransactionPostingDatePeriod not entered
				or    (VoidDate entered
				and    VoidDatePeriod not entered)))
				
			Action Rules
				Instance Rules
					TransactionPostingDatePeriod = TransactionPostingPeriod
					VoidDatePeriod = VoidPostingPeriod
