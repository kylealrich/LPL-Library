RecallOrganization is a BusinessClass
    owned by recall
    prefix is RMRO

    Ontology
    	symbolic key is RecallOrganization
    	
    Persistent Fields
    	Description 			is Alpha size 250
    	RecallDomain
    	InventoryCompany
    		default label is "Company"
    		disable surrogates
    	RequestingLocation		
    	InventoryLocation		
    	IssueAccountingUnit		is like AccountingUnit 
    	Active					is Boolean
   	
   	Local Fields
		RecallGroupField
		LocalRecallNotice				is a RecallNotice
		LocalRecallUser					is a RecallUser
		NewParentOrganization			is a RecallOrganization
		LocalRecallGroup				is AlphaUpper size 4
		LocalPeriod			    		is Numeric size 5
		LocalRecallNoticeTask		  	is a RecallNoticeTask view
		LocalRecallNoticeTaskQuestion 	is a RecallNoticeTaskQuestion view
		LocalTask                       is a RecallNoticeTask
		LocalRecallTaskInstruction      is a RecallTaskInstruction
		LocalRecallAdhocUser            is like RecallAdhocUser		
	Context Fields
		ContextRecallUser		is a RecallUser
		RecallReport
		RecallReportPeriod
		ContextRecallNotice     is a RecallNotice
		ContextRecallAdhocUser  is a RecallAdhocUser

	Derived Fields 
   		DerivedEmptySet is a DerivedField
   			type is Boolean
   			restricted
   			return false
   		
   		BuildStructureMessage is a MessageField
   			restricted
	   		"Note:OrganizationsWillBeBuiltForAllCompaniesAssociatedWithTheGroupWhenNotEntered"
   		
   		DerivedOrganizationDescription is a DerivedField
   			type is Alpha size up to 500
   			restricted
   			if (HasParentOrganization)
   				return ParentOrganization.Description + "-" + RecallOrganization.Description
   			else
   				return RecallOrganization.Description
   		
   		ResponderForOrganization is a DerivedField
			type is like RecallUser
   			for each RecallOrganization and ancestors
				if (each.RespondersExistRel exists)
					return each.RespondersExistRel.RecallUser
					end for each
   		
   		ResponderForThisOrganization is a DerivedField
			type is like RecallUser
   			restricted
			return first RespondersExistRel.RecallUser 
   		
   		ResponderName is a DerivedField
   			type is Alpha size 100 
   			return RecallUserResponderRel.RecallUserName
   			    
		ContextRecallUserIsWatcher is a DerivedField
			type is Boolean
   			for each RecallOrganization and ancestors
   				for each each.RecallOrganizationUser set
   					if (each.RecallUser = ContextRecallUser
	   				and each.TypeOfUser.Watcher
   					and	each.RecallUser.Active)
   						return true
   						end for each
   						
		ContextRecallUserIsResponder is a DerivedField
			type is Boolean
   			for each RecallOrganization and ancestors
   				for each each.RecallOrganizationUser set
   					if (each.RecallUser = ContextRecallUser
	   				and each.TypeOfUser.Responder
   					and	each.RecallUser.Active)
   						return true
   						end for each

		ContextRecallUserIsReviewer is a DerivedField
			type is Boolean
   			for each RecallOrganization and ancestors
   				for each each.RecallOrganizationUser set
   					if (each.RecallUser = ContextRecallUser
	   				and each.TypeOfUser.Reviewer
   					and	each.RecallUser.Active)
   						return true
   						end for each

		NewParentIsAChild is a DerivedField
			type is Boolean
			restricted
   			for each NewParentOrganization and ancestors
				if (each.ParentOrganization = RecallOrganization)
					return true
					end for each
		
		Period1NoticeCount is a DerivedField
			type is Numeric 5
			LocalPeriod = 1
			return (instance count of LocalPeriodNoticeRel)
			
		Period2NoticeCount is a DerivedField
			type is Numeric 5
			LocalPeriod = 2
			return (instance count of LocalPeriodNoticeRel)
			
		Period3NoticeCount is a DerivedField
			type is Numeric 5
			LocalPeriod = 3
			return (instance count of LocalPeriodNoticeRel)
			
		Period4NoticeCount is a DerivedField
			type is Numeric 5
			LocalPeriod = 4
			return (instance count of LocalPeriodNoticeRel)
			
		Period5NoticeCount is a DerivedField
			type is Numeric 5
			LocalPeriod = 5
			return (instance count of LocalPeriodNoticeRel)
			
		Period6NoticeCount is a DerivedField
			type is Numeric 5
			LocalPeriod = 6
			return (instance count of LocalPeriodNoticeRel)
			
		Period7NoticeCount is a DerivedField
			type is Numeric 5
			LocalPeriod = 7
			return (instance count of LocalPeriodNoticeRel)
			
		Period8NoticeCount is a DerivedField
			type is Numeric 5
			LocalPeriod = 8
			return (instance count of LocalPeriodNoticeRel)
			
		Period9NoticeCount is a DerivedField
			type is Numeric 5
			LocalPeriod = 9
			return (instance count of LocalPeriodNoticeRel)
			
		Period10NoticeCount is a DerivedField
			type is Numeric 5
			LocalPeriod = 10
			return (instance count of LocalPeriodNoticeRel)
			
		Period11NoticeCount is a DerivedField
			type is Numeric 5
			LocalPeriod = 11
			return (instance count of LocalPeriodNoticeRel)
			
		Period12NoticeCount is a DerivedField
			type is Numeric 5
			LocalPeriod = 12
			return (instance count of LocalPeriodNoticeRel)
			
		AnyPeriodNoticeCount is a ComputeField
			type is Numeric 5
			default label is "TotalNotices"
			(instance count of AnyPeriodNoticeRel)

		AnyPeriodNoticePercent is a ComputeField
			type is Percent 3.0
			restricted
			(AnyPeriodNoticeCount / RecallGroup.AnyPeriodOrganizationCount)
				
		DescriptionAndCount is a DerivedField
			type is like Description
			restricted
			return InventoryLocation + " " + Description + " (" + AnyPeriodNoticeCount + ")"
			
   	Field Rules
   		Description
   			required
   				"DescriptionIsRequired"
   			if (RequestingLocation entered)
   				default to RequestingLocation.Name
   			else
   			if (InventoryLocation entered)
   				default to InventoryLocation.Name
   			else
   			if (InventoryCompany entered)
   				default to InventoryCompany.Name
   		
   		RecallDomain
			if (RecallDomain changed)
				invoke Update RecallOrganizationUser set
					invoked.RecallDomain = RecallDomain 
							
   		InventoryCompany
   			initial value is ParentOrganization.InventoryCompany
   			
   			if (HasParentOrganization)
   				constraint (InventoryCompany = ParentOrganization.InventoryCompany)
   					"Company<InventoryCompany>MustMatchCompanyDefinedForParentOrganization<ParentOrganization.InventoryCompany>"
   			
   			constraint (InventoryCompany.ItemGroup = RecallGroup)
   				"Company<InventoryCompany>IsNotDefinedForItemGroup<RecallGroup>"
   				
   			if (RequestingLocation entered
    		or	InventoryLocation entered)
    			required
    				"CompanyIsRequired"
   		
   			if (InventoryCompany changed)
    			invoke Update RecallOrganizationUser set
					invoked.InventoryCompany = InventoryCompany
					initialize invoked.RequestingLocation
					initialize invoked.InventoryLocation
					
   		RequestingLocation
			if (DoNotHaveSameLocation)
				confirmation required
					"RequestingLocation<RequestingLocation>IsDifferentThanInventoryLocation<InventoryLocation>;WouldYouLikeToContinue?"
						
    		if (RequestingLocation changed)
    			invoke Update RecallOrganizationUser set
					invoked.RequestingLocation = RequestingLocation
					
    	InventoryLocation
   					
   			if (InventoryLocation changed)
    			invoke Update RecallOrganizationUser set
					invoked.InventoryLocation = InventoryLocation
							
   		Active
            default to true
    
    Conditions
    	HasParentOrganization
    		restricted
    		when (ParentOrganization entered)
    	
    	RecallOrganizationExists
    		restricted
    		when (RecallOrganization exists)
    	
    	HasDomainOrLocation
    		restricted
    		when (RecallDomain entered
    		or	  RequestingLocation entered
    		or	  InventoryLocation entered)
    	
    	CompanyOnly 
			restricted 
			when (RequestingLocation !entered
			and   InventoryLocation  !entered)
		
		HasLocationsDefined
    		restricted
			when (RequestingLocation entered
			or	  InventoryLocation entered)
				
    	DoNotHaveSameLocation
    		restricted
    		when (RequestingLocation entered
    		and   InventoryLocation entered
    		and	  RequestingLocation != InventoryLocation)
    	
    	NoUsersDefined
    		restricted
    		when (HasDomainOrLocation
    		and   !RecallOrganizationUser set exists)
    		
    	NoRespondersDefined
    		restricted
    		when (HasLocationsDefined
    		and   !ResponderForOrganization entered)
    		
    	HasResponder
    		restricted
    		when (RespondersExistRel exists)
    	
   		OrganizationUserHasTaskForNotice
   			restricted
   			when (ExistingRecallNoticeTaskRel exists)
   		
   		HasReviewers
   			restricted
   			when (ReviewersExistRel exists)
   
    	HasChild
    		restricted
    		when (RecallOrganization children exist)
    		
    	NoticeOrganizationDoesNotExist
    		restricted
    		when (OrganizationForThisNoticeRel !exists)
    		
    	BypassRuleForTheseFiles
    		restricted
    		when (parentcontext.name = "RecallNoticeOrganization"
    		or    parentcontext.name = "RecallOrganization")
    	
    	HasOtherManuallyCreatedTask
    		restricted
    		when (ManualRecallNoticeTaskRel exists)
    	
    	CanCreateTask
    		restricted
    		when (ContextRecallNotice.PendingStatus
    		and   RecallGroup.AllowOrganizations)

		OrganizationAttachedToUser 
			restricted 
			when (AdhocUserContextRel exists)
    			    	
  	Attach Rules
		constraint (Active
		or          BypassRuleForTheseFiles)
			"OrganizationIsInactive"
	
	Relations
		RecallUserHelperListRel 
			one-to-many relation to RecallUser
			Field Mapping uses symbolic key
				related.HROrganization = RecallGroup.BusinessGroup.FinanceEnterpriseGroup.HROrganization

		InventoryCompaniesByItemGroupRel
   			one-to-many relation to InventoryCompany
   			Field Mapping uses Set2
   				related.ItemGroup = RecallGroupField.RecallGroup
	
		OtherRequestingLocationRel
			one-to-many relation to RecallOrganization
			Field Mapping uses ByRequestingLocation
   				related.InventoryCompany   = InventoryCompany
   				related.RequestingLocation = RequestingLocation
   			Instance Selection
   				where (related.RecallOrganization != RecallOrganization
   				and    related.Active)
		
		OtherInventoryLocationRel
			one-to-many relation to RecallOrganization
			Field Mapping uses ByInventoryLocation
   				related.InventoryCompany  = InventoryCompany
   				related.InventoryLocation = InventoryLocation
   			Instance Selection
   				where (related.RecallOrganization != RecallOrganization
   				and    related.Active)
   				
		OtherAllRequestingLocationRel
			one-to-many relation to RecallOrganization
			Field Mapping uses ByRequestingLocation
   				related.InventoryCompany   = InventoryCompany
   				related.RequestingLocation = RequestingLocation
   			Instance Selection
   				where (related.RecallOrganization != RecallOrganization)
		
		OtherAllInventoryLocationRel
			one-to-many relation to RecallOrganization
			Field Mapping uses ByInventoryLocation
   				related.InventoryCompany  = InventoryCompany
   				related.InventoryLocation = InventoryLocation
   			Instance Selection
   				where (related.RecallOrganization != RecallOrganization)

		RecallNoticeTaskRel
			one-to-many relation to RecallNoticeTask
			Field Mapping uses symbolic key
				related.RecallGroup = RecallGroup
			Instance Selection
				where (related.Owner  = any RespondersExistRel.RecallUser
				or     related.Owner  = any ReviewersExistRel.RecallUser)

		ManualRecallNoticeTaskRel
			one-to-many relation to RecallNoticeTask
			Field Mapping uses symbolic key
				related.RecallGroup 	= RecallGroup
				related.RecallNotice	= LocalRecallNotice
			Instance Selection
				where (related.ManuallyCreatedTask = true)			

    	ExistingRecallNoticeTaskRel
    		one-to-one relation to RecallNoticeTask
    		Field Mapping uses ByOwner
				related.RecallGroup		= RecallGroup
				related.RecallNotice	= LocalRecallNotice
				related.Owner			= LocalRecallUser		

		RespondersExistRel  
			one-to-many relation to RecallOrganizationUser
   			Field Mapping uses ByOrganization
   				related.RecallGroup      	= RecallGroup
   				related.RecallOrganization 	= RecallOrganization
   			Instance Selection
   				where (related.TypeOfUser.Responder)
		
		ReviewersExistRel 
			one-to-many relation to RecallOrganizationUser
   			Field Mapping uses ByOrganization
   				related.RecallGroup      	= RecallGroup
   				related.RecallOrganization 	= RecallOrganization
   			Instance Selection
   				where (related.TypeOfUser.Reviewer)

		OrganizationNoticesRel
			one-to-many relation to RecallNoticeOrganization
			Field Mapping uses ByOrganization
				related.RecallGroup        = RecallGroup
				related.RecallOrganization = RecallOrganization
   		
   		NoticesForCompanyRel
   			one-to-many relation to RecallNoticeOrganization
			Field Mapping uses ByCompany
				related.RecallGroup        								= RecallGroup
			Instance Selection
				where (related.RecallOrganization.InventoryCompany 		= RecallOrganization.InventoryCompany)
   		
		OrganizationForThisNoticeRel
			one-to-one relation to RecallNoticeOrganization
			Field Mapping uses symbolic key
				related.RecallGroup                         = RecallGroup
				related.RecallNotice                        = ContextRecallNotice
				related.RecallOrganization                  = RecallOrganization 

		CountsForAnOrganizationRel
			one-to-many relation to RecallProductTaskItem
			Field Mapping uses ByOrganization
				related.RecallGroup                         = RecallGroup
				related.Company                             = InventoryCompany
				related.InventoryLocation                   = InventoryLocation
				related.RequestingLocation                  = RequestingLocation
			Instance Selection
				where (RecallGroup.EnterQuantitiesByLocation
				and   (related.HasQuantities
				or     related.ZeroQuantityFound = true))			

   		RecallUserResponderRel 
			one-to-one relation to RecallUser
			Field Mapping uses symbolic key
				related.HROrganization = RecallGroup.BusinessGroup.FinanceEnterpriseGroup.HROrganization
				related.RecallUser  = ResponderForOrganization
						
   		OrganizationWatchersRel
   			one-to-many relation to RecallOrganizationUser 
   			Field Mapping uses ForWatcher
   				related.RecallGroup             = RecallGroup
   				related.RecallOrganization      = RecallOrganization
   			Instance Selection
   				where (related.ActiveUser)

    	RecallNotificationRel
    		one-to-one relation to RecallNotification
    		Field Mapping uses symbolic key
    			related.RecallGroup		= RecallGroup			
				related.RecallNotice	= LocalRecallNotice			
				related.RecallUser		= LocalRecallUser
    	
		RecallOrganizationUserRel
			one-to-one relation to RecallOrganizationUser
			Field Mapping uses symbolic key
				related.RecallGroup			= LocalRecallGroup
				related.RecallOrganization	= RecallOrganization
				related.RecallUser			= LocalRecallUser

  		OrganizationAdhocWatchersRel
   			one-to-many relation to RecallAdhocUserOrganization 
   			Field Mapping uses symbolic key
   				related.RecallGroup             = RecallGroup
   				related.RecallOrganization      = RecallOrganization
   			Instance Selection
   				where (related.RecallAdhocUser.Active)

		RecallOrganizationAdhocUserRel
			one-to-many relation to RecallAdhocUserOrganization
			delete cascades
			Field Mapping uses symbolic key
				related.RecallGroup				= RecallGroup
				related.RecallOrganization      = RecallOrganization
	
		AdhocUserContextRel
			one-to-one relation to RecallAdhocUserOrganization
			Field Mapping uses symbolic key
				related.RecallGroup			= RecallGroup
				related.RecallOrganization	= RecallOrganization
				related.RecallAdhocUser		= ContextRecallAdhocUser		
		RecallOrganizationAdhocUserLocalRel
			one-to-one relation to RecallAdhocUserOrganization
			Field Mapping uses symbolic key
				related.RecallGroup			= LocalRecallGroup
				related.RecallOrganization	= RecallOrganization
				related.RecallAdhocUser		= LocalRecallAdhocUser

		RecallAdhocUserNotificationRel 
			one-to-one relation to RecallAdhocUserNotification 
			Field Mapping uses symbolic key 
				related.RecallGroup 		= RecallGroup 
				related.RecallNotice        = LocalRecallNotice 
				related.RecallAdhocUser 	= LocalRecallAdhocUser

		RecallAdhocUserHelperListRel 
			one-to-many relation to RecallAdhocUser
			Field Mapping uses symbolic key
				related.RecallGroup = RecallGroup


		AdhocUserRel 
			one-to-one relation to RecallAdhocUser 
			Field Mapping uses symbolic key 
				related.RecallGroup 		= RecallGroup 
				related.RecallAdhocUser 	= LocalRecallAdhocUser	
    	LocalPeriodNoticeRel
			one-to-many relation to RecallNoticeOrganization
			Field Mapping uses ByOrganization
				related.RecallGroup				= RecallGroup
				related.RecallOrganization		= RecallOrganization
    		Instance Selection
				where (related.RecallNotice.ApplicableRecallNotice
				and    related.RecallNotice.DerivedReleaseDate >= LocalPeriodRel.ReportFromDate
				and    related.RecallNotice.DerivedReleaseDate <= LocalPeriodRel.ReportThruDate) 

    	AnyPeriodNoticeRel
			one-to-many relation to RecallNoticeOrganization
			Field Mapping uses ByOrganization
				related.RecallGroup				= RecallGroup
				related.RecallOrganization		= RecallOrganization
    		Instance Selection
				where (related.RecallNotice.ApplicableRecallNotice
				and    related.RecallNotice.DerivedReleaseDate >= RecallReport.ReportFromDate
				and    related.RecallNotice.DerivedReleaseDate <= RecallReport.ReportThruDate) 

		LocalPeriodRel
			one-to-one relation to RecallReportPeriod
			Field Mapping uses symbolic key
				related.RecallGroup             = RecallGroup
				related.RecallReport			= RecallReport
				related.RecallReportPeriod		= LocalPeriod
				
	Sets
		ByRequestingLocation
			indexed
			duplicates
			Sort Order
				InventoryCompany
				RequestingLocation
				InventoryLocation
				
		ByInventoryLocation
			indexed
			duplicates
			Sort Order
				InventoryCompany
				InventoryLocation
				RequestingLocation
		
		ByIssueAccountingUnit
			indexed
			duplicates
			Sort Order
				InventoryCompany
				IssueAccountingUnit
				InventoryLocation
				RequestingLocation
						
	Actions
		Create is a Create Action 

			Action Rules 

				if (RequestingLocation entered)
					constraint (OtherAllRequestingLocationRel !exists)
   						"RequestingLocationIsAlreadyDefinedForOrganization<first OtherRequestingLocationRel.DerivedOrganizationDescription>"
		
   				if (InventoryLocation entered)
					constraint (OtherAllInventoryLocationRel !exists)
   						"InventoryLocationIsAlreadyDefinedForOrganization<first OtherInventoryLocationRel.DerivedOrganizationDescription>"

		BuildOrganizationStructure is a Set Action
			Parameters
				RecallGroup
				InventoryCompany
				Rollup		is Boolean
				
			Parameter Rules
				RecallGroup
					required
				InventoryCompany
					constraint (InventoryCompany.ItemGroup = RecallGroup)
						"CompanyMustExistForTheGroup_(RecallGroup)"
				Rollup
					initial value is true
					
			Instance Selection
				where (DerivedEmptySet)
				
			Action Rules
				Empty Set Rules
					if (InventoryCompany entered)
						invoke BuildOrgStructureFromRqloc RequestingLocation
							invoked.PrmRecallGroup 			= RecallGroup
							invoked.PrmInventoryCompany   	= InventoryCompany
							invoked.PrmRollup	   			= Rollup
					else
						RecallGroupField.RecallGroup = RecallGroup
						
						for each InventoryCompaniesByItemGroupRel
							invoke BuildOrgStructureFromRqloc RequestingLocation
								invoked.PrmRecallGroup 		= RecallGroup
								invoked.PrmInventoryCompany = each.Company
								invoked.PrmRollup	   		= Rollup
						
		Update is an Update Action
		
		Delete is a Delete Action
		
		Purge is a Purge Action
			restricted

		AttachToRecallNoticeTask is an Instance Action
			valid when (CanCreateTask)
			default label is "CreateTaskForOrganization"
			
			Parameters
				RecallGroup
				RecallNotice
				RecallOrganization
				Priority					is Numeric size 2
		   			States
		   				High					value is 1
		   				Medium					value is 2
		   				Low						value is 3
				DueDate						is TimeStamp
				RecallTaskInstruction		
    			TaskInstructionDescription
    			CreateItems                 is Boolean
    				default label is "CreateItemsToEnterQuantitiesAgainst"
				
			Parameter Rules
				RecallGroup
					required
				RecallNotice
					required
				RecallOrganization
					required
				Priority
				DueDate
				RecallTaskInstruction
					if (RecallTaskInstruction entered)
						constraint (RecallTaskInstruction.ValidForNotices)
							"TaskInstructionMustBeValidForNotices"				
				TaskInstructionDescription
					initial value is RecallTaskInstruction.Description
			
			Action Rules
				LocalRecallNotice	= RecallNotice
				LocalRecallUser     = ResponderForOrganization
				LocalRecallTaskInstruction = RecallTaskInstruction
				if (!OrganizationUserHasTaskForNotice)
					constraint (Priority entered)
						"PriorityIsRequired"
					constraint (DueDate entered)
						"DueDateIsRequired"
					constraint (RecallTaskInstruction entered)
						"TaskInstructionIsRequired" 
				
				if (ExistingRecallNoticeTaskRel exists)
					invoke Update New ExistingRecallNoticeTaskRel
						invoked.CreateItems                 = CreateItems
						invoked.FromProductTransactionQuery = true						
						invoked.FromOrganization            = true
				else
					invoke Create New RecallNoticeTask
						assign result to LocalRecallNoticeTask 
						invoked.RecallGroup                 = RecallGroup
						invoked.RecallNotice                = RecallNotice
						invoked.Owner						= ResponderForOrganization
						invoked.ManuallyCreatedTask 		= true
						if (Priority entered)
							invoked.Priority				= Priority
						else
						if (HasOtherManuallyCreatedTask)
							invoked.Priority                = first ManualRecallNoticeTaskRel.Priority
						if (DueDate entered)
							invoked.DueDate					= DueDate
						else
						if (HasOtherManuallyCreatedTask)
							invoked.DueDate                 = first ManualRecallNoticeTaskRel.DueDate
						if (RecallTaskInstruction entered)
							invoked.RecallTaskInstruction	= RecallTaskInstruction
						else
						if (HasOtherManuallyCreatedTask)
							invoked.RecallTaskInstruction   = first ManualRecallNoticeTaskRel.RecallTaskInstruction
						if (TaskInstructionDescription entered)
							invoked.TaskInstructionDescription	= TaskInstructionDescription
						else
						if (HasOtherManuallyCreatedTask)
							invoked.TaskInstructionDescription = first ManualRecallNoticeTaskRel.TaskInstructionDescription
						if (CreateItems = true)
							invoked.FromProductTransactionQuery = true	
						invoked.CreateItems                 = CreateItems								
					LocalTask = LocalRecallNoticeTask.RecallNoticeTask
					if (LocalRecallTaskInstruction !entered)
						LocalRecallTaskInstruction = first ManualRecallNoticeTaskRel.RecallTaskInstruction 				
					if (LocalRecallTaskInstruction entered)
						for each LocalRecallTaskInstruction.RecallTaskInstructionQuestion set
							invoke Create RecallNoticeTaskQuestion
								assign result to LocalRecallNoticeTaskQuestion 
								invoked.RecallGroup			= RecallGroup
								invoked.RecallNotice	 	= RecallNotice
								invoked.RecallNoticeTask	= LocalTask
								fill in fields from each
								
							for each each.RecallTaskInstructionQuestionValue set
								invoke Create RecallNoticeTaskQuestionValue
									invoked.RecallGroup				 = RecallGroup
									invoked.RecallNotice		 	 = RecallNotice
									invoked.RecallNoticeTask	 	 = LocalTask
									invoked.RecallNoticeTaskQuestion = LocalRecallNoticeTaskQuestion.RecallNoticeTaskQuestion
									fill in fields from each

				invoke Create RecallNoticeOrganization
					invoked.RecallGroup			= RecallGroup
					invoked.RecallNotice		= RecallNotice
					invoked.RecallOrganization	= RecallOrganization
					invoked.AssignedUser        = ResponderForOrganization
					invoked.FromManualTask      = true	

		Reparent is an Instance Action
			valid when (Active)
			Parameters
				PrmParentOrganization is a RecallOrganization
			Parameter Rules
				PrmParentOrganization
					required
						"NewParentOrganizationIsRequired"
					constraint (PrmParentOrganization != RecallOrganization)
						"CannotSelectOrganizationToBeItsOwnParent"
					constraint (PrmParentOrganization != ParentOrganization)
						"NewParentIsTheSameAsCurrentParent"
					if (PrmParentOrganization.InventoryCompany entered)
						constraint (PrmParentOrganization.InventoryCompany = InventoryCompany)
							"ParentOrganizationMustHaveSameCompany"
			Action Rules
				NewParentOrganization = PrmParentOrganization
				constraint (!NewParentIsAChild)
					"CannotChooseRecallOrganizationChildRecordToBeParentRecord"
				ParentOrganization = NewParentOrganization
				
		RemoveParent is an Instance Action
			valid when (HasParentOrganization)
			Action Rules
				initialize ParentOrganization

		AttachWatchersToNotice is an Update Action
			restricted
			Action Rules
	   			for each RecallOrganization and ancestors
					for each each.OrganizationWatchersRel
						LocalRecallUser	= each.RecallUser
						invoke Update RecallNotificationRel
							invoked.RecallDomain = RecallDomain

					for each each.OrganizationAdhocWatchersRel
						LocalRecallAdhocUser = each.RecallAdhocUser
						if (each.RecallAdhocUser.Active
						and each.RecallOrganization.Active
						and RecallAdhocUserNotificationRel !exists)
							invoke Create RecallAdhocUserNotification	
								invoked.RecallGroup  	= RecallGroup
								invoked.RecallNotice 	= LocalRecallNotice
								invoked.RecallAdhocUser	= LocalRecallAdhocUser
		
		AttachToRecallUser is an Instance Action
			valid when (Active)
			default label is "AttachOrganization"
			Parameters
				RecallGroup
				RecallOrganization
				RecallUser
				TypeOfUser			is Numeric size 2
					States
						Responder		value is 1
						Watcher			value is 2
				
			Parameter Rules
				RecallGroup
					required
				RecallOrganization
					required
				RecallUser
					required
				TypeOfUser
					required
			
			Action Rules
				LocalRecallGroup = RecallGroup
				LocalRecallUser = RecallUser
				constraint (!RecallOrganizationUserRel exists)
					"<RecallUser.RecallUserName>IsAlreadyAttachedToTheOrganization"
					
				invoke Create RecallOrganizationUser
					invoked.RecallGroup			= RecallGroup
					invoked.RecallOrganization	= RecallOrganization
					invoked.RecallUser			= RecallUser
					invoked.TypeOfUser			= TypeOfUser
		
		AttachToAdhocUser is an Instance Action
			valid when (Active)
			default label is "AttachOrganization"
			Parameters
				RecallGroup
				RecallOrganization
				RecallAdhocUser
					default label is "AdhocUser"
				
			Parameter Rules
				RecallGroup
					required
				RecallOrganization
					required
				RecallAdhocUser
					required
			
			Action Rules
				LocalRecallGroup 		= RecallGroup
				LocalRecallAdhocUser 	= RecallAdhocUser
				constraint (!RecallOrganizationAdhocUserLocalRel exists)
					"<RecallAdhocUser.DerivedName>IsAlreadyAttachedToTheOrganization"
					
				invoke Create RecallAdhocUserOrganization
					invoked.RecallGroup			= RecallGroup
					invoked.RecallOrganization	= RecallOrganization
					invoked.RecallAdhocUser		= RecallAdhocUser

		AttachToItemReviewer is an Instance Action
			valid when (Active)
			default label is "AttachOrganization"
			Parameters
				RecallGroup
				RecallOrganization
				RecallUser
				
			Parameter Rules
				RecallGroup
					required
				RecallOrganization
					required
				RecallUser
					required
			
			Action Rules
				LocalRecallGroup = RecallGroup
				LocalRecallUser = RecallUser
				constraint (!RecallOrganizationUserRel exists)
					"<RecallUser.RecallUserName>IsAlreadyAttachedToTheOrganization"
					
				invoke Create RecallOrganizationUser
					invoked.RecallGroup			= RecallGroup
					invoked.RecallOrganization	= RecallOrganization
					invoked.RecallUser			= RecallUser
					invoked.TypeOfUser			= 3 
