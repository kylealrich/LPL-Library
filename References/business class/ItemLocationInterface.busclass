ItemLocationInterface is a BusinessClass
	owned by ic
	
	prefix is ItemL
	
	Ontology
		symbolic key is ItemLocationInterface
	
	Patterns
	
	Persistent Fields
		RunGroup
		Item
		InventoryCompany                          
 		InventoryLocation                         
		GeneralLedgerCategory
        	default label is "InventoryLocationAccountGroup"
        Buyer
        	context of ItemGroup
        DefaultTransactionUOM                     is a UnitOfMeasureEdit
        PurchaseTaxable
        PurchaseTaxCode                           is a TaxCode
        	context of ItemGroup
        TaxableWhenSold                           is Boolean
        SellTaxCode                               is a TaxCode
        	context of ItemGroup
        StandardCost                              is an InternationalCost
        FutureStandardCost                        is an InternationalCost
        MovementClass                             is AlphaUpper size 1
            States
                MovementClass1 value is "1"
                MovementClass2 value is "2"
                MovementClass3 value is "3"
        MovementRank                              is Numeric size 5
        StorageCode
        PreferredBin                              is a Bin
        ParShelfLocation                          is like Bin
        MinimumOrderQuantity                      is an UnsignedQuantity
			precision is Item.NumberOfDecimalsQuantity
        MaximumOrderQuantity                      is an UnsignedQuantity
			precision is Item.NumberOfDecimalsQuantity
        ReorderPolicy
        ReorderDocument                           is AlphaUpper size 1
            States
                NoDocumentCreated         value is "N"
                PurchaseOrder             value is "P"
                Requisition               value is "R"
                IntransitDocument         value is "X"
                TransferDocument          value is "T"
                IssueDocument             value is "I"
                WorkOrder                 value is "W"
        ReorderQuantityCode
        ReorderPointCode
        ReorderQuantity                           is an UnsignedQuantity
			precision is Item.NumberOfDecimalsQuantity
        ReorderPoint                              is an UnsignedQuantity
			precision is Item.NumberOfDecimalsQuantity
        SuggestedReorderPoint                     is an UnsignedQuantity
			precision is Item.NumberOfDecimalsQuantity
        LeadtimeControl                           is AlphaUpper size 1
            States
                ManuallyEntered  value is "M"
                NeedsReview      value is "R"
                SystemCalculates value is "S"
        LeadtimeDays
        AutomaticPurchaseOrder                    is Boolean
        OrderMultiple
        EconomicOrderQuantity                     is an UnsignedQuantity
			precision is Item.NumberOfDecimalsQuantity
        SafetyStock                               is an UnsignedQuantity
			precision is Item.NumberOfDecimalsQuantity
        Manufacturer
        ManufacturerNumber
        SelectForSpecialCycleCount                is Boolean
        ForecastNumber							  is a InventoryForecast
        PatientChargeable                         is Boolean
        InventoryTracked                          is Boolean
        BinTracked                                is Boolean
        AllowReceipt                              is Boolean
        AllowIssue                                is Boolean
        InspectionRequired                        is Boolean
        MSDSDate                                  is Date
        MSDSOrder                                 is Boolean
        MSDSDocument
        MSDSVersion
        OverheadUnitCost                          is an InternationalCost
        MarketPrice                               is an InternationalCost
        Active                                    is Boolean
        UserField1                                is AlphaUpper size 30
        UserField2
        UserField3                                is a UserField2
        UserFieldN1                               is an InternationalCost
        UserFieldN2                               is an InternationalCost
        UserFieldN3                               is an InternationalCost
        ReceivingDays
        Consignment                               is Boolean
        NoCharge                                  is Boolean
        LotTracked
        SerialTracked
        DropshipPurchaseOrderForCustomerOrderLine is Boolean
        CreatePurchaseOrderForCustomerOrderLine   is Boolean
        MaximumSaleQuantity                       is an UnsignedQuantity
			precision is Item.NumberOfDecimalsQuantity
        MinimumSaleQuantity                       is an UnsignedQuantity
			precision is Item.NumberOfDecimalsQuantity
		AllowCustomerOrderReturns				is AlphaUpper 1
			States
				Yes				value is "Y"
				No				value is "N"
				Limit			value is "L"
        DefaultSourceUOM                          is a UnitOfMeasureEdit
		SupplementalUOM							  is a UnitOfMeasureEdit
			default label is "SupplementalUOM"
        GeographicalType                          is a GISType
        GeographicalLatitude                      is a GISCoordinate
        GeographicalLongitude                     is a GISCoordinate
        GeographicalAltitude                      is a GISCoordinate
        GeographicalDate                          is TimeStamp
        GlobalLineType
			context of ItemGroup
		ChargeNumber
        PreferredHoldBin						  is a Bin				
        MaximumRequisitionQuantity				  is an UnsignedQuantity
        Vendor                                                    
        PurchaseFromLocation
        ReplenishFrom
		ReplenishmentPriority 	 				  is Numeric size 6
		UDITracked
	
	Rule Blocks
	
		EditItemLocation
		
			invoke Delete ItemInformationErrorsRel
			
			if (GeneralLedgerCategory !entered
			and !CartParLocation)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 52
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (DuplicateItemLocationRel exists)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 53
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (DuplicateItemLocationInterfaceRel exists)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 56
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
			
			if (InventoryLocation.WorkOrderLocationType.OffsiteLocation)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 55
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (Consignment = true
			and GeneralLedgerCategory entered
			and !GeneralLedgerCategory.InventoryAccount = GeneralLedgerCategory.ReceiptAccount)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 57
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation	
					
			if ((LotTracked.LotRequiredAtIssue
			or  LotTracked.LotRequiredAtReceipt)
			and !CartParLocation
		    and !InventoryTracked)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 58
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (SerialTrackedItem
			and !CartParLocation
		    and !InventoryTracked)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 59
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
			
			if (SerialTrackedItem
			and LotTrackedItem)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 60
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
				
			if (Item not entered)
				if (ItemInformationWorksheet.CatchWeightItem
				and SerialTrackedItem)
					invoke Create ItemInformationError
						invoked.ItemGroup      		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet
						invoked.ErrorMessageNumber 		 = 61
						invoked.ErrorCompany             = InventoryCompany
						invoked.ErrorLocation    		 = InventoryLocation
			else
			if (Item entered)
				if (Item.IsCatchWeightItem
				and SerialTrackedItem)
					invoke Create ItemInformationError
						invoked.ItemGroup      		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet
						invoked.ErrorMessageNumber 		 = 61
						invoked.ErrorCompany             = InventoryCompany
						invoked.ErrorLocation    		 = InventoryLocation
					
			if (StorageCode entered
			and !BinTracked)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 62
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation				
							
			if (BinTracked
			and !CartParLocation
			and !InventoryTracked)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 63
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (BinTracked
			and StorageCode entered
			and StorageCode = !PreferredBin.StorageCode) 
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 64
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
						
			if (PreferredBin entered
			and !BinTracked)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 65
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation 
					
			if (PreferredBin.BinType entered)				
				for each InventoryCompany.BinTypeArray.BinTypeGroup
					if (each.BinType = PreferredBin.BinType
					and !each.AllowsReceipt)
						invoke Create ItemInformationError
							invoked.ItemGroup      		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet
							invoked.ErrorMessageNumber 		 = 66
							invoked.ErrorCompany             = InventoryCompany
							invoked.ErrorLocation    		 = InventoryLocation 
			
			if (InventoryCompany.CostingMethod.StandardCosting
			and NoCharge = true)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 67
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation 
					
			if (InventoryCompany.CostingMethod.StandardCosting
			and StandardCost = 0)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 68
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation 
					
			if (ReorderDocument.WorkOrder
			and !InventoryCompany.WorkOrderInUse)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 69
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation 
					
			if (ReorderDocument.WorkOrder
			and InventoryLocation.DemandSource.DocumentDemand)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 70
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (AutomaticPurchaseOrder = true
			and AllowReceipt = false)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 71
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation 
			
			if (AutomaticPurchaseOrder = true
			and ReorderDocument.WorkOrder)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 72
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (CartParLocation
			and ReorderPoint < MinimumOrderQuantity)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 73
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (MaximumOrderQuantity < MinimumOrderQuantity
			and MaximumOrderQuantity entered)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 74
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation 
					
			if (ReorderQuantityCode.OrderUpToMaximumLevel
			and MaximumOrderQuantity = 0)	
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 75
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation 
					
			if (ReorderQuantityCode.OrderUpToMaximumLevel
			and MaximumOrderQuantity < ReorderPoint)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 76
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (Item entered)
				if (Item.IsCatchWeightItem
				and DefaultTransactionUOM.UnitOfMeasure != Item.SecondaryUOM)
					invoke Create ItemInformationError
						invoked.ItemGroup      		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet
						invoked.ErrorMessageNumber 		 = 77
						invoked.ErrorCompany             = InventoryCompany
						invoked.ErrorLocation    		 = InventoryLocation
			else
			if (Item not entered)
				if (ItemInformationWorksheet.CatchWeightItem
				and DefaultTransactionUOM.UnitOfMeasure != ItemInformationWorksheet.SecondaryUOM)
					invoke Create ItemInformationError
						invoked.ItemGroup      		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet
						invoked.ErrorMessageNumber 		 = 77
						invoked.ErrorCompany             = InventoryCompany
						invoked.ErrorLocation    		 = InventoryLocation
					
			if  (DefaultTransactionUOM entered)
				if (Item not entered)
					if (!DefaultTransactionUOMValid)		
						invoke Create ItemInformationError
							invoked.ItemGroup      		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet
							invoked.ErrorMessageNumber 		 = 78
							invoked.ErrorCompany             = InventoryCompany
							invoked.ErrorLocation    		 = InventoryLocation
				else
				if (Item entered)
					if (!DefaultTransactionForItemValid)
						invoke Create ItemInformationError
							invoked.ItemGroup      		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet
							invoked.ErrorMessageNumber 		 = 78
							invoked.ErrorCompany             = InventoryCompany
							invoked.ErrorLocation    		 = InventoryLocation
				
			if  (DefaultSourceUOM entered)
				if (Item not entered)
					if (!DefaultSourceUOMValid)		
						invoke Create ItemInformationError
							invoked.ItemGroup      		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet
							invoked.ErrorMessageNumber 		 = 144
							invoked.ErrorCompany             = InventoryCompany
							invoked.ErrorLocation    		 = InventoryLocation
				else
				if (Item entered)
					if (!DefaultSourceForItemValid)
						invoke Create ItemInformationError
							invoked.ItemGroup      		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet
							invoked.ErrorMessageNumber 		 = 144
							invoked.ErrorCompany             = InventoryCompany
							invoked.ErrorLocation    		 = InventoryLocation

			if  (SupplementalUOM entered)
				if (Item not entered)
					if (!SupplementalUOMValid)		
						invoke Create ItemInformationError
							invoked.ItemGroup      		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet
							invoked.ErrorMessageNumber 		 = 145
							invoked.ErrorCompany             = InventoryCompany
							invoked.ErrorLocation    		 = InventoryLocation
				else
				if (Item entered)
					if (!SupplementalUOMForItemValid)
						invoke Create ItemInformationError
							invoked.ItemGroup      		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet
							invoked.ErrorMessageNumber 		 = 145
							invoked.ErrorCompany             = InventoryCompany
							invoked.ErrorLocation    		 = InventoryLocation

			if (DefaultSourceUOM entered)
				if (Item not entered)
					if (ItemInformationWorksheet.CatchWeightItem
					and  DefaultSourceUOM.UnitOfMeasure != ItemInformationWorksheet.SecondaryUOM)		
						invoke Create ItemInformationError
							invoked.ItemGroup      		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet
							invoked.ErrorMessageNumber 		 = 79
							invoked.ErrorCompany             = InventoryCompany
							invoked.ErrorLocation    		 = InventoryLocation
				else
				if (Item entered)
					if  (!Item.CatchWeightCode.NotCatchWeight
					and  DefaultSourceUOM.UnitOfMeasure != Item.SecondaryUOM)		
						invoke Create ItemInformationError
							invoked.ItemGroup      		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet
							invoked.ErrorMessageNumber 		 = 79
							invoked.ErrorCompany             = InventoryCompany
							invoked.ErrorLocation    		 = InventoryLocation
			
			if (MaximumSaleQuantity entered
			and MaximumSaleQuantity < MinimumSaleQuantity)		
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 80
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (DropshipPurchaseOrderForCustomerOrderLine
			and !CreatePurchaseOrderForCustomerOrderLine)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 81
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (!CartParLocation
			and PreferredHoldBin entered
			and PreferredBin !entered)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 82
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
			
			if (!CartParLocation
			and PreferredHoldBin entered)
				for each InventoryCompany.BinTypeArray.BinTypeGroup
					if (each.BinType = PreferredHoldBin.BinType)
						if (!each.AllowsReceipt)
							invoke Create ItemInformationError
								invoked.ItemGroup      		 	 = ItemGroup
								invoked.ItemInformationWorksheet = ItemInformationWorksheet
								invoked.ErrorMessageNumber 		 = 83
								invoked.ErrorCompany             = InventoryCompany
								invoked.ErrorLocation    		 = InventoryLocation
								
						if (each.AllowsIssue)
							invoke Create ItemInformationError
								invoked.ItemGroup      		 	 = ItemGroup
								invoked.ItemInformationWorksheet = ItemInformationWorksheet
								invoked.ErrorMessageNumber 		 = 84
								invoked.ErrorCompany             = InventoryCompany
								invoked.ErrorLocation    		 = InventoryLocation						
			

			
			if (Vendor entered
			and ReplenishFrom.ReplenishFromCompany entered)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 85
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation	
			
			if (Vendor !entered
			and PurchaseFromLocation entered)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 86
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (AutomaticPurchaseOrder
			and ReplenishFrom entered)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 87
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if ((ReplenishFrom.ReplenishFromCompany entered
			and ReplenishFrom.ReplenishFromLocation !entered)
			or (ReplenishFrom.ReplenishFromLocation entered
			and ReplenishFrom.ReplenishFromCompany !entered))	
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 88
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (ReplenishFrom.ReplenishFromBin entered
			and ReplenishFrom.ReplenishFromLocation !entered)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 89
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
				
			if (ReplenishFrom.ReplenishFromCompany  = InventoryCompany
			and ReplenishFrom.ReplenishFromLocation = InventoryLocation)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 90
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (ReplenishFrom.ReplenishFromCompany entered
			and !ItemExistsForReplenishFrom)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 91
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (CartParLocation)
				if (ReplenishFrom not entered
				and Vendor not entered
				and InventoryLocation.ReplenishFromLocation not entered)
					invoke Create ItemInformationError
						invoked.ItemGroup      		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet
						invoked.ErrorMessageNumber 		 = 112
						invoked.ErrorCompany             = InventoryCompany
						invoked.ErrorLocation    		 = InventoryLocation
						
				if (ReorderPoint not entered)
					invoke Create ItemInformationError
						invoked.ItemGroup      		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet
						invoked.ErrorMessageNumber 		 = 92
						invoked.ErrorCompany             = InventoryCompany
						invoked.ErrorLocation    		 = InventoryLocation
				
				if (ParShelfLocation not entered)
					invoke Create ItemInformationError
						invoked.ItemGroup      		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet
						invoked.ErrorMessageNumber 		 = 113
						invoked.ErrorCompany             = InventoryCompany
						invoked.ErrorLocation    		 = InventoryLocation
			
				if (ParShelfLocation entered
				and DuplicateShelfLocation)
					invoke Create ItemInformationError
						invoked.ItemGroup      		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet
						invoked.ErrorMessageNumber 		 = 200
						invoked.ErrorCompany             = InventoryCompany
						invoked.ErrorLocation    		 = InventoryLocation
						
		CheckForKeyfieldErrors
			
			if (Manufacturer entered
			and Manufacturer !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 211
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation	
					
			if (InventoryCompany !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 212
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation	
					
			if (InventoryLocation !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 213
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (GeneralLedgerCategory !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 214
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (Buyer entered
			and Buyer !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 215
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation				
					
			if (DefaultTransactionUOM.UnitOfMeasure entered
			and DefaultTransactionUOM.UnitOfMeasure !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 216
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation	
					
			if (PurchaseTaxCode entered
			and PurchaseTaxCode !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 217
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation	
					
			if (SellTaxCode entered
			and SellTaxCode !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 218
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation	
					
			if (PreferredBin entered
			and PreferredBin !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 219
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (StorageCode entered
			and StorageCode !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 220
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation	
			
			if (GlobalLineType entered
			and GlobalLineType !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 221
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (Vendor entered
			and Vendor !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 222
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
					
			if (PurchaseFromLocation entered
			and PurchaseFromLocation !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 223
					invoked.ErrorCompany             = InventoryCompany
					invoked.ErrorLocation    		 = InventoryLocation
						
	Conditions
	
		CartParLocation
			restricted
			when (InventoryLocation.LocationType.ExchangeCart 
			or    InventoryLocation.LocationType.ParLocation)
			
		DefaultAccountGroupExists
			when (DefaultInventoryAccountGroupRel exists)
	
	
		SerialTrackedItem
			restricted
			when (SerialTracked.SerialRequiredAtReceipt
			or    SerialTracked.SerialRequiredAtIssue)
			
		LotTrackedItem
			restricted
			when (LotTracked.LotRequiredAtIssue
			or    LotTracked.LotRequiredAtReceipt)	
			
		DefaultTransactionUOMValid
			restricted
			when (DefaultTransactionRel exists)
			
		DefaultTransactionForItemValid
			restricted
			when (DefaultTransactionForItemRel exists)
		
		DefaultSourceUOMValid
			restricted
			when (DefaultSourceRel exists)
			
		DefaultSourceForItemValid
			restricted
			when (DefaultSourceForItemRel exists)

		SupplementalUOMValid
			restricted
			when (SupplementalUOMRel exists)
			
		SupplementalUOMForItemValid
			restricted
			when (SupplementalUOMForItemRel exists)

		ItemExistsForReplenishFrom
			restricted
			when   (ReplenishFromItemLocationExistsRel exists
			and    ReplenishFromItemLocationExistsRel.InventoryTracked)
			
		DuplicateShelfLocation
			restricted
			when (DuplicateShelfLocationRel exists
			or    DuplicateInterfaceShelfLocationRel exists)
		
		HasErrors
			restricted
			when (ItemInformationErrorsRel exists)
			
		WorksheetRelExists
			restricted
			when (WorksheetRel exists)
			
	Relations
		DuplicateItemLocationRel
			one-to-many relation to ItemLocation
			Field Mapping uses Set2
				related.Company			  = InventoryCompany
				related.Item              = Item
				related.InventoryLocation = InventoryLocation
				
		DuplicateItemLocationInterfaceRel
			one-to-many relation to ItemLocationInterface
			Field Mapping uses symbolic key
				related.ItemGroup         			= ItemGroup
				related.ItemInformationWorksheet 	= ItemInformationWorksheet
			Instance Selection
				where (related.UniqueID       	!=UniqueID
				and    related.InventoryLocation = InventoryLocation
				and    related.InventoryCompany  = InventoryCompany)
		
		DuplicateShelfLocationRel
			one-to-many relation to ItemLocation
			Field Mapping uses Set8
				related.Company			  = InventoryCompany
				related.InventoryLocation = InventoryLocation
				related.PreferredBin      = ParShelfLocation
		
		DuplicateInterfaceShelfLocationRel
			one-to-many relation to ItemLocationInterface
			Field Mapping uses symbolic key
				related.ItemGroup         = ItemGroup
			Instance Selection
				where (related.InventoryLocation = InventoryLocation
				and    related.InventoryCompany  = InventoryCompany
				and    related.ParShelfLocation  = ParShelfLocation
				and    related.ItemLocationInterface !=ItemLocationInterface)
				
		DefaultInventoryAccountGroupRel
			one-to-many relation to GeneralLedgerCategory
			Field Mapping uses symbolic key
				related.Company           = InventoryCompany 
				related.InventoryLocation = InventoryLocation
			Instance Selection
				where (related.Default)
				
		ReplenishFromItemLocationExistsRel
			one-to-many relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company                  = ReplenishFrom.ReplenishFromCompany
				related.InventoryLocation        = ReplenishFrom.ReplenishFromLocation
				related.Item                     = Item
		
		ItemInformationErrorsRel
			one-to-many relation to ItemInformationError
			Field Mapping uses symbolic key
				related.ItemGroup         		 = ItemGroup
				related.ItemInformationWorksheet = ItemInformationWorksheet
			Instance Selection
				where (related.ItemLocationErrors
				and    related.ErrorCompany      = InventoryCompany
				and    related.ErrorLocation     = InventoryLocation)
				
		DefaultTransactionForItemRel
			one-to-many relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup                  = ItemGroup
				related.Item                       = Item
				related.UnitOfMeasure              = DefaultTransactionUOM.UnitOfMeasure
			Instance Selection
				where (related.OKForTransaction)
			
		DefaultTransactionRel
			one-to-many relation to ItemInformationWorksheet
			Field Mapping uses ByRunGroup
				related.RunGroup                   = RunGroup
				related.ItemInformationWorksheet   = ItemInformationWorksheet
			Instance Selection
				where (related.StockUOM                  = DefaultTransactionUOM.UnitOfMeasure
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1] = DefaultTransactionUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForInventoryTransactions = true)
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2] = DefaultTransactionUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForInventoryTransactions = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3] = DefaultTransactionUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForInventoryTransactions = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4] = DefaultTransactionUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForInventoryTransactions = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5] = DefaultTransactionUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForInventoryTransactions = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6] = DefaultTransactionUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForInventoryTransactions = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7] = DefaultTransactionUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForInventoryTransactions = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8] = DefaultTransactionUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForInventoryTransactions = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9] = DefaultTransactionUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForInventoryTransactions = true))		
				
		DefaultSourceForItemRel
			one-to-many relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup                  = ItemGroup
				related.Item                       = Item
				related.UnitOfMeasure              = DefaultSourceUOM.UnitOfMeasure
			Instance Selection
				where (related.OKForBuying)
			
		WorksheetRel
			one-to-one relation to ItemInformationWorksheet
			Field Mapping uses ByRunGroup
				related.RunGroup                  = RunGroup
				related.ItemInformationWorksheet  = ItemInformationWorksheet

		DefaultSourceRel
			one-to-many relation to ItemInformationWorksheet
			Field Mapping uses ByRunGroup
				related.RunGroup                   = RunGroup
				related.ItemInformationWorksheet   = ItemInformationWorksheet
			Instance Selection
				where (related.StockUOM                  = DefaultSourceUOM.UnitOfMeasure
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1] = DefaultSourceUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].OKForBuying = true)
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2] = DefaultSourceUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].OKForBuying = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3] = DefaultSourceUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].OKForBuying = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4] = DefaultSourceUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].OKForBuying = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5] = DefaultSourceUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].OKForBuying = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6] = DefaultSourceUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].OKForBuying = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7] = DefaultSourceUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].OKForBuying = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8] = DefaultSourceUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].OKForBuying = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9] = DefaultSourceUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].OKForBuying = true))		

		SupplementalUOMForItemRel
			one-to-many relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup                  = ItemGroup
				related.Item                       = Item
				related.UnitOfMeasure              = SupplementalUOM.UnitOfMeasure
			Instance Selection
				where (related.OKForTransaction)

		SupplementalUOMRel
			one-to-many relation to ItemInformationWorksheet
			Field Mapping uses ByRunGroup
				related.RunGroup                   = RunGroup
				related.ItemInformationWorksheet   = ItemInformationWorksheet
			Instance Selection
				where (related.StockUOM                  not = SupplementalUOM.UnitOfMeasure
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1] = SupplementalUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForInventoryTransactions = true)
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2] = SupplementalUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForInventoryTransactions = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3] = SupplementalUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForInventoryTransactions = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4] = SupplementalUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForInventoryTransactions = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5] = SupplementalUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForInventoryTransactions = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6] = SupplementalUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForInventoryTransactions = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7] = SupplementalUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForInventoryTransactions = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8] = SupplementalUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForInventoryTransactions = true)	
				or    (related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9] = SupplementalUOM.UnitOfMeasure
				and    related.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForInventoryTransactions = true))		

	Sets
	
		ByItemLocation
			Sort Order
				InventoryCompany
				InventoryLocation
				Item
				ItemInformationWorksheet
				ItemLocationInterface
	
	Field Rules
		
		Item
			Item = ItemInformationWorksheet.FinalItemNumber
			
		RunGroup
			RunGroup = ItemInformationWorksheet.RunGroup
			
		InventoryCompany
			required
			
		InventoryLocation
			required
			
		GeneralLedgerCategory
			if (!CartParLocation)
				if (GeneralLedgerCategory !entered
				and DefaultInventoryAccountGroupRel exists)
					GeneralLedgerCategory = first DefaultInventoryAccountGroupRel.GeneralLedgerCategory
	
		Active
			default to true
			
			if (Item.Active
			and !Active)
				invoke Create ItemInformationError
					invoked.ItemGroup       		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ItemInformationError     = 54
					
		AllowIssue
			default to true
		
		AllowReceipt
			default to true
		
		ReplenishmentPriority
			if (ReplenishFrom entered
			or  Vendor        entered)
				default to 1
	
	Actions
	
		
		
		Create is a Create Action
		
			Field Rules
			
				Active
					if (Item.Active = true)
						Active = true
		
				InventoryTracked
					InventoryTracked = true
					
				InventoryLocation
					constraint (InventoryLocation.LocationType = blank)
						"MustUseCreateParItemToCreateParItem"
					
			Exit Rules
				include EditItemLocation
				include CheckForKeyfieldErrors
					
		CreateItemLocationInterfaceFromCSV is a Create Action
			restricted
			bypass field rules
			
			Field Rules
			
				Active
					if (Item.Active = true)
						Active = true
				
				BinTracked
					if (InventoryLocation.LocationType != blank)
						default to true
						
				InventoryTracked
					if (InventoryLocation.LocationType = blank)
						default to true
		
		CreateParItem is a Create Action
		
			Field Rules
			
				InventoryLocation
					constraint (InventoryLocation.LocationType != blank)
						"CanOnlyCreateParItemForParOrCartLocation"
				
				Active
					if (Item.Active = true)
						Active = true
						
				BinTracked
					default to true
						
			Exit Rules
				include EditItemLocation
		
		Update is an Update Action
			valid when (!CartParLocation)
		
			Field Rules
			
				InventoryLocation
					constraint (InventoryLocation.LocationType = blank)
						"MustUseCreateParItemToCreateParItem"
				
			
			Exit Rules
				include EditItemLocation
		
		UpdateParItem is an Update Action
			valid when (CartParLocation)
		
			
			Field Rules
			
				InventoryLocation
					constraint (InventoryLocation.LocationType != blank)
						"CanOnlyCreateParItemForParOrCartLocation"
				
			
			Exit Rules
				
				include EditItemLocation
		
		CheckForLocationErrors is an Instance Action
			restricted
				
			Action Rules
				include EditItemLocation
		
		CheckForErrorsRunGroup is a Set Action
			restricted
			Parameters
				PrmRunGroup              is AlphaUpper 30
				PrmItemGroup             is an ItemGroup
			
			Sort Order
				RunGroup
				ItemGroup
			
			Instance Selection
				where  (RunGroup	= PrmRunGroup
				and     ItemGroup   = PrmItemGroup)
			
			Action Rules
				Instance Rules
					include EditItemLocation	
		
		Delete is a Delete Action		
			
			Entrance Rules
				invoke Delete ItemInformationErrorsRel
			
