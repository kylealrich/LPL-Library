TrueCostRunParameter is a BusinessClass
	default label is "True\CostRunParameter"
	owned by truecost
	
	prefix is TCRP
	
	Ontology
		symbolic key is TrueCostRunParameter
			
	Patterns
	
	Persistent Fields
		
    	Calendar					is a GeneralLedgerCalendar
		ActualsLedger				is a Ledger
    		default label is "UtilizationLedger"  
    	CapacityLedger				is a Ledger
    	SourceLedger				is a Ledger
    	
		Allocation					is a TrueCostAllocation
		AllocationGroup
		AllocationPostDate			is Date
		FromStep					is a AllocationStepNumber
		ToStep						is a AllocationStepNumber
		UseCapacityLedger			is Boolean
			default label is "CapacityLedger"
		UseActualLedger				is Boolean
			default label is "ActualsLedger"
		GenerateListingData			is Boolean
			default label is "GenerateReports"
		GenerateSourceValue			is Boolean
			default label is "IncludeSourceDetails"
		MultiMonthFlag				is Boolean
			default label is "Multi-\MonthAllocation"
		RunName		 				is AlphaUpper 20
		RunDescription				is Alpha 60
		FromAllocationPostDate		is Date
		ToAllocationPostDate		is Date
		SourceBalanceOption	 		is Numeric 1
			States
				NewExpenseSnapshot 		value is 0
				ExistingExpenseSnapshot	value is 1
		Status						is Numeric 1
			States
				Incomplete 		value is 0
				Complete		value is 1
				InProcess		value is 2

	Local Fields
		LocalDate						is Date
		LocalEndPeriod					is Date
		LocalDate1						is Date
		LocalStartDate					is Alpha 8
		LocalEndDate					is Alpha 8		
		LocalDateAlpha					is Alpha 8
		LocalDayNumeric					is Numeric 3
		LocalJulianDate					is Alpha 7
		LocalJulianDateFrom				is Alpha 7
		LocalJulianDateTo				is Alpha 7		
		LocalAlphaDay					is Alpha 3
		LocalAlphaYear					is Alpha 4
		LocalAlphaMonth					is Alpha 3
		LocalAlphaDate					is Alpha 12
		LocalAllocationDisplayPeriod		is AlphaUpper size 20
		LocalAllocationStartPeriod		is AlphaUpper size 20
		LocalAllocationEndPeriod		is AlphaUpper size 20
		LocalPeriodType					is Numeric size 1
		LocalCalendar					is a GeneralLedgerCalendar
		LocalSnapshotName				is like AllocationSnapshot
		
		LocalJulianDateFormat			is an JulianDateFormatter
		LocalAllocationPeriod			is a GeneralLedgerCalendarPeriod
		LocalCapacityLedger  			is a Ledger
		AsyncId							is an AsyncActionRequest
		AllocationSnapshotView			is an AllocationSnapshot view
		
		LocalOldAllocationPostDate		is Date
		LocalOldFromAllocationPostDate	is Date
		LocalOldToAllocationPostDate	is Date
		LocalUseCapacityLedger			is Boolean
		
	Field Rules
		Allocation
			constraint(AllocationGroup not entered)
				"CannotSpecifyBothGroupAndAllocation"
		AllocationGroup
			constraint(Allocation not entered)
				"CannotSpecifyBothGroupAndAllocation"
		AllocationPostDate
			initial value is current corporate date
			default to current corporate date
			required

			if (not MultiMonthFlag)
				LocalPeriodType 			    = TrueCostAllocationControl.AllocationControlRel.PeriodType			
				LocalJulianDateFormat.InputDate = AllocationPostDate
				LocalJulianDate					= LocalJulianDateFormat.JulianDate
				
				constraint (GeneralLedgerCalendarPeriodsRel exists)
					"CouldNotFindPeriodOfType<TrueCostAllocationControl.AllocationControlRel.PeriodType>InCalendar<TrueCostAllocationControl.Calendar>ForDate<AllocationPostDate>"

		UseCapacityLedger
			constraint (CapacityLedger entered)
				"CapacityLedgerIsNotSet"					
		GenerateListingData
			force default to true
		GenerateSourceValue
			force default to true
		RunName
			required
		FromAllocationPostDate
			initial value is DerivedStartDate
			default to DerivedStartDate
			required
			
			if (MultiMonthFlag)
				LocalPeriodType 			    = TrueCostAllocationControl.AllocationControlRel.PeriodType
				LocalJulianDateFormat.InputDate = FromAllocationPostDate
				LocalJulianDate					= LocalJulianDateFormat.JulianDate

				constraint (GeneralLedgerCalendarPeriodsRel exists)
					"CouldNotFindPeriodOfType<TrueCostAllocationControl.AllocationControlRel.PeriodType>InCalendar<TrueCostAllocationControl.Calendar>ForDate<FromAllocationPostDate>"

		ToAllocationPostDate
			initial value is DerivedEndDate
			default to DerivedEndDate
			required

			if (MultiMonthFlag)
				LocalPeriodType 			    = TrueCostAllocationControl.AllocationControlRel.PeriodType
				LocalJulianDateFormat.InputDate = ToAllocationPostDate
				LocalJulianDate					= LocalJulianDateFormat.JulianDate
					
				constraint (GeneralLedgerCalendarPeriodsRel exists)
					"CouldNotFindPeriodOfType<TrueCostAllocationControl.AllocationControlRel.PeriodType>InCalendar<TrueCostAllocationControl.Calendar>ForDate<ToAllocationPostDate>"

				constraint (FromAllocationPostDate <= ToAllocationPostDate)
					"ToAllocationPostDateCannotBeEarlierThanFromAllocationPostDate"
	Conditions
        IsNotcompleteNewExpenseSnapshot
        	default label is "IsNotCompleteNewExpenseSnapshot"
	        when (SourceBalanceOption.NewExpenseSnapshot
	        and   not Status.Complete)	
	Derived Fields
		IsCompleteNewExpenseSnapshot		is a DerivedField
			type is Boolean
			if (SourceBalanceOption.ExistingExpenseSnapshot and Status.Incomplete)
				return true
			
		LedgerDescription	is a DerivedField
			type is Alpha 50
			return TrueCostAllocationControl.ActualsLedger.Ledger

		DerivedSnapshotName is a DerivedField
			type is Alpha 60
			restricted
			LocalDate		 	= current corporate date
			LocalAlphaMonth 	= LocalDate month
			LocalAlphaDate 		= LocalDate day + " "
			
			if (LocalAlphaMonth	 = "1")
				LocalAlphaDate 	+= "JAN "
			else
			if (LocalAlphaMonth = "2")
				LocalAlphaDate 	+= "FEB "
			else
			if (LocalAlphaMonth = "3")
				LocalAlphaDate 	+= "MAR "
			else
			if (LocalAlphaMonth = "4")
				LocalAlphaDate 	+= "APR "
			else
			if (LocalAlphaMonth = "5")
				LocalAlphaDate 	+= "MAY "
			else
			if (LocalAlphaMonth = "6")
				LocalAlphaDate 	+= "JUN "
			else
			if (LocalAlphaMonth = "7")
				LocalAlphaDate 	+= "JUL "
			else
			if (LocalAlphaMonth = "8")
				LocalAlphaDate 	+= "AUG "
			else
			if (LocalAlphaMonth = "9")
				LocalAlphaDate 	+= "SEP "
			else
			if (LocalAlphaMonth = "10")
				LocalAlphaDate 	+= "OCT "
			else
			if (LocalAlphaMonth = "11")
				LocalAlphaDate 	+= "NOV "
			else 
				LocalAlphaDate 	+= "DEC "
				
			LocalAlphaDate 	+= LocalDate year
			return "Expense " + LocalAllocationDisplayPeriod + " " + LocalAlphaDate + " " + CurrentTime
			
		CurrentTime  is a DerivedField
			type is Time
			return current corporate time


		JulianStartDate is a DerivedField
			type is Alpha 7
			restricted			
			LocalDate		 = current corporate date
			LocalStartDate	 = LocalDate period
			LocalStartDate	+= "01" 
			LocalDate1		 = LocalStartDate

			LocalAlphaYear	 = LocalDate1 year
			LocalAlphaDay  	 = LocalDate1 year day			
			JulianStartDate	 = LocalAlphaYear
			if (LocalAlphaDay size = 1)
				JulianStartDate	+= "00"
			else
			if (LocalAlphaDay size = 2)
				JulianStartDate	+= "0"
			JulianStartDate += LocalAlphaDay
		
		DerivedStartDate is a DerivedField
			type is Date 
			restricted
			LocalDayNumeric = JulianStartDate[5:7]
			LocalDateAlpha  = JulianStartDate[1:4] + "0101" 
			LocalDate 		= LocalDateAlpha
			LocalDate 	   += (LocalDayNumeric - 1)
			return LocalDate	

		JulianEndDate is a DerivedField
			type is Alpha 7
			restricted			
			LocalDate		 = current corporate date
			LocalEndDate	 = LocalDate period
			LocalEndDate	+= LocalDate days in month
			LocalDate1		 = LocalEndDate

			LocalAlphaYear	 = LocalDate1 year
			LocalAlphaDay  	 = LocalDate1 year day			
			JulianEndDate	 = LocalAlphaYear
			if (LocalAlphaDay size = 1)
				JulianEndDate	+= "00"
			else
			if (LocalAlphaDay size = 2)
				JulianEndDate	+= "0"
			JulianEndDate += LocalAlphaDay			
			
		DerivedEndDate is a DerivedField
			type is Date 
			restricted
			LocalDayNumeric = JulianEndDate[5:7]
			LocalDateAlpha  = JulianEndDate[1:4] + "0101" 
			LocalDate 		= LocalDateAlpha
			LocalDate 	   += (LocalDayNumeric - 1)
			return LocalDate

	Relations
		GeneralLedgerCalendarPeriodsRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNodeTypeAndJulianDates
				related.FinanceEnterpriseGroup 		= TrueCostConfiguration

				related.TopNode						= TrueCostAllocationControl.Calendar.TopNode
				related.PeriodType				 	= LocalPeriodType
				related.EndDateJulian				>= LocalJulianDate
			Instance Selection
				where (related.StartDateJulian	   <= LocalJulianDate)
		
		GeneralLedgerCalendarPeriodRangeRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNodeTypeAndJulianDates
				related.FinanceEnterpriseGroup 		= TrueCostConfiguration
				related.TopNode						= TrueCostAllocationControl.Calendar.TopNode
				related.PeriodType				 	= LocalPeriodType	
				related.EndDateJulian			   >= LocalJulianDateFrom
			Instance Selection
				where (related.StartDateJulian	   <= LocalJulianDateTo)
				
		TrueCostRunParameterPeriodRel is a TrueCostRunParameterPeriod set

		AllocationSnapshotPeriodRel
			one-to-many relation to AllocationSnapshot
			Field Mapping uses ByPeriods
				related.FinanceEnterpriseGroup			= TrueCostConfiguration
				related.AllocationSourceSystem			= AllocationSourceSystem.TrueCost
				related.AllocationPeriod				= LocalAllocationPeriod

		AllocationSnapshotNameRel
			one-to-many relation to AllocationSnapshot
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= TrueCostConfiguration
				related.AllocationSourceSystem			= AllocationSourceSystem.TrueCost
				related.AllocationSnapshot				= LocalSnapshotName
				
		AllocationRunNameRel
			one-to-many relation to AllocationRun
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= TrueCostConfiguration
			Instance Selection
				where (related.AllocationSourceSystem	= AllocationSourceSystem.TrueCost
				and    related.AllocationPeriod			= LocalAllocationPeriod
				and    related.UseCapacityLedger		= LocalUseCapacityLedger
				and    related.RunName					= RunName
				and   (related.Status.Started
				or     related.Status.Completed
				or     related.Status.Finalized
				or     related.Status.Journalized
				or     related.Status.JournalizeInProcess))	
					
		AllocationControlRel
    		one-to-one relation to AllocationControl
    		Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup				= TrueCostConfiguration
    			related.AllocationSourceSystem 				= AllocationSourceSystem.TrueCost
    			related.AllocationControl					= "TC_" + TrueCostAllocationControl

	Rule Blocks
		GenerateSnapshotName
			invoke Create TrueCostRunParameterPeriod
				invoked.TrueCostConfiguration		= TrueCostConfiguration
				invoked.TrueCostAllocationControl 	= TrueCostAllocationControl
				invoked.TrueCostRunParameter		= TrueCostRunParameter
				invoked.AllocationPeriod			= LocalAllocationPeriod
				invoked.SnapshotName				= LocalSnapshotName
				invoked.EndDate						= LocalEndPeriod
		
		CheckRunName
			if (UseActualLedger)
				LocalUseCapacityLedger 	= false

				constraint (!AllocationRunNameRel exists)
					"RunNameAlreadyExistsFor<ActualsLedger.Ledger>Period<LocalAllocationDisplayPeriod>"
			if (UseCapacityLedger)
				LocalUseCapacityLedger = true

				constraint (!AllocationRunNameRel exists)
					"RunNameAlreadyExistsFor<CapacityLedger.Ledger>Period<LocalAllocationDisplayPeriod>"
		RunCalculation
			invoke Run TrueCostAllocationControl.AllocationControl in background
				run after AsyncId
				assign async action request id to AsyncId
				invoked.PrmAllocation			= Allocation
				invoked.PrmGroup				= AllocationGroup
				invoked.PrmDate					= LocalEndPeriod
				invoked.PrmFromStep				= FromStep
				invoked.PrmToStep				= ToStep
				invoked.PrmCapacityLedger		= LocalCapacityLedger	
				invoked.PrmGenerateListingData	= true
				invoked.PrmGenerateSourceValue	= true
				invoked.PrmRunName		 		= RunName
				invoked.PrmDescription			= RunDescription
				invoked.PrmRunStartDate			= FromAllocationPostDate
				invoked.PrmRunEndDate			= ToAllocationPostDate
				invoked.PrmMultiMonthAllocation	= MultiMonthFlag
				invoked.PrmAllocationSnapshot	= LocalSnapshotName
				invoked.PrmAllocationCallback.AllocationTrueCostCallback.TrueCostConfiguration 		= TrueCostConfiguration
				invoked.PrmAllocationCallback.AllocationTrueCostCallback.TrueCostAllocationControl 	= TrueCostAllocationControl
				invoked.PrmBypassCheckAllocationLine   = true
				
		ExecuteRun
			if (UseActualLedger)
				initialize LocalCapacityLedger
				include RunCalculation
	
			if (UseCapacityLedger)
				LocalCapacityLedger = CapacityLedger
				include RunCalculation
		
		CreateTrueCostRunParameterPeriod
			LocalPeriodType = 3 
			LocalCalendar	= TrueCostAllocationControl.Calendar
			
			if (MultiMonthFlag)
				LocalJulianDateFormat.InputDate = FromAllocationPostDate
				LocalJulianDateFrom				= LocalJulianDateFormat.JulianDate
				LocalJulianDateFormat.InputDate = ToAllocationPostDate
				LocalJulianDateTo				= LocalJulianDateFormat.JulianDate
					
				for each GeneralLedgerCalendarPeriodRangeRel				
					LocalEndPeriod 					= each.DerivedEndDate	
					LocalAllocationPeriod			= each.GeneralLedgerCalendarPeriod
					LocalAllocationDisplayPeriod	= each.DisplayPeriod
					include CheckRunName
					
					if (SourceBalanceOption.ExistingExpenseSnapshot)
						constraint (AllocationSnapshotPeriodRel exists)
							"NoAvailableExistingExpenseSnapshotFor<LocalAllocationDisplayPeriod>"
						initialize LocalSnapshotName
					else
						LocalSnapshotName = DerivedSnapshotName
						
					include GenerateSnapshotName
			else
				
				LocalJulianDateFormat.InputDate = AllocationPostDate
				LocalJulianDate					= LocalJulianDateFormat.JulianDate
				
				LocalAllocationPeriod			= first GeneralLedgerCalendarPeriodsRel.GeneralLedgerCalendarPeriod
				LocalAllocationDisplayPeriod	= first GeneralLedgerCalendarPeriodsRel.DisplayPeriod
				LocalEndPeriod 					= first GeneralLedgerCalendarPeriodsRel.DerivedEndDate
					
				include CheckRunName
				
				if (SourceBalanceOption.ExistingExpenseSnapshot)
					constraint (AllocationSnapshotPeriodRel exists)
						"NoAvailableExistingExpenseSnapshotFor<LocalAllocationDisplayPeriod>"
					initialize LocalSnapshotName
				else
					LocalSnapshotName = DerivedSnapshotName
				
				include GenerateSnapshotName	
		
		ReCreateRunParameterPeriod
			invoke Delete TrueCostRunParameterPeriodRel
			include CreateTrueCostRunParameterPeriod
						
		ValidateLedger
			constraint(UseActualLedger or UseCapacityLedger)
				"MustSelectALedgerForThisRun"
	Actions
		Create is an Action
			restricted
		Update is an Update Action
			Entrance Rules
				LocalOldAllocationPostDate		= old AllocationPostDate
				LocalOldFromAllocationPostDate	= old FromAllocationPostDate
				LocalOldToAllocationPostDate	= old ToAllocationPostDate
			Action Rules
				include ValidateLedger
			Exit Rules
				if (MultiMonthFlag)
					if((not LocalOldFromAllocationPostDate	= FromAllocationPostDate)
					or (not LocalOldToAllocationPostDate	= ToAllocationPostDate))
						include ReCreateRunParameterPeriod
				else
					if (not LocalOldAllocationPostDate		= AllocationPostDate)
						include ReCreateRunParameterPeriod
				
		Delete is a Delete Action

		Purge is a Purge Action
			restricted
			
		CreateTrueCostRunParameter is a Create Action
			default label is "CreateTrue\CostRunParameter"
			Action Rules
				include ValidateLedger
				ActualsLedger 	= TrueCostAllocationControl.ActualsLedger
				CapacityLedger	= TrueCostAllocationControl.CapacityLedger
				Calendar		= TrueCostAllocationControl.Calendar
				SourceLedger	= TrueCostAllocationControl.SourceLedger

			Exit Rules
				include CreateTrueCostRunParameterPeriod
				
		RunAllocation is an Instance Action
		 	confirmation required
		 		"ThisWillRunAllocation"

		 	completion message is "AllocationRunInitiated"
		 	Action Rules
				Status = Status.InProcess				
				for each TrueCostRunParameterPeriodRel
					LocalSnapshotName 				= each.SnapshotName				
					
					constraint (LocalSnapshotName entered)
						"ExpenseSnapshotNameIsRequired"

					if (SourceBalanceOption.NewExpenseSnapshot)
						constraint (AllocationSnapshotNameRel not exists)
							"SnapshotNameAlreadyExist"
										
				for each TrueCostRunParameterPeriodRel
					LocalSnapshotName 				= each.SnapshotName				
					LocalEndPeriod 					= each.EndDate
					LocalAllocationPeriod				= each.AllocationPeriod
					LocalAllocationDisplayPeriod		= each.AllocationPeriod.DisplayPeriod
					
					include CheckRunName 
							
					if (SourceBalanceOption.NewExpenseSnapshot)
						invoke Create AllocationSnapshot 
							assign result to AllocationSnapshotView
							invoked.FinanceEnterpriseGroup			= TrueCostConfiguration
							invoked.AllocationSourceSystem			= AllocationSourceSystem.TrueCost
							invoked.AllocationSnapshot				= LocalSnapshotName
							invoked.Scenario						= 2
							invoked.Ledger							= SourceLedger
							invoked.Calendar						= Calendar
							invoked.AllocationPeriod				= LocalAllocationPeriod
						AsyncId 									= AllocationSnapshotView.AsyncId
					include ExecuteRun
			Exit Rules
				Status = Status.Complete
