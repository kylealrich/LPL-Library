BillingInvoiceImport is a BusinessClass
	owned by bl
	prefix is OII
	classic name is OIINVOICE

	Ontology
		symbolic key is BillingInvoiceImport
			classic set name is OIISET1


	Patterns
		implements InlineUserFields
			size is 1000
		implements StaticJava
		disable AuditIndex
		disable Auditing 
		disable EffectiveDated

	Persistent Fields
		RunGroup
		Company							is a BillingCompany
		InvcPrefix						is an InvoicePrefix
		InvoiceNumber
			classic name is INVC-NUMBER
		BillingProcessLevel
			classic name is PROCESS-LEVEL
		Location						is an InventoryLocation
		Customer
		CustomerShipTo
			classic name is SHIP-TO
		BillTo							is a CustomerBillTo
		BillingInvoiceType
			classic name is INVC-TYPE
		ReasonCode						is an OrderCancelCreditReason
		InvoiceDate						is Date
		GeneralLedgerDate				is Date
			classic name is GL-DATE
			default label is "GlobalLedgerDate"
		PriceDate						is Date
		TaxDate							is Date
		Currency
			classic name is CURRENCY-CODE
		CurrencyRate
			classic name is CURR-RATE
		Revalue							is Boolean
			classic name is REVALUE-FL
		TaxCode
		TaxableTotal					is an InternationalAmount
		TermCode						is a TermsCode
			classic name is TERMS-CD
		CustomerOrder
			classic name is ORDER-NBR
		WarehouseShipment
			classic name is SHIPMENT-NBR
		ShipDate						is Date
		CheckNumber						is a CheckNbr
			classic name is CHECK-NBR
		CashInAdvanceAmount				is an InternationalAmount
			classic name is CIA-AMT
		LetterOfCredit
			classic name is LETTER-OF-CR
		Territory
		SalesRepresentative
			classic name is SALESMAN
		CommisionRate1					is a ChrgRate
			classic name is COMM-RATE-1
		Salesman2						is a SalesRepresentative
		CommisionRate2					is a ChrgRate
			classic name is COMM-RATE-2

		CommissionSplitPercentage
			classic name is COMM-SPLIT
		Reference
		CustomerPurchaseOrder
			classic name is CUST-PO-NBR
		ReceivableGeneralLedgerCode
			classic name is AR-CODE
			default label is "ReceivableGlobalLedgerCode"
		EnteredDiscount					is an InternationalAmount
			classic name is ENTERED-DISC
		FreightCode						is a BillingFreightCode
		FreightCharge					is an InternationalAmount
			classic name is FRT-CHARGE
		StandardComments				is a StdCommX6InOiinvoice
			classic name is STD-COMM
		UserDefinedField1				is a TransUser1
			classic name is TRANS-USER1
		UserDefinedField2				is a S3Agent
			classic name is TRANS-USER2
		UserDefinedField3				is Date
			classic name is TRANS-USER3
		UserDefinedField4				is a TransUser4
			classic name is TRANS-USER4
		UserDefinedField5				is an InternationalAmount
			classic name is TRANS-USER5
		BillingInvoiceSource
			classic name is INVC-SOURCE
		OriginalBillingInvoice			is a BillingInvoiceImport


		OriginalBillingInvoicePrefix	is a InvoicePrefix
			classic name is ORIG-INVC-PRE
		OriginalBillingInvoiceNumber	is a InvoiceNumber
			classic name is ORIG-INVC-NBR
		AutoApply						is Boolean
			classic name is AUTO-APP-FL
		BankTransactionCode
			classic name is BANK-INST-CODE
		HoldCode						is a ReceivableHoldCode
		TaxExemptCode
			classic name is TAX-EXEMPT-CD
		BillingInvoiceImportUserField1	is an OeiUsrFld01
			classic name is OEI-USR-FLD-01
		BillingInvoiceImportUserField2	is an OeiUsrFld02
			classic name is OEI-USR-FLD-02
		BillingInvoiceImportUserField3	is an OeiUsrFld03
			classic name is OEI-USR-FLD-03
		BillingInvoiceImportUserField4	is an OeiUsrFld04
			classic name is OEI-USR-FLD-04
		BillingInvoiceImportUserField5	is an OeiUsrFld05
			classic name is OEI-USR-FLD-05
		BillingElectronicPaymentType
			classic name is EP-TYPE

		ElectronicPaymentAccount		is a BillingCustomerCreditCard
			classic name is EP-ACCOUNT
		ElectronicPaymentExpirationDate is Date
			sql name is EPaymentExpirationDate
			classic name is EP-EXP-DATE
		MinimumMargin					is an EpMarginMin
			classic name is EP-MARGIN-MIN
		MinimumMarginPercent			is an EpMarginPct
			classic name is EP-MARGIN-PCT
		Project							is a FinanceCodeBlockProjectOnly
			classic name is ACTIVITY
		CostProject						is a FinanceCodeBlockProjectOnly
			classic name is ACTIVITY-C
		OrderEntryOperator
			classic name is OPR-CODE
		GlobalDocumentType
			classic name is GLBL-DOC-TYPE
		CompanyCustomer
		InvoiceTypeCode
		CustomerInvoiceTypeCode
		RegimeCode
		ParallelReference				is AlphaUpper 100
		EWayBillNumber
		ErrorOccurred					is Boolean
		ErrorMessage					is Alpha 150
		ErrorFile						is AlphaUpper 50
		BillingManualInvoiceHeader
			delete ignored
		InterfaceRun					is a BillingInterfaceResult
			delete ignored
		CertificationNumber							
		CertificationDate				is Date		
		GlobalInvoiceNumber				is AlphaUpper size 22		

	Transient Fields
		TransientConditionalInvoiceNumber		is AlphaUpper 40
			default label is "InvoiceNumber"
			derive value from ConditionalInvoiceNumber


	Local Fields
		LocalProcessLevel				is a BillingProcessLevel
		LocalBillingInvoicePrefix		is like BillingInvoicePrefix
		LocalLineNumber					is Numeric size 6
		ValidateReceivablePrefix
		LocalInvoiceType				is AlphaUpper size 1
		LocalNumber						is Numeric size 8
		LocalGeneralLedgerCompanyGroup	is a GeneralLedgerCompanyGroup



	Context Fields
		FinanceEnterpriseGroup
			default to actor.context.FinanceEnterpriseGroup



	Relations
		BillingInvoiceRel
			one-to-one relation to BillingInvoice
			Field Mapping uses symbolic key
				related.Company							= Company
				related.BillingInvoice.InvoicePrefix	= InvcPrefix
				related.BillingInvoice.InvoiceNumber	= InvoiceNumber

		OriginalBillingInvoiceRel
			one-to-one relation to BillingInvoiceImport
			Field Mapping uses symbolic key
				related.BillingInvoiceImport = OriginalBillingInvoice

		BillingInvoicePrefixRel	
			one-to-one relation to BillingInvoicePrefix
			Field Mapping uses symbolic key
				related.Company 				= Company
				related.BillingProcessLevel 	= LocalProcessLevel
				related.BillingInvoicePrefix	= LocalBillingInvoicePrefix

		BillingPrefixRel
			one-to-many relation to BillingInvoicePrefix
			Field Mapping uses ByPrefix
				related.Prefix					= InvcPrefix
				related.Company					= Company



		BillingInvoiceImportLinesRel
			one-to-many relation to BillingInvoiceImportLine
			Field Mapping uses ByRunGroup
				related.RunGroup						= RunGroup
				related.Company							= Company
				related.InvcPrefix						= InvcPrefix
				related.InvoiceNumber					= InvoiceNumber

		CustomerInvoiceTypeCodeRel
			one-to-one relation to CustomerInvoiceTypeCode
			Field Mapping uses symbolic key
				related.Company							= Company
				related.Customer						= Customer
				related.InvoiceTypeCode					= InvoiceTypeCode

		CustomerInvoiceTypeCodesRel
			one-to-many relation to CustomerInvoiceTypeCode
			Field Mapping uses symbolic key
				related.Company							= Company
				related.Customer						= Customer
			Instance Selection
				where (related.Default)

		CompanyCustomerInvoiceTypeCodesRel
			one-to-many relation to CustomerInvoiceTypeCode
			Field Mapping uses symbolic key
				related.Company							= Company
				related.Customer						= Customer

		AnyCustomerInvoiceTypeCodeRel
			one-to-one relation to CustomerInvoiceTypeCode
			Field Mapping uses symbolic key
				related.Company							= Company
				related.Customer						= Customer
				related.InvoiceTypeCode					= InvoiceTypeCode

		BillingInvoiceAddOnChargeImportRel
			one-to-many relation to BillingInvoiceAddOnChargeImport
			Field Mapping uses ByRunGroup
				related.RunGroup						= RunGroup
				related.Company							= Company
				related.InvcPrefix						= InvcPrefix
				related.InvoiceNumber					= InvoiceNumber
				related.LineNumber						= blank

		BillingInvoiceImportCommentsRel
			one-to-many relation to BillingInvoiceImportComments
			Field Mapping uses ByRunGroup
				related.RunGroup						= RunGroup
				related.Company							= Company
				related.InvcPrefix						= InvcPrefix
				related.InvoiceNumber					= InvoiceNumber
				related.LineNumber						= blank

		BillingInvoiceLineAddOnChargeImportRel
			one-to-many relation to BillingInvoiceAddOnChargeImport
			Field Mapping uses ByRunGroup
				related.RunGroup						= RunGroup
				related.Company							= Company
				related.InvcPrefix						= InvcPrefix
				related.InvoiceNumber					= InvoiceNumber
				related.LineNumber						= LocalLineNumber

		BillingInvoiceAOCImportCountRel
			one-to-many relation to BillingInvoiceAddOnChargeImport
			Field Mapping uses ByRunGroup
				related.RunGroup						= RunGroup
				related.Company							= Company
				related.InvcPrefix						= InvcPrefix
				related.InvoiceNumber					= InvoiceNumber

		BillingInvoiceImportLineCommentsRel
			one-to-many relation to BillingInvoiceImportComments
				Field Mapping uses ByRunGroup
					related.RunGroup						= RunGroup
					related.Company							= Company
					related.InvcPrefix						= InvcPrefix
					related.InvoiceNumber					= InvoiceNumber
					related.LineNumber						= LocalLineNumber

		BillingInvoiceImportCommentsCountRel
			one-to-many relation to BillingInvoiceImportComments
				Field Mapping uses ByRunGroup
					related.RunGroup						= RunGroup
					related.Company							= Company
					related.InvcPrefix						= InvcPrefix
					related.InvoiceNumber					= InvoiceNumber

		ReceivableInvoiceRel
			one-to-one relation to ReceivableInvoice
			Field Mapping uses symbolic key
				related.Company							= Company
				related.ReceivableInvoiceType			= LocalInvoiceType
				related.ReceivableInvoice				= DerivedBillingInvoice

		ReceivableInvoiceCertificationNumberRel	
			one-to-many relation to ReceivableInvoice
			Field Mapping uses symbolic key
				related.Company							= Company
				related.ReceivableInvoiceType			= LocalInvoiceType


			Instance Selection	
				where (related.ReceivableInvoice != DerivedBillingInvoice	
				and CertificationNumber entered	
				and related.CertificationNumber	= CertificationNumber)	

		ManualBillingInvoiceRel
			one-to-many relation to BillingInvoice
			Field Mapping uses symbolic key
				related.Company							= Company
				related.BillingInvoice.InvoicePrefix	= InvcPrefix
				related.BillingInvoice.InvoiceNumber	= InvoiceNumber
			Instance Selection
				where (!related.InterfaceInProcess)

		ManualBillingInvoiceCertificationNumberRel	
			one-to-many relation to BillingInvoice
			Field Mapping uses symbolic key
				related.Company								= Company



			Instance Selection	
				where ((related.BillingInvoice.InvoicePrefix	!= InvcPrefix	
				or related.BillingInvoice.InvoiceNumber	!= InvoiceNumber)	
				and (CertificationNumber entered	
				and related.CertificationNumber	= CertificationNumber	
				and !related.InterfaceInProcess))	

		FranchiseSalesRel
			one-to-many relation to FranchiseSales
			Field Mapping uses Set9
				related.Company				= Company
				related.Customer			= Customer
			Instance Selection
				where (related.InvoicePrefix	= InvcPrefix
				and	related.InvoiceNumber		= InvoiceNumber)

		BillingInvoiceImportRel
			one-to-one relation to BillingInvoiceImport
			Field Mapping uses ByPrefixandInvoiceNumber
				related.Company					= Company
				related.InvcPrefix				= InvcPrefix
				related.InvoiceNumber			= LocalNumber

		BillingInvoiceImportCertificationNumberRel	
			one-to-many relation to BillingInvoiceImport
			Field Mapping uses Set2
				related.Company					= Company


			Instance Selection	
				where ((related.InvcPrefix	!= InvcPrefix	
				or related.InvoiceNumber	!= InvoiceNumber)	
				and (CertificationNumber entered	
				and related.CertificationNumber	 = CertificationNumber))	


		BillingInvoiceNumberRel
			one-to-one relation to BillingInvoice
			Field Mapping uses symbolic key
				related.Company							= Company
				related.BillingInvoice.InvoicePrefix	= InvcPrefix
				related.BillingInvoice.InvoiceNumber	= LocalNumber

		BillingInvoiceInterfaceRel
			one-to-many relation to BillingInvoice
			Field Mapping uses symbolic key
				related.Company							= Company
				related.BillingInvoice.InvoicePrefix	= InvcPrefix
				related.BillingInvoice.InvoiceNumber	= InvoiceNumber
			Instance Selection
				where (related.OriginatingInterfaceRun			= InterfaceRun)


		GeneralLedgerCompanyGroupRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= LocalGeneralLedgerCompanyGroup
				related.Company						= Company

		GlobalInvoiceNumberRel				
			one-to-many relation to BillingInvoice
			Field Mapping uses symbolic key
				related.Company							= Company
			Instance Selection
				where (related.BillingInvoiceType	    = BillingInvoiceType
				and    related.GlobalInvoiceNumber	    = GlobalInvoiceNumber)
				
		GlobalInvoiceNumberImportRel		
			one-to-many relation to BillingInvoiceImport
			Field Mapping uses Set2
				related.Company							= Company
			Instance Selection
				where (related.BillingInvoiceType	    = BillingInvoiceType
				and    related.GlobalInvoiceNumber	    = GlobalInvoiceNumber)


	Sets

		Set2
			indexed
			Sort Order
				Company
				GeneralLedgerDate
				BillingInvoiceImport

		ByPrefixandInvoiceNumber
			indexed
			Sort Order
				Company
				InvcPrefix
				InvoiceNumber

		ByInterfaceRun
			Sort Order
				InterfaceRun
				Company
				InvcPrefix
				InvoiceNumber



	Field Rules
		RunGroup
			required

		BillingInvoiceType
			required

		BillingProcessLevel
			required

		ParallelReference
			if (not ParallelReferenceEnabled)
				initialize

		OriginalBillingInvoicePrefix
			default to OriginalBillingInvoiceRel.InvcPrefix

		OriginalBillingInvoiceNumber
			default to OriginalBillingInvoiceRel.InvoiceNumber

		Company
			required

		BillingInvoiceSource
			if (BillingInvoiceSource entered)
				constraint (BillingInvoiceSource.Interfaced or BillingInvoiceSource.Project or BillingInvoiceSource.Franchise)
					"InvoiceSourceMustBeInterfacedOrProjectOrFranchise"
			else
				default to "I"
		
		GlobalInvoiceNumber
			if (Company.ManualInvoiceNumbering)
				required
					"FieldInvoiceIsRequired"
				
				if (GlobalInvoiceNumber != old GlobalInvoiceNumber)
					initialize ValidateReceivablePrefix
					ValidateReceivablePrefix.EditReceivableCompany			= Company
					ValidateReceivablePrefix.EditReceivableInvoice			= GlobalInvoiceNumber
					ValidateReceivablePrefix.EditReceivableInvoiceType		= DerivedBillingInvoiceType
					ValidateReceivablePrefix.EditAltReceivableInvoiceType	= DerivedBillingInvoiceType
		
					constraint (ValidateReceivablePrefix.ErrorNumber not entered)
						"<ValidateReceivablePrefix.ErrorMessage>"
						
					constraint (GlobalInvoiceNumberRel not exists
					and 		GlobalInvoiceNumberImportRel not exists)
						"BillingInvoiceAlreadyExistsWithSameInvoiceNumber"



	Derived Fields
		DerivedBillingInvoiceType	is a DerivedField		
			type is AlphaUpper size 1
			if (BillingInvoiceType.Credit)
				return "C"
			else
				return "I"
		
		ConditionalInvoiceNumber is a ConditionalField
			type is AlphaUpper 40		
			default label is "InvoiceNumber"
			if (IsManualInvoiceNumbering)
				if (GlobalInvoiceNumber not entered
				and CertificationNumber entered)
					CertificationNumber
				else
					GlobalInvoiceNumber
			else
			if (ParallelReferenceEnabled)
				DerivedZeroPaddedInvoiceNumber
			else
				InvoiceNumber 


		DerivedBillingInvoiceForParallelReference is a StringField
			type is AlphaUpper 13
			default label is "Invoice"
			InvcPrefix 
			DerivedZeroPaddedInvoiceNumber


		DerivedBillingInvoice is a StringField	 
			type is AlphaUpper 13
			default label is "Invoice"
			InvcPrefix 
			DerivedZeroPaddedInvoiceNumber


		DerivedZeroPaddedInvoiceNumber is a DerivedField
			type is AlphaUpper 8
			restricted
			return com.lawson.apps.procurement.base.StringUtils.leadingZeros(DerivedAlphaRightInvoiceNumber)


		DerivedAlphaRightInvoiceNumber is a DerivedField
			type is AlphaRight 8
			restricted
			return InvoiceNumber 


		NoLineOrAOCMsg is a MessageField 
			restricted
			"NoLinesOrAdd-onChargesToProcess"


		BillingInvoiceLineCount is a DerivedField
			type is Numeric 12 
			return instance count of BillingInvoiceImportLinesRel


		BillingInvoiceAOCCount is a DerivedField
			type is Numeric 12 
			return instance count of BillingInvoiceAOCImportCountRel


		BillingInvoiceCommentsCount is a DerivedField
			type is Numeric 12 
			return instance count of BillingInvoiceImportCommentsCountRel


		DerivedInvoiceNumber is a DerivedField
			type is Numeric 8
			return InvoiceNumber

	Rule Blocks

		ValidatePrefix
			if (LocalPrefix != InvcPrefix)
				LocalPrefix = InvcPrefix
				initialize ValidateReceivablePrefix
				initialize LocalErrorOccurred
				initialize LocalErrorMessage
				ValidateReceivablePrefix.EditReceivableCompany		= Company
				ValidateReceivablePrefix.EditSystem					= "BL"
				ValidateReceivablePrefix.EditReceivablePrefix		= LocalPrefix
				ValidateReceivablePrefix.SkipForValidation			= true

				if (!BillingInvoiceType.Credit)
					ValidateReceivablePrefix.EditReceivableInvoiceType	= "I"
				else
					ValidateReceivablePrefix.EditReceivableInvoiceType	= "C"

				if (ValidateReceivablePrefix.ErrorNumber entered)
					ErrorOccurred		= true
					ErrorMessage 		= ValidateReceivablePrefix.ErrorMessage
					LocalErrorOccurred	= ErrorOccurred
					LocalErrorMessage	= ErrorMessage
			else
				if (LocalErrorOccurred)
					ErrorOccurred	= true
					ErrorMessage	= LocalErrorMessage

		ValidateInvoiceNumber
			initialize LocalNumber
			constraint (!BillingInvoicePrefixRel.LastDocNbr = 99990000)
				"LastInvoiceNumberIsExceeding<BillingInvoicePrefixRel.LastDocNbr>;DoYouWantToProceed?"
			if (BillingInvoicePrefixRel.LastDocNbr = 99999999)
				LocalNumber = 1
				while (LocalNumber <= 99999999)
					if (BillingInvoiceImportRel not exists)
						if (BillingInvoiceNumberRel not exists)
							end while
						else
							LocalNumber = LocalNumber + 1
					else
						LocalNumber = LocalNumber + 1
					constraint (!LocalNumber = 99999999)
						"CannotCreate:InvoiceNumberReachedToMaximum"
			else
				increment BillingInvoicePrefixRel.LastDocNbr
				LocalNumber = BillingInvoicePrefixRel.LastDocNbr

		GlobalValidatePrefix
			ValidateReceivablePrefix.EditReceivableCompany		= Company
			ValidateReceivablePrefix.EditSystem					= "BL"
			ValidateReceivablePrefix.EditReceivablePrefix		= InvcPrefix
			ValidateReceivablePrefix.SkipForValidation			= true

			if (!BillingInvoiceType.Credit)
				ValidateReceivablePrefix.EditReceivableInvoiceType	= "I"
			else
				ValidateReceivablePrefix.EditReceivableInvoiceType	= "C"
			constraint (ValidateReceivablePrefix.ErrorNumber not entered)
				"<ValidateReceivablePrefix.ErrorMessage>"

			if (InvcPrefix != BillingInvoicePrefixRel.Prefix)
				constraint (!BillingPrefixRel exists)
					"InvoicePrefixIsUsedByOtherInvoiceType"


		ValidateDuplicateInvoice
			if (!BillingInvoiceType.Credit)
				LocalInvoiceType	= "I"
			else
				LocalInvoiceType	= "C"
			if (ManualBillingInvoiceRel exists)
				ErrorOccurred		= true
				ErrorMessage		= "BillingInvoiceAlreadyExistsWithSameInvoiceNumber"
			if (ReceivableInvoiceRel exists)
				ErrorOccurred		= true
				ErrorMessage		= "ReceivableInvoiceAlreadyExistsWithSameInvoiceNumber"


















		GlobalValidateDuplicateInvoice
			if (!BillingInvoiceType.Credit)
				LocalInvoiceType	= "I"
			else
				LocalInvoiceType	= "C"
			constraint (!ManualBillingInvoiceRel exists)
				"BillingInvoiceAlreadyExistsWithSameInvoiceNumber"
			constraint (!ReceivableInvoiceRel exists)
				"ReceivableInvoiceAlreadyExistsWithSameInvoiceNumber"















		GlobalUpdateLastDocumentNumber
			if (InvoiceNumber > BillingInvoicePrefixRel.LastDocNbr)
				invoke Update BillingInvoicePrefixRel
					invoked.LastDocNbr = InvoiceNumber


		UpdateLastDocumentNumber
			if (!BillingInvoiceType.Credit)
				if (BillingInvoiceSource.RecurringInvoice)
					LocalBillingInvoicePrefix = "RI"
				else
					LocalBillingInvoicePrefix = "IN"
			else
				LocalBillingInvoicePrefix = "CM"
			if (Company.InvoiceOption.CompanyLevelInvoicing)
				initialize LocalProcessLevel
			else
				LocalProcessLevel = BillingProcessLevel
			if (InvcPrefix != BillingInvoicePrefixRel.Prefix)
				if (BillingPrefixRel exists)
					ErrorOccurred = true
					ErrorMessage  = "InvoicePrefixIsUsedByOtherInvoiceType"
			if (!ErrorOccurred)
				if (InvoiceNumber > BillingInvoicePrefixRel.LastDocNbr)
					invoke Update BillingInvoicePrefixRel
						invoked.LastDocNbr = InvoiceNumber


		InterfaceThisInvoice
			initialize ErrorOccurred
			initialize ErrorMessage
			initialize ErrorFile

			if (Company.InvoiceEditOption)
				if (PrmReleaseOption.ReleaseAndBypassInvoicePrint)
					ErrorOccurred		= true
					ErrorMessage		= "CannotBypassInvoicePrintWhenInvoiceEditMustBeRun"

			if (!ErrorOccurred)
				if (BillingInvoiceSource != "F")
					include ValidatePrefix

			if (!ErrorOccurred)
				include ValidateDuplicateInvoice




			if (!ErrorOccurred)
				include UpdateLastDocumentNumber

			if (!ErrorOccurred)
				if (!BillingInvoiceImportLinesRel exists)
					if (!BillingInvoiceAddOnChargeImportRel exists)
						if (FreightCode not entered)
							ErrorOccurred		= true
							ErrorMessage		= NoLineOrAOCMsg

			if (!ErrorOccurred)

				if (BillingManualInvoiceHeader not entered)
					invoke InterfaceCreate BillingManualInvoiceHeader
						assign result to InterfacedInvoiceHeader
						invoked.Company						= Company
						invoked.BatchDate					= current date
						invoked.Description					= PrmDescription
						invoked.DetailCount					=  1
						invoked.InterfaceInProcess			= true
						invoked.OriginatingInterfaceRun		= InterfaceRun
						invoked.BillingInvoiceSource		= BillingInvoiceSource
					BillingManualInvoiceHeader = InterfacedInvoiceHeader.BillingManualInvoiceHeader

				else
					invoke FastUpdate BillingManualInvoiceHeader
						invoked.OriginatingInterfaceRun		= InterfaceRun


				if (BillingInvoiceRel not exists)
					invoke InterfaceCreate BillingInvoice
						assign result to InterfacedInvoice
						resume on error
							ErrorOccurred		= true
							ErrorMessage		= error message
							ErrorFile			= "BillingInvoice.Create"
						fill in fields from this instance
						invoked.Company									= Company
						invoked.BillingInvoice.InvoiceNumber 			= InvoiceNumber
						invoked.BillingInvoice.InvoicePrefix 			= InvcPrefix
						invoked.BatchNumber								= BillingManualInvoiceHeader
						invoked.InvoiceDate		 						= InvoiceDate
						invoked.TaxPointDate							= TaxDate
						invoked.Status 									= 0
						invoked.TermsCode								= TermCode
						invoked.EnteredDiscount							= EnteredDiscount
						invoked.CashInAdvance.TransactionAmount 		= CashInAdvanceAmount
						invoked.CommissionRate1							= CommisionRate1
						invoked.SalesRepresentative2					= Salesman2
						invoked.CommissionRate2							= CommisionRate2
						invoked.Currency								= Currency
						invoked.CurrencyRate							= CurrencyRate
						invoked.FreightCharge							= FreightCharge
						invoked.OriginalBillingInvoice.InvoicePrefix	= OriginalBillingInvoicePrefix
						invoked.OriginalBillingInvoice.InvoiceNumber	= OriginalBillingInvoiceNumber
						invoked.TaxExemptCode							= TaxExemptCode
						invoked.InterfaceInProcess						= true
						invoked.OriginatingInterfaceRun					= InterfaceRun
						invoked.CertificationNumber						= CertificationNumber	
				else
					invoke FastUpdate BillingInvoiceRel
						invoked.OriginatingInterfaceRun		=	InterfaceRun

				if (!ErrorOccurred)

					for each BillingInvoiceImportLinesRel
						if (!ErrorOccurred)
							if (!each.BillingInvoiceLineExists)
								invoke InterfaceImportLine BillingInvoiceRel
									resume on error
										ErrorOccurred		= true
										ErrorMessage		= error message
										ErrorFile			= "BillingInvoiceLine.Create"
									invoked.PrmBillingInvoiceImportLine = each.LineNumber

								if(!ErrorOccurred)
									invoke FastUpdate each
										invoked.BillingInvoiceLineExists	= true

							LocalLineNumber = each.LineNumber


							if (!ErrorOccurred)
								for each BillingInvoiceLineAddOnChargeImportRel
									if (!ErrorOccurred)
										invoke Create BillingInvoiceAddOnCharge
											resume on error
												ErrorOccurred		= true
												ErrorMessage		= error message
												ErrorFile			= "BillingInvoiceLineAddOnCharge.Create"
											fill in fields from each
											invoked.Company							= each.Company
											invoked.BillingInvoice.InvoiceNumber 	= each.InvoiceNumber
											invoked.BillingInvoice.InvoicePrefix 	= each.InvcPrefix
											invoked.BillingInvoiceLine				= LocalLineNumber
											invoked.Miscellaneous					= each.Miscellaneous
											invoked.EnteredPrice					= each.EnteredPrice
											invoked.SalesAccount.Project			= each.Project
											invoked.COGSAccount.Project				= each.CostProject
											invoked.EnteredUnitPrice				= each.EnteredUnitPrice
											
										if (!ErrorOccurred)
											invoke FastDelete each


							if (!ErrorOccurred)
								for each BillingInvoiceImportLineCommentsRel
									if (!ErrorOccurred)
										invoke Create BillingInvoiceComments
											resume on error
												ErrorOccurred		= true
												ErrorMessage		= error message
												ErrorFile			= "BillingInvoiceLineComments.Create"
											fill in fields from each
											invoked.Company								= each.Company
											invoked.BillingInvoice.InvoiceNumber 		= each.InvoiceNumber
											invoked.BillingInvoice.InvoicePrefix 		= each.InvcPrefix
											invoked.BillingInvoiceLine					= LocalLineNumber
											invoked.CommentText							= each.Comment
											invoked.PrintCode							= each.PrintCode

										if (!ErrorOccurred)
											invoke FastDelete each


							if (!ErrorOccurred)
								invoke FastDelete each


					if (!ErrorOccurred)
						for each BillingInvoiceAddOnChargeImportRel
							if (!ErrorOccurred)
								invoke Create BillingInvoiceAddOnCharge
									resume on error
										ErrorOccurred		= true
										ErrorMessage		= error message
										ErrorFile			= "BillingInvoiceAddOnCharge.Create"
									fill in fields from each
									invoked.Company							= each.Company
									invoked.BillingInvoice.InvoiceNumber	= each.InvoiceNumber
									invoked.BillingInvoice.InvoicePrefix	= each.InvcPrefix
									invoked.BillingInvoiceLine				= blank
									invoked.Miscellaneous					= each.Miscellaneous
									invoked.EnteredPrice					= each.EnteredPrice
									invoked.SalesAccount.Project			= each.Project
									invoked.COGSAccount.Project				= each.CostProject
									invoked.EnteredUnitPrice				= each.EnteredUnitPrice

								if (!ErrorOccurred)
									invoke FastDelete each


					if (!ErrorOccurred)
						for each BillingInvoiceImportCommentsRel
							if (!ErrorOccurred)
								invoke Create BillingInvoiceComments
									resume on error
										ErrorOccurred		= true
										ErrorMessage		= error message
										ErrorFile			= "BillingInvoiceComments.Create"
									fill in fields from each
									invoked.Company								= each.Company
									invoked.BillingInvoice.InvoiceNumber 		= each.InvoiceNumber
									invoked.BillingInvoice.InvoicePrefix 		= each.InvcPrefix
									invoked.BillingInvoiceLine					= blank
									invoked.CommentText							= each.Comment
									invoked.PrintCode							= each.PrintCode

								if (!ErrorOccurred)
									invoke FastDelete each


					if (!ErrorOccurred)
						if (PrmReleaseOption.ReleaseBatchToInvoicePrint)
							invoke Release BillingInvoiceRel
								resume on error
									ErrorOccurred		= true
									ErrorMessage 		= error message
									ErrorFile			= "Release"
						else
						if (PrmReleaseOption.ReleaseAndBypassInvoicePrint)
							invoke ReleaseAndStatusToPrinted BillingInvoiceRel
								resume on error
									ErrorOccurred		= true
									ErrorMessage 		= error message
									ErrorFile			= "Release"


						invoke FastUpdate BillingInvoiceRel
							invoked.InterfaceInProcess = false

						invoke Update BillingManualInvoiceHeader
							invoked.InterfaceInProcess = false

						invoke FastDelete



	Conditions
		IsManualInvoiceNumbering				
			restricted
			when (Company.ManualInvoiceNumbering)
		
		ParallelReferenceEnabled
			restricted
			when (Company.ParallelReferenceFormat entered)

		RecordExists
			restricted
			when (BillingInvoiceImport exists)


	Actions
		Create is a Create Action

			Action Rules
				if (!BillingInvoiceType.Credit)
					if (Company.InvoiceOption.CompanyLevelInvoicing)
						initialize LocalProcessLevel
					else
						LocalProcessLevel = BillingProcessLevel
					if (BillingInvoiceSource.RecurringInvoice)
						LocalBillingInvoicePrefix = "RI"
						if (InvcPrefix entered)
							include GlobalValidatePrefix
						else
							InvcPrefix = BillingInvoicePrefixRel.Prefix
						if (InvoiceNumber entered)
							include GlobalValidateDuplicateInvoice
							include GlobalUpdateLastDocumentNumber
						else
							include ValidateInvoiceNumber
							InvoiceNumber = LocalNumber
					else
						LocalBillingInvoicePrefix = "IN"
						if (InvcPrefix entered)
							include GlobalValidatePrefix
						else
							InvcPrefix = BillingInvoicePrefixRel.Prefix
						if (InvoiceNumber entered)
							include GlobalValidateDuplicateInvoice
							include GlobalUpdateLastDocumentNumber
						else
							include ValidateInvoiceNumber
							InvoiceNumber = LocalNumber

				else
					if (Company.InvoiceOption.CompanyLevelInvoicing)
						initialize LocalProcessLevel
					else
						LocalProcessLevel = BillingProcessLevel
					LocalBillingInvoicePrefix = "CM"
					if (InvcPrefix entered)
						include GlobalValidatePrefix
					else
						InvcPrefix = BillingInvoicePrefixRel.Prefix
					if (InvoiceNumber entered)
						include GlobalValidateDuplicateInvoice
						include GlobalUpdateLastDocumentNumber
					else
						include ValidateInvoiceNumber
						InvoiceNumber = LocalNumber

				if (InvoiceTypeCode not entered)
					InvoiceTypeCode 	= first CustomerInvoiceTypeCodesRel.InvoiceTypeCode
					if (TermCode not entered)
						TermCode 			= first CustomerInvoiceTypeCodesRel.TermsCode




			Exit Rules
				if (CompanyCustomerInvoiceTypeCodesRel exists 
				and InvoiceTypeCode entered)
					constraint (AnyCustomerInvoiceTypeCodeRel exists)
						"InvoiceTypeCodeNotFoundInCustomer'sInvoiceTypeCodes"


		Update is an Update Action
			Action Rules
				if (InvoiceTypeCode changed
				and InvoiceTypeCode != old InvoiceTypeCode)
					confirmation required
						"ChangingInvoiceTypeCodeMayChangePaymentTerms;Proceed?"
					
					if (InvoiceTypeCode entered)
						if (CustomerInvoiceTypeCodeRel.TermsCode entered
						and TermCode not changed)
							TermCode 	= CustomerInvoiceTypeCodeRel.TermsCode
						else
						if (InvoiceTypeCode.TermsCode entered
						and TermCode not changed)
							TermCode 	= InvoiceTypeCode.TermsCode





			Exit Rules
				if (CompanyCustomerInvoiceTypeCodesRel exists
				and InvoiceTypeCode entered)
					constraint (AnyCustomerInvoiceTypeCodeRel exists)
						"InvoiceTypeCodeNotFoundInCustomer'sInvoiceTypeCodes"


		Delete is a Delete Action
			Entrance Rules
				if (BillingInvoiceRel.InterfaceInProcess)
					confirmation required
						"InvoiceIsPartiallyInterfacedAndThoseRecordsWillAlsoBeDeleted"
				invoke Delete BillingInvoiceImportLinesRel
				invoke Delete BillingInvoiceAddOnChargeImportRel
				invoke Delete BillingInvoiceImportCommentsRel
				invoke Delete BillingInvoiceInterfaceRel


		FastDelete  is a Delete Action
			restricted
			bypass relational integrity rules


		InterfaceInvoices is a Set Action
			Parameters
				PrmRunGroup					is a RunGroup
				PrmCompany					is a BillingCompany
				PrmCompanyGroup				is a GeneralLedgerCompanyGroup
				PrmProcessLevel				is a BillingProcessLevel
				PrmCurrencyCd				is a Currency
				PrmDescription				is AlphaUpper size 30
				PrmReleaseOption			is AlphaUpper size 1
					States
						DoNotReleaseBatch				value is "N"
						ReleaseBatchToInvoicePrint		value is "Y"
						ReleaseAndBypassInvoicePrint	value is "B"
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup

			Parameter Rules
				PrmFinanceEnterpriseGroup
					default to actor.context.FinanceEnterpriseGroup
				PrmRunGroup
					required
				PrmCompany
					if (PrmCompany.InvoiceEditOption)
						constraint (!PrmReleaseOption.ReleaseAndBypassInvoicePrint)
							"CannotBypassInvoicePrintWhenInvoiceEditMustBeRun"
				PrmCompanyGroup
					constraint (PrmCompany not entered)
						"BothCompanyAndCompanyGroupCannotBeEntered"
					constraint (PrmProcessLevel not entered)
						"CompanyGroupEntered,ProcessLevelCannotBeEntered"
					LocalGeneralLedgerCompanyGroup = PrmCompanyGroup
				PrmReleaseOption
					initial value is "N"
					default to "N"

			Local Fields
				LocalInterfaceResultView			is a BillingInterfaceResult view
				InterfacedInvoiceHeader				is a BillingManualInvoiceHeader view
				InterfacedInvoice					is a BillingInvoice view
				LocalInstanceCount					is Numeric 12
				LocalBillingInvoiceCount			is Numeric 12
				LocalBillingInvoiceLineCount		is Numeric 12
				LocalBillingInvoiceAddOnChrageCount	is Numeric 12
				LocalBillingInvoiceCommnetsCount	is Numeric 12
				LocalPrefix							is an InvoicePrefix
				LocalErrorOccurred					is Boolean
				LocalErrorMessage					is Alpha 150

			Instance Selection
				where (RunGroup = PrmRunGroup
				and	   Company.FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and	  (PrmCompany	not entered
				or	 Company = PrmCompany)
				and   (PrmCompanyGroup not entered
				or	 GeneralLedgerCompanyGroupRel exists)
				and	  (PrmProcessLevel  not entered
				or	 BillingProcessLevel = PrmProcessLevel)
				and   (PrmCurrencyCd	not entered
				or	 Currency = PrmCurrencyCd ))

			Sort Order
				RunGroup
				Company
				BillingProcessLevel
				Currency
				InvcPrefix
				InvoiceNumber

			Action Rules
				Empty Set Rules
					invoke Create BillingInterfaceResult
						invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
						invoked.RunTime						= current timestamp
						invoked.RunGroup					= PrmRunGroup
						invoked.Company						= PrmCompany
						invoked.CompanyGroup				= PrmCompanyGroup
						invoked.BillingProcessLevel			= PrmProcessLevel
						invoked.Currency					= PrmCurrencyCd
						invoked.Description					= PrmDescription
						invoked.ReleaseOption				= PrmReleaseOption
						invoked.Status						= 1
				Set Rules
					Entrance Rules
						invoke Create BillingInterfaceResult
							assign result to LocalInterfaceResultView
							invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
							invoked.RunTime						= current timestamp
							invoked.RunGroup					= PrmRunGroup
							invoked.Company						= PrmCompany
							invoked.CompanyGroup				= PrmCompanyGroup
							invoked.BillingProcessLevel			= PrmProcessLevel
							invoked.Currency					= PrmCurrencyCd
							invoked.Description					= PrmDescription
							invoked.ReleaseOption				= PrmReleaseOption

					Exit Rules
						invoke Update LocalInterfaceResultView.BillingInterfaceResult
							invoked.RecordsProcessed									= LocalInstanceCount
							invoked.BillingInterfaceCounts.PassedBillingInvoiceCount	= LocalBillingInvoiceCount
							invoked.BillingInterfaceCounts.LineCount					= LocalBillingInvoiceLineCount
							invoked.BillingInterfaceCounts.AOCCount						= LocalBillingInvoiceAddOnChrageCount
							invoked.BillingInterfaceCounts.CommentsCount				= LocalBillingInvoiceCommnetsCount
							invoked.Status												= 1

						if (!PrmReleaseOption.DoNotReleaseBatch)
							invoke DeleteReleasedBatch LocalInterfaceResultView.BillingInterfaceResult

				Instance Rules
					InterfaceRun = LocalInterfaceResultView.BillingInterfaceResult

					LocalBillingInvoiceCount			+= 1
					LocalBillingInvoiceLineCount		+= BillingInvoiceLineCount
					LocalBillingInvoiceAddOnChrageCount	+= BillingInvoiceAOCCount
					LocalBillingInvoiceCommnetsCount	+= BillingInvoiceCommentsCount

					include InterfaceThisInvoice
					LocalInstanceCount			+= 1



