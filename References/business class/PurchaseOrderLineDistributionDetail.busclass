PurchaseOrderLineDistributionDetail is a BusinessClass
    owned by po
    prefix is PODD
    sql name is POLineDistributionDetail

    Ontology
        symbolic key is PurchaseOrderLineDistributionDetail

    Patterns
        implements StaticJava
        disable AuditIndex
        implements Archivable

    Persistent Fields

        RecordType                       is Numeric size 1
            States
            	DistributionAccount					value is 0
                ReceivedNotInvoicedAccount    		value is 1
            	MatchedNotReceivedAccount 			value is 2
                ReceiptArchivalAccount				value is 3
                
                
    Transient Fields
    	
    	TransientDistributionAccount is a TransactionCodeBlock
    		derive value from PurchaseOrderLineDistribution.DistributionAccount
    		
    	TransientReportCurrencyAmount is a FinanceCurrencyAmount
    		derive value from  GLTransactionDetailRel.ReportCurrencyAmount    
    	BypassUnitAndAmountEdit	
	
	Local Fields
		LocalJournalizeGroup						is a JournalizeGroup
		LocalCurrencyCalculationGroup				is a CurrencyCalculationGroup
		LocalOrigOpenAmount							is a FinanceCurrencyAmountGroup
		LocalCurrencyTable							is a CurrencyTable
		LocalDistributionAccount					is a TransactionCodeBlock
    Derived Fields
    
		DerivedDistributionPercent is a DerivedField
			type is Percent size 6.3
			restricted
			return PurchaseOrderLineDistribution.DistributionPercent
			
		DerivedDistributionQuantity is a DerivedField
			type is like Quantity
			restricted
			return PurchaseOrderLineDistribution.DistributionQuantity
			
		DerivedDistributionAmount is a DerivedField
			type is like InternationalAmount
			restricted
			return PurchaseOrderLineDistribution.DistributionAmount
       		

        DerivedVendorAndName is a DerivedField
        	type is MessageField
        	restricted
        	return "" + PurchaseOrderLineDistribution.PurchaseOrder.Vendor + " - " + PurchaseOrderLineDistribution.PurchaseOrder.Vendor.VendorName

        DerivedLineNumber is a DerivedField
        	type is like LineNumber
        	restricted
        	return PurchaseOrderLineDistribution.PurchaseOrderLine.LineNumber

        DerivedItem is a DerivedField
        	type is like Item
        	restricted
        	return PurchaseOrderLineDistribution.PurchaseOrderLine.Item

        DerivedItemDescription is a DerivedField
        	type is like ItemDescription
        	restricted
        	return PurchaseOrderLineDistribution.PurchaseOrderLine.Description

        DerivedOrderedQuantity is a DerivedField
        	type is like Quantity
        	restricted
        	return PurchaseOrderLineDistribution.PurchaseOrderLine.Quantity

        DerivedReceivedQuantity is a DerivedField
        	type is like Quantity
        	restricted
        	return PurchaseOrderLineDistribution.PurchaseOrderLine.ReceivedQuantity

        DerivedUOM is a DerivedField
        	type is like UnitOfMeasure
        	restricted
        	return PurchaseOrderLineDistribution.PurchaseOrderLine.EnteredBuyUOM

        DerivedUnitCost is a DerivedField
        	type is like UnitCost
        	restricted
        	return PurchaseOrderLineDistribution.PurchaseOrderLine.EnteredUnitCost

        DerivedExtendedAmount is a DerivedField
        	type is like InternationalAmount
        	restricted
        	return PurchaseOrderLineDistribution.PurchaseOrderLine.ExtendedAmount

        DerivedBuyer is a DerivedField
        	type is like Buyer
        	restricted
        	return PurchaseOrderLineDistribution.PurchaseOrderLine.Buyer

        DerivedTaxCode is a DerivedField
        	type is like TaxCode
        	restricted
        	return PurchaseOrderLineDistribution.PurchaseOrderLine.TaxCode


    Relations
		
		GLTransDetailByJournalizeGroupRel
			one-to-many relation to GLTransactionDetail
				Field Mapping uses ByJournalizeGroup
					related.FinanceEnterpriseGroup				= Company.FinanceEnterpriseGroup
					related.JournalizeGroup						= LocalJournalizeGroup   		

		GLTransactionDetailRel	
			one-to-many relation to GLTransactionDetail
			Field Mapping uses ByOriginatingTransaction		 
				related.OriginatingTransaction = reference to this instance   
	Rule Blocks
		CalculateOpenCurrencyAmounts
			LocalDistributionAccount												= PrmDistributionAccount
			LocalCurrencyCalculationGroup.FinanceEnterpriseGroup					= Company.FinanceEnterpriseGroup
			LocalCurrencyCalculationGroup.ExchangeDate								= PrmTransactionDate
			LocalCurrencyCalculationGroup.FromCurrency								= PrmCurrency
			LocalCurrencyCalculationGroup.FunctionalAmount.ToCurrency				= Company.AccountingEntity.FunctionalCurrency
			if(PurchaseOrder.CurrencyExchangeSetPoint.Receiving)
				LocalCurrencyCalculationGroup.FunctionalAmount.EnteredCurrencyRate	= PurchaseOrder.ReceiptCurrencyConversionRate
			else
				LocalCurrencyCalculationGroup.FunctionalAmount.EnteredCurrencyRate	= PurchaseOrder.EnteredCurrencyConversionRate
			LocalCurrencyCalculationGroup.AlternateAmount.ToCurrency				= Company.AccountingEntity.AlternateCurrency
			LocalCurrencyCalculationGroup.AlternateAmount2.ToCurrency				= Company.AccountingEntity.AlternateCurrency2
			LocalCurrencyCalculationGroup.AlternateAmount3.ToCurrency				= Company.AccountingEntity.AlternateCurrency3
			LocalCurrencyCalculationGroup.ReportAmount1.ToCurrency					= Company.FinanceEnterpriseGroup.ReportCurrencyOne
			LocalCurrencyCalculationGroup.ReportAmount2.ToCurrency					= Company.FinanceEnterpriseGroup.ReportCurrencyTwo
			LocalCurrencyCalculationGroup.ReportAmount3.ToCurrency					= Company.FinanceEnterpriseGroup.ReportCurrencyThree
			LocalCurrencyCalculationGroup.ReportAmount4.ToCurrency					= Company.FinanceEnterpriseGroup.ReportCurrencyFour
			LocalCurrencyCalculationGroup.ReportAmount5.ToCurrency					= Company.FinanceEnterpriseGroup.ReportCurrencyFive
			LocalCurrencyCalculationGroup.CurrencyAmount							= PrmTransactionAmount
			if(Company.AccountingEntity != LocalDistributionAccount.ToAccountingEntity)
				LocalCurrencyCalculationGroup.ToFunctionalAmount.ToCurrency				= LocalDistributionAccount.ToAccountingEntity.FunctionalCurrency
				LocalCurrencyCalculationGroup.ToAlternateAmount.ToCurrency				= LocalDistributionAccount.ToAccountingEntity.AlternateCurrency
				LocalCurrencyCalculationGroup.ToAlternateAmount2.ToCurrency				= LocalDistributionAccount.ToAccountingEntity.AlternateCurrency2
				LocalCurrencyCalculationGroup.ToAlternateAmount3.ToCurrency				= LocalDistributionAccount.ToAccountingEntity.AlternateCurrency3
			else
				initialize LocalCurrencyCalculationGroup.ToFunctionalAmount.ToCurrency
				initialize LocalCurrencyCalculationGroup.ToAlternateAmount.ToCurrency
				initialize LocalCurrencyCalculationGroup.ToAlternateAmount2.ToCurrency
				initialize LocalCurrencyCalculationGroup.ToAlternateAmount3.ToCurrency	
			if (LocalDistributionAccount.Project entered)
				LocalCurrencyCalculationGroup.ProjectAmount.ToCurrency			= LocalDistributionAccount.Project.Currency
			LocalOrigOpenAmount.ExchangeDate										= PrmTransactionDate
			LocalOrigOpenAmount.CurrencyAmount										= PrmTransactionAmount
			
			LocalOrigOpenAmount.FunctionalAmount.EnteredCurrencyAmount			= LocalCurrencyCalculationGroup.FunctionalAmount.OutputCurrencyAmount
			LocalOrigOpenAmount.FunctionalAmount.EnteredCurrencyRate			= LocalCurrencyCalculationGroup.FunctionalAmount.OutputCurrencyRate
			if (Company.AccountingEntity.AlternateCurrency entered)
				LocalOrigOpenAmount.AlternateAmount.EnteredCurrencyAmount		= LocalCurrencyCalculationGroup.AlternateAmount.OutputCurrencyAmount
				LocalOrigOpenAmount.AlternateAmount.EnteredCurrencyRate			= LocalCurrencyCalculationGroup.AlternateAmount.OutputCurrencyRate
			if (Company.AccountingEntity.AlternateCurrency2 entered)
				LocalOrigOpenAmount.AlternateAmount2.EnteredCurrencyAmount  	= LocalCurrencyCalculationGroup.AlternateAmount2.OutputCurrencyAmount
				LocalOrigOpenAmount.AlternateAmount2.EnteredCurrencyRate  		= LocalCurrencyCalculationGroup.AlternateAmount2.OutputCurrencyRate
			if (Company.AccountingEntity.AlternateCurrency3 entered)
				LocalOrigOpenAmount.AlternateAmount3.EnteredCurrencyAmount		= LocalCurrencyCalculationGroup.AlternateAmount3.OutputCurrencyAmount
				LocalOrigOpenAmount.AlternateAmount3.EnteredCurrencyRate		= LocalCurrencyCalculationGroup.AlternateAmount3.OutputCurrencyRate
			if (Company.FinanceEnterpriseGroup.ReportCurrencyOne entered)
				LocalOrigOpenAmount.ReportAmount1.EnteredCurrencyAmount     	= LocalCurrencyCalculationGroup.ReportAmount1.OutputCurrencyAmount
				LocalOrigOpenAmount.ReportAmount1.EnteredCurrencyRate     		= LocalCurrencyCalculationGroup.ReportAmount1.OutputCurrencyRate
			if (Company.FinanceEnterpriseGroup.ReportCurrencyTwo entered)
				LocalOrigOpenAmount.ReportAmount2.EnteredCurrencyAmount      	= LocalCurrencyCalculationGroup.ReportAmount2.OutputCurrencyAmount
				LocalOrigOpenAmount.ReportAmount2.EnteredCurrencyRate      		= LocalCurrencyCalculationGroup.ReportAmount2.OutputCurrencyRate
			if (Company.FinanceEnterpriseGroup.ReportCurrencyThree entered)
				LocalOrigOpenAmount.ReportAmount3.EnteredCurrencyAmount			= LocalCurrencyCalculationGroup.ReportAmount3.OutputCurrencyAmount
				LocalOrigOpenAmount.ReportAmount3.EnteredCurrencyRate			= LocalCurrencyCalculationGroup.ReportAmount3.OutputCurrencyRate
			if (Company.FinanceEnterpriseGroup.ReportCurrencyFour entered)
				LocalOrigOpenAmount.ReportAmount4.EnteredCurrencyAmount			= LocalCurrencyCalculationGroup.ReportAmount4.OutputCurrencyAmount
				LocalOrigOpenAmount.ReportAmount4.EnteredCurrencyRate			= LocalCurrencyCalculationGroup.ReportAmount4.OutputCurrencyRate
			if (Company.FinanceEnterpriseGroup.ReportCurrencyFive entered)
				LocalOrigOpenAmount.ReportAmount5.EnteredCurrencyAmount			= LocalCurrencyCalculationGroup.ReportAmount5.OutputCurrencyAmount
				LocalOrigOpenAmount.ReportAmount5.EnteredCurrencyRate			= LocalCurrencyCalculationGroup.ReportAmount5.OutputCurrencyRate
			if (PrmDistributionAccount.Project entered)
				LocalOrigOpenAmount.ProjectAmount.EnteredCurrencyAmount			= LocalCurrencyCalculationGroup.ProjectAmount.OutputCurrencyAmount
		    	LocalOrigOpenAmount.ProjectAmount.EnteredCurrencyRate			= LocalCurrencyCalculationGroup.ProjectAmount.OutputCurrencyRate
			if (LocalCurrencyCalculationGroup.ToFunctionalAmount.ToCurrency	 !=blank)
				LocalOrigOpenAmount.ToFunctionalAmount.EnteredCurrencyAmount	= LocalCurrencyCalculationGroup.ToFunctionalAmount.OutputCurrencyAmount
				LocalOrigOpenAmount.ToFunctionalAmount.EnteredCurrencyRate		= LocalCurrencyCalculationGroup.ToFunctionalAmount.OutputCurrencyRate
			if (LocalCurrencyCalculationGroup.ToAlternateAmount.ToCurrency	!=blank)
				LocalOrigOpenAmount.ToAlternateAmount.EnteredCurrencyAmount		= LocalCurrencyCalculationGroup.ToAlternateAmount.OutputCurrencyAmount
				LocalOrigOpenAmount.ToAlternateAmount.EnteredCurrencyRate		= LocalCurrencyCalculationGroup.ToAlternateAmount.OutputCurrencyRate
			if (LocalCurrencyCalculationGroup.ToAlternateAmount2.ToCurrency	 !=blank)
				LocalOrigOpenAmount.ToAlternateAmount2.EnteredCurrencyAmount	= LocalCurrencyCalculationGroup.ToAlternateAmount2.OutputCurrencyAmount
				LocalOrigOpenAmount.ToAlternateAmount2.EnteredCurrencyRate		= LocalCurrencyCalculationGroup.ToAlternateAmount2.OutputCurrencyRate
			if (LocalCurrencyCalculationGroup.ToAlternateAmount3.ToCurrency	 !=blank)
				LocalOrigOpenAmount.ToAlternateAmount3.EnteredCurrencyAmount	= LocalCurrencyCalculationGroup.ToAlternateAmount3.OutputCurrencyAmount
				LocalOrigOpenAmount.ToAlternateAmount3.EnteredCurrencyRate		= LocalCurrencyCalculationGroup.ToAlternateAmount3.OutputCurrencyRate
			
	Actions
	
		Create is a Create Action
			restricted
				
		Update is an Update Action
			restricted
		
		
		Delete is a Delete Action
			restricted

		Purge is a Purge Action
			restricted
			Entrance Rules
				invoke PurgeValidSubLedgerTrx GLTransactionDetailRel
			
		CreateFromBatch is an Instance Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup is like FinanceEnterpriseGroup
				PrmTransactionDate		is an ExchangeDate
				PrmReference			is Alpha 30
				PrmPostingDate			is an ExchangeDate
				PrmTransactionAmount	is like CurrencyAmount
				PrmCurrency				is like FromCurrency
				PrmJournalizeGroup      is like JournalizeGroup
				PrmDistributionAccount  is like TransactionCodeBlock	
				PrmAccountingEntity     is like AccountingEntity
				PrmAutoReverse			is Boolean		
				PrmAccrualFlag          is Boolean
			Action Rules

				LocalJournalizeGroup = PrmJournalizeGroup
				LocalCurrencyTable	= PurchaseOrder.CurrencyTable
				include CalculateOpenCurrencyAmounts
				BypassUnitAndAmountEdit = true
				invoke Released.CreateReleasedGLTransDetailNoRules GLTransactionDetail
					invoked.OriginatingTransaction 	= reference to this instance
					invoked.FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
					invoked.System					= "PO"	
					invoked.Reference				= PrmReference//**"RecievedNotInvoiced"				
					invoked.AccountingEntity		= Company.AccountingEntity
					invoked.TransactionAmount		= PrmTransactionAmount
					invoked.CurrencyCode			= PrmCurrency					 
					invoked.TransactionDate			= PrmTransactionDate
					invoked.PostingDate				= PrmPostingDate	 
					invoked.FinanceCodeBlock		= PrmDistributionAccount

					invoked.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount = LocalOrigOpenAmount.FunctionalAmount.EnteredCurrencyAmount
					invoked.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount  = LocalOrigOpenAmount.AlternateAmount.EnteredCurrencyAmount
					invoked.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount = LocalOrigOpenAmount.AlternateAmount2.EnteredCurrencyAmount
					invoked.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount = LocalOrigOpenAmount.AlternateAmount3.EnteredCurrencyAmount
					invoked.ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount = LocalOrigOpenAmount.ToFunctionalAmount.EnteredCurrencyAmount
					invoked.ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount = LocalOrigOpenAmount.ToAlternateAmount.EnteredCurrencyAmount
					invoked.ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount = LocalOrigOpenAmount.ToAlternateAmount2.EnteredCurrencyAmount
					invoked.ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount = LocalOrigOpenAmount.ToAlternateAmount3.EnteredCurrencyAmount
					invoked.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount = LocalOrigOpenAmount.ProjectAmount.EnteredCurrencyAmount
					invoked.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount = LocalOrigOpenAmount.ReportAmount1.EnteredCurrencyAmount
					invoked.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount = LocalOrigOpenAmount.ReportAmount2.EnteredCurrencyAmount
					invoked.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount = LocalOrigOpenAmount.ReportAmount3.EnteredCurrencyAmount
					invoked.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount = LocalOrigOpenAmount.ReportAmount4.EnteredCurrencyAmount
					invoked.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount = LocalOrigOpenAmount.ReportAmount5.EnteredCurrencyAmount
					invoked.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyRate	= LocalOrigOpenAmount.FunctionalAmount.EnteredCurrencyRate
					invoked.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyRate	= LocalOrigOpenAmount.AlternateAmount.EnteredCurrencyRate 
					invoked.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyRate	= LocalOrigOpenAmount.AlternateAmount2.EnteredCurrencyRate
					invoked.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyRate	= LocalOrigOpenAmount.AlternateAmount3.EnteredCurrencyRate 
					invoked.ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyRate	= LocalOrigOpenAmount.ToFunctionalAmount.EnteredCurrencyRate
					invoked.ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyRate	= LocalOrigOpenAmount.ToAlternateAmount.EnteredCurrencyRate
					invoked.ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyRate	= LocalOrigOpenAmount.ToAlternateAmount2.EnteredCurrencyRate
					invoked.ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyRate	= LocalOrigOpenAmount.ToAlternateAmount3.EnteredCurrencyRate
					invoked.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyRate	= LocalOrigOpenAmount.ProjectAmount.EnteredCurrencyRate
					invoked.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyRate	= LocalOrigOpenAmount.ReportAmount1.EnteredCurrencyRate
					invoked.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyRate	= LocalOrigOpenAmount.ReportAmount2.EnteredCurrencyRate
					invoked.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyRate	= LocalOrigOpenAmount.ReportAmount3.EnteredCurrencyRate
					invoked.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyRate	= LocalOrigOpenAmount.ReportAmount4.EnteredCurrencyRate
					invoked.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyRate	= LocalOrigOpenAmount.ReportAmount5.EnteredCurrencyRate




















					invoked.ReportCurrencyAmount.KeepRateOnly = true
		        	invoked.GeneralLedgerEvent 		= "PO" 													
					invoked.AutoReverse 			= PrmAutoReverse
					invoked.ControlDocumentNumber 	= PurchaseOrderLine.PurchaseOrder
					invoked.DocumentNumber		  	= PurchaseOrderLine.PurchaseOrder
					invoked.JournalizeGroup         = PrmJournalizeGroup
					invoked.Description				= PurchaseOrderLine.Description				

							
		
			
		ReleaseGLTrans is an Instance Action
			restricted	
			Action Rules
				invoke Unreleased.Release GLTransDetailByJournalizeGroupRel


		JournalizeDistributions is a Set Action		

			restricted
			completion message is "<CompletionMessage>"
			run in foreground	 

			Parameters
				PrmEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmPurchasingCompany    is a PurchasingCompany
					default label is "PurchasingCompany"
				PrmProcessLevel			is a PayablesProcessLevel
					default label is "ProcessLevel"
				PrmDescription			is a Description
					default label is "Description"
				PrmJournalizeGroup       is like JournalizeGroup
			Parameter Rules
				PrmEnterpriseGroup
					initial value is Company.FinanceEnterpriseGroup
					required
				PrmPurchasingCompany 	 
					required
				PrmDescription
					initial value is "RNIPosting"
											
			Local Fields
				CompletionMessage		is Alpha 150
				RecordCount				is Numeric 10
				MyJournalizeGroup		is like JournalizeGroup

			Instance Selection
				where (Company				        = PrmPurchasingCompany
				and   (PurchaseOrder.ProcessLevel	= PrmProcessLevel
				or     PrmProcessLevel      not entered)
				and    GLTransactionDetailRel.JournalizeGroup 		= PrmJournalizeGroup)

			Sort Order
				Company
				PurchaseOrder.ProcessLevel


			Accumulators
				
			Action Rules								
				Empty Set Rules


					CompletionMessage = "PurchaseOrderLineDistributionPostingCompleteForJournalizeGroup...:NoRecordsFoundToJournalize<MyJournalizeGroup>"
				
				Set Rules
					Entrance Rules


						MyJournalizeGroup = PrmJournalizeGroup



					Exit Rules
						CompletionMessage = "PurchaseOrderLineDistributionPostingCompleteForJournalizeGroup...:<MyJournalizeGroup>;<RecordCount>...RecordsProcessed"
							
				Instance Rules
					invoke InitiateJournalizeForRunGroup PrmEnterpriseGroup in background
						invoked.PrmJournalizeGroup				= MyJournalizeGroup
						invoked.PrmJournalizeGroupDescription	= PrmDescription
						if (Company.PostingOption.Detail)
							invoked.PrmInterfaceInDetail		= true
						else
							invoked.PrmInterfaceInDetail 		= false
						
						CompletionMessage = "PurchaseOrderLineDistributionPostingCompleteForJournalizeGroup...:<MyJournalizeGroup>"





		       		
