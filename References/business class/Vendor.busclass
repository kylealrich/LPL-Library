Vendor is a BusinessClass
	owned by ap
	prefix is VEN
	classic name is APVENMAST
	representative text is "<VendorName>_(<Vendor>)"
	representative image is Logo.File
		missing image is random background
			foreground text is "<Vendor.XiVendorNameAbbreviation>"

	Ontology
		symbolic key is Vendor
			classic set name is VENSET1

	Patterns
		implements StaticJava
		disable AuditIndex
		implements ContextualParent
		implements BODId

	Attach Rules
		if (!action type.Create)
			constraint (BypassRuleForTheseFiles
			or			!VendorStatus.Inactive)
				"Vendor<DerivedVendorNameID>IsNotActive"

	Persistent Fields
		Reference1								is a Reference
		Reference2								is a Reference
		Logo									is a LogoAttachment
		VendorClass
			classic name is VEN-CLASS
		VendorName								
			classic name is VENDOR-VNAME
		VendorSearchName						is a VendorName 
			holds pii
			classic name is VENDOR-SNAME
		ContactName								is a VendorName 
			holds pii
			classic name is VENDOR-CONTCT
		PayVendor								is a Vendor
			delete ignored
		LegacyVendor							is an OldVendor
		VendorStatus							is AlphaUpper size 1
			States
				Active					value is "A"
				Inactive				value is "I"
				InactiveForPOAdditions	value is "D"
				Restricted				value is "R"
		PaymentPriority
			classic name is VEN-PRIORITY
		PhoneNumber								is a TelephoneNumber 
			holds pii
			classic name for PhoneNumber.InternationalPrefix is PHONE-PREFIX
			classic name for PhoneNumber.SubscriberNumber is PHONE-NUM
			classic name for PhoneNumber.Extension is PHONE-EXT
		FaxNumber 
			holds pii
			classic name for FaxNumber.InternationalPrefix is FAX-PREFIX
			classic name for FaxNumber.SubscriberNumber is FAX-NUM
			classic name for FaxNumber.Extension is FAX-EXT
		TelexNumber 
			holds pii
			classic name is TELEX-NUM
		TermsCode

		InvoiceCurrency							is a Currency
			classic name is INV-CURRENCY
		BalanceCurrency							is a Currency
			classic name is BAL-CURRENCY
		RevalueCurrency							is Boolean
			classic name is CURR-RECALC
		SeparatePayment							is Boolean
			classic name is SEP-CHK-FLAG
		CheckDigitType							is a TaxIDCheckDigitType
			classic name is CHK-DIG-TYPE
		TaxID 
			holds pii
		TaxExemptCode							is AlphaUpper size 1
			classic name is TAX-EXEMPT-CD
		TaxCode
		OnHold									is Boolean
			classic name is HOLD-FLAG
		DistributionCode						is a PayablesDistributionCode

		AccrualCode								is a PayablesAccrualCode

		BankTransactionCode
			default label is "PaymentCode"
			classic name is BANK-INST-CODE
		PayablesProcessGroup
			default label is "ProcessGroup"
			classic name is PROC-GRP



		CashCode
		BankEntity
		BankCurrency							is a Currency
		BankAccountNumber
			classic name is VBANK-ACCT-NO
		BankAccountType
			classic name is VBANK-ACCT-TP
		GlobalBankAccountType	
		BankAccountValidationType
			classic name is VBANK-IDENT
		CrossBorderIdentifier
			classic name is CROSS-IDENT
		IncomeCode								is a PayablesIncomeCode
		IncomeWithholding						is Boolean
			classic name is INCOME-WH-FLG
		EDINumber
			classic name is EDI-NBR
		ACHPrenotification
			classic name is ACH-PRENOT
		MaximumInvoiceAmount					is an InternationalAmount
			classic name is MAX-INV-AMT
		CreateDate								is Date
		OriginDate								is Date
		Operator
		UserName01
		UserName02
		UserName03
		UserName04
		UserName05
		UserName06
		CustomerGroup
			classic name is CUST-GROUP
			disable surrogates		
		Customer
			delete ignored
		LegalName								is a VendorName 
			holds pii
		PrimeRate
		InvoiceGroup							is a PayablesInvoiceGroup		
		DiscountCode							is a PayablesDiscountCode
		ERSCapable								is Boolean
		InvoiceReference						is a PayablesReferenceType	
			classic name is INVC-REF-TYPE










		EDIAutoRelease							is Boolean
			classic name is EDI-AUTO-REL
		AuthorityCode							is a PayablesAuthorityCode

			classic name is AUTH-CODE


		Project									is a FinanceCodeBlockProjectOnly
			classic name is ACTIVITY

		ChargeCode								is a CashLedgerChargeCode
		PaymentCategoryCode						is a CashLedgerPaymentCategoryCode
			classic name is PMT-CAT-CODE
		NormalOrExpressCode
			classic name is NORM-EXP-CODE
		PaymentForm								is a CashLedgerPaymentForm
			classic name is PMT-FORM
		SwiftID
		MatchTable
		TermsCalculation
			classic name is DISC-CALC-DATE
		CreatePOD								is Boolean
			classic name is CREATE-POD-FL
		Enclosure								is Boolean
		PoolOption
		RequireMatchReference					is Boolean
		HoldUntilInspected
			classic name is HOLD-INSP-FLAG
		WriteOffAmount							is an InternationalAmount
			classic name is WRITE-OFF-AMT
		VendorClaimType
			classic name is VEN-CLAIM-TYPE
		VendorClaimHoldCode						is a PayablesHoldCode
			classic name is CLAIM-HOLD-CD
		AutomaticChargebackHoldCode				is a PayablesHoldCode
			classic name is CB-HOLD-CODE
		ChargebackMinimumAmount					is an InternationalAmount
			classic name is CB-MINIMUM-AMT
		ReplaceGoods							is Numeric size 1
			States
				UseCompanyValue		value is 0
				Yes					value is 1
				No					value is 2
		ShipOrHold
		EmailAddress							is an EmailAddressMulti 
			holds pii
			classic name is E-MAIL-ADDRESS
			default label is "Email"
		URLAddress
			classic name is URL-ADDR
		VendorAccount
			classic name is VEND-ACCT
		LanguageCode							is an IsoLocale
		TaxUsageCode							
			classic name is TAX-USAGE-CD
		VATRegistrationCountry					is a Country
			classic name is VAT-REG-CTRY
		VATRegistrationNumber
			classic name is VAT-REG-NBR
		ValidatePurchaseOrder					is AlphaUpper size 1
			classic name is VALIDATE-PO
			States
				CompanyDefault	value is blank
				Yes				value is "Y"
				No				value is "N"
		RequirePurchaseOrder					is AlphaUpper size 1
			classic name is REQUIRE-PO
			States
				CompanyDefault	value is blank
				Yes				value is "Y"
				No				value is "N"
		WorkflowGroup
		MobileNumber							is a MobilePhone 
			holds pii
			classic name for MobileNumber.MobilePhoneNumber.InternationalPrefix is MBL-INT-PREFIX
			classic name for MobileNumber.MobilePhoneNumber.SubscriberNumber is MOBILE-NUM
			classic name for MobileNumber.MobilePhoneNumber.Extension is MOBILE-EXT
		PayImmediately							is Boolean
			classic name is PAY-IMM-FLAG
		DiversityCode							is a PayablesDiversityCode
			classic name is DIVERSE-CODE
		IntermediaryBankEntity					is a BankEntity
			classic name is INTM-BANK-ENT
		IntermediaryBankAccount					is a BankAccountNumber
			classic name is INTM-BANK-ACCT
		IntermediaryBankAccountValidationType	is a BankAccountValidationType
			sql name is IBankAccountValidationType
			classic name is INTM-BANK-IDNT
		IntermediaryBankCurrency				is a Currency
			classic name is INTM-BANK-CURR
		IntermediaryPrenotification				is an ACHPrenotification
			classic name is INTM-PRENOT
		IntermediarySwiftID						is a SwiftID
			classic name is INTM-SWIFT-ID
		IntermediaryPaymentCategory				is a CashLedgerPaymentCategoryCode
			classic name is INTM-PMT-CAT
		IntermediaryNormalOrExpressCode			is a NormalOrExpressCode
			sql name is INormalOrExpressCode
			classic name is INTM-NORM-EXP
		IntermediaryPaymentForm					is a CashLedgerPaymentForm
			classic name is INTM-PMT-FORM
		IntermediaryChargeCode					is a CashLedgerChargeCode
			classic name is INTM-CHRG-CD
		IntermediaryCrossBorderIdentifier		is a CrossBorderIdentifier
			sql name is ICrossBorderIdentifier
			classic name is INTM-CRS-IDENT
		RuleGroup								is a MatchRule
		CostComponentMatch						is Boolean
		FloatDays
		MatchPrepayment							is Boolean
			classic name is MTCH-PREPAY-FL
		MatchPrepaymentMethod
			classic name is MTCH-PREPAY-MT
		BACSReference
			classic name is BUILD-SOC-REF
		BACSName								is an AccountName
			classic name is BUILD-ACCT-NM
		CrossReferenceExists					is Boolean
			classic name is XREF-FLAG
		GiroNumber
		CreditCardNumber						is a CrCardNumber 
			holds pii
			classic name is CR-CARD-NUMBER
		BankInstructions1						is a BankInstruct1
			classic name is BANK-INSTRUCT1
		BankInstructions2						is a BankInstruct2
			classic name is BANK-INSTRUCT2
		BankInstructions3						is a BankInstruct3
			classic name is BANK-INSTRUCT3
		BankInstructions4						is a BankInstruct4
			classic name is BANK-INSTRUCT4
		UseProcurementCard						is Boolean
			classic name is P-CARD-FLAG
		ProcurementCardNumber
			classic name is PCARD-NBR
		ValidateDiversityDates					is Boolean
			classic name is VAL-DIV-DATE
		RetainageAccrualCode					is a PayablesAccrualCode
			classic name is RET-ACCR-CODE
		GlobalLocationNumber
			classic name is GLN-NBR
		TaxIDType								is a TaxIdentificationType
			classic name is TIN-TYPE
		TinNot									is Boolean
		TinVerified								is Boolean
		ExemptFromSecondaryWithholding			is Boolean
			classic name is SEC-WTH-EXEMPT
		SecondaryWithholdingCode1				is a PayablesSecondaryWithholdingCode
			classic name is SEC-WTH-CODE1
		SecondaryWithholdingCode2				is a PayablesSecondaryWithholdingCode
			classic name is SEC-WTH-CODE2
		SecondaryWithholdingCode3				is a PayablesSecondaryWithholdingCode
			classic name is SEC-WTH-CODE3
		CreatedBy								is an Operator 
			holds pii
		LastUpdateDate							is TimeStamp
			classic name is LAST-UPDT-DATE
		LastUpdateBy							is an Operator 
			holds pii
		ValidateCertificationDate				is Boolean
			classic name is VALID-CERT-DT
		ForeignEconomicRegulatoryCode
			classic name is FOR-ECON-CODE
		TwitterID 
			holds pii
			classic name is SOCIAL-ID1
		SocialNetworkID2 
			holds pii
			classic name is SOCIAL-ID2
		SocialNetworkID3 
			holds pii
			classic name is SOCIAL-ID3
		SocialNetworkID4 
			holds pii
			classic name is SOCIAL-ID4
		SocialNetworkID5 
			holds pii
			classic name is SOCIAL-ID5
		Carrier									is Boolean
			classic name is CARRIER-FLAG
		BankingCode
		BankID
		AssignmentNumber
			classic name is ASSIGNMENT-NBR
		DebitingSign
		IntermediaryBankingCode					is a BankingCode
			classic name is INTM-BANK-CODE
		IntermediaryBankID						is a BankID
			classic name is INTM-BANK-ID
		IntermediaryAssignmentNumber			is an AssignmentNumber
			sql name is IAssignmentNumber
			classic name is INTM-ASSIGN-NO
		IntermediaryDebitingSign				is a DebitingSign
			classic name is INTM-DEBITING
		InvoiceRoutingCategory
		AllowWithholdingCodeOverride			is Boolean
		Sepa									is Boolean
			classic name is SEPA-FLAG
		AllowZeroCostInvoice					is AlphaUpper size 1	
			classic name is OPEN-ZERO-COST
			States
				CompanyDefault	value is blank
				Yes				value is "Y"
				No				value is "N"

		ExternalAccountingEntity				is Alpha size 22
			classic name is EXT-ACCT-ENT
		ExternalLocation						is Alpha size 22
			classic name is EXT-LOCATION
		ExternalKey								is Alpha size 25
			classic name is EXTERNAL-KEY

		VendorConversionResult

		W8Verified								is AlphaUpper size 1
			classic name is W8-VERIFIED
			States
				Yes		value is "Y"
				No		value is "N"
		FATCAId									is Alpha size 6
			classic name is FATCA-ID
		FinancialInstitutionType				is Alpha size 5
			classic name is FIN-INST-TYPE
		GIINCategoryCode						is AlphaUpper size 2
			classic name is GIIN-CAT-CODE
			States
				Lead			value is "LE"
				Single			value is "SL"
				Member			value is "ME"
				Branch			value is "BR"
				Sponsoring		value is "SP"
		ISOCountryNumber						is Numeric size 3
			classic name is ISO-CTRY-NBR
		FATCAPercentage							is Percent 7.4
			classic name is FATCA-WITHOLD
		FATCAIncomeCode							is a PayablesIncomeCode
			classic name is FATCA-INC-CODE

		FATCAAccount							is a FinanceCodeBlockFull
			classic name for FATCAAccount.AccountingUnit is FATCA-AU
			classic name for FATCAAccount.GeneralLedgerChartAccount is FATCA-ACCOUNT
		VATValidation	
		ElectronicGovernmentID
		Employee
		IDMDocumentSequence						is Numeric size 3
			protected
		ExpenseDefault							is a FinanceCodeBlock
			default label is "DefaultFinanceStructure"
		AutomaticEmailingOfCreditMemo			is Boolean
		AutomaticEmailingOfDebitMemo			is Boolean
		TaxRegistrationType						is Numeric size 1
			States
				Registered				value is 1
				UnRegistered			value is 2
					default label is "Unregistered"
				SpecialEconomicZone		value is 3
				CompositeDealer			value is 4
		LineLevelWithholding					is Boolean
		EnrolledWithholding						is Boolean
		VendorSearchDocument					is Text
			text searchable
			disable Auditing
			default label is "SearchVendors"
		DefaultVendorPaymentCurrency			is Numeric size 1		
			States
				CashCode				value is 0
				Invoice					value is 1
		OIGExclusionStatus									
		PreviousExclusionStatus					is a OIGExclusionStatus		
		OIGValidationDate						is Date		
			default label is "LastOIGValidationDate"
		CaseNumber								is Alpha 20		
		VendorRestrictions 										
		DefaultTaxIndicator		is a TaxIndicator					
		ApplyFloatDaysToDueDate					is Boolean	
		VendorTemplate							
		AllowDuplicateInvoiceByDate				is Boolean	
		ValidateCertificationAmount				is Boolean	
		RequireRemitTo							is AlphaUpper size 1
			default label is "RequireRemitToLocation"
			States
				CompanyDefault	value is blank
				Yes				value is "Y"
				No				value is "N"
		RestrictToOneInvoice 					is Boolean
    		default label is "RestrictToOneInvoicePerVendor"
		ExcludeInvoiceLineImport					is Boolean
			default label is "ExcludeDocumentInterfaceDetailImport"

	Transient Fields
		RIBKey
		IntermediaryRIBKey						is a RIBKey
		RequestAddressChange					is Boolean		
		VendorAddress							is a PostalAddressV2	
			holds pii
			derive value from CurrentAddressRel.PostalAddress
		AddressEffectiveDate					is an EffectiveDate
			derive value from CurrentAddressRel.effective date
		DunAndBradstreetNumber					is Alpha size 20
			default label is "Dun&Bradstreet"
			derive value from first VendorAndSupplierRel.DunAndBradstreetNumber
		ObjectReference					is BusinessObjectReference
			derive value from reference to this instance
		TransientURL							is URL
			derive value from URLAddress
		MaskedProcurementCard					is like ProcurementCardNumber	
			default label is "ProcurementCard"
			derive value from DerivedMaskedProcurementCard
		TransLinkedWithCustomer					is Boolean
			derive value from DerivedHasCustomer
		TransientHasCustomerBalance				is Boolean
			derive value from DerivedCustomerBalance
		TransientHasVendorBalance				is Boolean
			derive value from DerivedVendorBalance
		BypassBODActionExitRules				is Boolean
		BypassSupplierBODTrigger				is Boolean		
		InvokeBODForVendorImport				is Boolean
		TransientSelectISOCountryNumber			is Boolean
			default label is "SelectISOCountry/\JurisdictionNumberByCountry/\Jurisdiction"
		TransientCountry						is a Country
			default label is "Country/\Jurisdiction"
		TransientSelectedAmount					is like InternationalAmount
			derive value from DerivedSelectedAmount
		ICountryCode							is like Country					
			default label is "Country/\JurisdictionCode"
		IVatNumber								is like VATRegistrationNumber 
			holds pii
			default label is "VATRegistrationNumber"
		IRequesterCountryCode					is like Country					
			default label is "RequesterCountry/\JurisdictionCode"
		IRequesterVatNumber						is like VATRegistrationNumber 
			holds pii
			default label is "RequesterVATRegistrationNumber"
		ViewHiddenData							is Boolean						
			derive value from DerivedViewHiddenData								
		TransientAttachmentDescription			is a Description
			default label is "AttachmentDescription"
		TransientAttachment						is an Attachment
			default label is "Attachment"
		TransientVendorImport					is a VendorImport
		TransientPayablesCompany		is like PayablesCompany
		TransientHoldCode						is a PayablesHoldCode	
			default label is "HoldCode"
		ApproverActor							is Alpha 30				
		RequesterActor							is an Actor
		RequestedBy								is Alpha 100
		RequesterPhone							is a Telephone 
			holds pii
		RequesterEmail							is an EmailAddressMulti 
			holds pii
		RequestPriority							is Numeric 1
			States
				High				value is 1
				Medium				value is 2
				Low					value is 3
		NeededBy								is Date
		Notes									is Text
		ValidateOFAC							is Boolean
		RequestCustomerGroup					is like CustomerGroup 
		RequestCustomer							is like Customer 
		NeededByRedBoolean						is Boolean
		NeededByYellowBoolean 					is Boolean
		NeededByGreenBoolean					is Boolean		
		CommentText
		Title 					                is a CommentName
		PrintCode 				                is AlphaUpper size 1
			States
				All             value is "A"
				CheckOrCheque   value is "C"
				DisplayAndPrint value is "D"
				NotationOnly    value is "N"
		DateRange
		TransPayablesCompany					is a PayablesCompanyField
		PayGroup
		NoOfDays								is Numeric size 3		
		T2VCreate								is Boolean
		ClearTaxID 								is Boolean		
		ClearBankAccountNumber					is Boolean
		ClearSwiftID							is Boolean
		ClearIntermediaryBankAccount			is Boolean
		ClearIntermediarySwiftID				is Boolean
		ClearGiroNumber							is Boolean
		ClearCreditCardNumber					is Boolean			
	Context Fields
		SupplyManagementReportContext	is a SupplyManagementReport
		ItemContext						is an Item
		FinanceResource
		AuditDateRange					is a DateRange
		VATDateRange					is a DateRange	


		PayablesHoldCode								
		FSMInboundBODTracker
		
	Local Fields



		ValidateBankAccountNumber
		ActionCode						is Alpha size 1
			States
				Create	value is "C"
				Update	value is "U"
				Delete	value is "D"
		MultipleTaxCodes				is Boolean
		WebServiceError					is Boolean
		WebServiceErrorMessage			is Text

		LocalLookupKey					is Alpha 100
		LocalResponseBusclassKey		is like LastSequence
		LocalSequence					is like Sequence
		OldTaxCode						is like TaxCode
		NewTaxCode						is like TaxCode
		CalculateTaxOutputMessage		is Alpha 200
		LocalStatus						is Numeric size 1
		MaxLogoSize
		OFACWebService
		LocalVendorGroup				is like VendorGroup
		LocalVendorSearchName			is like VendorName 
			holds pii
		LocalLegalName					is like VendorName 
			holds pii
		ValidateCheckDigit
		NewCustomer						is a Customer view
		NewCompanyCustomer				is a CompanyCustomer view


		LocalCompany					is like Company
		LocalTotalTransactionAmount		is an InternationalAmount
		LocalInvoiceAmount				is an InternationalAmount
		LocalCurrency					is a Currency
		NewReceivableInvoice			is a ReceivableInvoice view

		LocalRunProgram					is a RunProgram
		CurrencyWork					is a ReceivableExchange
		LocalVendorBalanceLocation		is Alpha size 4

		LocalCustomerFuncAmount			is an InternationalAmount
		LocalVendorFuncAmount			is an InternationalAmount
		NewPayablesInvoice				is a PayablesInvoice view
		LocalSuffix						is Numeric size 8
		LocalInvoice					is like Invoice
		LocalFunctionalAmount			is like InternationalAmount








		LocalCutoffDate					is Alpha 25		
		LocalNoActivityVendor			is Boolean		
		LocalVendorCreateCutoffDate		is Date			

		I1									is Numeric 5
		I2									is Numeric 5
		LocalInvoiceTemplate		is like PayablesInvoiceTemplate
		IDMGenerateDocument
		IDMAttributes
		IDMXMLDefinition
		AttributeCtr				is Numeric 2
		LocalExecute				is Boolean	



		NativeLPLBODTrigger			is Boolean
		LocalBODCrossReferenceAE	is Alpha size up to 200
		LocalTriggerFrom			is Alpha size 100
		LocalSupplierTrigger		is Boolean
		NewBODTracker  						is a FSMInboundBODTracker view
		LocalFSMInboundBODTracker			is Numeric 15
		Error            					is Boolean
	    ErrorMessage     					is Alpha 300
	    LocalBODTrigger						is Boolean
	    LocalBODCompany						is Alpha size 100



		CalculateTax	

		LocalString				is Alpha 200	
		LocalTransactionType    is like ReceivableInvoiceType

		LocalTriggerVerb			is Numeric size 5
		LocalMainUserTemplate		is Alpha size 250
		LocalCompanyCrossReference	is Alpha size 100 
		LocalCleanDocCrossReference 	is Alpha size 100
		LocalFinalCrossAccountingEntity is Alpha size 30
		LocalBodIDforCleanDoc 			is Alpha size 100
		ValidateReceivablePrefix
		LocalCutOffDate			is Date
		LocalErrorOccured		is Boolean
		LocalVendorLocation		is like VendorLocation
		LocalCurrentDate		is Date		
		CurrentBackgroundGroup	is AlphaUpper up to 200
		LastBackgroundGroup		is AlphaUpper up to 200
		LocalTrigger			is Boolean
		LocalShowLines			is Boolean
		LocalVendorAddressTrigger	is Boolean
		LocalFutureTrigger			is Boolean
		LocalFutureShowLines			is Boolean
		LocalFutureVendorAddressTrigger	is Boolean
		LocalPayablesJobResult			is a PayablesJobResult			

		LocalConfigurationParameter	is Alpha size up to 200	
		LocalAEAlreadyExecuted		is Boolean
	    LocalBODAEAlreadyExecuted	is Boolean
	    LocalCrossAEValue			is Alpha size up to 200
	    LocalSourceValue			is Alpha 30

	Rule Blocks

	
		CreateRelatedRecords
			if (TransientVendorImport entered)
				invoke Create VendorMappingTableInterface
					invoked.VendorGroup								= VendorGroup
					invoked.VendorMappingTableInterface.OldVendor		= TransientVendorImport.OldVendor
					invoked.VendorMappingTableInterface.VendorLocation	= TransientVendorImport.VendorLocation
					invoked.Vendor										= Vendor
					invoked.EDINumber									= EDINumber
					invoked.VendorName									= VendorName

			invoke Create VendorAddress
				invoked.VendorGroup					 = VendorGroup
				invoked.Vendor						  = Vendor
				invoked.VendorLocation				  = blank
				invoked.VendorContact.VendorContactCode = blank
				invoked.VendorContact.ContactLevel	  = blank
				invoked.PostalAddress					= VendorAddress
				invoked.effective date					= AddressEffectiveDate


			invoke Create VendorContact					
				invoked.VendorGroup					 = VendorGroup
				invoked.Vendor						  = Vendor
				invoked.VendorLocation				  = blank
				invoked.VendorContact.VendorContactCode = "PRIME"
				invoked.VendorContact.ContactLevel	  = blank
				invoked.ContactName						= ContactName
				invoked.PhoneNumber						= PhoneNumber
				invoked.MobileNumber					= MobileNumber
				invoked.FaxNumber						= FaxNumber
				invoked.EmailAddress					= EmailAddress
				invoked.TwitterID						= TwitterID
				invoked.SocialNetworkID2				= SocialNetworkID2
				invoked.SocialNetworkID3				= SocialNetworkID3
				invoked.SocialNetworkID4				= SocialNetworkID4
				invoked.SocialNetworkID5				= SocialNetworkID5
				invoked.VendorAddress					= VendorAddress
				invoked.AddressEffectiveDate			= AddressEffectiveDate

			if (Customer entered)
				invoke SetVendor Customer
					invoked.PayablesVendorGroup	= VendorGroup
					invoked.PayablesVendor		= Vendor

			if (TransientAttachment entered)
				invoke Create VendorAttachment
					invoked.VendorGroup	= VendorGroup
					invoked.Vendor		= Vendor
					invoked.Description	= TransientAttachmentDescription
					invoked.Attachment	= TransientAttachment

			if (PayVendor not entered)
				PayVendor = Vendor
			
			if (CommentText entered or Title entered)
				invoke Create VendorComment
					invoked.VendorGroup     = VendorGroup
					invoked.Vendor          = Vendor
					invoked.CommentText     = CommentText
					invoked.Title           = Title
					invoked.PrintCode       = PrintCode
					invoked.DateRange.Begin = DateRange.Begin
					invoked.DateRange.End   = DateRange.End
					invoked.Company			= TransPayablesCompany

			invoke CreateFromVendor PayToVendor
				invoked.VendorGroup	= VendorGroup
				invoked.Vendor		= Vendor
				invoked.PayVendor	= PayVendor
				invoked.PayType		= "P"
				invoked.Default		= true

		UpdateCurrentAddress
			invoke Update CurrentAddressRel
				invoked.PostalAddress				= VendorAddress

		UpdatePrimaryContact
			invoke FastUpdate PrimeVendorContactRel
				invoked.ContactName					= ContactName
				invoked.PhoneNumber					= PhoneNumber
				invoked.MobileNumber				= MobileNumber
				invoked.FaxNumber					= FaxNumber
				invoked.EmailAddress				= EmailAddress
				invoked.TwitterID					= TwitterID
				invoked.SocialNetworkID2			= SocialNetworkID2
				invoked.SocialNetworkID3			= SocialNetworkID3
				invoked.SocialNetworkID4			= SocialNetworkID4
				invoked.SocialNetworkID5			= SocialNetworkID5
				invoked.VendorAddress				= VendorAddress
				invoked.AddressEffectiveDate		= AddressEffectiveDate

		BuildTextIndexes 
			build text search field VendorSearchDocument
				Fields
					Vendor
					VendorName
					VendorSearchName
					LegalName
					Reference1
					Reference2
					TaxID
					EDINumber

		AddCreateRequestVendor
			invoked.VendorGroup								= VendorGroup
			invoked.Vendor									= Vendor
			invoked.VendorClass								= VendorClass
			invoked.Reference1								= Reference1
			invoked.Reference2								= Reference2
			invoked.VendorName								= VendorName
			invoked.VendorSearchName						= VendorSearchName
			invoked.LegalName								= LegalName
			invoked.ContactName								= ContactName
			invoked.PayVendor								= PayVendor
			invoked.VendorStatus							= VendorStatus
			invoked.PaymentPriority							= PaymentPriority
			invoked.PhoneNumber								= PhoneNumber
			invoked.FaxNumber								= FaxNumber
			invoked.TelexNumber								= TelexNumber
			invoked.TermsCode								= TermsCode 
			invoked.InvoiceCurrency							= InvoiceCurrency
			invoked.BalanceCurrency						= BalanceCurrency
			invoked.RevalueCurrency							= RevalueCurrency
			invoked.SeparatePayment							= SeparatePayment
			invoked.TaxID									= TaxID
			invoked.TaxExemptCode							= TaxExemptCode
			invoked.TaxCode								= TaxCode 
			invoked.OnHold									= OnHold
			invoked.DistributionCode						= DistributionCode
			invoked.AccrualCode								= AccrualCode

			invoked.BankTransactionCode						= BankTransactionCode 
			invoked.PayablesProcessGroup					= PayablesProcessGroup 
			invoked.CashCode								= CashCode 
			invoked.BankEntity								= BankEntity 
			invoked.BankCurrency							= BankCurrency
			invoked.BankAccountNumber						= BankAccountNumber
			invoked.BankAccountType							= BankAccountType
			invoked.GlobalBankAccountType					= GlobalBankAccountType	
			invoked.BankAccountValidationType				= BankAccountValidationType
			invoked.CrossBorderIdentifier					= CrossBorderIdentifier
			invoked.IncomeCode								= IncomeCode
			invoked.IncomeWithholding						= IncomeWithholding
			invoked.EDINumber								= EDINumber
			invoked.ACHPrenotification						= ACHPrenotification
			invoked.MaximumInvoiceAmount					= MaximumInvoiceAmount
			invoked.CreateDate								= CreateDate
			invoked.OriginDate								= OriginDate
			invoked.Operator								= ApproverActor
			invoked.PrimeRate								= PrimeRate
			invoked.InvoiceGroup							= InvoiceGroup
			invoked.DiscountCode							= DiscountCode
			invoked.ERSCapable								= ERSCapable
			invoked.InvoiceReference						= InvoiceReference
			invoked.EDIAutoRelease							= EDIAutoRelease
			invoked.AuthorityCode							= AuthorityCode 
			invoked.Project									= Project 
			invoked.ChargeCode								= ChargeCode 
			invoked.PaymentCategoryCode						= PaymentCategoryCode 
			invoked.NormalOrExpressCode						= NormalOrExpressCode
			invoked.PaymentForm								= PaymentForm 
			invoked.SwiftID									= SwiftID
			invoked.MatchTable								= MatchTable 
			invoked.TermsCalculation						= TermsCalculation
			invoked.CreatePOD								= CreatePOD
			invoked.Enclosure								= Enclosure
			invoked.PoolOption								= PoolOption
			invoked.RequireMatchReference					= RequireMatchReference
			invoked.HoldUntilInspected						= HoldUntilInspected
			invoked.WriteOffAmount							= WriteOffAmount
			invoked.VendorClaimType							= VendorClaimType
			invoked.VendorClaimHoldCode						= VendorClaimHoldCode
			invoked.AutomaticChargebackHoldCode				= AutomaticChargebackHoldCode
			invoked.ChargebackMinimumAmount					= ChargebackMinimumAmount
			invoked.ReplaceGoods							= ReplaceGoods
			invoked.ShipOrHold								= ShipOrHold
			invoked.EmailAddress							= EmailAddress
			invoked.URLAddress								= URLAddress
			invoked.VendorAccount							= VendorAccount
			invoked.LanguageCode							= LanguageCode
			invoked.TaxUsageCode							= TaxUsageCode 
			invoked.VATRegistrationCountry					= VATRegistrationCountry
			invoked.VATRegistrationNumber					= VATRegistrationNumber
			invoked.ValidatePurchaseOrder					= ValidatePurchaseOrder
			invoked.RequirePurchaseOrder					= RequirePurchaseOrder
			invoked.WorkflowGroup							= WorkflowGroup
			invoked.MobileNumber							= MobileNumber
			invoked.PayImmediately							= PayImmediately
			invoked.DiversityCode							= DiversityCode
			invoked.IntermediaryBankEntity					= IntermediaryBankEntity 
			invoked.IntermediaryBankAccount					= IntermediaryBankAccount
			invoked.IntermediaryBankAccountValidationType	= IntermediaryBankAccountValidationType
			invoked.IntermediaryBankCurrency				= IntermediaryBankCurrency
			invoked.IntermediaryPrenotification				= IntermediaryPrenotification
			invoked.IntermediarySwiftID						= IntermediarySwiftID
			invoked.IntermediaryPaymentCategory				= IntermediaryPaymentCategory 
			invoked.IntermediaryNormalOrExpressCode			= IntermediaryNormalOrExpressCode
			invoked.IntermediaryPaymentForm					= IntermediaryPaymentForm 
			invoked.IntermediaryChargeCode					= IntermediaryChargeCode 
			invoked.IntermediaryCrossBorderIdentifier		= IntermediaryCrossBorderIdentifier
			invoked.RuleGroup								= RuleGroup 
			invoked.FloatDays								= FloatDays
			invoked.MatchPrepayment							= MatchPrepayment
			invoked.MatchPrepaymentMethod					= MatchPrepaymentMethod
			invoked.BACSReference							= BACSReference
			invoked.BACSName								= BACSName
			invoked.GiroNumber								= GiroNumber
			invoked.CreditCardNumber						= CreditCardNumber
			invoked.BankInstructions1						= BankInstructions1
			invoked.BankInstructions2						= BankInstructions2
			invoked.BankInstructions3						= BankInstructions3
			invoked.BankInstructions4						= BankInstructions4
			invoked.UseProcurementCard						= UseProcurementCard
			invoked.ProcurementCardNumber					= ProcurementCardNumber 
			invoked.ValidateDiversityDates					= ValidateDiversityDates
			invoked.RetainageAccrualCode					= RetainageAccrualCode
			invoked.GlobalLocationNumber					= GlobalLocationNumber
			invoked.TaxIDType								= TaxIDType
			invoked.TinNot									= TinNot
			invoked.TinVerified								= TinVerified
			invoked.ExemptFromSecondaryWithholding			= ExemptFromSecondaryWithholding
			invoked.SecondaryWithholdingCode1				= SecondaryWithholdingCode1
			invoked.SecondaryWithholdingCode2				= SecondaryWithholdingCode2
			invoked.SecondaryWithholdingCode3				= SecondaryWithholdingCode3
			invoked.CreatedBy								= actor
			invoked.ValidateCertificationDate				= ValidateCertificationDate
			invoked.ValidateCertificationAmount				= ValidateCertificationAmount
			invoked.ForeignEconomicRegulatoryCode			= ForeignEconomicRegulatoryCode 
			invoked.TwitterID								= TwitterID
			invoked.SocialNetworkID2						= SocialNetworkID2
			invoked.SocialNetworkID3						= SocialNetworkID3
			invoked.SocialNetworkID4						= SocialNetworkID4
			invoked.SocialNetworkID5						= SocialNetworkID5
			invoked.Carrier									= Carrier
			invoked.BankingCode								= BankingCode
			invoked.BankID									= BankID
			invoked.AssignmentNumber						= AssignmentNumber
			invoked.DebitingSign							= DebitingSign
			invoked.IntermediaryBankingCode					= IntermediaryBankingCode
			invoked.IntermediaryBankID						= IntermediaryBankID
			invoked.IntermediaryAssignmentNumber			= IntermediaryAssignmentNumber
			invoked.IntermediaryDebitingSign				= IntermediaryDebitingSign
			invoked.Logo									= Logo
			invoked.VendorAddress							= VendorAddress
			invoked.CustomerGroup							= RequestCustomerGroup
			invoked.Customer								= RequestCustomer
			invoked.TransientAttachmentDescription			= TransientAttachmentDescription
			invoked.TransientAttachment						= TransientAttachment
			invoked.AllowDuplicateInvoiceByDate				= AllowDuplicateInvoiceByDate
			invoked.RequireRemitTo							= RequireRemitTo
			invoked.CommentText						        = CommentText
			invoked.Title									= Title
			invoked.PrintCode								= PrintCode
			invoked.DateRange								= DateRange
			invoked.TransPayablesCompany					= TransPayablesCompany
			invoked.RestrictToOneInvoice 					= RestrictToOneInvoice

		DeleteRules
			ActionCode = ActionCode.Delete
			increment bod id.VariationID







			if (!BypassSupplierBODTrigger)		
				invoke TriggerSupplierPartyMaster VendorGroup
					invoked.PrmVendor		= Vendor
					invoked.ActionCode		= ActionCode







			invoke Delete VendorMappingTableInterfacesRel
			include DeleteVertexResultsFiles

		DeleteVertexResultsFiles
			invoke Delete VertexTaxAreaIdResultsRel
			invoke Delete UpdatePostalAddressRecordsRel
			invoke Delete VertexLookupResultsRel






		OFACValidation
			if (VendorGroup.ValidateOFAC)
				if (action type.Create
				or  VendorName changed)
					OFACWebService.Reference			= UniqueID
					OFACWebService.Name					= VendorName
					OFACWebService.Addressess			= VendorAddress.DeliveryAddress.AddressLine1
					OFACWebService.City					= VendorAddress.Municipality
					OFACWebService.State				= VendorAddress.StateProvince
					OFACWebService.Country				= VendorAddress.Country
					OFACWebService.PostalCode			= VendorAddress.PostalCode
					OFACWebService.CompareThreshold		= VendorGroup.OFACCompareThreshold
					constraint (!OFACWebService.HasOFACResults)
						"OFACResultsExceedThreshold"

		ISOCountryNumberRules
			if (TransientSelectISOCountryNumber)
				if (TransientCountry.IsoCountryNumber entered)
					ISOCountryNumber = TransientCountry.IsoCountryNumber
				TransientSelectISOCountryNumber = false
				initialize TransientCountry

		InitializeValidationFields	
			initialize VATValidation.OCountryCode
			initialize VATValidation.OVatNumber
			initialize VATValidation.ORequestDate
			initialize VATValidation.OValid
			initialize VATValidation.OTraderName
			initialize VATValidation.OTraderCompanyType
			initialize VATValidation.OTraderAddress
			initialize VATValidation.ORequestIdentifier
			initialize VATValidation.RequestXML
			initialize VATValidation.ResponseXML
			initialize VATValidation.ValidationDate
			initialize VATValidation.VATNumberValid

		ChangeDunAndBradstreetNumber
			if (VendorAndSupplierRel exists)
				if (DunAndBradstreetNumber not entered
				and VendorAndSupplierRel.DunAndBradstreetNumber entered)
					confirmation required
						"Leaving_Dun&_BradstreetBlankWillRemoveTheExistingValue.Select_'Ok'_toContinue."
					invoke Update first VendorAndSupplierRel
						invoked.DunAndBradstreetNumber = blank
				else
				if (DunAndBradstreetNumber entered
				and DunAndBradstreetNumber != VendorAndSupplierRel.DunAndBradstreetNumber)
					invoke Update first VendorAndSupplierRel
						invoked.DunAndBradstreetNumber = DunAndBradstreetNumber
			else
			if (DunAndBradstreetNumber entered)
				invoke Create VendorAndSupplierRel
					invoked.DunAndBradstreetNumber = DunAndBradstreetNumber


		ValidateReceivablesInvoiceNumberPrefix
			initialize ValidateReceivablePrefix
			ValidateReceivablePrefix.EditReceivableCompany			= LocalCompany
			ValidateReceivablePrefix.EditReceivableInvoice			= LocalInvoice
			ValidateReceivablePrefix.EditReceivableInvoiceType		= LocalTransactionType


	Derived Fields
		
		MissingCustomerMmsg		is a MessageField   
			"Warning:_Missing_CustomerLink"
		

		DerivedBankName is a DerivedField
			type is Alpha 50
			return BankEntityBankName + "-" + BankEntityBranchName

		RepresentativeText is a StringField
			type is Text
			default label is "Vendor"
			Vendor " - " VendorName



		DerivedFileName is a StringField
			type is Alpha 100
			restricted
			"Vendor_" Vendor "_Vendor_Statement_as_of_" current corporate date

		DerivedStatementDate					is a DerivedField
			type is Date
			restricted
			return current corporate date


		DerivedVendorIDName	is a MessageField
			default label is "Vendor"
			"<Vendor>_-_<VendorName>"

		VandorGroupCardViewDisplay				is a LabelField
			"VendorGroup:<VendorGroup>,_<VendorGroup.Description>"
		VendorGroupIDCardViewDisplay			is a LabelField	
			"VendorGroup:<VendorGroup>"
		VandorCardViewDisplay					is a LabelField
			"Vendor:<Vendor>,_<VendorName>"
		VendorIDCardViewDisplay					is a LabelField	
			"VendorID:<Vendor>"
		VendorCardViewDisplay					is a LabelField
			"<Vendor>-<VendorName>"
		VendorCustomerCardViewDisplay			is a LabelField
			"<Customer>-<CustomerRel.Name>"

		OnHoldMessage is a LabelField

			"Hold:<DerivedHoldCode>"

		DerivedHoldCode is a DerivedField	
			type is like PayablesHoldCode
			default label is "HoldCode"
			return first PayablesOnHoldRel.HoldCode

		FutureAddressMessage is a LabelField                  
			"FutureAddressExists"

		InvalidVATNumberMessage is a LabelField
			"InvalidVAT_Number"

		XiVendorNameAbbreviation is a DerivedField
			type is AlphaUpper 3
			return VendorName

		XiOnHoldMessage is a DerivedField
			type is MessageField
			if (OnHold entered)
				return OnHoldMessage
			else
				return blank

		InvalidVATMessage is a DerivedField
			type is MessageField
			if (DisplayInvalidText)
				return InvalidVATNumberMessage
			else
				return blank

		Reference1CardView						is a LabelField
			"Reference1:<Reference1>"
		Reference1CardViewDisplay				is a DerivedField
			type is MessageField
			if (Reference1 entered)
				return Reference1CardView
			else
				return blank

		Reference2CardView						is a LabelField
			"Reference2:<Reference2>"
		Reference2CardViewDisplay				is a DerivedField
			type is MessageField
			if (Reference2 entered)
				return Reference2CardView
			else
				return blank

		ContactNameCardView						is a LabelField
			"PrimaryContact:<ContactName>"
		ContactNameCardViewDisplay				is a DerivedField
			type is MessageField
			if (ContactName entered)
				return ContactName	
			else
				return blank

		FormattedPhoneNumber					is a DerivedField	
			type is MessageField
			return PhoneNumber.InternationalPrefix + " " + PhoneNumber.SubscriberNumber + "  " + PhoneNumber.Extension
		PhoneNumberCardView						is a LabelField	
			"Phone:<FormattedPhoneNumber>"
		PhoneNumberCardViewDisplay				is a DerivedField
			type is MessageField
			if (PhoneNumber entered)
				return PhoneNumberCardView
			else
				return blank

		AddressLine1CardView					is a LabelField
			"Address1:<VendorAddressLine1>"
		AddressLine1CardViewDisplay				is a DerivedField
			type is MessageField
			if (VendorAddressLine1 entered)
				return AddressLine1CardView
			else
				return blank

		CityStateZipCardView					is a LabelField
			"City,\State,\PostalCode:<AddressCSPDisplay>"
		CityStateZipCardViewDisplay				is a DerivedField
			type is MessageField
			if (AddressCSPDisplay entered)
				return CityStateZipCardView
			else
				return blank

		CityStateZipNoLabelCardView					is a LabelField
			"<AddressCSPMixedCaseDisplay>"
		CityStateZipNoLabelCardViewDisplay			is a DerivedField
			type is MessageField
			if (VendorCity entered)
				return CityStateZipNoLabelCardView
			else
				return blank

		CountryCardView							is a LabelField
			"Country/\Jurisdiction:<VendorCountry>"
		CountryCardViewDisplay					is a DerivedField
			type is MessageField
			if (VendorCountry entered)
				return VendorCountry	
			else
				return blank

		VendorStatusCardView					is a LabelField
			"Status:<VendorStatus>"
		VendorStatusCardViewDisplay				is a DerivedField
			type is MessageField
			if (VendorStatus entered)
				return VendorStatusCardView
			else
				return blank

		CreateMessage				is a LabelField
			restricted
			"CreateVendor"

		VendorMessage				is a LabelField
			restricted
			"Vendor<Vendor>_-_<VendorName>"

		DerivedVendorNameID	is a DerivedField
			type is Alpha size up to 132
			default label is "Vendor"
			return RepresentativeText

		DerivedFormTitle		is a DerivedField
			type is MessageField
			restricted
			if (RecordExists)
				return "Vendor " + DerivedVendorNameID	
			else
				return CreateMessage

		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforSupplierPartyMaster"

		ContextMessageText is a MessageField
			restricted
			"Vendor<Vendor><VendorName>"

		VendorGroupAndVendor		is a StringField
			type is AlphaUpper 20
			VendorGroup
			", "
			Vendor

		NetBalance is a DerivedField
			type is like InternationalAmount

			if ((Customer.TotalCurrentBalance - first VendorBalanceMasterRel.CurrentBalance) < 0)
				return (first VendorBalanceMasterRel.CurrentBalance - Customer.TotalCurrentBalance)
			else
				return (Customer.TotalCurrentBalance - first VendorBalanceMasterRel.CurrentBalance)

		NetBalanceType is a DerivedField
			type is Alpha 14

			if ((Customer.TotalCurrentBalance - first VendorBalanceMasterRel.CurrentBalance) < 0)
				return "Net AP Balance"
			else
				return "Net AR Balance"

		AddressCSPDisplay	is a StringField
			type is AlphaRight size 60

			VendorCity
			","
			VendorStateProvince
			" "
			VendorPostalCode

		AddressCSPMixedCaseDisplay	is a StringField	
			type is Alpha size 60
			VendorCity
			", "
			VendorStateProvince
			"  "
			VendorPostalCode

		LocationIndicator	is a ConditionalField
			type is AlphaUpper size 1
			default label is "HasLocations"
			classic name is LOC-INDICATOR
			if (VendorLocationRelExists)
				"*"
			else
				blank

		LocationIndicatorBoolean is a ConditionalField
			type is Boolean
			default label is "HasLocations"
			if (VendorLocationRelExists)
				true
			else
				false

		HasLocationsTag is a MessageField
			"Has_Locations"

		ShortVendorName	  is a StringField
			type is Alpha size 20
			classic name is SHORT-VNAME
			restricted
			VendorName

		VendorCommentsExists is a ConditionalField
			type is AlphaUpper size 4
			classic name is VCOMMENT-EXIST
			restricted
			if (VendorLocationRelExists)
				"*"
			else
				blank

		VendorAddressLine1   is a ConditionalField
			type is like AddressLine
			classic name is VDR-ADDR1
			if (CurrentAddressExists)
				CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine1
			else
				blank

		VendorAddressLine2   is a ConditionalField
			type is like AddressLine
			classic name is VDR-ADDR2
			if (CurrentAddressExists)
				CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine2
			else
				blank

		VendorAddressLine3   is a ConditionalField
			type is like AddressLine
			classic name is VDR-ADDR3
			if (CurrentAddressExists)
				CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine3
			else
				blank

		VendorAddressLine4   is a ConditionalField
			type is like AddressLine
			classic name is VDR-ADDR4

			if (CurrentAddressExists)
				CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine4
			else
				blank

		VendorCity		   is a ConditionalField
			type is like MunicipalityLarge
			classic name is VDR-CITY-ADDR5

			if (CurrentAddressExists)
				CurrentAddressRel.PostalAddress.Municipality
			else
				blank

		VendorStateProvince  is a ConditionalField
			type is like StateProvince
			classic name is VDR-STATE

			if (CurrentAddressExists)
				CurrentAddressRel.PostalAddress.StateProvince
			else
				blank

		VendorPostalCode	 is a ConditionalField
			type is like PostalCode
			classic name is VDR-POSTAL

			if (CurrentAddressExists)
				CurrentAddressRel.PostalAddress.PostalCode
			else
				blank

		VendorCounty		 is a ConditionalField
			type is Alpha size 25
			classic name is VDR-COUNTY

			if (CurrentAddressExists)
				CurrentAddressRel.PostalAddress.County
			else
				blank

		VendorCountry		is a ConditionalField
			type is Alpha size 30
			classic name is VDR-COUNTRY

			if (CurrentAddressExists)
				CurrentAddressRel.PostalAddress.Country
			else
				blank









		CityStateZIPDisplay is a ConditionalField
			type is Alpha 76
			if (CurrentAddressExists)
				CurrentAddressRel.CityStateZIPDisplay
			else
				blank

		CommaSeparatedAddress		is a LabelField
			"<VendorAddressLine1>,<CityStateZIPDisplay>,<VendorCountry>"

		VATNumber			is a StringField
			type is Alpha size 14
			classic name is VAT-NBR
			restricted
			VATRegistrationCountry
			VATRegistrationNumber

		NormalRemitToLocation			is a DerivedField
			type is like VendorLocation
			restricted
			return first NormalRemitToLocationRel.VendorLocation

		NormalPurchaseFromLocation		is a DerivedField
			type is like VendorLocation
			restricted
			return first NormalPurchaseFromLocationRel.VendorLocation














		NoVendorsFound is a MessageField		
			restricted
			"NoVendorsFoundToInactivate"

		VendorsInactivated is a MessageField		
			restricted
			"VendorsInactivated"

		CompletionMessage	is a DerivedField
			type is MessageField
			restricted
			if (WebServiceError)

					return VertexWebserviceErrorMessage
			else
			if (MultipleTaxCodes)
				return VertexMultTaxCodesMessage
			else
				return VertexCompletionMessage

		VertexMultTaxCodesMessage is a MessageField
			restricted
			"TaxCodeNotUpdated.MultipleTaxCodesExistsForVendorsAddress"

		VertexCompletionMessage	is a MessageField
			restricted
			"UpdateTaxCodeComplete"

		VertexWebserviceErrorMessage	is a MessageField
			restricted
			"NoTaxCodesReturnedDueToA\VertexError"

		OldTaxCodeMsg				is a MessageField
			restricted
			"OldTaxCode:<OldTaxCode>"

		ProcurementCardUncheckMessage is a MessageField		
			restricted
			"SavingTheVendorRecordWith_'\Use_\Procurement_\Card'_uncheckedWillRemoveThe_\Procurement_\CardFromThisVendor"

		DerivedRelatedObjectReference	is a DerivedField
			type is BusinessObjectReference
			restricted


			return reference to this instance

		GrandTotalInvoiceBasePayment is a DerivedField
			type is like InternationalAmount
			return sum NonDiversePayablesInvoicesByVendorRel.TotalPaymentAmount.FunctionalTotal

		DerivedVendorCommentsCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (VendorCommentsRel exists)
				return "(" + instance count of VendorCommentsRel + ")"
			else
				return ""

		DerivedVendorAttachmentsCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (VendorAttachmentsRel exists)
				return "(" + instance count of VendorAttachmentsRel + ")"
			else
				return ""

		DerivedLocationCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (VendorLocationRel exists)
				return "(" + instance count of VendorLocationRel + ")"
			else
				return ""

		LocationExist is a DerivedField
			type is Boolean
			restricted
			if (VendorLocationRel exists)
				return true
			else
				return false

		ChartsAsOfDate is a DerivedField
			type is Date
			if (PayablesInvoiceTotalDateRel exists)
				return first PayablesInvoiceTotalDateRel.create date
			else
				return blank

		ChartsAsOfMessage is a DerivedField
			type is MessageField
			if (PayablesInvoiceTotalDateRel exists)
				return "as of " + ChartsAsOfDate	
			else
				return " - Chart Not Available"

		VertexNoChangeMessage				is a LabelField
			"NoChangeNecessary,Correct\Tax\Area\IdExists"

		BlankTaxCodeMessage					is a LabelField
			"Blank"

		DerivedLookupMessage				is a DerivedField
			type is MessageField
			restricted
			if (NewTaxCode = OldTaxCode)
				return VertexNoChangeMessage
			else
				return CalculateTaxOutputMessage

		TaxCodeMessage				is a DerivedField
			type is MessageField
			restricted
			if (NewTaxCode = OldTaxCode)
				return blank
			if (NewTaxCode not = OldTaxCode
			and OldTaxCode not entered)
				return BlankTaxCodeMessage
			else
				return OldTaxCodeMsg

		DerivedMaskedProcurementCard is a DerivedField		
			type is like ProcurementCardNumber
			restricted
			if (ProcurementCardNumber entered)
				return "************" + ProcurementCardNumber[13:16]
			return blank

		DerivedHasCustomer is a DerivedField
			type is Boolean
			restricted
			if (HasCustomer)
				return true

		DerivedCustomerBalance	is a DerivedField
			type is Boolean
			restricted
			if (Customer.TotalCurrentBalance entered)
				return true

		DerivedVendorBalance is a DerivedField
			type is Boolean
			restricted
			if (any TotalVendorBalancesRel.CurrentBalance entered)
				return true

		DerivedCountry is a DerivedField
			type is like Country
			restricted
			if (ISOCountryNumber not entered)
				return blank
			return ISOCountryNumberRel.Country

		DerivedAmountEligibleForCredit is a DerivedField
			type is like InternationalAmount
			restricted
			return sum APToARInterfaceSelectedForCreditsRel.PayablesInvoice.InvoiceAmount.CurrencyAmount

		DerivedAmountEligibleForDebit is a DerivedField
			type is like InternationalAmount
			restricted
			return sum APToARInterfaceSelectedForDebitsRel.PayablesInvoice.InvoiceAmount.CurrencyAmount

		DerivedTotalVendorBalance is a DerivedField
			type is like InternationalAmount
			if (HasCurrencyMatch)
				return sum TotalVendorBalancesRel.CurrentBalance

		DerivedCurrencyNetBalance is a DerivedField
			type is like InternationalAmount
			if (HasCurrencyMatch)
				if ((Customer.CurrentReceivableBalance - DerivedTotalVendorBalance) < 0)
					return (DerivedTotalVendorBalance - Customer.CurrentReceivableBalance)
				else
					return (Customer.CurrentReceivableBalance - DerivedTotalVendorBalance)

		NetCompanyBalanceType is a DerivedField
			type is Alpha 14
			if (HasCurrencyMatch)
				if ((Customer.CurrentReceivableBalance - DerivedTotalVendorBalance) < 0)
					return "Net AP Balance"
				else
					return "Net AR Balance"

		DerivedSelectedAmount is a DerivedField
			type is like InternationalAmount
			restricted
			return (sum APToARInterfaceSelectedAmountsRel.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount)

		VatRequestXML is a DerivedField	
			type is XMLDocument
			restricted
			VatRequestXML = template.VatTemplate document for this instance

		ZeroFilledPayablesCompany is a ConditionalField
			type is Alpha 4
			if (LocalCompany < 10)
				"000" + LocalCompany
			else
			if (LocalCompany < 100)
				"00" + LocalCompany
			else
			if (LocalCompany < 1000)
				"0" + LocalCompany
			else
				LocalCompany

		ZeroFilledLastAPClearingMemo is a ConditionalField
			type is Alpha 8
			if (LocalSuffix < 10)
				"0000000" + LocalSuffix
			else
			if (LocalSuffix < 100)
				"000000" + LocalSuffix
			else
			if (LocalSuffix < 1000)
				"00000" + LocalSuffix
			else
			if (LocalSuffix < 10000)
				"0000" + LocalSuffix
			else
			if (LocalSuffix < 100000)
				"000" + LocalSuffix
			else
			if (LocalSuffix < 1000000)
				"00" + LocalSuffix
			else
			if (LocalSuffix < 10000000)
				"0" + LocalSuffix
			else
				LocalSuffix



		DerivedDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter	= "Generic_Delimiter"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "tenantID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "releaseID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "logicalID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "VersionID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedappProdline is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "appProdline"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedIntegratingApplication is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "IntegratingApplication"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value


		DerivedViewHiddenData is a DerivedField		
			type is Boolean
			restricted
			if (!RecordExists)
				return true
			else
				return false

		DerivedVendor is a DerivedField
			type is Alpha size 9
			restricted
			return Vendor using "%d"
			
		VendorNationalIDNumber is a DerivedField
			type is Alpha size 20
			restricted
			if (CurrentAddressExists)
				return CurrentAddressRel.PostalAddress.NationalIDNumber
			else
				return ""
		
		VendorProvinceIDNumber is a DerivedField
			type is Alpha size 20
			restricted
			if (CurrentAddressExists)
				return CurrentAddressRel.PostalAddress.StateProvinceIDNumber
			else
				return ""
		
		VendorLocaleIDNumber is a DerivedField
			type is Alpha size 20
			restricted
			if (CurrentAddressExists)
				return CurrentAddressRel.PostalAddress.LocaleIDNumber
			else
				return ""
				
		VendorIndividualIDNumber is a DerivedField
			type is Alpha size 20
			restricted
			if (CurrentAddressExists)
				return CurrentAddressRel.PostalAddress.IndividualIDNumber
			else
				return ""
		
		VendorCNPJ is a DerivedField
			type is Alpha 20
			restricted
			if(VendorNationalIDNumber!="")
				return VendorNationalIDNumber
			else
				return VendorIndividualIDNumber

		DerivedCrossAE is a DerivedField
			type is AlphaUpper size 60
			restricted
			if(LocalBODAEAlreadyExecuted != true)
				LocalBODAEAlreadyExecuted = true
				if (FSMBODIntegratingCrossReferenceRel.DestinationValue entered)
					LocalCrossAEValue = FSMBODIntegratingCrossReferenceRel.DestinationValue
				return LocalCrossAEValue
			else
				return LocalCrossAEValue
				
		DerivedCrossAccountingEntity is a DerivedField
			type is AlphaUpper size 60
			restricted
			if(LocalAEAlreadyExecuted != true)
				LocalAEAlreadyExecuted = true
				if(FSMBODCrossReferenceDetailRel.DestinationValue entered)
					LocalBODCrossReferenceAE = FSMBODCrossReferenceDetailRel.DestinationValue
				else
					if(DerivedIntegratingApplication entered and FSMBODIntegratingCrossReferenceRel.DestinationValue entered)
						LocalBODCrossReferenceAE = DerivedCrossAE
					else
						LocalConfigurationParameter	= "SyncSupplierPartyMaster_Outbound_AccountingEntity"
						if(FSMBODConfigurationParameterRel exists)
							LocalBODCrossReferenceAE = FSMBODConfigurationParameterRel.Value
						if(LocalBODCrossReferenceAE entered)
							return LocalBODCrossReferenceAE
						else
							LocalBODCrossReferenceAE = VendorGroup
				return LocalBODCrossReferenceAE
			else
				return LocalBODCrossReferenceAE

		BODActionCode is a DerivedField
			type is Alpha 10
			restricted
			if (action type.Create or ActionCode.Create)
				return "Add"
			else
				if (action type.Update or action type.Delete)
					return "Replace"
				else
					return ""

		BODRevision is a DerivedField
			type is Alpha 25
			return ""

		BODVariationID is a DerivedField
			type is Alpha size 25
			restricted
			return  bod id.VariationID

		DerivedDefaultBODLocation is a DerivedField
			type is AlphaUpper size 20
			return ""

		BODCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			BODCurrentTimeStamp = current timestamp
			return BODCurrentTimeStamp

		BODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return BODCurrentTimeStamp[1:4] + "-" + BODCurrentTimeStamp[5:6] + "-" + BODCurrentTimeStamp[7:8] + "T" + BODCurrentTimeStamp[9:10] + ":" + BODCurrentTimeStamp[11:12] + ":" + BODCurrentTimeStamp[13:14] + "Z"

		DerivedLastupdateBy is a DerivedField
			type is Alpha size 60
			restricted
			return update stamp.actor

		BODCreateTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			BODCreateTimeStamp =  create stamp.timestamp
			return BODCreateTimeStamp

		BODFormattedCreateTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return BODCreateTimeStamp[1:4] + "-" + BODCreateTimeStamp[5:6] + "-" + BODCreateTimeStamp[7:8] + "T" + BODCreateTimeStamp[9:10] + ":" + BODCreateTimeStamp[11:12] + ":" + BODCreateTimeStamp[13:14] + "Z"

		DerivedCreatedBy is a DerivedField
			type is Alpha size 60
			restricted
			return create stamp.actor

		BODUpdateTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			BODUpdateTimeStamp = update stamp.timestamp
			return BODUpdateTimeStamp

		BODFormattedUpdateTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return BODUpdateTimeStamp[1:4] + "-" + BODUpdateTimeStamp[5:6] + "-" + BODUpdateTimeStamp[7:8] + "T" + BODUpdateTimeStamp[9:10] + ":" + BODUpdateTimeStamp[11:12] + ":" + BODUpdateTimeStamp[13:14] + "Z"

		DerivedFinanceEnterpriseGroup is a DerivedField
			type is Alpha size 4
			restricted
			return VendorGroup.BusinessGroup.FinanceEnterpriseGroup

		DerivedDocumentID is a DerivedField
			type is Alpha size 60
			restricted
			if(DerivedRequiredCleanDocId = "Y") 
				return DerivedVendor
			else
				return DerivedFinanceEnterpriseGroup+DerivedDelimiter+VendorGroup+DerivedDelimiter+DerivedVendor

		DerivedBODID is a DerivedField
			type is Alpha 100
			restricted
			return "infor-nid:" + DerivedTenantID +":" + DerivedCrossAccountingEntity + ":" +DerivedDefaultBODLocation+ ":" +DerivedDocumentID + ":" +BODRevision+"?SupplierPartyMaster&verb=Sync&TrackerID=" + LocalFSMInboundBODTracker

		BankEntityBankName is a DerivedField
			type is Alpha 50
			restricted
			if (BankEntity entered)
				return BankEntity.BankName

		BankEntityAddressLine1 is a DerivedField
			type is Alpha 50
			restricted
			if (BankEntity entered)
				return BankEntity.PostalAddress.DeliveryAddress.AddressLine1

		BankEntityAddressLine2 is a DerivedField
			type is Alpha 50
			restricted
			if (BankEntity entered)
				return BankEntity.PostalAddress.DeliveryAddress.AddressLine2

		BankEntityAddressLine3 is a DerivedField
			type is Alpha 50
			restricted
			if (BankEntity entered)
				return BankEntity.PostalAddress.DeliveryAddress.AddressLine3

		BankEntityAddressLine4 is a DerivedField
			type is Alpha 50
			restricted
			if (BankEntity entered)
				return BankEntity.PostalAddress.DeliveryAddress.AddressLine4

		BankEntityMunicipality is a DerivedField
			type is Alpha 58
			restricted
			if (BankEntity entered)
				return BankEntity.PostalAddress.Municipality

		BankEntityStateProvince is a DerivedField
			type is Alpha 10
			restricted
			if (BankEntity entered)
				return BankEntity.PostalAddress.StateProvince

		BankEntityCountry is a DerivedField
			type is Alpha 10
			restricted
			if (BankEntity entered)
				return BankEntity.PostalAddress.Country

		BankEntityPostalCode is a DerivedField
			type is Alpha 10
			restricted
			if (BankEntity entered)
				return BankEntity.PostalAddress.PostalCode

		BankEntityInternationalPrefix is a DerivedField
			type is Alpha 10
			restricted
			if (BankEntity entered)
				return BankEntity.PhoneNumber.InternationalPrefix

		BankEntitySubscriberNumber is a DerivedField
			type is Alpha 10
			restricted
			if (BankEntity entered)
				return BankEntity.PhoneNumber.SubscriberNumber

		BankEntityExtension is a DerivedField
			type is Alpha 10
			restricted
			if (BankEntity entered)
				return BankEntity.PhoneNumber.Extension

		BankEntityBranchName is a DerivedField
			type is Alpha 10
			restricted
			if (BankEntity entered)
				return BankEntity.BranchName

		DerivedBankEntityPostalAddressType is a DerivedField
			type is Alpha size 25
			restricted
			if (BankEntity entered)
				if(BankEntity.PostalAddress.Type = 1)
					return "PostOfficeBox"
				if(BankEntity.PostalAddress.Type = 2)
					return "Street"
				if(BankEntity.PostalAddress.Type = 3)
					return "Military"
				if(BankEntity.PostalAddress.Type = 4)
					return "Undefined"
				if(BankEntity.PostalAddress.Type = "")
					return ""
				else
					return ""

		DerivedVendorStatus is a DerivedField
			type is Alpha size 20
			restricted
			if (action type.Delete or ActionCode.Delete)
				return "Deleted"
			if (action type.Create)
				if(VendorStatus.Inactive or VendorStatus.InactiveForPOAdditions)
					return "Closed"
				else
					return "Open"
			if (action type.Update)
				if(VendorStatus.Inactive or VendorStatus.InactiveForPOAdditions)
					return "Closed"
				else
					return "Open"	

		DerivedSubscriberNumberDesc is a DerivedField
			type is Alpha size 15
			restricted
			return "Phone"
			
		DerivedInterfaceVendor is a DerivedField
			type is Alpha size 5
			restricted
			if (VendorClass.InterfaceVendor)
				return "true"
			else
				return "false"

		DerivedTermDuration is a DerivedField
			type is Alpha size 25
			restricted
			if (TermsCode entered)
				return "P0Y0M"+TermsCode.FirstNetDays+"DT0H0M0S"

		DerivedTermDiscountPercent is a DerivedField
			type is Decimal size 7.5
			restricted
			if (TermsCode entered)
				return TermsCode.TermsDiscountArray.TermsDiscountGroup.DiscountPercent*100
			else
				return 0

		DerivedVendorClassDesc is a DerivedField
			type is Alpha size 250
			restricted
			return VendorClass.Description

		DerivedEmployee is a DerivedField
			type is Alpha size 250
			restricted
			if (Employee != "0")
				return Employee
			else
				return ""
				
		DerivedTaxNameValue is a DerivedField
			type is Alpha size 5
			restricted
			if(DerivedIntegrationApplication = "Local.ly" and (TaxIDType = "TPAR" or VendorCountry = "AU"))
				return "1"
			else
				return ""
				
		DerivedEDIType is a DerivedField
			type is Alpha size 25
			restricted
			if(EDINumber entered)
				return "EDI"
			else
				return ""

		DerivedExcludedInvoiceTemplates is a DerivedField
			type is Alpha 50
			initialize LocalString
			I1 = instance count of InvoiceTemplateExclusionRel
			I2 = 1
			if (I1 = 0)
				initialize LocalString
			else
				for each InvoiceTemplateExclusionRel
					LocalString += each.DerivedTemplate

					if (I2 > 10)
						LocalString += "..."
						end for each

					if (I1 > I2)
						LocalString += "; "

					I2 += 1

			return LocalString

		DerivedExcludeBasic is a DerivedField
			type is Boolean
			LocalInvoiceTemplate = 0
			if (LocalInvoiceTemplateExclusionRel exists)
				return true

		DerivedExcludeTaxInvoice is a DerivedField
			type is Boolean
			LocalInvoiceTemplate = 1
			if (LocalInvoiceTemplateExclusionRel exists)
				return true

		DerivedExcludeFreight is a DerivedField
			type is Boolean
			LocalInvoiceTemplate = 3
			if (LocalInvoiceTemplateExclusionRel exists)
				return true

		DerivedExcludeMatchInvoice is a DerivedField
			type is Boolean
			LocalInvoiceTemplate = 4
			if (LocalInvoiceTemplateExclusionRel exists)
				return true

		DerivedExcludeServiceContract is a DerivedField
			type is Boolean
			LocalInvoiceTemplate = 5
			if (LocalInvoiceTemplateExclusionRel exists)
				return true

		DerivedDiveristyDescription is a DerivedField		
			type is Alpha 30
			return DiversityCode.Description

		DerivedIntegrationApplication is a DerivedField
			type is Alpha size 25
			restricted
			LocalConfigurationParameter	= "IntegrationApplication"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedIntegrationApplicationLocally is a DerivedField
			type is Boolean
			restricted
			if (DerivedIntegrationApplication = "Local.ly")
				return true
			else
				return false

		DerivedTaxRegistrationType is a DerivedField
			type is Alpha 30
			restricted
			if(DerivedIntegrationApplicationLocally and VendorCountry = "IN")
				if(TaxRegistrationType.Registered)
					return "Registered"
				else
				if(TaxRegistrationType.UnRegistered)
					return "UnRegistered"
				else
				if(TaxRegistrationType.SpecialEconomicZone)
					return "SpecialEconomicZone"
				else
				if(TaxRegistrationType.CompositeDealer)
					return "CompositeDealer"
				else
					return ""
			else
				return ""

		DerivedVendorContactID  is a DerivedField
			type is Alpha size 10
			restricted
			if(VendorContactRel exist)
				return first VendorContactRel.VendorContact.VendorContactCode + first VendorContactRel.VendorContact.ContactLevel

		DerivedVATRegistrationNumber is a DerivedField
			type is Alpha size 25
			restricted
			if(DerivedIntegrationApplicationLocally and VendorCountry = "AR")
				return VATRegistrationNumber
			else
				return ""

		DerivedschemeAgencyNameARVAT is a DerivedField
			type is Alpha size 25
			restricted
			if(DerivedIntegrationApplicationLocally and VendorCountry = "AR")
				return "AR:VAT"
			else
				return ""

		DerivedschemeAgencyNameARIIBB	is a DerivedField
			type is Alpha size 25
			restricted
			if(DerivedIntegrationApplicationLocally and VendorCountry = "AR")
				if(VATRegistrationNumber = TaxID)
					return ""
				else
					return "AR:IIBB"
			else
				return ""

		DerivedSchemeValue1	is a DerivedField
			type is Alpha size 25
			restricted
			if(DerivedIntegrationApplicationLocally and VendorCountry = "AR")
				if(VATRegistrationNumber = TaxID)
					return ""
				else
					return "TaxIdentificationNumber"
			else
			if(DerivedIntegrationApplicationLocally)
				return "TaxIdentificationNumber"
			else
				return ""

		DerivedSchemeValue	is a DerivedField
			type is Alpha size 25
			restricted
			if(DerivedIntegrationApplicationLocally and VendorCountry = "AR")
				return "TaxIdentificationNumber"
			else
				return ""

		DerivedTaxID	is a DerivedField
			type is Alpha size 25
			restricted
			if(DerivedIntegrationApplicationLocally and VendorCountry = "AR")
				if(VATRegistrationNumber = TaxID)
					return ""
				else
					return TaxID
			else
				return TaxID

		DerivedVendorContactName is a DerivedField
			type is Alpha size 120
			restricted
			if(VendorContactRel exist)
				return first VendorContactRel.VendorContact.ContactName

		DerivedVPInternationalPrefix is a DerivedField
			type is Alpha size 6
			restricted
			return PhoneNumber.InternationalPrefix

		DerivedVPSubscriberNumber is a DerivedField
			type is Alpha size 15
			restricted
			return PhoneNumber.SubscriberNumber

		DerivedVPExtension is a DerivedField
			type is Alpha size 10
			restricted
			return PhoneNumber.Extension

		DerivedVMInternationalPrefix is a DerivedField
			type is Alpha size 6
			restricted
			return MobileNumber.MobilePhoneNumber.InternationalPrefix

		DerivedVMSubscriberNumber is a DerivedField
			type is Alpha size 15
			restricted
			return MobileNumber.MobilePhoneNumber.SubscriberNumber

		DerivedVMExtension is a DerivedField
			type is Alpha size 10
			restricted
			return MobileNumber.MobilePhoneNumber.Extension

		DerivedVFInternationalPrefix is a DerivedField
			type is Alpha size 6
			restricted
			return FaxNumber.InternationalPrefix

		DerivedVFSubscriberNumber is a DerivedField
			type is Alpha size 15
			restricted
			return FaxNumber.SubscriberNumber

		DerivedVFExtension is a DerivedField
			type is Alpha size 10
			restricted
			return FaxNumber.Extension
		
		DerivedChannelCodePhone is a DerivedField
			type is Alpha size 15
			restricted
			if (DerivedIntegrationApplication = "Local.ly" and VendorCountry = "AU")
				return "MobilePhone"
			else
				return "Phone"
			
		DerivedChannelCodeFax is a DerivedField
			type is Alpha size 15
			restricted
			if (DerivedIntegrationApplication = "Local.ly" and VendorCountry = "AU")
				return "Fax"
			else
				return "Phone"
		
		DerivedIBankAccountNumber is a DerivedField 
			type is Alpha size 35
			restricted
			if (BankAccountNumber entered and DerivedIntegrationApplication = "Local.ly" and VendorCountry = "AU"
				and ((BankAccountValidationType = "Y") or (BankAccountValidationType = "Z") or (BankAccountValidationType = "")))
				return BankAccountNumber

		DerivedBankID is a DerivedField
			type is Alpha size 9
			restricted
			if(BankID entered and DerivedIntegrationApplication = "Local.ly" and VendorCountry = "AU")
				return BankID
			else
				return ""
				
		SupplierPartyVendorContactXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			SupplierPartyVendorContactXMLBOD += template.IONSupplierPartyVendorContactXML_ST document for this instance

		SupplierPartyFinancialContactXMLBOD is a DerivedField
			type is XMLDocument
			restricted 
			SupplierPartyFinancialContactXMLBOD = template.IONSupplierPartyFinancialContactXML_ST document for this instance

		SupplierPartyEDITypeXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if(EDINumber entered)
				SupplierPartyEDITypeXMLBOD = template.IONSupplierPartyEDITypeXML_ST document for this instance
				return SupplierPartyEDITypeXMLBOD
			else
				return ""
				
		SupplierPartyMasterVendorAddressXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if (DerivedIntegrationApplication = "Local.ly" and VendorCountry = "AU")
				SupplierPartyMasterVendorAddressXMLBOD = template.IONSupplierPartyMasterVendorAddressAU_XML_ST document for this instance
			else
				SupplierPartyMasterVendorAddressXMLBOD = template.IONSupplierPartyMasterVendorAddress_XML_ST document for this instance

		SupplierPartyVendorXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			SupplierPartyVendorXMLBOD = template.IONSupplierPartyVendorXML_ST document for this instance

		SupplierPartyMasterXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if (DerivedRequiredCleanDocId = "Y")
				SupplierPartyMasterXMLBOD = template.IONSyncSupPartyMastCleanDocXML_ST document for this instance
			else
			if(DerivedIntegrationApplication = "Local.ly" and VendorCountry = "BR")
				SupplierPartyMasterXMLBOD = template.IONSupplierPartyMaster_BR_XML_ST document for this instance
			else
				SupplierPartyMasterXMLBOD = template.IONSupplierPartyMasterXML_ST document for this instance



		DerivedProcessCrossAccountingEntity is a DerivedField
			type is AlphaUpper size 60
			restricted
			if(LocalAEAlreadyExecuted != true)
				LocalAEAlreadyExecuted = true
				if(FSMBODCrossReferenceDetailRel exists)
					LocalBODCrossReferenceAE = FSMBODCrossReferenceDetailRel.DestinationValue
				else
					LocalBODCrossReferenceAE = ""
				return LocalBODCrossReferenceAE
			else
				return LocalBODCrossReferenceAE
							
		DerivedProcessBODID is a DerivedField
			type is Alpha 100
			restricted
			return "infor-nid:" + DerivedTenantID +":" + DerivedProcessCrossAccountingEntity + ":" +DerivedDefaultBODLocation+ ":" +DerivedVendor + ":" +BODRevision+"?SupplierPartyMaster&verb=Process&TrackerID=" + LocalFSMInboundBODTracker

		DerivedVATRegistrationCountry is a DerivedField
			type is Alpha 8
			restricted
			if(VATRegistrationCountry = "")
				return "US"
			else
				return VATRegistrationCountry

		BODProcessActionCode is a DerivedField
			type is Alpha 10
			restricted
			if (action type.Create or ActionCode.Create)
				return "Add"
			else
				if (action type.Update or action type.Delete)
					return "Change"
				else
					return ""

		DerivedVendorPostalAddressType is a DerivedField
			type is Alpha size 25
			restricted
			if (CurrentAddressExists)
				if(CurrentAddressRel.PostalAddress.Type = 1)
					return "PostOfficeBox"
				if(CurrentAddressRel.PostalAddress.Type = 2)
					return "Street"
				if(CurrentAddressRel.PostalAddress.Type = 3)
					return "Military"
				if(CurrentAddressRel.PostalAddress.Type = 4)
					return "Undetermined"
				if(CurrentAddressRel.PostalAddress.Type = "")
					return ""
				else
					return ""

		DerivedProcessBankEntityPostalAddressType is a DerivedField
			type is Alpha size 25
			restricted
			if (BankEntity entered)
				if(BankEntity.PostalAddress.Type = 1)
					return "PostOfficeBox"
				if(BankEntity.PostalAddress.Type = 2)
					return "Street"
				if(BankEntity.PostalAddress.Type = 3)
					return "Military"
				if(BankEntity.PostalAddress.Type = 4)
					return "Undetermined"
				if(BankEntity.PostalAddress.Type = "")
					return ""
				else
					return ""

		DerivedProcessVendorStatus is a DerivedField
			type is Alpha size 20
			restricted
			if (action type.Delete or ActionCode.Delete)
				return "Deleted"
			if (action type.Create or action type.Update)
				if (VendorStatus.Active)
					return "Open"
				if (VendorStatus.Inactive)
					return "Pending"
				if (VendorStatus.InactiveForPOAdditions)
					return "Hold"
				if (VendorStatus.Restricted)
					return "Deleted"
				else
					return ""	

		ProcessSupplierPartyVendorContactXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if(!ActionCode.Delete)
				if (VendorContactRel exist)
					for each VendorContactRel
						ProcessSupplierPartyVendorContactXMLBOD += template.IONProcessSupplierPartyMasterContact_ST document for each
					return ProcessSupplierPartyVendorContactXMLBOD
				else
					return ""
			else
				return ""

		ProcessSupplierPartyFinancialContactXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if(!ActionCode.Delete)
				ProcessSupplierPartyFinancialContactXMLBOD = template.IONProcessSupplierPartyMasterContactDelete_ST document for this instance
					return ProcessSupplierPartyFinancialContactXMLBOD
			else
				return ""

		ProcessSupplierPartyEDITypeXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if(EDINumber entered)
				ProcessSupplierPartyEDITypeXMLBOD = template.IONProcessSupplierPartyMasterEDI_ST document for this instance
				return ProcessSupplierPartyEDITypeXMLBOD
			else
				return ""

		ProcessSupplierPartyVendorXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			ProcessSupplierPartyVendorXMLBOD = template.IONProcessSupplierPartyMasterXML_ST document for this instance

		ProcessSupplierPartyMasterXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			ProcessSupplierPartyMasterXMLBOD = template.IONProcessSupplierPartyMasterMainXML_ST document for this instance

		MobileVendorDisplay is a LabelField
			"<Vendor>_-_<Vendor.VendorName>"

		AffiliateOwnershipRequiredMsg is a MessageField
			"AffiliateOwnershipMustBeDefinedForEachVendorCompanyDefaultWhereAffiliateFlagIsEnabled"

		DerivedRequiredCleanDocId is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "RequiredCleanDocumentID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedConfigFEG is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "IsMultipleFEG"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value


		DerivedTriggBODBasedOnCrossRef is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "TriggerBODBasedOnCrossReference"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		NumberOfSuppliers is a ComputeField
			type is Numeric size 6
			restricted
			(instance count of SupplierRel)

		DerivedAccountNumber is a DerivedField	
            type is Alpha size 3
			if (BankAccountNumberEntered)
				return "Yes"
			else
				return "No"
		DerivedSwiftID is a DerivedField
            type is Alpha size 3
			if (SwiftIDEntered)
				return "Yes"
			else
				return "No"
		DerivedIntermediaryBankAccount	is a DerivedField
			type is Alpha size 3
			if (IntermediaryBankAccountEntered)
				return "Yes"
			else
				return "No"
		DerivedIntermediarySwiftID is a DerivedField
			type is Alpha size 3
			if (IntermediarySwiftIDEntered)
				return "Yes"
			else
				return "No"	
		DerivedGiroNumber	is a DerivedField
			type is Alpha size 3
			if (GiroNumberEntered)
				return "Yes"
			else
				return "No"
		DerivedCreditCardNumber is a DerivedField
			type is Alpha size 3
			if (CreditCardNumberEntered)
				return "Yes"
			else
				return "No"
	Conditions
		DisplayAffiliateOwnershipRequiredMsg
			restricted
			when (VendorCompanyDefaultWithNoAffiliateOwnershipRel exists)

		SingleSupplier
			restricted
			when (NumberOfSuppliers = 1)
		
		MultipleSuppliers
			restricted
			when (NumberOfSuppliers > 1)
		
		SingleSupplierAndContact
			restricted
			when (SingleSupplier
			and   first SupplierRel.SingleContact)
		
		SingleSupplierMultipleContacts
			restricted
			when (SingleSupplier
			and   first SupplierRel.MultipleContact)

		IsValidForCrossBorderPayments
			restricted
			when ((BankEntity entered
				and BankAccountNumber entered)
			or BankEntity entered
			or BankAccountNumber entered)

		IsValidForIntermediaryCrossBorderPayments
			restricted
			when ((IntermediaryBankEntity entered
				and IntermediaryBankAccount entered)
			or IntermediaryBankEntity entered
			or IntermediaryBankAccount entered)

		IsValidForActorContext
			restricted
			when ((actor.context.FinanceEnterpriseGroup != ""

				and BusinessGroupRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)  			
			or   (actor.context.FinanceEnterpriseGroup = ""))

		VendorHoldCodeSearch	
			restricted
			when (PayablesHoldCode !entered
			or	 (PayablesHoldCode entered
			and   PayablesHoldCodeRel exists))

		VendorCanBeInactivated		
			restricted

			when (((VendorBalancesRel exists
			and     LocalVendorBalancesLastModDateRel !exists)
			or      IsNoActivityVendorToInactivate)
			and    !OpenPayablesInvoicesRelExists
			and    !OpenCashLedgerPaymentsRelExists
			and    !OpenPurchaseOrdersRel exists)

		IsNoActivityVendorToInactivate		
			restricted
			when (LocalNoActivityVendor
			and   VendorBalancesRel !exists
			and   CreateDate <= LocalVendorCreateCutoffDate)

		DisplayCreatePurchasingVendorLink		
			restricted
			when (RecordExists
			and  !PurchasingVendorExists)
		
		DisplayCreateMobileSupplyChainVendorLink
			restricted
			when (ShowMobileSupplyChain
			and	  RecordExists
			and   MobileSupplyChainVendorRel not exists)

		HasProcurementCard						
			restricted
			when (ProcurementCardNumber entered)

		PurchasingVendorExists
			restricted
			when (PurchasingVendorRel exists)
		
		MobileSupplyChainVendorExists
			restricted
			when (ShowMobileSupplyChain
			and	  MobileSupplyChainVendorRel exists)
		
		ShowMobileSupplyChain
			restricted
            when (actor.context.FinanceEnterpriseGroup.ShowMobileSupplyChain)

		RecordExists
			restricted
			when (Vendor exists)

		HasSupplier
			restricted
			when (SupplierRel exists)
		
		HasLogo
			restricted
			when (Logo entered)

		BankAccountNumberEntered			
			restricted
			when (BankAccountNumber entered)

		SwiftIDEntered						
			restricted
			when (SwiftID entered)

		IntermediaryBankAccountEntered		
			restricted
			when (IntermediaryBankAccount entered)

		IntermediarySwiftIDEntered			
			restricted
			when (IntermediarySwiftID entered)

		GiroNumberEntered					
			restricted
			when (GiroNumber entered)

		CreditCardNumberEntered				
			restricted
			when (CreditCardNumber entered)

		ShowEnterableContactFields
			restricted
			when (Vendor not exists
			or   (Vendor exists
			and   VendorClass.InterfaceVendor))

		HasPurchaseOrders
			restricted
			when (PurchaseOrdersRel exists)

		HasInvoicesOnHold
			restricted
			when (PayablesInvoicesOnHoldRel exists)

		HasPurchaseOrderReceipts
			restricted
			when (PurchaseOrderReceiptsRel exists)

		PurchaseOrderLinesExist
			restricted
			when (PurchaseOrderLinesRel exists)

		OpenForReceivingPOLinesExist
			restricted
			when (OpenForReceivingPurchaseOrderLinesRel exists)

		RNIPurchaseOrderLinesExist
			restricted
			when (RNIPurchaseOrderLinesRel exists)

		HasCurrentVendorComments
			restricted
			when (CurrentVendorCommentsRel exist)

		VendorBalancesExist
			restricted
			when (AllVendorBalanceMasterRel exists)

		PayablesInvoicesExist
			restricted
			when (PayablesInvoiceRel exists)

		IsActiveVendor
			restricted
			when (not VendorStatus.Inactive)

		VendorAddressesRelExists
			classic name is ADDR-LOC
			restricted
			when (first VendorAddressesRel exists)

		CurrentAddressExists
			classic name is ADDR-VENDOR
			restricted
			when (CurrentAddressRel exists)

		CashLedgerPayablesPaymentRelExists
			classic name is CHECK-EXISTS
			restricted
			when (first CashLedgerPayablesPaymentRel exists)

		VendorLocationCommentsRelExists
			classic name is COMMENT-EXIST
			restricted
			when (first VendorLocationCommentsRel exists)

		VendorDiversityRelExists
			classic name is DIVERSE-EXISTS
			restricted
			when (first VendorDiversityRel exists)





		HasGlobalLocationNumber
			classic name is HAS-GLN-NBR
			restricted
			when (GlobalLocationNumber entered)

		HasURLAddress
			restricted
			when (URLAddress entered)

		HasEmailAddress
			restricted
			when (EmailAddress entered)

		HasTaxID
			restricted
			when (TaxID entered)

		HasPhoneNumber
			restricted
			when (PhoneNumber.SubscriberNumber entered)

		HasLegalName
			restricted
			when (LegalName != VendorName)

		HasVertexConfig			
			restricted
			when (VertexConfigRel exists)

		VendorLocationRelExists
			classic name is LOCATION-EXIST
			restricted
			when (first VendorLocationRel exists)

		PrenotifiedIndicator
			classic name is NO-PRENOTIFY
			restricted
			when (ACHPrenotification.NotPrenotified
			or	ACHPrenotification.Prenotified)

		IsOnHold
			restricted
			when (OnHold)

		IsPoAddActive
			restricted
			when (not VendorStatus.Inactive
			and   not VendorStatus.InactiveForPOAdditions)

		IsPoAddInactive
			classic name is PO-ADD-INACTIV
			restricted
			when (VendorStatus.InactiveForPOAdditions)

		IsStatusRestricted		
			restricted
			when (VendorStatus.Restricted)

		IncomeCodeEntered
			classic name is REP-INC-VENDOR
			restricted
			when (IncomeCode entered)

		IsTaxVendor
			restricted
			when (TaxCode entered
			or	TaxID entered)

		VendorCompanyDefaultRelExists
			classic name is VDRCPY-EXISTS
			restricted
			when (first VendorCompanyDefaultRel exists)

		BypassRuleForTheseFiles
			restricted
			when  (parentcontext.name = "ContractRebateDueInvoiceLine"
				or parentcontext.name = "ContractRebateQualifier"
				or parentcontext.name = "PoInvLineFact"
				or parentcontext.name = "ContractRebateQualifierItem"
				or parentcontext.name = "ContractCompanyVendor"
				or parentcontext.name = "ContractRebateQualifierCode"
				or parentcontext.name = "Vendor"
				or parentcontext.name = "VendorAddress"
				or parentcontext.name = "VendorContact"
				or parentcontext.name = "PayToVendor"
				or parentcontext.name = "CashLedgerPayablesPayment"		
				or parentcontext.name = "CashLedgerTransaction"
				or parentcontext.name = "PayablesInvoiceTotal"
				or parentcontext.name = "GlobalLocationNumberDetail"
				or parentcontext.name = "PurchasingVendor"
				or parentcontext.name = "VendorLocation"
				or parentcontext.name = "PurchaseFromLocation"
				or parentcontext.name = "EscheatmentNoticeIDMHeader" 	
				or parentcontext.name = "EscheatmentNoticeIDMLines"		
				or parentcontext.name = "PurchaseOrderEDIOutput"
				or parentcontext.name = "VendorBalance"
				or parentcontext.name = "VendorCertification"
				or parentcontext.name = "VendorMappingTableInterface"
				or parentcontext.name = "CashRequirementsResult"	
				or parentcontext.name = "CashRequirementsReport"
				or parentcontext.name = "StaleDateOutputFileDetail"
				or parentcontext.name = "EscheatmentOutputFileDetail"
				or parentcontext.name = "PayablesOnHold"
				or parentcontext.name = "PayablesInvoicePayment"
				or parentcontext.name = "Supplier"
				or parentcontext.name = "VendorAndSupplier"
				or parentcontext.name = "AnonymizeVendorData"		
				or parentcontext.name = "PurgeAuditLogVendorData"	
				or parentcontext.name = "VendorStatementHeader"
				or parentcontext.name = "VendorStatementDetail"
				or parentcontext.name = "PayablesHistoryPurge"
				or parentcontext.name = "PayablesInvoiceVoucherRef"
				or parentcontext.name = "VendorDeletion"
				or parentcontext.name = "ItemHistoryByVendorReport"
				or parentcontext.name = "SupplyManagementReport"
				or parentcontext.name = "InvoiceTemplateExclusion"
				or parentcontext.name = "US1099TapeCreation"
				or parentcontext.name = "VendorWithholdingCode"
				or parentcontext.name = "VendorWithholdingDefault"
				or parentcontext.name = "VendorComment"
				or parentcontext.name = "PayablesJobResultDetail"		
				or parentcontext.name = "AssetItemAdjustmentImport"
				or parentcontext.name = "AssetRepairImport"
				or parentcontext.name = "AssetInterface"
				or parentcontext.name = "AssetItem"
				or parentcontext.name = "VendorAttachment"
				or parentcontext.name = "ConsolidatedPaymentCycleUpdate")

		ShowBODIdForm
			restricted
			when (bod id.AccountingEntity entered
			or	  bod id.Location entered
			or	  bod id.DocumentID entered
			or	  bod id.Revision entered
			or	  bod id.SystemOfRecord entered
			or	  bod id.VariationID entered)

		VertexResultsExist
			restricted
			when (VertexTaxAreaIdResultsRel exist
			and  !VertexTaxAreaIdResultsRel.WebServiceError)

		VertexErrorExist
			restricted
			when (VertexWebserviceErrorRel exist)

		NonDiversePayablesInvoicesByVendorRelExists
			restricted
			when (NonDiversePayablesInvoicesByVendorRel exists)

		RelatedProjectContractsExist
			restricted
			when (ProjectContractsRel exists)

		FinanceResourceInContext
			restricted
			when (FinanceResource in context)

		HasVendorAccountRestrictionSetup
			restricted
			when (VendorAccountRestrictionRel exists)

		HasRestrictionsWithJustEntity
			restricted
			when (VendorAccountRestrictionEntityRel exists)

		HasRestrictionsWithJustAccount
			restricted
			when (VendorAccountRestrictionAccountRel exists)

		HasRestrictionsOnAccountingEntity		
			restricted
			when (VendorAccountRestrictionOnEntityRel exists)

		HasRestrictionsOnAccountingUnit		
			restricted
			when (VendorAccountRestrictionOnUnitRel exists)

		HasRestrictionsOnChartAccount		
			restricted
			when (VendorAccountRestrictionOnAccountRel exists)

		InterfacedVendorsExist
			restricted
			when (VendorMappingTableInterfacesRel exists)

		ShowNetBalance
			when (first VendorBalanceMasterRel.BalanceCurrency = CustomerGroup.Currency)

		IsIntercompanyBillingDefaultVendor
			restricted
			when (PayablesCompanyWithICBDefaultRel exists)

		HasCustomer
			restricted
			when (Customer entered)

		IsSelected
			restricted
			when (APToARInterfaceSelectedRecordsRel exists)

		HasCustomerLinked
			restricted
			when (CustomerGroup entered
			and   Customer entered)

		HasVendorBalanceRecord
			when (TotalVendorBalancesRel exists)

		HasCurrencyMatch
			when (CustomerGroup.Currency = all TotalVendorBalancesRel.BalanceCurrency)

		HasCustomerBalance
			restricted
			when (Customer.CurrentReceivableBalance entered)

		HasCurrencyMismatch
			when (HasCustomerBalance
			and   any TotalVendorBalancesRel.BalanceCurrency != CustomerGroup.Currency)

		IsACustomer
			restricted
			when (CustomerRel exists)

		ActionValidateVAT	
			restricted
			when (actor.context.FinanceEnterpriseGroup.TaxConfiguration.ValidateVAT)

		ValidateVAT	
			restricted
			when (VendorGroup.BusinessGroup.FinanceEnterpriseGroup.TaxConfiguration.ValidateVAT)

		VATRegistrationInformationEntered	
			restricted
			when (VATRegistrationCountry entered
			and	  VATRegistrationNumber entered)

		VATRegistrationInformationChanged	
			restricted
			when (VATRegistrationCountry changed
			or	  VATRegistrationNumber changed)

		PerformVATValidation	
			restricted
			when (ValidateVAT
			and	  VATRegistrationInformationEntered)

		DisplayInvalidText	
			restricted
			when (ValidateVAT
			and	  VATValidation.VATNumberValidated
			and	  VATRegistrationInformationEntered
			and	  !VATValidation.VATNumberValid)

		WithinVATDateRange	
			restricted
			when (VATDateRange not entered
			or	 (VATDateRange entered
			and	  VATValidation.ValidationDate within VATDateRange))

		EmployeeEntered
			when (Employee entered)

		AnonymizeLogAnonymizeRelExists
			restricted
			when (first AnonymizeLogAnonymizeRel exists)

		AnonymizeLogPurgeRelExists
			restricted
			when (first AnonymizeLogPurgeRel exists)

		OpenPayablesInvoicesRelExists
			restricted
			when (first OpenPayablesInvoicesRel exists)

		RetrospectiveInvoicesExist
			restricted
			when (RetrospectiveInvoicesRel exists)

		OpenCashLedgerPaymentsRelExists
			restricted
			when (first OpenCashLedgerPaymentsRel exists)

		TaxCertificationExists
			restricted
			when (first SupplierRel.TaxCertificationExists)

		VendorClassSecurityGroupAllowsAccess
			restricted
			when  ((actor.context.VendorClassSecurityGroup = ""
			or      VendorClass !entered   
			or     (actor.context.VendorClassSecurityGroup != ""
			and     VendorClassSecurityGroupDetailRel exists))
			and     VendorGroup.BusinessGroupAllowsAccess)

		HasTransientAttachment
			restricted
			when (TransientAttachment entered)

		VendorHasDebt		
			restricted
			when (any VendorDebt set.BalanceDue > 0)

		VendorBankCode1Entered		
			restricted
			when (first VendorBankRel.VendorBankCode1 entered)

		VendorBankCode2Entered		
			restricted
			when (first VendorBankRel.VendorBankCode2 entered)

		VendorBankCode3Entered		
			restricted
			when (first VendorBankRel.VendorBankCode3 entered)

		VendorBankCode4Entered		
			restricted
			when (first VendorBankRel.VendorBankCode4 entered)

		VendorBankCode5Entered		
			restricted
			when (first VendorBankRel.VendorBankCode5 entered)

		VendorBankCode6Entered		
			restricted
			when (first VendorBankRel.VendorBankCode6 entered)

		VendorBankCode7Entered		
			restricted
			when (first VendorBankRel.VendorBankCode7 entered)

		VendorBankCode8Entered		
			restricted
			when (first VendorBankRel.VendorBankCode8 entered)

		VendorBankCode9Entered		
			restricted
			when (first VendorBankRel.VendorBankCode9 entered)

		VendorBankCode10Entered		
			restricted
			when (first VendorBankRel.VendorBankCode10 entered)

		VendorBankCode11Entered		
			restricted
			when (first VendorBankRel.VendorBankCode11 entered)

		VendorBankCode12Entered		
			restricted
			when (first VendorBankRel.VendorBankCode12 entered)

		VendorBankCode13Entered		
			restricted
			when (first VendorBankRel.VendorBankCode13 entered)

		VendorBankCode14Entered		
			restricted
			when (first VendorBankRel.VendorBankCode14 entered)

		VendorBankCode15Entered		
			restricted
			when (first VendorBankRel.VendorBankCode15 entered)

		VendorBankCode16Entered		
			restricted
			when (first VendorBankRel.VendorBankCode16 entered)

		VendorBankCode17Entered		
			restricted
			when (first VendorBankRel.VendorBankCode17 entered)

		VendorBankCode18Entered		
			restricted
			when (first VendorBankRel.VendorBankCode18 entered)

		VendorBankCode19Entered		
			restricted
			when (first VendorBankRel.VendorBankCode19 entered)

		VendorBankCode20Entered		
			restricted
			when (first VendorBankRel.VendorBankCode20 entered)

		DisplayBankCodes		
			restricted
			when (VendorGroup.VendorBankCodeLabelsEntered
			or    VendorBankRel exists)

		CreateVendorBankRecord		
			restricted
			when (VendorBankRel !exists)

		MaintainVendorBankRecord		
			restricted
			when (VendorBankRel exists)


		BankAccountNumberRequired
			restricted
			when ((BankAccountValidationType entered
				and not BankAccountValidationType.Check)
			or BankAccountType entered
			or BankTransactionCode.PaymentOutputOption.ElectronicFile
			or BankTransactionCode.PaymentOutputOption.Swift
			or BankTransactionCode.PaymentOutputOption.WireTransfer
			or ACHPrenotification = "P"
			or ACHPrenotification = "A")
		BankAccountTypeRequired
			restricted
			when (BankTransactionCode.PaymentOutputOption.ElectronicFile
			or	BankTransactionCode.PaymentOutputOption.Swift
			or  BankTransactionCode.PaymentOutputOption.WireTransfer)
		BankEntityRequired
			restricted
			when (BankAccountValidationType.NationalClearingSystem
			or BankTransactionCode.PaymentOutputOption.ElectronicFile
			or BankTransactionCode.PaymentOutputOption.Swift
			or BankTransactionCode.PaymentOutputOption.WireTransfer)


		EmailAddressRequired
			restricted
			when (VendorClass.InterfaceVendor
			or AutomaticEmailingOfCreditMemo
			or AutomaticEmailingOfDebitMemo)



		IntermediaryBankAccountRequired
			restricted
			when ((IntermediaryBankAccountValidationType entered
				and not IntermediaryBankAccountValidationType.Check)
			or IntermediaryPrenotification = "P"
			or IntermediaryPrenotification = "A")

		IntermediarySwiftIDRequired
			restricted
			when (IntermediaryBankAccountValidationType.BicCode
			or  IntermediaryBankAccountValidationType.IbanAndBIC
			or (IsValidForIntermediaryCrossBorderPayments
				and IntermediaryBankAccountValidationType.IbanAndBIC))


		SwiftIDRequired
			restricted
			when ((IsValidForCrossBorderPayments
				and BankAccountValidationType.IbanAndBIC)
			or BankAccountValidationType.BicCode
			or BankAccountValidationType.IbanAndBIC)
		TaxIDRequired
			restricted
			when (!CheckDigitType.Ignore
			and !CheckDigitType.NoCheckDigit)
		VATRegistrationCountryRequired          
			restricted
			when (VATRegistrationNumber entered)



		HasWithholdingBalances
			restricted
			when (VendorWithholdingBalance set exists) 
			
		ShowInvoicesTab
			restricted
			when (PayablesinvoicesRel exists
			or CustomerRel.ReceivableInvoicesRel exists)
			
		OpenPayablesInvoicesExist
			restricted
			when (PayablesinvoicesRel exists)
			
		ReceivablesInvoicesExist
			restricted
			when (CustomerRel.ReceivableInvoicesRel exists)

		FutureAddressExists                           
			restricted
			when (FutureAddressRel exists)

		HasReference1
			restricted
			when (Reference1 entered)
		
		HasInvoicesOrPayments	
			restricted
			when (PayablesInvoicesExist or CashLedgerPayablesPaymentRelExists)
		
		IsVendorItemActive
			when (VendorItemRel.Active)			
	Relations

		IDMAdditionalAttributesLinesRel
			one-to-many relation to IDMAdditionalAttributesLines
			Field Mapping uses symbolic key
				related.IDMAdditionalAttributesHeader = "FSM_VendorStatement"
			Instance Selection
				where(related.IDMAdditionalAttributesHeader.ActivateAdditionalAttributes
				and	  related.ActivateAdditionalAttributes.Active)


		VendorCommentsRel2 is a VendorComment set

		BusinessGroupRel						
			one-to-one relation to BusinessGroup
			Field Mapping uses symbolic key
				related.BusinessGroup = VendorGroup

		CustomerRel
			one-to-one relation to Customer
			Field Mapping uses symbolic key
				related.CustomerGroup = CustomerGroup
				related.Customer	  = Customer

		SupplierRel
			one-to-many relation to Supplier
			Field Mapping uses ByVendor
				related.SupplierGroup = VendorGroup
				related.Vendor		= Vendor








		VendorClassSecurityGroupDetailRel
			one-to-one relation to VendorClassGroupDetail
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= VendorGroup.FinanceEnterpriseGroup
				related.VendorClassGroup		= actor.context.VendorClassSecurityGroup.FinanceDimensionStructure
				related.VendorGroup             = VendorGroup
				related.VendorClass         	= VendorClass

		MatchReconQueueRel
			one-to-many relation to MatchReconQueue
			Field Mapping uses ByVendor
				related.Vendor		= Vendor

		VendorItemsForItemCostVarianceRel
			one-to-many relation to VendorItem
			Field Mapping uses Set4
				related.ProcurementGroup = SupplyManagementReportContext.ItemGroup
			Instance Selection
				where (related.Vendor = Vendor
				and (related.Item = SupplyManagementReportContext.Item
				or SupplyManagementReportContext.Item not entered))

		VendorHoldCodeRel
			one-to-many relation to PayablesOnHold
			Field Mapping uses Set3
				related.VendorGroup = VendorGroup
			Instance Selection
				where (related.Vendor	  = Vendor)

		PastDueInvoicesByDueDateRel
			one-to-many relation to PayablesInvoiceTotal
			Field Mapping uses symbolic key
				related.VendorGroup = VendorGroup
				related.Vendor		= Vendor
			Instance Selection
				where (related.NumberOfInvoices   > 0
				and   (related.PayablesInvoiceTotal = "1 to 30 Days"
				or	 related.PayablesInvoiceTotal = "31 to 60 Days"
				or	 related.PayablesInvoiceTotal = "Over 60 Days"))

		PayablesInvoicesByDueDateRel
			one-to-many relation to PayablesInvoiceTotal
			Field Mapping uses symbolic key
				related.VendorGroup = VendorGroup
				related.Vendor		= Vendor
			Instance Selection
				where (related.NumberOfInvoices   > 0
				and   (related.PayablesInvoiceTotal = "1 to 7 Days"
				or	 related.PayablesInvoiceTotal = "8 to 14 Days"
				or	 related.PayablesInvoiceTotal = "15 to 21 Days"
				or	 related.PayablesInvoiceTotal = "22 to 28 Days"
				or	 related.PayablesInvoiceTotal = "Over 28 Days"))

		PayablesInvoiceTotalDateRel
			one-to-many relation to PayablesInvoiceTotal
			Field Mapping uses symbolic key
				related.VendorGroup = VendorGroup

		PayablesInvoicesBySourceRel
			one-to-many relation to PayablesInvoice
			Field Mapping uses Set6
			Instance Selection
				where (related.Vendor = Vendor
				and	related.Status != 9)

		VendorCertificationsRel is a VendorCertification set
			Instance Selection
				where (related.VendorLocation not entered)

		ValidatedVendorCertificationsRel
			one-to-many relation using VendorCertificationsRel
			Instance Selection
				where (related.Validated)

		VendorCertificatioinMaximumSpendRel			
			one-to-many relation using VendorCertificationsRel
			Instance Selection
				where (related.MaximumSpendAmount entered)

		VendorDiversityRel is a VendorDiversity set
			classic name is APVENDIV

		VendorDiversityCodesRel is a VendorDiversity set
			Instance Selection
				where (related.VendorLocation not entered)

		VendorDiversityCodeRel
			one-to-many relation to VendorDiversity
			Field Mapping uses ByDateDescending
				related.VendorGroup	= VendorGroup
				related.Vendor		= Vendor
				related.VendorLocation  = blank
				related.DiversityCode	= DiversityCode
			Instance Selection
				where (related.DiversityExpirationDate	>= current corporate date)

		PurchasingVendorRel
			one-to-one relation to PurchasingVendor
			Field Mapping uses symbolic key
				related.VendorGroup	= VendorGroup
				related.Vendor		= Vendor
		
		MobileSupplyChainVendorRel
			one-to-one relation to MobileSupplyChainVendor
			Field Mapping uses symbolic key
				related.VendorGroup = VendorGroup
				related.Vendor      = Vendor

		VendorSearchNamesRel
			one-to-many relation to Vendor
			Field Mapping uses Set5
				related.VendorGroup	 = VendorGroup
				related.VendorSearchName = VendorSearchName
			Instance Selection
				where (related.Vendor	!= Vendor)

		VendorSearchNamesAlternateRel
			one-to-many relation to Vendor
			Field Mapping uses Set5
				related.VendorGroup	 = LocalVendorGroup
				related.VendorSearchName = LocalVendorSearchName
			Instance Selection
				where (related.Vendor	!= Vendor)

		









		LegalNamesRel		
			one-to-many relation to Vendor
			Field Mapping uses ByLegalName
				related.VendorGroup	 	= VendorGroup
				related.LegalName 	 	= LegalName
			Instance Selection
				where (related.Vendor	!= Vendor)
		
		









		LegalNamesAlternateRel		
			one-to-many relation to Vendor
			Field Mapping uses ByLegalName
				related.VendorGroup	 	= LocalVendorGroup
				related.LegalName 		= LocalLegalName
			Instance Selection
				where (related.Vendor	!= Vendor)

		LegacyVendorRel
			one-to-many relation to Vendor
			Field Mapping uses ByLegacyVendor
				related.VendorGroup	 = VendorGroup
				related.LegacyVendor	 = LegacyVendor
			Instance Selection
				where (related.Vendor	!= Vendor)

		DuplicateTaxIDRel
			one-to-many relation to Vendor
			Field Mapping uses ByTaxIdsOnly
				related.TaxID		= TaxID
				related.VendorGroup	= VendorGroup

		VendorProcessGroupRel
			one-to-one relation to PayablesProcessGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= VendorGroup.BusinessGroup.FinanceEnterpriseGroup
				related.PayablesProcessGroup	= PayablesProcessGroup

		OpenChecksRel
			one-to-many relation using CashLedgerPayablesPaymentRel
			delete restricted							
			Instance Selection
				where (related.Status.ScheduledForPayment
				or	 related.Status.PaymentCycleProcessed)

		TaxUsageCodesRel
			one-to-many relation to TaxUsageCode
			Field Mapping uses Set2
				related.TaxUsageCode = TaxUsageCode

		CashPaymentFormatRel
			one-to-one relation to CashPaymentFormat
			Field Mapping uses symbolic key
				related.CashManagementGroup				   = CashCode.CashManagementGroup	
				related.CashCode							   = CashCode
				related.CashPaymentFormat.BankTransactionCode  = BankTransactionCode
				related.CashPaymentFormat.PayablesProcessGroup = PayablesProcessGroup

		ProcessGroupBlankRel
			one-to-one relation to CashPaymentFormat
			Field Mapping uses symbolic key
				related.CashManagementGroup				   = CashCode.CashManagementGroup	
				related.CashCode							   = CashCode
				related.CashPaymentFormat.BankTransactionCode  = BankTransactionCode
				related.CashPaymentFormat.PayablesProcessGroup = blank

		ProcessGroupNoneRel
			one-to-one relation to CashPaymentFormat
			Field Mapping uses symbolic key
				related.CashManagementGroup				   = CashCode.CashManagementGroup	
				related.CashCode							   = CashCode
				related.CashPaymentFormat.BankTransactionCode  = BankTransactionCode
				related.CashPaymentFormat.PayablesProcessGroup = "NONE"













		ContractGroupsRel
			one-to-many relation to ContractGroup
			Field Mapping uses symbolic key















		VendorBalancesRel
			one-to-many relation to VendorBalance
			Field Mapping uses Set3
				related.VendorGroup = VendorGroup
				related.Vendor		= Vendor

		LocalVendorBalancesLastModDateRel		
			one-to-many relation to VendorBalance
			Field Mapping uses Set3
				related.VendorGroup = VendorGroup
				related.Vendor		= Vendor
			Instance Selection

				where (related.DerivedLastModDate >= LocalCutoffDate)

		CompaniesRel
			one-to-many relation to PayablesCompany
			Field Mapping uses Set2
				related.VendorGroup = VendorGroup

		PayablesCompanyWithICBDefaultRel
			one-to-many relation to PayablesCompany
			Field Mapping uses ByICBVendorDefault
				related.VendorGroup				= VendorGroup
				related.ICBillingDefaultVendor	= Vendor

		PurchasingCompanyRel
			one-to-many relation to PurchasingCompany
			Field Mapping uses Set2
				related.ProcurementGroup = VendorGroup

		PurchaseOrdersRel
			one-to-many relation to PurchaseOrder
			Field Mapping uses Set2
				related.Company		= PurchasingCompanyRel.Company
				related.Vendor			= Vendor

		OpenPurchaseOrdersRel		
			one-to-many relation to PurchaseOrder
			Field Mapping uses Set2
				related.Company			= PurchasingCompanyRel.Company
				related.Vendor			= Vendor
			Instance Selection

				where (related.PurchaseOrderLifeCycleState	< 2		
				or     related.PurchaseOrderLifeCycleState	= 5
				or     related.PurchaseOrderLifeCycleState	= 6
				or     related.PurchaseOrderLifeCycleState	= 8
				or     related.PurchaseOrderLifeCycleState	= 9)

		PurchaseOrderLinesRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses ByProcurementGroupVendor
				related.ProcurementGroup	= VendorGroup
				related.Vendor				= Vendor
				related.Closed				= "N"

		OpenForReceivingPurchaseOrderLinesRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses ByProcurementGroupVendor
				related.ProcurementGroup	= VendorGroup
				related.Vendor				= Vendor
				related.Closed				= "N"
			Instance Selection
				where (related.IsOpenForReceiving)

		RNIPurchaseOrderLinesRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses ByProcurementGroupVendor
				related.ProcurementGroup	= VendorGroup
				related.Vendor				= Vendor
				related.Closed				= "N"
			Instance Selection
				where (related.ReceivedNotInvoicedQuantityExists)

		PurchaseOrderReceiptsRel
			one-to-many relation to PurchaseOrderReceipt
			Field Mapping uses ByVendor
				related.Vendor		= Vendor
			Instance Selection
				where (related.Company.ProcurementGroup = VendorGroup)

		UnreleasedPaymentsRel
			one-to-many relation to PayablesInvoicePayment
			Field Mapping uses Set2
				related.PayGroup = CompaniesRel.PayGroup
				related.Status   = 0					
				related.Vendor   = Vendor

















		PayablesInvoicePaymentsByStatusRel
			one-to-many relation to PayablesInvoicePayment
			Field Mapping uses Set10
				related.Status			= LocalStatus
			Instance Selection
				where (related.Vendor	= Vendor
				and	   related.OnHold	= false)





















		ProcurementCardsRel
			one-to-many relation to ProcurementCardRequest
			Field Mapping uses Set2
				related.ProcurementCardNumber = ProcurementCardNumber

		VendorIsPayToVendorRel
			one-to-many relation to PayToVendor
			Field Mapping uses Set2
				related.VendorGroup	= VendorGroup
				related.PayVendor	= Vendor

		VendorPayToVendorRel
			one-to-one relation to PayToVendor
			Field Mapping uses symbolic key
				related.VendorGroup	= VendorGroup
				related.Vendor		= Vendor
				related.PayVendor	= Vendor

		PayVendorPayToVendorRel
			one-to-one relation to PayToVendor
			Field Mapping uses symbolic key
				related.VendorGroup	= VendorGroup
				related.Vendor		= Vendor
				related.PayVendor	= PayVendor

		OldPayToVendorRel
			one-to-one relation to PayToVendor
			Field Mapping uses symbolic key
				related.VendorGroup	= old VendorGroup
				related.Vendor		= old Vendor
				related.PayVendor	= old PayVendor

		OneTimeVendorClassRel
			one-to-one relation to VendorClass
			Field Mapping uses symbolic key
				related.VendorGroup	= VendorGroup
				related.VendorClass = VendorGroup.OneTimeVendorClass








		VendorAddressesRel is a VendorAddress set
			Instance Selection
				where (related.VendorLocation not entered
				and	related.VendorContact.VendorContactCode not entered
				and	related.VendorContact.ContactLevel not entered)

		VendorCommentsRel is a VendorComment set
			Instance Selection
				where (related.VendorLocation not entered)

		CurrentVendorCommentsRel
			one-to-many relation using VendorCommentsRel
			Instance Selection
				where (related.IsCurrentComments)

		VendorAttachmentsRel is a VendorAttachment set
			Instance Selection
				where (related.VendorLocation not entered)

		CurrentAddressRel
			classic name is ADDRESS1
			one-to-one relation to VendorAddress
			Field Mapping uses symbolic key
				related.VendorGroup					 = VendorGroup
				related.Vendor						  = Vendor
				related.VendorLocation				  = blank
				related.VendorContact.VendorContactCode = blank
				related.VendorContact.ContactLevel	  = blank

		FutureAddressRel
			classic name is ADDRESS1
			one-to-many relation to VendorAddress
			Field Mapping uses symbolic key
				related.VendorGroup					 = VendorGroup
				related.Vendor						  = Vendor
			Instance Selection
				where (related.has future changes)

		PayablesInvoiceHistoryRel
			classic name is APAPIHIST
			one-to-many relation to PayablesInvoiceHistory
			Field Mapping uses Set5
			Instance Selection
				where (related.Vendor					= Vendor
				and related.Company.VendorGroup		= VendorGroup )














		VendorCommentsSet2Rel
			classic name is APCOMMENTS
			one-to-many relation to Apcomments
			delete cascades
			Field Mapping uses Set2
				related.VendorCommentType = "V"
				related.VendorGroup	   = VendorGroup
				related.Vendor			= Vendor

		VendorContactRel is a VendorContact set
			classic name is APCONTACTS
			Instance Selection
				where (related.VendorLocation not entered)

		VendorCompanyDefaultRel is a VendorCompanyDefault set
			classic name is APCPYVND
			Instance Selection
				where (related.VendorLocation not entered)

		VendorCompanyDefaultWithNoAffiliateOwnershipRel is a VendorCompanyDefault set
			Instance Selection
				where (related.Company.ClaimsAndLiabilitiesReporting
				and   related.IsForeignVendor
				and   related.Affiliate
				and   related.AffiliateOwnership not entered)

		VendorBankRel		
			one-to-many relation to VendorBank
			Field Mapping uses symbolic key
				related.VendorGroup			= VendorGroup
				related.Vendor				= Vendor
				related.VendorLocation		= blank

		PayablesOnHoldRel
			classic name is APHLDINV
			one-to-many relation to PayablesOnHold
			valid when (IsOnHold)
			delete cascades
			Field Mapping uses Set5
				related.HoldRecordType = "V"
				related.VendorGroup	= VendorGroup
				related.Company		= blank
				related.Vendor		 = Vendor

		PayablesHoldCodeRel 
			classic name is APHLDINV
			one-to-many relation to PayablesOnHold
			valid when (IsOnHold)
			delete cascades
			Field Mapping uses Set5
				related.HoldRecordType = "V"
				related.VendorGroup	= VendorGroup
				related.Company		= blank
				related.Vendor		 = Vendor
			Instance Selection
				where (related.HoldCode = PayablesHoldCode)

		PayablesInvoicesOnHoldRel
			one-to-many relation to PayablesOnHold
			Field Mapping uses ByVendor
				related.Vendor		 = Vendor
			Instance Selection
				where (related.VendorGroup = VendorGroup)

		PayablesInvoiceRel
			classic name is APINVOICE
			one-to-many relation to PayablesInvoice
			Field Mapping uses ByVendorGroupVendor
				related.VendorGroup			= VendorGroup
				related.Vendor					= Vendor


		VendorLocationCommentsRel
			classic name is APVCOMMENTS
			one-to-many relation to Apcomments
			Field Mapping uses Set2
				related.VendorCommentType = "V"
				related.VendorGroup	   = VendorGroup
				related.Vendor			= Vendor
				related.VendorLocation	= blank

		VendorBalanceMasterRel is a VendorBalance set
			classic name is APVENBALMASTER
			Instance Selection
				where (related.VendorLocation not entered)
		AllVendorBalanceMasterRel is a VendorBalance set

		VendorCertificationRel is a VendorCertification set
			classic name is APVENCERT

		VendorLocationRel is a VendorLocation set
			classic name is APVENLOC
			
		VendorAddressPurgeRel is a VendorAddress set

		NormalRemitToLocationRel is a VendorLocation set
			Instance Selection
				where (related.NormalRemitToLocation
				and	related.Status.Active)				

		NormalPurchaseFromLocationRel is a VendorLocation set
			Instance Selection
				where (related.NormalPurchaseFromLocation
				and	related.Status.Active)				

		PayToVendorRel
			classic name is APVENPAY
			one-to-many relation to PayToVendor
			Field Mapping uses symbolic key
				related.VendorGroup = VendorGroup
				related.Vendor	  = Vendor

		CashLedgerPayablesPaymentRel
			classic name is CBCHECK
			one-to-many relation to CashLedgerPayablesPayment
			Field Mapping uses Set8
				related.CashManagementGroup	= VendorGroup.BusinessGroup.FinanceEnterpriseGroup
				related.VendorGroup			= VendorGroup
				related.PaidVendor			= Vendor

		MatchRuleRel
			classic name is MAMTCHRULE
			one-to-one relation to MatchRule
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= VendorGroup.BusinessGroup.FinanceEnterpriseGroup
				related.MatchRule				= RuleGroup

		GlobalLocationNumberRel
			classic name is GLNLOC
			one-to-one relation to GlobalLocationNumber
			valid when (HasGlobalLocationNumber)
			Field Mapping uses symbolic key
				related.ItemGroup			= VendorGroup
				related.GlobalLocationNumber = GlobalLocationNumber

		PrimeVendorContactRel
			one-to-one relation to VendorContact
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroup
				related.Vendor							= Vendor
				related.VendorLocation					= blank
				related.VendorContact.VendorContactCode	= "PRIME"
				related.VendorContact.ContactLevel		= blank

		VendorContactForIDMEmailCreditMemoRel
			one-to-many relation to VendorContact
			Field Mapping uses Set4
				related.VendorGroup						= VendorGroup
				related.Vendor							= Vendor
			Instance Selection
				where (related.EmailCreditMemo
				and    related.EmailAddress entered
				and    not related.IsPrimaryContact)

		VendorContactForIDMEmailDebitMemoRel
			one-to-many relation to VendorContact
			Field Mapping uses Set4
				related.VendorGroup						= VendorGroup
				related.Vendor							= Vendor
			Instance Selection
				where (related.EmailDebitMemo
				and    related.EmailAddress entered
				and    not related.IsPrimaryContact)

		VendorContactForIDMEmailRemittanceRel
			one-to-many relation to VendorContact
			Field Mapping uses Set4
				related.VendorGroup						= VendorGroup
				related.Vendor							= Vendor
			Instance Selection
				where (related.EmailRemittanceAdvice
				and    related.EmailAddress entered
				and    not related.IsPrimaryContact)

		VendorContactForIDMEmailChecksRel
			one-to-many relation to VendorContact
			Field Mapping uses Set4
				related.VendorGroup						= VendorGroup
				related.Vendor							= Vendor
			Instance Selection
				where (related.EmailPaymentCheck
				and    related.EmailAddress entered
				and    not related.IsPrimaryContact)

		PayGroupRel
			one-to-one relation to PayGroup
			Field Mapping uses symbolic key
				related.VendorGroup	= VendorGroup
				related.PayGroup	= VendorGroup

		VendorAndSupplierRel
			one-to-many relation to VendorAndSupplier
			delete cascades
			Field Mapping uses ByVendor
				related.VendorGroup	= VendorGroup
				related.Vendor		= Vendor

		MerchantCrossReferenceRel
			one-to-many relation to MerchantCrossReference
			Field Mapping uses ByVendorAndLocation
				related.ProcurementGroup	= VendorGroup
				related.Vendor				= Vendor
				related.VendorLocation		= blank

		VertexConfigRel
			one-to-one relation to VertexConfig
			Field Mapping uses symbolic key
				related.VertexConfig = VendorGroup.FinanceEnterpriseGroup

		VertexWebserviceErrorRel
			one-to-many relation to VertexTaxAreaIdResults
			Field Mapping uses ByRelatedObjectReference
				related.VertexConfig = VendorGroup.FinanceEnterpriseGroup
			Instance Selection
				where (related.RelatedObjectReference	= reference to this instance
				and	related.WebServiceError				= true)

		VertexTaxAreaIdResultsRel
			one-to-many relation to VertexTaxAreaIdResults
			Field Mapping uses ByRelatedObjectReference
				related.VertexConfig = VendorGroup.FinanceEnterpriseGroup
			Instance Selection
				where (related.RelatedObjectReference = reference to this instance)

		UpdatePostalAddressRecordsRel
			one-to-many relation to VertexTaxAreaIdPostalAddress
			Field Mapping uses ByTaxAreaId
				related.VertexConfig										= VendorGroup.FinanceEnterpriseGroup
				related.VertexTaxAreaIdPostalAddress.LookupKey			= LocalLookupKey
			Instance Selection
				where  (related.VertexTaxAreaIdPostalAddress.ResponseBusclassKey	= LocalResponseBusclassKey)

		SelectedTaxAreaIdRecordsRel
			one-to-many relation to VertexTaxAreaIdResults
			Field Mapping uses ByRelatedObjectReference
				related.VertexConfig									= VendorGroup.FinanceEnterpriseGroup
				related.RelatedObjectReference							= reference to this instance
			Instance Selection
				where  (related.Selected								= true)

		SelectedPostalAddressRecordsRel
			one-to-many relation to VertexTaxAreaIdPostalAddress
			Field Mapping uses  ByTaxAreaId
				related.VertexConfig										= VendorGroup.FinanceEnterpriseGroup
				related.VertexTaxAreaIdPostalAddress.LookupKey			= LocalLookupKey
				related.VertexTaxAreaIdPostalAddress.ResponseBusclassKey	= LocalResponseBusclassKey
			Instance Selection
				where (related.Selected								= true)

		VertexLookupResultsRel
			one-to-many relation to VertexLookupResults
			Field Mapping uses ByRelatedObjectReference
				related.VertexConfig									= VendorGroup.FinanceEnterpriseGroup
			Instance Selection
				where (related.RelatedObjectReference					= reference to this instance)

		VendorMappingTableInterfacesRel is a VendorMappingTableInterface set

		VendorWithholdingCodesRel
			one-to-many relation to VendorWithholdingCode
			Field Mapping uses symbolic key
				related.VendorGroup							= VendorGroup
				related.Vendor								= Vendor


		NonDiversePayablesInvoicesByVendorRel
			one-to-many relation to PayablesInvoice
			Field Mapping uses ByVendorGroupVendor
				related.VendorGroup = VendorGroup
				related.Vendor	= Vendor
			Instance Selection
				where	(related.DiversityCode = blank
				and		(related.InvoiceDate >= SupplyManagementReportContext.FromDate
				and		 related.InvoiceDate <= SupplyManagementReportContext.ThruDate))

		ProjectVendorContractsRel
			one-to-many relation to ProjectVendorContract
			Field Mapping uses ByVendorContract
				related.FinanceEnterpriseGroup	= VendorGroup.BusinessGroup.FinanceEnterpriseGroup
				related.ContractGroup		   = VendorGroup
				related.Vendor					= Vendor

		ProjectContractsRel
			one-to-many relation to ProjectContract
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= first ProjectVendorContractsRel.FinanceEnterpriseGroup
			Instance Selection
				where (related.ProjectContract.Project = any ProjectVendorContractsRel.Project.AncestorContract)

		VendorAccountRestrictionRel is a VendorAccountRestriction set

		VendorAccountRestrictionEntityRel is a VendorAccountRestriction set
			Instance Selection
				where (related.HasEntityOnly
				or	   related.HasEntityUnit)

		VendorAccountRestrictionAccountRel is a VendorAccountRestriction set
			Instance Selection
				where (related.HasAccountOnly)

		VendorAccountRestrictionOnEntityRel is a VendorAccountRestriction set		
			Instance Selection
				where (related.AccountingEntityEntered)

		VendorAccountRestrictionOnUnitRel is a VendorAccountRestriction set		
			Instance Selection
				where (related.AccountingUnitEntered)

		VendorAccountRestrictionOnAccountRel is a VendorAccountRestriction set		
			Instance Selection
				where (related.GeneralLedgerChartAccountEntered)

		APToARAvailableInvoicesRel
			one-to-many relation to PayablesInvoice
			Field Mapping uses ByVendorGroupVendor
				related.VendorGroup								= VendorGroup
				related.Vendor										= Vendor
			Instance Selection



				where (related.IsEligibleForARInterface
				and   !related.IsSelectedForAR
				and	related.Company.CustomerCreateAndInterfaceToAR
				and	related.IsCreditOrDebitNotApplied)

		APToARSelectedInvoicesRel
			one-to-many relation to PayablesInvoice
			Field Mapping uses ByVendorGroupVendor
				related.VendorGroup								= VendorGroup
				related.Vendor										= Vendor
			Instance Selection



				where (related.IsEligibleForARInterface
				and	related.Company.CustomerCreateAndInterfaceToAR
				and	related.IsCreditOrDebitNotApplied)

		PayablesinvoicesRel
			one-to-many relation to PayablesInvoice
			Field Mapping uses symbolic key
			Instance Selection
				where (related.VendorGroup	= VendorGroup
				and	   related.Vendor		= Vendor
				and	   related.IsOpenInvoice
				and	   related.IsCreditOrDebitNotApplied
				and	   !related.IsSelectedForAR)

		RetrospectiveInvoicesRel
			one-to-many relation to PayablesInvoice
			Field Mapping uses ByVendorGroupVendor
				related.VendorGroup			= VendorGroup
				related.Vendor				= Vendor
			Instance Selection
				where (related.IsOpenInvoice
				and	   related.IsCreditOrDebitNotApplied
				and	   !related.IsSelectedForAR

				and    related.RetrospectiveOpenInvoices)	

		APToARInterfaceSelectedRel
			one-to-many relation to APToARSelect
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Company									= LocalCompany
				and	   related.PayablesInvoice.Vendor					= Vendor)

		APToARInterfaceSelectedAmountsRel
			one-to-many relation to APToARSelect
			Field Mapping uses symbolic key
			Instance Selection
				where (related.PayablesInvoice.Vendor					= Vendor)

		APToARInterfaceSelectedRecordsRel
			one-to-many relation to APToARSelect
			Field Mapping uses symbolic key
			Instance Selection
				where (related.PayablesInvoice.Vendor					= Vendor)

		ActivePayablesProcessingMonitorRel
			one-to-many relation to PayablesProcessingMonitor
			Field Mapping uses symbolic key
			Instance Selection
				where (related.PayablesProcessingMonitor.PayGroup		= VendorGroup
				and	related.PayablesProcessingMonitor.RunProgram		= LocalRunProgram
				and	related.Status.RunningOrWaitingRecovery)

		OtherAPToARInterfaceRecordRel
			one-to-many relation to APToARSelect
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Company									!= LocalCompany
				and	related.PayablesInvoice.Vendor					= Vendor)

		CompanyCustomerRel
			one-to-one relation to CompanyCustomer
			Field Mapping uses symbolic key
				related.Company											= LocalCompany
				related.Customer										= Customer

		VendorBalanceRel
			one-to-one relation to VendorBalance
			Field Mapping uses symbolic key
				related.VendorGroup										= VendorGroup
				related.Vendor											= Vendor
				related.VendorLocation									= LocalVendorBalanceLocation
				related.Company										= LocalCompany

		TotalVendorBalancesRel
			one-to-many relation to VendorBalance
			Field Mapping uses symbolic key
				related.VendorGroup	= VendorGroup
				related.Vendor			= Vendor

		ISOCountryNumberRel
			one-to-many relation to Country
			Field Mapping uses symbolic key
			Instance Selection
				where (related.IsoCountryNumber							= ISOCountryNumber)

		CountriesWithISONumberRel
			one-to-many relation to Country
			Field Mapping uses symbolic key
			Instance Selection
				where (related.IsoCountryNumber	entered)

		TotalCustomerBalancesRel
			one-to-many relation to CompanyCustomer
			Field Mapping uses Set3
				related.Customer		= Customer

		APToARInterfaceSelectedForCreditsRel
			one-to-many relation to APToARSelect
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Company									= LocalCompany
				and	   related.PayablesInvoice.Vendor					= Vendor
				and	   related.PayablesInvoice.IsInvoiceAvailableForCreditApplication)

		APToARInterfaceSelectedForDebitsRel
			one-to-many relation to APToARSelect
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Company									= LocalCompany
				and	   related.PayablesInvoice.Vendor					= Vendor
				and	   related.PayablesInvoice.IsCreditAvailableForInvoiceApplication)

		OpenPayablesInvoicesRel
			one-to-many relation to PayablesInvoice
			Field Mapping uses ByVendorGroupVendor
				related.VendorGroup			 = VendorGroup
				related.Vendor				  = Vendor
			Instance Selection
				where (related.IsOpenInvoice)

		OpenCashLedgerPaymentsRel
			one-to-many relation to CashLedgerPayment
			Field Mapping uses Set4
				related.CashManagementGroup		= VendorGroup.FinanceEnterpriseGroup
			Instance Selection
				where (related.PayablesData.PayablesCompany.VendorGroup	= VendorGroup
				and	related.PayablesData.Vendor						= Vendor
				and	related.IsOpenCashLedgerPayment)

		AnonymizeLogAnonymizeRel
			one-to-many relation to AnonymizeLog
			Field Mapping uses ByVendor
				related.FinanceEnterpriseGroup	= VendorGroup.FinanceEnterpriseGroup
				related.VendorGroup				= VendorGroup
				related.Vendor					= Vendor
			Instance Selection
				where (related.Status.Anonymized)

		AnonymizeLogPurgeRel
			one-to-many relation to AnonymizeLog
			Field Mapping uses ByVendor
				related.FinanceEnterpriseGroup	= VendorGroup.FinanceEnterpriseGroup
				related.VendorGroup				= VendorGroup
				related.Vendor					= Vendor
			Instance Selection
				where (related.Status.AuditLogPurged)

		TaxIdentificationTypeRel
			one-to-one relation to TaxIdentificationType
			Field Mapping uses symbolic key
				related.TaxIdentificationType   = TaxIDType

		VendorStatementHeaderRel
			one-to-many relation to VendorStatementHeader
			Field Mapping uses symbolic key
				related.VendorGroup							= VendorGroup
				related.Vendor								= Vendor

		InvoiceTemplateExclusionRel
			one-to-many relation to InvoiceTemplateExclusion
			Field Mapping uses Set1
				related.VendorGroup							= VendorGroup
				related.VendorClass							= blank
				related.Vendor								= Vendor

		LocalInvoiceTemplateExclusionRel
			one-to-one relation to InvoiceTemplateExclusion
			Field Mapping uses Set1
				related.VendorGroup							= VendorGroup
				related.VendorClass							= blank
				related.Vendor								= Vendor
				related.Template							= LocalInvoiceTemplate

		FSMBODConfigurationParameterRel
    		one-to-one relation to FSMBODConfigurationParameter
    		Field Mapping uses symbolic key
    			related.FSMBODConfigurationParameter	= LocalConfigurationParameter

		FSMBODConfigurationRel
			one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
				related.FSMBODConfiguration.Verb		= 1
				related.FSMBODConfiguration.Noun		= "SupplierPartyMaster"
				related.FSMBODConfiguration.Direction	= 1

	    FSMProcessSupplierBODConfigRel
			one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
				related.FSMBODConfiguration.Verb		= 2
				related.FSMBODConfiguration.Noun		= "SupplierPartyMaster"
				related.FSMBODConfiguration.Direction	= 1

		FSMBODCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
				related.FSMBODCrossReference.SourceField		= "SourceBusinessGroup"
				related.FSMBODCrossReference.DestinationField	= "DestinationAccountingEntity"
			Instance Selection
				where (related.SourceValue	= VendorGroup)
				
		FSMInboundBODTrackerRel
            one-to-one relation to FSMInboundBODTracker
            Field Mapping uses symbolic key
                related.FSMInboundBODTracker	= LocalFSMInboundBODTracker
                
        FSMCleanDocIDGLCCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
				related.FSMBODCrossReference.SourceField 		= "CSFGLC"
				related.FSMBODCrossReference.DestinationField 	= "DESTAE"
				
		FSMCleanDocIDGeneralLedgerCompanyRel
            one-to-one relation to GeneralLedgerCompany
            required
            Field Mapping uses symbolic key
                related.Company = LocalBODCompany



	 	FSMBODConfigurationAPRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "ContactMaster"
            	related.FSMBODConfiguration.Direction 	= 1


		VendorWithholdingDefaultRel
			one-to-many relation to VendorWithholdingDefault
			Field Mapping uses symbolic key
				related.VendorGroup								= VendorGroup
				related.Vendor									= Vendor
			Instance Selection
				where (related.VendorLocation not entered)

		PayablesCompanyIDMRel
			one-to-one relation to PayablesCompany
			Field Mapping uses symbolic key
				related.Company									= TransientPayablesCompany

		ReceivableInvoiceRel
			one-to-one relation to ReceivableInvoice
			Field Mapping uses symbolic key
				related.Company				 				 = LocalCompany
				related.ReceivableInvoiceType			     = LocalTransactionType
				related.ReceivableInvoice	 				 = LocalInvoice

		GeneralLedgerCompanyRel
			one-to-many relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
            Instance Selection
                where (related.BusinessGroup = VendorGroup)

	   	FSMBODCleanDocCrossReferenceRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "CSFGLC"
            	related.FSMBODCrossReference.DestinationField 	= "DESTAE"
			Instance Selection
				where (related.SourceValue	= LocalCompanyCrossReference)

		FSMBODIntegratingCrossReferenceRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "CSF"
            	related.FSMBODCrossReference.DestinationField 	= DerivedIntegratingApplication
			Instance Selection
				where (related.SourceValue	= VendorGroup)

		PayablesInvoiceExistsRel
			one-to-many relation to PayablesInvoice
			Field Mapping uses ByVendor
				related.Vendor				= Vendor
			Instance Selection
				where ((related.InvoiceDate > LocalCutOffDate
				or     related.Status != 9)
				or     (related.IncomeCode entered
				and    related.InvoiceDate year = LocalCurrentDate year))
				
		PayablesInvoicePaymentRel
			one-to-many relation to PayablesInvoicePayment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Vendor		= Vendor
				and	  (related.Status		<= 8
				or     related.CheckDate	> LocalCutOffDate))
				
		PayablesInvoiceDistributionRel
			one-to-many relation to PayablesInvoiceDistribution
			Field Mapping uses Set7
				related.Vendor			= Vendor
			Instance Selection 
				where (related.Status != 9
				or     related.DistributionDate > LocalCutOffDate)
				
		PayablesInvoiceHistoryExistsRel
			one-to-many relation to PayablesInvoiceHistory
			Field Mapping uses Set5
				related.Vendor			= Vendor
			Instance Selection
				where (related.InvoiceDate > LocalCutOffDate
				or    (related.IncomeCode entered
				and    related.InvoiceDate year = LocalCurrentDate year))
				
		PayablesInvoicePaymentHistoryRel
			one-to-many relation to PayablesInvoicePaymentHistory
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Vendor		= Vendor
				and	   related.CheckDate	> LocalCutOffDate)
				
		PayablesInvoiceDistributionHistoryRel		
			one-to-many relation to PayablesInvoiceDistributionHistory
			Field Mapping uses symbolic key
			Instance Selection
				where	(related.Vendor				= Vendor
				and		related.DistributionDate	> LocalCutOffDate)
				
		PurchaseOrdersExistsRel
			one-to-many relation to PurchaseOrder
			Field Mapping uses ByVendorBeforeCompany
				related.Vendor			= Vendor
		
		ContractRel
			one-to-many relation to Contract
			Field Mapping uses ByVendor
				related.ContractGroup	= VendorGroup
				related.Vendor			= Vendor
				
		VendorItemRel
			one-to-many relation to VendorItem
			Field Mapping uses Set3
				related.ProcurementGroup	= VendorGroup
				related.Vendor				= Vendor
				
		ItemReplenishmentSourceRel
			one-to-many relation to ItemReplenishmentSource
			Field Mapping uses ByVendorAndItem
				related.Vendor   			= Vendor
				
		VendorPayablesInvoiceHistoryRel
			one-to-many relation to PayablesInvoiceHistory
			Field Mapping uses Set5
				related.Vendor	=	Vendor
				
		VendorCustomerRel
			one-to-one relation to Customer
			Field Mapping uses symbolic key
				related.CustomerGroup	= Vendor.CustomerGroup
				related.Customer		= Vendor.Customer
				
		VendorBalancePurgeRel
			one-to-many relation to VendorBalance
			Field Mapping uses Set1
				related.VendorGroup			= VendorGroup
				related.Company				= LocalCompany
				related.Vendor				= Vendor
				
		VendorCompanyDefaultPurgeRel
			one-to-many relation to VendorCompanyDefault
			Field Mapping uses symbolic key
			Instance Selection
				where (related.VendorGroup			= VendorGroup
				and    related.Vendor				= Vendor
				and    related.Company				= LocalCompany)		
				
		VendorLocationsRel
			one-to-many relation to VendorLocation
			Field Mapping uses symbolic key
				related.VendorGroup			= VendorGroup
				related.Vendor				= Vendor
				
		VendorDiversityPurgeRel
			one-to-many relation to VendorDiversity
			Field Mapping uses symbolic key
				related.VendorGroup			= VendorGroup
				related.Vendor				= Vendor
		
		VendorContactPurgeRel
			one-to-many relation to VendorContact
			Field Mapping uses Set2
				related.VendorGroup			= VendorGroup
				related.Vendor				= Vendor
				
		PayToVendorPurgeRel
			one-to-many relation to PayToVendor
			Field Mapping uses symbolic key
				related.VendorGroup			= VendorGroup
				related.Vendor				= Vendor
				
		PayablesOnHoldPurgeRel
			one-to-many relation to PayablesOnHold
			Field Mapping uses Set5
				related.HoldRecordType	= "V"
				related.VendorGroup		= VendorGroup
				related.Company			= blank
				related.Vendor			= Vendor
				
		PurchaseFromLocationPurgeRel
			one-to-many relation to PurchaseFromLocation
			Field Mapping uses symbolic key
				related.VendorGroup		= VendorGroup
				related.Vendor			= Vendor
				
		PurchasingVendorPurgeRel
			one-to-many relation to PurchasingVendor
			Field Mapping uses symbolic key
				related.VendorGroup		= VendorGroup
				related.Vendor			= Vendor
				
		CrossReferenceVendorRel
			one-to-many relation to CrossReferenceVendor
			Field Mapping uses symbolic key
				related.VendorGroup		= VendorGroup
				related.Vendor			= Vendor
				
		LocationVendorBalanceRel
			one-to-many relation to VendorBalance
			Field Mapping uses symbolic key
				related.VendorGroup			= VendorGroup
				related.Vendor				= Vendor
				related.VendorLocation		= LocalVendorLocation
			Instance Selection
				where	(related.CurrentBalance entered
				or		 related.CurrentPeriodPurchases.PurchaseAmount entered
				or		 related.CurrentPeriodPayments.PaymentAmount entered)
				
		VendorCompaniesPayablesInvoiceRel
			one-to-many relation to PayablesInvoice 
			Field Mapping uses ByVendor
				related.Vendor			=	Vendor
			Instance Selection
				where  (related.Company	!=	LocalCompany)
				
		VendorCompaniesPayablesInvoiceHistoryRel
			one-to-many relation to PayablesInvoiceHistory
			Field Mapping uses symbolic key
			Instance Selection
				where  (related.Vendor	=	Vendor
				and		related.Company	!=	LocalCompany)

		VendorPaymentSpendRel				
			one-to-many relation to PayablesInvoicePayment
			Field Mapping uses ByCheckDateCompanyVendor
				related.InvoiceCurrency = LocalPayablesJobResult.ParametersVendorPaymentReportResult.InvoiceCurrency
			Instance Selection
				where ((LocalPayablesJobResult.ParametersVendorPaymentReportResult.Company					not entered
				or     (LocalPayablesJobResult.ParametersVendorPaymentReportResult.Company					entered
				and		related.Company									= LocalPayablesJobResult.ParametersVendorPaymentReportResult.Company))
				and	   (LocalPayablesJobResult.ParametersVendorPaymentReportResult.ProcessLevel			not entered
				or     (LocalPayablesJobResult.ParametersVendorPaymentReportResult.ProcessLevel			entered
				and		related.ProcessLevel							= LocalPayablesJobResult.ParametersVendorPaymentReportResult.ProcessLevel))
				and	   (LocalPayablesJobResult.ParametersVendorPaymentReportResult.IncomeCode				not entered
				or     (LocalPayablesJobResult.ParametersVendorPaymentReportResult.IncomeCode				entered
				and		related.IncomeCode								= LocalPayablesJobResult.ParametersVendorPaymentReportResult.IncomeCode))
				and		related.Vendor									= Vendor
				and		related.InvoiceCurrency							= LocalPayablesJobResult.ParametersVendorPaymentReportResult.InvoiceCurrency
				and     related.Company.VendorGroup 					= VendorGroup
				and		related.CheckDate								within LocalPayablesJobResult.ParametersVendorPaymentReportResult.PaymentDateRange
				and		!related.IsVoidPayment)

		VendorContractSpendRel				
			one-to-many relation to Contract
			Field Mapping uses ByVendor
				related.ContractGroup	= VendorGroup
				related.Vendor			= Vendor
			Instance Selection	
				where (related.EffectiveDate within LocalPayablesJobResult.ParametersVendorPaymentReportResult.PaymentDateRange
				and	   related.CurrencyCode	 = LocalPayablesJobResult.ParametersVendorPaymentReportResult.InvoiceCurrency
				and	   related.ActiveWithMaximumAmount)
		
		VendorTemplateRel		
			one-to-many relation to VendorTemplate
			Field Mapping uses symbolic key
				related.VendorGroup 		= VendorGroup
			Instance Selection
				where (related.DefaultTemplate)

	Sets
		Set10
			indexed
			Sort Order
				VendorGroup
				CreatePOD
				Vendor

		Set2
			indexed
			Sort Order
				VendorGroup
				VendorClass
				Vendor

		Set3
			indexed
			Sort Order
				VendorGroup
				UserName01
				VendorSearchName
				Vendor

		Set4
			indexed
			Sort Order
				VendorGroup
				VendorClass
				VendorSearchName
				Vendor

		Set5
			indexed
			Sort Order
				VendorGroup
				VendorSearchName
				Vendor

		Set6
			indexed
			Sort Order
				PayablesProcessGroup
				VendorGroup
				Vendor

		Set7
			indexed
			Sort Order
				VendorGroup
				EDINumber
				Vendor

		Set8
			indexed
			Instance Selection
				where (PrenotifiedIndicator)
			Sort Order
				VendorGroup
				Vendor








		ByTaxIds
			duplicates
			Sort Order
				TaxIDType
				TaxID
				VendorGroup
				Vendor

		ByTaxIdsOnly
			duplicates
			Sort Order
				TaxID
				VendorGroup
				Vendor

		ByVATTax
			Sort Order
				VATRegistrationCountry
				VATRegistrationNumber
				VendorGroup
				Vendor

		ByGlobalLocationNumber
			Sort Order
				GlobalLocationNumber
				VendorGroup
				Vendor

		ByVendorName
			Sort Order
				VendorGroup
				VendorName
				Vendor

		ByLegacyVendor
			Sort Order
				VendorGroup
				LegacyVendor
				Vendor

		ByVendorConversionResult
			Sort Order
				VendorConversionResult
				VendorGroup
				Vendor

		ByEmployee
			Sort Order
				VendorGroup
				Employee
				Vendor

		ByOIGExclusionStatus		
			Sort Order
				VendorGroup
				OIGExclusionStatus
				Vendor

		ByLegalName			
			indexed
			Sort Order
				VendorGroup
				LegalName
				Vendor


	Field Groups
		ProcessFlowFields

			EDINumber

			VendorName
			ContactName








			TermsCode

			BankTransactionCode
			PayablesProcessGroup
			InvoiceCurrency
			VendorClass


	Apply Pending Effective Rules
		if (!action type.Delete)
			ActionCode = ActionCode.Update
			if (action type.Create)
				ActionCode = ActionCode.Create
			increment bod id.VariationID
			LocalSupplierTrigger	= false
			if (!BypassSupplierBODTrigger)		
				LocalTrigger = false
				LocalFutureTrigger = false
				if(CurrentAddressRel.PostalAddress.ShowMoreAddressLines and ActionCode = "C")
					LocalFutureTrigger = true
					LocalFutureShowLines = true
				else
				if(ActionCode = "U" and LocalFutureShowLines)
					LocalFutureTrigger = false
				else
					LocalFutureTrigger = true
				if(LocalFutureTrigger)
					LocalFutureVendorAddressTrigger = true
					invoke TriggerSupplierPartyMaster VendorGroup
						invoked.PrmVendor		= Vendor
						invoked.ActionCode		= ActionCode








						
			if (action type.Create and VendorGroup.FinanceEnterpriseGroup.BODTrigger)
				invoke TriggerContactMaster VendorContactRel
					invoked.PrmActionCode = "C"




	Audit Entry Rules
		if(not audit period.Future)
			if (!action type.Delete)
				if (!BypassSupplierBODTrigger)		
					LocalTrigger = false
					if(CurrentAddressRel.PostalAddress.ShowMoreAddressLines and ActionCode = "C")
						LocalTrigger = true
						LocalShowLines = true
					else
					if(ActionCode = "U" and LocalShowLines)
						LocalTrigger = false
					else
						LocalTrigger = true
					if(LocalTrigger and !LocalFutureTrigger)
						LocalVendorAddressTrigger = true
						invoke TriggerSupplierPartyMaster VendorGroup
							invoked.PrmVendor		= Vendor
							invoked.ActionCode		= ActionCode







				if (action type.Create and VendorGroup.FinanceEnterpriseGroup.BODTrigger)
					invoke TriggerContactMaster VendorContactRel
						invoked.PrmActionCode = "C"





	Action Exit Rules
		if (VendorGroup.FinanceEnterpriseGroup.BODTrigger
		and !BypassBODActionExitRules and !LocalBODTrigger)
			if (!action type.Delete)
				if (action != "UpdateBODIdFields") 
					ActionCode = ActionCode.Update
					if (action type.Create
					or  InvokeBODForVendorImport)
						ActionCode = ActionCode.Create
				
					increment bod id.VariationID
					LocalTriggerFrom = "Vendor"

					if (VendorClass.InterfaceVendor
					and VendorStatus.Active)
						invoke InitiatePayablesProcess VendorGroup
							invoked.PayablesService = PayablesService.EAMSupplier
							invoked.Criterion1		= VendorGroup
							invoked.Criterion2		= VendorClass
							invoked.Criterion3		= Vendor
							invoked.PrmVendor		= Vendor
							invoked.ActionCode		= ActionCode
							invoked.ResumeOnError	= true







					if (BankEntity changed
					and BankEntity.PostalAddress entered)
						invoke InitiateCashLedgerProcess CashCode
							invoked.CashLedgerService = CashLedgerService.GenCBBankEnt
							invoked.Criterion1		= BankEntity
							invoked.ActionCode		= ActionCode
							invoked.ResumeOnError	= true
					if (IntermediaryBankEntity changed
					and IntermediaryBankEntity.PostalAddress entered)
						invoke InitiateCashLedgerProcess CashCode
							invoked.CashLedgerService = CashLedgerService.GenCBBankEnt
							invoked.Criterion1		= IntermediaryBankEntity
							invoked.ActionCode		= ActionCode
							invoked.ResumeOnError	= true





	Field Rules
		Sepa
			force default to CashCode.Sepa

		VendorClass
			required

		VendorName
			required

		VendorStatus
			initial value is "A"
			default to "A"

			if (VendorStatus changed		
			and VendorStatus.Inactive
			and VendorConversionResult.Status != 2)
				for each VendorLocationRel
					invoke FastUpdate each
						invoked.Status = "I"

			if (VendorStatus changed		
			and VendorStatus.InactiveForPOAdditions
			and VendorConversionResult.Status != 2)
				for each VendorLocationRel
					invoke FastUpdate each
						invoked.Status = "D"

		Vendor




			if (ValidateCertificationDate)
				constraint (VendorCertification set exists)
					"CannotValidateCertification;NoCertificationCodeAssignedToVendor<Vendor>"			 

				constraint (ValidatedVendorCertificationsRel exist)
					"CannotValidateCertification;MustHaveAtLeastOneValidatedCertifcationCode"	

			if (ValidateCertificationAmount)		
				constraint (VendorCertificatioinMaximumSpendRel exist)
					"CannotValidateCerificationAmount;NoCertificationWithMaximumSpendAssignedToVendor<Vendor>"

		VendorSearchName
			default to VendorName
			if (action type.Create				
			or  VendorSearchName changed)		
				if (VendorSearchNamesRel exists)
					confirmation required
						"Warning,SearchNameAlreadyExistsForVendor<first VendorSearchNamesRel.Vendor>-<first VendorSearchNamesRel.VendorName>;Proceed?"	




		DiversityCode
			if (ValidateDiversityDates)		
				constraint (VendorDiversityCodeRel exists)
					"DiversityCode<DiversityCode>IsNotValidForVendor<VendorName>"

		LegalName
			default to VendorName
			if (action type.Create			
			or  LegalName changed)			
				if (LegalNamesRel exists)
					confirmation required
						"Warning,LegalName<LegalName>AlreadyExistsForVendor<first LegalNamesRel.Vendor>-<first LegalNamesRel.VendorName>;Proceed?"

		CheckDigitType
			initial value is VendorAddress.Country.TaxIDCheckDigitType
			default to VendorAddress.Country.TaxIDCheckDigitType
			if (CheckDigitType.NoCheckDigit
			and VendorAddress.Country.TaxIDCheckDigitType entered)
				force default to VendorAddress.Country.TaxIDCheckDigitType

		TaxID
			if (TaxID entered
			and TaxIDType entered
			and TaxIdentificationTypeRel.HasExpression)
				constraint (TaxID matches TaxIdentificationTypeRel.RegularExpression)
					"TaxFormatDoesNotMatchEnteredTaxInformation;FormatIs<TaxIdentificationTypeRel.FormatExample>"

			if (!CheckDigitType.Ignore
			and !CheckDigitType.NoCheckDigit)
				required
					"TaxIDRequiredWhenCheckDigitTypeIsEnteredOrDefaulted;CheckDigitType=<CheckDigitType>"
				initialize ValidateCheckDigit
				if (CheckDigitType.MOD10)
					constraint (TaxID matches "\d{10}")
						"TaxIDForMOD\10MustBe10Digits"
					ValidateCheckDigit.ValidationType	= "T"
				if (CheckDigitType.MOD11)
					ValidateCheckDigit.ValidationType	= "E"
				if (CheckDigitType.MOD11Hyphen2)
					ValidateCheckDigit.ValidationType	= "O"
				ValidateCheckDigit.NumberToValidate = TaxID
				constraint (ValidateCheckDigit.IsNumberValid)
					"InvalidCheckDigit"

			if  (TaxID entered
			and  DuplicateTaxIDRel exists
			and (action type.Create
			or   TaxID changed))
				if (instance count of DuplicateTaxIDRel > 1)
					confirmation required
						"Warning:_TaxID<TaxID>ExistsFor<instance count of DuplicateTaxIDRel>Vendors,Including_\Vendor<first DuplicateTaxIDRel.Vendor>_-_<first DuplicateTaxIDRel.VendorName>.Continue?"

				else
					confirmation required
						"Warning:_TaxID<TaxID>ExistsFor_\Vendor<first DuplicateTaxIDRel.Vendor>_-_<first DuplicateTaxIDRel.VendorName>.Continue?"


		CustomerGroup
			if (Customer entered)
				required
					"CustomerGroupIsRequired"								 

		Customer
			if (CustomerGroup entered)
				required
					"CustomerIsRequired"									  

			if (CustomerGroup entered
			and Customer entered)
					constraint ((Customer.VendorGroupAndVendor.VendorGroup not entered and  Customer.VendorGroupAndVendor.Vendor not entered)
					or (Customer.VendorGroupAndVendor.VendorGroup = VendorGroup and	Customer.VendorGroupAndVendor.Vendor = Vendor))
						"AssociatedCustomer<Customer>IsAlreadyLinkedToAnotherVendor<Customer.VendorGroupAndVendor.Vendor>"	
				
				constraint (!IsIntercompanyBillingDefaultVendor)
					"CannotRelateVendorToCustomer;VendorIsIntercompanyBillingDefaultVendor"  

				constraint (!Customer.IsICBillingDefaultCustomer)	
					"CannotRelateVendorToCustomer;CustomerIsIntercompanyBillingDefaultCustomer"  

		PayablesProcessGroup
			if (PayablesProcessGroup changed
			and PayablesProcessGroup != "NONE")
				constraint (PayablesInvoiceRel not exists
				and		 PayablesInvoiceHistoryRel not exists)
					"InvoicesExist;UseProcessGroupUpdateToChangeProcessGroup"		   

			if (PayablesProcessGroup entered
			and PayablesProcessGroup != "NONE")
				constraint (VendorProcessGroupRel exists)
					"ProcessGroup<PayablesProcessGroup>DoesNotExist"								

		VATRegistrationCountry
			if (VATRegistrationNumber entered)
				required
					"V\A\T_\RegistrationCountryRequiredIf_\V\A\T_\RegistrationNumberIsEntered"	  
			if (VATRegistrationCountry changed)	
				include InitializeValidationFields

		TaxUsageCode		
			constraint (TaxCode entered)
				"TaxUsageCodeNotValidIfNoTaxCodeIsEntered"		 

			constraint (TaxUsageCodesRel exist)
				"TaxUsageCode<TaxUsageCode>NotDefined"			

		AutomaticChargebackHoldCode			
			constraint (AutomaticChargebackHoldCode.HoldOnInvoice entered)
				"HoldCode<AutomaticChargebackHoldCode>DoesNotExistOrIsNotValidForInvoices"			  

		MatchTable			
			constraint (not MatchTable.MatchTableLevel.CompanyOnly)
				"MatchTableTypeCannotBeCompanyOnly"					  

		CashCode


		BankTransactionCode






			constraint (BankTransactionCode.BankTransactionType.CashPayment
			or		  BankTransactionCode.BankTransactionType.BillOfExchangePayment)
				"MustBeCashOrBillOfExchangePayment"						

			if (CashCode entered
			and not BankTransactionCode.PaymentOutputOption.NoOutput
			and not BankTransactionCode.BankTransactionType.BillOfExchangePayment)
				if (CashPaymentFormatRel not exists)
					if (PayablesProcessGroup not entered)
						constraint (ProcessGroupNoneRel exists)
							"CashPaymentFormatDoesNotExist"			
					if (PayablesProcessGroup = "NONE")
						constraint (ProcessGroupBlankRel exists)
							"CashPaymentFormatDoesNotExist"			





		RetainageAccrualCode		
			constraint (ContractGroupsRel exist)
				"CannotAddRetainageAccrualCode,ReqsContractManagement"	 




		MatchPrepaymentMethod				
			if (MatchPrepayment)
				required

			else
				cannot be entered


		ERSCapable
			if (ERSCapable)
				constraint (RequirePurchaseOrder.Yes)
					"RequirePurchaseOrderMustBeYesWhenERS_Capable"  

			if (ERSCapable)
				constraint (InvoiceReference entered)
					"ReferenceTypeRequiredWhen_\E\R\SIsBeingUsed"			 

		RequirePurchaseOrder
			if (ERSCapable)
				constraint (RequirePurchaseOrder.Yes)
					"RequirePurchaseOrderMustBeYesWhenERS_Capable"  










		Project			
			constraint (Project.Project exists)
				"Project<Project.Project>DoesNotExist"							

		PrimeRate				
			constraint (PrimeRate >= 0)
				"RateCannotBeLessThanZero"								 

		InvoiceCurrency			
			default to BalanceCurrency

		BalanceCurrency
			constraint (BalanceCurrency = InvoiceCurrency)
				"InvoiceCurrency<InvoiceCurrency>MustEqualBalanceCurrency<BalanceCurrency>"				  

			if (BalanceCurrency changed)
				if (VendorBalancesRel exist)
					if (old BalanceCurrency entered)
						constraint (first VendorBalancesRel.BalanceCurrency != old BalanceCurrency)
							"CannotChangeBalanceCurrency;BalanceExists"			   
					else
						constraint (first VendorBalancesRel.BalanceCurrency = BalanceCurrency)
							"CannotChangeBalanceCurrency;BalanceExists"			   

				for each UnreleasedPaymentsRel
					if (old BalanceCurrency entered)
						constraint (each.InvoiceCurrency != BalanceCurrency)
							"CannotChangeBalanceCurrency"								  
					else
						constraint (each.InvoiceCurrency = BalanceCurrency)
							"CannotChangeBalanceCurrency;InvoicesExist"					

			if (BalanceCurrency entered)
				for each VendorLocation set
					if (each.InvoiceCurrency entered)
						constraint (each.InvoiceCurrency = BalanceCurrency)
							"CannotChangeBalanceCurrency;VendorLocation<each.VendorLocation>HasInvoiceCurrency<each.InvoiceCurrency>"		









		VendorClaimHoldCode			
			constraint (VendorClaimHoldCode.HoldOnInvoice entered)
				"HoldCode<VendorClaimHoldCode>DoesNotExistOrIsNotValidForInvoices"			  

			constraint (VendorClaimType.Chargeback)
				"CannotEnterVendorClaimsHoldCodeIfNotDoingChargebacks"	

		ProcurementCardNumber
			if (!UseProcurementCard										
			and HasProcurementCard)										
				initialize ProcurementCardNumber						
				initialize MaskedProcurementCard						
				MaskedProcurementCard	= DerivedMaskedProcurementCard	
			else														
				constraint (UseProcurementCard)
					"CannotEnterProcurementCardNumber;VendorDoesNotUseProcurementCards"	

			if (ProcurementCardNumber changed)								
				MaskedProcurementCard	= DerivedMaskedProcurementCard













		RevalueCurrency			
			initial value is true

		SecondaryWithholdingCode1
			if (ExemptFromSecondaryWithholding)
				cannot be entered

					"ExemptFromSecondaryWithholding;CodeCannotBeEntered"	

		SecondaryWithholdingCode2
			if (ExemptFromSecondaryWithholding)

				cannot be entered
					"ExemptFromSecondaryWithholding;CodeCannotBeEntered"	

			constraint (SecondaryWithholdingCode2 != SecondaryWithholdingCode1)
				"SecondaryWithholdingCodeCannotBeDuplicated"			   

		SecondaryWithholdingCode3
			if (ExemptFromSecondaryWithholding)

				cannot be entered
					"ExemptFromSecondaryWithholding;CodeCannotBeEntered"	

			constraint (SecondaryWithholdingCode3 != SecondaryWithholdingCode1
			and		 SecondaryWithholdingCode3 != SecondaryWithholdingCode2)
				"SecondaryWithholdingCodeCannotBeDuplicated"			   

		CreateDate
			initial value is current corporate date
			default to current corporate date




		BankEntity
			if (BankAccountValidationType.NationalClearingSystem)
				required
					"RequiredWith_\National_\Clearing_\System"	   
			if (BankTransactionCode.PaymentOutputOption.ElectronicFile
			or	BankTransactionCode.PaymentOutputOption.Swift
			or	BankTransactionCode.PaymentOutputOption.WireTransfer)
				required
					"BankEntityRequiredForElectronicPayments"	

		BankAccountType
			if (BankAccountNumber entered)
				default to "C"
			if (BankTransactionCode.PaymentOutputOption.ElectronicFile
			or	BankTransactionCode.PaymentOutputOption.Swift
			or  BankTransactionCode.PaymentOutputOption.WireTransfer)
				required
					"BankAccountTypeRequiredForElectronicPayments"	

		ACHPrenotification
			if (BankAccountNumber entered)
				default to "N"

		BankAccountNumber
			if (BankAccountValidationType entered					
			and not BankAccountValidationType.Check)
				required
					"RequiredWith<BankAccountValidationType>"		

			if (BankAccountType entered)
				required
					"RequiredWhenUsing_\Account_\Type"				

			if (GlobalBankAccountType entered)						
				required
					"RequiredWhenUsing_\Global_\Account_\Type"
					
			if (BankTransactionCode.PaymentOutputOption.ElectronicFile
			or	BankTransactionCode.PaymentOutputOption.Swift
			or  BankTransactionCode.PaymentOutputOption.WireTransfer)
				required
					"BankAccountNumberRequiredForElectronicPayments"	

			if (ACHPrenotification = "P"
			or  ACHPrenotification = "A")
				required
					"RequiredWhen_\A\C\H_\PrenotificationIsEntered"		


			initialize ValidateBankAccountNumber
			ValidateBankAccountNumber.BankAccountValidationType = BankAccountValidationType
			ValidateBankAccountNumber.BankAccountNumber		= BankAccountNumber
			constraint (ValidateBankAccountNumber.IsValidBankAccount)
				"<ValidateBankAccountNumber.ErrorMessage>"









		IntermediaryBankEntity
			if (IntermediaryBankAccountValidationType.NationalClearingSystem)
				required
					"RequiredWith_\National_\Clearing_\System"	   

		IntermediaryBankAccount
			if (IntermediaryBankAccountValidationType entered		
			and not IntermediaryBankAccountValidationType.Check)
					required
						"RequiredWith<IntermediaryBankAccountValidationType>"			 

			if (IntermediaryPrenotification = "P"
			or  IntermediaryPrenotification = "A")
				required
					"RequiredWhen_\A\C\H_\PrenotificationIsEntered"		


			initialize ValidateBankAccountNumber
			ValidateBankAccountNumber.BankAccountValidationType = IntermediaryBankAccountValidationType
			ValidateBankAccountNumber.BankAccountNumber		= IntermediaryBankAccount
			constraint (ValidateBankAccountNumber.IsValidBankAccount)
				"<ValidateBankAccountNumber.ErrorMessage>"

		IntermediaryPrenotification			
			if (IntermediaryBankAccount entered)
				default to "N"











		IntermediaryBankAccountValidationType
			if (IntermediaryBankAccount entered)	
				if (CashCode entered
				and CashCode.Sepa)
					default to CashCode.BankAccountValidationType.IbanAndBIC
				default to CashCode.BankAccountValidationType



			if (IntermediaryBankAccountValidationType.BicCode
			or  IntermediaryBankAccountValidationType.IbanAndBIC)
				IntermediaryCrossBorderIdentifier = IntermediaryCrossBorderIdentifier.Swift
				constraint (IntermediarySwiftID entered)
					"IntermediaryBICNumberRequiredForBICCodeOrIBANAndBICValidationTypes"

		SwiftID
			default to BankEntity.SwiftID		
			if(BankEntity changed and BankEntity.SwiftID entered)
          		SwiftID = BankEntity.SwiftID
			constraint (BankEntity entered
			or			BankAccountNumber entered)
				"CrossBorderValidOnlyIfBankIdentificationOrAccountNumberEntered"	 



			if (IsValidForCrossBorderPayments
			and BankAccountValidationType.IbanAndBIC)
				required
					"B\I\CNumber_&_\I\B\A\NRequiredWhenVendorBankIdentification_=_\Z"

		PaymentForm
			if (SwiftID entered
			and BankAccountValidationType.Check)
				force default to "S9"
			constraint (PaymentForm.Active)
				"PaymentFormIsInactive"

		IntermediarySwiftID
			constraint (IntermediaryBankEntity entered
			or			IntermediaryBankAccount entered)
				"CrossBorderValidOnlyIfBankIdentificationOrAccountNumberEntered"	 



			if (IsValidForIntermediaryCrossBorderPayments
			and IntermediaryBankAccountValidationType.IbanAndBIC)
				required
					"B\I\CNumber_&_\I\B\A\NRequiredWhenVendorBankIdentification_=_\Z"

		IntermediaryPaymentForm
			if (IntermediarySwiftID entered
			and IntermediaryBankAccountValidationType.Check)
				force default to "S9"
			constraint (IntermediaryPaymentForm.Active)
				"PaymentFormIsInactive"

		InvoiceReference
			if (ERSCapable)
				required
					"ReferenceTypeRequiredWhen_\E\R\SIsBeingUsed"			 

		BankAccountValidationType
			if (BankAccountNumber entered)	
				if (CashCode entered
				and CashCode.Sepa)
					default to CashCode.BankAccountValidationType.IbanAndBIC
				default to CashCode.BankAccountValidationType



			if (BankAccountValidationType.BicCode
			or  BankAccountValidationType.IbanAndBIC)
				CrossBorderIdentifier = CrossBorderIdentifier.Swift
				constraint (SwiftID entered)
					"VendorBICNumberRequiredForBICCodeOrIBANAndBICValidationTypes"

		Logo
			if (Logo changed
			or	Vendor not exists)
				MaxLogoSize = VendorGroup.LogoImageMaximumSizeBytes

		LegacyVendor
			if (LegacyVendor entered)
				constraint (!LegacyVendorRel exists)
					"LegacyVendor<LegacyVendor>AlreadyExists"

		Reference1
			default to LegacyVendor

		W8Verified
			constraint (ISOCountryNumber entered
			and			ISOCountryNumber != 840)
				"W\8_\VerifiedMustBeBlankIfISOCountryNumber=840Or0.ISOCountryNumberIs<ISOCountryNumber>."	

		FATCAIncomeCode
			if (W8Verified.No)
				required
					"F\A\T\C\AIncomeCodeRequiredIf_\W8_\Verified=No"			
				constraint (FATCAIncomeCode.FormType.ForeignPerson)
					"F\A\T\C\AIncomeCodeMustBeType_S_(ForeignPerson)"			
			if (W8Verified.Yes)
				cannot be entered
					"F\A\T\C\AIncomeCodeCannotBeEnteredIf_\W\8_\Verified=Yes"	
			if (W8Verified not entered)
				cannot be entered
					"F\A\T\C\AIncomeCodeCannotBeEnteredIf_\W\8_\Verified=Blank"	

		FATCAPercentage
			if (W8Verified.No)
				required
					"F\A\T\C\APercentageRequiredIf_\W\8_\Verified=No"				
			if (W8Verified.Yes)
				cannot be entered
					"F\A\T\C\APercentageCannotBeEnteredIf_\W\8_\Verified=Yes"		
			if (W8Verified not entered)
				cannot be entered
					"F\A\T\C\APercentageCannotBeEnteredIf_\W\8_\Verified=Blank"		

		FATCAAccount
			if (W8Verified.No)
				required
					"F\A\T\C\AAccountRequiredIf_\W8_\Verified=No"					
			if (W8Verified.Yes)
				cannot be entered
					"F\A\T\C\AAccountCannotBeEnteredIf_\W8_\Verified=Yes"			
			if (W8Verified not entered)
				cannot be entered
					"F\A\T\C\AAccountCannotBeEnteredIf_\W8_\Verified=Blank"			

		FATCAId
			if (W8Verified.No)
				cannot be entered
					"F\A\T\C\A_I\DCannotBeEnteredIf_\W8_\Verified=No"				
			if (W8Verified not entered)
				cannot be entered
					"F\A\T\C\A_I\DCannotBeEnteredIf_\W8_\Verified=Blank"			

		FinancialInstitutionType
			if (W8Verified.No)
				cannot be entered
					"F\A\T\C\AFinancialInstitutionCannotBeEnteredIf_\W8_\Verified=No"		
			if (W8Verified not entered)
				cannot be entered
					"F\A\T\C\AFinancialInstitutionCannotBeEnteredIf_\W8_\Verified=Blank"	

		GIINCategoryCode
			if (W8Verified.No)
				cannot be entered
					"G\I\I\NCategoryCodeCannotBeEnteredIf_\W8_\Verified=No"			
			if (W8Verified not entered)
				cannot be entered
					"G\I\I\NCategoryCodeCannotBeEnteredIf_\W8_\Verified=Blank"		

		ISOCountryNumber



			if (W8Verified not entered)
				cannot be entered
					"F\A\T\C\A_\I\S\OCountryNumberCannotBeEnteredIf_\W8_\Verified=Blank"	

		PaymentCategoryCode
			constraint (PaymentCategoryCode.Active)
				"PaymentCategoryIsInactive"

		IntermediaryPaymentCategory
			constraint (IntermediaryPaymentCategory.Active)
				"PaymentCategoryIsInactive"

		ChargeCode
			constraint (ChargeCode.Active)
				"ChargeCodeIsInactive"

		IntermediaryChargeCode
			constraint (IntermediaryChargeCode.Active)
				"ChargeCodeIsInactive"

		VATRegistrationNumber	
			if (VATRegistrationNumber changed)
				include InitializeValidationFields

		EmailAddress
			if (VendorClass.InterfaceVendor)
				required
					"EmailForPrimaryContactIsRequiredIf_Create_Expense_Management_UserIsSelectedOnThe_Vendor_Class"

			if (AutomaticEmailingOfCreditMemo)
				required
					"PrimaryContactEmailAddressIsRequiredWhenAutomaticEmailingOfCreditMemoIsEnabled"

			if (AutomaticEmailingOfDebitMemo)
				required
					"PrimaryContactEmailAddressIsRequiredWhenAutomaticEmailingOfDebitMemoIsEnabled"

		LineLevelWithholding
			if (LineLevelWithholding)
				IncomeWithholding = true


	Create Rules
		if (!T2VCreate)
			constraint (VendorAddress entered)
				"VendorAddressIsRequired"

	Create Exit Rules
		if (!T2VCreate)
			include ChangeDunAndBradstreetNumber

	Form Invokes
		ChangeCurrentAddress
			invoke Update CurrentAddressRel


		CreatePurchasingVendor
			invoke Create PurchasingVendorRel

		CreateVendorBankCodes		
			invoke Create VendorBankRel
		
		CreateMobileSupplyChainVendor
			invoke Create MobileSupplyChainVendorRel

	Actions



		GenerateVendorStatementsIDM is an Instance Action
			restricted
			Parameters
				PrmIDMPrinter			is an IDMPrinter
			Local Fields

				LocalColSequence					is Numeric size 3
			Action Rules

					initialize IDMGenerateDocument
					IDMGenerateDocument.IDMXMLDefinition.Busclass		=	reference to this instance
					IDMGenerateDocument.IDMXMLDefinition.ListName		=	"VendorStatementIDM"
					IDMGenerateDocument.IDMXMLDefinition.DocumentName	=	"VendorStatement"

					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[1].RelationName			= "VendorStatementHeaderRel"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[1].ListName				= "VendorStatementHeaderList"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[1].LevelSection1		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[1].ListTag				= "VendorStatementHeaders"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[1].ItemTag				= "VendorStatementHeader"

					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[2].RelationName			= "VendorStatementDetailRel"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[2].ListName				= "VendorStatementDetailList"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[2].LevelSection1		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[2].LevelSection2		= 2
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[2].ListTag				= "VendorStatementDetails"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[2].ItemTag				= "VendorStatementDetail"

					initialize IDMAttributes
					IDMAttributes.SingleValue.IDMAttribute[1].IDMAttributeName	= "VendorGroup"
					IDMAttributes.SingleValue.IDMAttribute[1].IDMAttributeValue	= VendorGroup
					IDMAttributes.SingleValue.IDMAttribute[2].IDMAttributeName	= "Vendor"
					IDMAttributes.SingleValue.IDMAttribute[2].IDMAttributeValue	= Vendor
					IDMAttributes.SingleValue.IDMAttribute[3].IDMAttributeName	= "VendorName"
					IDMAttributes.SingleValue.IDMAttribute[3].IDMAttributeValue	= VendorName
					IDMAttributes.SingleValue.IDMAttribute[4].IDMAttributeName	= "StatementDate"
					IDMAttributes.SingleValue.IDMAttribute[4].IDMAttributeDate	= DerivedStatementDate

					if (IDMAdditionalAttributesLinesRel exists)
						AttributeCtr = 5
						include IDM.IDMAdditionalAttributes

					initialize LocalColSequence

					for each distinct Company in VendorStatementHeaderRel
						if (LocalColSequence < 100)
							LocalColSequence = LocalColSequence + 1
							IDMAttributes.MultiValue1.IDMAttributeValueOccurs.IDMAttributeValue[LocalColSequence] = each.Company
							if (each.Company.Name entered)
								IDMAttributes.MultiValue2.IDMAttributeValueOccurs.IDMAttributeValue[LocalColSequence] = each.Company.Name
						else
							end for each

					IDMAttributes.MultiValue1.IDMAttributeName = "Company"
					IDMAttributes.MultiValue2.IDMAttributeName = "CompanyName"


					IDMGenerateDocument.IDMAttributes		= IDMAttributes
					IDMGenerateDocument.TemplateUniqueId	= VendorGroup.VendorStatementTemplate.IDMUniqueId
					IDMGenerateDocument.DocumentType		= "FSM_VendorStatement"
					IDMGenerateDocument.FileName			= DerivedFileName + VendorGroup.VendorStatementTemplate.DerivedOutputFormat

					if (PrmIDMPrinter entered)
						IDMGenerateDocument.IDMPrinter	= PrmIDMPrinter 

					IDMGenerateDocument.IDMAccessControlList = "CSFDefined"

					invoke CreateFromGenerateDocument IDMJob
						invoked.Actor				= actor
						invoked.Description			= "Vendor Statement"
						invoked.IDMGenerateDocument = IDMGenerateDocument

					invoke Delete VendorStatementHeaderRel


		Create is a Create Action

			Field Rules












				PayVendor
					if (PayVendor != Vendor)
						constraint (not PayVendor.VendorStatus.Inactive)
							"PayVendor<PayVendor>IsInactive"							

			Action Rules
				include OFACValidation
				include ISOCountryNumberRules

			Exit Rules
				include BuildTextIndexes
				if (PerformVATValidation)	
					invoke ValidateVATRegistrationNumber
				include CreateRelatedRecords

		CreateOneTimeVendor is a Create Action
			Field Rules


			Entrance Rules
				if (OneTimeVendorClassRel not exists)
					constraint (VendorGroup.OneTimeVendorClass entered)
						"VendorGroupDoesNotHaveOneTimeVendorClassDefined"
					invoke CreateOneTimeClass OneTimeVendorClassRel


			Action Rules

				VendorClass = VendorGroup.OneTimeVendorClass

				include OFACValidation

				include ISOCountryNumberRules

			Exit Rules
				include BuildTextIndexes
				include CreateRelatedRecords

		T2VCreate is a Create Action				
			restricted 
			default label is untranslatable 
			bypass field rules 
			Entrance Rules 
				T2VCreate = true 


		RequestNewVendor is a Create RequestAction
			request action process is RequestNewVendor
			request action linkback webapp is PayablesSpecialist
			workflow event title is "New_\Vendor_\Request:_<VendorName>_|_Priority:_<RequestPriority>_|_NeededBy:_<NeededBy>"
			allow user fields as parameters

			Parameters
				ApproverActor			is Alpha 30
				RequesterActor			is an Actor
				RequestedBy				is Alpha 100
				RequesterPhone			is a Telephone 
					holds pii
				RequesterEmail			is an EmailAddressMulti 
					holds pii
				RequestPriority			is Numeric 1
					States
						High				value is 1
						Medium				value is 2
						Low					value is 3
				NeededBy				is Date
				Notes					is Text

				VendorGroup
				Vendor
				Logo									is a LogoAttachment
				Reference1								is a Reference
				Reference2								is a Reference
				ValidateOFAC							is Boolean
				VendorClass
				VendorName								
				VendorSearchName						is a VendorName 
					holds pii
				ContactName								is a VendorName 
					holds pii
				VendorAddress							is a PostalAddressV2	
					holds pii
				PayVendor								is a Vendor
				VendorStatus							is AlphaUpper size 1
					States
						Active					value is "A"
						Inactive				value is "I"
						InactiveForPOAdditions	value is "D"
						Restricted				value is "R"
				PaymentPriority
				PhoneNumber								is a TelephoneNumber 
					holds pii
				FaxNumber
				TelexNumber
				TermsCode
				InvoiceCurrency							is a Currency
				BalanceCurrency							is a Currency
				RevalueCurrency							is Boolean
				SeparatePayment							is Boolean
				TaxIDType							   is a TaxIdentificationType
				TaxID
				TaxExemptCode							is AlphaUpper size 1
				TaxCode
				OnHold									is Boolean
				DistributionCode						is a PayablesDistributionCode
				AccrualCode								is a PayablesAccrualCode

				BankTransactionCode
				PayablesProcessGroup
				CashCode
				BankEntity
				BankCurrency							is a Currency
				BankAccountNumber
				BankAccountType
				GlobalBankAccountType	
				BankAccountValidationType
				CrossBorderIdentifier
				IncomeCode								is a PayablesIncomeCode
				IncomeWithholding						is Boolean
				EDINumber
				ACHPrenotification
				MaximumInvoiceAmount					is an InternationalAmount
				CreateDate								is Date
				OriginDate								is Date
				Operator
				RequestCustomerGroup					is like CustomerGroup 
				RequestCustomer							is like Customer 
				LegalName								is like VendorName 
					holds pii
				PrimeRate
				InvoiceGroup							is a PayablesInvoiceGroup		
				DiscountCode							is a PayablesDiscountCode
				ERSCapable								is Boolean
				InvoiceReference						is a PayablesReferenceType	
					classic name is INVC-REF-TYPE










				EDIAutoRelease							is Boolean
				AuthorityCode							is a PayablesAuthorityCode
				Project								is a FinanceCodeBlockProjectOnly
				ChargeCode								is a CashLedgerChargeCode
				PaymentCategoryCode						is a CashLedgerPaymentCategoryCode
				NormalOrExpressCode
				PaymentForm								is a CashLedgerPaymentForm
				SwiftID
				MatchTable
				TermsCalculation
				CreatePOD								is Boolean
				Enclosure								is Boolean
				PoolOption
				RequireMatchReference					is Boolean
				HoldUntilInspected
				WriteOffAmount							is an InternationalAmount
				VendorClaimType
				VendorClaimHoldCode						is a PayablesHoldCode
				AutomaticChargebackHoldCode				is a PayablesHoldCode
				ChargebackMinimumAmount					is an InternationalAmount
				ReplaceGoods							is Numeric size 1
					States
						UseCompanyValue					value is 0
						Yes								value is 1
						No								value is 2
				ShipOrHold
				EmailAddress							is an EmailAddressMulti 
					holds pii
				URLAddress
				VendorAccount
				LanguageCode							is an IsoLocale
				TaxUsageCode
				VATRegistrationCountry					is a Country
				VATRegistrationNumber
				ValidatePurchaseOrder					is AlphaUpper size 1
					States
						CompanyDefault   value is blank
						Yes			  value is "Y"
						No			   value is "N"
				RequirePurchaseOrder					is AlphaUpper size 1
					States
						CompanyDefault   value is blank
						Yes			  value is "Y"
						No			   value is "N"
				WorkflowGroup
				MobileNumber							is a MobilePhone 
					holds pii
				PayImmediately							is Boolean
				DiversityCode							is a PayablesDiversityCode
				IntermediaryBankEntity					is a BankEntity
				IntermediaryBankAccount					is a BankAccountNumber
				IntermediaryBankAccountValidationType	is a BankAccountValidationType
				IntermediaryBankCurrency				is a Currency
				IntermediaryPrenotification				is an ACHPrenotification
				IntermediarySwiftID						is a SwiftID
				IntermediaryPaymentCategory				is a CashLedgerPaymentCategoryCode
				IntermediaryNormalOrExpressCode			is a NormalOrExpressCode
				IntermediaryPaymentForm					is a CashLedgerPaymentForm
				IntermediaryChargeCode					is a CashLedgerChargeCode
				IntermediaryCrossBorderIdentifier		is a CrossBorderIdentifier
				RuleGroup								is a MatchRule
				FloatDays
				MatchPrepayment							is Boolean
				MatchPrepaymentMethod
				BACSReference
				BACSName								is an AccountName
				GiroNumber
				CreditCardNumber						is a CrCardNumber 
					holds pii
				BankInstructions1					   is a BankInstruct1
				BankInstructions2					   is a BankInstruct2
				BankInstructions3					   is a BankInstruct3
				BankInstructions4					   is a BankInstruct4
				UseProcurementCard						is Boolean
				ProcurementCardNumber
				ValidateDiversityDates					is Boolean
				RetainageAccrualCode					is a PayablesAccrualCode
				GlobalLocationNumber
				TinNot									is Boolean
				TinVerified								is Boolean
				ExemptFromSecondaryWithholding			is Boolean
				SecondaryWithholdingCode1				is a PayablesSecondaryWithholdingCode
				SecondaryWithholdingCode2				is a PayablesSecondaryWithholdingCode
				SecondaryWithholdingCode3				is a PayablesSecondaryWithholdingCode
				ValidateCertificationDate				is Boolean
				ValidateCertificationAmount				is Boolean
				ForeignEconomicRegulatoryCode
				TwitterID
				SocialNetworkID2
				SocialNetworkID3
				SocialNetworkID4
				SocialNetworkID5
				Carrier									is Boolean
				BankingCode
				BankID
				AssignmentNumber
				DebitingSign
				IntermediaryBankingCode					is a BankingCode
				IntermediaryBankID						is a BankID
				IntermediaryAssignmentNumber			is an AssignmentNumber
				IntermediaryDebitingSign				is a DebitingSign
				TransientAttachmentDescription			is a Description
					default label is "AttachmentDescription"
				TransientAttachment						is an Attachment
					default label is "Attachment"
				NeededByRedBoolean 						is Boolean
				NeededByYellowBoolean 					is Boolean
				NeededByGreenBoolean					is Boolean
				NoOfDays								is Numeric size 3
				ApplyFloatDaysToDueDate					is Boolean	
				AllowDuplicateInvoiceByDate				is Boolean
				RequireRemitTo							is AlphaUpper size 1
				RestrictToOneInvoice					is Boolean
				CommentText
				Title 					                is a CommentName
				PrintCode 				                is AlphaUpper size 1
					States
						All             value is "A"
						CheckOrCheque   value is "C"
						DisplayAndPrint value is "D"
						NotationOnly    value is "N"
				DateRange
				TransPayablesCompany					is a PayablesCompanyField
				
			Parameter Rules
				RequestPriority
					required

				NeededBy
					required

				Notes
					required

				RequesterActor
					initial value is actor
					default to actor

				ApproverActor
					if (!actor.initiator)
						default to actor

				RequestedBy
					initial value is RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName
					default to RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName

				RequesterPhone
					initial value is RequesterActor.ContactInfo.TelephoneNumber
					default to RequesterActor.ContactInfo.TelephoneNumber

				RequesterEmail
					initial value is RequesterActor.ContactInfo.EmailAddress
					default to RequesterActor.ContactInfo.EmailAddress

				VendorGroup
					if (actor.final approver)
						required

				ValidateOFAC
					default to VendorGroup.ValidateOFAC

				VendorName
					required

				VendorSearchName
					default to VendorName
					if (actor.approver or actor.final approver)
						LocalVendorGroup = VendorGroup
						LocalVendorSearchName = VendorSearchName
						if (first VendorSearchNamesAlternateRel exists)
							confirmation required
								"AnotherVendorWithSameSearchNameAlreadyExists,Continue?"



				LegalName
					default to VendorName
					if (actor.approver or actor.final approver)
						LocalVendorGroup = VendorGroup
						LocalLegalName = LegalName
						if (first LegalNamesAlternateRel exists)
							confirmation required
								"AnotherVendorWithSameLegalNameAlreadyExists,Continue?"


				VendorClass
					if (actor.final approver)
						required

				VendorAddress
					required

				TransientAttachment
					if (TransientAttachmentDescription entered)
						required
							"AttachmentIsRequiredWhenAttachmentDescriptionIsEntered"

				NeededByRedBoolean
					default to false
					if (current date > NeededBy)
						NeededByRedBoolean = true

				NeededByYellowBoolean
					default to false
					if (NeededBy - current date = 0 days)
						NeededByYellowBoolean = true

				NeededByGreenBoolean
					default to false
					if (NeededBy > current date)
						NeededByGreenBoolean = true
						NoOfDays = NeededBy - current date

			Action Rules
				invoke Create this instance
					fill in user fields from parameters
					include AddCreateRequestVendor



		RequestUpdateVendor is an Update RequestAction		
			request action process is RequestUpdateVendor
			request action linkback webapp is PayablesSpecialist
			allow user fields as parameters
			bypass field rules
			Parameters
				ApproverActor
				RequesterActor
				RequestedBy
				RequesterPhone
				RequesterEmail
				RequestPriority
				NeededBy
				Notes
				VendorGroup
				Vendor
				Logo
				Reference1
				Reference2
				ValidateOFAC
				VendorClass
				VendorName
				VendorSearchName
				ContactName
				RequestAddressChange	
				VendorAddress
				PayVendor
				VendorStatus
				PaymentPriority
				PhoneNumber
				FaxNumber
				TelexNumber
				TermsCode
				InvoiceCurrency
				BalanceCurrency
				RevalueCurrency
				SeparatePayment
				TaxIDType
				TaxID
				TaxExemptCode
				TaxCode
				OnHold
				DistributionCode
				AccrualCode
				BankTransactionCode
				PayablesProcessGroup
				CashCode
				BankEntity
				BankCurrency
				BankAccountNumber
				BankAccountType
				GlobalBankAccountType	
				BankAccountValidationType
				CrossBorderIdentifier
				IncomeCode
				IncomeWithholding
				EDINumber
				ACHPrenotification
				MaximumInvoiceAmount
				CreateDate
				OriginDate
				Operator
				RequestCustomerGroup
				RequestCustomer
				LegalName
				PrimeRate
				InvoiceGroup
				DiscountCode
				ERSCapable
				InvoiceReference
				EDIAutoRelease
				AuthorityCode
				Project
				ChargeCode
				PaymentCategoryCode
				NormalOrExpressCode
				PaymentForm
				SwiftID
				MatchTable
				TermsCalculation
				CreatePOD
				Enclosure
				PoolOption
				RequireMatchReference
				HoldUntilInspected
				WriteOffAmount
				VendorClaimType
				VendorClaimHoldCode
				AutomaticChargebackHoldCode
				ChargebackMinimumAmount
				ReplaceGoods
				ShipOrHold
				EmailAddress
				URLAddress
				VendorAccount
				LanguageCode
				TaxUsageCode
				VATRegistrationCountry
				VATRegistrationNumber
				ValidatePurchaseOrder
				RequirePurchaseOrder
				WorkflowGroup
				MobileNumber
				PayImmediately
				DiversityCode
				IntermediaryBankEntity
				IntermediaryBankAccount
				IntermediaryBankAccountValidationType
				IntermediaryBankCurrency
				IntermediaryPrenotification
				IntermediarySwiftID
				IntermediaryPaymentCategory
				IntermediaryNormalOrExpressCode
				IntermediaryPaymentForm
				IntermediaryChargeCode
				IntermediaryCrossBorderIdentifier
				RuleGroup
				FloatDays
				MatchPrepayment
				MatchPrepaymentMethod
				BACSReference
				BACSName
				GiroNumber
				CreditCardNumber
				BankInstructions1
				BankInstructions2
				BankInstructions3
				BankInstructions4
				UseProcurementCard
				ProcurementCardNumber
				ValidateDiversityDates
				RetainageAccrualCode
				GlobalLocationNumber
				TinNot
				TinVerified
				ExemptFromSecondaryWithholding
				SecondaryWithholdingCode1
				SecondaryWithholdingCode2
				SecondaryWithholdingCode3
				ValidateCertificationDate
				ValidateCertificationAmount
				ForeignEconomicRegulatoryCode
				TwitterID
				SocialNetworkID2
				SocialNetworkID3
				SocialNetworkID4
				SocialNetworkID5
				Carrier
				BankingCode
				BankID
				AssignmentNumber
				DebitingSign
				IntermediaryBankingCode
				IntermediaryBankID
				IntermediaryAssignmentNumber
				IntermediaryDebitingSign
				TransientAttachmentDescription
				TransientAttachment
				NeededByRedBoolean
				NeededByYellowBoolean
				NeededByGreenBoolean
				NoOfDays
				RIBKey					
				IntermediaryRIBKey
				InvoiceRoutingCategory
				AllowZeroCostInvoice
				CaseNumber
				ExpenseDefault
				ExternalAccountingEntity
				ExternalLocation
				AutomaticEmailingOfCreditMemo
				AutomaticEmailingOfDebitMemo
				ApplyFloatDaysToDueDate		
				AllowDuplicateInvoiceByDate
				RequireRemitTo
				RestrictToOneInvoice
				TransPayablesCompany
				CommentText
				Title 					            
				PrintCode 				            
				DateRange
				PayGroup
				ClearTaxID					
				ClearBankAccountNumber
				ClearSwiftID
				ClearIntermediaryBankAccount
				ClearIntermediarySwiftID
				ClearGiroNumber			
				ClearCreditCardNumber
			Parameter Rules
				RequestPriority
					required

				NeededBy
					required

				Notes
					required

				RequesterActor
					initial value is actor
					default to actor

				ApproverActor
					if (!actor.initiator)
						default to actor

				RequestedBy
					initial value is RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName
					default to RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName

				RequesterPhone
					initial value is RequesterActor.ContactInfo.TelephoneNumber
					default to RequesterActor.ContactInfo.TelephoneNumber

				RequesterEmail
					initial value is RequesterActor.ContactInfo.EmailAddress
					default to RequesterActor.ContactInfo.EmailAddress

				VendorGroup
					if (actor.final approver)
						required

				ValidateOFAC
					default to VendorGroup.ValidateOFAC

				VendorName
					required

				VendorSearchName
					default to VendorName
					if (actor.approver or actor.final approver)
						LocalVendorGroup = VendorGroup
						LocalVendorSearchName = VendorSearchName
						if (first VendorSearchNamesAlternateRel exists)
							confirmation required
								"AnotherVendorWithSameSearchNameAlreadyExists,Continue?"



				LegalName
					default to VendorName
					if (actor.approver or actor.final approver)
						LocalVendorGroup = VendorGroup
						LocalLegalName = LegalName
						if (first LegalNamesAlternateRel exists)
							confirmation required
								"AnotherVendorWithSameLegalNameAlreadyExists,Continue?"


				VendorClass
					if (actor.final approver)
						required

				VendorAddress
					required

				TransientAttachment
					if (TransientAttachmentDescription entered)
						required
							"AttachmentIsRequiredWhenAttachmentDescriptionIsEntered"

				ValidateCertificationAmount
					constraint (VendorCertificatioinMaximumSpendRel exist)
						"CannotValidateCerificationAmount;NoCertificationWithMaximumSpendAssignedToVendor<Vendor>"

				NeededByRedBoolean
					default to false
					if (current date > NeededBy)
						NeededByRedBoolean = true

				NeededByYellowBoolean
					default to false
					if (NeededBy - current date = 0 days)
						NeededByYellowBoolean = true

				NeededByGreenBoolean
					default to false
					if (NeededBy > current date)
						NeededByGreenBoolean = true
						NoOfDays = NeededBy - current date

				ClearTaxID				
					if(ClearTaxID)
						initialize TaxID
				
				ClearBankAccountNumber
					if(ClearBankAccountNumber)
						initialize BankAccountNumber
				
				ClearSwiftID
					if(ClearSwiftID)
						initialize SwiftID
				
				ClearIntermediaryBankAccount
					if(ClearIntermediaryBankAccount)
						initialize IntermediaryBankAccount
						
				ClearIntermediarySwiftID
					if(ClearIntermediarySwiftID)
						initialize IntermediarySwiftID
						
				ClearGiroNumber
					if(ClearGiroNumber)
						initialize GiroNumber
				
				ClearCreditCardNumber
					if(ClearCreditCardNumber)
						initialize CreditCardNumber
			Action Rules
				invoke Update
					fill in user fields from parameters
					include AddCreateRequestVendor

		Update is an Update Action
			Field Rules
				PayVendor
					default to Vendor

					if (PayVendor != Vendor)
						constraint (not PayVendor.VendorStatus.Inactive)
							"PayVendor<PayVendor>IsInactive"							

			Local Fields
				OldCustomerGroup is a CustomerGroup
				OldCustomer is a Customer

			Action Rules
				include OFACValidation
				include ISOCountryNumberRules
				include ChangeDunAndBradstreetNumber

				if (Customer changed
				or  CustomerGroup changed)
					if (old Customer entered)
						OldCustomerGroup = old CustomerGroup
						OldCustomer	 = old Customer
						invoke SetVendor OldCustomer
							invoked.PayablesVendorGroup	= blank
							invoked.PayablesVendor			= blank
					if (Customer entered)
						invoke SetVendor Customer
							invoked.PayablesVendorGroup	= VendorGroup
							invoked.PayablesVendor			= Vendor

				if (VendorName changed
				or  TaxID changed
				or  LegalName changed)
					TinVerified = false





				
				if(invoking action = "RequestUpdateVendor")	
		            if (ClearTaxID)
                		initialize TaxID
            		else
		            if (TaxID changed and TaxID !entered and old TaxID entered)
		            	TaxID = old TaxID
		            	
		            if(ClearBankAccountNumber)
		            	initialize BankAccountNumber
		            else
					if (BankAccountNumber changed and BankAccountNumber !entered and old BankAccountNumber entered)
		            	BankAccountNumber = old BankAccountNumber
		            
		            if(ClearSwiftID)
		            	initialize SwiftID
		            else	
					if (SwiftID changed and SwiftID !entered and old SwiftID entered)
		            	SwiftID = old SwiftID
		            
		            if(ClearIntermediaryBankAccount)
		            	initialize IntermediaryBankAccount
		            else	
		            if (IntermediaryBankAccount changed and IntermediaryBankAccount !entered and old IntermediaryBankAccount entered)
		            	IntermediaryBankAccount = old IntermediaryBankAccount
		            
		            if(ClearIntermediarySwiftID)
		            	initialize IntermediarySwiftID
		            else	
		            if (IntermediarySwiftID changed and IntermediarySwiftID !entered and old IntermediarySwiftID entered)
		            	IntermediarySwiftID = old IntermediarySwiftID
		            
		            if(ClearGiroNumber)
		            	initialize GiroNumber
		            else	
		            if (GiroNumber changed and GiroNumber !entered and old GiroNumber entered)
		            	GiroNumber = old GiroNumber
		            
		            if(ClearCreditCardNumber)
		            	initialize CreditCardNumber
		            else	
		            if (CreditCardNumber changed and CreditCardNumber !entered and old CreditCardNumber entered)
		            	CreditCardNumber = old CreditCardNumber

			Exit Rules
				include BuildTextIndexes
				if (Customer changed
				or  CustomerGroup changed)
					if (CustomerGroup entered and Customer entered)
						invoke SetVendor Customer
							invoked.PayablesVendorGroup	= VendorGroup
							invoked.PayablesVendor			= Vendor
				if (RequestAddressChange changed)	
					include UpdateCurrentAddress	
				include UpdatePrimaryContact

				MaskedProcurementCard = DerivedMaskedProcurementCard

				if (VendorSearchName changed)
					for each MatchReconQueueRel
						invoke UpdateSnapshotFields each

				if (VendorPayToVendorRel	!exist)
					invoke CreateFromVendor PayToVendor
						invoked.VendorGroup = VendorGroup
						invoked.Vendor	  = Vendor
						invoked.PayVendor   = Vendor
						invoked.PayType		= "P"
						if (Vendor = PayVendor)
							invoked.Default		= true
				if (Vendor != PayVendor
				and PayVendorPayToVendorRel !exist)
					invoke CreateFromVendor PayToVendor
						invoked.VendorGroup = VendorGroup
						invoked.Vendor	  = Vendor
						invoked.PayVendor   = PayVendor
						invoked.PayType		= "P"
						invoked.Default		= true

				if (PerformVATValidation
				and	VATRegistrationInformationChanged)	
					invoke ValidateVATRegistrationNumber
				
				if (TransientAttachment entered)	
				    invoke Create VendorAttachment
				    	invoked.VendorGroup 	= VendorGroup
				        invoked.Vendor			= Vendor
				        invoked.Description		= TransientAttachmentDescription
				        invoked.Attachment		= TransientAttachment

				if (CommentText entered or Title entered)
					invoke Create VendorComment
						invoked.VendorGroup     = VendorGroup
						invoked.Vendor          = Vendor
						invoked.CommentText     = CommentText
						invoked.Title           = Title
						invoked.PrintCode       = PrintCode
						invoked.DateRange.Begin = DateRange.Begin
						invoked.DateRange.End   = DateRange.End
						invoked.Company			= TransPayablesCompany
						invoked.PayGroup		= PayGroup
									








		UpdateVendorReferenceField is an Instance Action 
			restricted
			Parameters
				PrmReference1			is a Reference
			Action Rules
				Reference1					= PrmReference1
				BypassSupplierBODTrigger	= true

		UpdateVendorStatusField is an Instance Action 
			restricted
			Parameters
				PrmVendorStatus		 is AlphaUpper size 1
			Action Rules
				VendorStatus				= PrmVendorStatus
				BypassSupplierBODTrigger	= true

		UpdateBODIdFields is an Instance Action
			restricted
			refresh and lock this instance
			Parameters
				PrmAccountingEntity  is Alpha size 22
					default label is "AccountingEntity"
				PrmLocation		  is Alpha size 22
					default label is "Location"
				PrmDocumentID		is Alpha size 100
					default label is "DocumentID"
				PrmRevision		  is Alpha size 22
					default label is "Revision"
				PrmSystemOfRecord	is Alpha size 1
					default label is "SystemOfRecord"
				PrmVariationID	is Alpha size 22
					default label is "VariationID"
			Action Rules
				if (bod id.AccountingEntity != PrmAccountingEntity)
					bod id.AccountingEntity	= PrmAccountingEntity
				if (bod id.Location != PrmLocation)
					bod id.Location				= PrmLocation
				if (bod id.DocumentID != PrmDocumentID)
					bod id.DocumentID			= PrmDocumentID
				if (bod id.Revision != PrmRevision)
					bod id.Revision				= PrmRevision
				if (bod id.SystemOfRecord != PrmSystemOfRecord)
					bod id.SystemOfRecord		= PrmSystemOfRecord
				if (bod id.VariationID != PrmVariationID)
					bod id.VariationID		= PrmVariationID

		UpdatePrimaryContact		is an Instance Action
			restricted
			Parameters
				PrmContactName		is a VendorName 
					holds pii
				PrmPhoneNumber		is a TelephoneNumber 
					holds pii
				PrmMobileNumber		is a MobilePhone 
					holds pii
				PrmFaxNumber		is a FaxNumber
				PrmEmailAddress		is a EmailAddressMulti 
					holds pii
				PrmTwitterID		is a TwitterID
				PrmSocialNetworkID2	is a SocialNetworkID2
				PrmSocialNetworkID3	is a SocialNetworkID3
				PrmSocialNetworkID4	is a SocialNetworkID4
				PrmSocialNetworkID5	is a SocialNetworkID5

			Action Rules
				ContactName		= PrmContactName
				PhoneNumber			= PrmPhoneNumber
				MobileNumber		= PrmMobileNumber
				FaxNumber			= PrmFaxNumber
				EmailAddress		= PrmEmailAddress
				TwitterID			= PrmTwitterID
				SocialNetworkID2	= PrmSocialNetworkID2
				SocialNetworkID3	= PrmSocialNetworkID3
				SocialNetworkID4	= PrmSocialNetworkID4
				SocialNetworkID5	= PrmSocialNetworkID5

		UpdateProcurementCard is an Instance Action
			restricted
			Parameters
				PrmProcurementCardNbr	is a ProcurementCardNumber
			Parameter Rules
				PrmProcurementCardNbr
					initial value is ProcurementCardNumber
					constraint (ProcurementCardNumber != PrmProcurementCardNbr)
						"CannotChangeTheNumberToTheSameNumber"
			Action Rules
				ProcurementCardNumber	= PrmProcurementCardNbr
				MaskedProcurementCard	= ProcurementCardNumber

		Delete is a Delete Action
			Entrance Rules



				if (Customer entered
				or  CustomerGroup entered)
					invoke SetVendor Customer
						invoked.PayablesVendorGroup	= blank
						invoked.PayablesVendor			= blank

				if (PayVendor = Vendor)
					PayVendor = blank

				include DeleteRules

				for each VendorBalance set
					constraint (each.CurrentBalance not entered
					and		 each.DraftBalance   not entered)
						"BalancesExistForVendor<Vendor>"						 








				invoke Delete VendorLocationRel
				invoke FastDelete VendorContactRel
				invoke DeleteAddress VendorAddressesRel
				invoke Delete MobileSupplyChainVendorRel

		SetDefaultDiversityCode is an Instance Action
			restricted
			Parameters
				PrmDiversityCode is a PayablesDiversityCode
			Parameter Rules
				PrmDiversityCode
					constraint (PrmDiversityCode != DiversityCode)
						"CannotChangeDiversityCodeToTheSameCode"
			Action Rules
				DiversityCode	= PrmDiversityCode

		SetCustomer is an Instance Action
			restricted
			Parameters
				PrmCustomerGroup	is a CustomerGroup
				PrmCustomer			is a Customer
			Action Rules
				if (PrmCustomerGroup entered
				and PrmCustomer entered)
					constraint ((CustomerGroup not entered and Customer not entered)
					or (CustomerGroup = PrmCustomerGroup and Customer = PrmCustomer))
						"VendorIsAlreadyLinkedWithAnotherCustomer"
				CustomerGroup	= PrmCustomerGroup
				Customer		= PrmCustomer











		PutVendorOnHold is an Instance Action
			valid when (!OnHold)
			Parameters
				VendorHoldCode is a PayablesHoldCode
			Parameter Rules
				VendorHoldCode
					required
					constraint (VendorHoldCode.HoldOnVendor entered)
						"HoldCodeDoesNotExistOrIsNotValidForVendors"			 
			Action Rules
				invoke Delete PayablesOnHoldRel
				invoke Create PayablesOnHoldRel
					invoked.HoldCode = VendorHoldCode
				OnHold = true


		PutAllUnpaidVendorInvoicesOnHold is an Instance Action
			Parameters
				InvoiceHoldCode is a PayablesHoldCode
				InvoiceCompany  is a PayablesCompany
			Parameter Rules
				InvoiceCompany
					required
				InvoiceHoldCode
					required
					constraint (InvoiceHoldCode.HoldOnInvoice entered)
						"HoldCodeMustBeForInvoices"
			Action Rules

				LocalStatus = 0
				for each PayablesInvoicePaymentsByStatusRel
					if (each.Company = InvoiceCompany)
						invoke PutOnHold each
							invoked.InvoiceHoldCode = InvoiceHoldCode

				LocalStatus = 1
				for each PayablesInvoicePaymentsByStatusRel
					if (each.Company = InvoiceCompany)
						invoke PutOnHold each
							invoked.InvoiceHoldCode = InvoiceHoldCode

		TakeOffHold is an Instance Action
			valid when (OnHold)
			Action Rules
				constraint (!IsIntercompanyBillingDefaultVendor)
					"VendorIsDefaultVendorForIntercompanyBillingForCompany<first PayablesCompanyWithICBDefaultRel.Company>;CannotTakeOffHold"

				invoke Delete PayablesOnHoldRel
				OnHold = false

		TakeOffHoldFromPaymentClose is an Instance Action
			restricted
			default label is untranslatable
			Action Rules
				OnHold 			= false
				LastUpdateBy	= actor
				LastUpdateDate 	= current timestamp

		SetHoldCode is an Instance Action
			restricted
			Parameters
				VendorHoldCode is a PayablesHoldCode
			Action Rules
				invoke Delete PayablesOnHoldRel
				if (VendorHoldCode entered)
					invoke Create PayablesOnHoldRel
						invoked.HoldCode = VendorHoldCode
					OnHold = true
				else
					OnHold = false











		SetDefaultPayVendor is an Instance Action
			restricted
			Parameters
				PrmPayVendor is a PayVendor
			Action Rules
				PayVendor = PrmPayVendor


















		UpdateGlobalLocationNumber is an Instance Action
			restricted
			Parameters
				PrmGlobalLocationNumber	is a GlobalLocationNumber
			Action Rules
				GlobalLocationNumber	=	PrmGlobalLocationNumber


		DeleteVertexResultsFiles is an Instance Action

			valid when (HasVertexConfig)			

			Parameters
				DeleteFilesAfterUpdate	  is Boolean
					default label is "DeleteVertexResultsFiles"
			Local Fields
			Action Rules
				if (DeleteFilesAfterUpdate)
					include DeleteVertexResultsFiles
					if (VertexLookupResultsRel exist)	
						for each VertexLookupResultsRel
							invoke Update each
								invoked.Status = 1



		UpdateVertexTaxCode is an Instance Action

			valid when (HasVertexConfig)			

			run in background

			completion message is "<CompletionMessage>"

			Parameters

			Parameter Rules

			Local Fields
				LocalTaxCode is a TaxCode

			Action Rules
				MultipleTaxCodes = false
				WebServiceError  = false

				initialize WebServiceErrorMessage
				initialize LocalLookupKey
				initialize LocalResponseBusclassKey
				initialize LocalSequence
				initialize LocalTaxCode
				initialize CalculateTax
				CalculateTax.RelatedObjectReference			= reference to this instance
				CalculateTax.System								= "AP"
				CalculateTax.CallingModule						= "Vendor"
				CalculateTax.VertexQuantumOption				= "G"
				CalculateTax.TaxEntity							= blank
				CalculateTax.InFinanceEnterpriseGroup		= VendorGroup.BusinessGroup.FinanceEnterpriseGroup	
				CalculateTax.VendorGrp							= VendorGroup
				CalculateTax.PostalAddress						= CurrentAddressRel.PostalAddress

				LocalTaxCode									= CalculateTax.ReturnedGeoCode
				MultipleTaxCodes								= CalculateTax.MultipleTaxAreaIds
				WebServiceError									= CalculateTax.WebServiceError
				WebServiceErrorMessage							= CalculateTax.WebServiceErrorMessage



				if (LocalTaxCode entered)
					TaxCode = LocalTaxCode
				if (LocalTaxCode entered
				and !MultipleTaxCodes
				and CalculateTax.OutputErrorNumber not entered)
					if (VendorPostalCode not entered)
						invoke Update CurrentAddressRel
							invoked.PostalAddress.PostalCode	= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].PostalCode
							invoked.PostalAddress.County		= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].County


					if (VertexLookupResultsRel exist)
						for each VertexLookupResultsRel
							invoke Update each
								invoked.Status = 1



		BatchUpdateWithVertexTaxAreaId is a Set Action

			valid when (HasVertexConfig)			
			completion message is "<CompletionMessage>"

			Parameters
				PrmProcessGroup		is Alpha 50
					default label is "ProcessGroup"
				PrmEnterpriseGroup	is a VertexConfig
					default label is "FinanceEnterpriseGroup"
				PrmVendorGroup		is a VendorGroup
					default label is "VendorGroup"
				PrmVendorRange		is a VendorRange
					default label is "VendorRange"
				PrmDateRange	  is a DateRange5
					default label is "CreateDateRange"
				PrmReadOnly		  is Boolean
					default label is "ReadOnly"
				EntityTaxCodeDefault is like TaxCode	
				PrmTaxEntity		 is like TaxEntity	
					default label is "TaxEntity"
			Parameter Rules
				PrmEnterpriseGroup
					required
				PrmVendorGroup
					required
				PrmVendorRange
					if (PrmVendorRange not entered
					and PrmDateRange entered)
						PrmVendorRange.ToVendor = 999999999
				PrmDateRange
					if (PrmDateRange not entered)
						PrmDateRange.End = current corporate date + 1 day	










			Local Fields
				LocalTaxCode			is like TaxCode
				CompletionMessage		is Alpha 150
				RecordCount				is Numeric 10
				InternalCreateDate		is Date

			Instance Selection
				where (PrmEnterpriseGroup = VendorGroup.BusinessGroup.FinanceEnterpriseGroup
				and  ((PrmVendorGroup entered				
				and	   PrmVendorGroup = VendorGroup)		
				or	   PrmVendorGroup not entered)			

				and	Vendor.VendorStatus.Active


				and	Vendor within PrmVendorRange
				and	CreateDate within PrmDateRange)		


			Sort Order
				Vendor

			Accumulators


			Action Rules
				Empty Set Rules
					CompletionMessage = "<CompletionMessage>"

				Set Rules
					Entrance Rules
						constraint (VertexConfigRel exist)
							"VertexConfigurationNotSetUp;CheckIfTaxEntitySetUpToUseVertex"
						initialize RecordCount
						
					Exit Rules

				Vendor Set Rules
					Entrance Rules

					Exit Rules

				Instance Rules



					InternalCreateDate = create date

					if (PrmDateRange entered

					and CreateDate within PrmDateRange)
						increment RecordCount
						initialize CalculateTax
						CalculateTax.RelatedObjectReference			= reference to this instance
						CalculateTax.System								= "AP"
						CalculateTax.CallingModule						= "Vendor"
						CalculateTax.VertexQuantumOption				= "G"
						CalculateTax.TaxEntity							= PrmTaxEntity			
						CalculateTax.InFinanceEnterpriseGroup			= PrmEnterpriseGroup	
						CalculateTax.VendorGrp							= VendorGroup
						CalculateTax.PostalAddress						= CurrentAddressRel.PostalAddress
						CalculateTax.EntityTaxCodeDefault				= EntityTaxCodeDefault
						LocalTaxCode									= CalculateTax.ReturnedGeoCode
						MultipleTaxCodes								= CalculateTax.MultipleTaxAreaIds
						WebServiceError									= CalculateTax.WebServiceError
						WebServiceErrorMessage							= CalculateTax.WebServiceErrorMessage
						CalculateTaxOutputMessage						= CalculateTax.OutputErrorMessage
						OldTaxCode = TaxCode
						NewTaxCode = LocalTaxCode
						if (LocalTaxCode entered
						and !WebServiceError
						and !PrmReadOnly)
							TaxCode = LocalTaxCode

						if (!MultipleTaxCodes
						and !WebServiceError
						and CalculateTax.OutputErrorNumber not entered
						and LocalTaxCode entered
						and !PrmReadOnly)
							invoke Update CurrentAddressRel
								if (VendorPostalCode not entered)
									invoked.PostalAddress.PostalCode	= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].PostalCode
								if (VendorCounty not entered)
									invoked.PostalAddress.County		= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].County






						LocalLookupKey	= CalculateTax.ResultsLookupKey
						LocalSequence	= CalculateTax.ResultsLookupKeySequence
						if (VertexLookupResultsRel exist)
							invoke Delete VertexLookupResultsRel

						invoke Create VertexLookupResults
							invoked.VertexConfig						= PrmEnterpriseGroup	
								invoked.VertexLookupResults.LookupKey	= LocalLookupKey
								invoked.VertexLookupResults.Sequence	= LocalSequence
								invoked.RelatedObjectReference			= reference to this instance
								invoked.LookupVendorGroup				= VendorGroup
								invoked.LogSearchName					= VendorSearchName
								invoked.LookupVendor					= Vendor
								invoked.LookupVendorLocation			= blank
								invoked.LookupProcessGroup				= PrmProcessGroup
								invoked.ReturnedHighesTaxAreaId			= LocalTaxCode
								invoked.NumberOfTaxAreaIdsReturned		= CalculateTax.NumberOfTaxCodes
								invoked.LookupPostalAddress			= CurrentAddressRel.PostalAddress
								invoked.LookupTaxEntity					= blank
								invoked.ErrorNumber						= CalculateTax.OutputErrorNumber
								invoked.ErrorMessage					= DerivedLookupMessage	
								invoked.LookupDescription				= TaxCodeMessage	
								invoked.WebServiceError				= CalculateTax.WebServiceError
								invoked.WebServiceErrorMessage			= CalculateTax.WebServiceErrorMessage
								if (MultipleTaxCodes
								or  WebServiceError
								or  CalculateTax.OutputErrorNumber entered)
									invoked.Status = 0
								else
								if (LocalTaxCode not = OldTaxCode)
									invoked.Status = 1
								else
									invoked.Status = 2



		BuildVendorTextSetAction is a Set Action
			default label is "BuildTextIndex" 
			restricted
			Action Rules
				Instance Rules
					include BuildTextIndexes


		UpdateTaxCodeAndAddress is an Instance Action

			restricted
			Parameters
				PrmTaxCode		is like TaxCode
				PrmCountry		is a Country
				PrmState		is a StateProvince
				PrmZip			is a PostalCode
				PrmCounty		is a County
			Parameter Rules
			Action Rules

				if (PrmTaxCode entered)
					TaxCode = PrmTaxCode
				invoke Update CurrentAddressRel
					if (VendorPostalCode not entered)
						invoked.PostalAddress.PostalCode	= PrmZip
					if (VendorCounty not entered)
						invoked.PostalAddress.County		= PrmCounty


		CreateAPClerkSmartReconVendor is an Instance Action
			default label is "AddVendor"

			valid when (FinanceResourceInContext)
			Action Rules
				invoke Create APClerkSmartReconVendor
					invoked.HROrganization					= FinanceResource.HROrganization
					invoked.FinanceResource					= FinanceResource.FinanceResource
					invoked.VendorGroup						= VendorGroup
					invoked.Vendor							= Vendor


		SetImportStatus is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmVendorStatus						  is AlphaUpper size 1
					States
						Active					value is "A"
						Inactive				value is "I"
						InactiveForPOAdditions	value is "D"
			Action Rules
				BypassBODActionExitRules		= true
				VendorStatus					= PrmVendorStatus

				if (VendorStatus changed
				and VendorStatus.Inactive
				and VendorConversionResult.Status = 2)	
					for each VendorLocationRel
						invoke FastUpdate each
							invoked.Status = "I"

				if (VendorStatus changed		
				and VendorStatus.InactiveForPOAdditions
				and VendorConversionResult.Status = 2)
					for each VendorLocationRel
						invoke FastUpdate each
							invoked.Status = "D"

		BODDataInitialLoadVendorCriteria is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmVendorGroup			is a VendorGroup
				PrmFromVendor			is a Vendor
				PrmToVendor			is a Vendor
			Parameter Rules

			Instance Selection
				where  (((PrmVendorGroup entered
				and		  PrmVendorGroup = VendorGroup)
				or		  PrmVendorGroup not entered)
				and	((PrmFromVendor entered
				and		 PrmFromVendor <= Vendor)
				or		 PrmFromVendor not entered)
				and	((PrmToVendor entered
				and		 PrmToVendor >= Vendor)
				or		 PrmToVendor not entered)
				and	  (VendorStatus.Active = true))

			Sort Order
				VendorGroup

			Action Rules
				VendorGroup Set Rules
					Entrance Rules

					Exit Rules

				Instance Rules
					if (VendorGroup.FinanceEnterpriseGroup.BODTrigger)
						ActionCode	= ActionCode.Create
						increment bod id.VariationID







						invoke TriggerSupplierPartyMaster VendorGroup
							invoked.PrmVendor		= Vendor
							invoked.ActionCode		= ActionCode








		ExcludeInvoiceTemplate is an Instance Action
			valid when (!HasCustomer)
			default label is "ExcludeInvoiceTemplates"
			Parameters
				Basic			is Boolean
				TaxInvoice		is Boolean
				MatchInvoice	is Boolean
				ServiceContract is Boolean
				Freight			is Boolean

			Parameter Rules
				Basic
					initial value is DerivedExcludeBasic
				TaxInvoice
					initial value is DerivedExcludeTaxInvoice
				MatchInvoice
					initial value is DerivedExcludeMatchInvoice
				ServiceContract
					initial value is DerivedExcludeServiceContract
				Freight
					initial value is DerivedExcludeFreight
			Action Rules
				LocalInvoiceTemplate = 0
				if (Basic)
					if (LocalInvoiceTemplateExclusionRel not exists)
						invoke Create LocalInvoiceTemplateExclusionRel
				else
					if (LocalInvoiceTemplateExclusionRel exists)
						invoke Delete LocalInvoiceTemplateExclusionRel

				LocalInvoiceTemplate = 1
				if (TaxInvoice)
					if (LocalInvoiceTemplateExclusionRel not exists)
						invoke Create LocalInvoiceTemplateExclusionRel
				else
					if (LocalInvoiceTemplateExclusionRel exists)
						invoke Delete LocalInvoiceTemplateExclusionRel

				LocalInvoiceTemplate = 3
				if (Freight)
					if (LocalInvoiceTemplateExclusionRel not exists)
						invoke Create LocalInvoiceTemplateExclusionRel
				else
					if (LocalInvoiceTemplateExclusionRel exists)
						invoke Delete LocalInvoiceTemplateExclusionRel

				LocalInvoiceTemplate = 4
				if (MatchInvoice)
					if (LocalInvoiceTemplateExclusionRel not exists)
						invoke Create LocalInvoiceTemplateExclusionRel
				else
					if (LocalInvoiceTemplateExclusionRel exists)
						invoke Delete LocalInvoiceTemplateExclusionRel

				LocalInvoiceTemplate = 5
				if (ServiceContract)
					if (LocalInvoiceTemplateExclusionRel not exists)
						invoke Create LocalInvoiceTemplateExclusionRel
				else
					if (LocalInvoiceTemplateExclusionRel exists)
						invoke Delete LocalInvoiceTemplateExclusionRel


		LinkWithARCustomer is an Instance Action
			default label is "LinkWithCustomer"
			valid when (!HasCustomer)
			Parameters
				PrmCreateNewCustomer		is Boolean
				PrmCustomerGroup			is a CustomerGroup
				PrmCustomer				 is a Customer
					context of PrmCustomerGroup
				PrmCustomerName				is a Name
				SearchName
				LegalName					is a VendorName 
					holds pii
				PrmPostalAddress			is a PostalAddressV2	
					holds pii
				ReceivableCompany
				ReceivableDefaultCode
			Parameter Rules
				PrmCustomerGroup
					required
				PrmCustomer
					if (!PrmCreateNewCustomer)
						required
				PrmCustomerName
					initial value is VendorName
					if (PrmCreateNewCustomer)
						required
				PrmPostalAddress
					if (PrmCreateNewCustomer)
						default to VendorAddress
						required

				ReceivableCompany
					if (PrmCreateNewCustomer)
						required
				ReceivableDefaultCode
					if (PrmCreateNewCustomer)
						required
			Action Rules
				if (PrmCreateNewCustomer)
					invoke Create Customer
						assign result to NewCustomer
						invoked.CustomerGroup						= PrmCustomerGroup
						invoked.Name								= PrmCustomerName
						invoked.PostalAddress						= PrmPostalAddress
						invoked.VendorGroupAndVendor.VendorGroup	= VendorGroup
						invoked.VendorGroupAndVendor.Vendor			= Vendor
					invoke Create CompanyCustomer
						assign result to NewCompanyCustomer
						invoked.Company					= ReceivableCompany
						invoked.Customer				= NewCustomer.Customer
						invoked.ReceivableDefaultCode	= ReceivableDefaultCode
						invoked.TaxExempt				= ReceivableDefaultCode.TaxExempt

				if (!PrmCreateNewCustomer)
					invoke SetCustomer
						invoked.PrmCustomerGroup	= PrmCustomerGroup
						invoked.PrmCustomer			= PrmCustomer
			Exit Rules
				if (!PrmCreateNewCustomer)
					invoke SetVendor Customer
						invoked.PayablesVendorGroup			= VendorGroup
						invoked.PayablesVendor				= Vendor


		ReleaseToARInterface is an Instance Action
			valid when (IsSelected)
			Parameters
				PrmReceivableCompany			is a ReceivableCompany
				PrmPayablesCompany				is a PayablesCompany
				PrmFEG							is a FinanceEnterpriseGroup
				PrmInvoice						is AlphaUpper size 22
				PrmTransactionType				is AlphaUpper size 1
				PrmARPostDate					is Date
				PrmARProcessLevel				is a ReceivableProcessLevel
					context of PrmReceivableCompany
				PrmInvoiceDate					is Date
				PrmTermsCode					is a TermsCode
					context of PrmFEG
				PrmMemoReason					is a CreditDebitMemoReason
					context of PrmReceivableCompany
				PrmARAccrualCode				is a ReceivableGeneralLedgerCode
					context of PrmReceivableCompany
				PrmDueDate						is Date
				PrmDescription					is a Description
				PrmDistributionClearingAccount	is a FinanceCodeBlock
				PrmDefaultIncomeCode			is like PayablesIncomeCode
				PrmDetailReceivablesInterface	is Boolean
				PrmAutoInvoice					is Boolean
				PrmHSNSACCode					is a HSNSACCode
					context of PrmFEG

			Parameter Rules
				PrmPayablesCompany
					initial value is PrmReceivableCompany
					default to PrmReceivableCompany

				PrmDetailReceivablesInterface
					initial value is PrmPayablesCompany.DetailReceivablesInterface

				PrmFEG
					initial value is PrmReceivableCompany.Company.GeneralLedgerCompany.FinanceEnterpriseGroup
					default to PrmReceivableCompany.Company.GeneralLedgerCompany.FinanceEnterpriseGroup

				PrmReceivableCompany
					required
						"CompanyIsRequired"

				PrmARPostDate
					initial value is current corporate date
					default to current corporate date

					required
						"PostDateIsRequired"

					if (PrmReceivableCompany.CompanySystemClosingControlRel.Control and PrmReceivableCompany.VerifyGLDateWithinGLDateRange)
						constraint (PrmARPostDate within PrmReceivableCompany.CompanySystemClosingControlRel.ValidEntryDate)
							"PostDateIsNotWithinValidEntryDatesForCompany;ValidDateRangeIs<PrmReceivableCompany.CompanySystemClosingControlRel.ValidEntryDate.Begin>-<PrmReceivableCompany.CompanySystemClosingControlRel.ValidEntryDate.End>"

					if (PrmPayablesCompany.CompanySystemClosingControlRel.Control)
						constraint (PrmARPostDate within PrmPayablesCompany.CompanySystemClosingControlRel.ValidEntryDate)
							"PostDateOf<PrmARPostDate>NotWithinValidEntryDatesForCompany<PrmPayablesCompany.Company>;ValidDateRangeIs<PrmPayablesCompany.CompanySystemClosingControlRel.ValidEntryDate.Begin>-<PrmPayablesCompany.CompanySystemClosingControlRel.ValidEntryDate.End>"

				PrmARProcessLevel
					required
						"ARProcessLevelIsRequired"

				PrmInvoiceDate
					initial value is current corporate date
					default to current corporate date

				PrmTermsCode
					if (PrmDueDate entered)
						cannot be entered
							"DueDateEntered,CannotEnterTermsCode"
					constraint (not PrmTermsCode.IsFixedTerms)
						"PaymentTermsCannotBeFixedType"
					constraint (not PrmTermsCode.IsMultPayTerms)
						"PaymentTermsCannotBeMultipleType"

				PrmMemoReason
					required
						"MemoReasonIsRequired"

				PrmDueDate
					if (PrmTermsCode entered)
						cannot be entered
							"TermsCodeEntered,CannotEnterDueDate"

				PrmDistributionClearingAccount
					required
						"ClearingAccountIsRequired"
						
				PrmHSNSACCode
					if (PrmReceivableCompany.GeneralLedgerCompany.RequireHSNSACCode)
						required
							"HSN/SACCodeIsRequired"
					else
						cannot be entered
							"CannotEnter,HSN_/SACCodeFlagIsNotSetAtGlobalLedgerCompany"

			Action Rules
				PrmPayablesCompany = PrmReceivableCompany

				LocalRunProgram		= LocalRunProgram.CashRequirements
				constraint (!ActivePayablesProcessingMonitorRel exists)
					"CannotSelect;CashRequirementsRunning"

				LocalRunProgram		= LocalRunProgram.InvoiceDistributionClosing
				constraint (!ActivePayablesProcessingMonitorRel exists)
					"CannotSelect;InvoiceDistributionClosingRunning"

				if (!PrmAutoInvoice)
					if ((PrmReceivableCompany.Company.PayablesCompany.DetailReceivablesInterface
					and !PrmDetailReceivablesInterface)
					or (!PrmReceivableCompany.Company.PayablesCompany.DetailReceivablesInterface
					and PrmDetailReceivablesInterface))
						confirmation required
							"AreYouSureYouWantToOverrideTheCompanyDetailReceivablesInterfaceTo:<PrmDetailReceivablesInterface>?"

				invoke PutVendorOnHold
					invoked.VendorHoldCode = PrmPayablesCompany.ARInterfaceHoldCode

				constraint (HasCustomerLinked)
					"CustomerIsNotLinkedToThisVendor"

				LocalCompany		= PrmReceivableCompany
				PrmPayablesCompany	= LocalCompany


				constraint (APToARInterfaceSelectedRel exists)
					"NoRecordSelectedForCompany<LocalCompany>"

				if (OtherAPToARInterfaceRecordRel exists)
					confirmation required
						"SelectedRecordsForCompany<LocalCompany>WillBeProcessed"

				if (!PrmDetailReceivablesInterface)
					increment PrmPayablesCompany.LastARInterfaceInvoice

					if (PrmInvoice not entered)

						if(!PrmAutoInvoice)
							confirmation required
								"InvoiceNumberNotEntered,DefaultNumberingSchemeWillBeUsed"

						PrmInvoice = PrmPayablesCompany.ARInterfaceInvoicePrefix + "-APTOAR-" + ZeroFilledPayablesCompany + PrmPayablesCompany.ZeroPaddedLastARInterfaceInvoice

					LocalTotalTransactionAmount = sum APToARInterfaceSelectedRel.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount
					LocalCurrency				= APToARInterfaceSelectedRel.PayablesInvoice.Company.Currency

					constraint (LocalTotalTransactionAmount ! = 0)
						"SelectedAmountCanNotBeEqualToZeroToRelease"

					if (LocalTotalTransactionAmount > 0)
						PrmTransactionType			= "C"
						LocalInvoiceAmount			= LocalTotalTransactionAmount 
					else
						PrmTransactionType			= "D"
						LocalInvoiceAmount			= LocalTotalTransactionAmount * -1

					LocalTransactionType			= PrmTransactionType

					LocalInvoice 					= PrmInvoice
					constraint (!ReceivableInvoiceRel exists)
						"InvoiceAlreadyExists"

					if(LocalCurrency	!=	CompanyCustomerRel.Currency)
						LocalCurrency = CompanyCustomerRel.Currency

						CurrencyWork.FinanceEnterpriseGroup				= VendorGroup.BusinessGroup.FinanceEnterpriseGroup
						CurrencyWork.ExchangeDate						= PrmInvoiceDate
						CurrencyWork.TransactionAmount					= LocalInvoiceAmount
						CurrencyWork.FromCurrency						= APToARInterfaceSelectedRel.PayablesInvoice.Company.Currency
						CurrencyWork.BaseAmount.ToCurrency				= LocalCurrency
						LocalInvoiceAmount								= CurrencyWork.BaseAmount.OutputCurrencyAmount

					invoke Create ReceivableInvoice
						assign result to NewReceivableInvoice
						invoked.Company												= PrmReceivableCompany
						invoked.Customer											= Customer
						invoked.ReceivableInvoiceType								= PrmTransactionType
						invoked.AlternateReceivableInvoiceType						= PrmTransactionType
						invoked.ReceivableInvoice									= PrmInvoice
						invoked.BatchNumber											= current corporate date
						invoked.ReceivableProcessLevel								= PrmARProcessLevel
						invoked.ReceivableGeneralLedgerCode							= PrmARAccrualCode
						invoked.GeneralLedgerDate									= PrmARPostDate
						invoked.TransactionDate										= PrmInvoiceDate	
						invoked.CreditDebitMemoReason								= PrmMemoReason
						invoked.TermsCode											= PrmTermsCode
						invoked.Origin												= "A"
						invoked.System												= "AP"
						invoked.TransientSignedTransactionAmount					= LocalInvoiceAmount
						invoked.InvoiceAmount.CurrencyAmount						= LocalInvoiceAmount

						invoked.OriginalCurrency									= LocalCurrency

					invoke Create ReceivableInvoiceDetail
						fill in fields from NewReceivableInvoice.ReceivableInvoice
						invoked.ReceivableInvoiceDetail.ReceivableInvoiceDetailType	= PrmTransactionType
						invoked.ReceivableInvoiceDetail.Invoice						= PrmInvoice
						invoked.ReceivableInvoiceDetail.PaymentSeq					= 1
						invoked.Status												= 1
						invoked.InvoiceAmount.CurrencyAmount						= LocalInvoiceAmount
						invoked.OriginalCurrency									= LocalCurrency
						if (PrmDueDate not entered)
							invoked.TransientCalculateTerms							= true
						else
							invoked.DueDate											= PrmDueDate
						if (PrmReceivableCompany.GeneralLedgerCompany.RequireHSNSACCode)
							invoked.HSNSACCode										= PrmHSNSACCode

					invoke Create ReceivableGLDistribution
						invoked.FinanceEnterpriseGroup								= PrmReceivableCompany.FinanceEnterpriseGroup
						invoked.ReceivableCompanyGroup.GlCompany					= PrmReceivableCompany
						invoked.ReceivableCompanyDataGroup.TransactionCompany		= PrmReceivableCompany
						invoked.ReceivableCompanyGroup.OriginCompany				= PrmReceivableCompany
						invoked.GeneralLedgerDate									= PrmInvoiceDate
						invoked.ReceivableCompanyDataGroup.Customer					= Customer
						invoked.Origin												= "RM"
						invoked.AccumulationType									= "D"
						invoked.DistributionSource									= "A"
						invoked.DocumentNumber										= PrmInvoice
						invoked.Status												= 0
						invoked.GeneralLedgerAccount								= PrmDistributionClearingAccount	
						invoked.DistributionAmount.CurrencyAmount					= LocalInvoiceAmount
						invoked.BatchNumber											= NewReceivableInvoice.BatchNumber
						invoked.Invoice												= NewReceivableInvoice.ReceivableInvoice
						invoked.TransType											= NewReceivableInvoice.ReceivableInvoiceType
						invoked.TransactionDate										= PrmInvoiceDate
						invoked.ReceivableCompanyDataGroup.ReceivableProcessLevel	= NewReceivableInvoice.ReceivableProcessLevel
						invoked.OriginalCurrency									= NewReceivableInvoice.OriginalCurrency
						invoked.DistributionAmount.FunctionalAmount.EnteredCurrencyRate	= NewReceivableInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate
						invoked.CurrencyDecimalsNumber								= NewReceivableInvoice.CurrencyDecimalsNumber
						if (PrmReceivableCompany.GeneralLedgerCompany.RequireHSNSACCode)
							invoked.HSNSACCode										= PrmHSNSACCode
							invoked.TransientHSNSACCode								= true

					invoke Unreleased.Release NewReceivableInvoice.ReceivableInvoice

				if (DerivedAmountEligibleForCredit entered)

					for each APToARInterfaceSelectedForCreditsRel

						LocalSuffix												= PrmPayablesCompany.LastAPClearingMemo + 1
						LocalInvoice											= "APTOARCPY" + ZeroFilledPayablesCompany + "-" + ZeroFilledLastAPClearingMemo

						increment PrmPayablesCompany.LastAPClearingMemo

						invoke CreateInvoice PayablesInvoice
							assign result to NewPayablesInvoice
							fill in fields from each.PayablesInvoice
							invoked.Company													= PrmPayablesCompany
							invoked.Vendor													= Vendor
							invoked.PayablesInvoice.Invoice									= LocalInvoice
							invoked.PayablesInvoice.Suffix									= blank
							invoked.PayablesInvoice.CancelSequence							= blank
							invoked.AuthorityCode											= each.PayablesInvoice.AuthorityCode
							invoked.Description												= "AP To AR Clearing Credit Memo" + " " + each.PayablesInvoice.DerivedClearingInvoiceType + " " + each.PayablesInvoice.Invoice
							invoked.InvoiceType												= "C"

							invoked.InvoiceAmount.CurrencyAmount							= each.PayablesInvoice.InvoiceAmount.CurrencyAmount * -1
							invoked.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate		= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate
							invoked.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount	= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.AlternateAmount.EnteredCurrencyRate		= each.PayablesInvoice.InvoiceAmount.AlternateAmount.EnteredCurrencyRate
							invoked.InvoiceAmount.AlternateAmount.EnteredCurrencyAmount		= each.PayablesInvoice.InvoiceAmount.AlternateAmount.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.AlternateAmount2.EnteredCurrencyRate		= each.PayablesInvoice.InvoiceAmount.AlternateAmount2.EnteredCurrencyRate
							invoked.InvoiceAmount.AlternateAmount2.EnteredCurrencyAmount	= each.PayablesInvoice.InvoiceAmount.AlternateAmount2.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.AlternateAmount3.EnteredCurrencyRate		= each.PayablesInvoice.InvoiceAmount.AlternateAmount3.EnteredCurrencyRate
							invoked.InvoiceAmount.AlternateAmount3.EnteredCurrencyAmount	= each.PayablesInvoice.InvoiceAmount.AlternateAmount3.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ReportAmount1.EnteredCurrencyRate			= each.PayablesInvoice.InvoiceAmount.ReportAmount1.EnteredCurrencyRate
							invoked.InvoiceAmount.ReportAmount1.EnteredCurrencyAmount		= each.PayablesInvoice.InvoiceAmount.ReportAmount1.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ReportAmount2.EnteredCurrencyRate			= each.PayablesInvoice.InvoiceAmount.ReportAmount2.EnteredCurrencyRate
							invoked.InvoiceAmount.ReportAmount2.EnteredCurrencyAmount		= each.PayablesInvoice.InvoiceAmount.ReportAmount2.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ReportAmount3.EnteredCurrencyRate			= each.PayablesInvoice.InvoiceAmount.ReportAmount3.EnteredCurrencyRate
							invoked.InvoiceAmount.ReportAmount3.EnteredCurrencyAmount		= each.PayablesInvoice.InvoiceAmount.ReportAmount3.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ReportAmount4.EnteredCurrencyRate			= each.PayablesInvoice.InvoiceAmount.ReportAmount4.EnteredCurrencyRate
							invoked.InvoiceAmount.ReportAmount4.EnteredCurrencyAmount		= each.PayablesInvoice.InvoiceAmount.ReportAmount4.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ReportAmount5.EnteredCurrencyRate			= each.PayablesInvoice.InvoiceAmount.ReportAmount5.EnteredCurrencyRate
							invoked.InvoiceAmount.ReportAmount5.EnteredCurrencyAmount		= each.PayablesInvoice.InvoiceAmount.ReportAmount5.EnteredCurrencyAmount * -1
							invoked.InvoiceCurrency											= each.PayablesInvoice.InvoiceCurrency
							invoked.VoucherNumber											= each.PayablesInvoice.VoucherNumber
							invoked.ProcessLevel											= each.PayablesInvoice.ProcessLevel
							invoked.AccrualCode												= each.PayablesInvoice.AccrualCode
							invoked.RemitToCode												= each.PayablesInvoice.RemitToCode
							invoked.PurchaseFromLocation									= each.PayablesInvoice.PurchaseFromLocation
							invoked.PayVendor												= each.PayablesInvoice.PayVendor
							invoked.InvoiceDate												= each.PayablesInvoice.InvoiceDate	

							invoked.DueDate													= each.PayablesInvoice.DueDate	
							invoked.TermsCode												= PrmTermsCode
							invoked.DistributionDate										= PrmARPostDate	
							invoked.InvoiceSource											= "C"
							invoked.Operator												= each.PayablesInvoice.Operator
							invoked.CashCode												= each.PayablesInvoice.CashCode
							invoked.BankTransactionCode										= each.PayablesInvoice.BankTransactionCode
							invoked.Status													= 0

						invoke Create PayablesInvoiceDistribution
							invoked.Company													= PrmPayablesCompany
							invoked.Vendor													= Vendor
							invoked.PayablesInvoice											= NewPayablesInvoice.PayablesInvoice
							invoked.DistributionType										= "D"
							invoked.DistributionDate										= PrmARPostDate
							invoked.PostingOption											= Vendor.VendorClass.PostingOption
							invoked.DistributionAccount										= PrmDistributionClearingAccount
							invoked.DistributionReference									= "AP To AR Clearing Credit Memo" + " " + each.PayablesInvoice.DerivedClearingInvoiceType + " " + each.PayablesInvoice.Invoice
							invoked.GLFinanceCodeBlock										= PrmDistributionClearingAccount
							invoked.GLTransactionAmount										= each.PayablesInvoice.InvoiceAmount.CurrencyAmount * -1
							invoked.DistributionAmount.CurrencyAmount						= each.PayablesInvoice.InvoiceAmount.CurrencyAmount * -1

							invoked.TransientAPToARClearingMemo							 = true
							if (PrmReceivableCompany.GeneralLedgerCompany.RequireHSNSACCode)
								invoked.HSNSACCode											= PrmHSNSACCode


						initialize PrmDefaultIncomeCode
						invoke UpdateDefaultIncomeCode NewPayablesInvoice.PayablesInvoice
							invoked.DefaultIncomeCode = PrmDefaultIncomeCode

						invoke UpdateIncomeCodeAndReportableAmount NewPayablesInvoice.PayablesInvoice.FirstPaymentRel
							invoked.InvoiceIncomeCode = PrmDefaultIncomeCode

						invoke Unreleased.Release NewPayablesInvoice.PayablesInvoice



						invoke TakeInvoiceOffHold each.PayablesInvoice.PayablesInvoice

						invoke Released.ApplyACreditToThisInvoice each.PayablesInvoice.PayablesInvoice
							invoked.PrmCompany											= PrmPayablesCompany
							invoked.PrmVendor											= Vendor
							invoked.PrmPayablesInvoice									= NewPayablesInvoice.PayablesInvoice
							invoked.PrmAppliedAmount									= each.PayablesInvoice.InvoiceAmount.CurrencyAmount
							invoked.PrmEnableAPToARInterface							= true

						if (PrmDetailReceivablesInterface)

							if (each.PayablesInvoice.InvoiceAmount.CurrencyAmount > 0)
								PrmTransactionType			= "C"
								LocalInvoiceAmount			= each.PayablesInvoice.InvoiceAmount.CurrencyAmount	
								LocalFunctionalAmount		= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount








							else
								PrmTransactionType			= "D"
								LocalInvoiceAmount			= each.PayablesInvoice.InvoiceAmount.CurrencyAmount * -1 
								LocalFunctionalAmount		= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount * -1








							if (PrmPayablesCompany.RetainInvoiceToAR)
								LocalInvoice = each.PayablesInvoice.Invoice
								LocalTransactionType = PrmTransactionType
								include ValidateReceivablesInvoiceNumberPrefix

								if (ValidateReceivablePrefix.ErrorNumber entered
								or ReceivableInvoiceRel exists)
									increment PrmPayablesCompany.LastARInterfaceInvoice
									PrmInvoice = PrmPayablesCompany.ARInterfaceInvoicePrefix + "-APTOAR-" + ZeroFilledPayablesCompany + PrmPayablesCompany.ZeroPaddedLastARInterfaceInvoice
								else
									PrmInvoice = each.PayablesInvoice.Invoice
							else
								increment PrmPayablesCompany.LastARInterfaceInvoice
								PrmInvoice = PrmPayablesCompany.ARInterfaceInvoicePrefix + "-APTOAR-" + ZeroFilledPayablesCompany + PrmPayablesCompany.ZeroPaddedLastARInterfaceInvoice

							invoke Create ReceivableInvoice
								assign result to NewReceivableInvoice
								invoked.Company												= PrmReceivableCompany
								invoked.Customer											= Customer
								invoked.ReceivableInvoiceType								= PrmTransactionType
								invoked.AlternateReceivableInvoiceType						= PrmTransactionType
								invoked.ReceivableInvoice									= PrmInvoice
								invoked.BatchNumber											= current corporate date
								invoked.ReceivableProcessLevel								= PrmARProcessLevel
								invoked.ReceivableGeneralLedgerCode							= PrmARAccrualCode
								invoked.GeneralLedgerDate									= PrmARPostDate
								invoked.TransactionDate										= each.PayablesInvoice.InvoiceDate	
								invoked.CreditDebitMemoReason								= PrmMemoReason
								invoked.TermsCode											= PrmTermsCode
								invoked.Origin												= "A"
								invoked.System												= "AP"
								invoked.TransientSignedTransactionAmount					= LocalInvoiceAmount
								invoked.InvoiceAmount.CurrencyAmount						= LocalInvoiceAmount

								invoked.OriginalCurrency									= each.PayablesInvoice.InvoiceCurrency	
								invoked.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate	= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate
								invoked.Description											= "Memo Entry Reason Code" + " " + each.PayablesInvoice.DerivedClearingInvoiceType + " " + each.PayablesInvoice.Invoice

							invoke Create ReceivableInvoiceDetail
								fill in fields from NewReceivableInvoice.ReceivableInvoice
								invoked.ReceivableInvoiceDetail.ReceivableInvoiceDetailType	= PrmTransactionType
								invoked.ReceivableInvoiceDetail.Invoice						= PrmInvoice
								invoked.ReceivableInvoiceDetail.PaymentSeq					= 1
								invoked.Status												= 1
								invoked.DueDate												= each.PayablesInvoice.DueDate	
								invoked.InvoiceAmount.CurrencyAmount						= LocalInvoiceAmount
								invoked.OriginalCurrency									= each.PayablesInvoice.InvoiceCurrency	
								invoked.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate		= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate
								invoked.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount	= LocalFunctionalAmount
















								invoked.ApplicationAmount.FunctionalAmount.EnteredCurrencyRate	= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate








								invoked.AdjustmentAmount.FunctionalAmount.EnteredCurrencyRate	= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate








								if (PrmReceivableCompany.GeneralLedgerCompany.RequireHSNSACCode)
									invoked.HSNSACCode											= PrmHSNSACCode
									
							invoke Create ReceivableGLDistribution
								invoked.FinanceEnterpriseGroup								= PrmReceivableCompany.FinanceEnterpriseGroup
								invoked.ReceivableCompanyGroup.GlCompany					= PrmReceivableCompany
								invoked.ReceivableCompanyDataGroup.TransactionCompany		= PrmReceivableCompany
								invoked.ReceivableCompanyGroup.OriginCompany				= PrmReceivableCompany
								invoked.GeneralLedgerDate									= PrmARPostDate	
								invoked.ReceivableCompanyDataGroup.Customer					= Customer
								invoked.Origin												= "RM"
								invoked.AccumulationType									= "D"
								invoked.DistributionSource									= "A"
								invoked.DocumentNumber										= PrmInvoice
								invoked.Status												= 0
								invoked.GeneralLedgerAccount								= PrmDistributionClearingAccount	
								invoked.DistributionAmount.CurrencyAmount					= LocalInvoiceAmount
								invoked.BatchNumber											= NewReceivableInvoice.BatchNumber
								invoked.Invoice												= NewReceivableInvoice.ReceivableInvoice
								invoked.TransType											= NewReceivableInvoice.ReceivableInvoiceType
								invoked.TransactionDate										= each.PayablesInvoice.InvoiceDate	
								invoked.ReceivableCompanyDataGroup.ReceivableProcessLevel	= NewReceivableInvoice.ReceivableProcessLevel
								invoked.OriginalCurrency									= NewReceivableInvoice.OriginalCurrency
								invoked.DistributionAmount.FunctionalAmount.EnteredCurrencyRate	= NewReceivableInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate
								invoked.CurrencyDecimalsNumber								= NewReceivableInvoice.CurrencyDecimalsNumber
								invoked.DistributionAmount.FunctionalAmount.EnteredCurrencyRate		= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate
								invoked.DistributionAmount.FunctionalAmount.EnteredCurrencyAmount	= LocalFunctionalAmount
















								invoked.Description													= "APTOAR Clearing Account"
								if (PrmReceivableCompany.GeneralLedgerCompany.RequireHSNSACCode)
									invoked.HSNSACCode												= PrmHSNSACCode
									invoked.TransientHSNSACCode										= true

							invoke Unreleased.Release NewReceivableInvoice.ReceivableInvoice

				if (DerivedAmountEligibleForDebit entered)

					for each APToARInterfaceSelectedForDebitsRel

						LocalSuffix												= PrmPayablesCompany.LastAPClearingMemo + 1
						LocalInvoice												= "APTOARCPY" + ZeroFilledPayablesCompany + "-" + ZeroFilledLastAPClearingMemo

						increment PrmPayablesCompany.LastAPClearingMemo

						invoke CreateInvoice PayablesInvoice
							assign result to NewPayablesInvoice
							fill in fields from each.PayablesInvoice
							invoked.Company													= PrmPayablesCompany
							invoked.Vendor													= Vendor
							invoked.PayablesInvoice.Invoice									= LocalInvoice
							invoked.PayablesInvoice.Suffix									= blank
							invoked.PayablesInvoice.CancelSequence							= blank
							invoked.AuthorityCode											= each.PayablesInvoice.AuthorityCode
							invoked.Description												= "AP To AR Clearing Debit Memo C" + " " + each.PayablesInvoice.Invoice
							invoked.InvoiceType												= "D"

							invoked.InvoiceAmount.CurrencyAmount							= each.PayablesInvoice.InvoiceAmount.CurrencyAmount * -1
							invoked.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate		= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate
							invoked.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount	= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.AlternateAmount.EnteredCurrencyRate		= each.PayablesInvoice.InvoiceAmount.AlternateAmount.EnteredCurrencyRate
							invoked.InvoiceAmount.AlternateAmount.EnteredCurrencyAmount		= each.PayablesInvoice.InvoiceAmount.AlternateAmount.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.AlternateAmount2.EnteredCurrencyRate		= each.PayablesInvoice.InvoiceAmount.AlternateAmount2.EnteredCurrencyRate
							invoked.InvoiceAmount.AlternateAmount2.EnteredCurrencyAmount	= each.PayablesInvoice.InvoiceAmount.AlternateAmount2.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.AlternateAmount3.EnteredCurrencyRate		= each.PayablesInvoice.InvoiceAmount.AlternateAmount3.EnteredCurrencyRate
							invoked.InvoiceAmount.AlternateAmount3.EnteredCurrencyAmount	= each.PayablesInvoice.InvoiceAmount.AlternateAmount3.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ReportAmount1.EnteredCurrencyRate			= each.PayablesInvoice.InvoiceAmount.ReportAmount1.EnteredCurrencyRate
							invoked.InvoiceAmount.ReportAmount1.EnteredCurrencyAmount		= each.PayablesInvoice.InvoiceAmount.ReportAmount1.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ReportAmount2.EnteredCurrencyRate			= each.PayablesInvoice.InvoiceAmount.ReportAmount2.EnteredCurrencyRate
							invoked.InvoiceAmount.ReportAmount2.EnteredCurrencyAmount		= each.PayablesInvoice.InvoiceAmount.ReportAmount2.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ReportAmount3.EnteredCurrencyRate			= each.PayablesInvoice.InvoiceAmount.ReportAmount3.EnteredCurrencyRate
							invoked.InvoiceAmount.ReportAmount3.EnteredCurrencyAmount		= each.PayablesInvoice.InvoiceAmount.ReportAmount3.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ReportAmount4.EnteredCurrencyRate			= each.PayablesInvoice.InvoiceAmount.ReportAmount4.EnteredCurrencyRate
							invoked.InvoiceAmount.ReportAmount4.EnteredCurrencyAmount		= each.PayablesInvoice.InvoiceAmount.ReportAmount4.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ReportAmount5.EnteredCurrencyRate			= each.PayablesInvoice.InvoiceAmount.ReportAmount5.EnteredCurrencyRate
							invoked.InvoiceAmount.ReportAmount5.EnteredCurrencyAmount		= each.PayablesInvoice.InvoiceAmount.ReportAmount5.EnteredCurrencyAmount * -1
							invoked.InvoiceCurrency											= each.PayablesInvoice.InvoiceCurrency
							invoked.VoucherNumber											= each.PayablesInvoice.VoucherNumber
							invoked.ProcessLevel											= each.PayablesInvoice.ProcessLevel
							invoked.AccrualCode												= each.PayablesInvoice.AccrualCode
							invoked.RemitToCode												= each.PayablesInvoice.RemitToCode
							invoked.PurchaseFromLocation									= each.PayablesInvoice.PurchaseFromLocation
							invoked.PayVendor												= each.PayablesInvoice.PayVendor
							invoked.InvoiceDate												= each.PayablesInvoice.InvoiceDate	

							invoked.DueDate													= each.PayablesInvoice.DueDate	
							invoked.TermsCode												= PrmTermsCode
							invoked.DistributionDate										= PrmARPostDate	
							invoked.InvoiceSource											= "C"
							invoked.Operator												= each.PayablesInvoice.Operator
							invoked.CashCode												= each.PayablesInvoice.CashCode
							invoked.BankTransactionCode										= each.PayablesInvoice.BankTransactionCode
							invoked.Status													= 0

						invoke Create PayablesInvoiceDistribution
							invoked.Company													= PrmPayablesCompany
							invoked.Vendor													= Vendor
							invoked.PayablesInvoice											= NewPayablesInvoice.PayablesInvoice
							invoked.DistributionType										= "D"
							invoked.DistributionDate										= PrmARPostDate
							invoked.PostingOption											= Customer.VendorGroupAndVendor.Vendor.VendorClass.PostingOption
							invoked.DistributionAccount										= PrmDistributionClearingAccount
							invoked.DistributionReference									= "AP To AR Clearing Debit Memo C" + " " + each.PayablesInvoice.Invoice
							invoked.GLFinanceCodeBlock										= PrmDistributionClearingAccount
							invoked.GLTransactionAmount										= each.PayablesInvoice.InvoiceAmount.CurrencyAmount * -1
							invoked.DistributionAmount.CurrencyAmount						= each.PayablesInvoice.InvoiceAmount.CurrencyAmount * -1

							invoked.TransientAPToARClearingMemo							 = true
							if (PrmReceivableCompany.GeneralLedgerCompany.RequireHSNSACCode)
								invoked.HSNSACCode											= PrmHSNSACCode


						initialize PrmDefaultIncomeCode
						invoke UpdateDefaultIncomeCode NewPayablesInvoice.PayablesInvoice
							invoked.DefaultIncomeCode = PrmDefaultIncomeCode

						invoke UpdateIncomeCodeAndReportableAmount NewPayablesInvoice.PayablesInvoice.FirstPaymentRel
							invoked.InvoiceIncomeCode = PrmDefaultIncomeCode


						invoke Unreleased.Release NewPayablesInvoice.PayablesInvoice


						invoke TakeInvoiceOffHold each.PayablesInvoice.PayablesInvoice

						invoke Released.ApplyAnInvoiceToThisCredit each.PayablesInvoice.PayablesInvoice
							invoked.PrmCompany											= PrmPayablesCompany
							invoked.PrmVendor											= Vendor
							invoked.PrmPayablesInvoice									= NewPayablesInvoice.PayablesInvoice
							invoked.PrmAppliedAmount									= each.PayablesInvoice.InvoiceAmount.CurrencyAmount

						if (PrmDetailReceivablesInterface)

							if (each.PayablesInvoice.InvoiceAmount.CurrencyAmount > 0)
								PrmTransactionType			= "C"
								LocalInvoiceAmount			= each.PayablesInvoice.InvoiceAmount.CurrencyAmount	
								LocalFunctionalAmount		= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount








							else
								PrmTransactionType			= "D"
								LocalInvoiceAmount			= each.PayablesInvoice.InvoiceAmount.CurrencyAmount * -1 
								LocalFunctionalAmount		= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount * -1








							if (PrmPayablesCompany.RetainInvoiceToAR)
								LocalInvoice 			= each.PayablesInvoice.Invoice
								LocalTransactionType	= PrmTransactionType
								include ValidateReceivablesInvoiceNumberPrefix

								if (ValidateReceivablePrefix.ErrorNumber entered
								and ReceivableInvoiceRel exists)
									increment PrmPayablesCompany.LastARInterfaceInvoice
									PrmInvoice = PrmPayablesCompany.ARInterfaceInvoicePrefix + "-APTOAR-" + ZeroFilledPayablesCompany + PrmPayablesCompany.ZeroPaddedLastARInterfaceInvoice
								else
									PrmInvoice = each.PayablesInvoice.Invoice
							else
								increment PrmPayablesCompany.LastARInterfaceInvoice
								PrmInvoice = PrmPayablesCompany.ARInterfaceInvoicePrefix + "-APTOAR-" + ZeroFilledPayablesCompany + PrmPayablesCompany.ZeroPaddedLastARInterfaceInvoice


							invoke Create ReceivableInvoice
								assign result to NewReceivableInvoice
								invoked.Company												= PrmReceivableCompany
								invoked.Customer											= Customer
								invoked.ReceivableInvoiceType								= PrmTransactionType
								invoked.AlternateReceivableInvoiceType						= PrmTransactionType
								invoked.ReceivableInvoice									= PrmInvoice
								invoked.BatchNumber											= current corporate date
								invoked.ReceivableProcessLevel								= PrmARProcessLevel
								invoked.ReceivableGeneralLedgerCode							= PrmARAccrualCode
								invoked.GeneralLedgerDate									= PrmARPostDate
								invoked.TransactionDate										= each.PayablesInvoice.InvoiceDate	
								invoked.CreditDebitMemoReason								= PrmMemoReason
								invoked.TermsCode											= PrmTermsCode
								invoked.Origin												= "A"
								invoked.System												= "AP"
								invoked.TransientSignedTransactionAmount					= LocalInvoiceAmount
								invoked.InvoiceAmount.CurrencyAmount						= LocalInvoiceAmount

								invoked.OriginalCurrency									= each.PayablesInvoice.InvoiceCurrency	
								invoked.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate	= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate
								invoked.Description											= "Memo Entry Reason Code C" + " " + each.PayablesInvoice.Invoice

							invoke Create ReceivableInvoiceDetail
								fill in fields from NewReceivableInvoice.ReceivableInvoice
								invoked.ReceivableInvoiceDetail.ReceivableInvoiceDetailType	= PrmTransactionType
								invoked.ReceivableInvoiceDetail.Invoice						= PrmInvoice
								invoked.ReceivableInvoiceDetail.PaymentSeq					= 1
								invoked.Status												= 1
								invoked.DueDate												= each.PayablesInvoice.DueDate	
								invoked.InvoiceAmount.CurrencyAmount						= LocalInvoiceAmount
								invoked.OriginalCurrency									= each.PayablesInvoice.InvoiceCurrency	
								invoked.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate		= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate
								invoked.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount	= LocalFunctionalAmount
















								invoked.ApplicationAmount.FunctionalAmount.EnteredCurrencyRate	= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate








								invoked.AdjustmentAmount.FunctionalAmount.EnteredCurrencyRate	= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate








								if (PrmReceivableCompany.GeneralLedgerCompany.RequireHSNSACCode)
									invoked.HSNSACCode												= PrmHSNSACCode
								
							invoke Create ReceivableGLDistribution
								invoked.FinanceEnterpriseGroup								= PrmReceivableCompany.FinanceEnterpriseGroup
								invoked.ReceivableCompanyGroup.GlCompany					= PrmReceivableCompany
								invoked.ReceivableCompanyDataGroup.TransactionCompany		= PrmReceivableCompany
								invoked.ReceivableCompanyGroup.OriginCompany				= PrmReceivableCompany
								invoked.GeneralLedgerDate									= PrmARPostDate	
								invoked.ReceivableCompanyDataGroup.Customer					= Customer
								invoked.Origin												= "RM"
								invoked.AccumulationType									= "D"
								invoked.DistributionSource									= "A"
								invoked.DocumentNumber										= PrmInvoice
								invoked.Status												= 0
								invoked.GeneralLedgerAccount								= PrmDistributionClearingAccount	
								invoked.DistributionAmount.CurrencyAmount					= LocalInvoiceAmount
								invoked.BatchNumber											= NewReceivableInvoice.BatchNumber
								invoked.Invoice												= NewReceivableInvoice.ReceivableInvoice
								invoked.TransType											= NewReceivableInvoice.ReceivableInvoiceType
								invoked.TransactionDate										= each.PayablesInvoice.InvoiceDate	
								invoked.ReceivableCompanyDataGroup.ReceivableProcessLevel	= NewReceivableInvoice.ReceivableProcessLevel
								invoked.OriginalCurrency									= NewReceivableInvoice.OriginalCurrency
								invoked.DistributionAmount.FunctionalAmount.EnteredCurrencyRate	= NewReceivableInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate
								invoked.CurrencyDecimalsNumber								= NewReceivableInvoice.CurrencyDecimalsNumber
								invoked.DistributionAmount.FunctionalAmount.EnteredCurrencyRate		= each.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate
								invoked.DistributionAmount.FunctionalAmount.EnteredCurrencyAmount	= LocalFunctionalAmount
















								invoked.Description													= "APTOAR Clearing Account"
								if (PrmReceivableCompany.GeneralLedgerCompany.RequireHSNSACCode)
									invoked.HSNSACCode												= PrmHSNSACCode
									invoked.TransientHSNSACCode										= true

							invoke Unreleased.Release NewReceivableInvoice.ReceivableInvoice

				invoke TakeOffHold

				invoke Delete APToARInterfaceSelectedRel


		Netting is a Set Action
			restricted
			Parameters
				PrmVendorGroup			is like VendorGroup
				PrmVendor				is like Vendor
				PrmReceivableCompany	is a ReceivableCompany
				PrmFEG					is a FinanceEnterpriseGroup
				PrmPayablesCompany		is a PayablesCompany
				PrmInvoice				is AlphaUpper size 22
				PrmTransactionType		is AlphaUpper size 1
				PrmARPostDate			is Date
				PrmARProcessLevel		is a ReceivableProcessLevel
					context of PrmReceivableCompany
				PrmInvoiceDate			is Date
				PrmTermsCode			is a TermsCode
					context of PrmFEG
				PrmMemoReason			is a CreditDebitMemoReason
					context of PrmReceivableCompany
				PrmARAccrualCode		is a ReceivableGeneralLedgerCode
					context of PrmReceivableCompany
				PrmDueDate				is Date
				PrmDescription			is a Description
				PrmBalanceOption							is AlphaUpper size 1
					States
						ARToAP				value is "A"
						APToAR				value is "B"
						LesserToGreater		value is "C"
						GreaterToLesser		value is "D"
				PrmARAPPostDate								is Date
				PrmReasonType								is a ReceivableReasonType
				PrmReceivableReason							is a ReceivableReason
					context of PrmReceivableCompany
				PrmAuthorityCode							is like PayablesAuthorityCode
				PrmOperator									is an Operator 
					holds pii
				PrmARAPDescription							is a Description
				PrmARAPProcessLevel							is a PayablesProcessLevel
					context of PrmPayablesCompany

				PrmAccrualCode								is like PayablesAccrualCode
				PrmARAPTermsCode							is like TermsCode
				PrmARAPDueDate								is Date
				PrmAPInvoiceDate							is Date



				PrmDistributionClearingAccount				is a FinanceCodeBlock
				PrmDetailInterface							is Boolean
				PrmHSNSACCode								is a HSNSACCode
					context of PrmFEG

			Instance Selection
				where ((VendorGroup = PrmVendorGroup
				and	   Customer entered
				and    !IsIntercompanyBillingDefaultVendor
				and	   !Customer.IsICBillingDefaultCustomer)
				and   (PrmDetailInterface = true                     
				and    BalanceCurrency  not entered
				or     PrmDetailInterface = false))


			Action Rules
				Instance Rules
					LocalCompany			= PrmPayablesCompany



					LocalVendorFuncAmount		=	sum TotalVendorBalancesRel.CurrentBalance	  
					LocalCustomerFuncAmount		=	CompanyCustomerRel.CurrentBalance

					if (any TotalVendorBalancesRel.BalanceCurrency != CompanyCustomerRel.Currency)
						CurrencyWork.FinanceEnterpriseGroup				= PrmPayablesCompany.BusinessGroup.FinanceEnterpriseGroup
						CurrencyWork.ExchangeDate						= current corporate date
						CurrencyWork.TransactionAmount					= sum TotalVendorBalancesRel.CurrentBalance
						CurrencyWork.FromCurrency						= first TotalVendorBalancesRel.BalanceCurrency
						CurrencyWork.BaseAmount.ToCurrency				= PrmPayablesCompany.Currency
						LocalVendorFuncAmount							= CurrencyWork.BaseAmount.OutputCurrencyAmount

						CurrencyWork.FinanceEnterpriseGroup				= PrmPayablesCompany.BusinessGroup.FinanceEnterpriseGroup
						CurrencyWork.ExchangeDate						= current corporate date
						CurrencyWork.TransactionAmount					= CompanyCustomerRel.CurrentBalance
						CurrencyWork.FromCurrency						= CompanyCustomerRel.Currency
						CurrencyWork.BaseAmount.ToCurrency				= PrmPayablesCompany.Currency
						LocalCustomerFuncAmount						= CurrencyWork.BaseAmount.OutputCurrencyAmount


					if ((PrmBalanceOption.APToAR
					or (PrmBalanceOption.LesserToGreater
					and LocalVendorFuncAmount < LocalCustomerFuncAmount)
					or (PrmBalanceOption.GreaterToLesser
					and LocalVendorFuncAmount > LocalCustomerFuncAmount))
					and LocalVendorFuncAmount != 0)

						for each APToARAvailableInvoicesRel
							if (each.Company = PrmPayablesCompany)
								invoke SelectForARInterfacing each

						if (APToARInterfaceSelectedRel exists)
							invoke ReleaseToARInterface
								invoked.PrmReceivableCompany			= PrmReceivableCompany
								invoked.PrmPayablesCompany				= PrmPayablesCompany
								invoked.PrmFEG							= PrmFEG
								invoked.PrmInvoice						= PrmInvoice
								invoked.PrmTransactionType				= PrmTransactionType
								invoked.PrmARPostDate					= PrmARPostDate
								invoked.PrmARProcessLevel				= PrmARProcessLevel
								invoked.PrmInvoiceDate					= PrmInvoiceDate
								invoked.PrmTermsCode					= PrmTermsCode
								invoked.PrmMemoReason					= PrmMemoReason
								invoked.PrmARAccrualCode				= PrmARAccrualCode
								invoked.PrmDueDate						= PrmDueDate
								invoked.PrmDescription					= PrmDescription
								invoked.PrmDistributionClearingAccount 	= PrmDistributionClearingAccount
								invoked.PrmDetailReceivablesInterface	= PrmDetailInterface
								invoked.PrmAutoInvoice					= true
								if (PrmReceivableCompany.GeneralLedgerCompany.RequireHSNSACCode)
									invoked.PrmHSNSACCode				= PrmHSNSACCode
					else
					if ((PrmBalanceOption.ARToAP
					or (PrmBalanceOption.LesserToGreater
					and LocalCustomerFuncAmount < LocalVendorFuncAmount)
					or (PrmBalanceOption.GreaterToLesser
					and LocalCustomerFuncAmount > LocalVendorFuncAmount))
					and LocalCustomerFuncAmount != 0)
						invoke Netting CompanyCustomerRel
							invoked.PrmCompany					= PrmReceivableCompany
							invoked.PrmCustomer					= Customer
							invoked.PrmARPostDate				= PrmARAPPostDate
							invoked.PrmReasonType				= PrmReasonType
							invoked.PrmReceivableReason			= PrmReceivableReason
							invoked.PrmOperator					= PrmOperator
							invoked.PrmProcessLevel				= PrmARAPProcessLevel
							invoked.PrmTermsCode				= PrmARAPTermsCode
							invoked.PrmDueDate					= PrmARAPDueDate
							invoked.PrmAuthorityCode			= PrmAuthorityCode
							invoked.PrmDescription				= PrmARAPDescription
							invoked.PrmAccrualCode				= PrmAccrualCode
							invoked.PrmAPInvoiceDate			= PrmAPInvoiceDate
							invoked.PrmDetailPayablesInterface	= PrmDetailInterface
							invoked.PrmAutoInvoice				= true
							if (PrmReceivableCompany.GeneralLedgerCompany.RequireHSNSACCode)
								invoked.PrmHSNSACCode			= PrmHSNSACCode


		VendorImportBODUpdate is a Set Action
			restricted
			Parameters
				PrmVendorConversionResult	is a VendorConversionResult
				PrmVendorGroup				is a VendorGroup

			Instance Selection
				where  (VendorConversionResult	= PrmVendorConversionResult
				and	 VendorGroup				= PrmVendorGroup)

			Sort Order
				VendorConversionResult
				VendorGroup
				Vendor

			Local Fields


			Action Rules
				Instance Rules
					invoke InvokeBODUpdate


		InvokeBODUpdate is an Instance Action
			restricted
			Action Rules
				InvokeBODForVendorImport	= true

























		UpdateOIGExclusionStatus is an Instance Action		
			restricted
			default label is untranslatable
			Parameters
				PrmOIGExclusionStatus		is a OIGExclusionStatus
				PrmOIGValidationDate		is Date
			Parameter Rules
				PrmOIGExclusionStatus
					required
				PrmOIGValidationDate
					default to current corporate date
			Entrance Rules
				PreviousExclusionStatus	= OIGExclusionStatus
			Action Rules
				OIGExclusionStatus		= PrmOIGExclusionStatus
				OIGValidationDate		= PrmOIGValidationDate

		CreatePayablesInvoiceTotals is a Set Action
			restricted
			Parameters
				PrmVendorGroup		is a VendorGroup
					default label is "VendorGroup"

			Instance Selection
				where (VendorGroup = PrmVendorGroup)

			Sort Order
				VendorGroup
				Vendor

			Action Rules
				Instance Rules

					invoke Create PayablesInvoiceTotal
						fill in fields from this instance
						invoked.PayablesInvoiceTotal = "Over 60 Days"
					invoke Create PayablesInvoiceTotal
						fill in fields from this instance
						invoked.PayablesInvoiceTotal = "31 to 60 Days"
					invoke Create PayablesInvoiceTotal
						fill in fields from this instance
						invoked.PayablesInvoiceTotal = "1 to 30 Days"
					invoke Create PayablesInvoiceTotal
						fill in fields from this instance
						invoked.PayablesInvoiceTotal = "1 to 7 Days"
					invoke Create PayablesInvoiceTotal
						fill in fields from this instance
						invoked.PayablesInvoiceTotal = "8 to 14 Days"
					invoke Create PayablesInvoiceTotal
						fill in fields from this instance
						invoked.PayablesInvoiceTotal = "15 to 21 Days"
					invoke Create PayablesInvoiceTotal
						fill in fields from this instance
						invoked.PayablesInvoiceTotal = "22 to 28 Days"
					invoke Create PayablesInvoiceTotal
						fill in fields from this instance
						invoked.PayablesInvoiceTotal = "Over 28 Days"



		ValidateVATRegistrationNumber is an Instance Action
			valid when (PerformVATValidation)
			Action Rules
				ICountryCode			= VATRegistrationCountry
				IVatNumber				= VATRegistrationNumber
				IRequesterCountryCode	= VendorGroup.BusinessGroup.FinanceEnterpriseGroup.TaxConfiguration.VATTaxEntity.VATRegistrationCountry
				IRequesterVatNumber		= VendorGroup.BusinessGroup.FinanceEnterpriseGroup.TaxConfiguration.VATTaxEntity.VATRegistrationNumber
				invoke CheckVatService ValidateVAT
					invoked.SoapRequest			= VatRequestXML
					VATValidation.ResponseXML	= result.SoapResponse
				VATValidation.RequestXML			= VatRequestXML
				VATValidation.OCountryCode			= VATValidation.ResponseXML select "//Envelope/Body/checkVatApproxResponse/countryCode"
				VATValidation.OVatNumber			= VATValidation.ResponseXML select "//Envelope/Body/checkVatApproxResponse/vatNumber"
				VATValidation.ORequestDate			= VATValidation.ResponseXML select "//Envelope/Body/checkVatApproxResponse/requestDate"
				VATValidation.OValid				= VATValidation.ResponseXML select "//Envelope/Body/checkVatApproxResponse/valid"
				VATValidation.OTraderName			= VATValidation.ResponseXML select "//Envelope/Body/checkVatApproxResponse/traderName"
				VATValidation.OTraderCompanyType	= VATValidation.ResponseXML select "//Envelope/Body/checkVatApproxResponse/traderCompanyType"
				VATValidation.OTraderAddress		= VATValidation.ResponseXML select "//Envelope/Body/checkVatApproxResponse/traderAddress"
				VATValidation.ORequestIdentifier	= VATValidation.ResponseXML select "//Envelope/Body/checkVatApproxResponse/requestIdentifier"
				VATValidation.ValidationDate		= current timestamp
				if (VATValidation.VATValid)
					VATValidation.VATNumberValid		= true
				else
					VATValidation.VATNumberValid		= false


		MassInactivateVendors is a Set Action		
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmVendorGroup					is a VendorGroup
					default label is "VendorGroup"
				PrmVendorClass					is a VendorClass
					default label is "VendorClass"
				PrmCutoffDate					is Date
					default label is "LastInvoicePaymentCutoffDate"
				PrmCutoffMonths					is Numeric size 3		
					default label is "InvoicePaymentCutoffByMonths"
				PrmNoActivityVendors			is Boolean
					default label is "InactivateNoActivityVendors"
				PrmVendorCreateDate				is Date
					default label is "VendorCreateCutoffDate"
				PrmVendorCreateMonths			is Numeric size 3		
					default label is "VendorCreateCutoffByMonths"
			Parameter Rules
				PrmVendorGroup
					required
				PrmCutoffDate

					constraint (PrmCutoffDate < current corporate date)
						"CutoffDateMustBePriorToCurrentDate"
				PrmCutoffMonths		
					constraint (PrmCutoffMonths > 0)
						"CutoffByMonthsMustBeAPositiveNumber"
					constraint (PrmCutoffDate !entered)
						"CannotEnterBothCutoffDateAndCutoffByMonths"
					if (PrmCutoffDate !entered)
						required
							"MustEnterEitherCutoffDateOrCutoffByMonths"
				PrmVendorCreateDate
					if (PrmNoActivityVendors)
						if (PrmVendorCreateMonths !entered)		
							required
								"MustEnterEitherCreateCutoffDateOrCutoffByMonths"
					else
						initialize PrmVendorCreateDate
						initialize PrmVendorCreateMonths
					constraint (PrmVendorCreateDate < current corporate date)
						"VendorCreateDateMustBePriorToCurrentDate"
				PrmVendorCreateMonths		
					constraint (PrmVendorCreateMonths > 0)
						"CutoffByMonthsMustBeAPositiveNumber"
					constraint (PrmVendorCreateDate !entered)
						"CannotEnterBothCreateCutoffDateAndCutoffByMonths"
			Local Fields
				LocalVendorCount				is Numeric 10
				LocalActor						is an Actor
			Instance Selection
				where (PrmFinanceEnterpriseGroup = VendorGroup.BusinessGroup.FinanceEnterpriseGroup
				and    VendorGroup = PrmVendorGroup
				and   (VendorClass = PrmVendorClass
				or     PrmVendorClass !entered)


				and    Vendor.VendorStatus.Active)
			Sort Order is Set2
			Action Rules
				Empty Set Rules
					LocalActor = actor
					send notification
						to LocalActor
						description is "MassInactivateVendorsHasCompleted"
						priority is high
						detail is "<NoVendorsFound>"
				Set Rules
					Exit Rules
						LocalActor = actor
						send notification
							to LocalActor
							description is "MassInactivateVendorsHasCompleted"
							priority is high
							detail is "<LocalVendorCount>_<VendorsInactivated>"
				Instance Rules
					LocalNoActivityVendor = PrmNoActivityVendors
					if (PrmCutoffDate entered)
						LocalCutoffDate = PrmCutoffDate
					else
						LocalCutoffDate = current corporate date - PrmCutoffMonths as months		
					if (PrmNoActivityVendors)
						if (PrmVendorCreateDate entered)		
							LocalVendorCreateCutoffDate = PrmVendorCreateDate
						else
							LocalVendorCreateCutoffDate = current corporate date - PrmVendorCreateMonths as months
					if (VendorCanBeInactivated)
						VendorStatus = "I"
						for each VendorLocationRel
							invoke FastUpdate each
								invoked.Status = "I"
						LocalVendorCount += 1



		ValidateVendorVATRegistration is a Set Action
			valid when (ActionValidateVAT)
			completion message is "<CompletionMessage>"
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmVendorGroup				is a VendorGroup
					default label is "VendorGroup"

			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmVendorGroup
			Local Fields


			Instance Selection
				where (PrmFinanceEnterpriseGroup = VendorGroup.BusinessGroup.FinanceEnterpriseGroup
				and  ((PrmVendorGroup entered
				and	   PrmVendorGroup = VendorGroup)
				or	   PrmVendorGroup not entered)
				and	   Vendor.VendorStatus.Active
				and	   PerformVATValidation)

			Sort Order
				Vendor

			Accumulators


			Action Rules
				Empty Set Rules


				Set Rules
					Entrance Rules

					Exit Rules

				Vendor Set Rules
					Entrance Rules

					Exit Rules

				Instance Rules
					invoke ValidateVATRegistrationNumber in background
	
		VendorSpendReport is a Set Action				
			default label is untranslatable
			restricted

			Parameters
				PrmVendorGroup				is a VendorGroup
				PrmPayablesJobResult 		is a PayablesJobResult
				PrmVendorClass 				is a VendorClass
				PrmVendorSelectGroup		is a Vendor group

			Instance Selection
				where  (VendorGroup				= PrmVendorGroup
				and	   (PrmVendorClass			not entered
				or	   (PrmVendorClass			entered
				and		VendorClass				= PrmVendorClass))
				and    (PrmVendorSelectGroup 	not entered
				or	   (PrmVendorSelectGroup	entered
				and     Vendor					within PrmVendorSelectGroup)))

			Local Fields
				LocalTotalReportAmount   is an InternationalAmount
				LocalNetPaymentAmount    is an InternationalAmount
				LocalContractSpendAmount is an InternationalAmount

			Action Rules
				Empty Set Rules
					invoke FastUpdate PrmPayablesJobResult
						invoked.Status	= 3
				Set Rules
					Entrance Rules
					Exit Rules
						invoke FastUpdate PrmPayablesJobResult
							invoked.Status	= 3

				Instance Rules
					LocalPayablesJobResult	=	PrmPayablesJobResult			
					LocalNetPaymentAmount	=	sum VendorPaymentSpendRel.NetPaymentAmount.CurrencyAmount
					if (PrmPayablesJobResult.ParametersVendorPaymentReportResult.IncludeContracts)			
						LocalContractSpendAmount	 = sum VendorContractSpendRel.MaximumAmount
					LocalTotalReportAmount		= LocalNetPaymentAmount + LocalContractSpendAmount
					if (LocalTotalReportAmount	 entered
					and LocalTotalReportAmount	     >= PrmPayablesJobResult.ParametersVendorPaymentReportResult.VendorTotalMinimum)
						invoke Create PayablesJobResultDetail
							invoked.VendorGroup				= PrmVendorGroup
							invoked.PayablesJobResult		= PrmPayablesJobResult
							invoked.Vendor					= Vendor
							invoked.PaymentAmount			= LocalNetPaymentAmount
							invoked.ContractAmount			= LocalContractSpendAmount
				



		Anonymize is an Instance Action	
			restricted
			Parameters
				PrmFromCustomer			is Boolean
				PrmFromSupplier		 is Boolean

			Action Rules
				constraint (!OpenPayablesInvoicesRelExists)
					"CannotAnonymize;OpenPayableInvoicesExistForVendor"
				constraint (!OpenCashLedgerPaymentsRelExists)
					"CannotAnonymize;OpenCashLedgerPaymentsExistForVendor"

				if (!PrmFromCustomer)
					if (AnonymizeLogAnonymizeRelExists)
						confirmation required
							"Warning,TheAnonymizeActionIsNonReversableAndAnonymizeRecordAlreadyExists;AreYouSureYouWantToContinue?"
						confirmation required
							"ProceedToAnonymizeAgain?"
					else
						confirmation required
							"Warning,TheAnonymizeActionIsNonReversable;AreYouSureYouWantToContinue?"
						confirmation required
							"ProceedToAnonymize?"

				if (VendorAddressesRelExists)
					invoke Anonymize VendorAddressesRel
				if (VendorContactRel exists)
					invoke Anonymize VendorContactRel
						invoked.PrmFromVendor	= true
				if (VendorLocationRelExists)
					invoke Anonymize VendorLocationRel
				if (InterfacedVendorsExist)
					invoke Anonymize VendorMappingTableInterfacesRel
				if (PurchasingVendorExists)
					invoke Anonymize PurchasingVendorRel
				if (CustomerRel exists
				and !PrmFromCustomer)
					invoke Anonymize CustomerRel
						invoked.PrmFromVendor	= true
				if (SupplierRel exists
				and !PrmFromSupplier)
					for each SupplierRel
						invoke Anonymize each
							invoked.PrmFromVendor	= true

				VendorName			= Vendor
				VendorSearchName	= Vendor
				LegalName			= Vendor
				initialize ContactName
				initialize EmailAddress
				initialize URLAddress
				initialize PhoneNumber
				initialize MobileNumber
				initialize FaxNumber
				initialize TelexNumber
				initialize BACSName
				initialize CreditCardNumber
				initialize TaxID
				initialize BankEntity
				initialize BankAccountNumber
				initialize CrossBorderIdentifier
				initialize EDINumber
				initialize SwiftID
				initialize VendorAccount
				initialize IntermediaryBankEntity
				initialize IntermediaryBankAccount
				initialize IntermediarySwiftID
				initialize IntermediaryCrossBorderIdentifier
				initialize GiroNumber
				initialize BankInstructions1
				initialize BankInstructions2
				initialize BankInstructions3
				initialize BankInstructions4
				initialize TwitterID
				initialize SocialNetworkID2
				initialize SocialNetworkID3
				initialize SocialNetworkID4
				initialize SocialNetworkID5
				initialize BankID
				initialize AssignmentNumber
				initialize IntermediaryBankID
				initialize IntermediaryAssignmentNumber
				initialize FATCAId
				initialize Employee

			Exit Rules
				invoke Create AnonymizeLog
					invoked.FinanceEnterpriseGroup		= VendorGroup.FinanceEnterpriseGroup
					invoked.Status						= 1
					invoked.AffectedBusinessClass		= "AP1"
					invoked.VendorGroup					= VendorGroup
					invoked.Vendor						= Vendor


		PurgeAuditLog is an Instance Action	
			restricted
			Parameters
				PrmFromCustomer			is Boolean
				PrmFromSupplier		 is Boolean

			Action Rules
				constraint (AnonymizeLogAnonymizeRelExists)
					"CannotPurge;VendorMustBeAnonymizedFirst"
				if (!PrmFromCustomer)
					if (AnonymizeLogPurgeRelExists)
						confirmation required
							"Warning,ThePurgeAuditLogActionIsNonReversableAndAnonymizeRecordAlreadyExists;AreYouSureYouWantToContinue?"
						confirmation required
							"ProceedToPurgeAuditLogAgain?"
					else
						confirmation required
							"Warning,ThePurgeAuditLogActionIsNonReversable;AreYouSureYouWantToContinue?"
						confirmation required
							"ProceedToPurgeAuditLog?"

				if (VendorAddressesRelExists)
					invoke PurgeAuditLog VendorAddressesRel
				if (VendorContactRel exists)
					invoke PurgeAuditLog VendorContactRel
						invoked.PrmFromVendor	= true
				if (VendorLocationRelExists)
					invoke PurgeAuditLog VendorLocationRel
				if (InterfacedVendorsExist)
					invoke PurgeAuditLog VendorMappingTableInterfacesRel
				if (PurchasingVendorExists)
					invoke PurgeAuditLog PurchasingVendorRel
				if (CustomerRel exists
				and !PrmFromCustomer)
					invoke PurgeAuditLog CustomerRel
						invoked.PrmFromVendor	= true
				if (SupplierRel exists
				and !PrmFromSupplier)
					for each SupplierRel
						invoke PurgeAuditLog each
							invoked.PrmFromVendor	= true

				invoke purge audit log entries

			Exit Rules
				invoke Create AnonymizeLog
					invoked.FinanceEnterpriseGroup	= VendorGroup.FinanceEnterpriseGroup
					invoked.Status					= 2
					invoked.AffectedBusinessClass	= "AP1"
					invoked.VendorGroup				= VendorGroup
					invoked.Vendor					= Vendor

		SendSyncSupplierPartyNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				if(DerivedRequiredCleanDocId = "Y")
					send ion bod
						bod is SupplierPartyMasterXMLBOD
						bod type is "Sync.SupplierPartyMaster"
						document id is DerivedDocumentID
						variation id is BODVariationID
						accounting entity is LocalFinalCrossAccountingEntity
				else
					send ion bod
						bod is SupplierPartyMasterXMLBOD
						bod type is "Sync.SupplierPartyMaster"
						document id is DerivedDocumentID
						variation id is BODVariationID
						accounting entity is DerivedCrossAccountingEntity
		
		SendProcessSupplierPartyMasterNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				send ion bod
					bod is ProcessSupplierPartyMasterXMLBOD
					bod type is "Process.SupplierPartyMaster"
					accounting entity is DerivedProcessCrossAccountingEntity
					document id is DerivedVendor
					variation id is BODVariationID
				
		TriggerProcessSupplierPartyMasterNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
				PrmTriggerFrom is Alpha size 100
			Action Rules
				LocalTriggerFrom = PrmTriggerFrom
				LocalMainUserTemplate = "IONProcessSupplierPartyMasterMainXML_ST"
				invoke NativeLPLBODTriggerChecks FSMProcessSupplierBODConfigRel
					invoked.PrmVerb 					= 2
					invoked.PrmNoun						= "SupplierPartyMaster"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= LocalTriggerFrom
					invoked.PrmFinanceEnterpriseGroup	= VendorGroup.BusinessGroup.FinanceEnterpriseGroup
					invoked.PrmBusinessGroup			= VendorGroup
					invoked.PrmMainUserTemplate 		= LocalMainUserTemplate
				NativeLPLBODTrigger = FSMProcessSupplierBODConfigRel.NativeLPLBODTrigger
				LocalBODTrigger = true
				if(VendorGroup.FinanceEnterpriseGroup.BODTrigger and NativeLPLBODTrigger)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 2
							invoked.Noun 					= "SupplierPartyMaster"
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
							invoked.BODDocumentID			= DerivedVendor
							invoked.BODVariationID			= BODVariationID
							invoked.BODID					= DerivedProcessBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Direction				= 1
							invoked.Reference1				= Vendor.VendorGroup
							invoked.Vendor					= Vendor
							invoked.Reference3				= LocalTriggerFrom
							invoked.BODAccountingEntity		= DerivedProcessCrossAccountingEntity
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
					else
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
							invoked.BODDocumentID			= DerivedVendor
							invoked.BODVariationID			= BODVariationID
							invoked.BODID					= DerivedProcessBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Direction				= 1
							invoked.Reference1				= Vendor.VendorGroup
							invoked.Vendor					= Vendor
							invoked.Reference3				= LocalTriggerFrom
							invoked.BODAccountingEntity		= DerivedProcessCrossAccountingEntity
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					invoke SendProcessSupplierPartyMasterNativeLPL
						resume on error
					        Error            							= true
							ErrorMessage     							= error message
					if(Error)
					   	invoke Update FSMInboundBODTrackerRel
							invoked.Error 								= Error
							invoked.ErrorMessage 						= ErrorMessage
							invoked.Status								= 2
							invoked.CloseDate							= system current timestamp
							invoked.BODID								= DerivedProcessBODID
							invoked.BODXML								= ProcessSupplierPartyMasterXMLBOD		
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status									= 3
							invoked.CloseDate								= system current timestamp
							invoked.BODID									= DerivedProcessBODID
							invoked.BODXML									= ProcessSupplierPartyMasterXMLBOD																			
					
		TriggerSupplierPartyNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
				RestartFlag is Boolean
				PrmTriggerFrom is Alpha size 100
			Action Rules
				LocalTriggerFrom = PrmTriggerFrom
				if(DerivedRequiredCleanDocId ="Y") 
					LocalMainUserTemplate = "IONSyncSupPartyMastCleanDocXML_ST"
				else
				if(DerivedIntegrationApplication = "Local.ly" and VendorCountry = "BR")
					LocalMainUserTemplate = "IONSupplierPartyMaster_BR_XML_ST"
				else
					LocalMainUserTemplate = "IONSupplierPartyMasterXML_ST"
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationRel
					invoked.PrmVerb 					= 1
					invoked.PrmNoun						= "SupplierPartyMaster"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= LocalTriggerFrom
					invoked.PrmFinanceEnterpriseGroup	= VendorGroup.BusinessGroup.FinanceEnterpriseGroup
					invoked.PrmBusinessGroup			= VendorGroup
					invoked.PrmMainUserTemplate 		= LocalMainUserTemplate
				NativeLPLBODTrigger = FSMBODConfigurationRel.NativeLPLBODTrigger
				LocalBODTrigger = true
				if(VendorGroup.FinanceEnterpriseGroup.BODTrigger and NativeLPLBODTrigger)
					if(DerivedRequiredCleanDocId ="Y")
						if(RestartFlag)
							if(GeneralLedgerCompanyRel exist)
								LocalBODCompany = FSMInboundBODTracker.Reference4
								if(DerivedConfigFEG = "Y")
									LocalCompanyCrossReference = DerivedFinanceEnterpriseGroup + DerivedDelimiter + LocalBODCompany
								else
									LocalCompanyCrossReference = LocalBODCompany
								if(DerivedTriggBODBasedOnCrossRef = "Y")
									if (FSMBODCleanDocCrossReferenceRel.DestinationValue entered)
										LocalFinalCrossAccountingEntity = FSMBODCleanDocCrossReferenceRel.DestinationValue
								else
									LocalFinalCrossAccountingEntity = LocalCompanyCrossReference
								if(LocalFinalCrossAccountingEntity entered)
									LocalFSMInboundBODTracker		= FSMInboundBODTracker
									invoke Update FSMInboundBODTrackerRel
										invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
										invoked.BODDocumentID			= DerivedDocumentID
										invoked.BODVariationID			= BODVariationID
										invoked.Status					= 1
										invoked.StartDate				= system current timestamp
										invoked.Direction				= 1
										invoked.Reference1				= Vendor.VendorGroup
										invoked.Vendor					= Vendor
										invoked.BODAccountingEntity		= LocalFinalCrossAccountingEntity
										initialize invoked.Error			
										initialize invoked.ErrorMessage
									initialize LocalBodIDforCleanDoc
									LocalBodIDforCleanDoc = "infor-nid:" + DerivedTenantID +":" + LocalFinalCrossAccountingEntity + ":" +DerivedDefaultBODLocation+ ":" +DerivedDocumentID + ":" +BODRevision+"?SupplierPartyMaster&verb=Sync&TrackerID=" + LocalFSMInboundBODTracker
									invoke SendSyncSupplierPartyNativeLPL
										resume on error
					                   		Error            							= true
					                        ErrorMessage     							= error message
					               	if(Error)
					               		invoke Update FSMInboundBODTrackerRel
											invoked.Error 								= Error
											invoked.ErrorMessage 						= ErrorMessage
											invoked.Status								= 2
											invoked.CloseDate							= system current timestamp
											invoked.BODID								= LocalBodIDforCleanDoc	
											invoked.BODXML								= SupplierPartyMasterXMLBOD	
									else
										invoke Update FSMInboundBODTrackerRel
											invoked.Status									= 3
											invoked.CloseDate								= system current timestamp
											invoked.BODID									= LocalBodIDforCleanDoc	
											invoked.BODXML									= SupplierPartyMasterXMLBOD		
						else
						if(DerivedTriggBODBasedOnCrossRef = "Y")
							if(FSMCleanDocIDGLCCrossReferenceDetailRel exists)
								for each FSMCleanDocIDGLCCrossReferenceDetailRel
									initialize LocalSourceValue
									initialize LocalFinalCrossAccountingEntity
									initialize LocalBODCompany
									initialize LocalCleanDocCrossReference
									LocalSourceValue = each.SourceValue
									if (LocalSourceValue entered)
										for each LocalSourceValue split on "<DerivedDelimiter>"
											initialize LocalBODCompany
											LocalBODCompany = each
									if(FSMCleanDocIDGeneralLedgerCompanyRel exists)
										LocalFinalCrossAccountingEntity = each.DestinationValue
										if(LocalFinalCrossAccountingEntity entered)
											if(FSMInboundBODTracker not entered)
												invoke Create FSMInboundBODTracker
													assign result to NewBODTracker
													invoked.Verb 					= 1
													invoked.Noun 					= "SupplierPartyMaster"
													invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
													invoked.BODDocumentID			= DerivedDocumentID
													invoked.BODVariationID			= BODVariationID
													invoked.Status					= 1
													invoked.StartDate				= system current timestamp
													invoked.Direction				= 1
													invoked.Reference1				= Vendor.VendorGroup
													invoked.Vendor					= Vendor
													invoked.Reference3				= LocalTriggerFrom
													invoked.BODAccountingEntity		= LocalFinalCrossAccountingEntity
													invoked.Reference4				= LocalBODCompany
													initialize invoked.Error			
													initialize invoked.ErrorMessage
												LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
											initialize LocalBodIDforCleanDoc
											LocalBodIDforCleanDoc = "infor-nid:" + DerivedTenantID +":" + LocalFinalCrossAccountingEntity + ":" +DerivedDefaultBODLocation+ ":" +DerivedDocumentID + ":" +BODRevision+"?SupplierPartyMaster&verb=Sync&TrackerID=" + LocalFSMInboundBODTracker
											invoke SendSyncSupplierPartyNativeLPL
												resume on error
							                   		Error            							= true
							                        ErrorMessage     							= error message
							                if(Error)
												invoke Update FSMInboundBODTrackerRel
													invoked.Error 								= Error
													invoked.ErrorMessage 						= ErrorMessage
													invoked.Status								= 2
													invoked.CloseDate							= system current timestamp
													invoked.BODID								= LocalBodIDforCleanDoc
													invoked.BODXML								= SupplierPartyMasterXMLBOD
											else
												invoke Update FSMInboundBODTrackerRel
													invoked.Status									= 3
													invoked.CloseDate								= system current timestamp
													invoked.BODID									= LocalBodIDforCleanDoc
													invoked.BODXML									= SupplierPartyMasterXMLBOD	
						else
						if(DerivedTriggBODBasedOnCrossRef = "N")
							if(GeneralLedgerCompanyRel exist)
								for each GeneralLedgerCompanyRel
									initialize LocalFinalCrossAccountingEntity
									initialize LocalBODCompany
									LocalBODCompany = each.Company
									if(DerivedConfigFEG = "Y")
										LocalFinalCrossAccountingEntity = DerivedFinanceEnterpriseGroup + DerivedDelimiter + LocalBODCompany
									else
										LocalFinalCrossAccountingEntity = LocalBODCompany
									if(LocalFinalCrossAccountingEntity entered)
										if(FSMInboundBODTracker not entered)
											invoke Create FSMInboundBODTracker
												assign result to NewBODTracker
												invoked.Verb 					= 1
												invoked.Noun 					= "SupplierPartyMaster"
												invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
												invoked.BODDocumentID			= DerivedDocumentID
												invoked.BODVariationID			= BODVariationID
												invoked.Status					= 1
												invoked.StartDate				= system current timestamp
												invoked.Direction				= 1
												invoked.Reference1				= Vendor.VendorGroup
												invoked.Vendor					= Vendor
												invoked.Reference3				= LocalTriggerFrom
												invoked.BODAccountingEntity		= LocalFinalCrossAccountingEntity
												invoked.Reference4				= LocalBODCompany
												initialize invoked.Error			
												initialize invoked.ErrorMessage
											LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
										initialize LocalBodIDforCleanDoc
										LocalBodIDforCleanDoc = "infor-nid:" + DerivedTenantID +":" + LocalFinalCrossAccountingEntity + ":" +DerivedDefaultBODLocation+ ":" +DerivedDocumentID + ":" +BODRevision+"?SupplierPartyMaster&verb=Sync&TrackerID=" + LocalFSMInboundBODTracker
										invoke SendSyncSupplierPartyNativeLPL
											resume on error
						                   		Error            							= true
						                        ErrorMessage     							= error message
						                if(Error)
											invoke Update FSMInboundBODTrackerRel
												invoked.Error 								= Error
												invoked.ErrorMessage 						= ErrorMessage
												invoked.Status								= 2
												invoked.CloseDate							= system current timestamp
												invoked.BODID								= LocalBodIDforCleanDoc
												invoked.BODXML								= SupplierPartyMasterXMLBOD
										else
											invoke Update FSMInboundBODTrackerRel
												invoked.Status									= 3
												invoked.CloseDate								= system current timestamp
												invoked.BODID									= LocalBodIDforCleanDoc
												invoked.BODXML									= SupplierPartyMasterXMLBOD						
					else
						if(FSMInboundBODTracker not entered)	
							invoke Create FSMInboundBODTracker
								assign result to NewBODTracker
								invoked.Verb 					= 1
								invoked.Noun 					= "SupplierPartyMaster"
								invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
								invoked.BODDocumentID			= DerivedDocumentID
								invoked.BODVariationID			= BODVariationID
								invoked.Status					= 1
								invoked.StartDate				= system current timestamp
								invoked.Direction				= 1
								invoked.Reference1				= Vendor.VendorGroup
								invoked.Vendor					= Vendor
								invoked.BODAccountingEntity		= DerivedCrossAccountingEntity
								invoked.Reference3				= LocalTriggerFrom
								initialize invoked.Error			
								initialize invoked.ErrorMessage
							LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
						else
							LocalFSMInboundBODTracker		= FSMInboundBODTracker
							invoke Update FSMInboundBODTrackerRel
								invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
								invoked.BODDocumentID			= DerivedDocumentID
								invoked.BODVariationID			= BODVariationID
								invoked.BODID					= DerivedBODID
								invoked.Status					= 1
								invoked.StartDate				= system current timestamp
								invoked.Direction				= 1
								invoked.Reference1				= Vendor.VendorGroup
								invoked.Vendor					= Vendor
								invoked.BODAccountingEntity		= DerivedCrossAccountingEntity
								initialize invoked.Error			
								initialize invoked.ErrorMessage
								initialize invoked.Company
						invoke SendSyncSupplierPartyNativeLPL
							resume on error
					        	Error            							= true
								ErrorMessage     							= error message		
						if(Error)
					   		invoke Update FSMInboundBODTrackerRel
								invoked.Error 								= Error
								invoked.ErrorMessage 						= ErrorMessage
								invoked.Status								= 2
								invoked.CloseDate							= system current timestamp
								invoked.BODID								= DerivedBODID		
								invoked.BODXML								= SupplierPartyMasterXMLBOD
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Status									= 3
								invoked.CloseDate								= system current timestamp
								invoked.BODID									= DerivedBODID
								invoked.BODXML									= SupplierPartyMasterXMLBOD															
		
		PurgeOneTimeVendor is a Set Action
			restricted
			Parameters
				PrmCompany					is a PayablesCompany
				PrmVendorGroup				is a VendorGroup
				PrmVendorClass				is like VendorClass
				PrmVenCutoffDate			is Date
				PrmBackgroundGroup			is AlphaUpper up to 200
				
			Parameter Rules
			
			Local Fields
				InvoiceDateYear is Year
				LocalActor      is an Actor
			
			Instance Selection
				where (VendorGroup = PrmVendorGroup
				and    VendorClass = "ONE")
				
			Action Rules
				Instance Rules
					LocalCurrentDate	= current corporate date
					LocalCutOffDate = PrmVenCutoffDate
					LocalCompany = PrmCompany
					
					if	(VendorCompaniesPayablesInvoiceRel not exists
					and VendorCompaniesPayablesInvoiceHistoryRel not exists)
						if ((PayablesInvoiceExistsRel not exists
						and  PayablesInvoicePaymentRel not exists
						and  PayablesInvoiceDistributionRel not exists)
						and  (PayablesInvoiceHistoryExistsRel not exists
						and  PayablesInvoicePaymentHistoryRel not exists
						and  PayablesInvoiceDistributionHistoryRel not exists)
						and  (PurchaseOrdersExistsRel not exists
						and  PurchaseOrderReceiptsRel not exists
						and  ContractRel not exists
						and  VendorItemRel not exists
						and  ItemReplenishmentSourceRel not exists ))
							CurrentBackgroundGroup = "DeletionOfOneTimeVendorInvoice_" + PrmCompany
							invoke PurgeOneTimeInvoices PayablesInvoice in background group(CurrentBackgroundGroup)
								run after background group (PrmBackgroundGroup)
								invoked.PrmCompany		= PrmCompany
								invoked.PrmVendor		= Vendor
							LastBackgroundGroup	=	CurrentBackgroundGroup
							CurrentBackgroundGroup	= "DeletionOfOneTimeVendorInvoiceHistory_" + PrmCompany
							invoke PurgeOneTimeInvoiceHistory PayablesInvoiceHistory in background group(CurrentBackgroundGroup)
								run after background group (LastBackgroundGroup)
								invoked.PrmCompany		= PrmCompany
								invoked.PrmVendor		= Vendor
							LastBackgroundGroup	=	CurrentBackgroundGroup
							CurrentBackgroundGroup	= "DeletionOfOneTimeVendorDetails_" + PrmCompany
							invoke VendorDetailsPurge Vendor in background group(CurrentBackgroundGroup)
								run after background group (LastBackgroundGroup)
								invoked.PrmCompany	= PrmCompany
										
		PurgeNoActVendor is a Set Action
			restricted
			Parameters
				PrmCompany					is a PayablesCompany
				PrmNoActBegCreateDte       	is Date
		        PrmNoActEndCreateDte       	is Date
		        PrmVendorGroup				is like VendorGroup
		        PrmFromVendor              	is like Vendor
		        PrmToVendor                	is like Vendor
		    
			Parameter Rules
				
			Instance Selection
				where ((CreateDate >= PrmNoActBegCreateDte
				and    CreateDate <= PrmNoActEndCreateDte)
				and    VendorGroup	= PrmVendorGroup
				and    (Vendor >= PrmFromVendor
				and     Vendor <= PrmToVendor))
				
			Action Rules
				Instance Rules		
					if (first PurchaseOrdersExistsRel exists
					or  first ContractRel exists
					or  first VendorItemRel exists
					or  first ItemReplenishmentSourceRel exists
					or  first PayablesInvoiceRel exists
					or  first VendorPayablesInvoiceHistoryRel exists
					or (VendorBalancesRel exists
					and (VendorBalancesRel.CurrentBalance entered
					or   VendorBalancesRel.DraftBalance entered
					or	VendorBalancesRel.CurrentPeriodPurchases.PurchaseAmount entered
					or	VendorBalancesRel.CurrentPeriodPayments.PaymentAmount entered))
					and first CashLedgerPayablesPaymentRel exists)
						LocalErrorOccured = true
						
					if (!LocalErrorOccured)
						for each VendorLocationRel
							LocalVendorLocation	= each.VendorLocation
							if (LocationVendorBalanceRel exists)
								LocalErrorOccured = true	
								end for each
						
					if (!LocalErrorOccured)
						LocalCompany = PrmCompany
						invoke Purge VendorBalancePurgeRel
						invoke Purge VendorCompanyDefaultPurgeRel
						invoke Purge VendorLocationRel
						invoke Purge VendorAddressPurgeRel
						invoke Purge VendorDiversityPurgeRel
						invoke Purge VendorContactPurgeRel
						invoke Purge PayToVendorPurgeRel
						if (Vendor.OnHold)
							invoke Purge PayablesOnHoldPurgeRel
						invoke Purge PurchaseFromLocationPurgeRel
						invoke Purge PurchasingVendorPurgeRel
						if (VendorCustomerRel exists)
							invoke SetVendor VendorCustomerRel.Customer
								invoked.PayablesVendorGroup	= blank
								invoked.PayablesVendor		= blank
						invoke Purge CrossReferenceVendorRel
						invoke Purge
						
		VendorDetailsPurge is an Instance Action
			restricted
			Parameters
				PrmCompany	is a PayablesCompany
			Entrance Rules
				LocalCompany	= PrmCompany
				invoke Purge VendorBalancePurgeRel
				invoke Purge VendorCompanyDefaultPurgeRel
				invoke Purge VendorLocationRel
				invoke Purge VendorAddressPurgeRel
				invoke Purge VendorContactPurgeRel
				invoke Purge PayToVendorPurgeRel
				invoke Purge VendorDiversityPurgeRel
				if (Vendor.OnHold)
					invoke Purge PayablesOnHoldPurgeRel
				invoke Purge PurchaseFromLocationPurgeRel
				invoke Purge PurchasingVendorPurgeRel
				if (VendorCustomerRel exists)
					invoke SetVendor VendorCustomerRel.Customer
						invoked.PayablesVendorGroup	= blank
						invoked.PayablesVendor		= blank
				invoke Purge

		Purge is a Purge Action
    		restricted
    		bypass relational integrity rules
				
			
		CreateFromTemplate is a Create Action		
			completion message is "Vendor<Vendor>Created"
			Entrance Rules
		        constraint (VendorTemplate entered)
		            "VendorTemplateIsRequired"
			Field Rules
				VendorTemplate
					required
			Action Rules
				invoke Create this instance
					fill in fields from VendorTemplate
						except invoked.VendorGroup
                		except invoked.VendorClass
					
		ApplyVendorTemplate is an Instance Action		
			valid when (IsActiveVendor)
			Parameters
				PrmTemplate 		is a VendorTemplate
					default label is "VendorTemplate"
			Parameter Rules
				PrmTemplate
					constraint (PrmTemplate entered)
						"VendorTemplateIsRequired"
					required
			Action Rules
				invoke Update
					
					invoked.VendorTemplate										= PrmTemplate
					if(PrmTemplate.Reference1 entered)
						invoked.Reference1										= PrmTemplate.Reference1
					if(PrmTemplate.Reference2 entered)
						invoked.Reference2										= PrmTemplate.Reference2
					
					if(PrmTemplate.BalanceCurrency entered)
						invoked.BalanceCurrency									= PrmTemplate.BalanceCurrency
					if(PrmTemplate.RevalueCurrency entered)
						invoked.RevalueCurrency									= PrmTemplate.RevalueCurrency
					if(PrmTemplate.InvoiceCurrency entered)	
						invoked.InvoiceCurrency									= PrmTemplate.InvoiceCurrency
					if(PrmTemplate.DefaultVendorPaymentCurrency entered)	
						invoked.DefaultVendorPaymentCurrency					= PrmTemplate.DefaultVendorPaymentCurrency

					if(PrmTemplate.MaximumInvoiceAmount entered)	
						invoked.MaximumInvoiceAmount							= PrmTemplate.MaximumInvoiceAmount
					if(PrmTemplate.PrimeRate entered)	
						invoked.PrimeRate										= PrmTemplate.PrimeRate
					if(PrmTemplate.PaymentPriority entered)	
						invoked.PaymentPriority									= PrmTemplate.PaymentPriority
					if(PrmTemplate.VendorRestrictions.RestrictedCompany entered)	
						invoked.VendorRestrictions.RestrictedCompany			= PrmTemplate.VendorRestrictions.RestrictedCompany
					if(PrmTemplate.VendorRestrictions.RestrictedProcessLevel entered)	
						invoked.VendorRestrictions.RestrictedProcessLevel		= PrmTemplate.VendorRestrictions.RestrictedProcessLevel
					if(PrmTemplate.VendorRestrictions.RestrictedCompanyGroup entered)	
						invoked.VendorRestrictions.RestrictedCompanyGroup		= PrmTemplate.VendorRestrictions.RestrictedCompanyGroup
					if(PrmTemplate.TermsCode entered)	
						invoked.TermsCode										= PrmTemplate.TermsCode
					if(PrmTemplate.CashCode entered)	
						invoked.CashCode										= PrmTemplate.CashCode
					if(PrmTemplate.DiscountCode entered)	
						invoked.DiscountCode									= PrmTemplate.DiscountCode
					if(PrmTemplate.PayImmediately entered)	
						invoked.PayImmediately									= PrmTemplate.PayImmediately
					if(PrmTemplate.Enclosure entered)	
						invoked.Enclosure										= PrmTemplate.Enclosure
					if(PrmTemplate.InvoiceGroup entered)	
						invoked.InvoiceGroup									= PrmTemplate.InvoiceGroup
					if(PrmTemplate.BankTransactionCode entered)	
						invoked.BankTransactionCode								= PrmTemplate.BankTransactionCode
					if(PrmTemplate.PayablesProcessGroup entered)	
						invoked.PayablesProcessGroup							= PrmTemplate.PayablesProcessGroup
					if(PrmTemplate.SeparatePayment entered)	
						invoked.SeparatePayment									= PrmTemplate.SeparatePayment
					if(PrmTemplate.AuthorityCode entered)	
						invoked.AuthorityCode									= PrmTemplate.AuthorityCode
					if(PrmTemplate.TaxCode entered)	
						invoked.TaxCode											= PrmTemplate.TaxCode	
					if(PrmTemplate.DistributionCode entered)	
						invoked.DistributionCode								= PrmTemplate.DistributionCode
					if(PrmTemplate.TaxUsageCode entered)	
						invoked.TaxUsageCode									= PrmTemplate.TaxUsageCode
					if(PrmTemplate.AccrualCode entered)	
						invoked.AccrualCode										= PrmTemplate.AccrualCode
					if(PrmTemplate.DefaultTaxIndicator entered)	
						invoked.DefaultTaxIndicator								= PrmTemplate.DefaultTaxIndicator
					if(PrmTemplate.RetainageAccrualCode entered)	
						invoked.RetainageAccrualCode							= PrmTemplate.RetainageAccrualCode
					if(PrmTemplate.Project entered)	
						invoked.Project											= PrmTemplate.Project
					if(PrmTemplate.InvoiceRoutingCategory entered)	
						invoked.InvoiceRoutingCategory							= PrmTemplate.InvoiceRoutingCategory
					if(PrmTemplate.DiversityCode entered)	
						invoked.DiversityCode									= PrmTemplate.DiversityCode						
					
					if(PrmTemplate.MatchPrepayment entered)	
						invoked.MatchPrepayment									= PrmTemplate.MatchPrepayment	
					if(PrmTemplate.MatchPrepaymentMethod entered)	
						invoked.MatchPrepaymentMethod							= PrmTemplate.MatchPrepaymentMethod
					if(PrmTemplate.CreatePOD entered)	
						invoked.CreatePOD										= PrmTemplate.CreatePOD
					if(PrmTemplate.HoldUntilInspected entered)	
						invoked.HoldUntilInspected								= PrmTemplate.HoldUntilInspected
					if(PrmTemplate.PoolOption entered)	
						invoked.PoolOption										= PrmTemplate.PoolOption
					if(PrmTemplate.RequirePurchaseOrder entered)	
						invoked.RequirePurchaseOrder							= PrmTemplate.RequirePurchaseOrder
					if(PrmTemplate.RequireMatchReference entered)	
						invoked.RequireMatchReference							= PrmTemplate.RequireMatchReference
					if(PrmTemplate.ChargebackMinimumAmount entered)	
						invoked.ChargebackMinimumAmount							= PrmTemplate.ChargebackMinimumAmount
					if(PrmTemplate.AutomaticChargebackHoldCode entered)	
						invoked.AutomaticChargebackHoldCode						= PrmTemplate.AutomaticChargebackHoldCode
					if(PrmTemplate.TermsCalculation entered)	
						invoked.TermsCalculation								= PrmTemplate.TermsCalculation
					if(PrmTemplate.AllowZeroCostInvoice entered)	
						invoked.AllowZeroCostInvoice							= PrmTemplate.AllowZeroCostInvoice
					if(PrmTemplate.FloatDays entered)	
						invoked.FloatDays										= PrmTemplate.FloatDays
					if(PrmTemplate.ApplyFloatDaysToDueDate entered)	
						invoked.ApplyFloatDaysToDueDate							= PrmTemplate.ApplyFloatDaysToDueDate
					if(PrmTemplate.MatchTable entered)	
						invoked.MatchTable										= PrmTemplate.MatchTable
					if(PrmTemplate.RuleGroup entered)	
						invoked.RuleGroup										= PrmTemplate.RuleGroup	
					if(PrmTemplate.CostComponentMatch entered)	
						invoked.CostComponentMatch								= PrmTemplate.CostComponentMatch
					
					
					if(PrmTemplate.ReplaceGoods entered)	
						invoked.ReplaceGoods									= PrmTemplate.ReplaceGoods
					if(PrmTemplate.ShipOrHold entered)	
						invoked.ShipOrHold										= PrmTemplate.ShipOrHold
					if(PrmTemplate.WriteOffAmount entered)	
						invoked.WriteOffAmount									= PrmTemplate.WriteOffAmount
					if(PrmTemplate.VendorClaimType entered)	
						invoked.VendorClaimType									= PrmTemplate.VendorClaimType
					if(PrmTemplate.LanguageCode entered)	
						invoked.LanguageCode									= PrmTemplate.LanguageCode
					if(PrmTemplate.CaseNumber entered)	
						invoked.CaseNumber										= PrmTemplate.CaseNumber
					
					if(PrmTemplate.ExpenseDefault entered)	
						invoked.ExpenseDefault									= PrmTemplate.ExpenseDefault
					if(PrmTemplate.ExternalAccountingEntity entered)	
						invoked.ExternalAccountingEntity						= PrmTemplate.ExternalAccountingEntity
					if(PrmTemplate.ExternalLocation entered)	
						invoked.ExternalLocation								= PrmTemplate.ExternalLocation
					
		
FileCreationLogic.Vendor is a BusinessClass

	Persistent Fields
	
	Local Fields
					
	Relations
		
	Derived Fields
				
	Actions
	
		GeneratePreviewRecordsForRunGroup is a Set Action
			restricted
			synchronized on untranslatable:"Vendor_GeneratePreviewRecordsForRunGroup_<FinanceEnterpriseGroupPrm>_<PrmRunGroup>"

			Parameters
				FinanceEnterpriseGroupPrm		is a FinanceEnterpriseGroup
				FileCreationSetupPrm	is a FileCreationSetup
				BeginTimeStamp			is TimeStamp
				EndTimeStamp			is TimeStamp
				AllRecords				is Boolean
				PrmNumberOfRunGroups	is Numeric 3
				PrmRunGroup				is Numeric 3
				
			Local Fields
				LocalVendorGroupSelection		is a Vendor group in subject FileCreationVendor
			Instance Selection
				where (BusinessGroupRel.FinanceEnterpriseGroup = FinanceEnterpriseGroupPrm
				and    (PrmNumberOfRunGroups <= 1
				or      Vendor % PrmNumberOfRunGroups = PrmRunGroup)
				and	   (AllRecords
				or	    (update stamp > BeginTimeStamp
				and	     update stamp <= EndTimeStamp)))

			Action Rules
				Instance Rules
					LocalVendorGroupSelection = FileCreationSetupPrm.EligibilityGroup
					if (LocalVendorGroupSelection not entered
					or	Vendor within LocalVendorGroupSelection)
						invoke Create FileCreationRecord
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroupPrm
							invoked.FileCreationSetup	= FileCreationSetupPrm
							invoked.Key1				= VendorGroup
							invoked.Key2				= Vendor
							invoked.SystemTimeStamp		= EndTimeStamp
							invoked.EffectiveDate		= system current corporate date
							invoked.Status				= 1
