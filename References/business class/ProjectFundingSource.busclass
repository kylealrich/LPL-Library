ProjectFundingSource is a BusinessClass
    owned by Projects
    prefix is PRJFS

    Ontology
        symbolic key is ProjectFundingSource
	Patterns
        implements BODId        

   	Context Fields
		ContextProjectReportingSettings is a ProjectReportingSettings
		ContextProjectReportingSettingsAll is a ProjectReportingSettingsAll		
		PriorSearchDateRange            is a SearchDateRange
		CurrentSearchDateRange			is a SearchDateRangeTwo
		SearchProjectContract			is a ProjectContract
		SearchFinanceDimension2			is a FinanceDimension2
		SearchRevenueRecognition

    Persistent Fields
    	Priority					is Numeric size 2
    	Percent						is Percent size 8.5
    	FundedAmount				is a CurrencyAmount
			precision is ProjectContract.Currency.NumberOfDecimals
    	FESExpenditures				is a CurrencyAmount
    		default label is "FrontEndSplitExpenditures"
			precision is ProjectContract.Currency.NumberOfDecimals
			disable Auditing
    	FESCommitments				is a CurrencyAmount
    		default label is "FrontEndSplitCommitments"
			precision is ProjectContract.Currency.NumberOfDecimals
			disable Auditing
		RevenueAccountOnly			is a GeneralLedgerChartAccount		
		RevenueDimension			is a ProjectCodeBlock				
		RevenueCodeBlockOption		is Numeric size 1
			default label is "RevenueStructureOption"
			States
				FullStructure		value is 1
				PartialStructure	value is 2
				None				value is 3
		RevenueFullAccount			is a FinanceCodeBlockFullNoProjectFD2
			default label is "FullRevenueFinanceStructure"
		RevenuePartialAccount		is a FinanceCodeBlockNoProjectFD2
			default label is "PartialRevenueFinanceStructure"
		RevenueAdjCodeBlockOption	is a RevenueCodeBlockOption
			default label is "RevenueAdjustmentStructureOption"
		RevenueAdjFullAccount		is a FinanceCodeBlockFullNoProjectFD2
			default label is "FullRevenueAdjustmentFinanceStructure"
		RevenueAdjPartialAccount	is a FinanceCodeBlockNoProjectFD2
			default label is "PartialRevenueAdjustmentFinanceStructure"
		RevenueClearingAccount		is a FinanceCodeBlockFullNoProjectFD2BalanceSheet
			default label is "RevenueClearingFinanceStructure"
		OffsetAccount				is a FinanceCodeBlockFullOffset		
			default label is "OffsetFinanceStructure"
		ClearingProject				is a Project
		BilledUnearnedAccount		is a FinanceCodeBlockFullNoProjectFD2BalanceSheet
			default label is "BilledUnearnedFinanceStructure"
		EarnedUnbilledAccount		is a FinanceCodeBlockFullNoProjectFD2BalanceSheet
			default label is "EarnedUnbilledFinanceStructure"
		PassThroughAccount			is a FinanceCodeBlockFullNoProjectFD2BalanceSheet
			default label is "PassThroughFinanceStructure"
		MatchFundingSource			is a FinanceDimension2
		TotalBilledAmount			is a CurrencyAmount
			precision is ProjectContract.Currency.NumberOfDecimals
			disable Auditing			
		TotalRecognizedAmount		is a CurrencyAmount
			precision is ProjectContract.Currency.NumberOfDecimals
			disable Auditing
		TotalBilledFees				is a CurrencyAmount
			precision is ProjectContract.Currency.NumberOfDecimals
			disable Auditing			
		TotalBilledAllowance		is a CurrencyAmount
			precision is ProjectContract.Currency.NumberOfDecimals
			disable Auditing
		TotalRecognizedAllowance	is a CurrencyAmount
			precision is ProjectContract.Currency.NumberOfDecimals
			disable Auditing
		TotalRetainedAmount			is a CurrencyAmount
			precision is ProjectContract.Currency.NumberOfDecimals
			disable Auditing
		TotalBilledPassThrough		is a CurrencyAmount
			precision is ProjectContract.Currency.NumberOfDecimals
			disable Auditing
		TotalRecognizedPassThrough	is a CurrencyAmount
			precision is ProjectContract.Currency.NumberOfDecimals
			disable Auditing
		TotalBillingAdjustments		is a CurrencyAmount
			precision is ProjectContract.Currency.NumberOfDecimals
			disable Auditing
		BillingForecast				is a CurrencyAmount
			precision is ProjectContract.Currency.NumberOfDecimals
			disable Auditing
		RevenueForecast				is a CurrencyAmount
			precision is ProjectContract.Currency.NumberOfDecimals
			disable Auditing			
		BillingForecastDate			is Date
		RevenueForecastDate			is Date
		Active
		PostingProject				is a Project
		ExpenseGroup				is a GLTransactionDetail group
			default label is "OverrideExpenseGroup"
		ExpenseGroupOption			is Numeric size 1
			States
				Include				value is 1
				Exclude				value is 2
		SelectedProjectsOnly		is Boolean
		ProjectJurisdictionCode
		BillToEmailAddress		    is an EmailAddressMulti 
			holds pii
		InvoiceIssueMethod			is Numeric size 1
			States
				Print				value is 1
				Email				value is 2
#ifndef property federal
		AllowancePercent			is Percent size 7.3
		AllowanceProject			is a Project
		AllowanceFullAccount		is a FinanceCodeBlockFullNoProjectFD2
			default label is "AllowanceFinanceStructure"
		AllowanceTaxable			is Boolean
#endif
		AdvanceBillFullAccount		is a FinanceCodeBlockFullNoProjectFD2Liability
			default label is "AdvanceBillingFinanceStructure"
		CustomerType				is a ProjectCustomerType
		FundingGroup				is Numeric size 2
		BillingGroup				is a ProjectBillingGroup
#ifdef module ar   	    
		CompanyCustomerGroup
		TermsCode
		HSNSACCode
#endif		      	    		
#ifndef module ar
		CompanyCustomerGroup	is a GlonlyCompanyCustomerGroup
		TermsCode				is AlphaUpper 10	
		HSNSACCode              is AlphaUpper size 20 				
#endif		
#ifdef module tx
		TaxCode
			default label is "ServiceLocationTaxCode"
		BuyerTaxCode				is a TaxCode
#endif
#ifndef module tx
		TaxCode						is AlphaUpper size 15
			default label is "ServiceLocationTaxCode"		
		BuyerTaxCode	 			is AlphaUpper size 15
#endif		
		TaxLocation					is a ProjectServiceLocation
			default label is "ServiceLocation"		
		BuyerTaxLocation			is a ProjectServiceLocation
		TaxCalculationOption		is Numeric size 1
			States
				Detail				value is 0
				Summary				value is 1
				Total				value is 2
#ifdef module idm
		ProjectInvoiceIDMEmailTemplate	is an IDMTemplate
			default label is "InvoiceIDMEmailTemplate"
		ProjectInvoiceReversalIDMEmailTemplate	is an IDMTemplate
			default label is "InvoiceReversalIDMEmailTemplate"
#endif
#ifndef module idm
		ProjectInvoiceIDMEmailTemplate  is Numeric 10
			default label is "InvoiceIDMEmailTemplate"
		ProjectInvoiceReversalIDMEmailTemplate	is Numeric 10
			default label is "InvoiceReversalIDMEmailTemplate"
#endif
		ProjectInvoiceIDMEmailSubject 	is Alpha size 255
			default label is "InvoiceIDMEmailSubject"
			Text Variables
				Contract								
				ProjectContractInvoice
				InvoiceDate
		ProjectInvoiceReversalIDMEmailSubject 	is Alpha size 255
			default label is "InvoiceReversalIDMEmailSubject"
			Text Variables
				Contract								
				ProjectContractInvoice
				InvoiceDate
#ifndef property federal
		RetainagePercent			is Percent size 7.3
		RetainageMaximum			is a CurrencyAmount
			precision is ProjectContract.Currency.NumberOfDecimals
		RetainageExpenseGroup		is a GLTransactionDetail group
		RetainageGroupOption		is Numeric size 1
			States
				Include				value is 1
				Exclude				value is 2
		RetainageProject			is a Project
		RetainageCodeBlock			is a FinanceCodeBlockFullNoProjectFD2BalanceSheet
			default label is "RetainageFinanceStructure"
		InvoiceFinanceCodeBlock		is a FinanceCodeBlockFull
			default label is "ReceivableFinanceStructure"
#endif
		CustomerPoNumber 			is Alpha size 22
			default label is "CustomerP\ONumber"
#ifdef module intercobilling
		FromCompany					is a ReceivableCompany
			default label is "ReceivableCompany"
		IntercompanyBillingRechargeItem
#endif
#ifndef module intercobilling
		FromCompany						is Numeric size 4
		IntercompanyBillingRechargeItem	is AlphaUpper size 30
#endif
#ifdef module ap
		FESEligibilityGroup			is a FrontEndSplitDistributions group
			default label is "OverrideFrontEndSplitEligibilityGroup"
   
        FESEligibilityGroupOption	is Numeric size 1
            States
                Include		value is 1
                Exclude		value is 2
#endif                
		BudgetAmount is an InternationalAmount
			precision is ProjectContract.Currency.NumberOfDecimals
		InvoiceMinimum				is a CurrencyAmount
			precision is ProjectContract.Currency.NumberOfDecimals

	Local Fields
		LocalProject	is a Project
		LocalRoundTo    is Decimal 5.4		
		LocalProjectContract is a ProjectContract
		
#ifdef module tx		
		LocalTaxCode	is like TaxCode
#endif
#ifndef module tx
		LocalTaxCode	is AlphaUpper size 15
#endif
#ifdef module ap
		LocalDerivedFESKey 		is a FrontEndSplitKey
#endif
		ActionCode				is Alpha size 1
			States
				Create  value is "C"
				Update	value is "U"
				Delete	value is "D"
		LocalBODCurrentTimeStamp		is a BODCurrentTimeStamp		
		LocalProjectInvoiceIDMEmailSubject 			is Alpha size 255
			Text Variables
				Contract				value is ProjectContract.Project.DisplayProject
				ProjectContractInvoice  value is "12345678"
				InvoiceDate				value is current corporate date
		LocalProjectInvoiceReversalIDMEmailSubject 			is Alpha size 255
			Text Variables
				Contract				value is ProjectContract.Project.DisplayProject
				ProjectContractInvoice  value is "12345678"
				InvoiceDate				value is current corporate date

		LocalPulseAlertFrom				is Alpha size 100
		LocalConfigurationParameter		is Alpha size up to 200

	Transient Fields
    	FinanceDimension2Structure
        	derive value from FinanceEnterpriseGroup.first EnterpriseDim2StructureRel.FinanceDimension2Structure
		ChangeOrderApproved         is Boolean
		UpdateFromProjectContractLineModification is Boolean
		CheckProjectContractAmounts is Boolean
		CheckFundingSourceAmounts is Boolean					
		ProjectFundingType
			derive value from FinanceDimension2.FundingType
	
    Derived Fields
		BilledRemaining is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals
			return (FundedAmount - TotalBilledAmount)

		UnretainedBilledRemaining is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals
			return (FundedAmount - TotalBilledAmount - TotalRemainingRetainerAmount)
			
		TotalJournalizedBilledAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (TotalBilledAmount - TotalDraftBilledAmount - TotalRetainedAmount)
		
		TotalDraftBilledAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (sum OpenInvoicesRel.InvoiceBilledAmount)

		TotalJournalizedRecognizedAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (TotalRecognizedAmount - TotalDraftRecognizedAmount)

		TotalDraftAdjustments is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (sum OpenInvoicesRel.InvoiceTotalAdjustment)

		TotalJournalizedAdjustments is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (TotalBillingAdjustments - TotalDraftAdjustments)

		TotalBilledRevenueVariance is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals
			restricted							
			return (TotalJournalizedBilledAmount - TotalJournalizedRecognizedAmount - TotalJournalizedAdjustments)
			
		BilledUnearnedBalance is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals
			if (TotalBilledRevenueVariance >0)							
				return TotalBilledRevenueVariance
			else
				return blank	

		EarnedUnbilledBalance is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals
			if (TotalBilledRevenueVariance <0)							
				return TotalBilledRevenueVariance *-1
			else
				return blank	
		
		TotalDraftRecognizedAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (sum OpenRevenueInvoicesRel.InvoiceTotalAmount - TotalDraftRecognizedAllowance - TotalDraftRecognizedPassThrough)

		TotalJournalizedBilledFees is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (TotalBilledFees - TotalDraftBilledFees)

		TotalDraftBilledFees is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (sum OpenInvoicesRel.InvoiceTotalFees)

		TotalJournalizedBilledAllowance is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (TotalBilledAllowance - TotalDraftBilledAllowance)

		TotalDraftBilledAllowance is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (sum OpenInvoicesRel.InvoiceTotalAllowance)

		TotalJournalizedRecognizedAllowance is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (TotalRecognizedAllowance - TotalDraftRecognizedAllowance)

		TotalDraftRecognizedAllowance is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (sum OpenRevenueInvoicesRel.InvoiceTotalAllowance)
			
		TotalJournalizedBilledPassThrough is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (TotalBilledPassThrough - TotalDraftBilledPassThrough)

		TotalDraftBilledPassThrough is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (sum OpenInvoicesRel.InvoiceTotalPassThrough)

		TotalJournalizedRecognizedPassThrough is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (TotalRecognizedPassThrough - TotalDraftRecognizedPassThrough)

		TotalDraftRecognizedPassThrough is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (sum OpenRevenueInvoicesRel.InvoiceTotalPassThrough)
			
		TotalJournalizedRetainedAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (TotalRetainedAmount - TotalDraftRetainedAmount)

		TotalDraftRetainedAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (sum OpenInvoicesRel.InvoiceTotalRetainage)

		TotalInvoicedRetainageAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (sum RetainageInvoicesRel.InvoiceTotalAmount)

		TotalUnappliedAdvanceBillingAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (sum ProjectContractAdvanceRel.Amount)
		
		RevenueRemaining is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (FundedAmount - TotalRecognizedAmount)

		DerviedExpenditures is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (ProjectContract.Project.ProjectActualAmount * Percent)

		DerviedExpendituresAll is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (ProjectContract.Project.ProjectActualAmountAll * Percent)

		TotalMilestoneBillingAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return sum ProjectContractMilestoneBillingRel.Amount			

		TotalMilestoneRevenueAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return sum ProjectContractMilestoneRevenueRel.Amount			

		TotalUnprocessedMilestoneBillingAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return sum ProjectContractMilestoneUnprocessedBillingRel.Amount			

		TotalUnprocessedMilestoneRevenueAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return sum ProjectContractMilestoneUnprocessedRevenueRel.Amount

		DerivedRoundTo is a DerivedField
    		type is Decimal 5.4
    		restricted
    		if (ProjectContract.Currency.NumberOfDecimals = 2)
    			return .01
    		else
    		if (ProjectContract.Currency.NumberOfDecimals = 0)
    			return 1
    		else
    		if (ProjectContract.Currency.NumberOfDecimals = 3)
    			return .001
    		else
    		if (ProjectContract.Currency.NumberOfDecimals = 4)
    			return .0001

		TotalRetainerAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return sum ProjectContractRetainer set.Amount			

		TotalAppliedRetainerAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return sum ProjectContractRetainer set.AppliedAmount			

		TotalRemainingRetainerAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (TotalRetainerAmount - TotalAppliedRetainerAmount)

		TotalBilledPlusRetainerAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (TotalBilledAmount + TotalRemainingRetainerAmount)

		RemainingFESAmount is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (FundedAmount - FESExpenditures - FESCommitments)
			
		DerivedRevenueAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (RevenueCodeBlockOption.PartialStructure)
				return RevenuePartialAccount.GeneralLedgerChartAccount
			else
				return RevenueFullAccount.GeneralLedgerChartAccount









		DerivedBuyerTaxCode is a DerivedField
			type is AlphaUpper size 15
			restricted
			if (BuyerTaxCode entered)
				return BuyerTaxCode
			else
				return BuyerTaxLocation.TaxCode	

		DerivedLastInvoiceDate is a DerivedField
			type is Date
			return last JournalizedInvoicesRel.InvoiceDate
			
		TotalBilledPrior is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals	
			return (sum JournalizedInvoicesPriorRel.InvoiceTotalAmount)

		TotalBilledCurrent is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals			
			return (sum JournalizedInvoicesCurrentRel.InvoiceTotalAmount)

		TotalRevenuePrior is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals
			if (ProjectContract.RevenueRecognition.Combined)
				return TotalBilledPrior		
			else				
				return (sum JournalizedRevenueInvoicesPriorRel.InvoiceTotalAmount - TotalDraftRecognizedAllowance)

		TotalRevenueCurrent is a DerivedField
			type is like InternationalAmount
				precision is ProjectContract.Currency.NumberOfDecimals
			if (ProjectContract.RevenueRecognition.Combined)
				return TotalBilledCurrent		
			else				
				return (sum JournalizedRevenueInvoicesCurrentRel.InvoiceTotalAmount - TotalDraftRecognizedAllowance)
				
#ifdef module ar		
		DerivedNationalCompany is a DerivedField
			type is like Company
			restricted
			if (CompanyCustomerRel.NationalAccountIndicator.No)
				return CompanyCustomerGroup.ReceivableCompany
			else
			if (CompanyCustomerRel.NationalAccountIndicator.Child)
				return CompanyCustomerRel.NationalCompany
			else
				return CompanyCustomerRel.Company

		DerivedNationalCustomer is a DerivedField
			type is like Customer
			restricted
			if (CompanyCustomerRel.NationalAccountIndicator.No)
				return CompanyCustomerGroup.Customer
			else
			if (CompanyCustomerRel.NationalAccountIndicator.Child)
				return NationalAccountRel.NationalAccount.NationalAccountGroup.NatCustomer
			else
				return CompanyCustomerRel.Customer
				
		DerivedBillToEmailAddress is a DerivedField
			type is like EmailAddress	
			if (CompanyCustomerGroup.CustomerBillTo entered)
				return CompanyCustomerGroup.CustomerBillTo.EmailAddress
			else
				return CompanyCustomerGroup.Customer.EmailAddress				
				
		DerivedBillToName is a DerivedField 
			type is like Name
			holds pii
			if (CompanyCustomerGroup.CustomerBillTo entered)
				return CompanyCustomerGroup.CustomerBillTo.Name
			else
				return CompanyCustomerGroup.Customer.Name 

        DerivedAddressLine1 is a DerivedField
            type is Alpha size 30
			if (CompanyCustomerGroup.CustomerBillTo entered)            
                return CompanyCustomerGroup.CustomerBillTo.PostalAddress.DeliveryAddress.AddressLine1
            else
				return CompanyCustomerGroup.Customer.PostalAddress.DeliveryAddress.AddressLine1                

        DerivedAddressLine2 is a DerivedField
            type is Alpha size 30
			if (CompanyCustomerGroup.CustomerBillTo entered)            
                return CompanyCustomerGroup.CustomerBillTo.PostalAddress.DeliveryAddress.AddressLine2
            else
				return CompanyCustomerGroup.Customer.PostalAddress.DeliveryAddress.AddressLine2
				
        DerivedAddressLine3 is a DerivedField
            type is Alpha size 30
			if (CompanyCustomerGroup.CustomerBillTo entered)            
                return CompanyCustomerGroup.CustomerBillTo.PostalAddress.DeliveryAddress.AddressLine3
            else
				return CompanyCustomerGroup.Customer.PostalAddress.DeliveryAddress.AddressLine3                
				                
        DerivedCity is a DerivedField
            type is Alpha size 18
			if (CompanyCustomerGroup.CustomerBillTo entered)            
                return CompanyCustomerGroup.CustomerBillTo.PostalAddress.Municipality
            else
				return CompanyCustomerGroup.Customer.PostalAddress.Municipality                

        DerivedStateProvince is a DerivedField
            type is AlphaUpper size 2
			if (CompanyCustomerGroup.CustomerBillTo entered)            
                return CompanyCustomerGroup.CustomerBillTo.PostalAddress.StateProvince
            else
				return CompanyCustomerGroup.Customer.PostalAddress.StateProvince                

        DerivedPostalCode is a DerivedField
            type is Alpha size 10
			if (CompanyCustomerGroup.CustomerBillTo entered)            
                return CompanyCustomerGroup.CustomerBillTo.PostalAddress.PostalCode
            else
				return CompanyCustomerGroup.Customer.PostalAddress.PostalCode                
#endif									

#ifdef module integration		
		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "tenantID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedProjectTypeLogic is a DerivedField
			type is Alpha size 20
			restricted
			if (ProjectContract.ProjectType.Posting)
				return "Posting"
			if (ProjectContract.ProjectType.Summary)
				return "Summary"
			if (ProjectContract.ProjectType.Node)
				return "Node"
				
		DerivedOldActive is a DerivedField
			type is Alpha size 20
			restricted
			if ( old Active = "false")
				return "inactivated"
			if ( old Active = "true")
				return "activated"
				
		DerivedNewActive is a DerivedField
			type is Alpha size 20
			restricted
			if (Active = "false")
				return "inactivated"
			if (Active = "true")
				return "activated"
			
		DerivedDisplayProject is a DerivedField
			type is Alpha size 25
			restricted
			return ProjectContract.Project.DisplayProject
		
		ProjectFundingSourceActiveAlertXML is a DerivedField
			type is XMLDocument
			restricted
			ProjectFundingSourceActiveAlertXML = template.IONProjectFundingSourceActiveAlert_ProjectFundingSource_ST document for this instance
			return ProjectFundingSourceActiveAlertXML
		
		ProjectFundingSourceActiveAlertDescription is a DerivedField
			type is Alpha size 100
			restricted
			return 	FinanceEnterpriseGroup.ProjectLabel + " Contract " + DerivedDisplayProject + " "  + FinanceDimension2.DisplayDimension + " has been " + DerivedNewActive + "."
		
		DerivedProjectFundingSourceActiveAlertBODID is a DerivedField
			type is Alpha size 100
			restricted
			return "infor-nid:" + DerivedTenantID +":"+ FinanceEnterpriseGroup +":"+ ProjectContract +":"+ "?ProjectFundingSourceActiveAlert&verb=Process"
		



		DerivedOldFundedAmount is a DerivedField
			type is Alpha size 20
			restricted
			return old FundedAmount

		DerivedCurrency is a  DerivedField
			type is Alpha size 5
			restricted
			return ProjectContract.Currency
			
		ProjectFundingSourceAmountChangedAlertXML is a DerivedField
			type is XMLDocument
			restricted
			ProjectFundingSourceAmountChangedAlertXML = template.IONProjectFundingSourceAmountChangedAlert_ProjectFundingSource_ST document for this instance
			return ProjectFundingSourceAmountChangedAlertXML
		
		ProjectFundingSourceAmountChangedAlertDescription is a DerivedField
			type is Alpha size 200
			restricted
			return FinanceEnterpriseGroup.ProjectLabel + " Contract " + DerivedDisplayProject + " " + FinanceDimension2.DisplayDimension + " amount has changed from " + DerivedOldFundedAmount + " " + DerivedCurrency + " to " + FundedAmount + " " + DerivedCurrency + "."
			
		DerivedProjectFundingSourceAmountChangedAlertBODID is a DerivedField
			type is Alpha size 200
			restricted
			return "infor-nid:" + DerivedTenantID +":"+ FinanceEnterpriseGroup +":"+ ProjectContract +":"+ "?ProjectFundingSourceAmountChangedAlert&verb=Process"

		

		DerivedOldPriority is a DerivedField
			type is Alpha size 2
			restricted
			return old Priority
			
		ProjectFundingSourcePriorityAlertXML is a DerivedField
			type is XMLDocument
			restricted
			ProjectFundingSourcePriorityAlertXML = template.IONProjectFundingSourcePriorityAlert_ProjectFundingSource_ST document for this instance
			return ProjectFundingSourcePriorityAlertXML
		
		ProjectFundingSourcePriorityAlertDescription is a DerivedField
			type is Alpha size 100
			restricted
			return FinanceEnterpriseGroup.ProjectLabel + " Contract " + DerivedDisplayProject+ " " + FinanceDimension2.DisplayDimension + " priority has changed from " + DerivedOldPriority + " to " + Priority + "."
			
		DerivedProjectFundingSourcePriorityAlertBODID is a DerivedField
			type is Alpha size 100
			restricted
			return "infor-nid:" + DerivedTenantID +":"+ FinanceEnterpriseGroup +":"+ ProjectContract +":"+ "?ProjectFundingSourcePriorityAlert&verb=Process"
		


								
		DerivedProjectPercentChangeBODID is a DerivedField
			type is Alpha 100
			restricted 
			return	"infor-nid:" + DerivedTenantID +":"+ ProjectContract +"?ProjectPercentChange&verb=Process"
	
		DerivedProject is a DerivedField
			type is AlphaUpper size 25
			restricted
			return	ProjectContract.Project
			
		DerivedOldPercent is a DerivedField
			type is Percent 5
			restricted
			return	old Percent
			
		DerivedFinanceEnterpriseGroupProjectLabel	is a DerivedField
			type is Alpha 25
			restricted
			return	FinanceEnterpriseGroup.ProjectLabel
			
		DerivedFD2DisplayDimension	is a DerivedField
			type is Alpha 10
			restricted
			return	FinanceDimension2.DisplayDimension

		ProjectPercentChangeAlertDescription is a DerivedField
			type is Alpha 200
			restricted
			return	DerivedFinanceEnterpriseGroupProjectLabel+" "+"Contract"+" "+DerivedDisplayProject+" "+ DerivedFD2DisplayDimension+" "+ "percent has changed from"+" "+DerivedOldPercent+" "+"to" +" "+Percent +"."
		
		ProjectPercentChangeAlertXML is a DerivedField
			type is XMLDocument
			restricted
			ProjectPercentChangeAlertXML = template.IONProjectPercentChange_ProjectFundingSource_ST document for this instance	

#endif
		DerivedProjectInvoiceIDMEmailSubject	is a DerivedField
			type is Alpha size 255
			restricted
			LocalProjectInvoiceIDMEmailSubject	= ProjectInvoiceIDMEmailSubject
			return LocalProjectInvoiceIDMEmailSubject text
			
		DerivedProjectInvoiceReversalIDMEmailSubject	is a DerivedField
			type is Alpha size 255
			restricted
			LocalProjectInvoiceReversalIDMEmailSubject	= ProjectInvoiceReversalIDMEmailSubject
			return LocalProjectInvoiceReversalIDMEmailSubject text

		InactiveMF is a MessageField
			restricted
			"INACTIVE"

		ActiveMF is a MessageField
			restricted
			"ACTIVE"
						
		StatusMessage is a ConditionalField
			type is Alpha size 20
			if (Active)
				ActiveMF//""
			else
				InactiveMF
				
		DerivedIncludeInBudgetEdit is a DerivedField
			type is Boolean
			return FinanceDimension2.DerivedIncludeInBudgetEdit
			
		BlankField is a DerivedField
			type is Alpha 15
			return blank
	Conditions
		RevenueFundsRemain
			restricted
			when (TotalRecognizedAmount < FundedAmount)

		BillingFundsRemain
			restricted
			when (TotalBilledAmount < FundedAmount)
			
		IsMilestoneBilling
			restricted
			when (ProjectContract.BillingMethod.Milestone)
			
		IsMilestoneBillingOrRevenue
			restricted
			when (ProjectContract.BillingMethod.Milestone
			or    ProjectContract.BillingMethod.Installment
			or    ProjectContract.RevenueMethod.Milestone
			or    ProjectContract.RevenueMethod.PercentageOfCompletion
			or    ProjectContract.RevenueMethod.Installment)

		MilestoneAccountRequired
			restricted
			when (((!ProjectContract.BillingMethod.Milestone
			and     !ProjectContract.BillingMethod.Installment
			and      ProjectContract.RevenueRecognition.Combined)
			or     (!ProjectContract.RevenueMethod.Milestone
			and     !ProjectContract.RevenueMethod.PercentageOfCompletion					
			and     !ProjectContract.RevenueMethod.Installment
			and      ProjectContract.RevenueRecognition.Separate))
			and     !IsInternalFund)

		OverrideBillingMilestonesAllowed
			restricted
			when (!ProjectContract.BillingMethod.Milestone
			and   !ProjectContract.BillingMethod.Installment)

		OverrideCombinedBillingMilestonesExist
			restricted
			when (ProjectContract.CombinedBillingMilestonesAllowed
			and   ProjectContractMilestoneBillingRel exists)

		OverrideSeparateBillingMilestonesExist
			restricted
			when (ProjectContract.SeparateBillingMilestonesAllowed
			and   ProjectContractMilestoneBillingRel exists)

		OverrideRevenueMilestonesExist
			restricted
			when (ProjectContract.RevenueMilestonesAllowed
			and   ProjectContractMilestoneRevenueRel exists)

		CanCreateBillingInstallments
			restricted
			when (ProjectContract.BillingMethod.Installment
			and   FundedAmount > TotalMilestoneBillingAmount)

		CanCreateRevenueInstallments
			restricted
			when (ProjectContract.RevenueMethod.Installment
			and   ProjectContract.RevenueRecognition.Separate
			and   FundedAmount > TotalMilestoneRevenueAmount)

		ClearingAccountVisible
			restricted
			when (ProjectContract.RevenueRecognition.Separate
			and   IsInternalFund)

		BilledUnearnedVisible
			restricted
			when (ProjectContract.RevenueRecognition.Separate
			and  !FinanceDimension2.FundingType.InternalFund)
						
		IsInternalFund	
			restricted
			when (FinanceDimension2.FundingType.InternalFund)

		IsExternalFund	
			restricted
			when (FinanceDimension2.FundingType.ExternalGrant
			or    FinanceDimension2.FundingType.ExternalCustomer)
			
		IsIntercompany
			restricted
			when (FinanceDimension2.FundingType.IntercompanyBilling)

		IsExternalGrantSEFA	
			restricted
			when (FinanceDimension2.FundingType.ExternalGrant
			and   FinanceDimension2.CFDANumber entered
			and   FinanceDimension2.SEFAFlag = true)

		CanHaveRetainers
			restricted
#ifndef property federal

			when (!FinanceDimension2.FundingType.InternalFund
			and   RetainagePercent not entered)
#endif
#ifdef property federal
			when (FinanceDimension2.IsExternalGrantOrCustomer)
#endif
		ProjectContractAdvanceRelExists
			restricted
			when (ProjectContractAdvanceRel exists)
			
		RevenueRecognitionSeparate
			restricted
			when (ProjectContract.RevenueRecognition.Separate)

		ProjectContractInvoiceBalanceSetExists
			restricted
			when (ProjectContractInvoiceBalance set exists)			

		DisplayFD2Link
			restricted		
			when (FinanceDimension2 set exists)
				
		RequiresApproval
			restricted	
			when (FinanceEnterpriseGroup.EnterpriseProjectStructure.ProjectContractChangeApproval)					
			
		HasProjectFundingSourceComments
			restricted
			when (ProjectFundingSourceComment set exists)
			
		MatchesProjectSearch
			when (!SearchProjectContract entered
			or	   ProjectContract = SearchProjectContract)
			
		MatchesFinDim2Search
			when (!SearchFinanceDimension2 entered
			or	   FinanceDimension2 = SearchFinanceDimension2)
			
		MatchesRevenueRecognitionSearch	
			when (!SearchRevenueRecognition entered
			or     ProjectContract.RevenueRecognition = SearchRevenueRecognition)

		ProcessedRetainersExist
			when (ProcessedRetainersRel exists)

#ifdef module ar
		RelatedCompanyCustomerExists
			restricted
			when (CompanyCustomerRel exists)

		RelatedCustomerGroupExists
			restricted
			when (CustomerGroupRel exists)

		DisplayOnlyForLoggedInUser
			restricted

			when  ((actor.agent(CustomerRepresentativeContact).IsActiveNationalAccountParent	
			and		DerivedNationalCompany = actor.agent(CustomerRepresentativeContact).ReceivableCompany
			and		DerivedNationalCustomer = actor.agent(CustomerRepresentativeContact).Customer)

			or		(actor.agent(CustomerRepresentativeContact).IsActiveInvoiceCustomer	
			and		CompanyCustomerGroup.ReceivableCompany = actor.agent(CustomerRepresentativeContact).ReceivableCompany
			and		CompanyCustomerGroup.Customer = actor.agent(CustomerRepresentativeContact).Customer))
#endif
		FrontEndSplitsEnabled
			restricted
			when(FinanceEnterpriseGroup.FrontEndSplits
			and ProjectContract.FrontEndSplits)
				
		UseFundedAmounts
			restricted
			when (FrontEndSplitsEnabled
			and   FinanceEnterpriseGroup.UseFundedAmounts)

		HasPostingReportingAccount	
			restricted		
			when (ProjectReportingSettingsRel.ReportingAccount entered
			and   ProjectReportingSettingsRel.ReportingAccount.ChartType.Posting
			and	  !ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)

		HasPostingReportingAccountAll	
			restricted		
			when (ProjectReportingSettingsAllRel.ReportingAccount entered
			and   ProjectReportingSettingsAllRel.ReportingAccount.ChartType.Posting
			and	  !ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)

		HasSummaryReportingAccount
			restricted			
			when (ProjectReportingSettingsRel.ReportingAccount entered
			and   ProjectReportingSettingsRel.ReportingAccount.ChartType.Summary
			and	  !ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)

		HasSummaryReportingAccountAll
			restricted			
			when (ProjectReportingSettingsAllRel.ReportingAccount entered
			and   ProjectReportingSettingsAllRel.ReportingAccount.ChartType.Summary
			and	  !ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)

		NoReportingAccountHasURE
			restricted			
			when (!ProjectReportingSettingsRel.ReportingAccount entered
			and	  !ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)

		NoReportingAccountHasUREAll
			restricted			
			when (!ProjectReportingSettingsAllRel.ReportingAccount entered
			and	  !ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)

		NoReportingAccountNoURE
			restricted					
			when (!ProjectReportingSettingsRel.ReportingAccount entered
			and	  ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)

		NoReportingAccountNoUREAll
			restricted					
			when (!ProjectReportingSettingsAllRel.ReportingAccount entered
			and	  ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)

		IsValidForActorContext
			when (FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)
					
    Relations
		ShadowPostingDescendantRel
			one-to-one relation to ProjectShadow
			Field Mapping uses BySummaryProject
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.SummaryProject   	   = ProjectContract
				related.Project				   = LocalProject
				
		ProjectContractMilestoneBillingRel is a ProjectContractMilestone set
			Instance Selection
				where (related.MilestoneType.Billing)

		ProjectContractMilestoneUnprocessedBillingRel
			one-to-many relation using ProjectContractMilestoneBillingRel
			Instance Selection
				where (related.Status.ToProcess
				or     related.Status.Hold)
				
		ProjectContractMilestoneRevenueRel is a ProjectContractMilestone set
			Instance Selection
				where (related.MilestoneType.Revenue)

		ProjectContractMilestoneUnprocessedRevenueRel
			one-to-many relation using ProjectContractMilestoneRevenueRel
			Instance Selection
				where (related.Status.ToProcess
				or     related.Status.Hold)

		ProjectContractMilestoneNoOverrideProjectRel is a ProjectContractMilestone set
			Instance Selection
				where (related.PostingProject not entered)
				
		PriorityRel
			one-to-many relation to ProjectFundingSource
			Field Mapping uses ByPriority
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.ProjectContract			= ProjectContract
				related.Priority				= Priority
			Instance Selection
				where (related.FinanceDimension2 != FinanceDimension2)				

		OtherFundingGroupMembersRel
			one-to-many relation to ProjectFundingSource
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.ProjectContract			= ProjectContract
			Instance Selection
				where (related.FundingGroup		  = FundingGroup
				and    related.FinanceDimension2 != FinanceDimension2)				

		OpenInvoicesRel is a ProjectContractInvoice set
			Instance Selection
				where (related.Status = 0
				and   (related.InvoiceType.Bill
				or     related.InvoiceType.Retainer
				or     related.InvoiceType.Retainage))

		OpenRevenueInvoicesRel is a ProjectContractInvoice set
			Instance Selection
				where (related.Status = 0
				and    related.InvoiceType.RevenueRecognition)
				
		JournalizedInvoicesRel is a ProjectContractInvoice set
			Instance Selection
				where (related.Status	= 1
				and   (related.InvoiceType.Bill
				or     related.InvoiceType.Retainage))
				
		RetainageInvoicesRel is a ProjectContractInvoice set
			Instance Selection
				where (related.InvoiceType.Retainage)

		JournalizedInvoicesWithUnbilledRetainageRel is a ProjectContractInvoice set
			Instance Selection
				where (related.Status.Journalized
				and    related.HasUnbilledRetainage				
				and    related.InvoiceType.Bill)

		JournalizedRevenueInvoicesPriorRel is a ProjectContractInvoice set
			Instance Selection
				where (related.Status	= 1
				and    related.InvoiceDate within PriorSearchDateRange
				and    related.InvoiceType.RevenueRecognition)
				
		JournalizedRevenueInvoicesCurrentRel is a ProjectContractInvoice set
			Instance Selection
				where (related.Status	= 1
				and    related.InvoiceDate within CurrentSearchDateRange
				and    related.InvoiceType.RevenueRecognition)
				
		JournalizedInvoicesPriorRel is a ProjectContractInvoice set
			Instance Selection
				where (related.Status	= 1
				and    related.InvoiceDate within PriorSearchDateRange			
				and    related.InvoiceType.Bill)

		JournalizedInvoicesCurrentRel is a ProjectContractInvoice set
			Instance Selection
				where (related.Status	= 1
				and    related.InvoiceDate within CurrentSearchDateRange			
				and    related.InvoiceType.Bill)
				
		ProcessedRetainersRel is a ProjectContractRetainer set
			Instance Selection
				where (related.Status.Processed
				and    related.RetainerType.Retainer)
				
		ProjectContractAdvanceRel is a ProjectContractAdvance set
			Instance Selection
				where (!related.Status.Applied)
				
		BillablePostingProjectsRel
			one-to-many relation to Project
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project					= BillableProjectShadowRel.Project
				
		BillableProjectShadowRel
			one-to-many relation to ProjectShadow
			Field Mapping uses BySummaryProject
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.SummaryProject			= LocalProjectContract
			Instance Selection
				where (related.Project.Active
				and    related.Project.ProjectType.Posting
				and    related.Project.Billable)

		FundingSourceSelectedProjectRel
			one-to-one relation to FundingSourceSelectedProject
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectContract			= ProjectContract
				related.FinanceDimension2		= FinanceDimension2
				related.Project					= LocalProject
#ifdef module ap
		FESDistributionsByKeyLocalRel
			one-to-many relation to FrontEndSplitDistributions
			Field Mapping uses ByFundingGroup
				related.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
			    related.FrontEndSplitDistributions.FundingKey 	= LocalDerivedFESKey
#endif
		SEFABillablePostingProjectsRel
			one-to-many relation to Project
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project					= SEFABillableProjectShadowRel.Project

		SEFABillableProjectShadowRel
			one-to-many relation to ProjectShadow
			Field Mapping uses BySummaryProject
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.SummaryProject			= ProjectContract
			Instance Selection
				where (related.Project.Active
				and    related.Project.ProjectType.Posting
				and    related.Project.Billable)

		GeneralLedgerTotalLTDActualsRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByLedger		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.Ledger = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Project = any SEFABillablePostingProjectsRel.Project)

		GeneralLedgerTotalLTDActualsAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByLedger		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.Ledger = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Project = any SEFABillablePostingProjectsRel.Project)

		GeneralLedgerTotalLTDActualsPostingRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByLedger		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.Ledger = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger				
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsRel.ReportingAccount
				and    related.GeneralLedgerTotal.Project = any SEFABillablePostingProjectsRel.Project)

		GeneralLedgerTotalLTDActualsPostingAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByLedger		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.Ledger = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger				
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsAllRel.ReportingAccount
				and    related.GeneralLedgerTotal.Project = any SEFABillablePostingProjectsRel.Project)

		GeneralLedgerTotalLTDActualsByChartRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByLedger		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Project = any SEFABillablePostingProjectsRel.Project)

		GeneralLedgerTotalLTDActualsByChartAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByLedger		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Project = any SEFABillablePostingProjectsRel.Project)
				
		GeneralLedgerTotalLTDActualsByChartNoURERel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByLedger		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario	
			Instance Selection
				where (related.GeneralLedgerTotal.Ledger = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartNoURERel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Project = any SEFABillablePostingProjectsRel.Project)

		GeneralLedgerTotalLTDActualsByChartNoUREAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByLedger		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario	
			Instance Selection
				where (related.GeneralLedgerTotal.Ledger = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartNoUREAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Project = any SEFABillablePostingProjectsRel.Project)
				
		GLChartAccountShadowRel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses BySummaryAccount
				related.FinanceEnterpriseGroup		     = FinanceEnterpriseGroup
				related.SummaryGeneralLedgerChartAccount = ProjectReportingSettingsRel.ReportingAccount
			Instance Selection
				where (related.ChartType.Posting)

		GLChartAccountShadowAllRel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses BySummaryAccount
				related.FinanceEnterpriseGroup		     = FinanceEnterpriseGroup
				related.SummaryGeneralLedgerChartAccount = ProjectReportingSettingsAllRel.ReportingAccount
			Instance Selection
				where (related.ChartType.Posting)
			
		GLChartAccountShadowDescendantsByChartRel 
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			 = FinanceEnterpriseGroup
				related.ReportingChart					 = ProjectReportingSettingsRel.Scenario.Basis.ReportingChart
			Instance Selection
				where (related.ChartType.Posting)

		GLChartAccountShadowDescendantsByChartAllRel 
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			 = FinanceEnterpriseGroup
				related.ReportingChart					 = ProjectReportingSettingsAllRel.Scenario.Basis.ReportingChart
			Instance Selection
				where (related.ChartType.Posting)
				
		GLChartAccountShadowDescendantsByChartNoURERel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses BySummaryAccount
				related.FinanceEnterpriseGroup		     = FinanceEnterpriseGroup
				related.SummaryGeneralLedgerChartAccount = ProjectReportingSettingsRel.Scenario.Basis.ChartAccountTopNode
			Instance Selection
				where (related.ChartType.Posting
				and   !related.GeneralLedgerChartAccount.SystemAccount.UndistributedRetainedEarnings)

		GLChartAccountShadowDescendantsByChartNoUREAllRel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses BySummaryAccount
				related.FinanceEnterpriseGroup		     = FinanceEnterpriseGroup
				related.SummaryGeneralLedgerChartAccount = ProjectReportingSettingsAllRel.Scenario.Basis.ChartAccountTopNode
			Instance Selection
				where (related.ChartType.Posting
				and   !related.GeneralLedgerChartAccount.SystemAccount.UndistributedRetainedEarnings)

		ProjectBillingGroupRel
			one-to-one relation to ProjectBillingGroup 
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.ProjectBillingGroup    = BillingGroup 
				
		ProjectReportingSettingsRel
			one-to-one relation to ProjectReportingSettings
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	 = FinanceEnterpriseGroup
				related.Actor				     = actor
				related.ProjectReportingSettings = ContextProjectReportingSettings
		ProjectReportingSettingsAllRel
			one-to-one relation to ProjectReportingSettingsAll
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	 = FinanceEnterpriseGroup
				related.ProjectReportingSettingsAll = ContextProjectReportingSettingsAll
		GrantReportingSettingsRel	
			one-to-many relation to GrantReportingSettings
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.FinanceDimension2		= FinanceDimension2
			Instance Selection
				where (related.ProjectContract = ProjectContract)

#ifdef module ar 		
        CompanyCustomerRel
            classic name is ARCUSTOMER
            one-to-one relation to CompanyCustomer
            required
            Field Mapping uses symbolic key
                related.Company  = CompanyCustomerGroup.ReceivableCompany
                related.Customer = CompanyCustomerGroup.Customer
		CustomerGroupRel
			one-to-one relation to CustomerGroup
			Field Mapping uses symbolic key
				related.CustomerGroup	= CompanyCustomerGroup.ReceivableCompany.CustomerGroupField.CustomerGroup
		
		NationalAccountRel
		    one-to-many relation to NationalAccount
		    Field Mapping uses Set2
		        related.NationalAccount.InvoiceAccountGroup.Company  = CompanyCustomerGroup.ReceivableCompany
		        related.NationalAccount.InvoiceAccountGroup.Customer = CompanyCustomerGroup.Customer
		        
		ReceivableInvoiceRel
			one-to-many relation to ReceivableInvoice
		  	Field Mapping uses ByTransactionDate
		        related.ProjectContract = ProjectContract
		  	Instance Selection
		    	where (related.Company.CustomerBusinessGroup.FinanceEnterpriseGroup = FinanceEnterpriseGroup)

		TaxEntityRel
			one-to-one relation to TaxEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.TaxEntity				= FinanceDimension2.CompanyCustomerGroup.ReceivableCompany.GeneralLedgerCompany.AccountingEntity

		EntityTaxCodeRel
			one-to-one relation to EntityTaxCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.TaxEntity				= FinanceDimension2.CompanyCustomerGroup.ReceivableCompany.GeneralLedgerCompany.AccountingEntity
				related.TaxCode					= LocalTaxCode
#endif                

#ifdef module integration
		FSMBODConfigurationParameterRel
        	one-to-one relation to FSMBODConfigurationParameter
			Field Mapping uses symbolic key
            	related.FSMBODConfigurationParameter 		= LocalConfigurationParameter
	
		FSMBODConfigurationPulseAlertRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 2
            	related.FSMBODConfiguration.Noun 		= "PulseAlert"
            	related.FSMBODConfiguration.Direction 	= 1
        
        FSMBODConfigurationDetailPulseAlertRel
        	one-to-many relation to FSMBODConfigurationDetail
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 			= 2	
            	related.FSMBODConfiguration.Noun 			= "PulseAlert"
            	related.FSMBODConfiguration.Direction 		= 1
            Instance Selection
				where (related.Alert						= LocalPulseAlertFrom
				and	   related.Enable)


#endif    
	Sets
		ByPriority
			Sort Order
				FinanceEnterpriseGroup
				ProjectContract
				Priority
				FinanceDimension2
				
#ifdef module ar		
		ByCompanyCustomer
			Sort Order
				CompanyCustomerGroup.ReceivableCompany
            	CompanyCustomerGroup.Customer
				FinanceEnterpriseGroup
				ProjectContract
				FinanceDimension2
#endif
	Rule Blocks
#ifdef module integration
		TriggerProjectFundingSourcePriorityAlertRules
			LocalPulseAlertFrom = "FSM_ION_ProjectFundingSourcePriorityAlert"
			if (FinanceEnterpriseGroup.BODTrigger and FSMBODConfigurationPulseAlertRel.Enable)
	          	if(FSMBODConfigurationDetailPulseAlertRel.Enable)
					invoke TriggerPulseAlert FSMBODConfigurationPulseAlertRel
						invoked.PrmActorGroup 	= "PROJECTFUNDINGSOURCE" 
						invoked.PrmMainXML 		= ProjectFundingSourcePriorityAlertXML	
						invoked.PrmDescription	= ProjectFundingSourcePriorityAlertDescription
						invoked.PrmBODID		= DerivedProjectFundingSourcePriorityAlertBODID
	
		TriggerProjectFundingSourceAmountChangedAlertRules
			LocalPulseAlertFrom  = "FSM_ION_ProjectFundingSourceAmountChangedAlert"
			if (FinanceEnterpriseGroup.BODTrigger and FSMBODConfigurationPulseAlertRel.Enable)
				if(FSMBODConfigurationDetailPulseAlertRel.Enable)
					invoke TriggerPulseAlert FSMBODConfigurationPulseAlertRel
						invoked.PrmActorGroup 	= "PROJECTFUNDINGSOURCE" 
						invoked.PrmMainXML 		= ProjectFundingSourceAmountChangedAlertXML	
						invoked.PrmDescription	= ProjectFundingSourceAmountChangedAlertDescription
						invoked.PrmBODID		= DerivedProjectFundingSourceAmountChangedAlertBODID
#endif				
    Field Rules
    	Priority
			required
	    	constraint (PriorityRel not exists)
	    		"PriorityAlreadyAssigned"
			if (Priority changed)			
				if (RequiresApproval)
					constraint (ChangeOrderApproved)
						"CannotChangePriority;MustUseProjectFundingSourceChangeRequest"				

		FundingGroup
			if (FundingGroup changed)			
				if (RequiresApproval)
					constraint (ChangeOrderApproved)
						"CannotChangeFundingGroup;MustUseProjectFundingSourceChangeRequest"

		Percent
			if (Active)		
				required
			if (Percent changed)
				if (RequiresApproval)
					constraint (ChangeOrderApproved)
						"CannotChangePercent;MustUseProjectFundingSourceChangeRequest"				
				invoke TriggerProjectPercentChangeService	
		
		FundedAmount
			if (Active)		
				required
					"FundedAmountIsRequired"
			if (FundedAmount changed)
				if (RequiresApproval)
					constraint (ChangeOrderApproved)
						"CannotChangeFundedAmount;MustUseProjectFundingSourceChangeRequest"				
				constraint (FundedAmount >= TotalBilledPlusRetainerAmount)
					"FundedAmountCannotBeLessThanTotalBilledPlusRetainerAmountOf<TotalBilledPlusRetainerAmount>"
				constraint (FundedAmount >= TotalRecognizedAmount)
					"FundedAmountCannotBeLessThanTotalRecognizedAmountOf<TotalRecognizedAmount>"
				constraint (FundedAmount >= TotalMilestoneBillingAmount)
					"FundedAmountCannotBeLessThanTotalMilestoneBillingAmountOf<TotalMilestoneBillingAmount>"
				constraint (FundedAmount >= TotalMilestoneRevenueAmount)
					"FundedAmountCannotBeLessThanTotalMilestoneRevenueAmount<TotalMilestoneRevenueAmount>"
				if (FESExpenditures entered
				or  FESCommitments entered)
					constraint (FundedAmount >= (FESExpenditures + FESCommitments))
						"FundedAmountCannotBeLessThanTotalFrontEndSplitExpendituresAndCommitments"

		PostingProject
			if (IsMilestoneBillingOrRevenue)
				required
					"Posting<FinanceEnterpriseGroup.ProjectLabel>IsRequiredForMilestoneOrInstallmentBillingOrRevenue"
			else
			if (ProjectContractMilestoneNoOverrideProjectRel exists)
				required
					"Posting<FinanceEnterpriseGroup.ProjectLabel>IsRequired;_MilestonesExist"
			if (PostingProject entered)
				LocalProject = PostingProject
				constraint (ShadowPostingDescendantRel.Project.ProjectType.Posting)
					"Posting<FinanceEnterpriseGroup.ProjectLabel>MustBeAPostingDescendantOf<ProjectContract.DisplayContract>"
				constraint (PostingProject.IsBillable)
					"Posting<FinanceEnterpriseGroup.ProjectLabel>MustBeBillableAndProjectStatusMustBeBillable"

		RevenueCodeBlockOption
			default to FinanceDimension2.RevenueCodeBlockOption
			required
			if (RevenueCodeBlockOption.None)
				constraint (IsInternalFund)
					"RevenueStructureOptionOf_NoneValidForInternalFundingTypeOnly"
			if (((ProjectContract.BillingMethod.Milestone
			or    ProjectContract.BillingMethod.Installment)
			and  ProjectContract.RevenueRecognition.Combined)
			or  (ProjectContract.RevenueRecognition.Separate
			and (ProjectContract.RevenueMethod.Milestone
			or   ProjectContract.RevenueMethod.PercentageOfCompletion
			or   ProjectContract.RevenueMethod.Installment)))
				if (IsInternalFund)
					constraint (RevenueCodeBlockOption.FullStructure
					or          RevenueCodeBlockOption.None)
						"ContractBillingMethodAndRevenueRecognitionTypeRequireRevenueStructureOptionBe_FullOr_None"
				else
					constraint (RevenueCodeBlockOption.FullStructure)
						"ContractBillingMethodAndRevenueRecognitionTypeRequireRevenueStructureOptionBe_Full"
					
		RevenuePartialAccount
			if (RevenueCodeBlockOption.PartialStructure)
				default to FinanceDimension2.RevenuePartialAccount
					default individual fields
				required
					"PartialRevenueFinanceStructureRequired"
				constraint (RevenuePartialAccount.GeneralLedgerChartAccount entered)
					"Revenue<FinanceEnterpriseGroup.AccountLabel>Required"
				if (ProjectContract.FrontEndSplits)
					if (FinanceEnterpriseGroup.FundDimension.Dimension1)
						constraint (RevenuePartialAccount.FinanceDimension1 entered)
							"<FinanceEnterpriseGroup.FinanceDimension1Label>RequiredForFrontEndSplit"
					else
					if (FinanceEnterpriseGroup.FundDimension.AccountingUnit)
						constraint (RevenuePartialAccount.AccountingUnit entered)
							"<FinanceEnterpriseGroup.AccountingUnitLabel>RequiredForFrontEndSplit"
			else
			if (RevenueCodeBlockOption.None)
				if (ProjectContract.FrontEndSplits)
					if (FinanceEnterpriseGroup.FundDimension.Dimension1)
						constraint (RevenuePartialAccount.FinanceDimension1 entered
						or          RevenueFullAccount.FinanceDimension1 entered)
							"<FinanceEnterpriseGroup.FinanceDimension1Label>RequiredForFrontEndSplit"
					else
					if (FinanceEnterpriseGroup.FundDimension.AccountingUnit)
						constraint (RevenuePartialAccount.AccountingUnit entered
						or          RevenueFullAccount.AccountingUnit entered)
							"<FinanceEnterpriseGroup.AccountingUnitLabel>RequiredForFrontEndSplit"
			else
				cannot be entered
					"CannotEnterPartialRevenueFinanceStructureUnlessRevenueStructureOptionIs_Partial"

		RevenueFullAccount
			if (RevenueCodeBlockOption.FullStructure)
				default to FinanceDimension2.RevenueFullAccount
					default individual fields			
				required
					"FullRevenueFinanceStructureRequired"
			else
			if (RevenueCodeBlockOption.PartialStructure)
				cannot be entered
					"CannotEnterFullRevenueFinanceStructureUnlessRevenueStructureOptionIs_Full"

		RevenueAdjPartialAccount
			if (RevenueAdjCodeBlockOption.PartialStructure)
				required
					"PartialRevenueAdjustmentFinanceStructureRequired"
				constraint (RevenueAdjPartialAccount.GeneralLedgerChartAccount entered)
					"RevenueAdjustment<FinanceEnterpriseGroup.AccountLabel>Required"








			else
				cannot be entered
					"CannotEnterPartialRevenueAdjustmentFinanceStructureUnlessRevenueAdjustmentStructureOptionIs_Partial"

		RevenueAdjFullAccount
			if (RevenueAdjCodeBlockOption.FullStructure)
				required
					"FullRevenueAdjustmentFinanceStructureRequired"
			else
				cannot be entered
					"CannotEnterFullRevenueAdjustmentFinanceStructureUnlessRevenueAdjustmentStructureOptionIs_Full"

		RevenueClearingAccount
			if (IsInternalFund)
				if (!RevenueCodeBlockOption.None)
					if (ProjectContract.RevenueRecognition.Separate)
						required
							"RevenueClearingFinanceStructureRequiredForInternalFundingSourceAndSeparateRevenueRecognition"
					else
						cannot be entered
							"RevenueClearingFinanceStructureInvalidForInternalFundingSourceAndCombinedRevenueRecognition"
			else
				cannot be entered
					"RevenueClearingFinanceStructureInvalidForExternalFundingSource"

		ClearingProject
			if (!RevenueCodeBlockOption.None)
				if (ProjectContract.RevenueRecognition.Separate)
					required
						"Clearing<FinanceEnterpriseGroup.ProjectLabel>RequiredForSeparateRevenueRecognition"
				else
					cannot be entered
						"Clearing<FinanceEnterpriseGroup.ProjectLabel>InvalidForCombinedRevenueRecognition"
			if (ClearingProject entered)
				LocalProject = ClearingProject
				constraint (ShadowPostingDescendantRel.Project.ProjectType.Posting)
					"Clearing<FinanceEnterpriseGroup.ProjectLabel>MustBeAPostingDescendantOf<ProjectContract.DisplayContract>"
				constraint (ClearingProject.IsRevenueRecognition)
					"Clearing<FinanceEnterpriseGroup.ProjectLabel>MustBeBillableAndProjectStatusMustAllowRevenueRecognition"
						
		BilledUnearnedAccount
			constraint (BilledUnearnedAccount.GeneralLedgerChartAccount.ChartSection.BalanceSheet)
				"AccountChartSectionMustBeBalanceSheet"
			if (IsExternalFund)
				if (ProjectContract.RevenueRecognition.Separate)
					required
						"BilledUnearnedFinanceStructureRequiredForExternalFundingSourceAndSeparateRevenueRecognition"
				else
					cannot be entered
						"BilledUnearnedFinanceStructureInvalidForExternalFundingSourceAndCombinedRevenueRecognition"
			else
				cannot be entered
					"BilledUnearnedFinanceStructureInvalidForInternalFundingSource"

		EarnedUnbilledAccount
			constraint (EarnedUnbilledAccount.GeneralLedgerChartAccount.ChartSection.BalanceSheet)
				"AccountChartSectionMustBeBalanceSheet"
			if (IsExternalFund)
				if (ProjectContract.RevenueRecognition.Separate)
					required
						"EarnedUnbilledFinanceStructureRequiredForExternalFundingSourceAndSeparateRevenueRecognition"
				else
					cannot be entered
						"EarnedUnbilledFinanceStructureInvalidForExternalFundingSourceAndCombinedRevenueRecognition"
			else
				cannot be entered
					"EarnedUnbilledFinanceStructureInvalidForInternalFundingSource"
#ifndef property federal
#ifdef module ar 
		InvoiceFinanceCodeBlock
			if (IsExternalFund)
				if (CompanyCustomerGroup.ReceivableCompany.DetailedInvoiceAccrualDistributions)
					default to FinanceDimension2.InvoiceFinanceCodeBlock
						default individual fields			
					required
						"ReceivableFinanceStructureRequired"
			else
				cannot be entered
					"ReceivableFinanceStructureInvalidForInternalFundingSource"
#endif
#endif
		OffsetAccount
			if  (IsInternalFund
			and !RevenueCodeBlockOption.None)
				default to FinanceDimension2.OffsetAccount
					default individual fields				
				required
					"OffsetAccountRequiredWhenFundTypeIsInternalFunding"
#ifdef module intercobilling
			if (IsIntercompany)
				default to FinanceDimension2.OffsetAccount
					default individual fields				
				required
					"PayablesExpenseFinanceStructureRequiredWhenFundTypeIsIntercompanyBilling"
#endif
			if (!IsInternalFund
			and !IsIntercompany)
				cannot be entered
					"OffsetAccountIsOnlyValidWhenFundTypeIsInternalFundingOrIntercompanyBilling"		
				










		Active
			if (Active changed
			and old Active)
				constraint (OpenInvoicesRel not exists)
					"CannotInactivateFundingSource;_CreatedInvoicesExist"
				constraint (OpenRevenueInvoicesRel not exists)
					"CannotInactivateFundingSource;_CreatedRevenueRecognitionExists"				

		
			if (FinanceEnterpriseGroup.BODTrigger)
				if(Active changed)
					trigger "ProjectFundingSourceActiveChangeService" PA service
						resume on error
						title is "FEG:<FinanceEnterpriseGroup>Project:<ProjectContract>"
						Criteria
							FinanceEnterpriseGroup							
						Variables
							FinanceEnterpriseGroup
								variable name is FinanceEnterpriseGroup	
							ProjectContract
								variable name is Project
							old Active
								variable name is OldActive
							Active
								variable name is NewActive
							ProjectContract.ProjectType
								variable name is ProjectType
							FinanceEnterpriseGroup.ProjectLabel
                                variable name is FEGProjectLabel
                            ProjectContract.Project.DisplayProject
                            	variable name is DisplayProject
							FinanceDimension2.DisplayDimension
								variable name is DisplayDimension
								
#ifdef module integration					
				if(Active changed)
					invoke TriggerProjectFundingSourceActiveAlert
						invoked.PrmPulseAlert = "FSM_ION_ProjectFundingSourceActiveAlert"	
#endif		

		ExpenseGroupOption
			if (ExpenseGroup entered)
				required
					"ExpenseGroupOptionRequiredWhenOverrideExpenseGroupEntered"				
			else
				cannot be entered
					"ExpenseGroupOptionOnlyValidWhenOverrideExpenseGroupEntered"				

		ProjectJurisdictionCode	
			initial value is FinanceDimension2.ProjectJurisdictionCode		
			constraint (FinanceDimension2.IsExternalGrantOrCustomer)
				"JurisdictionCodeIsOnlyValidForExternalGrantOrExternalCustomer"
#ifndef property federal
		AllowancePercent
			constraint (FinanceDimension2.IsExternalGrantOrCustomer)
				"AllowanceIsOnlyValidForExternalGrantOrExternalCustomer"
				
		AllowanceProject
			if (AllowancePercent entered)
				required



			if (AllowanceProject entered)
				LocalProject = AllowanceProject
				constraint (ShadowPostingDescendantRel.Project.ProjectType.Posting)
					"Allowance<FinanceEnterpriseGroup.ProjectLabel>MustBeAPostingDescendantOf<ProjectContract.DisplayContract>"
				constraint (AllowanceProject.IsBillable)
					"Allowance<FinanceEnterpriseGroup.ProjectLabel>MustBeBillableAndProjectStatusMustBeBillable"

		AllowanceFullAccount
			if (AllowancePercent entered)
				required
					"AllowanceFinanceStructureRequired"




		RetainagePercent
			constraint (FinanceDimension2.IsExternalGrantOrCustomer)
				"RetainageValidForExternalGrantsAndCustomersOnly"
			constraint (ProjectContractRetainer set not exists)
				"RetainageInvalidWhenRetainersExist"
			
		RetainageMaximum
			constraint (RetainagePercent entered)
				"RetainageMaximumOnlyValidWhenRetainagePercentEntered"

		RetainageExpenseGroup
			constraint (RetainagePercent entered)
				"RetainageExpenseGroupOnlyValidWhenRetainagePercentEntered"
				
		RetainageGroupOption
			if (RetainageExpenseGroup entered)
				required
					"RetainageGroupOptionRequiredWhenRetainageExpenseGroupEntered"				
			else
				cannot be entered
					"RetainageGroupOptionOnlyValidWhenRetainageExpenseGroupEntered"

		RetainageProject
			if (RetainagePercent entered)
				required
					"Retainage<FinanceEnterpriseGroup.ProjectLabel>RequiredWhenRetainagePercentEntered"
			if (TotalRetainedAmount entered)
				required
					"Retainage<FinanceEnterpriseGroup.ProjectLabel>Required;_RetainedAmountsExist"
			if (RetainageProject entered)
				LocalProject = RetainageProject
				constraint (ShadowPostingDescendantRel.Project.ProjectType.Posting)
					"Retainage<FinanceEnterpriseGroup.ProjectLabel>MustBeAPostingDescendantOf<ProjectContract.DisplayContract>"
				constraint (RetainageProject.IsBillable)
					"Retainage<FinanceEnterpriseGroup.ProjectLabel>MustBeBillableAndProjectStatusMustBeBillable"

		RetainageCodeBlock
			if (RetainageProject entered)
				required
					"RetainageFinanceStructureRequiredWhenRetainageProjectEntered"
			else
				cannot be entered
					"RetainageFinanceStructureOnlyValidWhenRetainageProjectEntered"
#endif
		CustomerType
			constraint (FinanceDimension2.IsExternalGrantOrCustomer)
				"CustomerTypeIsOnlyValidForExternalGrantOrExternalCustomer"

#ifdef module ar        











							

		BillToEmailAddress
			default to DerivedBillToEmailAddress
					
		InvoiceIssueMethod
			if (InvoiceIssueMethod.Email)
				constraint (BillToEmailAddress entered)
					"BillToEmailAddressRequiredForInvoiceIssueMethodEmail"				
				constraint (FinanceEnterpriseGroup.EnterpriseProjectStructure.ProjectInvoiceFromEmailAddress entered)
					"ProjectStructure<FinanceEnterpriseGroup.EnterpriseProjectStructure>ProjectInvoiceFromEmailAddressRequiredForInvoiceIssueMethodEmail"

				if (!ProjectContract.UseIDM)
					constraint (ProjectContract.ProjectInvoiceFormat entered)
						"ProjectContractInvoiceFormatRequiredForInvoiceIssueMethodEmail"	


#endif						
#ifdef module idm
				else
					constraint (ProjectContract.ProjectContractInvoiceTemplate entered)
						"ProjectContractInvoiceFormatRequiredForInvoiceIssueMethodEmail"
					constraint (ProjectContract.ProjectContractInvoiceReversalTemplate entered)
						"ProjectContractInvoiceReversalFormatRequiredForInvoiceIssueMethodEmail"
#endif 
#ifdef module ar 
			if (InvoiceIssueMethod.Print)	
				if (!ProjectContract.UseIDM) 
					constraint (ProjectContract.ProjectInvoiceFormat entered)
						"ProjectContractInvoiceFormatRequiredForInvoiceIssueMethodPrint"	


					constraint (FinanceEnterpriseGroup.EnterpriseProjectStructure.InvoicePrinterEmailAddress entered)
						"ProjectStructure<FinanceEnterpriseGroup.EnterpriseProjectStructure>InvoicePrinterEmailAddressRequiredForInvoiceIssueMethodPrint"
#endif
#ifdef module idm
				else
					constraint (ProjectContract.ProjectContractInvoiceTemplate entered)
						"ProjectContractInvoiceFormatRequiredForInvoiceIssueMethodPrint"
					constraint (ProjectContract.ProjectContractInvoiceReversalTemplate entered)
						"ProjectContractInvoiceReversalFormatRequiredForInvoiceIssueMethodPrint"
					constraint (FinanceEnterpriseGroup.EnterpriseProjectStructure.IDMPrinter entered)
						"ProjectStructure<FinanceEnterpriseGroup.EnterpriseProjectStructure>IDMPrinterRequiredForInvoiceIssueMethodPrint"
#endif				
#ifdef module ar
		HSNSACCode
			if (FinanceDimension2.CompanyCustomerGroup.ReceivableCompany.GeneralLedgerCompany.RequireHSNSACCode)
				required
					"HSN_/SACCodeIsRequired"
			else
    			cannot be entered	
    				"CannotEnter,HSN_/SACCodeFlagIsNotSetAtGlobalLedgerCompany"
    				 											  
		TaxCode
			constraint (TaxLocation not entered)
				"EnterEitherServiceLocationTaxCodeOrServiceTaxLocation"
			if (TaxCode entered
			and TaxEntityRel.UseTaxCodeAccounts)
				LocalTaxCode = TaxCode
				constraint (EntityTaxCodeRel exists)
					"TaxCodeNotDefinedForTaxEntity<FinanceDimension2.CompanyCustomerGroup.ReceivableCompany.GeneralLedgerCompany.AccountingEntity>"

		TaxLocation
			if (TaxLocation entered)
				constraint (TaxLocation.TaxCode entered)
					"TaxCodeMustBeEnteredOnTaxLocation"
				if (TaxEntityRel.UseTaxCodeAccounts)
					LocalTaxCode = TaxLocation.TaxCode
					constraint (EntityTaxCodeRel exists)
						"TaxLocationTaxCode<TaxLocation.TaxCode>NotDefinedForTaxEntity<FinanceDimension2.CompanyCustomerGroup.ReceivableCompany.GeneralLedgerCompany.AccountingEntity>"
				
		BuyerTaxCode
			constraint (BuyerTaxLocation not entered)
				"EnterEitherBuyerTaxCodeOrBuyerTaxLocation"
			if (BuyerTaxCode entered
			and TaxEntityRel.UseTaxCodeAccounts)			
				LocalTaxCode = BuyerTaxCode
				constraint (EntityTaxCodeRel exists)
					"TaxCodeNotDefinedForTaxEntity<FinanceDimension2.CompanyCustomerGroup.ReceivableCompany.GeneralLedgerCompany.AccountingEntity>"

		BuyerTaxLocation
			if (BuyerTaxLocation entered)
				constraint (BuyerTaxLocation.TaxCode entered)
					"TaxCodeMustBeEnteredOnTaxLocation"
				if (TaxEntityRel.UseTaxCodeAccounts)
					LocalTaxCode = BuyerTaxLocation.TaxCode
					constraint (EntityTaxCodeRel exists)
						"TaxLocationTaxCode<BuyerTaxLocation.TaxCode>NotDefinedForTaxEntity<FinanceDimension2.CompanyCustomerGroup.ReceivableCompany.GeneralLedgerCompany.AccountingEntity>"

		TaxCalculationOption
			if (TaxCalculationOption.Summary)
				constraint (!TaxEntityRel.ThirdParty.Sabrix)
					"TaxCalculationOptionCannotBeSummaryForOneSource"
			if (OpenInvoicesRel exists)
				cannot be changed
					"CannotChangeTaxCalculationOption;_DraftInvoicesExist"
#endif
#ifdef module intercobilling
		FromCompany
			if (FinanceDimension2.FundingType.IntercompanyBilling)
				required
					"ReceivableCompanyRequiredForIntercompanyBilling"
			else
				cannot be entered
					"ReceivableCompanyValidOnlyWhenFundingTypeIsIntercompanyBilling"
			constraint (FromCompany.AnyIntercompanyBillingFieldEntered)
				"ReceivableCompanyMustBeSetUpForIntercompanyBilling"
			constraint (FromCompany != FinanceDimension2.CompanyCustomerGroup.ReceivableCompany)
				"ReceivableCompanyCannotBeTheSameAs<FinanceEnterpriseGroup.FinanceDimension2Label>PayablesCompany"

		IntercompanyBillingRechargeItem
			if (FinanceDimension2.FundingType.IntercompanyBilling)
				required
					"IntercompanyBillingRechargeItemRequiredForIntercompanyBilling"
			else
				cannot be entered
					"IntercompanyBillingRechargeItemValidOnlyWhenFundingTypeIsIntercompanyBilling"
#endif
#ifdef module idm
		ProjectInvoiceIDMEmailTemplate
			if (InvoiceIssueMethod.Email)
				constraint (ProjectInvoiceIDMEmailTemplate.IDMDocumentType.ProjectContractInvoiceEmail)
					"InvalidTemplate"

		ProjectInvoiceReversalIDMEmailTemplate
			if (InvoiceIssueMethod.Email)
				constraint (ProjectInvoiceReversalIDMEmailTemplate.IDMDocumentType.ProjectContractInvoiceReversalEmail)
					"InvalidTemplate"
#endif
#ifdef module ap
 		FESEligibilityGroupOption
            if (FESEligibilityGroup entered)
                required
                    "FESEligibilityGroupOptionRequiredWhenFESEligibilityGroupEntered"
            else
                cannot be entered
                    "FESEligibilityGroupOptionOnlyValidWhenFESEligibilityGroupEntered"
#endif


	Action Exit Rules
		if (FinanceEnterpriseGroup.BODTrigger)
			if (action type.Update)
				if(FundedAmount changed)
					trigger "ProjectFundingSourceAmountChangedService" PA service
						resume on error
						title is "FEG:<FinanceEnterpriseGroup>PC:<ProjectContract>"
						Criteria
							FinanceEnterpriseGroup
						Variables
							FinanceEnterpriseGroup
								variable name is FinanceEnterpriseGroup
							ProjectContract
								variable name is Project
							ProjectContract.ProjectType
								variable name is ProjectType
							FundedAmount
								variable name is FundedAmount
							old FundedAmount
								variable name is OldFundedAmount
							ProjectContract.Currency
								variable name is Currency
							FinanceEnterpriseGroup.ProjectLabel
                                variable name is FEGProjectLabel
                            ProjectContract.Project.DisplayProject
                            	variable name is DisplayProject
							FinanceDimension2.DisplayDimension
								variable name is DisplayDimension
#ifdef module integration
					include TriggerProjectFundingSourceAmountChangedAlertRules
#endif
						
				
				if(Priority changed)
                	trigger "ProjectFundingSourcePriorityService" PA service
                		resume on error
                    	title is "FEG:<FinanceEnterpriseGroup>PFS:<ProjectContract>"
                    	Criteria
                    		FinanceEnterpriseGroup                       	
                    	Variables
                        	FinanceEnterpriseGroup
                        		variable name is FinanceEnterpriseGroup
							ProjectContract 
                            	variable name is Project
							ProjectContract.ProjectType
								variable name is ProjectType 
                        	Priority
                            	variable name is Priority
                        	old Priority
                            	variable name is OldPriority
                            FinanceEnterpriseGroup.ProjectLabel
                                variable name is FEGProjectLabel
                            ProjectContract.Project.DisplayProject
                            	variable name is DisplayProject
							FinanceDimension2.DisplayDimension
								variable name is DisplayDimension
				

#ifdef module integration			
					include TriggerProjectFundingSourcePriorityAlertRules
#endif
	Actions
		Create is a Create Action
#ifdef module ar
			Entrance Rules
				if (IsExternalFund
				or  IsIntercompany)
					CompanyCustomerGroup.ReceivableCompany			 = FinanceDimension2.CompanyCustomerGroup.ReceivableCompany
					CompanyCustomerGroup.Customer					 = FinanceDimension2.CompanyCustomerGroup.Customer
					CompanyCustomerGroup.CompanyCustomer			 = FinanceDimension2.CompanyCustomerGroup.CompanyCustomer
				    CompanyCustomerGroup.InvoiceTypeCode             = FinanceDimension2.CompanyCustomerGroup.InvoiceTypeCode
				    CompanyCustomerGroup.CustomerBillTo              = FinanceDimension2.CompanyCustomerGroup.CustomerBillTo				    
					CompanyCustomerGroup.ReceivableProcessLevel		 = FinanceDimension2.CompanyCustomerGroup.ReceivableProcessLevel
					CompanyCustomerGroup.ReceivableGeneralLedgerCode = FinanceDimension2.CompanyCustomerGroup.ReceivableGeneralLedgerCode
#endif			
			Action Rules
				constraint (FinanceDimension2.PostingDimension)
					"SourceMustBePostingLevel<FinanceEnterpriseGroup.FinanceDimension2Label>"
				constraint (FinanceDimension2.FundingType entered)
					"FundingTypeRequiredOn<FinanceEnterpriseGroup.FinanceDimension2Label>"
				if (FinanceDimension2.FundingType.IntercompanyBilling)
					constraint (ProjectContract.RevenueRecognition.Combined)
						"ContractRevenueRecognitionMustBeCombinedForIntercompanyBillingFundingSource"
				if (FinanceDimension2.Currency entered)
					constraint (FinanceDimension2.Currency = ProjectContract.Currency)
						"<FinanceEnterpriseGroup.FinanceDimension2Label>CurrencyMustBeTheSameAsProjectContractCurrency"


				if (FinanceDimension2.Amount entered)
					constraint (FinanceDimension2.TotalProjectFundedAmount + FundedAmount <= FinanceDimension2.Amount)
						"TotalFundedAmountCannotExceed<FinanceEnterpriseGroup.FinanceDimension2Label>_<FinanceDimension2.DisplayDimension>AmountOf<FinanceDimension2.Amount>"
#ifdef module ar
				if ((IsExternalFund
				or   IsIntercompany)
				and CompanyCustomerGroup.ReceivableCompany entered)
					if (!CompanyCustomerGroup.ReceivableCompany.TransactionCurrencyOverride
					or  !CompanyCustomerGroup.ReceivableCompany.MultiCurrencyProcessing)
						if (IsIntercompany)
							constraint (CompanyCustomerGroup.ReceivableCompany.Currency = ProjectContract.Currency)
								"PayablesCompanyBaseCurrencyMustMatchContractCurrency"
						else
							constraint (CompanyCustomerGroup.CompanyCustomer.Currency = ProjectContract.Currency)
								"CustomerDefaultTransactionCurrencyMustMatchContractCurrency"
#endif
				if (ProjectContract.TotalProjectFundedAmount + FundedAmount > ProjectContract.ContractAmount)
					confirmation required
						"TotalFundedAmountExceedsContract<ProjectContract.DisplayContract>AmountOf<ProjectContract.ContractAmount>;_UpdateContractAmount?"

			Field Rules
				CustomerPoNumber
					if (IsExternalFund)
						default to FinanceDimension2.CustomerPoNumber

			Exit Rules
				if (ProjectContract.TotalProjectFundedAmount > ProjectContract.ContractAmount)
					invoke Update ProjectContract
						invoked.ContractAmount = ProjectContract.TotalProjectFundedAmount
						
				if  (FundingGroup entered
				and !FrontEndSplitsEnabled)
					for each OtherFundingGroupMembersRel
						invoke UpdateBillingGroup each
							invoked.BillingGroup = BillingGroup
						



#ifdef module integration
		ProjectPercentChangeAlert is an Instance Action
			restricted
			Parameters
			Action Rules	
				invoke TriggerPulseAlert FSMBODConfigurationPulseAlertRel
					invoked.PrmActorGroup 	= "PROJECTFUNDINGSOURCE" 
					invoked.PrmMainXML 		= ProjectPercentChangeAlertXML	
					invoked.PrmDescription	= ProjectPercentChangeAlertDescription
					invoked.PrmBODID		= DerivedProjectPercentChangeBODID
#endif	
        TriggerProjectPercentChangeService is an Instance Action  
	  	 	restricted
			Action Rules
				if (FinanceEnterpriseGroup.BODTrigger)
					trigger "ProjectPercentChangeService" PA service
						resume on error
						title is "EG:<FinanceEnterpriseGroup>PC:<ProjectContract>"
						Criteria
							FinanceEnterpriseGroup
									
	
						Variables
							ProjectContract.Project.ProjectType
								variable name is ProjectType
							ProjectContract.Project
								variable name is Project							
							ProjectContract
								variable name is ProjectContract
							Percent	
								variable name is Percent	
							old Percent	
								variable name is OLDPercent			
                            FinanceEnterpriseGroup.ProjectLabel
                                variable name is FEGProjectLabel
                            ProjectContract.Project.DisplayProject
                            	variable name is DisplayProject
							FinanceDimension2.DisplayDimension
								variable name is DisplayDimension
#ifdef module integration
	       			if (FSMBODConfigurationPulseAlertRel.Enable)
	       				LocalPulseAlertFrom = "FSM_ION_ProjectPercentchangeAlert"
          				if(FSMBODConfigurationDetailPulseAlertRel.Enable)
			   				invoke ProjectPercentChangeAlert
#endif	




		
		UpdateBODIdFields is an Instance Action
			restricted
			Parameters
				PrmAccountingEntity  is Alpha size 22
					default label is "AccountingEntity"
				PrmLocation          is Alpha size 22
					default label is "Location" 
				PrmDocumentID        is Alpha size 100
					default label is "DocumentID"
				PrmRevision          is Alpha size 22
					default label is "Revision"	
				PrmSystemOfRecord    is Alpha size 1
					default label is "SystemOfRecord"
			Action Rules
				if (bod id.AccountingEntity != PrmAccountingEntity)
					bod id.AccountingEntity 	= PrmAccountingEntity
				if (bod id.Location != PrmLocation)
					bod id.Location				= PrmLocation
				if (bod id.DocumentID != PrmDocumentID)
					bod id.DocumentID			= PrmDocumentID
				if (bod id.Revision != PrmRevision)
					bod id.Revision				= PrmRevision
				if (bod id.SystemOfRecord != PrmSystemOfRecord)
					bod id.SystemOfRecord		= PrmSystemOfRecord
						
		Update is an Update Action
			Action Rules
				if (FundedAmount changed)
					if (!UpdateFromProjectContractLineModification
					or  CheckFundingSourceAmounts)
						if (FinanceDimension2.Amount entered)
							constraint (FinanceDimension2.TotalProjectFundedAmount <= FinanceDimension2.Amount)
								"TotalFundedAmountCannotExceed<FinanceEnterpriseGroup.FinanceDimension2Label>_<FinanceDimension2.DisplayDimension>AmountOf<FinanceDimension2.Amount>"
					if (ChangeOrderApproved)
						constraint (ProjectContract.TotalProjectFundedAmount <= ProjectContract.ContractAmount)
							"TotalFundedAmountCannotExceedContract<ProjectContract.DisplayContract>AmountOf<ProjectContract.ContractAmount>"
					else	
						if (!UpdateFromProjectContractLineModification)		
							if (ProjectContract.TotalProjectFundedAmount > ProjectContract.ContractAmount)
								confirmation required
									"TotalFundedAmountExceedsContract<ProjectContract.DisplayContract>AmountOf<ProjectContract.ContractAmount>;_UpdateContractAmount?"
						else
							if (UpdateFromProjectContractLineModification
							and CheckProjectContractAmounts)		
								constraint (ProjectContract.TotalProjectFundedAmount <= ProjectContract.ContractAmount)
										"TotalFundedAmountExceedsContract<ProjectContract.DisplayContract>AmountOf<ProjectContract.ContractAmount>"
						
#ifdef module ar						
				if (IsExternalFund
				or  IsIntercompany)        
					CompanyCustomerGroup.ReceivableCompany			 = FinanceDimension2.CompanyCustomerGroup.ReceivableCompany
					CompanyCustomerGroup.Customer					 = FinanceDimension2.CompanyCustomerGroup.Customer
					CompanyCustomerGroup.CompanyCustomer			 = FinanceDimension2.CompanyCustomerGroup.CompanyCustomer




					CompanyCustomerGroup.ReceivableProcessLevel		 = FinanceDimension2.CompanyCustomerGroup.ReceivableProcessLevel
					CompanyCustomerGroup.ReceivableGeneralLedgerCode = FinanceDimension2.CompanyCustomerGroup.ReceivableGeneralLedgerCode
#endif							
			Exit Rules
				if (FundedAmount > old FundedAmount
				and ProjectContract.TotalProjectFundedAmount > ProjectContract.ContractAmount)
					if (!UpdateFromProjectContractLineModification)				
						invoke Update ProjectContract
							invoked.ContractAmount = ProjectContract.TotalProjectFundedAmount
				if ((FundingGroup entered
				and (FundingGroup changed
				or   BillingGroup changed))
				and !FrontEndSplitsEnabled)				
					for each OtherFundingGroupMembersRel
						invoke UpdateBillingGroup each
							invoked.BillingGroup = BillingGroup
					
		UpdateBillingGroup is an Update Action
			restricted
			bypass field rules
										
		Delete is a Delete Action
			Action Rules
				constraint (TotalBilledAmount not entered)
					"CannotDelete;InvoicesExist"
				constraint (TotalRecognizedAmount not entered)
					"CannotDelete;RevenueHasBeenRecognized"
				constraint (FESExpenditures not entered
				and         FESCommitments not entered)
					"CannotDelete;_FrontEndSplitExpendituresOrCommitmentsExist"

		CreateBillingInstallments is an Instance Action
			valid when (CanCreateBillingInstallments)
			Parameters
				Frequency				is Numeric size 1
					States
						Weekly      	value is 1
						BiWeekly    	value is 2
						SemiMonthly 	value is 3
						Monthly     	value is 4
						FourWeekly  	value is 5
						BiMonthly		value is 6
						Quarterly		value is 7
						SemiAnnual		value is 8
						Annual			value is 9
				StartDate				is Date
				TotalAmount				is a CurrencyAmount
					precision is ProjectContract.Currency.NumberOfDecimals
				NumberOfInstallments	is Numeric size 3
				PostingProject			is a Project

			Parameter Rules
				Frequency
					required
				StartDate
					required
					if (Frequency.SemiMonthly)
						constraint (StartDate day = 15
						or          StartDate day = StartDate days in month)
							"SemiMonthlyInstallmentStartDateMustBeThe15thOrLastDayOfTheMonth"
				TotalAmount
					required
					initial value is (FundedAmount - TotalMilestoneBillingAmount)
					constraint (TotalAmount <= FundedAmount - TotalMilestoneBillingAmount)
						"TotalInstallmentAmountCannotExceedRemainingFundedAmount"
				NumberOfInstallments
					required
			Local Fields
				Counter				is Numeric size 3
				Suffix 				is Numeric size 3
				Suffix2				is Numeric size 3
				InstallmentCount	is Numeric size 8
				CalculatedDate		is Date
				RemainingAmount		is a CurrencyAmount
					precision is ProjectContract.Currency.NumberOfDecimals				
		    	InstallmentAmount	is a CurrencyAmount
					precision is ProjectContract.Currency.NumberOfDecimals
			Action Rules
				LocalRoundTo		= DerivedRoundTo							
				CalculatedDate		= StartDate
				InstallmentAmount	= TotalAmount / NumberOfInstallments
				round InstallmentAmount to nearest LocalRoundTo
				RemainingAmount		= TotalAmount
				InstallmentCount	= instance count of ProjectContractMilestoneBillingRel
				while (Counter < NumberOfInstallments)
					if (RemainingAmount < InstallmentAmount)
						InstallmentAmount = RemainingAmount
						RemainingAmount	  = 0
					else
						RemainingAmount	-= InstallmentAmount
					if (InstallmentAmount > 0)
						Suffix = Counter + 1
						InstallmentCount += 1
						if (Suffix = NumberOfInstallments
						and RemainingAmount > 0)
							InstallmentAmount += RemainingAmount
							RemainingAmount = 0
						invoke Create ProjectContractMilestone set
							invoked.MilestoneType		= 1
							invoked.Description			= "Installment " + InstallmentCount
							invoked.Amount				= InstallmentAmount
							invoked.MilestoneDate		= CalculatedDate
							invoked.PostingProject		= PostingProject
							invoked.BypassAmountEdit	= true

					if (Frequency.Weekly)
						CalculatedDate				= CalculatedDate + 7 days
					else
					if (Frequency.BiWeekly)
						CalculatedDate				= CalculatedDate + 14 days
					else
					if (Frequency.SemiMonthly)
						if (CalculatedDate day = 15)
				  			CalculatedDate			= CalculatedDate + 1 month - 15 days 
						else
							CalculatedDate			= CalculatedDate + 15 days
					else
					if (Frequency.Monthly)	
						CalculatedDate				= StartDate + Suffix as months
					else
					if (Frequency.FourWeekly)		
						CalculatedDate				= CalculatedDate + 28 days
					else
					if (Frequency.BiMonthly)
						Suffix2						= Suffix * 2
						CalculatedDate				= StartDate + Suffix2 as months
					else
					if (Frequency.Quarterly)
						Suffix2						= Suffix * 3
						CalculatedDate				= StartDate + Suffix2 as months
					else
					if (Frequency.SemiAnnual)
						Suffix2						= Suffix * 6
						CalculatedDate				= StartDate + Suffix2 as months
					else
					if (Frequency.Annual)
						CalculatedDate				= CalculatedDate + 1 year
					Counter += 1
										
		CreateRevenueInstallments is an Instance Action
			valid when (CanCreateRevenueInstallments)
			Parameters
				Frequency				is Numeric size 1
					States
						Weekly      	value is 1
						BiWeekly    	value is 2
						SemiMonthly 	value is 3
						Monthly     	value is 4
						FourWeekly  	value is 5
						BiMonthly		value is 6
						Quarterly		value is 7
						SemiAnnual		value is 8
						Annual			value is 9
				StartDate				is Date
				TotalAmount				is a CurrencyAmount
					precision is ProjectContract.Currency.NumberOfDecimals
				NumberOfInstallments	is Numeric size 3
				PostingProject			is a Project

			Parameter Rules
				Frequency
					required
				StartDate
					required
					if (Frequency.SemiMonthly)
						constraint (StartDate day = 15
						or          StartDate day = StartDate days in month)
							"SemiMonthlyMilestoneStartDateMustBeThe15thOrLastDayOfTheMonth"
				TotalAmount
					required
					initial value is (FundedAmount - TotalMilestoneRevenueAmount)					
					constraint (TotalAmount <= FundedAmount - TotalMilestoneRevenueAmount)
						"TotalInstallmentAmountCannotExceedRemainingFundedAmount"
				NumberOfInstallments
					required
			Local Fields
				Counter				is Numeric size 3
				Suffix 				is Numeric size 3
				Suffix2				is Numeric size 3
				InstallmentCount	is Numeric size 8				
				CalculatedDate		is Date
				RemainingAmount		is a CurrencyAmount
					precision is ProjectContract.Currency.NumberOfDecimals				
		    	InstallmentAmount	is a CurrencyAmount
					precision is ProjectContract.Currency.NumberOfDecimals
			Action Rules
				LocalRoundTo		= DerivedRoundTo							
				CalculatedDate		= StartDate
				InstallmentAmount	= TotalAmount / NumberOfInstallments
				round InstallmentAmount to nearest LocalRoundTo
				RemainingAmount		= TotalAmount
				InstallmentCount	= instance count of ProjectContractMilestoneRevenueRel				
				while (Counter < NumberOfInstallments)
					if (RemainingAmount < InstallmentAmount)
						InstallmentAmount = RemainingAmount
						RemainingAmount	  = 0
					else
						RemainingAmount	-= InstallmentAmount
					if (InstallmentAmount > 0)
						Suffix = Counter + 1
						InstallmentCount += 1						
						if (Suffix = NumberOfInstallments
						and RemainingAmount > 0)
							InstallmentAmount += RemainingAmount
							RemainingAmount = 0
						invoke Create ProjectContractMilestone set
							invoked.MilestoneType		= 2
							invoked.Description			= "Installment " + InstallmentCount
							invoked.Amount				= InstallmentAmount
							invoked.MilestoneDate		= CalculatedDate
							invoked.PostingProject		= PostingProject
							invoked.BypassAmountEdit	= true

					if (Frequency.Weekly)
						CalculatedDate				= CalculatedDate + 7 days
					else
					if (Frequency.BiWeekly)
						CalculatedDate				= CalculatedDate + 14 days
					else
					if (Frequency.SemiMonthly)
						if (CalculatedDate day = 15)
				  			CalculatedDate			= CalculatedDate + 1 month - 15 days 
						else
							CalculatedDate			= CalculatedDate + 15 days
					else
					if (Frequency.Monthly)	
						CalculatedDate				= StartDate + Suffix as months
					else
					if (Frequency.FourWeekly)		
						CalculatedDate				= CalculatedDate + 28 days
					else
					if (Frequency.BiMonthly)
						Suffix2						= Suffix * 2
						CalculatedDate				= StartDate + Suffix2 as months
					else
					if (Frequency.Quarterly)
						Suffix2						= Suffix * 3
						CalculatedDate				= StartDate + Suffix2 as months
					else
					if (Frequency.SemiAnnual)
						Suffix2						= Suffix * 6
						CalculatedDate				= StartDate + Suffix2 as months
					else
					if (Frequency.Annual)
						CalculatedDate				= CalculatedDate + 1 year
					Counter += 1
										
		UpdateTotalBilledAmount is an Instance Action
			restricted
			Parameters
				BilledAmount		is like InternationalAmount
					precision is ProjectContract.Currency.NumberOfDecimals
				BilledFees			is like InternationalAmount
					precision is ProjectContract.Currency.NumberOfDecimals
				BilledAllowance		is like InternationalAmount
					precision is ProjectContract.Currency.NumberOfDecimals
				BilledRetainage		is like InternationalAmount
					precision is ProjectContract.Currency.NumberOfDecimals
				BilledPassThrough	is like InternationalAmount
					precision is ProjectContract.Currency.NumberOfDecimals
				AdjustmentAmount	is like InternationalAmount
					precision is ProjectContract.Currency.NumberOfDecimals
			Action Rules
				TotalBilledAmount 	 	+= BilledAmount
				TotalBilledFees   	 	+= BilledFees
				TotalBilledAllowance 	+= BilledAllowance
				TotalRetainedAmount	 	+= BilledRetainage
				TotalBilledPassThrough	+= BilledPassThrough
				TotalBillingAdjustments	+= AdjustmentAmount

		UpdateTotalRecognizedAmount is an Instance Action
			restricted
			Parameters
				RecognizedAmount		is like InternationalAmount
					precision is ProjectContract.Currency.NumberOfDecimals
				RecognizedAllowance		is like InternationalAmount
					precision is ProjectContract.Currency.NumberOfDecimals
				RecognizedPassThrough	is like InternationalAmount
					precision is ProjectContract.Currency.NumberOfDecimals
			Action Rules
				TotalRecognizedAmount		+= RecognizedAmount
				TotalRecognizedAllowance	+= RecognizedAllowance
				TotalRecognizedPassThrough	+= RecognizedPassThrough

		UpdateForecast is an Instance Action
			restricted
			Parameters
				PrmAmount		is like InternationalAmount
					precision is ProjectContract.Currency.NumberOfDecimals
				PrmDate			is Date
				IsRevenue		is Boolean
			Action Rules
				if (IsRevenue)
					RevenueForecast		= PrmAmount
					RevenueForecastDate	= PrmDate
				else
					BillingForecast		= PrmAmount
					BillingForecastDate	= PrmDate

		InitializeFESExpenditures is an Instance Action
			restricted
			Action Rules
				initialize FESExpenditures
				initialize FESCommitments
				
		UpdateFESExpenditures is an Instance Action
			restricted
			refresh and lock this instance
			Parameters
				TransactionDate					is Date
				FinanceCodeBlock
				Amount							is like InternationalAmount
					precision is ProjectContract.Currency.NumberOfDecimals
				Commitment						is Boolean
			Local Fields
#ifdef module ap			
				FrontEndSplitDistributionsView	is a FrontEndSplitDistributions view
#endif				
				ValidRecord						is Boolean
			Action Rules
				ValidRecord	= true
				if (TransactionDate not within FinanceDimension2.DateRange)
					ValidRecord = false
				else
				if (SelectedProjectsOnly)
					LocalProject = FinanceCodeBlock.Project
					if (FundingSourceSelectedProjectRel not exists)
						ValidRecord = false
#ifdef module ap						
				if (ValidRecord
				and FESEligibilityGroup entered)
					LocalDerivedFESKey	= "PS-"+FinanceEnterpriseGroup+"-"+ProjectContract+"-"+FinanceDimension2
					invoke CreateNoRules FrontEndSplitDistributions
						assign result to FrontEndSplitDistributionsView
						invoked.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
						invoked.FrontEndSplitDistributions.FundingKey		= LocalDerivedFESKey
						invoked.CodeBlock									= FinanceCodeBlock
						invoked.DistributionAmount							= Amount
						invoked.TransactionDate								= TransactionDate
					if ((FESEligibilityGroupOption.Include
					and  FrontEndSplitDistributionsView.FrontEndSplitDistributions not within FESEligibilityGroup)
					or  (FESEligibilityGroupOption.Exclude
					and  FrontEndSplitDistributionsView.FrontEndSplitDistributions within FESEligibilityGroup))
						ValidRecord = false
					invoke Purge FESDistributionsByKeyLocalRel
#endif
				if (ValidRecord)
					if (Commitment)
						FESCommitments += Amount
					else
						FESExpenditures += Amount

		AddToModification is an Instance Action
			restricted		
			Parameters
				PrmProjectContractModification is a ProjectContractModification			
			Parameter Rules
			Action Rules
				invoke CreateModificationLine ProjectContractLineModification
		            invoked.PrmFinanceEnterpriseGroup	 = FinanceEnterpriseGroup					
					invoked.PrmProjectContract			 = ProjectContract
					invoked.PrmFinanceDimension2		 = FinanceDimension2
					invoked.PrmDescription               = FinanceDimension2.DisplayDimension + "_Modification"
					invoked.PrmOriginalPriority          = Priority
					invoked.PrmOriginalFundingGroup	     = FundingGroup
					invoked.PrmOriginalBillingGroup      = BillingGroup
					invoked.PrmOriginalPercent 			 = Percent
					invoked.PrmOriginalFundedAmount      = FundedAmount
					invoked.PrmPriority                  = Priority
					invoked.PrmFundingGroup				 = FundingGroup
					invoked.PrmBillingGroup              = BillingGroup					
					invoked.PrmPercent 			         = Percent
					invoked.PrmFundedAmount              = FundedAmount
					invoked.PrmStatus                    = 1
					invoked.PrmProjectContractModification = PrmProjectContractModification
					
		CreateProjectFundingSourceChangeRequest is an Instance Action
			valid when (RequiresApproval)		
			Parameters
				PrmChangeRequestDate		is Date			
				PrmDescription				is a Description
    			PrmPriority					is Numeric size 2
    			PrmFundingGroup				is Numeric size 2
    			PrmPercent					is Percent size 8.5
    			PrmFundedAmount				is a CurrencyAmount
					precision is ProjectContract.Currency.NumberOfDecimals
				PrmProjectContractChangeRequest is a ProjectContractChangeRequest
				PrmRequestedBy				is an Actor				    			
		    	PrmComment					is Text
    			PrmAttachment               is an Attachment
    			PrmDocumentURL				is URL 				
			Parameter Rules
				PrmChangeRequestDate
					required
					initial value is current corporate date					
					default to current corporate date
				PrmDescription	
					required
					initial value is FinanceDimension2.DisplayDimension + "_Change_Request"						
				PrmPriority
					initial value is Priority					
				PrmFundingGroup
					initial value is FundingGroup
				PrmPercent
					initial value is Percent				
				PrmFundedAmount
					initial value is FundedAmount	
				PrmRequestedBy	
					initial value is actor				
					default to actor		 								
			Action Rules
				invoke Create ProjectFundingSourceChangeRequest
					fill in fields from this instance
					invoked.Description                  = PrmDescription
					invoked.NewPriority                  = PrmPriority
					invoked.NewFundingGroup				 = PrmFundingGroup
					invoked.NewPercent 			         = PrmPercent
					invoked.NewFundedAmount              = PrmFundedAmount
					invoked.Status                       = 1
					invoked.ChangeRequestDate            = PrmChangeRequestDate 
					invoked.ProjectContractChangeRequest = PrmProjectContractChangeRequest
					invoked.RequestedBy                  = PrmRequestedBy										
					invoked.Comment                      = PrmComment 
					invoked.Attachment                   = PrmAttachment
					invoked.DocumentURL  				 = PrmDocumentURL

		CreateBillingMilestone is an Instance Action
			valid when (OverrideBillingMilestonesAllowed)
			Parameters
				Description
		    	Amount							is a CurrencyAmount
					precision is ProjectContract.Currency.NumberOfDecimals
				MilestoneDate					is Date
					default label is "Date"
				PostingProject					is a Project
				RevenueFullAccount				is a FinanceCodeBlockFullNoProjectFD2
					default label is "FullRevenueFinanceStructure"
			Action Rules
				invoke Create ProjectContractMilestone set
					invoked.MilestoneType		= 1
					invoked.Description			= Description
					invoked.Amount				= Amount
					invoked.MilestoneDate		= MilestoneDate
					invoked.PostingProject		= PostingProject
					if (ProjectContract.RevenueRecognition.Combined)
						invoked.RevenueFullAccount	= RevenueFullAccount

		CreateRevenueMilestone is an Instance Action
			valid when (ProjectContract.RevenueMilestonesAllowed)
			Parameters
				Description
		    	Amount							is a CurrencyAmount
					precision is ProjectContract.Currency.NumberOfDecimals
				MilestoneDate					is Date
					default label is "Date"
				PostingProject					is a Project
				RevenueFullAccount				is a FinanceCodeBlockFullNoProjectFD2
					default label is "FullRevenueFinanceStructure"
			Action Rules
				invoke Create ProjectContractMilestone set
					invoked.MilestoneType		= 2
					invoked.Description			= Description
					invoked.Amount				= Amount
					invoked.MilestoneDate		= MilestoneDate
					invoked.PostingProject		= PostingProject
					invoked.RevenueFullAccount	= RevenueFullAccount
					
		CreateComments is an Instance Action
			Parameters
				PrmSubject	 			is a CommentName
		    	PrmComment				is Text
				PrmFrom					is Alpha size 230
				PrmCommentDate			is TimeStamp
				PrmDocumentURL			is URL	
				PrmAttachment			is an Attachment
				PrmPrintOnInvoice       is Boolean		
			Parameter Rules
				PrmSubject
					required
		    	PrmComment
		    		required
				PrmFrom	
					initial value is actor
					required
				PrmCommentDate
		    		default to current timestamp
			Action Rules
				invoke Create ProjectFundingSourceComment
					invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.ProjectContract		   = ProjectContract
					invoked.FinanceDimension2  	   = FinanceDimension2 
					invoked.Subject				   = PrmSubject
			    	invoked.Comment                = PrmComment
					invoked.From                   = PrmFrom	
					invoked.CommentDate            = PrmCommentDate
					invoked.DocumentURL			   = PrmDocumentURL					
			    	invoked.Attachment             = PrmAttachment
					invoked.PrintOnInvoice		   = PrmPrintOnInvoice

		SetRevenueFields is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup     is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
			Instance Selection
				where ((FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				or      PrmFinanceEnterpriseGroup not entered)
				and     RevenueCodeBlockOption not entered)				
			Action Rules
				Instance Rules
					if (RevenueAccountOnly entered)
						RevenueCodeBlockOption = 2
						RevenuePartialAccount.GeneralLedgerChartAccount = RevenueAccountOnly
						RevenuePartialAccount.FinanceDimension1 = RevenueDimension.FinanceDimension1
						RevenuePartialAccount.FinanceDimension3 = RevenueDimension.FinanceDimension3
						RevenuePartialAccount.FinanceDimension4 = RevenueDimension.FinanceDimension4
						RevenuePartialAccount.FinanceDimension5 = RevenueDimension.FinanceDimension5
						RevenuePartialAccount.FinanceDimension6 = RevenueDimension.FinanceDimension6
						RevenuePartialAccount.FinanceDimension7 = RevenueDimension.FinanceDimension7
						RevenuePartialAccount.FinanceDimension8 = RevenueDimension.FinanceDimension8
						RevenuePartialAccount.FinanceDimension9 = RevenueDimension.FinanceDimension9
						RevenuePartialAccount.FinanceDimension10 = RevenueDimension.FinanceDimension10
					else
					if (RevenueFullAccount entered)
						RevenueCodeBlockOption = 1
						
		CopyProjectFundingSource is an Instance Action
			Parameters
				NewProjectContract		is a ProjectContract
				NewFinanceDimension2	is a FinanceDimension2
				NewPriority				is Numeric size 2
				NewPercent				is Percent size 8.5
    			NewFundedAmount			is a CurrencyAmount
					precision is ProjectContract.Currency.NumberOfDecimals
				NewFundingGroup			is Numeric size 2
				NewBillingGroup			is a ProjectBillingGroup
			Parameter Rules
				NewProjectContract
					required
					initial value is ProjectContract					
					default to ProjectContract				
					constraint (ProjectContract.RevenueRecognition = NewProjectContract.RevenueRecognition)
						"CannotCopyRevenueRecognitionIsNotTheSame"
					constraint (ProjectContract.BillingMethod = NewProjectContract.BillingMethod)
						"CannotCopyBillingMethodIsNotTheSame"
					constraint (ProjectContract.RevenueMethod = NewProjectContract.RevenueMethod)
						"CannotCopyRevenueMethodIsNotTheSame"
				NewFinanceDimension2
					required
					initial value is FinanceDimension2
					default to FinanceDimension2
					constraint (FinanceDimension2.FundingType = NewFinanceDimension2.FundingType)
						"CannotCopyFundingTypeIsNotTheSame"
				NewPriority
					required
				NewPercent
					initial value is Percent				
					if (Active)
						required
						default to Percent				
    			NewFundedAmount						
					initial value is FundedAmount
					if (Active)
						required
						default to FundedAmount		
				NewFundingGroup
					initial value is FundingGroup
				NewBillingGroup
					initial value is BillingGroup	
			Action Rules
				LocalProjectContract   = NewProjectContract
				LocalProject = first BillablePostingProjectsRel.Project
				invoke Create
					fill in fields from this instance
						except invoked.TotalBilledAmount
						except invoked.TotalRecognizedAmount		
						except invoked.TotalBilledFees	
						except invoked.TotalBilledAllowance
						except invoked.TotalRecognizedAllowance
						except invoked.TotalRetainedAmount		
						except invoked.TotalBilledPassThrough	
						except invoked.TotalRecognizedPassThrough
					invoked.FinanceDimension2	= NewFinanceDimension2
					invoked.ProjectContract     = NewProjectContract
					invoked.Priority			= NewPriority
					invoked.Percent				= NewPercent
    				invoked.FundedAmount		= NewFundedAmount	
    				invoked.FundingGroup		= NewFundingGroup
    				invoked.BillingGroup		= NewBillingGroup	
					if (ProjectContract != NewProjectContract)
						if (ClearingProject entered)
							invoked.ClearingProject		= LocalProject
						if (PostingProject entered)
							invoked.PostingProject  	= LocalProject
#ifndef property federal
						if (AllowanceProject entered)
							invoked.AllowanceProject	= LocalProject
						if (RetainageProject entered)
							invoked.RetainageProject	= LocalProject
#endif
			Exit Rules

		LoadProjectBillingGroup is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup     is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
			Instance Selection
				where ((FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				or      PrmFinanceEnterpriseGroup not entered)
				and     BillingGroup entered)
			Action Rules
				Instance Rules
					if (ProjectBillingGroupRel not exists)
						invoke Create ProjectBillingGroup 
	                        invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
	                        invoked.ProjectBillingGroup    = BillingGroup
	                        invoked.Description  		   = BillingGroup

#ifdef module integration

		TriggerProjectFundingSourceActiveAlert is an Instance Action
			restricted
			Parameters
				PrmPulseAlert is Alpha size 100
			Action Rules
				LocalPulseAlertFrom = PrmPulseAlert
				if (FinanceEnterpriseGroup.BODTrigger and FSMBODConfigurationPulseAlertRel.Enable)
		          	if(FSMBODConfigurationDetailPulseAlertRel.Enable)
						invoke TriggerPulseAlert FSMBODConfigurationPulseAlertRel
							invoked.PrmActorGroup 	= "PROJECTFUNDINGSOURCE" 
							invoked.PrmMainXML 		= ProjectFundingSourceActiveAlertXML	
							invoked.PrmDescription	= ProjectFundingSourceActiveAlertDescription
							invoked.PrmBODID		= DerivedProjectFundingSourceActiveAlertBODID

#endif
		GenerateFederalFinancialReports is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				FundingSourceGroup			is a FinanceDimension2 group
		    	PrmDescription				is a Description
		    	PrmReportType				is Numeric size 1
		    		States
		    			Quarterly		value is 1
		    			SemiAnnual      value is 2
		    			Annual			value is 3
		    			Final			value is 4
		    	PrmBasis					is Numeric size 1
		    		States
		    			Cash			value is 1
		    			Accrual			value is 2	
    			PrmReportingThruDate		is Date	
    			PrmUseIDM					is Boolean
    				default label is "UseIDMTemplate"
#ifdef module idm   			
    			PrmIDMTemplate				is an IDMTemplate	
    				default label is "GrantFederalReportingFormat"
#endif    			
				PrmGrantFederalReportFormat is a GrantFederalReportFormat
					default label is "GrantFederalReportingFormat"		
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmDescription
					required
				PrmReportType
					required
				PrmBasis
					required					
    			PrmReportingThruDate
    				required
#ifdef module idm     		
				PrmUseIDM
					initial value is true		
				PrmIDMTemplate    				
    				if (PrmUseIDM)
    					required
#endif
			Local Fields
        	Instance Selection
        		where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and   (FinanceDimension2.FundingType.ExternalGrant
			    or     FinanceDimension2.FundingType.IntercompanyBilling)			
				and    FinanceDimension2.Active
        		and   (FinanceDimension2 within FundingSourceGroup
        		or     FundingSourceGroup not entered))
        	Action Rules
        		Instance Rules
					for each GrantReportingSettingsRel
						if (each.FinalReport.Draft)	
							invoke Delete each 
					invoke Create GrantReportingSettings
						invoked.FinanceEnterpriseGroup      = FinanceEnterpriseGroup	
						invoked.FinanceDimension2           = FinanceDimension2				
						invoked.ProjectContract             = ProjectContract	
						invoked.Description		            = PrmDescription 
						invoked.ReportType		            = PrmReportType	
						invoked.Basis                       = PrmBasis
						invoked.ReportingThruDate	        = PrmReportingThruDate
						invoked.FinalReport                 = 1
#ifdef module idm						
						invoked.UseIDM						= PrmUseIDM
						invoked.GrantFederalReportIDMTemplate = PrmIDMTemplate	
#endif
						invoked.GrantFederalReportFormat	= PrmGrantFederalReportFormat
