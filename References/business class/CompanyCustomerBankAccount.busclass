CompanyCustomerBankAccount is a BusinessClass
	owned by ar
	prefix is AMX
	classic name is ARMICRCUST

	Ontology
		symbolic key is CompanyCustomerBankAccount
			classic set name is AMXSET1


	Patterns
		implements StaticJava
		disable AuditIndex

	Persistent Fields



		Customer
		RIBKey
			classic name is RIBKEY
		BankAccountValidationType
			classic name is VBANK-IDENT

	Local Fields
		LocalVerifyRIBKey		is a VerifyRIBKey
		ValidateBankAccountNumber

	Relations
		ArcustomerRel
			one-to-one relation to CompanyCustomer
			required
			Field Mapping uses symbolic key
				related.Company		 = Company
				related.Customer	 = Customer

		CustdescRel
			one-to-one relation to Customer
			required
			Field Mapping uses symbolic key
				related.CustomerGroup	 = Company.CustomerGroupField.CustomerGroup
				related.Customer		 = Customer

		CustomerGroupRel
			one-to-one relation to CustomerGroup
			Field Mapping uses symbolic key
				related.CustomerGroup	= Company.CustomerGroupField.CustomerGroup

		CompanyCustomerRel
			one-to-one relation to CompanyCustomer
			Field Mapping uses symbolic key
				related.Company		 = Company
				related.Customer	 = Customer

		CustomerRel
			one-to-one relation to Customer
			Field Mapping uses symbolic key
				related.CustomerGroup	 = Company.CustomerGroupField.CustomerGroup
				related.Customer		 = Customer


		CompanySecurityGroupMemberRel	
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= actor.context.CompanySecurityGroup.FinanceDimensionStructure
				related.Company						= Company

		ReceivablePaymentRel
			one-to-many relation to ReceivablePayment
			Field Mapping uses Set3
				related.Company				= Company
				related.BankEntity			= CompanyCustomerBankAccount.CustomerBankEntity
				related.BankAccountNumber	= CompanyCustomerBankAccount.CustomerBankAccountNumber









	Conditions
		SecurityGroupAllowsAccess	
			when (actor.context.CompanySecurityGroup = blank
			or	  CompanySecurityGroupMemberRel exists)


	Sets
		Set2
			indexed
			Sort Order
				Company
				Customer
				CompanyCustomerBankAccount

		Set3

			Sort Order
				CompanyCustomerBankAccount.CustomerBankAccountNumber
				CompanyCustomerBankAccount.CustomerBankEntity
				Company
				Customer


		Set4

			Sort Order
				Customer
				CompanyCustomerBankAccount
				Company

	Field Rules

		Customer
			required

	Rule Blocks




		AccountValidationRules

			initialize ValidateBankAccountNumber
			ValidateBankAccountNumber.BankAccountValidationType = BankAccountValidationType
			ValidateBankAccountNumber.BankAccountNumber			= CompanyCustomerBankAccount.CustomerBankAccountNumber
			constraint (ValidateBankAccountNumber.IsValidBankAccount)
				"<ValidateBankAccountNumber.ErrorMessage>"


		CreateAndUpdateActionRules

			constraint (CustomerGroupRel exists)
				"CustomerGroup<Company.CustomerGroupField.CustomerGroup>DoesNotExist"	
			constraint (CompanyCustomerRel exists)
				"Customer<Customer>IsNotSetUpForCompany<Company>"	
			constraint (CustomerRel exists)
				"Customer<Customer>IsNotSetUpInCustomerGroup<Company.CustomerGroupField.CustomerGroup>"	

			include EditRIBKey


			for each ReceivablePaymentRel
				constraint (!each.DuplicatePaymentSetRel exists)
					"PaymentAlreadyExists"		











		EditRIBKey									

			LocalVerifyRIBKey.BankEntity 		= CompanyCustomerBankAccount.CustomerBankEntity
			LocalVerifyRIBKey.BankAccountNumber = CompanyCustomerBankAccount.CustomerBankAccountNumber




			if (RIBKey entered)
				LocalVerifyRIBKey.RIBKey = RIBKey
			else
				initialize LocalVerifyRIBKey.RIBKey
			constraint (LocalVerifyRIBKey.PerformVerifyRIBKey)
				"R\I\B_\KeyInvalid,_\Bank_&_\Account#DoNotEqualCalculatedKey"	





		UpdateReceivablePayment						

			for each ReceivablePaymentRel
				invoke ReleasedUnassigned.Update each
					invoked.Customer = Customer
					if (each.Status.ReleasedUnassigned)
						invoked.Status = 2







	Actions
		Create is a Create Action
			Entrance Rules

				include AccountValidationRules
			Action Rules
				include CreateAndUpdateActionRules

		Update is an Update Action
			Entrance Rules

				include AccountValidationRules
			Action Rules
				include CreateAndUpdateActionRules

		Delete is a Delete Action

		Purge is a Purge Action
			restricted



