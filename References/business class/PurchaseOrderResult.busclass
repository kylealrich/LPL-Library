PurchaseOrderResult is a BusinessClass
	owned by po
	
	prefix is PORR
	
	Ontology
		symbolic key is PurchaseOrderResult
	
	Patterns
		disable Auditing
		disable AuditIndex
		disable EffectiveDated
		enable explicit context override
	
	Persistent Fields
		ReportType		is Numeric size 3
			States
				ReceivedNotInvoicedReport						value is 1
				ReceiptBatchReleaseResult						value is 2
				PurchaseOrderPutawayReport						value is 3
				DeliveryTicketAndBackorderReport				value is 4
				MassPOIssueResult								value is 5
		GroupId					is an AsyncActionRequest
			delete ignored
        Status					is Numeric size 1
        	States
        		Processing 			value is 1
        		Completed  			value is 2
        		CompletedWithError	value is 3
		Description
		PrintTimeStamp								is TimeStamp
		FinishedTimeStamp							is TimeStamp							
		UserId										is Actor
		RecordsProcessed		is Numeric size 6
		RecordsReleased			is Numeric size 6
		RecordsWithError		is Numeric size 6

		ParametersReceivedNotInvoicedReport
		
		ParametersReceiptBatchReleaseResult
		ParametersPrintDeliveryAndPutaway

		
	Derived Fields
		DerivedCurrentDate is a DerivedField
			type is Date
			return current corporate date
		
		DerivedCurrentTime is a DerivedField
			type is Time
			return current corporate time

		DerivedPeriod is a DerivedField
			type is Alpha size 8
			if (ParametersReceivedNotInvoicedReport.ThruGlPeriod = 0)
				if (LocalCompany.AccountingEntity.CurrentPeriod.PeriodNumber = 1)
					return 1
				if (LocalCompany.AccountingEntity.CurrentPeriod.PeriodNumber = 2)
					return 2
				if (LocalCompany.AccountingEntity.CurrentPeriod.PeriodNumber = 3)
					return 3
				if (LocalCompany.AccountingEntity.CurrentPeriod.PeriodNumber = 4)
					return 4
				if (LocalCompany.AccountingEntity.CurrentPeriod.PeriodNumber = 5)
					return 5
				if (LocalCompany.AccountingEntity.CurrentPeriod.PeriodNumber = 6)
					return 6
				if (LocalCompany.AccountingEntity.CurrentPeriod.PeriodNumber = 7)
					return 7
				if (LocalCompany.AccountingEntity.CurrentPeriod.PeriodNumber = 8)
					return 8
				if (LocalCompany.AccountingEntity.CurrentPeriod.PeriodNumber = 9)
					return 9
				if (LocalCompany.AccountingEntity.CurrentPeriod.PeriodNumber = 10)
					return 10
				if (LocalCompany.AccountingEntity.CurrentPeriod.PeriodNumber = 11)
					return 11
				if (LocalCompany.AccountingEntity.CurrentPeriod.PeriodNumber = 12)
					return 12
			else
				return ParametersReceivedNotInvoicedReport.ThruGlPeriod		

		NoDataToPrintMessage is a MessageField
			"NoDataToPrintInThisPrintFile."
		
		PurchaseOrderPutawayMessage is a MessageField	
			"PDFReportPurchaseOrderPutawayIsAvailableToView"
		
		POMassIssueErrorMessage is a MessageField	
			"PDFReport_\Purchasing_\MassPO_\Issue_\Error_\ReportIsAvailableToView"
			
		DeliveryTicketAndBackorderMessage is a MessageField
			"PDFReportReceivingDeliveryTicketsAndBackorderIsAvailableToView"		
														
	Field Rules
		ParametersReceivedNotInvoicedReport
			if (ReportType.ReceivedNotInvoicedReport)
				required
				
		Description
			default to PurchaseOrderResult 		

		PrintTimeStamp																		
			default to current timestamp

	Relations
		PurchaseOrderResultJournalizeGroupRel
			one-to-one relation to PurchaseOrderResultJournalizeGroup
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup = LocalFEG
				related.PurchaseOrderResult = PurchaseOrderResult
				related.Company = LocalCompany
				
		POResultJournalizeGroupRel
			one-to-many relation to PurchaseOrderResultJournalizeGroup
			Field Mapping uses part of key
			Instance Selection
				where (related.PurchaseOrderResult = PurchaseOrderResult)
						
		RNICompanyGroupRel
			one-to-many relation to GeneralLedgerCompanyGroupMember 
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup =	ParametersReceivedNotInvoicedReport.CompanyGroup
				
		GeneralLedgerSystemCodeRel
			one-to-one relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= LocalFEG
				related.GeneralLedgerSystemCode	= "PO"

		RNILineListForProcessLevelRel		
			one-to-many relation to PayablesProcessLevel
			Field Mapping uses symbolic key
				related.Company = ParametersReceivedNotInvoicedReport.Company
			Instance Selection
				where (related.RNILineListForProcessLevelRelExists)
		
		RNIRunInventoryItemTypeProcessLevelRel
			one-to-many relation to PayablesProcessLevel
			Field Mapping uses symbolic key
				related.Company = ParametersReceivedNotInvoicedReport.Company
			Instance Selection
				where (related.RNILinesInventoryItemTypeRelExists)

		RNIRunNonStockItemTypeProcessLevelRel
			one-to-many relation to PayablesProcessLevel
			Field Mapping uses symbolic key
				related.Company = ParametersReceivedNotInvoicedReport.Company
			Instance Selection
				where (related.RNILinesNonStockItemTypeRelExists)

		RNIRunSpecialItemTypeProcessLevelRel
			one-to-many relation to PayablesProcessLevel
			Field Mapping uses symbolic key
				related.Company = ParametersReceivedNotInvoicedReport.Company
			Instance Selection
				where (related.RNILinesSpecialItemTypeRelExists)

		RNIRunCreditDistributionProcessLevelRel
			one-to-many relation to PayablesProcessLevel
			Field Mapping uses symbolic key
				related.Company = ParametersReceivedNotInvoicedReport.Company

		RNILineRel
			one-to-many relation to RNILine
			Field Mapping uses symbolic key
				related.Company = ParametersReceivedNotInvoicedReport.Company
				related.PurchaseOrderResult	= PurchaseOrderResult
			Instance Selection
				where (related.IsNonInventoryType)

		AllRNILineRel
			one-to-many relation to RNILine
			Field Mapping uses symbolic key

			Instance Selection
				where (related.PurchaseOrderResult	= PurchaseOrderResult)

		PurchaseOrderResultByTimeRel
			one-to-many relation to PurchaseOrderResult
			Field Mapping uses ByFinishedTimeStampDescending
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.ReportType					= ReportType

		GeneralLedgerClosePeriodRel
			one-to-many relation to GeneralLedgerClosePeriod
			Field Mapping uses ByEndDateForYear
				related.FinanceEnterpriseGroup 			= LocalFEG
				related.GeneralLedgerCloseConfiguration = LocalCloseConfiguration
				related.GeneralLedgerCloseYear 			= LocalCloseYear
			Instance Selection
				where (related.PeriodNumber = LocalPeriodNumber)


		ReleasedReceiversRel is a PurchaseOrderResultDetail set
			Instance Selection
				where (related.ErrorMessage not entered)
				
		ReceiversWithErrorRel is a PurchaseOrderResultDetail set
			Instance Selection
				where (related.ErrorMessage entered)




		PutawayReportHeadingsRel
			one-to-many relation to PurchaseOrderResultHeading
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.PurchaseOrderResult			= PurchaseOrderResult
		
		MassPOIssueErrorReportHeadingsRel
			one-to-many relation to PurchaseOrderResultHeading
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.PurchaseOrderResult			= PurchaseOrderResult
		
		MassPOIssueErrorReportPurchasingCompanyRel
			one-to-one relation to PurchasingCompany
			Field Mapping uses symbolic key
				related.Company						= first MassPOIssueErrorReportHeadingsRel.PurchasingCompany

		ReceivingDocumentPurchasingCompanyRel
			one-to-one relation to PurchasingCompany
			Field Mapping uses symbolic key
				related.Company						= ParametersPrintDeliveryAndPutaway.Company
		
		DeliveryReportHeadingsRel
			one-to-many relation to PurchaseOrderResultHeading
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.PurchaseOrderResult			= PurchaseOrderResult
			Instance Selection
				where (not related.IsBackorder)
				
		BackOrderReportHeadingsRel
			one-to-many relation to PurchaseOrderResultHeading
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.PurchaseOrderResult			= PurchaseOrderResult
			Instance Selection
				where (related.IsBackorder)

		ProcessRuleSecurityRel
			one-to-many relation to Security
			Field Mapping uses symbolic key
				related.Security.ProductLine		= parentcontext.dataarea
				related.Security.Param				= "1"
			Instance Selection
				where (related.Value				= "PROCESS_RULES")
		
		ApplicationAdministratorRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor			= actor
				related.ActorRole.Role	= "ApplicationAdministrator_ST"
								
		BuyerRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor			= actor
				related.ActorRole.Role	= "Buyer_ST"
				
		SupplyManagementProcessorRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor 			= actor
				related.ActorRole.Role	= "SupplyManagementProcessor_ST"
				
		PurchasingManagerRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor 			= actor
				related.ActorRole.Role	= "PurchasingManager_ST"
				
		InventoryManagerRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor 			= actor
				related.ActorRole.Role	= "InventoryManager_ST"

		ReceiverRoleRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor 			= actor
				related.ActorRole.Role	= "Receiver_ST"

		PurchaseOrderResultDetailWithSpecialHandling is a PurchaseOrderResultDetail set
			Instance Selection
				where (related.HasSpecialHandling)
				




	Conditions
		IsMostRecentReport
			when (FinishedTimeStamp		= first PurchaseOrderResultByTimeRel.FinishedTimeStamp)



		HasErrors
			when (ReceiversWithErrorRel exists)






		HasDeliveryOrBackorderHeadings
			restricted
			when (DeliveryReportHeadingsRel exists
			or    BackOrderReportHeadingsRel exists)
		
		HasPurchaseOrderResultHeadings
			restricted
			when (MassPOIssueErrorReportHeadingsRel exists)
			
		HasPutawayHeadings
			restricted
			when (PutawayReportHeadingsRel exists)
			
		SecurityGroupAllowsAccess
    		when((ParametersReceivedNotInvoicedReport.Company not entered and ParametersReceivedNotInvoicedReport.CompanyGroup not entered)
    		or  (ParametersReceivedNotInvoicedReport.Company entered and ParametersReceivedNotInvoicedReport.Company.SecurityGroupAllowsAccess)
    		or	(ParametersReceivedNotInvoicedReport.CompanyGroup entered and actor.context.CompanySecurityGroup.FinanceDimensionStructure = ParametersReceivedNotInvoicedReport.CompanyGroup))


		HasSpecialHandling
			when (PurchaseOrderResultDetailWithSpecialHandling exists)

		
	Sets
		ByRunTime
			Sort Order
				FinanceEnterpriseGroup
				PurchaseOrderResult
				PrintTimeStamp

		ByFinishedTimeStampDescending
			Sort Order
				FinanceEnterpriseGroup
				ReportType
				FinishedTimeStamp descending
				PurchaseOrderResult

			
	Local Fields
		LocalRNIPostDate 		is Date
		LocalFEG				is a FinanceEnterpriseGroup
		LocalCompany			is a PurchasingCompany
		LocalJournalizeGroup 	is AlphaUpper size 30
		LocalCloseConfiguration	is a GeneralLedgerCloseConfiguration
			context of LocalFEG
		LocalCloseYear			is a GeneralLedgerCloseYear
			context of LocalFEG
		LocalPeriodNumber		is Numeric size 2
		LocalActor				is an Actor
		
	Rule Blocks
		UpdateStatusAndTimestamp
			if (RecordsWithError = 0)
				Status				= Status.Completed
			else
				Status				= Status.CompletedWithError
			
			FinishedTimeStamp		= current timestamp
	
		EvaluateRNIPostDate
			if (LocalCompany entered)
				LocalFEG = LocalCompany.FinanceEnterpriseGroup
				LocalCloseConfiguration = LocalCompany.AccountingEntity.CloseConfiguration
				LocalPeriodNumber = ParametersReceivedNotInvoicedReport.ThruGlPeriod
				if (LocalPeriodNumber not entered)
					LocalPeriodNumber = LocalCompany.AccountingEntity.CurrentPeriod.PeriodNumber
				if (ParametersReceivedNotInvoicedReport.ThruGlYear.CurrentGlYear)
					LocalCloseYear 		= LocalCompany.AccountingEntity.FiscalYear
				else
				if (ParametersReceivedNotInvoicedReport.ThruGlYear.NextGlYear)
					LocalCloseYear 		= LocalCompany.AccountingEntity.FiscalYear + 1
				else
				if (ParametersReceivedNotInvoicedReport.ThruGlYear.PriorGlYear)
					LocalCloseYear 		= LocalCompany.AccountingEntity.FiscalYear - 1
				LocalRNIPostDate = first GeneralLedgerClosePeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
	
	Actions
		CreateReceivedNotInvoicedReport is a Create Action
			default label is "ReceivedNotInvoicedReport"
			Entrance Rules
				ReportType					= ReportType.ReceivedNotInvoicedReport
				PrintTimeStamp				= current timestamp	
				UserId						= actor
				Status						= Status.Processing

				if (ParametersReceivedNotInvoicedReport.Company entered)
					LocalCompany = ParametersReceivedNotInvoicedReport.Company
					include EvaluateRNIPostDate
					if (ParametersReceivedNotInvoicedReport.UpdateOption.RunInUpdate)
						constraint (LocalRNIPostDate > ParametersReceivedNotInvoicedReport.Company.PurchasingCompany.ReceivedNotInvoicedPostDate)
							"AlreadyRunInUpdateModeFor_Period<DerivedPeriod>_Company<LocalCompany>"
				if (ParametersReceivedNotInvoicedReport.CompanyGroup entered)
					LocalCompany = ParametersReceivedNotInvoicedReport.Company
					for each RNICompanyGroupRel
						LocalCompany = each.Company
						include EvaluateRNIPostDate
						if (ParametersReceivedNotInvoicedReport.UpdateOption.RunInUpdate)
							constraint (LocalRNIPostDate > ParametersReceivedNotInvoicedReport.Company.PurchasingCompany.ReceivedNotInvoicedPostDate)
								"AlreadyRunInUpdateModeFor<DerivedPeriod>_Company<LocalCompany>"

			Exit Rules








				
				invoke InitiateRNIProcessing PurchaseOrderResult in background
					assign async action background group id to GroupId
				
				if (ParametersReceivedNotInvoicedReport.UpdateOption.RunInUpdate)
					invoke ProcessRNIUpdate PurchaseOrderResult in background
						run after action background group GroupId
						assign async action background group id to GroupId
					
					invoke Journalize PurchaseOrderResult in background
						run after action background group GroupId
						assign async action background group id to GroupId
				
				invoke MarkComplete PurchaseOrderResult in background
					run after action background group GroupId
					assign async action background group id to GroupId
					
		ResubmitReceivedNotInvoicedReport is an Instance Action
			valid when (ReportType.ReceivedNotInvoicedReport)
			Parameters
				PrmResubmitReceivedNotInvoicedReport	is a ParametersReceivedNotInvoicedReport
				PrmDescription					is a Description
				
			Parameter Rules
				PrmResubmitReceivedNotInvoicedReport
					initial value is ParametersReceivedNotInvoicedReport
				PrmDescription
					initial value is Description
			
				
			Action Rules
				
				invoke CreateReceivedNotInvoicedReport PurchaseOrderResult
					invoked.ParametersReceivedNotInvoicedReport	= PrmResubmitReceivedNotInvoicedReport
					invoked.Description							= PrmDescription

		InitiateRNIProcessing is an Instance Action
			run in background
			restricted
			Action Rules				
				if (ParametersReceivedNotInvoicedReport.Company entered)
					LocalCompany = ParametersReceivedNotInvoicedReport.Company
					include EvaluateRNIPostDate
					constraint (LocalRNIPostDate entered)
						"MissingRNIPostDate"
					if (LocalRNIPostDate entered)
						invoke FlagUpdate LocalCompany.PurchasingCompany in foreground
							invoked.PrmReceivedNotInvoicedProcessRunning = 1
						invoke ProcessReceivedNotInvoicedLines PurchaseOrderLine in background
							invoked.PrmCompany		= ParametersReceivedNotInvoicedReport.Company
							invoked.PrmRNIPostDate	= LocalRNIPostDate
							invoked.PrmUpdateOption	= ParametersReceivedNotInvoicedReport.UpdateOption
							invoked.PrmRNIRun		= PurchaseOrderResult
						
				if (ParametersReceivedNotInvoicedReport.CompanyGroup entered)
					for each RNICompanyGroupRel
						LocalCompany = each.Company
						include EvaluateRNIPostDate
						constraint (LocalRNIPostDate entered)
							"MissingRNIPostDate"
						if (LocalRNIPostDate entered)
							invoke FlagUpdate LocalCompany.PurchasingCompany in foreground
								invoked.PrmReceivedNotInvoicedProcessRunning = 1
							invoke ProcessReceivedNotInvoicedLines PurchaseOrderLine in background
								invoked.PrmCompany		= each.Company
								invoked.PrmRNIPostDate	= LocalRNIPostDate
								invoked.PrmUpdateOption	= ParametersReceivedNotInvoicedReport.UpdateOption
								invoked.PrmRNIRun		= PurchaseOrderResult
		
		ProcessRNIUpdate is an Instance Action
			run in background
			restricted
			Action Rules
				if (ParametersReceivedNotInvoicedReport.Company entered)
					LocalCompany = ParametersReceivedNotInvoicedReport.Company
					LocalFEG = LocalCompany.FinanceEnterpriseGroup
					
					invoke IncrementLastJournalizeGroup GeneralLedgerSystemCodeRel in foreground
					LocalJournalizeGroup = GeneralLedgerSystemCodeRel.DerivedJournalizeGroup	
					invoke Create PurchaseOrderResultJournalizeGroup
						invoked.Company = LocalCompany
						invoked.FinanceEnterpriseGroup	= LocalFEG
						invoked.PurchaseOrderResult = PurchaseOrderResult
						invoked.JournalizeGroup = LocalJournalizeGroup
					
					include EvaluateRNIPostDate
					invoke ProcessUpdate RNILineDistribution in background
						invoked.PrmCompany			= ParametersReceivedNotInvoicedReport.Company
						invoked.PrmRNIRun 			= PurchaseOrderResult
						invoked.PrmRNIPostDate		= LocalRNIPostDate
						invoked.PrmJournalizeGroup	= LocalJournalizeGroup
				if (ParametersReceivedNotInvoicedReport.CompanyGroup entered)
					for each RNICompanyGroupRel
						LocalCompany = each.Company
						LocalFEG = LocalCompany.FinanceEnterpriseGroup
						
						invoke IncrementLastJournalizeGroup GeneralLedgerSystemCodeRel in foreground
						LocalJournalizeGroup = GeneralLedgerSystemCodeRel.DerivedJournalizeGroup	
						invoke Create PurchaseOrderResultJournalizeGroup
							invoked.Company = LocalCompany
							invoked.FinanceEnterpriseGroup	= LocalFEG
							invoked.PurchaseOrderResult = PurchaseOrderResult
							invoked.JournalizeGroup = LocalJournalizeGroup
						
						include EvaluateRNIPostDate
						invoke ProcessUpdate RNILineDistribution in background
							invoked.PrmCompany			= LocalCompany
							invoked.PrmRNIRun 			= PurchaseOrderResult
							invoked.PrmRNIPostDate		= LocalRNIPostDate
							invoked.PrmJournalizeGroup	= LocalJournalizeGroup
		
		Journalize is an Instance Action
			run in background
			restricted
			Action Rules
				if (ParametersReceivedNotInvoicedReport.Company entered)
					LocalCompany = ParametersReceivedNotInvoicedReport.Company
					LocalFEG = LocalCompany.FinanceEnterpriseGroup
					
					invoke InitiateJournalizeForRunGroup ParametersReceivedNotInvoicedReport.Company.FinanceEnterpriseGroup in background
						invoked.PrmJournalizeGroup				= PurchaseOrderResultJournalizeGroupRel.JournalizeGroup
						if (ParametersReceivedNotInvoicedReport.Company.PayablesCompany.PostingOption = "D")
							invoked.PrmInterfaceInDetail = true
						else
							invoked.PrmInterfaceInDetail = false 
						invoked.PrmJournalizeGroupDescription	= "RNIPosting"
						
				if (ParametersReceivedNotInvoicedReport.CompanyGroup entered)
					for each RNICompanyGroupRel
						LocalCompany = each.Company
						LocalFEG = LocalCompany.FinanceEnterpriseGroup
						
						invoke InitiateJournalizeForRunGroup LocalCompany.FinanceEnterpriseGroup in background
							invoked.PrmJournalizeGroup				= PurchaseOrderResultJournalizeGroupRel.JournalizeGroup
							if (LocalCompany.PayablesCompany.PostingOption = "D")
								invoked.PrmInterfaceInDetail = true
							else
								invoked.PrmInterfaceInDetail = false 
							invoked.PrmJournalizeGroupDescription	= "RNIPosting"
							












		
		Delete is a Delete Action
			Entrance Rules
				invoke Delete AllRNILineRel
		
		MarkComplete is an Instance Action
			restricted
			Action Rules
				if (ParametersReceivedNotInvoicedReport.Company entered)
					LocalCompany = ParametersReceivedNotInvoicedReport.Company
					
					if (ParametersReceivedNotInvoicedReport.UpdateOption.RunInUpdate)
						include EvaluateRNIPostDate
						invoke DateUpdate ParametersReceivedNotInvoicedReport.Company.PurchasingCompany in foreground
							invoked.PrmPostDate = LocalRNIPostDate
					
					invoke FlagUpdate LocalCompany.PurchasingCompany in foreground
						invoked.PrmReceivedNotInvoicedProcessRunning = 0
				if (ParametersReceivedNotInvoicedReport.CompanyGroup entered)
					for each RNICompanyGroupRel
						LocalCompany = each.Company
						
						if (ParametersReceivedNotInvoicedReport.UpdateOption.RunInUpdate)
							include EvaluateRNIPostDate
							invoke DateUpdate LocalCompany.PurchasingCompany in foreground
								invoked.PrmPostDate = LocalRNIPostDate
						
						invoke FlagUpdate LocalCompany.PurchasingCompany in foreground
							invoked.PrmReceivedNotInvoicedProcessRunning = 0
				
				Status = Status.Completed
				FinishedTimeStamp = current timestamp	

		
		Create is a Create Action
			restricted
		
		SendPOMassIssueErrorNotification is an Instance Action
			restricted
			Parameters
				PrmRecordsWithError		is Numeric 6
			Action Rules
				RecordsWithError = PrmRecordsWithError
				LocalActor	= actor
				if (ProcessRuleSecurityRel exists)
					if (ApplicationAdministratorRoleRel exists)
						send notification
							to LocalActor
							description is "<POMassIssueErrorMessage>"
							priority is medium
							detail is "<POMassIssueErrorMessage>"
							linkback(webapp is ApplicationAdministrator navigation is POMassIssueErrorNav text is "<POMassIssueErrorMessage>")
						
					else
					if (SupplyManagementProcessorRoleRel exists)
						send notification
							to LocalActor
							description is "<POMassIssueErrorMessage>"
							priority is medium
							detail is "<POMassIssueErrorMessage>"
							linkback(webapp is SupplyManagementProcessor navigation is POMassIssueErrorNav text is "<POMassIssueErrorMessage>")

					else
					if (PurchasingManagerRoleRel exists)
						send notification
							to LocalActor
							description is "<POMassIssueErrorMessage>"
							priority is medium
							detail is "<POMassIssueErrorMessage>"
							linkback(webapp is PurchasingManager navigation is POMassIssueErrorNav text is "<POMassIssueErrorMessage>")
					
					else
					if (InventoryManagerRoleRel exists)	
						send notification
							to LocalActor
							description is "<POMassIssueErrorMessage>"
							priority is medium
							detail is "<POMassIssueErrorMessage>"
							linkback(webapp is InventoryManager navigation is POMassIssueErrorNav text is "<POMassIssueErrorMessage>")
					
					else
					if (ReceiverRoleRel exists)
						send notification
							to LocalActor
							description is "<POMassIssueErrorMessage>"
							priority is medium
							detail is "<POMassIssueErrorMessage>"
							linkback(webapp is Receiver navigation is POMassIssueErrorNav text is "<POMassIssueErrorMessage>")
						
					else
					if (BuyerRoleRel exists)
						send notification
							to LocalActor
							description is "<POMassIssueErrorMessage>"
							priority is medium
							detail is "<POMassIssueErrorMessage>"
							linkback(webapp is Buyer navigation is POMassIssueErrorNav text is "<POMassIssueErrorMessage>")
					
				else						
					send notification
						to LocalActor
						description is "<POMassIssueErrorMessage>"
						priority is medium
						detail is "<POMassIssueErrorMessage>"
						linkback(webapp is ApplicationAdministrator navigation is POMassIssueErrorNav text is "<POMassIssueErrorMessage>")

				Status = Status.CompletedWithError
				FinishedTimeStamp = current timestamp	


		SendPutawayNotification is an Instance Action
			run in background
			restricted
			Action Rules
				LocalActor	= actor
				if (ProcessRuleSecurityRel exists)
					if (ApplicationAdministratorRoleRel exists)
						send notification
							to LocalActor
							description is "<PurchaseOrderPutawayMessage>"
							priority is medium
							detail is "<PurchaseOrderPutawayMessage>"
							linkback(webapp is ApplicationAdministrator navigation is PurchaseOrderPutawayNav text is "<PurchaseOrderPutawayMessage>")
						
					else
					if (SupplyManagementProcessorRoleRel exists)
						send notification
							to LocalActor
							description is "<PurchaseOrderPutawayMessage>"
							priority is medium
							detail is "<PurchaseOrderPutawayMessage>"
							linkback(webapp is SupplyManagementProcessor navigation is PurchaseOrderPutawayNav text is "<PurchaseOrderPutawayMessage>")

					else
					if (PurchasingManagerRoleRel exists)
						send notification
							to LocalActor
							description is "<PurchaseOrderPutawayMessage>"
							priority is medium
							detail is "<PurchaseOrderPutawayMessage>"
							linkback(webapp is PurchasingManager navigation is PurchaseOrderPutawayNav text is "<PurchaseOrderPutawayMessage>")
					
					else
					if (InventoryManagerRoleRel exists)	
						send notification
							to LocalActor
							description is "<PurchaseOrderPutawayMessage>"
							priority is medium
							detail is "<PurchaseOrderPutawayMessage>"
							linkback(webapp is InventoryManager navigation is PurchaseOrderPutawayNav text is "<PurchaseOrderPutawayMessage>")
					
					else
					if (ReceiverRoleRel exists)
						send notification
							to LocalActor
							description is "<PurchaseOrderPutawayMessage>"
							priority is medium
							detail is "<PurchaseOrderPutawayMessage>"
							linkback(webapp is Receiver navigation is PurchaseOrderPutawayNav text is "<PurchaseOrderPutawayMessage>")
						
					else
					if (BuyerRoleRel exists)
						send notification
							to LocalActor
							description is "<PurchaseOrderPutawayMessage>"
							priority is medium
							detail is "<PurchaseOrderPutawayMessage>"
							linkback(webapp is Buyer navigation is PurchaseOrderPutawayNav text is "<PurchaseOrderPutawayMessage>")
					
				else						
					send notification
						to LocalActor
						description is "<PurchaseOrderPutawayMessage>"
						priority is medium
						detail is "<PurchaseOrderPutawayMessage>"
						linkback(webapp is ApplicationAdministrator navigation is PurchaseOrderPutawayNav text is "<PurchaseOrderPutawayMessage>")

		SendDeliveryAndBackorderNotification is an Instance Action
			run in background
			restricted
			Action Rules
				LocalActor	= actor
				if (ProcessRuleSecurityRel exists)
					if (ApplicationAdministratorRoleRel exists)
						send notification
							to LocalActor
							description is "<DeliveryTicketAndBackorderMessage>"
							priority is medium
							detail is "<DeliveryTicketAndBackorderMessage>"
							linkback(webapp is ApplicationAdministrator navigation is DeliverAndBackOrderNav text is "<DeliveryTicketAndBackorderMessage>")
						
					else
					if (SupplyManagementProcessorRoleRel exists)
						send notification
							to LocalActor
							description is "<DeliveryTicketAndBackorderMessage>"
							priority is medium
							detail is "<DeliveryTicketAndBackorderMessage>"
							linkback(webapp is SupplyManagementProcessor navigation is DeliverAndBackOrderNav text is "<DeliveryTicketAndBackorderMessage>")

					else
					if (PurchasingManagerRoleRel exists)
						send notification
							to LocalActor
							description is "<DeliveryTicketAndBackorderMessage>"
							priority is medium
							detail is "<DeliveryTicketAndBackorderMessage>"
							linkback(webapp is PurchasingManager navigation is DeliverAndBackOrderNav text is "<DeliveryTicketAndBackorderMessage>")
					
					else
					if (InventoryManagerRoleRel exists)	
						send notification
							to LocalActor
							description is "<DeliveryTicketAndBackorderMessage>"
							priority is medium
							detail is "<DeliveryTicketAndBackorderMessage>"
							linkback(webapp is InventoryManager navigation is DeliverAndBackOrderNav text is "<DeliveryTicketAndBackorderMessage>")
					
					else
					if (ReceiverRoleRel exists)
						send notification
							to LocalActor
							description is "<DeliveryTicketAndBackorderMessage>"
							priority is medium
							detail is "<DeliveryTicketAndBackorderMessage>"
							linkback(webapp is Receiver navigation is DeliverAndBackOrderNav text is "<DeliveryTicketAndBackorderMessage>")
						
					else
					if (BuyerRoleRel exists)
						send notification
							to LocalActor
							description is "<DeliveryTicketAndBackorderMessage>"
							priority is medium
							detail is "<DeliveryTicketAndBackorderMessage>"
							linkback(webapp is Buyer navigation is DeliverAndBackOrderNav text is "<DeliveryTicketAndBackorderMessage>")
					
				else						
					send notification
						to LocalActor
						description is "<DeliveryTicketAndBackorderMessage>"
						priority is medium
						detail is "<DeliveryTicketAndBackorderMessage>"
						linkback(webapp is ApplicationAdministrator navigation is DeliverAndBackOrderNav text is "<DeliveryTicketAndBackorderMessage>")


				
		SendCompletedNotification is an Instance Action
			run in background
			restricted
			Parameters
				PrmRecordsProcessed		is Numeric 6
				PrmRecordsReleased		is Numeric 6
				PrmRecordsWithError		is Numeric 6
			Action Rules
				

				RecordsProcessed		= PrmRecordsProcessed
				

				include UpdateStatusAndTimestamp


				LocalActor 				= actor
				if (ProcessRuleSecurityRel exists)
					if (ApplicationAdministratorRoleRel exists)
						send notification
							to LocalActor
							description is "ReceiptBatchReleaseCompleted.ID<PurchaseOrderResult>"
							priority is medium
							detail is "ReceiptBatchReleaseIsNowComplete.YouMayNowViewTheResults.ResultID<PurchaseOrderResult>"
							linkback(webapp is ApplicationAdministrator navigation is ReleasedReceiversReportNav text is "ReceiptBatchReleaseIsNowComplete.YouMayNowViewTheResults.ResultID<PurchaseOrderResult>")
						
					else
					if (SupplyManagementProcessorRoleRel exists)
						send notification
							to LocalActor
							description is "ReceiptBatchReleaseCompleted.ID<PurchaseOrderResult>"
							priority is medium
							detail is "ReceiptBatchReleaseIsNowComplete.YouMayNowViewTheResults.ResultID<PurchaseOrderResult>"
							linkback(webapp is SupplyManagementProcessor navigation is ReleasedReceiversReportNav text is "ReceiptBatchReleaseIsNowComplete.YouMayNowViewTheResults.ResultID<PurchaseOrderResult>")
					
					else
					if (PurchasingManagerRoleRel exists)
						send notification
							to LocalActor
							description is "ReceiptBatchReleaseCompleted.ID<PurchaseOrderResult>"
							priority is medium
							detail is "ReceiptBatchReleaseIsNowComplete.YouMayNowViewTheResults.ResultID<PurchaseOrderResult>"
							linkback(webapp is PurchasingManager navigation is ReleasedReceiversReportNav text is "ReceiptBatchReleaseIsNowComplete.YouMayNowViewTheResults.ResultID<PurchaseOrderResult>")
					
					else
					if (InventoryManagerRoleRel exists)	
						send notification
							to LocalActor
							description is "ReceiptBatchReleaseCompleted.ID<PurchaseOrderResult>"
							priority is medium
							detail is "ReceiptBatchReleaseIsNowComplete.YouMayNowViewTheResults.ResultID<PurchaseOrderResult>"
							linkback(webapp is InventoryManager navigation is ReleasedReceiversReportNav text is "ReceiptBatchReleaseIsNowComplete.YouMayNowViewTheResults.ResultID<PurchaseOrderResult>")
					
					else
					if (ReceiverRoleRel exists)
						send notification
							to LocalActor
							description is "ReceiptBatchReleaseCompleted.ID<PurchaseOrderResult>"
							priority is medium
							detail is "ReceiptBatchReleaseIsNowComplete.YouMayNowViewTheResults.ResultID<PurchaseOrderResult>"
							linkback(webapp is Receiver navigation is ReleasedReceiversReportNav text is "ReceiptBatchReleaseIsNowComplete.YouMayNowViewTheResults.ResultID<PurchaseOrderResult>")
						
					else
					if (BuyerRoleRel exists)
						send notification
							to LocalActor
							description is "ReceiptBatchReleaseCompleted.ID<PurchaseOrderResult>"
							priority is medium
							detail is "ReceiptBatchReleaseIsNowComplete.YouMayNowViewTheResults.ResultID<PurchaseOrderResult>"
							linkback(webapp is Buyer navigation is ReleasedReceiversReportNav text is "ReceiptBatchReleaseIsNowComplete.YouMayNowViewTheResults.ResultID<PurchaseOrderResult>")
							
				else						
					send notification
						to LocalActor
						description is "ReceiptBatchReleaseCompleted.ID<PurchaseOrderResult>"
						priority is medium
						detail is "ReceiptBatchReleaseIsNowComplete.YouMayNowViewTheResults.ResultID<PurchaseOrderResult>"
						linkback(webapp is ApplicationAdministrator navigation is ReleasedReceiversReportNav text is "ReceiptBatchReleaseIsNowComplete.YouMayNowViewTheResults.ResultID<PurchaseOrderResult>")
	
		TransitionToCompleted is an Instance Action
			restricted
			Action Rules
				include UpdateStatusAndTimestamp
				
				
			
