CashLedgerPayablesPayment is a BusinessClass
    owned by cb
    prefix is CHK
    classic name is CBCHECK

    Ontology
        symbolic key is CashLedgerPayablesPayment
            classic set name is CHKSET1
            classic name for CashLedgerPayablesPayment.BankTransactionCode is BANK-INST-CODE
            classic name for CashLedgerPayablesPayment.TransactionIDNumber is TRANS-IDENT

    Patterns
        implements StaticJava
        disable AuditIndex
        implements BODId

    Persistent Fields
    	CashManagementAccount
    	CommentText
		TransactionIdentifierSequenceNumber
		CashLedgerTransactionIdentifier	
        TransactionNumber
            classic name is TRANS-NBR
        Company								is a GeneralLedgerCompany
			disable surrogates        




        PayablesCompanyProcessLevel
			classic name for PayablesCompanyProcessLevel.PayablesProcessLevel is PROC-LEVEL
        Status                              is Numeric size 2
            classic name is REC-STATUS
            States
                ScheduledForPayment         value is 0

                PaymentCycleProcessed       value is 1

                PaymentCycleClosed          value is 2

                ElectronicPaymentCancelled   value is 3

                ElectronicPaymentReinstated value is 4

                TemporaryVoid               value is 5

                ReservedForManualPayment    value is 9



                StaleDated  				value is 15
                Escheated   				value is 16
                VoidStopPaymentRequested	value is 17
        VendorGroup							
			disable surrogates
		CashRequirementsResult
			delete ignored
			disable Auditing
		PayablesJobResult					is like PayablesJobResult
		CurrencyTable	        
        PayGroup
        InvoiceVendor                       is like Vendor
        InvoiceVendorName                   is a VendorName 
        	holds pii
        PaidVendor                          is a Vendor
			delete ignored
        PaidName                            is a VendorName 
        	holds pii
        RemitToCode                         is a VendorLocation
        	default label is "RemitToLocation"
        PaymentDate                         is an ExchangeDate
            classic name is CHECK-DATE
        PayCurrency                         is a FromCurrency    
        PaymentAmount                       is a CurrencyAmount
            classic name is TRAN-PMT-AMT
        BasePaymentAmount                   is a CurrencyExchange

            classic name is BASE-PMT-AMT
        BaseCurrencyNumberOfDecimals        is a BaseNumberOfDecimals
            classic name is BASE-ND
        TransactionCurrencyNumberOfDecimals is an AcctNd
            sql name is TCurrencyNumberOfDecimals
            classic name is TRAN-ND
        PaidAmountInvoiceCurrency           is a CurrencyAmount	
            classic name is TOT-INV-PAID


        LastElectronicPaymentSerialNumber   is a SerialNum
            sql name is LElectronicPaymentSerialNumber
            classic name is SERIAL-NUM
        CheckType
        ReleasedStatus                      is AlphaUpper size 1
            classic name is RELEASE-FL
            States
                Unreleased value is "N"
                Released   value is "Y"
        PaymentAmountBankAccountCurrency    is a CurrencyExchange	


            classic name is BANK-CURR-AMT
        AppliedAmountBankAccountCurrency    is a CurrencyExchangeGroup	


            classic name is BANK-APPL-AMT
        AppliedBaseAmount                   is a CurrencyExchangeGroup

            classic name is BASE-APPL-AMT



        BankAccountCurrencyNumberOfDecimals is an AcctNd
            sql name is BACurrencyNumberOfDecimals
            classic name is BANK-ND
        RejectDate                          is Date
        SortOption1
            classic name is SORT-OPTION1
        SortOption2                         is a SortOption1
            classic name is SORT-OPTION2
        SortOption3                         is a SortOption1
            classic name is SORT-OPTION3
        InvoiceGroup            			is a PayablesInvoiceGroup		
        PayablesProcessGroup                is a ProcGrp
            classic name is PROC-GRP
        CashLedgerStatement					is like CashLedgerStatement
            classic name is RECON-STMT-NBR
        TemporaryHold                       is AlphaUpper size 1
            classic name is TEMP-HOLD
            States
                SentForApproval  value is "S"
                    default label is "Sent for Approval"
                ApprovedByEngine value is "A"
                    default label is "Approved by Engine"
				RejectedByEngine value is "R"
					default label is "Rejected by Engine"
		VATSplitAmount						is an InternationalAmount		

		ConfirmationNumber					
		GeneralLedgerSourceCode				is a GeneralLedgerEvent
			default label is "SourceCode"

		PaidDate							is Date
        StaleDate                           is Date
        BankAmount							is an InternationalAmount
		BankCurrency						is a Currency
		ApprovalCostCenter					is like AccountingUnit
        MailingName 	                    is a VendorName 
        	holds pii
        PayeePostalAddress                  is a PostalAddressV2	
        	holds pii
        LanguageCode						is an IsoLocale
        BankAccountNumber
        PaymentComment                      is a CommentText
        ElectronicPaymentCode
		FirstPartyReference					is Alpha 12
		SecondPartyReference				is Alpha 12
		BankName
        BankPostalAddress					is a PostalAddressV2	
        	holds pii
		CrossBorderIdentifier
		SwiftID
		BankEntity
		ChargeCode
		EmailAddress												
		MobileNumber						is a TelephoneNumber	
		BankToBankInformation				is Alpha 140
        IntermediaryBankName				is a BankName
        IntermediaryBankPostalAddress		is a PostalAddressV2	
        	holds pii
        IntermediaryCrossBorderIdentifier	is a CrossBorderIdentifier
        IntermediarySwiftID					is a SwiftID
        IntermediaryBankEntity				is a BankEntity
		CompanyCashCode
		TransactionData1					is a BankInstruct1	
		TransactionData2					is a BankInstruct2	
		TransactionData3					is a BankInstruct3	
		TransactionData4					is a BankInstruct4	
		ApprovalCode

		ApprovalLevel						is Numeric 8
		ReassignToApprovalLevel				is an ApprovalCodeResource

		Approver							is a FinanceResource

		ApproverTeam						is a FinanceTeamField

        CancelRequestType                  is Numeric 2
            States
                StopPayment		value is 1
                Void	        value is 2
                Reject			value is 3
		RejectAttachment					is an AlternateAttachment		
		CreateACHReversal					is Boolean					

	Transient Fields
		TransientBeginPaymentRange		is like TransactionNumber
		TransientEndOfPaymentRange		is like TransactionNumber
		TransientTotalReserved			is Numeric 3


		CashLedgerPaymentTempHold 	    is AlphaUpper size 1
		CompletionMessage				is Alpha size 150
		DeleteFromPayables				is Boolean
		FromICBBypassEdit				is Boolean
		TransientApplyToReserved		is Boolean		
		TransientRemittanceReport		is BinaryDocument		

	Rule Blocks


















						
		InitiateApprovalProcessFlow
			LocalCashManagementGroup		= CashManagementGroup
			LocalCashCode					= CashCode
			LocalCashLedgerSourceRecord		= CashLedgerSourceRecord
			LocalBankTransactionCode		= CashLedgerPayablesPayment.BankTransactionCode
			LocalTransactionIDNumber		= CashLedgerPayablesPayment.TransactionIDNumber
			
			initiate DetailPaymentVoidStopPayApproval process
				title is "<CancelRequestType>WaitingForApproval" 
				Variables
					LocalCashManagementGroup
					LocalCashCode
					LocalCashLedgerSourceRecord
					LocalBankTransactionCode
					LocalTransactionIDNumber
				URLs
					"<linkback(webapp is CashManager navigation is ProcessFlowForm text is \"ViewPaymentRecord\")>"

		BuildTeamApproverActorList
			LocalApproverList = ""
			LocalFirstApproverAssigned = false
			for each FinanceTeamMembersFromCurrentApprovalLevelRel
				if (LocalFirstApproverAssigned)
					LocalApproverList = LocalApproverList + "," + each.FinanceTeamMember.TeamMember.FinanceResourceActor
				else
					LocalApproverList = each.FinanceTeamMember.TeamMember.FinanceResourceActor
					LocalFirstApproverAssigned = true
		
		GetNextEscalationApprovalLevel
			LocalApprovalLevel		= ApprovalLevel
			if (first LocalApprovalCodeLevelRel.EscalateTo.NextApprovalLevel)
				LocalApprovalLevel	= ApprovalLevel + 1
				LocalApprover		= first LocalApprovalCodeLevelRel.Approver
				LocalApproverTeam	= first LocalApprovalCodeLevelRel.ApprovalTeam
			else
				LocalApprovalLevel	= first LocalApprovalCodeLevelRel.EscalationApprovalLevel.ApprovalLevel
				LocalApprover		= first LocalApprovalCodeLevelRel.Approver
				LocalApproverTeam	= first LocalApprovalCodeLevelRel.ApprovalTeam

		GetNextApprovalLevel
			if (ApprovalLevel < 1)
				LocalApprovalLevel	= first ApprovalCodeResourceRel.ApprovalLevel
				LocalApprover		= first ApprovalCodeResourceRel.Approver
				LocalApproverTeam	= first ApprovalCodeResourceRel.ApprovalTeam
			else
				LocalApprovalLevel		= ApprovalLevel + 1
				if (LocalApprovalCodeLevelRel exists)
					LocalApprovalLevel	= first LocalApprovalCodeLevelRel.ApprovalLevel
					LocalApprover		= first LocalApprovalCodeLevelRel.Approver
					LocalApproverTeam	= first LocalApprovalCodeLevelRel.ApprovalTeam
				else
					initialize LocalApprovalLevel
					initialize LocalApprover
					initialize LocalApproverTeam	
					

		NativeLPLBODTriggerChecksRuleBlock
			invoke NativeLPLBODTriggerChecks FSMBODConfigurationRelForPayableTracker
				invoked.PrmVerb 					= 1
				invoked.PrmNoun						= "PayableTracker"
				invoked.PrmDirection				= 1
				invoked.PrmTriggerFrom				= LocalTriggerFrom
				invoked.PrmFinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
				invoked.PrmAccountingEntity 		= Company.GeneralLedgerCompany.AccountingEntity
				invoked.PrmCompany 					= Company
				invoked.PrmMainUserTemplate			= LocalMainUserTemplate
			LocalNativeLPLBODTrigger = FSMBODConfigurationRelForPayableTracker.NativeLPLBODTrigger		
	

		ClosingControlEdits	
			if  (CheckType.CbPayment			
			and  CBCompanySystemClosingControlRel.Control)	
				constraint (LocalRejectDate within CBCompanySystemClosingControlRel.ValidEntryDate)	
					"RejectDateOutsideValidDateRangeOf:<CBCompanySystemClosingControlRel.ValidEntryDate.Begin>-<CBCompanySystemClosingControlRel.ValidEntryDate.End>ForCBCompany<Company>"	
			else	
				if (CompanySystemClosingControlRel.Control)		
					constraint (LocalRejectDate within CompanySystemClosingControlRel.ValidEntryDate)
						"RejectDateOutsideValidDateRangeOf:<CompanySystemClosingControlRel.ValidEntryDate.Begin>-<CompanySystemClosingControlRel.ValidEntryDate.End>ForAPCompany<PayablesCompanyProcessLevel.PayablesCompany>"		

		StaleDateRejectUpdateForAP	
			invoke CreateEscheatDistribFromBankUpdate CashLedgerGLDistribution
    			fill in fields from this instance
    			invoked.CashCode										= CashCode
    			invoked.CashLedgerSourceRecord							= CashLedgerSourceRecord
				invoked.CashLedgerGLDistribution.BankTransactionCode 	= CashLedgerPayablesPayment.BankTransactionCode
				invoked.CashLedgerGLDistribution.TransactionIDNumber 	= CashLedgerPayablesPayment.TransactionIDNumber
				invoked.CashLedgerGLDistribution.DistributionType	 	= "S"
				invoked.Company											= Company	
				invoked.Reference										= TransactionNumber
    			invoked.GeneralLedgerSourceCode                         = "CL"		
				invoked.BaseCurrencyNumberOfDecimals				 	= BaseCurrencyNumberOfDecimals
		        invoked.ToBaseCurrencyNumberOfDecimals				 	= BaseCurrencyNumberOfDecimals
		        invoked.ToTransactionCurrencyNumberOfDecimals		 	= TransactionCurrencyNumberOfDecimals
		        invoked.TransactionCurrencyNumberOfDecimals			 	= TransactionCurrencyNumberOfDecimals
				invoked.Status 										 	= 1
				invoked.RecordType										= "S"
				invoked.PostDate									 	= LocalRejectDate	
				if (Status.StaleDated)
					invoked.GLTransactionAmount							= PaymentAmount
					if (StaleDatingGLAccountByProcessLevelRel exists)
						invoked.GLFinanceCodeBlock					    = StaleDatingGLAccountByProcessLevelRel.StaleDateAccount
					else
						invoked.GLFinanceCodeBlock						= StaleDatingGLAccountRel.StaleDateAccount
				else	
					invoked.GLTransactionAmount							= (PaymentAmount *-1)	
				invoked.CompanyAccountingEntity							= Company.AccountingEntity
				invoked.TransientTransactionNumber						= TransactionNumber
				invoked.TransientTransactionDate						= LocalRejectDate
			
			invoke CreateEscheatDistribFromBankUpdate CashLedgerGLDistribution
    			fill in fields from CashLedgerPayablesPayment
    			invoked.CashCode										= CashCode
    			invoked.CashLedgerSourceRecord							= CashLedgerSourceRecord
				invoked.CashLedgerGLDistribution.BankTransactionCode 	= CashLedgerPayablesPayment.BankTransactionCode
				invoked.CashLedgerGLDistribution.TransactionIDNumber 	= CashLedgerPayablesPayment.TransactionIDNumber
				invoked.CashLedgerGLDistribution.DistributionType	 	= "S"
				invoked.Company											= Company	
				invoked.Reference										= TransactionNumber
    			invoked.GeneralLedgerSourceCode                         = "CL"		
				invoked.BaseCurrencyNumberOfDecimals				 	= BaseCurrencyNumberOfDecimals
		        invoked.ToBaseCurrencyNumberOfDecimals				 	= BaseCurrencyNumberOfDecimals
		        invoked.ToTransactionCurrencyNumberOfDecimals		 	= TransactionCurrencyNumberOfDecimals
		        invoked.TransactionCurrencyNumberOfDecimals			 	= TransactionCurrencyNumberOfDecimals
				invoked.Status 										 	= 1
				invoked.RecordType										= "S"
				invoked.PostDate									 	= LocalRejectDate	
				if (Status.StaleDated)	
					invoked.GLTransactionAmount							= (PaymentAmount *-1)
					invoked.GLFinanceCodeBlock					        = CompanyCashCode.CashAccount						
				else	
					invoked.GLTransactionAmount							= PaymentAmount	
					if (StaleDatingGLAccountByProcessLevelRel exists)
						invoked.GLFinanceCodeBlock						= StaleDatingGLAccountByProcessLevelRel.StaleDateAccount
					else	
						invoked.GLFinanceCodeBlock						= StaleDatingGLAccountRel.StaleDateAccount	
				invoked.CompanyAccountingEntity							= Company.AccountingEntity
				invoked.TransientTransactionNumber						= TransactionNumber
				invoked.TransientTransactionDate						= LocalRejectDate


    Derived Fields
    

		DerivedAccountingEntityName is a DerivedField
			type is Alpha size up to 80
			restricted
			return Company.GeneralLedgerCompany.AccountingEntity.Name

    

    	DerivedPfiConfIntegrationApplication is a DerivedField
    		type is Alpha size 15
    		restricted
    		return 	PfiConfIntegrationApplicationRel.Value
    	
    	DerivedIntegrationApplication is a DerivedField
			type is Alpha size 15
			restricted
			LocalConfigurationParameter	= "IntegrationApplication"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforCreditTransfer"
			
		ContextMessageText is a MessageField
			restricted
			"CashLedgerPayablesPayment<CashLedgerPayablesPayment>"
		
        ChkStatus  is a ConditionalField
            type is Alpha size 9
            if (IsOpen)
                "Open"
            else
            if (IsProcessed)
                "Processed"
            else
            if (IsScheduled)
                "Scheduled"
            else
            if (IsReconciled)
                "Reconcile"
            else
            if (IsVoided)
                "Void"
            else
            if (IsRejected)
                "Reject"
            else
            if (IsElectronicPaymentIssued)
                "Open"
            else
            if (IsElectronicPaymentReconciled)
                "Reconcile"
            else
            if (IsElectronicPaymentVoid)
                "Void"
            else
            if (IsManualReserved)
                "Reserved"
            else
                blank

        ShortPayee is a StringField
            type is Alpha size 20
            restricted
            PaidName

		CashCodeRepresentativeText is a StringField		
			type is Text
			default label is "CashCode"
			CashCode " - " CashCode.Description
		
		DerivedPlainTextComment   is a DerivedField  
		    type is Text
		    return CommentText plain text


		DerivedNextApprovalLevel is a DerivedField
			type is Numeric 8
			restricted
			LocalApprovalLevel = ApprovalLevel
			include GetNextApprovalLevel
			return LocalApprovalLevel
			
		DerivedCurrentApprovalResource is a DerivedField
			type is like FinanceResource
			restricted
			return first CurrentApprovalCodeLevelRel.Approver

		DerivedCurrentApprovalActor is a DerivedField
			type is Actor
			restricted
			return first CurrentApprovalCodeLevelRel.Approver.FinanceResourceActor

		DerivedCurrentApprovalTeam is a DerivedField
			type is like FinanceTeam
			restricted
			return first CurrentApprovalCodeLevelRel.ApprovalTeam

		DerivedCurrentTeamActorList is a DerivedField
			type is Alpha 250
			restricted
			include BuildTeamApproverActorList
			return LocalApproverList

		DerivedCurrentApproverEscalationDays is a DerivedField
			type is Numeric 6
			restricted
			if (first CurrentApprovalCodeLevelRel.EscalationDays > 0)
				return first CurrentApprovalCodeLevelRel.EscalationDays	
			else
				return 10000

		DerivedCurrentApproverEscalationHours is a DerivedField
			type is Decimal 6.2
			restricted
			if (first CurrentApprovalCodeLevelRel.EscalationHours > 0)
				return first CurrentApprovalCodeLevelRel.EscalationHours
			else
				return 9999.99
				
		DisplayCurrentApproverDesc is a ConditionalField
			type is Alpha 100
			restricted
			if (Approver entered)
				Approver.PreferredSimplePresentationName
			else
				ApproverTeam.FinanceTeam.Description


		PaymentStatus 				is a ConditionalField
			type is Alpha 45
			if (Status.ScheduledForPayment)
				CashLedgerPayablesPaymentScheduledMessage
			else
			if (CbtransRel exists)
				if (Status.ElectronicPaymentCancelled 					
                or  Status.ElectronicPaymentReinstated)
                    CashLedgerPayablesPaymentRejectMessage				
                else
				if (CbtransRel.Status.Reconciled
				or  CbtransRel.Status.Voided
				or  CbtransRel.Status.StopPayment
				or  CbtransRel.Status.WriteOff
				or  CbtransRel.Status.Escheated
				or  CbtransRel.Status.PendingApproval
				or  CbtransRel.Status.PendingStopPayConfirmation)		
					CashLedgerTransactionStatusMessage
				else
				if (CbtransRel.Status.StaleDated)
					CashLedgerTransactionStaleDatedMessage
				else
					CashLedgerPayablesPaymentIssuedMessage
			else
			if (Status.ElectronicPaymentCancelled
			or  Status.ElectronicPaymentReinstated)
				CashLedgerPayablesPaymentRejectMessage
			else
			if (PaidDate entered)
				CashLedgerPayablesPaymentPaidMessage
			else
			if (ConfirmationNumber entered)
				CashLedgerPayablesPaymentAcceptedMessage
			else
			if (IsManualReserved)
				CashLedgerPayablesPaymentReservedMessage
			else
			if (SummarizedPaymentIsVoided)
				CashLedgerVoidedSummarizedPaymentMessage
			else
			if (SummarizedPaymentIsStopPayment)
				CashLedgerStopPaymentSummarizedPaymentMessage
			else					
				CashLedgerPayablesPaymentIssuedMessage

		DerivedFormTitle	is a DerivedField
			type is Alpha size up to 100
			default label is "_"
			return "Cash Ledger Payment " + CashLedgerPayablesPayment.TransactionIDNumber + " " + CashLedgerPayablesPayment.CashCode + " " + CashLedgerPayablesPayment.BankTransactionCode	

		CashLedgerPayablesFormTitle is a DerivedField
			type is Alpha size up to 80
			if (RecordExists)
				if (TransactionNumber entered)	
					return CashLedgerPayablePmtTitle
				else
					return CashLedgerPayablePmtTitleNoRecord	
			else
				return CashLedgerPayablePmtTitleNoRecord
		
		CashLedgerPayablePmtTitleNoRecord is a LabelField
			restricted
			"CashLedgerPayablesPayment"
		
		CashLedgerPayablePmtTitle is a LabelField
			restricted
			"CashLedgerPayablesPayment_<CashLedgerPayablesPayment.TransactionNumber>"

		CashLedgerVoidedSummarizedPaymentMessage is a MessageField
			restricted
			"Voided-<first CashLedgerTransactionTapeRel.ReconciliationData.ExchangeDate>"

		CashLedgerStopPaymentSummarizedPaymentMessage is a MessageField
			restricted
			"StoppedPayment-<first CashLedgerTransactionTapeRel.ReconciliationData.ExchangeDate>"
						
		CashLedgerTransactionStatusMessage is a MessageField
			restricted
			"<CbtransRel.Status>-<CbtransRel.ReconciliationData.ExchangeDate>"
		
		CashLedgerTransactionStaleDatedMessage is a MessageField
			restricted
			"<CbtransRel.Status>-<CbtransRel.StaleDate>"
		
		CashLedgerPayablesPaymentRejectMessage is a MessageField
			restricted
			"Rejected-<RejectDate>"

		CashLedgerPayablesPaymentPaidMessage is a MessageField
			restricted
			"Paid-<PaidDate>"	

		CashLedgerPayablesPaymentAcceptedMessage is a MessageField
			restricted
			"Accepted-<ConfirmationNumber>"	

		CashLedgerPayablesPaymentReservedMessage is a MessageField
			restricted
			"Reserved"
		
		CashLedgerPayablesPaymentIssuedMessage is a MessageField
			restricted
			"Issued-<PaymentDate>"	
			
		CashLedgerPayablesPaymentScheduledMessage is a MessageField
			restricted
			"Scheduled-<PaymentDate>"		

		DerivedAppsValue	is a DerivedField
			type is like PfiAppsValue
			return "DetailPaymentVoidStopPayApproval" + UniqueID			

		UserActionRoutingAsHtml	is a DerivedField
			type is RichText
			return first PfiWorkunitRel.UserActionRoutingAsHtml

		MyPFIApprovals is a DerivedField
            type is Boolean
            restricted
            for each PfiWorkunitRel
                for each each.PfiMetricsRel
                    if (each.PfiMetrics.PfiUserProfile = actor)
                        return true 

		DerivedDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter	= "Generic_Delimiter"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "tenantID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "releaseID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "logicalID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "VersionID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedappProdline is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "appProdline"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedMultipleFEG is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "IsMultipleFEG"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedCleanDocumentID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "RequiredCleanDocumentID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedCrossGLC is a DerivedField
			type is Alpha size 50
			restricted
			if (DerivedMultipleFEG = "Y")
				return Company.FinanceEnterpriseGroup + DerivedDelimiter + Company.AccountingEntity
			else
				return Company.AccountingEntity
				
		DerivedAECrossAccountingEntity is a DerivedField
			type is Alpha size 50
			restricted
			if(LocalAEAlreadyExecuted != true)
				LocalAEAlreadyExecuted = true
				if (FSMBODAECrossReferenceDetailRel.DestinationValue entered)
					LocalAccountingEntity = FSMBODAECrossReferenceDetailRel.DestinationValue
				else
					LocalAccountingEntity = DerivedCrossGLC
				return LocalAccountingEntity
			else
				return LocalAccountingEntity
						
		BODVariationID is a DerivedField
			type is Alpha 25
			restricted
			return bod id.VariationID
			
		BODCurrentTimeStamp is a DerivedField
			type is TimeStamp
			restricted
			BODCurrentTimeStamp = system current timestamp
			return BODCurrentTimeStamp
			
		AlphaCurrentTimeStamp is a DerivedField
			type is Alpha size 20
			restricted
			return BODCurrentTimeStamp
			
		BODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return AlphaCurrentTimeStamp[1:4] + "-" + AlphaCurrentTimeStamp[5:6] + "-" + AlphaCurrentTimeStamp[7:8] + "T" + AlphaCurrentTimeStamp[9:10] + ":" + AlphaCurrentTimeStamp[11:12] + ":" + AlphaCurrentTimeStamp[13:14] + "Z"
		
		DerivedCashLedgerSourceRecord is a DerivedField
			type is Alpha 5
			if(CashLedgerSourceRecord.CashLedgerPayment)
				return "CBM"
			else 
			if(CashLedgerSourceRecord.CashLedgerPayablesPayment)
				return "CHK"
			else 
			if(CashLedgerSourceRecord.CashLedgerTransaction)
				return "CBT"
			else 
			if(CashLedgerSourceRecord.CashLedgerReturnedPayment)
				return "CRP"
			else 
			if(CashLedgerSourceRecord.ElectronicFundsTransfer)
				return "CFT"
			else
				return ""
				
		DerivedFinanceEnterpriseGroup is a DerivedField
			type is Alpha 4
			restricted
			return Company.FinanceEnterpriseGroup
			
		DerivedAccountingEntity is a DerivedField
			type is Alpha 30
			restricted
			if(DerivedCleanDocumentID != "Y")
				return DerivedFinanceEnterpriseGroup + DerivedDelimiter + Company.AccountingEntity
			else
				return DerivedAECrossAccountingEntity
			
		BODDocumentID is a DerivedField
			type is Alpha 75
			restricted
			if(DerivedCleanDocumentID != "Y")
				if(DerivedIntegrationApplication="Local.ly")
					return CashManagementGroup + DerivedDelimiter + DerivedCashLedgerSourceRecord + DerivedDelimiter + CashCode + DerivedDelimiter + CashLedgerPayablesPayment.BankTransactionCode + DerivedDelimiter + CashRequirementsResult
				else
					return CashManagementGroup + DerivedDelimiter + DerivedCashLedgerSourceRecord + DerivedDelimiter + CashCode + DerivedDelimiter + CashLedgerPayablesPayment.BankTransactionCode + DerivedDelimiter + CashLedgerPayablesPayment.TransactionIDNumber
			else
				return DerivedCashLedgerSourceRecord + DerivedDelimiter + CashCode + DerivedDelimiter + CashLedgerPayablesPayment.BankTransactionCode + DerivedDelimiter + CashLedgerPayablesPayment.TransactionIDNumber
			
		DerivedDisplayDocumentID is a DerivedField
			type is Alpha 60
			restricted
			return CashManagementGroup + "-" + DerivedCashLedgerSourceRecord + "-" + CashCode + "-" + CashLedgerPayablesPayment.BankTransactionCode + "-" + CashLedgerPayablesPayment.TransactionIDNumber	
		
		BODFormattedId is a DerivedField
			type is Alpha 150
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + DerivedAccountingEntity + ":" + ":" + BODDocumentID + ":" + "?RemittanceAdvice&verb=Sync&TrackerID="+ LocalFSMInboundBODTracker
		
		BODActionCode is a DerivedField
			type is Alpha 10
			restricted
			return "Add"
				
		BODStatusCode is a DerivedField
			type is Alpha 10
			restricted
			return "Open"
		
		PPaymentDate is a DerivedField
			type is Alpha 20
			restricted
			return PaymentDate
					
		DerivedPaymentDate is a DerivedField
			type is Alpha 25
			restricted
			return PPaymentDate[1:4] + "-" + PPaymentDate[5:6] + "-" + PPaymentDate[7:8]	
			
		DerivedBasePaymentAmount is a DerivedField
			type is Decimal size 19.3
			restricted
			return BasePaymentAmount.EnteredCurrencyAmount
		
		DerivedBasePaymentCurrency is a DerivedField
			type is Alpha 5
			restricted
			return BasePaymentAmount.ToCurrency	
		
		DerivedAppliedAmount is a DerivedField
			type is Decimal 19.3
			restricted
			return AppliedAmountBankAccountCurrency.TransactionAmount
			
		DerivedReference is a DerivedField
			type is Alpha 22
			restricted
			return CashLedgerPaymentRel.Reference
		
		DerivedPostDate is a DerivedField
			type is Alpha 20
			restricted
			return CashLedgerPaymentRel.PostDate
			
		DerivedCashLedgerPaymentPostDate is a DerivedField
			type is Alpha 25
			restricted
			return DerivedPostDate[1:4] + "-" + DerivedPostDate[5:6] + "-" + DerivedPostDate[7:8]
		
		DerivedCashLegerPaymentCurrency is a DerivedField
			type is Alpha 5
			restricted
			return CashLedgerPaymentRel.Currency
		
		DerivedCashLegerPaymentBankCheckAmount is a DerivedField
			type is Alpha 20
			restricted
			return CashLedgerPaymentRel.BankCheckAmount	
			
		DerivedCashLegerPaymentBaseNetPaymentAmount is a DerivedField
			type is Decimal size 19.3 
			restricted
			return CashLedgerPaymentRel.BaseNetPaymentAmount.FunctionalAmount.EnteredCurrencyAmount	
		
		PayablesInvoiceLineXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if (AppaymentRel exist)
				initialize LocalBODLineCount
				for each AppaymentRel
					LocalBODLineCount +=1
					each.LocalBODPayablesInvoiceLineCount = LocalBODLineCount
					each.LocalBODAccountingEntity	= DerivedAccountingEntity
					each.LocalBasePaymentCurrency = DerivedBasePaymentCurrency
					each.LocalCashLegerPaymentBaseNetPaymentAmount = DerivedBasePaymentAmount
					PayablesInvoiceLineXMLBOD += template.IONSyncRemittanceAdvice_CashLedgerPayablesPayment_PayablesInvoicePaymentLine_ST document for each
				return PayablesInvoiceLineXMLBOD
			else 
				return ""
		
		RemittanceAdvicePayablesInvoicePaymentXMLBOD is a DerivedField
			type is XMLDocument
	        restricted
	        RemittanceAdvicePayablesInvoicePaymentXMLBOD = template.IONSyncRemittanceAdvice_CashLedgerPayablesPayment_PayablesInvoicePayment_ST document for this instance
	        				
		RemittanceAdviceCashLedgerPaymentXMLBOD is a DerivedField
			type is XMLDocument
	        restricted
	        RemittanceAdviceCashLedgerPaymentXMLBOD = template.IONSyncRemittanceAdvice_CashLedgerPayablesPayment_CashLedgerPayment_ST document for this instance
	        	
	    RemittanceAdviceXMLBOD is a DerivedField
			type is XMLDocument
	        restricted
	        if (CheckType.CbPayment)
	        	return RemittanceAdviceCashLedgerPaymentXMLBOD	
	        else
	        	return RemittanceAdvicePayablesInvoicePaymentXMLBOD



		DerivedBODCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			DerivedBODCurrentTimeStamp = current timestamp
			return DerivedBODCurrentTimeStamp[1:4] + "-" + DerivedBODCurrentTimeStamp[5:6] + "-" + DerivedBODCurrentTimeStamp[7:8] + "T" + DerivedBODCurrentTimeStamp[9:10] + ":" + DerivedBODCurrentTimeStamp[11:12] + ":" + DerivedBODCurrentTimeStamp[13:14] + "Z"
		
		DerivedCompany is a DerivedField
			type is Alpha size 10
			restricted
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry="NZ" and DerivedCashLedgerSourceRecord="CBM")
				return CashLedgerPaymentRelLocally.PayablesData.PayablesCompany
			else
				return Company using "%d"
			
		DerivedCompanyAccountingEntity is a DerivedField
			type is Alpha size 24
			restricted
			return Company.AccountingEntity
		
		DerivedLocation is a DerivedField
			type is Alpha size 30
			restricted
			if(DerivedIntegrationApplication="Local.ly")
				return DerivedFinanceEnterpriseGroup + DerivedDelimiter + Company using "%d"
			else
				return ""
			
		DerivedBODAccountingEntity is a DerivedField
			type is Alpha size 100
			restricted
			return DerivedFinanceEnterpriseGroup + DerivedDelimiter + Company.GeneralLedgerCompany.AccountingEntity
		
		DerivedBODId is a DerivedField
			type is Alpha size 150
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + DerivedAccountingEntity + ":" + DerivedLocation + ":" + BODDocumentID + ":" + "?CreditTransfer&verb=Sync&TrackerID=" + LocalFSMInboundBODTracker
		
		DerivedDisplayID is a DerivedField
			type is Alpha size 10
			restricted
			return CashLedgerPayablesPayment.TransactionIDNumber
		
		DerivedLastMoDDate is a DerivedField
			type is Alpha size 25
			restricted
			DerivedLastMoDDate = update stamp.timestamp
			return DerivedLastMoDDate[1:4] + "-" + DerivedLastMoDDate[5:6] + "-" + DerivedLastMoDDate[7:8] + "T" + DerivedLastMoDDate[9:10] + ":" + DerivedLastMoDDate[11:12] + ":" + DerivedLastMoDDate[13:14] + "Z"
		
		DerivedDocumentDate is a DerivedField
			type is Alpha size 25
			restricted
			DerivedDocumentDate = current timestamp
			return DerivedDocumentDate[0:4] + "-" + DerivedDocumentDate[5:6] + "-" + DerivedDocumentDate[7:8]
			
		DerivedCheckDate is a DerivedField
			type is Alpha size 25
			restricted
			return APPaymentCreditTransferRel.CheckDate
		
		DerivedDocDateTime is a DerivedField
			type is Alpha size 25
			restricted
			return DerivedCheckDate[1:4] + "-" + DerivedCheckDate[5:6] + "-" + DerivedCheckDate[7:8] + "T" + DerivedLastMoDDate[9:10] + ":" + DerivedLastMoDDate[11:12] + ":" + DerivedLastMoDDate[13:14] + "Z"		
		
		DerivedPayablesInvoicePaymentCount is a DerivedField
			type is Numeric size 5
			restricted
			if(DerivedIntegrationApplication="Local.ly")
				return instance count of CashLedgerPayablesPaymentRel
			else
				return instance count of APPaymentCreditTransferRel
		
		DerivedVATRegistrationNumber is a DerivedField
			type is AlphaUpper size 25
			restricted
			return TaxEntityRel.VATRegistrationNumber
		
		DerivedTaxID is a DerivedField
			type is Alpha size 25
			restricted
			if(DerivedVATRegistrationNumber entered)
				return DerivedVATRegistrationNumber
			else
				return TaxEntityRel.TaxID
				
		DerivedTaxIDScheme is a DerivedField
			type is Alpha size 30
			restricted
			return "TaxIdentificationNumber"
			
		DerivedVendorPaymentCategoryCode is a DerivedField
			type is AlphaUpper size 6
			restricted
			return PaidVendor.PaymentCategoryCode
		
		DerivedVendorPurposecode is a DerivedField
			type is Alpha size 6
			restricted
			if(DerivedDebtorAddressCountry = "IT")
				return DerivedVendorPaymentCategoryCode
			else
				if(DerivedIntegrationApplication = "Local.ly" and DerivedDebtorAddressCountry = "AU")
					return "50"
				else
					return ""
				
		DerivedCountrySpecificSchema is a DerivedField
			type is Alpha size 50
			restricted
			if(DerivedDebtorAddressCountry = "IT")
				return "CountryIdentificationNumber"
			else
				return DerivedTaxIDScheme
			
		DerivedPayablesCompanyName is a DerivedField
			type is Alpha size up to 80
			restricted
			return PayablesCompanyRel.Name 
			
		DerivedPayablesCompany is a DerivedField
			type is Alpha size 80
			restricted
			return PayablesCompanyRel.Company using "%d"
			
		DerivedBankTransactionCode is a DerivedField
			type is AlphaUpper size 10
			restricted
			return CashLedgerPayablesPayment.BankTransactionCode
			
		DerivedLastMODActor is a DerivedField
			type is Alpha size 30
			restricted
			return update stamp.actor
		
		DerivedBODStatusCode is a DerivedField
			type is Alpha size 10
			restricted
			if (Status.ScheduledForPayment or Status.PaymentCycleProcessed or Status.PaymentCycleClosed)
				return "Open" 
			if (Status.ElectronicPaymentCancelled)
				return "Deleted"
		
		DerivedDebtorAddressContact is a DerivedField
			type is Alpha size 255
			restricted
			return Company.AccountingEntity.AddressCode.PersonResponsible.Name.GivenName + " " + Company.AccountingEntity.AddressCode.PersonResponsible.Name.FamilyName
		
		DerivedDebtorAddress1 is a DerivedField
			type is Alpha size 40
			restricted
			return Company.AccountingEntity.AddressCode.PostalAddress.DeliveryAddress.AddressLine1
			
		DerivedDebtorAddress2 is a DerivedField
			type is Alpha size 40
			restricted
			return Company.AccountingEntity.AddressCode.PostalAddress.DeliveryAddress.AddressLine2
			
		DerivedDebtorAddress3 is a DerivedField
			type is Alpha size 40
			restricted
			return Company.AccountingEntity.AddressCode.PostalAddress.DeliveryAddress.AddressLine3
			
		DerivedDebtorAddress4 is a DerivedField
			type is Alpha size 40
			restricted
			return Company.AccountingEntity.AddressCode.PostalAddress.DeliveryAddress.AddressLine4
			
		DerivedDebtorAddressCity is a DerivedField
			type is Alpha size 58
			restricted
			return Company.AccountingEntity.AddressCode.PostalAddress.Municipality
			
		DerivedDebtorAddressState is a DerivedField
			type is Alpha size 3
			restricted
			return Company.AccountingEntity.AddressCode.PostalAddress.StateProvince
			
		DerivedDebtorAddressCountry is a DerivedField
			type is Alpha size 3
			restricted
			return Company.AccountingEntity.AddressCode.PostalAddress.Country
		
		DerivedDebtorAddressPostalCode is a DerivedField
			type is Alpha size 12
			restricted
			return Company.AccountingEntity.AddressCode.PostalAddress.PostalCode
		
		DerivedDebtorPhoneInternationalPrefix is a DerivedField
			type is Alpha size 50
			restricted
			return Company.AccountingEntity.AddressCode.TelephoneNumber.InternationalPrefix
			
		DerivedDebtorPhoneNumber is a DerivedField
			type is Alpha size 50
			restricted
			return Company.AccountingEntity.AddressCode.TelephoneNumber.SubscriberNumber
			
		DerivedDebtorPhoneExt is a DerivedField
			type is Alpha size 50
			restricted
			return Company.AccountingEntity.AddressCode.TelephoneNumber.Extension
			
		DerivedfwdagentLocType is a DerivedField
			type is Alpha size 10
			restricted
			return "Financial"

		DerivedVendorBankCode1 is a DerivedField		
			type is like VendorBankCode150				
			restricted
            if (IsCashLedgerPayment)					
                return CashLedgerPaymentRel.VendorBankCode1
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode1
			return first VendorBankRel.VendorBankCode1

		DerivedVendorBankCode2 is a DerivedField		
			type is like VendorBankCode
			restricted
            if (IsCashLedgerPayment)					
                return CashLedgerPaymentRel.VendorBankCode2
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode2
			return first VendorBankRel.VendorBankCode2

		DerivedVendorBankCode3 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode3
			return first VendorBankRel.VendorBankCode3

		DerivedVendorBankCode4 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode4
			return first VendorBankRel.VendorBankCode4

		DerivedVendorBankCode5 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode5
			return first VendorBankRel.VendorBankCode5

		DerivedVendorBankCode6 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode6
			return first VendorBankRel.VendorBankCode6

		DerivedVendorBankCode7 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode7
			return first VendorBankRel.VendorBankCode7

		DerivedVendorBankCode8 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode8
			return first VendorBankRel.VendorBankCode8

		DerivedVendorBankCode9 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode9
			return first VendorBankRel.VendorBankCode9

		DerivedVendorBankCode10 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode10
			return first VendorBankRel.VendorBankCode10

		DerivedVendorBankCode11 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode11
			return first VendorBankRel.VendorBankCode11

		DerivedVendorBankCode12 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode12
			return first VendorBankRel.VendorBankCode12

		DerivedVendorBankCode13 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode13
			return first VendorBankRel.VendorBankCode13

		DerivedVendorBankCode14 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode14
			return first VendorBankRel.VendorBankCode14

		DerivedVendorBankCode15 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode15
			return first VendorBankRel.VendorBankCode15

		DerivedVendorBankCode16 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode16
			return first VendorBankRel.VendorBankCode16

		DerivedVendorBankCode17 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode17
			return first VendorBankRel.VendorBankCode17

		DerivedVendorBankCode18 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode18
			return first VendorBankRel.VendorBankCode18

		DerivedVendorBankCode19 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode19
			return first VendorBankRel.VendorBankCode19

		DerivedVendorBankCode20 is a DerivedField		
			type is like VendorBankCode
			restricted
			if (VendorLocationHasBankCodesRel exists)
				return VendorLocationHasBankCodesRel.first VendorBankRel.VendorBankCode20
			return first VendorBankRel.VendorBankCode20

		DerivedBankEntityBIC is a DerivedField
			type is AlphaUpper size 12
			restricted
			return CashCode.SwiftID
		
		DerivedBankEntityBankName is a DerivedField
			type is Alpha size 70
			restricted
			if(PaidVendor.BankEntity entered)
				return PaidVendor.BankEntity.BankName
		
		DerivedBankEntityBranchName is a DerivedField
			type is Alpha size 70
			restricted
			if(PaidVendor.BankEntity entered)
				return PaidVendor.BankEntity.BranchName
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry="NZ" and DerivedCashLedgerSourceRecord="CBM")
				return CashLedgerPaymentRelLocally.DerivedBankEntityBranchName
			else
				return ""
			
		
		DerivedBankEntityContact is a DerivedField
			type is AlphaUpper size 20
			restricted
			if(PaidVendor.BankEntity entered)
				return PaidVendor.BankEntity.Contact
			
		DerivedBankEntityAddressLine1 is a DerivedField
			type is Alpha size 40
			restricted
			return PaidVendor.BankEntity.PostalAddress.DeliveryAddress.AddressLine1
			
		DerivedBankEntityAddressLine2 is a DerivedField
			type is Alpha size 40
			restricted
			return PaidVendor.BankEntity.PostalAddress.DeliveryAddress.AddressLine2
			
		DerivedBankEntityAddressLine3 is a DerivedField
			type is Alpha size 40
			restricted
			return PaidVendor.BankEntity.PostalAddress.DeliveryAddress.AddressLine3
			
		DerivedBankEntityAddressLine4 is a DerivedField
			type is Alpha size 40
			restricted
			return PaidVendor.BankEntity.PostalAddress.DeliveryAddress.AddressLine4
			
		DerivedBankEntityMunicipality is a DerivedField
			type is Alpha size 58
			restricted
			return PaidVendor.BankEntity.PostalAddress.Municipality
			
		DerivedBankEntityStateProvince is a DerivedField
			type is Alpha size 3
			restricted
			return PaidVendor.BankEntity.PostalAddress.StateProvince
		
		DerivedBankEntityCountry is a DerivedField
			type is Alpha size 3
			restricted
			return PaidVendor.BankEntity.PostalAddress.Country
			
		DerivedBankEntityPostalCode is a DerivedField
			type is Alpha size 12
			restricted
			return PaidVendor.BankEntity.PostalAddress.PostalCode
		
		DerivedfwdagentpartyID is a DerivedField
			type is Alpha size 30
			restricted
			if (DerivedBankEntityBIC! = "")
				return CashCode + DerivedDelimiter + DerivedBankEntityBIC
			else
				return CashCode
		
		DerivedClearSysMemID is a DerivedField
			type is Alpha size 18
			restricted
			if(PayGroup.PayablesElectronicTransferIDRel exists and DerivedBankTransactionCode entered)
				for each PayGroup.PayablesElectronicTransferIDRel
					if(each.BankTransactionCode = DerivedBankTransactionCode)
						DerivedClearSysMemID = each.PayablesElectronicTransferID.ElectronicTransferID
						end for each
				return DerivedClearSysMemID
				

		
		DerivedTransactionDescription is a DerivedField
			type is Alpha size 50
			restricted
			if(DerivedIntegrationApplication="Local.ly")
				if(Status.ScheduledForPayment)
					return "ScheduledForPayment"
				else
				if(Status.PaymentCycleProcessed)
					return "PaymentCycleProcessed"
				else
				if(Status.PaymentCycleClosed)
					return "PaymentCycleClosed"
				else
				if(Status.ElectronicPaymentCancelled)
					return "ElectronicPaymentCancelled"
				else
				if(Status.ElectronicPaymentReinstated)
					return "ElectronicPaymentReinstated"
				else
				if(Status.TemporaryVoid)
					return "TemporaryVoid"
				else
				if(Status.ReservedForManualPayment)
					return "ReservedForManualPayment"
				else
				if(Status.StaleDated)
					return "StaleDated"
				else
				if(Status.Escheated)
					return "Escheated"
				else
				if(Status.VoidStopPaymentRequested)
					return "VoidStopPaymentRequested"
				else
					return ""
			else
				return ""
		
		DerivedElectTransferID is a DerivedField
			type is AlphaUpper size 60
			restricted
			if(DerivedIntegrationApplication = "Local.ly")
				if(DerivedDebtorAddressCountry = "IT")
					return DerivedClearSysMemID
				if(DerivedDebtorAddressCountry = "AU")
					DerivedElectTransferID = CashManagementGroup + "-" + TransactionNumber
					return DerivedElectTransferID
				else
					return ""
			else
				return ""
				
		DerivedVLCountry is a DerivedField
			type is Alpha size 40
			restricted
			return APPaymentCreditTransferRel.DerivedVLCountry
			
		DerivedCurrencyCode is a DerivedField
			type is AlphaUpper size 5
			restricted
			return APPaymentCreditTransferRel.DerivedCurrencyCode
			
		InvoiceCurrency is a DerivedField
			type is AlphaUpper size 5
			restricted
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry="NZ" and DerivedCashLedgerSourceRecord="CBM")
				return PayCurrency
			else
				return APPaymentCreditTransferRel.InvoiceCurrency
		
		DerivedCurrAmountLocally is a DerivedField
			type is Decimal size 19.2
			restricted
			return PaymentAmount
		
		DerivedCurrencyAmount is a DerivedField
			type is Alpha size 50
			restricted
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry="NZ" and DerivedCashLedgerSourceRecord="CBM")
				return DerivedCurrAmountLocally
			else
				return APPaymentCreditTransferRel.DerivedCurrencyAmount		
		
		DerivedEnteredCurrencyAmount is a DerivedField
			type is Alpha size 50
			restricted
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry="NZ" and DerivedCashLedgerSourceRecord="CBM")
				return DerivedCurrAmountLocally
			else
				return APPaymentCreditTransferRel.DerivedEnteredCurrencyAmount
		
		DerivedpmttransID is a DerivedField
			type is Alpha size 32
			restricted
			return APPaymentCreditTransferRel.DerivedpmttransID
		
		DerivedIDScheme is a DerivedField
			type is Alpha size 30
			restricted
			if(DerivedIntegrationApplication="Local.ly")
				return "BankPartyIdentification"
		
		DerivedTaxIDSchemaName is a DerivedField
			type is Alpha size 30
			restricted
			if(DerivedIntegrationApplication="Local.ly")
				return "TaxIdentificationNumber"
		
		DerivedVLocCountry is a DerivedField
			type is Alpha size 3
			restricted
			return PaidVendor.CurrentAddressRel.VendorAddress.PostalAddress.Country
		
		DerivedVCountry is a DerivedField
			type is Alpha size 40
			restricted
			if(DerivedIntegrationApplication="Local.ly" and DerivedCountry = "PL")
				if (RemitToCode entered)
					return PaidVendor.VendorLocationRel.VendorCountry
				else
				if (RemitToCode not entered)
					return DerivedVLocCountry
				
					
		DerivedVendorContactName is a DerivedField
			type is Alpha size up to 120
			restricted
			if(DerivedIntegrationApplication="Local.ly")
				if (RemitToCode entered)
					if ((RemitToCode.BankAccountNumber entered) and (PaidVendor.VendorLocationRel.BankEntity entered))
						return PaidVendor.VendorLocationRel.ContactName
					else
						return PaidVendor.ContactName
				else
					return PaidVendor.ContactName
		
		DerivedChannelCD is a DerivedField
			type is Alpha size 10
			restricted
			if (PaidVendor.PhoneNumber.InternationalPrefix entered)
				return "Phone"
		
		DerivedAccountNumber is a DerivedField
			type is Alpha size 35
			restricted
			if(DerivedIntegrationApplication="Local.ly")
				if (RemitToCode entered)
					if ((RemitToCode.BankAccountNumber entered) and (PaidVendor.VendorLocationRel.BankEntity entered))
						return RemitToCode.BankAccountNumber
					else
						return PaidVendor.BankAccountNumber
				else
					return PaidVendor.BankAccountNumber
		
		DerivedDebtorsBBANID is a DerivedField
			type is Alpha size 35
			restricted
			if(CashCode.BankAccountValidationType.Iban or CashCode.BankAccountValidationType.IbanAndBIC)
				return ""
			else
				return CashCode.BankAccountNumber
		
		DerivedDebtorsIBANID is a DerivedField
			type is Alpha size 35
			restricted
			if(CashCode.BankAccountValidationType.Iban or CashCode.BankAccountValidationType.IbanAndBIC)
				return CashCode.BankAccountNumber
			else
				return ""
		
		DerivedCurrency is a DerivedField
			type is AlphaUpper size 5
			restricted
			return CashCode.Currency
		
		DerivedCreditorsBBANID is a DerivedField
			type is Alpha size 35
			restricted
			if(CashCode.BankAccountValidationType.Iban or CashCode.BankAccountValidationType.IbanAndBIC)
				return ""
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry="NZ" and DerivedCashLedgerSourceRecord="CBM")
				return CashLedgerPaymentRelLocally.BankAccountNumber
			else
				return DerivedAccountNumber
		
		DerivedBankTransactionCodeDesc is a DerivedField
			type is Alpha size up to 60
			restricted
			if(DerivedIntegrationApplication="Local.ly")
				return CashLedgerPayablesPayment.BankTransactionCode.Description
			else 
				return ""
		
		DerivedBankEBranchName is a DerivedField
			type is Alpha size 70
			restricted
			if(DerivedIntegrationApplication="Local.ly" and DerivedCountry = "MX")
				return CashManagementAccount.FinancialInstitutionBranch
			else
				return DerivedBEBranchName
		
		DerivedBEBranchName is a DerivedField
			type is Alpha size 70
			restricted
			if(RemitToCode entered and PaidVendor.VendorLocationRel.BankEntity entered)
				return PaidVendor.VendorLocationRel.DerivedIBranchName
			else
			if(RemitToCode entered and PaidVendor.VendorLocationRel.BankEntity not entered)
				return PaidVendor.BankEntity.BranchName
			else
			if(RemitToCode not entered and PaidVendor.VendorLocationRel.BankEntity entered)
				return PaidVendor.BankEntity.BranchName
			else
				return ""
		
		DerivedFirstAgentFinacctID is a DerivedField
			type is Alpha size 60
			restricted
			return CashLedgerPayablesPayment.BankTransactionCode + DerivedDelimiter + TransactionNumber + DerivedDelimiter + CashLedgerPayablesPayment.TransactionIDNumber
			
		DerivedFwdagentpartyLocType is a DerivedField
			type is Alpha size 20
			restricted
			return "Financial"
		
		DerivedBEBankName is a DerivedField
			type is AlphaUpper size 15
			restricted
			if (DerivedIntegrationApplication="Local.ly")
				if(DerivedCountry = "MX")
					return CashCode.FinancialInstitution
				else
				if(DerivedCountry = "AU")
					return CashCode.FinancialInstitution.Description
				else
					return DerivedBankEntityBankName
			else
				return DerivedBankEntityBankName
				
		DerivedCreditorsIBANID is a DerivedField
			type is Alpha size 35
			restricted
			if(CashCode.BankAccountValidationType.Iban or CashCode.BankAccountValidationType.IbanAndBIC)
				return DerivedAccountNumber
			else
				return ""	
		
		DerivedVenPaymentCategoryCode is a DerivedField
			type is AlphaUpper size 6
			restricted
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry = "IT")
				return DerivedVendorPaymentCategoryCode
			else
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry = "AU")
				return DerivedVendorPaymentCategoryCode
			else
				return ""
		
		DerivedReqExecDate is a DerivedField
			type is Alpha size 20
			restricted

			if(DerivedIntegrationApplication="Local.ly" and (DerivedDebtorAddressCountry="NZ" or DerivedDebtorAddressCountry="AU"))
				DerivedReqExecDate = PaymentDate
			else
				DerivedReqExecDate = AppaymentRel.PayablesInvoice.DueDate
			return DerivedReqExecDate[0:4] + "-"+ DerivedReqExecDate[5:6] + "-" + DerivedReqExecDate[7:8]
		
		DerivedAgreementPriorityCode is a DerivedField
			type is Alpha size 10
			restricted
			return "normal"
		
		DerivedChargeBearerCode is a DerivedField
			type is Alpha size 15
			restricted
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry="NZ" and DerivedCashLedgerSourceRecord="CBM")
				if(RemitToCode entered and PaidVendor.VendorLocationRel.CurrentAddressRel.PostalAddress.Country entered)
					if(PaidVendor.VendorLocationRel.CurrentAddressRel.PostalAddress.Country!="NZ")
						return "Shared"
					else
						return "Debtor"
				else 
				if(DerivedVLocCountry entered)
					if(DerivedVLocCountry!="NZ")
						return "Shared"
					else
						return "Debtor"
			else
				return PayablesInvoicePaymentRelLocally.DerivedChargeBearerCode
		
		DerivedRmtIDScheme is a DerivedField
			type is Alpha size 60
			restricted
			return CashLedgerPayablesPayment.BankTransactionCode + DerivedDelimiter + TransactionNumber + DerivedDelimiter + CashLedgerPayablesPayment.TransactionIDNumber
						
		DerivedInvoice is a DerivedField
			type is Alpha size 50
			restricted
			if(DerivedCashLedgerSourceRecord="CBM" and DerivedIntegrationApplication="Local.ly" and Company.AccountingEntity.AddressCode.PostalAddress.Country = "MX")
				return CashLedgerPaymentRelLocally.Reference
			else
				return APPaymentCreditTransferRel.Invoice

		DerivedName is a DerivedField
			type is Alpha size 30
			restricted
			if(DerivedIntegrationApplication="Local.ly" and Company.AccountingEntity.AddressCode.PostalAddress.Country = "AU")
				return PayablesInvoicePaymentRelLocally.DerivedVendorName
		
		DerivedProcurementCardStatement is a DerivedField
			type is Alpha size 22
			restricted
			if(DerivedIntegrationApplication="Local.ly" and Company.AccountingEntity.AddressCode.PostalAddress.Country = "MX")
				return CashLedgerTransactionIdentifier
			else
				return APPaymentCreditTransferRel.PayablesInvoice.ProcurementCardStatement
		
		DerivedpaymentPurposeCode is a DerivedField
			type is Alpha size up to 60
			default label is "PaymentPurposeCode"
			if(DerivedIntegrationApplication="Local.ly")
				return APPaymentCreditTransferRel.DerivedpaymentPurposeCode
			else
				return ""
		
		DerivedEffectiveDate is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedIntegrationApplication="Local.ly")
				return DerivedReqExecDate	
			else
				DerivedEffectiveDate = current timestamp
				return DerivedEffectiveDate[0:4] + "-" + DerivedEffectiveDate[5:6] + "-" + DerivedEffectiveDate[7:8]
			
		DerivedVendorSwiftID is a DerivedField
			type is Alpha 30
			restricted
			return PaidVendor.SwiftID
			
		DerivedVendorInternationalPrefix is a DerivedField
			type is Alpha 50
			restricted	
			return PaidVendor.PhoneNumber.InternationalPrefix
		
		DerivedVendorSubsriberNumber is a DerivedField
			type is Alpha 30
			restricted
			return PaidVendor.PhoneNumber.SubscriberNumber
		
		DerivedVendorPhoneExtension is a DerivedField
			type is Alpha size 50
			restricted
			return PaidVendor.PhoneNumber.Extension
		
		DerivedBalanceCurrency is a DerivedField
			type is Alpha size 5
			restricted
			return PaidVendor.BalanceCurrency
		
		DerivedBankInstruction1	is a DerivedField
			type is AlphaUpper size 35
			restricted
			return PaidVendor.BankInstructions1
		
		DerivedBankInstruction2	is a DerivedField
			type is AlphaUpper size 35
			restricted
			return PaidVendor.BankInstructions2
		
		DerivedBankInstruction3	is a DerivedField
			type is AlphaUpper size 35
			restricted
			return PaidVendor.BankInstructions3
		
		DerivedBankInstruction4	is a DerivedField
			type is AlphaUpper size 35
			restricted
			return PaidVendor.BankInstructions4
				
		PayablesInvoicePaymentXMLLocal is a DerivedField
			type is XMLDocument
			restricted
			if(DerivedIntegrationApplication="Local.ly")
				if(CashLedgerPayablesPaymentRel exists)
					initialize LocalBODLineCount
					for each CashLedgerPayablesPaymentRel
						LocalBODLineCount +=1
						each.LocalBODLineCount			= LocalBODLineCount
						LocalTransID 					= CashManagementGroup + "-" + each.TransactionNumber
						PayablesInvoicePaymentXMLLocal += template.IONSyncCreditTransfer_PaymentTransactionLine_ST document for each
					return PayablesInvoicePaymentXMLLocal
				else
					return ""
		
		PaymentTransactionLineXML is a DerivedField
			type is XMLDocument
			restricted
			if(CashLedgerPayablesPaymentRel exists)
				initialize LocalLine
				if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry="NZ" and DerivedCashLedgerSourceRecord="CBM")
					return CBMRemittanceInformationXML
				else
					return RemittanceInformationXML
		
		CBMRemittanceInformationXML is a DerivedField
			type is XMLDocument
			restricted
			if(CashLedgerPaymentRelLocally exists)
				for each CashLedgerPaymentRelLocally
					LocalLine +=1
					each.LocalLine 						= LocalLine
					CBMRemittanceInformationXML 		+= template.IONSyncCreditTransfer_CBMRemittanceInformationXML_ST document for each
				return CBMRemittanceInformationXML
			else
				return ""
					
		
		RemittanceInformationXML is a DerivedField
			type is XMLDocument
			restricted
			if (PayablesInvoicePaymentRelLocally exists)
				for each PayablesInvoicePaymentRelLocally
					LocalLine +=1
					each.LocalLine 						= LocalLine
					RemittanceInformationXML 			+= template.IONSyncCreditTransfer_RemittanceInformationXML_ST document for each
				return RemittanceInformationXML
			else
				return ""
				

		PayablesInvoicePaymentXML is a DerivedField
			type is XMLDocument
			restricted
			if(DerivedIntegrationApplication!="Local.ly")
				if (APPaymentCreditTransferRel exists)
					initialize LocalBODLineCount
					for each APPaymentCreditTransferRel
						LocalBODLineCount +=1
						each.LocaLine 						= LocalBODLineCount
						each.LocalVariationID				= BODVariationID
						each.LocalClearSysMemID 			= DerivedClearSysMemID						
						PayablesInvoicePaymentXML += template.IONSyncCreditTransfer_PayablesInvoicePaymentLine_ST document for each
					return PayablesInvoicePaymentXML
				else
					return ""
			
		SyncCreditTransferXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if(DerivedIntegrationApplication="Local.ly")
				SyncCreditTransferXMLBOD = template.IONSyncCreditTransfer_CashLedgerPayablesPaymentHeader_ST document for this instance
				return SyncCreditTransferXMLBOD
			else
				SyncCreditTransferXMLBOD = template.IONSyncCreditTransfer_CashLedgerPayablesPayment_ST document for this instance
				return SyncCreditTransferXMLBOD
			


			
		DerivedBODIDPayableTracker is a DerivedField
			type is Alpha size 200
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + DerivedAccountingEntity + ":" + ":" + DerivedBODDocumentID + ":" + "?PayableTracker&verb=Sync&TrackerID=" + LocalFSMInboundBODTracker
			
		DerivedBODDocumentID is a DerivedField
			type is Alpha 75
			restricted
			return Company using "%d"+ DerivedDelimiter + CashCode + DerivedDelimiter + CashLedgerPayablesPayment.BankTransactionCode + DerivedDelimiter + CashLedgerPayablesPayment.TransactionIDNumber using "%d"
		
		DerivedPTDisplayID is a DerivedField
			type is Alpha 10
			restricted
			return CashLedgerPayablesPayment.TransactionIDNumber using "%d"
			
		DerivedVendorTaxPT is a DerivedField
			type is AlphaUpper size 25
			restricted
			return PaidVendor.TaxID
			
		DerivedVendorName is a DerivedField
			type is Alpha size 120
			restricted
			return PaidVendor.VendorName
			
		DerivedContactName is a DerivedField
			type is Alpha size 120
			restricted
			return PaidVendor.ContactName
			
		DerivedAddress1 is a DerivedField
			type is Alpha size 40
			restricted
			return PaidVendor.CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine1
			
		DerivedAddress2 is a DerivedField
			type is Alpha size 40
			restricted
			return PaidVendor.CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine2
			
		DerivedAddress3 is a DerivedField
			type is Alpha size 40
			restricted
			return PaidVendor.CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine3
			
		DerivedAddress4 is a DerivedField
			type is Alpha size 40
			restricted
			return PaidVendor.CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine4
			
		DerivedCity is a DerivedField
			type is Alpha size 58
			restricted
			return PaidVendor.CurrentAddressRel.PostalAddress.Municipality

		DerivedCountry is a DerivedField
			type is Alpha size 58
			restricted
			return PaidVendor.CurrentAddressRel.PostalAddress.Country

		DerivedStateProvince is a DerivedField
			type is Alpha size 3
			restricted
			return PaidVendor.CurrentAddressRel.PostalAddress.StateProvince
			
		DerivedPostalCode is a DerivedField
			type is Alpha size 12
			restricted
			return PaidVendor.CurrentAddressRel.PostalAddress.PostalCode
		
		DerivedAddressField1 is a DerivedField
			type is Alpha size 40
			restricted
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry="NZ" and DerivedCashLedgerSourceRecord="CBM")
				return DerivedAddress1
			else
				return DerivedBankEntityAddressLine1
		
		DerivedAddressField2 is a DerivedField
			type is Alpha size 40
			restricted
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry="NZ" and DerivedCashLedgerSourceRecord="CBM")
				return DerivedAddress2 
			else
				return DerivedBankEntityAddressLine2 
		
		DerivedAddressField3 is a DerivedField
			type is Alpha size 40
			restricted
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry="NZ" and DerivedCashLedgerSourceRecord="CBM")
				return DerivedAddress3 
			else
				return DerivedBankEntityAddressLine3
		
		DerivedAddressField4 is a DerivedField
			type is Alpha size 40
			restricted
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry="NZ" and DerivedCashLedgerSourceRecord="CBM")
				return DerivedAddress4 
			else
				return DerivedBankEntityAddressLine1
		
		DerivedAddressMunicipality is a DerivedField
			type is Alpha size 58
			restricted
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry="NZ" and DerivedCashLedgerSourceRecord="CBM")
				return DerivedCity 
			else
				return DerivedBankEntityMunicipality
		
		DerivedAddressStateProvince is a DerivedField
			type is Alpha size 3
			restricted
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry="NZ" and DerivedCashLedgerSourceRecord="CBM")
				return DerivedStateProvince 
			else
				return DerivedBankEntityStateProvince
		
		DerivedAddressPostalCode is a DerivedField
			type is Alpha size 12
			restricted
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry="NZ" and DerivedCashLedgerSourceRecord="CBM")
				return DerivedPostalCode 
			else
				return DerivedBankEntityPostalCode
				
		DerivedStatus is a DerivedField
			type is Alpha 10
			if(Status.PaymentCycleProcessed)
				return "Paid"
			else
			if(APPaymentCreditTransferRel exists and APPaymentCreditTransferRel.PaymentStatus[1:6] ="Voided")
				return "Cancelled"
			else
				return ""

		DerivedVendorGroup is a DerivedField
			type is AlphaUpper size 5
			restricted
			return PaidVendor.VendorGroup
			
		DerivedVendor is a DerivedField
			type is Numeric size 9
			restricted
			return PaidVendor.Vendor using "%d"

		DerivedRemitToLoc is a DerivedField
			type is Alpha size 100
			restricted
			if(RemitToCode entered)
				return DerivedFinanceEnterpriseGroup + DerivedDelimiter + PaidVendor + DerivedDelimiter + RemitToCode
			else
				return ""
		
		DerivedFunctionalCurrency is a DerivedField
			type is Alpha size 5
			restricted
			return Company.GeneralLedgerCompany.AccountingEntity.FunctionalCurrency
			
		DerivedTotBaseAmount is a DerivedField
			type is Decimal size 19.3
			restricted
			if(Company.GeneralLedgerCompany.AccountingEntity.AddressCode.PostalAddress.Country = "MX")
				DerivedTotBaseAmount = BankAmount * DerivedFunctionalCurrRate
			else
			if(Company.GeneralLedgerCompany.AccountingEntity.AddressCode.PostalAddress.Country = "AR")
				DerivedTotBaseAmount = BankAmount * DerivedFunctionalCurrRate
			else
				DerivedTotBaseAmount = BankAmount * APPaymentCreditTransferRel.PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate
			return 	DerivedTotBaseAmount
			
		DerivedTotReportAmount is a DerivedField
			type is Decimal size 19.3
			restricted
			if(Company.GeneralLedgerCompany.AccountingEntity.AddressCode.PostalAddress.Country = "MX")
				DerivedTotReportAmount = BankAmount * DerivedReportCurrRate
			else
			if(Company.GeneralLedgerCompany.AccountingEntity.AddressCode.PostalAddress.Country = "AR")
				DerivedTotReportAmount = BankAmount * DerivedReportCurrRate
			else
				DerivedTotReportAmount = BankAmount * APPaymentCreditTransferRel.PayablesInvoice.InvoiceAmount.ReportAmount1.EnteredCurrencyRate
			return 	DerivedTotReportAmount
		
		DerivedFunctionalCurrRate is a DerivedField
			type is Decimal size 31.15
			restricted	
			if(Company.GeneralLedgerCompany.AccountingEntity.AddressCode.PostalAddress.Country = "MX")
				LocalFromCurrency = BankCurrency
				LocalToCurrency	  = DerivedFunctionalCurrency
				LocalExchangeDate = APPaymentCreditTransferRel.CheckDate
				if(CurrExchangeRateRel exists)
					DerivedFunctionalCurrRate = CurrExchangeRateRel.Rate
				else
					DerivedFunctionalCurrRate = 1	
			else
			if(Company.GeneralLedgerCompany.AccountingEntity.AddressCode.PostalAddress.Country = "AR")
				LocalFromCurrency = BankCurrency
				LocalToCurrency	  = DerivedFunctionalCurrency
				LocalExchangeDate = APPaymentCreditTransferRel.PayablesInvoice.InvoiceDate
				if(CurrExchangeRateRel exists)
					DerivedFunctionalCurrRate = CurrExchangeRateRel.Rate
				else
					DerivedFunctionalCurrRate = 1		
			return DerivedFunctionalCurrRate
				
		DerivedReportCurrRate is a DerivedField
			type is Decimal size 31.15
			restricted	
			if(Company.GeneralLedgerCompany.AccountingEntity.AddressCode.PostalAddress.Country = "MX")
				LocalFromCurrency = BankCurrency
				LocalToCurrency	  = DerivedReportCurrency
				LocalExchangeDate = APPaymentCreditTransferRel.CheckDate
				if(LocalFromCurrency = LocalToCurrency)
					DerivedReportCurrRate = 1
				else
				if(CurrExchangeRateRel exists)
					DerivedReportCurrRate = CurrExchangeRateRel.Rate
			else
			if(Company.GeneralLedgerCompany.AccountingEntity.AddressCode.PostalAddress.Country = "AR")
				LocalFromCurrency = BankCurrency
				LocalToCurrency	  = DerivedReportCurrency
				LocalExchangeDate = APPaymentCreditTransferRel.PayablesInvoice.InvoiceDate
				if(LocalFromCurrency = LocalToCurrency)
					DerivedReportCurrRate = 1
				else
				if(CurrExchangeRateRel exists)
					DerivedReportCurrRate = CurrExchangeRateRel.Rate
			return DerivedReportCurrRate
		
		DerivedSupplierDetails is a DerivedField
			type is Alpha size 100
			restricted
			return DerivedFinanceEnterpriseGroup + DerivedDelimiter + DerivedVendorGroup + DerivedDelimiter + DerivedVendor

		DerivedSwiftID is a DerivedField
			type is Alpha 30
			if (RemitToCode entered)
				return PaidVendor.SwiftID
			else
				return ""
			
		DerivedTaxIDPT is a DerivedField
			type is Alpha 30
			if (RemitToCode entered)
				return PaidVendor.TaxID
			else
				return ""
		
		DerivedActionCode is a DerivedField
			type is Alpha 10
			if (action type.Create or ActionCode="C")
				return "Add"
			else 
			if (action type.Update or ActionCode="U" or ActionCode="D" or action type.Delete)
				return "Replace"
			else
				return ""
				
		DerivedGLCCurrency is a DerivedField
			type is AlphaUpper size 5
			restricted
			return Company.GeneralLedgerCompany.Currency
			
		DerivedReportCurrency is a DerivedField
			type is AlphaUpper size 5
			restricted	
			return Company.FinanceEnterpriseGroup.ReportCurrencyOne
			
		DerivedWithholding is a DerivedField
			type is Decimal size 19.2
			restricted
			if(APPaymentCreditTransferRel exists)
				return APPaymentCreditTransferRel.WithholdingAmount
			else
				return blank
				
		DerivedTotalReportAmount is a DerivedField
			type is Decimal size 19.2
			restricted	
			if(APPaymentCreditTransferRel exists)
				return APPaymentCreditTransferRel.DerivedAssignedReportAmount
			else 	
				return blank
			
		DerivedBODDocumentIDWithHolding is a DerivedField
			type is Alpha 75
			restricted
			return Company using "%d" + DerivedDelimiter + CashCode + DerivedDelimiter + CashLedgerPayablesPayment.BankTransactionCode + DerivedDelimiter + CashLedgerPayablesPayment.TransactionIDNumber + DerivedDelimiter + "A"
			
		DerivedWithHoldingDisplayID is a DerivedField
			type is Alpha 15
			restricted 
			return CashLedgerPayablesPayment.TransactionIDNumber using "%d" + "A"
			
		PayableTrackerLineXML is a DerivedField
			type is XMLDocument
			restricted
			if (APPaymentCreditTransferRel exist)
				initialize LocalBODLineCount
				for each APPaymentCreditTransferRel
					LocalBODLineCount +=1
					each.LocaLine = LocalBODLineCount
					each.LocalEffectiveDate = DerivedPaymentDate
					each.LocalFromCurrency  = BankCurrency

					each.LocalPIPStatus = DerivedStatus
					PayableTrackerLineXML += template.IONPayableTracker_PayablesTrackerLine_ST document for each
				return PayableTrackerLineXML
			else
				return ""
				
		PayableTrackerTaxLineXML is a DerivedField
			type is XMLDocument
			restricted
			if (APPaymentCreditTransferRel exist)
				initialize LocalBODLineCount
				for each APPaymentCreditTransferRel
					LocalBODLineCount +=1
					each.LocaLine = LocalBODLineCount
					each.LocalEffectiveDate = DerivedPaymentDate
					each.LocalFromCurrency  = BankCurrency

					each.LocalPIPStatus = DerivedStatus
					PayableTrackerTaxLineXML += template.IONPayableTracker_PayablesTrackerTaxLine_ST document for each
				return PayableTrackerTaxLineXML
			else
				return ""
				
		DerivedSupplierSourceId is a DerivedField
			type is like SupplierSourceId
			restricted
			if (RemitToCode entered
			and RemitToCode.IsPurchaseFromLocation
            and RemitToCode.PurchaseFromLocationRel.SupplierSourceIdRel exists)
   				return RemitToCode.PurchaseFromLocationRel.SupplierSourceIdRel.SupplierSourceId         					 
            else
				return blank 

		PayableTrackerTaxHeaderXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if(DerivedWithholding != 0)
				PayableTrackerTaxHeaderXMLBOD = template.IONPayableTracker_PayablesTrackerHeaderWT_ST document for this instance
				return PayableTrackerTaxHeaderXMLBOD
		
		PayableTrackerXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			PayableTrackerXMLBOD = template.IONPayableTracker_PayablesTrackerHeader_ST document for this instance
			return PayableTrackerXMLBOD
		

    	DerivedPaymentOutputfileHeader is a DerivedField
			type is Alpha 30
			restricted
			return PaymentOutputFileDetailRel.PaymentOutputFileHeader

		
		DerivedSchemeName is a DerivedField
			type is Alpha size 30
			restricted
			if(DerivedIntegrationApplication="Local.ly" and DerivedDebtorAddressCountry="PL")
				return "BankPartyIdentification"
			else
				return ""
		
		DerivedNameForCBM is a DerivedField
            type is Alpha size 120
            restricted
            if(DerivedIntegrationApplication="Local.ly" and DerivedCashLedgerSourceRecord="CBM")
                return PaidName
            else    
                return ""

		DerivedFromEmail is a DerivedField		
			type is like EmailAddress
			restricted
			return PfiConfigurationGroupFromEmailPropertyRel.Value
			return actor.agent(Employee).Employee.EmployeeWorkEmailAddress
			return PfiConfigurationFromEmailPropertyRel.Value

		DerivedEmailSubject is a MessageField
			"RemittanceAdviceAttached"
		
			

	Local Fields
		LocalVendor						is Numeric 9
		LocalLine						is Numeric 9				
		LocalRunProgram is a RunProgram
		ActionCode						is Alpha size 1
			States
				Create  value is "C"
				Update	value is "U"
				Delete	value is "D"
		ActionType						is AlphaUpper 1
			States
				CreateType 	value is "C"
				UpdateType	value is "U"
				DeleteType	value is "D"
		LocalPayablesService				is a PayablesService
		LocalPayablesInvoicePaymentCount    is Numeric size 5
		LocalCashManagementGroup		is like CashManagementGroup
		LocalCashCode					is like CashCode
		LocalCashLedgerSourceRecord		is a CashLedgerSourceRecord
		LocalBankTransactionCode		is a BankTransactionCode
		LocalTransactionIDNumber		is a TransactionIDNumber
		LocalApprovalLevel				is Numeric 8
		LocalApprover					is a FinanceResource

		LocalApproverTeam				is a FinanceTeamField		

		LocalApproverList				is Alpha 250
		LocalFirstApproverAssigned		is Boolean
		LocalRejectReason				is AlphaUpper 20
		LocalRejectComment				is Alpha size up to 500
		LocalTitle 				        is Alpha size 255
		LocalAEContactName		        is Alpha size 255
		LocalActionCode					is an ActionCode															 		                  			
		LocalBODCurrentTimeStamp		is a BODCurrentTimeStamp
		LocalCheckNumber				is like TransactionNumber
		WsTotalLines					is Numeric size 8
		WsNbrOfPmts						is Numeric size 8
		WsNbrOfComments					is Numeric size 8
		WsNbrOfEncls					is Numeric size 8
		StringUtil
		LocalBODLineCount				is Numeric size 9       
		LocalNativeLPLBODTrigger		is Boolean				
		LocalMainUserTemplate			is Alpha size 250		
		LocalTriggerFrom				is Alpha size 100			
		LocalRejectDate					is Date					
		LocalOpenToEscheat				is Boolean				
		LocalExchangeDate				is Alpha size 15
		LocalFromCurrency				is Alpha size 5
		LocalToCurrency					is Alpha size 5
		LocalElectronicFundsTransfer	is a CashLedgerElectronicFundsTransferTransaction view	
		LocalSupplier                   is like Supplier
		LocalSupplierContact            is like SupplierSourceId
		LocalTransID					is Alpha size 10
		NewBODTracker  					is a FSMInboundBODTracker view
		LocalFSMInboundBODTracker		is Numeric 15
		Error            				is Boolean
	    ErrorMessage     				is Alpha 300
	    LocalReference					is Alpha size 100
		LocalPayGroup					is AlphaUpper size 10	
	    LocalConfigurationParameter		is Alpha size up to 200
		LocalAEAlreadyExecuted 			is Boolean
		LocalAccountingEntity 			is Alpha 100
		LocalAttributeCtr  				is Numeric 2
		LocalRemitToCode				is like VendorLocation
		LocalBankRejectionBankTransactionCode	is a BankTransactionCode
	    
	Context Fields
		PayablesInvoicePayment
		FSMInboundBODTracker

    Conditions

		IsVoidStopPaymentRequested
			restricted
			when (Status.VoidStopPaymentRequested)

        IsSystemPayment
        	restricted
            classic name is APPROCLEV
            when (Status <  9
            and   PayablesCompanyProcessLevel.PayablesProcessLevel entered)

        CurrentActorApprovals
            restricted
            when (MyPFIApprovals = true)
        
		HasSupplier
			restricted
			when (PaidVendor.HasSupplier)

		HasMessageDialog
			restricted
			when (SupplierContactMessageRel exists)

		HasSupplierContactForPurchaseFrom
			restricted
			when (DerivedSupplierSourceId entered)

		HasMessageDialogOther
			restricted
			when (SupplierMessageDialogRel exists)

		CanCreateDialog
			restricted
			when (HasSupplier
			and   SupplierGroupRel.CanCreateDialogWithSupplier
			and  (Status = 2
 			or    Status = 15
 			or    Status = 16))

		SupplierContactHasPaymentsAccess
			restricted
			when (SupplierSourceIdValidRel.HasPaymentAccess)

        IsCashLedgerPayment
        	restricted
            classic name is CB-PMT-EXISTS
            when (CheckType.CbPayment)

		ForSupplier
			restricted
			when (VendorGroup       = actor.agent(SupplierSourceId).SupplierGroup)

        IsManualReserved
        	restricted
            classic name is MAN-RESERVED
            when (CheckType.ManuallyCreated
            and   Status.ReservedForManualPayment)

        IsManualPayment
        	restricted
            classic name is MANUAL
            when (CheckType.ManuallyCreated)

		IsUnreleasedManualPayment		
        	restricted
            classic name is MANUAL
            when (IsManualPayment
			and   ReleasedStatus.Unreleased)

		IsReleasedManualPayment		   
        	restricted
            classic name is MANUAL
            when (IsManualPayment
			and   ReleasedStatus.Released)

        IsNotManualPayment
        	restricted
            classic name is NO-MANUAL
            when (not CheckType.ManuallyCreated)

        IsNotManualPayment2
        	restricted
            classic name is NO-MANUAL-PMT
            when (not CheckType.ManuallyCreated)

        IsNoSerialNumber
        	restricted
            classic name is NO-SERIAL-NBR
            when (LastElectronicPaymentSerialNumber not entered)

        IsOpen
        	restricted
            classic name is OPEN-CHK
            when (Status.PaymentCycleClosed
            and   CbtransRel.Status.Open)

        IsProcessed
        	restricted
            classic name is PROCESSED-CHK
            when (Status.PaymentCycleProcessed)

        IsReconciled
        	restricted
            classic name is RECON-CHK
            when (Status.PaymentCycleClosed
            and   CbtransRel.Status.Reconciled)

        IsRejected
        	restricted
            classic name is REJECT
            when (Status.ElectronicPaymentCancelled
            or    Status.ElectronicPaymentReinstated)

		HasRejectAttachment		
			restricted
			when (RejectAttachment entered)

		CanUpdateAttachment		
			restricted
			when (RejectAttachment entered
			or    Status.ElectronicPaymentCancelled
			or    Status.ElectronicPaymentReinstated)

        IsScheduled
        	restricted
            classic name is SCHEDULED-CHK
            when (Status.ScheduledForPayment)

        IsElectronicPaymentIssued
        	restricted
            classic name is TAPE-ISSUED
            when (CashLedgerTransactionTapeRel exists
            and   first CashLedgerTransactionTapeRel.Status.Open)

        IsElectronicPaymentReconciled
        	restricted
            classic name is TAPE-RECONCILE
            when (CashLedgerTransactionTapeRel exists
            and   first CashLedgerTransactionTapeRel.Status.Reconciled)

        IsSummarizedPayment
        	restricted
            classic name is TAPE-SER-NBR
            when (LastElectronicPaymentSerialNumber entered
            and   first CashLedgerTransactionTapeRel.SummaryOption.Summarized)

		SummarizedPaymentIsVoided
			restricted
			when (IsSummarizedPayment
			and   first CashLedgerTransactionTapeRel.Status.Voided)
			
		SummarizedPaymentIsStopPayment
			restricted
			when (IsSummarizedPayment
			and   any CashLedgerTransactionTapeRel.Status.StopPayment)			
		
        IsElectronicPaymentVoid
        	restricted
            classic name is TAPE-VOID
            when (CashLedgerTransactionTapeRel exists
            and   (first CashLedgerTransactionTapeRel.Status.Voided
            or     first CashLedgerTransactionTapeRel.Status.StopPayment))

        IsNotClosed
        	restricted
            classic name is UNCLOSE-CHECK
            when (Status <  2)

        IsVoided
        	restricted
            classic name is VOID-CHK
            when (Status.PaymentCycleClosed
            and   (CbtransRel.Status.Voided
            or    CbtransRel.Status.StopPayment))

		IsUpdateable
			restricted
			when (CheckType.ManuallyCreated
			and  (ReleasedStatus.Unreleased
        	or 	 (ReleasedStatus.Released
        	and   Status.ReservedForManualPayment)))
		



		
		DisplayReleasedStatus
			restricted
			when (IsManualPayment
			and   !first APPaymentCreditTransferRel.Status.Unreleased
			and   !first APPaymentCreditTransferRel.Status.UnreleasedManualPayment)
		
		DisplayPaymentStatus
			restricted
			when (first APPaymentCreditTransferRel.Status.Unreleased
			or    first APPaymentCreditTransferRel.Status.UnreleasedManualPayment
			or    first APPaymentCreditTransferRel.Status.ManuallyPaid)
		
		HasPayablesSelected
			restricted
			when (PayablesSelectedForPaymentRel exists)

		HasRemitToCode
			restricted
			when (RemitToCode entered)
			
		HasCashLedgerStatement
			restricted
			when (CashLedgerStatement entered)
		
		IsUnapplyable
			restricted
			when (CheckType.ManuallyCreated
			and   HasApPayments
			and	  ReleasedStatus.Unreleased)

		IsReservable
			restricted
			when (CashLedgerPayablesPayment.BankTransactionCode.ManualPaymentNumberReservation
			and   !Status.ReservedForManualPayment
			and    ReleasedStatus.Unreleased)
			
		IsUnreservable
			restricted
			when (CashLedgerPayablesPayment.BankTransactionCode.ManualPaymentNumberReservation
			and   Status.ReservedForManualPayment
			and   ReleasedStatus.Released)	

		PaymentHelperListIsValid
			restricted
			when (CheckType.ManuallyCreated		
			and  (ReleasedStatus.Unreleased
        	or 	  Status.ReservedForManualPayment))



		HasTransactionIdentifierSequenceNumber
			restricted
			when (TransactionIdentifierSequenceNumber entered)

		ForAVendor  
			restricted
			when (VendorGroup	= actor.agent(SupplierSourceId).SupplierGroup
 			and   PaidVendor 	= actor.agent(SupplierSourceId).Supplier.Vendor
 			and  (Status = 2
 			or    Status = 15
 			or    Status = 16))		
		
		ForASupplierPortalVendor
			restricted
			when (VendorGroup	= actor.agent(SupplierSourceId).SupplierGroup
 			and   PaidVendor 	= actor.agent(SupplierSourceId).Supplier.Vendor
 			and  (Status = 2
 			or    Status = 15
 			or    Status = 16)
			and  ((actor.agent(SupplierSourceId).Supplier.ContactLocationDisplay.AllDocuments)
			or  (!actor.agent(SupplierSourceId).Supplier.ContactLocationDisplay.AllDocuments
			and   actor.agent(SupplierSourceId).Supplier.PrimaryContactViewAllDocuments = true
			and   actor.agent(SupplierSourceId).PrimaryContact)
			or  ((actor.agent(SupplierSourceId).Supplier.ContactLocationDisplay.OnlyLocationDocuments
			or    actor.agent(SupplierSourceId).Supplier.ContactLocationDisplay.LocationAndNoLocationDocuments)
			and  (actor.agent(SupplierSourceId).Supplier.PrimaryContactViewAllDocuments = false
			or   !actor.agent(SupplierSourceId).PrimaryContact)
			and   RemitToCode entered
			and   actor.agent(SupplierSourceId).VendorLocation = RemitToCode)
			or   (actor.agent(SupplierSourceId).Supplier.ContactLocationDisplay.LocationAndNoLocationDocuments
			and   RemitToCode !entered)))      


		CanVoidOrStopPayBankIssuedPaymentRecord
			restricted
			when ((Status.PaymentCycleClosed
			or     Status.StaleDated)				
			and   CashPaymentFormatRel.BankIssuedPaymentNumbers
			and   IsSummarizedPayment)


		CanVoidOrStopPayCashLedgerTransaction
			restricted
			when (Status.PaymentCycleClosed
			and   !IsSummarizedPayment
			and   CbtransRel.CanVoidOrStopPayTransaction
			and  (CbtransRel.Status.Open
			or    CbtransRel.Status.StaleDated))

		CanRequestVoidOrStopPaymentCashLedgerTransaction
			restricted
			when (Status.PaymentCycleClosed
			and   !IsSummarizedPayment
			and   CbtransRel.CanRequestVoidOrStopPayment
			and  (CbtransRel.Status.Open
			or    CbtransRel.Status.StaleDated))
		
		VoidStopPaymentApprovalCodeRequired
			restricted
			when (CashManagementGroup.VoidStopPaymentApprovalRequired
			and   !CashManagementGroup.ApprovalCodesNotUsedForVoidStopPayments)

		CanReopenCashLedgerTransaction
			restricted
			when (Status.PaymentCycleClosed
			and   !IsSummarizedPayment
			and   CbtransRel.CanReopenTransaction
			and   !CbtransRel.Status.StaleDated)
		
		CanReopenStaleDatedCashLedgerTransaction
			restricted
			when (Status.PaymentCycleClosed
			and   !IsSummarizedPayment
			and   CbtransRel.CanReopenTransaction
			and   CbtransRel.Status.StaleDated)

		CanReopenCashLedgerPayment
			restricted
			when (Status.ElectronicPaymentReinstated
			and   IsCashLedgerPayment)

		CanRejectPayment
			restricted
			when (((Status.PaymentCycleClosed
			and   !CashPaymentFormatRel.BankIssuedPaymentNumbers)	
			or    (Status.StaleDated								
			and    CashPaymentFormatRel.BankIssuedPaymentNumbers))	
			and  ((IsSummarizedPayment
			and   (IsElectronicPaymentIssued
			or     IsElectronicPaymentReconciled))
			or    (CashLedgerPayablesPayment.BankTransactionCode.AllowDetailPaymentReject		
			and   (CbtransRel.Status.Open
			or     CbtransRel.Status.Reconciled))))
 
			
		CanEFTRejectReverseACH	
			restricted
			when ((Status.PaymentCycleClosed
			or     Status.StaleDated)							
			and   !CashPaymentFormatRel.BankIssuedPaymentNumbers
			and   IsSummarizedPayment
			and  (IsElectronicPaymentIssued
			or    IsElectronicPaymentReconciled))	

 		RejectVoidStopPaymentReasonCodeRequired
 			restricted
			when (CashManagementGroup.RejectVoidStopPaymentReasonCodeRequired)

		HasApprovalComments
			restricted
			when (CashLedgerPayablesPaymentReasonCodeUsage set exists)

		StaleDateGLAccountsNotDefined
			restricted
			when (StaleDatingGLAccountByProcessLevelRel	!exists
			and   StaleDatingGLAccountRel				!exists)

		HasDistributions
			restricted
			when (CashLedgerGLDistributionsRel exists)

		IsBankIssuedPaymentNumber
			restricted
			when (CashPaymentFormatRel.BankIssuedPaymentNumbers)

		CbtransOpenOrReconciled
			restricted
			when ((CashLedgerTransactionByIdentifierRel exists
			and   (first CashLedgerTransactionByIdentifierRel.Status.Open
			or     first CashLedgerTransactionByIdentifierRel.Status.Reconciled
			or     first CashLedgerTransactionByIdentifierRel.Status.StaleDated))	
			or   (CashLedgerTransactionTapeRel exists
			and   (first CashLedgerTransactionTapeRel.Status.Open
			or     first CashLedgerTransactionTapeRel.Status.Reconciled)))

		ConfirmationAllowed
			restricted
			when (!IsBankIssuedPaymentNumber
			and   CbtransOpenOrReconciled
			and   Status.PaymentCycleClosed)

		BankUpdateAllowed
			restricted
			when (IsBankIssuedPaymentNumber
			and   CbtransOpenOrReconciled
			and  (Status.PaymentCycleClosed
			or    Status.StaleDated))		

		CanUpdateRecord
			restricted
			when (CbtransOpenOrReconciled
			and   Status.PaymentCycleClosed)

		HasApAppHist
			restricted
			when (ApapphistRel exists)
			
		HasApPayments
			restricted
			when (CashLedgerSourceRecord.CashLedgerPayablesPayment
			and   AppaymentRel exists)

		CanBeDeleted
			restricted
			when (CheckType.ManuallyCreated
			and   ReleasedStatus.Unreleased
			and   !CashLedgerPayablesPayment.BankTransactionCode.ManualPaymentNumberReservation)
			
		ManualPaymentCanBeReset
			restricted
			when (CheckType.ManuallyCreated
			and   ReleasedStatus.Unreleased
			and   CashLedgerPayablesPayment.BankTransactionCode.ManualPaymentNumberReservation)
		
		ApprovalCodeRequired
			restricted
			when (CashManagementGroup.VoidStopPaymentApprovalRequired
			and   !CashManagementGroup.ApprovalCodesNotUsedForPayments)

		HasWorkunit
			restricted
			when (PfiWorkunitRel exists)

		CashPaymentWithholdingExists
			restricted
			when (CashPaymentWithholdingRel exists)

		RecordExists		
			restricted
			when (CashLedgerPayablesPayment exists)

 		SecurityGroupAllowsAccess
			when ((actor.context.CashCodeSecurityGroup = "")
			or   (actor.context.CashCodeSecurityGroup != ""
			and   CashCodeSecurityGroupDetailRel exists))

		ManualPmtRecordExists
			restricted
			when (RecordExists
			and  IsManualPayment)
			
		SupplierShowInvoices
			restricted
			when (AppaymentRel exists
			and	  !actor.agent(SupplierSourceId).SupplierGroup.SPDisablePortalInvoices)
			
    Relations

    	PfiConfIntegrationApplicationRel
			one-to-one relation to PfiConfigurationProperty
			Field Mapping uses symbolic key
				related.PfiConfiguration			= "FSM_ION_Connector"
				related.PfiConfigurationProperty	= "IntegrationApplication"


		
		PaymentOutputFileDetailRel
			one-to-many relation to PaymentOutputFileDetail
			Field Mapping uses symbolic key
				related.CashManagementGroup = CashManagementGroup
				related.CashManagementAccount = CashManagementAccount
			Instance Selection
				where (related.CashLedgerTransactionIdentifier = CashLedgerTransactionIdentifier)

	
		CashCodeSecurityGroupDetailRel
			one-to-one relation to CashCodeGroupDetail
			Field Mapping uses symbolic key
				related.CashManagementGroup         = actor.context.FinanceEnterpriseGroup
				related.CashCodeGroup				= actor.context.CashCodeSecurityGroup.FinanceDimensionStructure
				related.CashCode                    = CashCode

        ApapphistRel
            one-to-many relation to PayablesInvoicePaymentHistory
            Field Mapping uses Set6
                related.PayGroup            = PayGroup
                related.BankTransactionCode = CashLedgerPayablesPayment.BankTransactionCode
                related.TransactionIDNumber = CashLedgerPayablesPayment.TransactionIDNumber

        AppaymentRel
            one-to-many relation to PayablesInvoicePayment
            Field Mapping uses Set6
                related.PayGroup            = PayGroup
                related.BankTransactionCode = CashLedgerPayablesPayment.BankTransactionCode
                related.TransactionIDNumber = CashLedgerPayablesPayment.TransactionIDNumber

		AppaymentLocalRel						
		    one-to-many relation to PayablesInvoicePayment
            Field Mapping uses Set6
                related.PayGroup            = LocalPayGroup
                related.BankTransactionCode = CashLedgerPayablesPayment.BankTransactionCode
                related.TransactionIDNumber = CashLedgerPayablesPayment.TransactionIDNumber

		APPaymentCreditTransferRel
            one-to-many relation to PayablesInvoicePayment
            Field Mapping uses Set6
                related.PayGroup            = PayGroup
                related.BankTransactionCode = CashLedgerPayablesPayment.BankTransactionCode
                related.TransactionIDNumber = CashLedgerPayablesPayment.TransactionIDNumber
				related.Vendor				= PaidVendor


        CashPaymentFormatRel
            one-to-many relation to CashPaymentFormat
            Field Mapping uses symbolic key
            	related.CashManagementGroup 					= CashManagementGroup	
                related.CashCode								= CashCode
                related.CashPaymentFormat.BankTransactionCode	= CashLedgerPayablesPayment.BankTransactionCode
                related.CashPaymentFormat.PayablesProcessGroup	= PayablesProcessGroup
        
        CbdistribRel
            one-to-many relation to CashLedgerGLDistribution
            Field Mapping uses symbolic key
            	related.CashManagementGroup 	= CashManagementGroup	
                related.CashCode				= CashCode
                related.CashLedgerSourceRecord	= CashLedgerSourceRecord
            Instance Selection
                where (related.CashLedgerGLDistribution.BankTransactionCode = CashLedgerPayablesPayment.BankTransactionCode
                and   related.CashLedgerGLDistribution.TransactionIDNumber = CashLedgerPayablesPayment.TransactionIDNumber)

        CbpaymentRel
            one-to-many relation to CashLedgerPayment
            Field Mapping uses Set5
            	related.CashManagementGroup   = CashManagementGroup
                related.PayablesData.PayGroup = PayGroup  
            Instance Selection
                where (related.CashLedgerPayment.BankTransactionCode = CashLedgerPayablesPayment.BankTransactionCode
                and   related.CashLedgerPayment.TransactionIDNumber = CashLedgerPayablesPayment.TransactionIDNumber)

		CbtransRel
			one-to-one relation to CashLedgerTransaction

			Field Mapping uses symbolic key
				related.CashManagementGroup		= CashManagementGroup
				related.BankTransactionCode		= CashLedgerPayablesPayment.BankTransactionCode
				related.CashLedgerSourceRecord	= CashLedgerSourceRecord
				related.CashLedgerTransaction	= CashLedgerPayablesPayment.TransactionIDNumber

		CashLedgerTransactionTapeRel
			one-to-many relation to CashLedgerTransaction
			valid when (IsSummarizedPayment)
			Field Mapping uses Set4
				related.CashManagementGroup					= CashManagementGroup
				related.BankTransactionCode					= CashLedgerPayablesPayment.BankTransactionCode
				related.CashCode							= CashCode
				related.LastElectronicPaymentSerialNumber	= LastElectronicPaymentSerialNumber
			Instance Selection
				where (related.PayGroup						= PayGroup)		

		RejectedCashLedgerTransactionRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set6
				related.CashManagementGroup 				= CashManagementGroup
				related.CashCode 							= CashCode
				related.BankTransactionCode 				= CashPaymentFormatRel.BankRejectionBankTransactionCode
				related.TransactionNumber 					= TransactionNumber
			Instance Selection
				where (related.IssuedBankAmount 			= PaymentAmountBankAccountCurrency.EnteredCurrencyAmount
				and    related.IssueDate 					= RejectDate)

		BankInstCodeRel
			one-to-one relation to BankTransactionCode
			Field Mapping uses symbolic key
				related.CashManagementGroup = CashManagementGroup	
				related.BankTransactionCode = CashLedgerPayablesPayment.BankTransactionCode
		








        
        PayablesAvailableForPaymentRel						
            one-to-many relation to PayablesInvoicePayment
            Field Mapping uses Set12
                related.PayGroup			= PayGroup
			Instance Selection
				where  (related.TransactionIDNumber = blank
				and     related.InvoiceCurrency		= PayCurrency
                and     related.PayVendor			= PaidVendor)	

        PayablesSelectedForPaymentRel
            one-to-many relation to PayablesInvoicePayment
            Field Mapping uses Set8
                related.PayGroup			= PayGroup
			Instance Selection
				where  (related.TransactionIDNumber = blank
				and 	related.PayVendor			= PaidVendor			
				and 	related.Status.SelectedForPayment)

		SupplierGroupRel
			one-to-one relation to SupplierGroup
			Field Mapping uses symbolic key
				related.SupplierGroup   = VendorGroup

		SupplierContactMessageRel
			one-to-many relation to SupplierContactMessage
			Field Mapping uses symbolic key
				related.SupplierGroup				= actor.agent(SupplierSourceId).SupplierGroup
 				related.Supplier  			 		= actor.agent(SupplierSourceId).Supplier
				related.SupplierSourceId            = actor.agent(SupplierSourceId).SupplierSourceId
			Instance Selection
				where (related.OriginatingCompany			= Company
				and    related.OriginatingInvoice           = AppaymentRel.PayablesInvoice
				and    related.OriginatingPayment           = true) 

		PurchaseFromSupplierSourceIdRel   
			one-to-one relation to SupplierSourceId
			Field Mapping uses symbolic key
				related.SupplierGroup    = SupplierGroupRel.SupplierGroup
				related.Supplier         = PaidVendor.SupplierRel.Supplier
				related.SupplierSourceId = DerivedSupplierSourceId  			

		SupplierSourceIdValidRel
			one-to-one relation to SupplierSourceId
			Field Mapping uses symbolic key
				related.SupplierGroup    = SupplierGroupRel.SupplierGroup
				related.Supplier         = LocalSupplier
				related.SupplierSourceId = LocalSupplierContact 
								
		SupplierMessageDialogRel
			one-to-many relation to SupplierMessageDialog
			Field Mapping uses symbolic key
				related.SupplierGroup				= VendorGroup
 				related.Supplier					= PaidVendor.SupplierRel.Supplier
				related.SupplierSourceId            = DerivedSupplierSourceId
			Instance Selection
				where (related.SupplierContactMessage.OriginatingCompany	= Company
				and    related.SupplierContactMessage.OriginatingInvoice    = AppaymentRel.PayablesInvoice)









		CashLedgerManualPayablePaymentsRel
			one-to-many relation to CashLedgerPayablesPayment
			Field Mapping uses Set2
				related.CashManagementGroup								= CashManagementGroup
				related.PayGroup 										= PayGroup
				related.CashCode										= CashCode
				related.CashLedgerPayablesPayment.BankTransactionCode	= CashLedgerPayablesPayment.BankTransactionCode
			Instance Selection
				where (related.PaidVendor = PaidVendor)
				

		CashLedgerPayablesPaymentRel
			one-to-many relation to CashLedgerPayablesPayment
			Field Mapping uses symbolic key
				related.CashManagementGroup								= CashManagementGroup
				related.CashCode										= CashCode

			Instance Selection
				where (related.CashRequirementsResult = CashRequirementsResult and 
				related.PayGroup = PayGroup)
		
			
		PayablesInvoicePaymentRelLocally
            one-to-many relation to PayablesInvoicePayment
            Field Mapping uses Set6
                related.PayGroup            = PayGroup
                related.BankTransactionCode = CashLedgerPayablesPayment.BankTransactionCode
                related.TransactionIDNumber = CashLedgerPayablesPayment.TransactionIDNumber
			Instance Selection
				where (related.CashRequirementsResult = CashRequirementsResult
				and	related.Vendor = PaidVendor)
		

				
		CashLedgerPayablePaymentsRel
			one-to-many relation to CashLedgerPayablesPayment
			Field Mapping uses Set2
				related.CashManagementGroup								= CashManagementGroup
				related.PayGroup 										= PayGroup
				related.CashCode										= CashCode
				related.CashLedgerPayablesPayment.BankTransactionCode	= CashLedgerPayablesPayment.BankTransactionCode
			Instance Selection
				where (related.TransactionNumber = TransactionNumber)

		CashLedgerPayablesPaymentByTranNbrRel 
			one-to-many relation to CashLedgerPayablesPayment
			Field Mapping uses Set4
				related.CashManagementGroup								= CashManagementGroup
				related.CashCode										= CashCodesForCashManagementAccountRel.CashCode
                related.CashLedgerPayablesPayment.BankTransactionCode	= CashLedgerPayablesPayment.BankTransactionCode
				related.TransactionNumber								= LocalCheckNumber

		DuplicateTransactionNumberRel
			one-to-many relation to CashLedgerPayablesPayment
			Field Mapping uses Set4
				related.CashManagementGroup								= CashManagementGroup
				related.CashCode										= CashCodesForCashManagementAccountRel.CashCode
                related.CashLedgerPayablesPayment.BankTransactionCode	= CashLedgerPayablesPayment.BankTransactionCode
				related.TransactionNumber								= TransactionNumber
			Instance Selection
				where (related.UniqueID	!= UniqueID)

		CashCodesForCashManagementAccountRel
            one-to-many relation to CashCode
			Field Mapping uses Set3
				related.CashManagementGroup			= CashManagementGroup
                related.FinancialInstitution		= CashManagementAccount.FinancialInstitution
                related.FinancialInstitutionBranch	= CashManagementAccount.FinancialInstitutionBranch
				related.BankAccountNumber			= CashManagementAccount

		StaleDatingGLAccountRel
			one-to-many relation to StaleDatingGLAccount
			Field Mapping uses symbolic key
				related.Company						= Company					
				related.CashCode					= CashCode

			Instance Selection
				where (related.PayablesCompanyProcessLevel !entered)

		StaleDatingGLAccountByProcessLevelRel
			one-to-one relation to StaleDatingGLAccount
			Field Mapping uses symbolic key
				related.Company						= Company					
				related.CashCode					= CashCode
				related.PayablesCompanyProcessLevel	= PayablesCompanyProcessLevel
		
		TaxEntityRel
    		one-to-one relation to TaxEntity
    		Field Mapping uses symbolic key

				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
                related.TaxEntity 				= Company.AccountingEntity
    			
    	PayablesCompanyRel
        	one-to-one relation to PayablesCompany
        	Field Mapping uses symbolic key
        		related.Company = Company

        PayablesCompaniesRel
            one-to-many relation to PayablesCompany
            Field Mapping uses Set2
                related.VendorGroup = VendorGroup

		CurrentApprovalCodeLevelRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.ApprovalCode			= ApprovalCode
				related.ApprovalLevel			= ApprovalLevel

		ApprovalCodeResourceRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.ApprovalCode			= ApprovalCode

		LocalApprovalCodeLevelRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.ApprovalCode			= ApprovalCode
				related.ApprovalLevel			= LocalApprovalLevel
		
		FinanceTeamMembersFromCurrentApprovalLevelRel
			one-to-many relation to FinanceTeamMember
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.FinanceTeam				= first CurrentApprovalCodeLevelRel.ApprovalTeam

		ReissuedCashLedgerPaymentRel
			one-to-one relation to CashLedgerPayment
			Field Mapping uses ByReissueOriginalIdentifier
				related.CashManagementGroup			= CashManagementGroup
				related.ReissueOriginalIdentifier	= CashLedgerTransactionIdentifier

        CashLedgerPaymentRel
            one-to-one relation to CashLedgerPayment
            Field Mapping uses symbolic key
				related.CashManagementGroup						= CashManagementGroup
				related.CashCode								= CashCode
            	related.CashLedgerPayment.BankTransactionCode	= CashLedgerPayablesPayment.BankTransactionCode
                related.CashLedgerPayment.TransactionIDNumber	= CashLedgerPayablesPayment.TransactionIDNumber
        
        CashLedgerPaymentRelLocally
        	one-to-many relation to CashLedgerPayment
            Field Mapping uses symbolic key
				related.CashManagementGroup						= CashManagementGroup
				related.CashCode								= CashCode
            	related.CashLedgerPayment.BankTransactionCode	= CashLedgerPayablesPayment.BankTransactionCode
            	related.CashLedgerPayment.TransactionIDNumber	= CashLedgerPayablesPayment.TransactionIDNumber

        CashLedgerGLDistributionsRel
            classic name is CBDISTRIB
            one-to-many relation to CashLedgerGLDistribution
            Field Mapping uses symbolic key
            	related.CashManagementGroup 	= CashCode.CashManagementGroup	
                related.CashCode 				= CashCode
                related.CashLedgerSourceRecord	= CashLedgerSourceRecord
            Instance Selection
                where (related.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerPayablesPayment.BankTransactionCode
                and   related.CashLedgerGLDistribution.TransactionIDNumber	= CashLedgerPayablesPayment.TransactionIDNumber)

		PfiWorkunitRel
			one-to-many relation to PfiWorkunit
			Field Mapping uses ByAppsKeyAppsValueWorkunit
				related.AppsKey		= "CASHLEDGERPAYABLESPAYMENT"			
				related.AppsValue	= DerivedAppsValue

		CompanySystemClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode		= "AP"
				related.Company						= PayablesCompanyProcessLevel.PayablesCompany	

		CBCompanySystemClosingControlRel	
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode		= "CB"
				related.Company						= Company
				
		CashLedgerTransactionByIdentifierRel 
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses ByCashLedgerTransactionIdentifier
				related.CashManagementGroup				= CashManagementGroup
				related.CashLedgerTransactionIdentifier	= CashLedgerTransactionIdentifier

		VendorLocationHasBankCodesRel		
			one-to-many relation to VendorLocation
			Field Mapping uses symbolic key
				related.VendorGroup				= VendorGroup
				related.Vendor					= PaidVendor
				related.VendorLocation			= RemitToCode
			Instance Selection
				where (related.AnyVendorBankCodeEntered)

		VendorBankRel		
			one-to-many relation to VendorBank
			Field Mapping uses symbolic key
				related.VendorGroup				= VendorGroup
				related.Vendor					= PaidVendor
			Instance Selection
				where (related.VendorLocation	= blank)

		VendorCommentRel
			one-to-many relation to VendorComment
			Field Mapping uses symbolic key
                related.VendorGroup = VendorGroup
                related.Vendor		= PaidVendor
            Instance Selection
                where (CashRequirementsResult.PayThroughDate within related.DateRange) 

		CashLedgerTransactionPayGroupRel
		    one-to-many relation to CashLedgerTransaction
		    Field Mapping uses Set4
		        related.CashManagementGroup               = CashManagementGroup
		        related.BankTransactionCode               = CashLedgerPayablesPayment.BankTransactionCode
		        related.CashCode                          = CashCode
		        related.LastElectronicPaymentSerialNumber = LastElectronicPaymentSerialNumber
		    Instance Selection
		        where (PayGroup = PayGroup)

		CashPaymentWithholdingRel
			one-to-many relation to CashPaymentWithholding
			Field Mapping uses symbolic key
				related.VendorGroup					= VendorGroup
				related.CashCode                    = CashCode
				related.BankTransactionCode			= CashLedgerPayablesPayment.BankTransactionCode
				related.TransactionIDNumber			= CashLedgerPayablesPayment.TransactionIDNumber
			Instance Selection
				where (related.HasTotalWithholdingAmount)

		AllCashPaymentWithholdingRel				
			one-to-many relation to CashPaymentWithholding
			Field Mapping uses symbolic key
				related.VendorGroup					= VendorGroup
				related.CashCode                    = CashCode
				related.BankTransactionCode			= CashLedgerPayablesPayment.BankTransactionCode
				related.TransactionIDNumber			= CashLedgerPayablesPayment.TransactionIDNumber


		FSMBODConfigurationParameterRel
    		one-to-one relation to FSMBODConfigurationParameter
    		Field Mapping uses symbolic key
    			related.FSMBODConfigurationParameter	= LocalConfigurationParameter
		
		FSMBODConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "RemittanceAdvice"
            	related.FSMBODConfiguration.Direction 	= 1
				
		FSMBODAECrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "CSFAE"
            	related.FSMBODCrossReference.DestinationField 	= "DESTAE"
            Instance Selection
				where (related.SourceValue	= DerivedCrossGLC )
				
		FSMInboundBODTrackerRel
            one-to-one relation to FSMInboundBODTracker
            Field Mapping uses symbolic key
                related.FSMInboundBODTracker	= LocalFSMInboundBODTracker

		FSMBODConfigurationPTRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "PayableTransaction"
            	related.FSMBODConfiguration.Direction 	= 1	
					

		FSMBODConfigurationCTRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "CreditTransfer"
            	related.FSMBODConfiguration.Direction 	= 1


		FSMBODConfigurationRelForPayableTracker
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "PayableTracker"
            	related.FSMBODConfiguration.Direction 	= 1	

		CurrExchangeRateRel
			one-to-one relation to CurrExchangeRate
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup									= Company.FinanceEnterpriseGroup
				related.CurrencyTable											= Company.FinanceEnterpriseGroup.CurrencyTable
				related.CurrExchangeRate.CurrencyRelationship.FromCurrency		= LocalFromCurrency
				related.CurrExchangeRate.CurrencyRelationship.ToCurrency		= LocalToCurrency
				related.ExchangeDate											= LocalExchangeDate

		CompanyCashCodeRel												
   			one-to-one relation to CompanyCashCode
    		Field Mapping uses symbolic key
				related.Company = Company
				related.CashCode = CashCode
		PfiConfigurationFromEmailPropertyRel							
			one-to-one relation to PfiConfigurationProperty
			Field Mapping uses symbolic key
				related.PfiConfiguration			= "main"
				related.PfiConfigurationProperty	= "FinanceAdminFromEmailAddress"

		PfiConfigurationGroupFromEmailPropertyRel						
			one-to-one relation to PfiConfigurationProperty
			Field Mapping uses symbolic key
				related.PfiConfiguration			= "main"
				related.PfiConfigurationProperty	= "FinanceGroupFromEmailAddress"
			


		InvoiceForeignEconomicCodeRel
            one-to-many relation to PayablesInvoicePayment
            Field Mapping uses Set8
                related.PayGroup				= PayGroup
                related.CashCode				= CashCode
				related.TransactionNumber		= TransactionNumber
                related.BankTransactionCode		= CashLedgerPayablesPayment.BankTransactionCode
				related.Company					= Company
				related.Vendor					= PaidVendor

        PayablesInvPaymentRel
            one-to-many relation to PayablesInvoicePayment
            Field Mapping uses Set8
                related.PayGroup			= PayGroup
				related.CashCode 			= CashCode
				related.TransactionNumber 	= TransactionNumber
				related.BankTransactionCode	= CashLedgerPayablesPayment.BankTransactionCode
				related.Company				= Company
				related.Vendor				= PaidVendor

		VendorAddressRel
			one-to-many relation to VendorAddress
			Field Mapping uses symbolic key
				related.VendorGroup					 = VendorGroup
				related.Vendor						 = PaidVendor
			Instance Selection
				where (related.PostalAddress.Country entered
				and    related.PostalAddress.Country != "DE")

		ForeignTradeAndPaymentsRel
			one-to-many relation to ForeignTradeAndPayments
			Field Mapping uses symbolic key
			Instance Selection
				where (related.ForeignTradeAndPayments.CashCode					= CashCode
				and related.ForeignTradeAndPayments.CashLedgerSourceRecord		= CashLedgerSourceRecord
				and related.ForeignTradeAndPayments.BankTransactionCode			= CashLedgerPayablesPayment.BankTransactionCode
				and related.ForeignTradeAndPayments.TransactionIDNumber			= CashLedgerPayablesPayment.TransactionIDNumber)

		VendorBalanceRel
			one-to-one relation to VendorBalance
			Field Mapping uses symbolic key
				related.VendorGroup    = VendorGroup
				related.Vendor         = LocalVendor
				related.VendorLocation = LocalRemitToCode
				related.Company        = Company

    Sets

        Set10
            indexed
            Sort Order
				CashManagementGroup
                PayGroup
                Status
                CashCode
                CashLedgerPayablesPayment.BankTransactionCode
                PayablesProcessGroup
                TransactionNumber
                CashLedgerPayablesPayment.TransactionIDNumber
                CashLedgerSourceRecord

        Set2
            indexed
            Sort Order
            	CashManagementGroup
                PayGroup
                CashCode
                CashLedgerPayablesPayment.BankTransactionCode
                TransactionNumber
                CashLedgerPayablesPayment.TransactionIDNumber
                CashLedgerSourceRecord

        Set3
            indexed
            Sort Order
            	CashManagementGroup
                PayGroup
                Status
                CashCode
                CashLedgerPayablesPayment.BankTransactionCode
                TransactionNumber
                CashLedgerPayablesPayment.TransactionIDNumber
                CashLedgerSourceRecord

        Set4
            indexed
            Sort Order
            	CashManagementGroup
                CashCode
                CashLedgerPayablesPayment.BankTransactionCode
                TransactionNumber
                CashLedgerPayablesPayment.TransactionIDNumber
                CashLedgerSourceRecord

        Set5
            indexed
            Sort Order
            	CashManagementGroup
                CashCode
                CashLedgerPayablesPayment.BankTransactionCode
                LastElectronicPaymentSerialNumber
                PayCurrency
				TransactionNumber
                CashLedgerPayablesPayment.TransactionIDNumber
                CashLedgerSourceRecord

        Set8
            indexed
            Sort Order
            	CashManagementGroup
                VendorGroup
                PaidVendor
                Company
                PaymentDate descending
                CashLedgerPayablesPayment.BankTransactionCode
                CashCode
                CashLedgerPayablesPayment.TransactionIDNumber
                CashLedgerSourceRecord

        Set9
            indexed
            Sort Order
            	CashManagementGroup
                PayGroup
                CashCode
                PaymentDate
                CashLedgerPayablesPayment.BankTransactionCode
                TransactionNumber
                CashLedgerPayablesPayment.TransactionIDNumber
                CashLedgerSourceRecord

		ByCashLedgerTransactionIdentifier
			indexed


			Sort Order
				CashManagementGroup
				CashLedgerTransactionIdentifier
                TransactionNumber
                CashCode
                CashLedgerSourceRecord
                CashLedgerPayablesPayment

		ByTransactionIdentifierSequenceNumber
			indexed
			Instance Selection
				where (HasTransactionIdentifierSequenceNumber)
			Sort Order
				CashManagementGroup
				TransactionIdentifierSequenceNumber		
    			
        ByCashRequirementsResult
            indexed
            Sort Order
                VendorGroup
                PayGroup
                CashRequirementsResult
                CashManagementGroup
                CashCode
                CashLedgerPayablesPayment		
                CashLedgerSourceRecord

		ByCashRequirementsResultBankTransactionCode		
			indexed
			Sort Order
				VendorGroup
				PayGroup
				CashRequirementsResult
				CashManagementGroup
				CashLedgerPayablesPayment.BankTransactionCode
				CashCode
				CashLedgerPayablesPayment.TransactionIDNumber
				CashLedgerSourceRecord

        ForSumCashRequirements
            indexed
			duplicates
            Sort Order
				CashManagementGroup               
	            CashCode
				PaidVendor

		ByPaymentDate
            Sort Order
                CashManagementGroup
                PaymentDate
                CashCode
                CashLedgerPayablesPayment.BankTransactionCode
                TransactionNumber
                CashLedgerPayablesPayment.TransactionIDNumber
                CashLedgerSourceRecord






    Field Rules
    	CashManagementAccount
    		force default to CashCode.BankAccountNumber
			
		CashLedgerSourceRecord
			if (CheckType.CbPayment)
				force default to "CBM"
			else
				force default to "CHK"
				
		PaymentAmount		
			if (!PaidVendor.VendorClass.ZeroPaymentAllowed 
			and !CashLedgerPayablesPayment.BankTransactionCode.ManualPaymentNumberReservation)
				required
					"PaymentAmountIsRequired"		  
			constraint (!PaymentAmount < 0)
				"PaymentAmountCannotBeLessThanZero"		     
			
			if (ActionType.UpdateType)
				initialize BasePaymentAmount.EnteredCurrencyAmount
				initialize PaymentAmountBankAccountCurrency.EnteredCurrencyAmount		
			BasePaymentAmount.ToCurrency				= Company.Currency
			PaymentAmountBankAccountCurrency.ToCurrency	= CashCode.Currency

		BasePaymentAmount		
			if (ActionType.UpdateType
			and AppliedBaseAmount.BaseAmount.EnteredCurrencyRate != BasePaymentAmount.EnteredCurrencyRate)
				initialize AppliedBaseAmount.BaseAmount.EnteredCurrencyAmount	
				AppliedBaseAmount.BaseAmount.EnteredCurrencyRate 	= BasePaymentAmount.EnteredCurrencyRate
				AppliedBaseAmount.BaseAmount.ToCurrency 			= Company.Currency
				BasePaymentAmount.ToCurrency						= Company.Currency
							
		PaidAmountInvoiceCurrency			
			AppliedBaseAmount.TransactionAmount 					= PaidAmountInvoiceCurrency
			AppliedBaseAmount.BaseAmount.ToCurrency 				= Company.Currency
			AppliedAmountBankAccountCurrency.TransactionAmount 		= PaidAmountInvoiceCurrency
			AppliedAmountBankAccountCurrency.BaseAmount.ToCurrency 	= CashCode.Currency

		PaymentAmountBankAccountCurrency		
			if (ActionType.UpdateType
			and AppliedAmountBankAccountCurrency.BaseAmount.EnteredCurrencyRate != PaymentAmountBankAccountCurrency.EnteredCurrencyRate)
				initialize AppliedAmountBankAccountCurrency.BaseAmount.EnteredCurrencyAmount			
				AppliedAmountBankAccountCurrency.BaseAmount.EnteredCurrencyRate	= PaymentAmountBankAccountCurrency.EnteredCurrencyRate
				AppliedAmountBankAccountCurrency.BaseAmount.ToCurrency 	= CashCode.Currency
				PaymentAmountBankAccountCurrency.ToCurrency				= CashCode.Currency	
				invoke UpdateBankCheckAmount AppaymentRel
					invoked.PrmCurrencyRate	= PaymentAmountBankAccountCurrency.EnteredCurrencyRate
        	    
		AppliedAmountBankAccountCurrency	

		AppliedBaseAmount					

        PaymentDate
            if (!CashLedgerPayablesPayment.BankTransactionCode.ManualPaymentNumberReservation)
            	required
			if (PaymentDate changed)		
				initialize PaymentAmountBankAccountCurrency.EnteredCurrencyRate
				initialize BasePaymentAmount.EnteredCurrencyRate

        PayGroup
            required
			if (PayGroup changed)				
				LocalPayGroup = old PayGroup
				constraint (AppaymentLocalRel	!exist)
					"CannotChangePayGroupIfInvoicesAreApplied"
				confirmation required
					"ChangingPayGroupWillInitializeCompanyToAllowProperDefaulting;Continue?"
					initialize Company
				if (CashCode.DefaultPostCompany entered)		
					Company = CashCode.DefaultPostCompany
				else
					Company = PayGroup.PostCompany
				if (CheckType.ManuallyCreated)
					constraint (CompanyCashCodeRel exists)
						"CompanyCashCodeRelationshipDoesNotExistForCashCode:<CashCode>AndCompany<Company>"
					if (action type.Create
					or CashCode changed)
						constraint (CompanyCashCodeRel.Active)
							"CompanyCashCodeIsNotActive"
			
		VendorGroup
			default to PayGroup.VendorGroup
			if (PayablesCompanyProcessLevel.PayablesCompany !entered)
				if (first AppaymentRel exists)
					PayablesCompanyProcessLevel.PayablesCompany	= first AppaymentRel.Company
				else
					PayablesCompanyProcessLevel.PayablesCompany	= first PayablesCompaniesRel.Company

		CurrencyTable	
			default to CompanySystemClosingControlRel.CurrencyTable
			default to PayablesCompanyProcessLevel.PayablesCompany.CurrencyTable		

											
		TransactionNumber

			if (CashLedgerPayablesPayment.BankTransactionCode.TransactionNumberValue.NumericOnly)
				constraint (TransactionNumber is numeric)
					"TransactionNumberMustBeNumeric"					
				constraint (TransactionNumber > "0000000000000000000000")
					"TransactionNumberCannotBeZero"			
			if (CheckType.ManuallyCreated
			and TransactionNumber entered
			and !FromICBBypassEdit)
				constraint (!DuplicateTransactionNumberRel exists)
					"TransactionNumber<TransactionNumber>AlreadyExistsForCashCode<CashCode>AndBankTransactionCode<CashLedgerPayablesPayment.BankTransactionCode>"
		
		Company
			default to CashCode.DefaultPostCompany		
			default to PayGroup.PostCompany
			if (CheckType.ManuallyCreated)
				constraint (CompanyCashCodeRel exists)			
					"CompanyCashCodeRelationshipDoesNotExistForCashCode:<CashCode>AndCompany<Company>"
				if (action type.Create
				or CashCode changed)
					constraint (CompanyCashCodeRel.Active)
						"CompanyCashCodeIsNotActive"
				
		PaidVendor
			if (!CashLedgerPayablesPayment.BankTransactionCode.ManualPaymentNumberReservation)
				required			
			if (old PaidVendor entered)
				constraint (!PaidVendor changed)
					"CannotChangePayVendor"		    
		
		PaidName
			default to PaidVendor.Vendor.VendorName
				
		RemitToCode
			constraint (!RemitToCode.LocationType.PurchaseFrom)	
				"VendorLocationIsNotARemit-toLocation"	   
		
		CashCode
			initial value is PayGroup.CashCode
			default to PayGroup.CashCode
			required
			
		CashLedgerPayablesPayment.BankTransactionCode

			required
		
		PayCurrency

			default to CashCode.Currency

			if (PayCurrency changed)
				constraint (AppaymentRel	!exist)
					"CannotChangeCurrencyIfInvoicesAreApplied"
				initialize PaymentAmountBankAccountCurrency.EnteredCurrencyRate
				initialize BasePaymentAmount.EnteredCurrencyRate
			
		CashLedgerPayablesPayment
			constraint (CashLedgerPayablesPayment.BankTransactionCode.BankTransactionType.CashPayment)
				"PaymentCodeMustBeACashPaymentType"		  
		
		ReleasedStatus
			default to ReleasedStatus.Unreleased
			
		TransactionCurrencyNumberOfDecimals
			default to PayCurrency.NumberOfDecimals




			 
	Commit Rules
		include IDM.CommitRules
			replace AttachmentField with RejectAttachment

	Create Exit Rules
		if (CashRequirementsResult entered)
			if ((CashRequirementsResult.SortOption1.OverflowRemittance
			or   CashRequirementsResult.SortOption2.OverflowRemittance
			or   CashRequirementsResult.SortOption3.OverflowRemittance)
			and CashPaymentFormatRel.RemittanceOption.OverflowDocument)

				if (AppaymentRel exists)
					WsNbrOfPmts = instance count of AppaymentRel
				else
					WsNbrOfPmts = blank



				WsNbrOfComments = instance count of VendorCommentRel
				if (AppaymentRel exists)	
					for each distinct CompanyInvoicePayment in AppaymentRel
						WsNbrOfComments += instance count of each.PayablesInvoice.NonInvoiceNoteCommentRel
				
				WsTotalLines = WsNbrOfPmts + WsNbrOfComments

				if (CashRequirementsResult.SortOption1.OverflowRemittance)
					if (WsTotalLines > CashPaymentFormatRel.NumberOfRemittanceLines)
						if (SortOption1 not entered)
							SortOption1 = "S"
						else
							SortOption1 = "Z"
				else
					if (CashRequirementsResult.SortOption2.OverflowRemittance)
						if (WsTotalLines > CashPaymentFormatRel.NumberOfRemittanceLines)
							if (SortOption2 not entered)
								SortOption2 = "S"
							else
								SortOption2 = "Z"
					else
						if (CashRequirementsResult.SortOption3.OverflowRemittance)
							if (WsTotalLines > CashPaymentFormatRel.NumberOfRemittanceLines)
								if (SortOption3 not entered)
									SortOption3 = "S"
								else
									SortOption3 = "Z"

			initialize WsNbrOfEncls
			for each AppaymentRel
				if (each.Enclosure)
					WsNbrOfEncls += 1

			if (CashRequirementsResult.SortOption1.Enclosure)
				if (WsNbrOfEncls > 0)
					if (SortOption1 not entered)
						SortOption1 = "E"
				else
					SortOption1 = "Z"
			else
				if (CashRequirementsResult.SortOption2.Enclosure)
					if (WsNbrOfEncls > 0)
						if (SortOption2 not entered)
							SortOption2 = "E"
					else
						SortOption2 = "Z"
				else
					if (CashRequirementsResult.SortOption3.Enclosure)
						if (WsNbrOfEncls > 0)
							if (SortOption3 not entered)
								SortOption3 = "E"
						else
							SortOption3 = "Z"
			
			StringUtil.EnteredString = PaymentAmountBankAccountCurrency.EnteredCurrencyAmount 
			StringUtil.OutputStringSize = 15
			if (CashRequirementsResult.SortOption1.CounterSignature)
				if (CashRequirementsResult.SignOver entered
				and PaymentAmountBankAccountCurrency.EnteredCurrencyAmount > CashRequirementsResult.SignOver)
					SortOption1 = StringUtil.OutputRightJustifiedNumber
				else
					SortOption1 = "999999999999999"
			else
				if (CashRequirementsResult.SortOption2.PaymentAmountWithCounterSignature)
					if (CashRequirementsResult.SignOver entered
					and PaymentAmountBankAccountCurrency.EnteredCurrencyAmount > CashRequirementsResult.SignOver)
						SortOption2 = StringUtil.OutputRightJustifiedNumber
					else
						SortOption2 = "999999999999999"
				else
					if (CashRequirementsResult.SortOption3.PaymentAmountWithCounterSignature)
						if (CashRequirementsResult.SignOver entered
						and PaymentAmountBankAccountCurrency.EnteredCurrencyAmount > CashRequirementsResult.SignOver)
							SortOption3 = StringUtil.OutputRightJustifiedNumber
						else
							SortOption3 = "999999999999999"

			if (CheckType.CbPayment														
			and CashRequirementsResult.CashPaymentSortOption1 entered)					
				if (CashRequirementsResult.CashPaymentSortOption1.ReferenceNumber
				or  CashRequirementsResult.CashPaymentSortOption2.ReferenceNumber
				or  CashRequirementsResult.CashPaymentSortOption3.ReferenceNumber)
				 	if (CashRequirementsResult.CashPaymentSortOption1.ReferenceNumber
				 	and SortOption1 !entered)
				 		SortOption1 = CashLedgerPaymentRel.Reference
				 	else 
				 		if (CashRequirementsResult.CashPaymentSortOption2.ReferenceNumber
						and SortOption2 !entered)
				 			SortOption2 = CashLedgerPaymentRel.Reference
				 		else 
							if (CashRequirementsResult.CashPaymentSortOption3.ReferenceNumber
							and SortOption3 !entered)
				 				SortOption3 = CashLedgerPaymentRel.Reference

			 	if (CashRequirementsResult.CashPaymentSortOption1.Description			
			 	or  CashRequirementsResult.CashPaymentSortOption2.Description
			 	or  CashRequirementsResult.CashPaymentSortOption3.Description)
				 	if (CashRequirementsResult.CashPaymentSortOption1.Description
				 	and SortOption1 !entered)
				 		SortOption1 = CashLedgerPaymentRel.Description
				 	else 
				 		if (CashRequirementsResult.CashPaymentSortOption2.Description
				 		and SortOption2 !entered)
				 			SortOption2 = CashLedgerPaymentRel.Description
				 		else 
							if (CashRequirementsResult.CashPaymentSortOption3.Description
							and SortOption3 !entered)
								SortOption3 = CashLedgerPaymentRel.Description				

		 		if (CashRequirementsResult.CashPaymentSortOption1.PaymentAmount			
			 	or  CashRequirementsResult.CashPaymentSortOption2.PaymentAmount
			 	or  CashRequirementsResult.CashPaymentSortOption3.PaymentAmount)
					StringUtil.EnteredString = PaymentAmountBankAccountCurrency.EnteredCurrencyAmount
					StringUtil.OutputStringSize = 15
					if (CashRequirementsResult.CashPaymentSortOption1.PaymentAmount
					and SortOption1 not entered)
						SortOption1 = StringUtil.OutputRightJustifiedNumber
					else
			 			if (CashRequirementsResult.CashPaymentSortOption2.PaymentAmount
			 			and SortOption2 not entered)
			 				SortOption2 = StringUtil.OutputRightJustifiedNumber
			 			else
							if (CashRequirementsResult.CashPaymentSortOption3.PaymentAmount
							and SortOption3 not entered)
								SortOption3 = StringUtil.OutputRightJustifiedNumber

				if (CashRequirementsResult.CashPaymentSortOption1.PayeeName				
				or  CashRequirementsResult.CashPaymentSortOption2.PayeeName
				or  CashRequirementsResult.CashPaymentSortOption3.PayeeName)
					if (CashRequirementsResult.CashPaymentSortOption1.PayeeName
					and SortOption1 !entered)
						SortOption1 = PaidName
				 	else 
			 			if (CashRequirementsResult.CashPaymentSortOption2.PayeeName
			 			and SortOption2 !entered)
			 				SortOption2 = PaidName
			 			else 
			 				if (CashRequirementsResult.CashPaymentSortOption3.PayeeName
			 				and SortOption3 !entered)
			 					SortOption3 = PaidName
	
				if (CashRequirementsResult.CashPaymentSortOption1.PostalCode		 	
				or  CashRequirementsResult.CashPaymentSortOption2.PostalCode
				or  CashRequirementsResult.CashPaymentSortOption3.PostalCode)
					if (CashRequirementsResult.CashPaymentSortOption1.PostalCode
					and SortOption1 !entered)
						SortOption1 = CashLedgerPaymentRel.PayeePostalAddress.PostalCode
					else 
						if (CashRequirementsResult.CashPaymentSortOption2.PostalCode
						and SortOption2 !entered)
							SortOption2 = CashLedgerPaymentRel.PayeePostalAddress.PostalCode
						else 
							if (CashRequirementsResult.CashPaymentSortOption3.PostalCode
							and SortOption3 !entered)
								SortOption3 = CashLedgerPaymentRel.PayeePostalAddress.PostalCode		

				if (CashRequirementsResult.CashPaymentSortOption1.FirstPartyReference	
				or  CashRequirementsResult.CashPaymentSortOption2.FirstPartyReference
				or  CashRequirementsResult.CashPaymentSortOption3.FirstPartyReference)
					if (CashRequirementsResult.CashPaymentSortOption1.FirstPartyReference
					and SortOption1 !entered)
						SortOption1 = CashLedgerPaymentRel.FirstPartyReference
					else 
						if (CashRequirementsResult.CashPaymentSortOption2.FirstPartyReference
						and SortOption2 !entered)
							SortOption2 = CashLedgerPaymentRel.FirstPartyReference
						else 
							if (CashRequirementsResult.CashPaymentSortOption3.FirstPartyReference
							and SortOption3 !entered)
								SortOption3 = CashLedgerPaymentRel.FirstPartyReference

			 	if (CashRequirementsResult.CashPaymentSortOption1.SecondPartyReference	
			 	or  CashRequirementsResult.CashPaymentSortOption2.SecondPartyReference
			 	or  CashRequirementsResult.CashPaymentSortOption3.SecondPartyReference)
			 		if (CashRequirementsResult.CashPaymentSortOption1.SecondPartyReference
			 		and SortOption1 !entered)
			 			SortOption1 = CashLedgerPaymentRel.SecondPartyReference
			 		else 
			 			if (CashRequirementsResult.CashPaymentSortOption2.SecondPartyReference
			 			and SortOption2 !entered)
			 				SortOption2 = CashLedgerPaymentRel.SecondPartyReference
			 			else 
			 				if (CashRequirementsResult.CashPaymentSortOption3.SecondPartyReference
			 				and SortOption3 !entered)
			 					SortOption3 = CashLedgerPaymentRel.SecondPartyReference

			 	if (CashRequirementsResult.CashPaymentSortOption1.TransactionData1		
			 	or  CashRequirementsResult.CashPaymentSortOption2.TransactionData1
			 	or  CashRequirementsResult.CashPaymentSortOption3.TransactionData1)
			 		if (CashRequirementsResult.CashPaymentSortOption1.TransactionData1
			 		and SortOption1 !entered)
			 			SortOption1 = CashLedgerPaymentRel.TransactionData1
			 		else 
						if (CashRequirementsResult.CashPaymentSortOption2.TransactionData1
						and SortOption2 !entered)
							SortOption2 = CashLedgerPaymentRel.TransactionData1
						else 
							if (CashRequirementsResult.CashPaymentSortOption3.TransactionData1
							and SortOption3 !entered)
								SortOption3 = CashLedgerPaymentRel.TransactionData1

			 	if (CashRequirementsResult.CashPaymentSortOption1.TransactionData2		
			 	or  CashRequirementsResult.CashPaymentSortOption2.TransactionData2
			 	or  CashRequirementsResult.CashPaymentSortOption3.TransactionData2)
					if (CashRequirementsResult.CashPaymentSortOption1.TransactionData2
					and SortOption1 !entered)
						SortOption1 = CashLedgerPaymentRel.TransactionData2
					else 
						if (CashRequirementsResult.CashPaymentSortOption2.TransactionData2
						and SortOption2 !entered)
							SortOption2 = CashLedgerPaymentRel.TransactionData2
						else 
							if (CashRequirementsResult.CashPaymentSortOption3.TransactionData2
							and SortOption3 !entered)
								SortOption3 = CashLedgerPaymentRel.TransactionData2

			 	if (CashRequirementsResult.CashPaymentSortOption1.TransactionData3		
			 	or  CashRequirementsResult.CashPaymentSortOption2.TransactionData3
			 	or  CashRequirementsResult.CashPaymentSortOption3.TransactionData3)
					if (CashRequirementsResult.CashPaymentSortOption1.TransactionData3
					and SortOption1 !entered)
						SortOption1 = CashLedgerPaymentRel.TransactionData3
					else 
						if (CashRequirementsResult.CashPaymentSortOption2.TransactionData3
						and SortOption2 !entered)
							SortOption2 = CashLedgerPaymentRel.TransactionData3
						else 
							if (CashRequirementsResult.CashPaymentSortOption3.TransactionData3
							and SortOption3 !entered)
								SortOption3 = CashLedgerPaymentRel.TransactionData3

			 	if (CashRequirementsResult.CashPaymentSortOption1.TransactionData4		
			 	or  CashRequirementsResult.CashPaymentSortOption2.TransactionData4
			 	or  CashRequirementsResult.CashPaymentSortOption3.TransactionData4)
			 		if (CashRequirementsResult.CashPaymentSortOption1.TransactionData4
			 		and SortOption1 !entered)
			 			SortOption1 = CashLedgerPaymentRel.TransactionData4
			 		else 
			 			if (CashRequirementsResult.CashPaymentSortOption2.TransactionData4
			 			and SortOption2 !entered)
			 				SortOption2 = CashLedgerPaymentRel.TransactionData4
			 			else 
			 				if (CashRequirementsResult.CashPaymentSortOption3.TransactionData4
			 				and SortOption3 !entered)
			 					SortOption3 = CashLedgerPaymentRel.TransactionData4
			else
				if (CashRequirementsResult.SortOption1.VendorName
				or  CashRequirementsResult.SortOption2.VendorName
				or  CashRequirementsResult.SortOption3.VendorName)
					if (CashRequirementsResult.SortOption1.VendorName
					and SortOption1 not entered)
						if (RemitToCode not entered)
							SortOption1 = PaidVendor.VendorSearchName
						else
							SortOption1 = PaidVendor.VendorName
					else
						if (CashRequirementsResult.SortOption2.VendorName
						and SortOption2 not entered)
							if (RemitToCode not entered)
								SortOption2 = PaidVendor.VendorSearchName
							else
								SortOption2 = PaidVendor.VendorName
						else
							if (CashRequirementsResult.SortOption3.VendorName
							and SortOption3 not entered)
								if (RemitToCode not entered)
									SortOption3 = PaidVendor.VendorSearchName
								else
									SortOption3 = PaidVendor.VendorName

				if (CashRequirementsResult.SortOption1.VendorNumber
				or  CashRequirementsResult.SortOption2.VendorNumber
				or  CashRequirementsResult.SortOption3.VendorNumber)
					if (CashRequirementsResult.SortOption1.VendorNumber
					and SortOption1 not entered)
						SortOption1 = PaidVendor
					else
						if (CashRequirementsResult.SortOption2.VendorNumber
						and SortOption2 not entered)
							SortOption2 = PaidVendor
						else
							if (CashRequirementsResult.SortOption3.VendorNumber
							and SortOption3 not entered)
								SortOption3 = PaidVendor
									
				if (CashRequirementsResult.SortOption1.VendorClass
				or  CashRequirementsResult.SortOption2.VendorClass
				or  CashRequirementsResult.SortOption3.VendorClass)
					if (CashRequirementsResult.SortOption1.VendorClass
					and SortOption1 not entered)
						SortOption1 = PaidVendor.VendorClass
					else
						if (CashRequirementsResult.SortOption2.VendorClass
						and SortOption2 not entered)
							SortOption2 = PaidVendor.VendorClass
						else
							if (CashRequirementsResult.SortOption3.VendorClass
							and SortOption3 not entered)
								SortOption3 = PaidVendor.VendorClass
			
				if (CashRequirementsResult.SortOption1.PostalCode
				or  CashRequirementsResult.SortOption2.PostalCode
				or  CashRequirementsResult.SortOption3.PostalCode)
					if (CashRequirementsResult.SortOption1.PostalCode
					and SortOption1 not entered)
						if (PaidVendor.VendorPostalCode entered)
							SortOption1 = PaidVendor.VendorPostalCode
						else
							SortOption1 = AppaymentRel.Vendor.VendorPostalCode
					else
						if (CashRequirementsResult.SortOption2.PostalCode
						and SortOption2 not entered)
							if (PaidVendor.VendorPostalCode entered)
								SortOption2 = PaidVendor.VendorPostalCode
							else
								SortOption2 = AppaymentRel.Vendor.VendorPostalCode
						else
							if (CashRequirementsResult.SortOption3.PostalCode
							and SortOption3 not entered)
								if (PaidVendor.VendorPostalCode entered)
									SortOption3 = PaidVendor.VendorPostalCode
								else
									SortOption3 = AppaymentRel.Vendor.VendorPostalCode

				if (CashRequirementsResult.SortOption1.InvoiceGroup
				or  CashRequirementsResult.SortOption2.InvoiceGroup
				or  CashRequirementsResult.SortOption3.InvoiceGroup)
					if (CashRequirementsResult.SortOption1.InvoiceGroup
					and SortOption1 not entered)
						if (InvoiceGroup entered)
							SortOption1 = InvoiceGroup
						else
							SortOption1 = "ZZZZZZZZZZZZZZZ"
					else
						if (CashRequirementsResult.SortOption2.InvoiceGroup
						and SortOption2 not entered)
							if (InvoiceGroup entered)
								SortOption2 = InvoiceGroup
							else
								SortOption2 = "ZZZZZZZZZZZZZZZ"
						else
							if (CashRequirementsResult.SortOption3.InvoiceGroup
							and SortOption3 not entered)
								if (InvoiceGroup entered)
									SortOption3 = InvoiceGroup
								else
									SortOption3 = "ZZZZZZZZZZZZZZZ"
				
				if (CashRequirementsResult.SortOption1.PaymentAmount
				or  CashRequirementsResult.SortOption2.PaymentAmountWithoutCounterSignature
				or  CashRequirementsResult.SortOption3.PaymentAmountWithoutCounterSignature)
					StringUtil.EnteredString = PaymentAmountBankAccountCurrency.EnteredCurrencyAmount
					StringUtil.OutputStringSize = 15
					if (CashRequirementsResult.SortOption1.PaymentAmount
					and SortOption1 not entered)
						SortOption1 = StringUtil.OutputRightJustifiedNumber
					else
						if (CashRequirementsResult.SortOption2.PaymentAmountWithoutCounterSignature
						and SortOption2 not entered)
							SortOption2 = StringUtil.OutputRightJustifiedNumber
						else
							if (CashRequirementsResult.SortOption3.PaymentAmountWithoutCounterSignature
							and SortOption3 not entered)
								SortOption3 = StringUtil.OutputRightJustifiedNumber

				if (CashRequirementsResult.SortOption1.Priority
				or  CashRequirementsResult.SortOption2.Priority
				or  CashRequirementsResult.SortOption3.Priority)
					if (CashRequirementsResult.SortOption1.Priority
					and SortOption1 not entered)
						if (PaidVendor.PaymentPriority entered)
							SortOption1 = PaidVendor.PaymentPriority
						else
							SortOption1 = "999999999999999"
					else
						if (CashRequirementsResult.SortOption2.Priority
						and SortOption2 not entered)
							if (PaidVendor.PaymentPriority entered)
								SortOption2 = PaidVendor.PaymentPriority
							else
								SortOption2 = "999999999999999"
						else
							if (CashRequirementsResult.SortOption3.Priority
							and SortOption3 not entered)
								if (PaidVendor.PaymentPriority entered)
									SortOption3 = PaidVendor.PaymentPriority
								else
									SortOption3 = "999999999999999"

	Actions
	
		UpdateBODIdFields is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmAccountingEntity  is Alpha size 22
					default label is "AccountingEntity"
				PrmLocation          is Alpha size 22
					default label is "Location" 
				PrmDocumentID        is Alpha size 100
					default label is "DocumentID"
				PrmRevision          is Alpha size 22
					default label is "Revision"	
				PrmSystemOfRecord    is Alpha size 1
					default label is "SystemOfRecord"
			Action Rules
				if (bod id.AccountingEntity != PrmAccountingEntity)
					bod id.AccountingEntity 	= PrmAccountingEntity
				if (bod id.Location != PrmLocation)
					bod id.Location				= PrmLocation
				if (bod id.DocumentID != PrmDocumentID)
					bod id.DocumentID			= PrmDocumentID
				if (bod id.Revision != PrmRevision)
					bod id.Revision				= PrmRevision
				if (bod id.SystemOfRecord != PrmSystemOfRecord)
					bod id.SystemOfRecord		= PrmSystemOfRecord




        TriggerPayableTracker is an Instance Action  
		 	default label is untranslatable
		 	restricted
			Action Rules
				if (Company.FinanceEnterpriseGroup.BODTrigger)
					ActionCode = ActionCode.Update				
					increment bod id.VariationID
					trigger "PayableTrackerService" PA service
						resume on error
						title is "EG:<Company.FinanceEnterpriseGroup>CO:<Company>CC:<CashCode>BTC:<CashLedgerPayablesPayment.BankTransactionCode>TN:<CashLedgerPayablesPayment.TransactionIDNumber>"
						Criteria
							Company.FinanceEnterpriseGroup
							Company.GeneralLedgerCompany.AccountingEntity
							Company
						Variables
							include persistent fields from Company
							include persistent fields from Company.GeneralLedgerCompany
							include persistent fields from PaidVendor.Vendor
							include persistent fields from PaidVendor.Vendor.CurrentAddressRel.VendorAddress
							include persistent fields from CashLedgerPayablesPayment
							ActionCode
							LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
								variable name is CurrentTimeStamp										
							Company.GeneralLedgerCompany.AccountingEntity										
								variable name is Accountingentity
							Company.GeneralLedgerCompany.AccountingEntity.FunctionalCurrency
								variable name is FunctionalCurrency
							Company.FinanceEnterpriseGroup.ReportCurrencyOne
								variable name is ReportCurrency
										
        TriggerCreditTransfer is an Instance Action 
	  	 	default label is untranslatable
	  	 	restricted
			Action Rules

				if (Company.FinanceEnterpriseGroup.BODTrigger)
					if (Status.ScheduledForPayment or Status.PaymentCycleProcessed)
						ActionCode = ActionCode.Update
						increment bod id.VariationID
						LocalPayablesInvoicePaymentCount = instance count of APPaymentCreditTransferRel		




						LocalTitle = "EG:"+Company.FinanceEnterpriseGroup+"  CO:"+Company+" CC:"+CashCode+" BTC:"+CashLedgerPayablesPayment.BankTransactionCode+" TN:"+CashLedgerPayablesPayment.TransactionIDNumber
						LocalAEContactName = Company.AccountingEntity.AddressCode.PersonResponsible.Name.GivenName + " " + Company.AccountingEntity.AddressCode.PersonResponsible.Name.FamilyName
						if((CashPaymentFormatRel.PaymentFormat.ElectronicFile 
						or CashPaymentFormatRel.PaymentFormat.GermanDtausFile
						or CashPaymentFormatRel.PaymentFormat.GermanDtazvFile
						or CashPaymentFormatRel.PaymentFormat.SwedenPgdPlusgiroDomestic 
						or CashPaymentFormatRel.PaymentFormat.SwedenPgiPlusgiroInternational 
						or CashPaymentFormatRel.PaymentFormat.SwedenBgdBankgiroDomestic 
						or CashPaymentFormatRel.PaymentFormat.SwedenBgiBankgiroInternational 
						or CashPaymentFormatRel.PaymentFormat.FinlandFndNordeaDomestic 
						or CashPaymentFormatRel.PaymentFormat.FinlandFniNordeaInternational 
						or CashPaymentFormatRel.PaymentFormat.NorwayNtdTelepayDomestic 
						or CashPaymentFormatRel.PaymentFormat.NorwayNtiTelepayInternational 
						or CashPaymentFormatRel.PaymentFormat.DenmarkDddDanskeBankDomestic 
						or CashPaymentFormatRel.PaymentFormat.DenmarkDdiDanskeBankInternational)						
						and CashLedgerPayablesPayment.BankTransactionCode.BankTransactionType.CashPayment 
						and (CashLedgerPayablesPayment.BankTransactionCode.PaymentOutputOption.ElectronicFile
						or  CashLedgerPayablesPayment.BankTransactionCode.PaymentOutputOption.Swift
						or  CashLedgerPayablesPayment.BankTransactionCode.PaymentOutputOption.WireTransfer))

							trigger PayablesService.CashLedgerPayablesPaymentService PA service
								resume on error
								title is "<LocalTitle>"
								Criteria
									Company.FinanceEnterpriseGroup
									Company
								Variables
									ActionCode
									include persistent fields from CashLedgerPayablesPayment
									include persistent fields from CashCode
									include persistent fields from PaidVendor.BankEntity
									include persistent fields from CashLedgerPayablesPayment.BankTransactionCode
									include persistent fields from PaidVendor.Vendor
									include persistent fields from PaidVendor.Vendor.CurrentAddressRel.VendorAddress
									include persistent fields from Company.AccountingEntity.AddressCode
									include persistent fields from CashManagementAccount.FinancialInstitutionBranch
									include persistent fields from CashManagementAccount
									include persistent fields from CashManagementAccount.FinancialInstitution

									DerivedPaymentOutputfileHeader
										variable name is PaymentRunNumber

									TaxEntityRel.VATRegistrationNumber
										variable name is VATRegistrationNumber
									TaxEntityRel.TaxID
										variable name is TaxID
									TaxEntityRel.VATRegistrationCountry
										variable name is VATRegistrationCountry 	
									PayablesCompanyRel.Name
										variable name is PayablesCompanyName
									LocalPayablesInvoicePaymentCount
										variable name is PayablesInvoicePaymentCount
									Company.FinanceEnterpriseGroup
										variable name is FinanceEnterpriseGroup
									PaidVendor.BankEntity.BranchName
										variable name is BEBranchName
									CashCode.SwiftID
										variable name is CashCodeBIC
									LocalAEContactName
										variable name is AEContactName
									PayablesCompanyRel.Company.GeneralLedgerCompany.AccountingEntity
										variable name is AccountingEntity
									PayablesCompanyRel.Company
										variable name is PayablesCompany
									PayGroup.PayablesElectronicTransferIDRel.PayablesElectronicTransferID.ElectronicTransferID
										variable name is ClearingSystemMemberID
									include persistent fields from RemitToCode.BankEntity
									include persistent fields from RemitToCode.VendorLocation


		TriggerCreditTransferLPLBOD is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmTriggerFrom 		is Alpha size 100
			Action Rules
				LocalTriggerFrom   			 =  PrmTriggerFrom
				if (Company.FinanceEnterpriseGroup.BODTrigger)
					if (Status.ScheduledForPayment or Status.PaymentCycleProcessed)
						increment bod id.VariationID
						if((CashPaymentFormatRel.PaymentFormat.ElectronicFile 
						or CashPaymentFormatRel.PaymentFormat.GermanDtausFile
						or CashPaymentFormatRel.PaymentFormat.GermanDtazvFile
						or CashPaymentFormatRel.PaymentFormat.SwedenPgdPlusgiroDomestic 
						or CashPaymentFormatRel.PaymentFormat.SwedenPgiPlusgiroInternational 
						or CashPaymentFormatRel.PaymentFormat.SwedenBgdBankgiroDomestic 
						or CashPaymentFormatRel.PaymentFormat.SwedenBgiBankgiroInternational 
						or CashPaymentFormatRel.PaymentFormat.FinlandFndNordeaDomestic 
						or CashPaymentFormatRel.PaymentFormat.FinlandFniNordeaInternational 
						or CashPaymentFormatRel.PaymentFormat.NorwayNtdTelepayDomestic 
						or CashPaymentFormatRel.PaymentFormat.NorwayNtiTelepayInternational 
						or CashPaymentFormatRel.PaymentFormat.DenmarkDddDanskeBankDomestic 
						or CashPaymentFormatRel.PaymentFormat.DenmarkDdiDanskeBankInternational)						
						and CashLedgerPayablesPayment.BankTransactionCode.BankTransactionType.CashPayment 
						and (CashLedgerPayablesPayment.BankTransactionCode.PaymentOutputOption.ElectronicFile
						or  CashLedgerPayablesPayment.BankTransactionCode.PaymentOutputOption.Swift
						or  CashLedgerPayablesPayment.BankTransactionCode.PaymentOutputOption.WireTransfer))
							invoke NativeLPLBODTriggerChecks FSMBODConfigurationCTRel
								invoked.PrmVerb 					= 1
								invoked.PrmNoun						= "CreditTransfer"
								invoked.PrmDirection				= 1
								invoked.PrmTriggerFrom				= LocalTriggerFrom
								invoked.PrmFinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
								invoked.PrmCompany 					= Company
								invoked.PrmMainUserTemplate			= "IONSyncCreditTransfer_CashLedgerPayablesPayment_ST"
							LocalNativeLPLBODTrigger = FSMBODConfigurationCTRel.NativeLPLBODTrigger
							if(LocalNativeLPLBODTrigger)
								if(FSMInboundBODTracker not entered)
									invoke Create FSMInboundBODTracker
										assign result to NewBODTracker
										invoked.Verb 					= 1
										invoked.Noun 					= "CreditTransfer"	
										invoked.BODDocumentID			= DerivedBODDocumentID
										invoked.BODVariationID			= BODVariationID
										invoked.Status					= 1
										invoked.StartDate				= system current timestamp
										invoked.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
										invoked.Direction				= 1
										invoked.BODAccountingEntity		= DerivedAccountingEntity
										invoked.Reference1				= CashLedgerPayablesPayment.BankTransactionCode
										invoked.Reference3				= CashCode
										invoked.Reference4				= CashLedgerPayablesPayment.TransactionIDNumber
										invoked.Reference5				= LocalTriggerFrom
										initialize invoked.Error			
										initialize invoked.ErrorMessage					
									LocalFSMInboundBODTracker			= NewBODTracker.FSMInboundBODTracker
								else 
									LocalFSMInboundBODTracker			= FSMInboundBODTracker
									invoke Update FSMInboundBODTrackerRel
										invoked.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
										invoked.BODDocumentID			= DerivedBODDocumentID
										invoked.BODVariationID			= BODVariationID
										invoked.Status					= 1
										invoked.StartDate				= system current timestamp
										invoked.Direction				= 1
										invoked.BODAccountingEntity		= DerivedAccountingEntity
										invoked.Reference1				= CashLedgerPayablesPayment.BankTransactionCode
										invoked.Reference3				= CashCode
										invoked.Reference4				= CashLedgerPayablesPayment.TransactionIDNumber
										invoked.Reference5				= LocalTriggerFrom
										initialize invoked.Error			
										initialize invoked.ErrorMessage
								invoke SendCreditTransferBODNativeLPL
									resume on error
				                   		Error            							= true
				                        ErrorMessage     							= error message
				                if(Error)
									invoke Update FSMInboundBODTrackerRel
										invoked.Error 								= Error
										invoked.ErrorMessage 						= ErrorMessage
										invoked.Status								= 2
										invoked.CloseDate							= system current timestamp
										invoked.BODXML								= SyncCreditTransferXMLBOD
										invoked.BODID								= DerivedBODId
								else
									invoke Update FSMInboundBODTrackerRel
										invoked.Status									= 3
										invoked.CloseDate								= system current timestamp
										invoked.BODXML									= SyncCreditTransferXMLBOD
										invoked.BODID									= DerivedBODId
										
		SendCreditTransferBODNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules					
				send ion bod
					bod is SyncCreditTransferXMLBOD
					bod type is "Sync.CreditTransfer"
					accounting entity is DerivedBODAccountingEntity
					document id is  BODDocumentID
					variation id is BODVariationID


		SendRemittanceAdviceBODNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				send ion bod
					bod is RemittanceAdviceXMLBOD
					bod type is "Sync.RemittanceAdvice"
					accounting entity is DerivedAccountingEntity
					document id is BODDocumentID
					variation id is	BODVariationID
					
		TriggerRemittanceAdviceNativeLPLBOD is an Instance Action
			restricted
			Action Rules
				if (CheckType.CbPayment)
		        	LocalMainUserTemplate = "IONSyncRemittanceAdvice_CashLedgerPayablesPayment_CashLedgerPayment_ST"	
		        else
		        	LocalMainUserTemplate = "IONSyncRemittanceAdvice_CashLedgerPayablesPayment_PayablesInvoicePayment_ST" 
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationRel
					invoked.PrmVerb 					= 1
					invoked.PrmNoun						= "RemittanceAdvice"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= "CashLedgerPayablesPayment"
					invoked.PrmFinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
					invoked.PrmBusinessGroup			= VendorGroup
					invoked.PrmAccountingEntity 		= Company.AccountingEntity
					invoked.PrmCompany 					= Company
					invoked.PrmMainUserTemplate			= LocalMainUserTemplate
				LocalNativeLPLBODTrigger = FSMBODConfigurationRel.NativeLPLBODTrigger
				if(LocalNativeLPLBODTrigger and Company.FinanceEnterpriseGroup.BODTrigger)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "RemittanceAdvice"					
							invoked.BODDocumentID			= BODDocumentID
							invoked.BODVariationID			= BODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedAccountingEntity
							invoked.Reference1				= CashManagementGroup
							invoked.Reference2				= CashCode
							invoked.Reference3				= CashLedgerSourceRecord
							invoked.Reference4				= CashLedgerPayablesPayment.BankTransactionCode
							invoked.Reference5				= CashLedgerPayablesPayment.TransactionIDNumber
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
					else 
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
							invoked.BODDocumentID			= BODDocumentID
							invoked.BODVariationID			= BODVariationID
							invoked.BODID					= BODFormattedId
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedAccountingEntity
							invoked.Reference1				= CashManagementGroup
							invoked.Reference2				= CashCode
							invoked.Reference3				= CashLedgerSourceRecord
							invoked.Reference4				= CashLedgerPayablesPayment.BankTransactionCode
							invoked.Reference5				= CashLedgerPayablesPayment.TransactionIDNumber
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					invoke SendRemittanceAdviceBODNativeLPL
						resume on error
	                   		Error            							= true
	                        ErrorMessage     							= error message
	                if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 								= Error
							invoked.ErrorMessage 						= ErrorMessage
							invoked.Status								= 2
							invoked.CloseDate							= system current timestamp
							invoked.BODID								= BODFormattedId
							invoked.BODXML								= RemittanceAdviceXMLBOD
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status									= 3
							invoked.CloseDate								= system current timestamp
							invoked.BODID									= BODFormattedId
							invoked.BODXML									= RemittanceAdviceXMLBOD
							
		TriggerRemitAdvice is an Instance Action
			default label is untranslatable
			restricted
			Local Fields
				LocalPayablesCompany							is a PayablesCompany
				LocalCashLedgerPayment							is a CashLedgerPayment
				LocalPayablesInvoice							is a PayablesInvoice
				
				LocalPayablesInvoicePayment						is a PayablesInvoicePayment
				LocalPayablesInvoicePaymentCompany				is a Company
				LocalPayablesInvoicePaymentBankCheckAmount		is an InternationalAmount
				LocalPayablesInvoicePaymentCheckDate			is Date
				LocalPayablesInvoicePaymentInvoiceCurrency		is a FromCurrency
				LocalPayablesInvoicePaymentBasePaymentAmount	is an InternationalAmount
				LocalActionCode									is an ActionCode
			
			Action Rules
				LocalActionCode									= LocalActionCode.Create
				LocalCashLedgerPayment							= CashLedgerPaymentRel.CashLedgerPayment
				
				if (Company.FinanceEnterpriseGroup.BODTrigger)
					increment bod id.VariationID
							
					trigger "FSMRemitAdvice" PA service
						resume on error
						title is "EG:<Company.FinanceEnterpriseGroup>CO:<Company>CC:<CashCode>BT:<CashLedgerPayablesPayment.BankTransactionCode>TN<CashLedgerPayablesPayment.TransactionIDNumber>"
						Criteria
							Company
							CashLedgerPayablesPayment.BankTransactionCode
							CashLedgerPayablesPayment.TransactionIDNumber
					
						Variables
							include persistent fields from Company									
							include persistent fields from CashLedgerPayablesPayment
							include persistent fields from LocalCashLedgerPayment
							
							LocalActionCode
								variable name is ActionCode								
							CheckType
								variable name is CheckType
							Company.AccountingEntity
								variable name is AccountingEntity
							Company.Currency
								variable name is CompanyCurrency
							LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
								variable name is CurrentTimeStamp

							bod id.VariationID
								variable name is VariationID




    

    
        Create is a Create Action
			Field Rules
				TransactionIdentifierSequenceNumber
					autosequence using ByTransactionIdentifierSequenceNumber
		    			minimize contention
		    	CashLedgerTransactionIdentifier
					CashLedgerTransactionIdentifier	= ("P" + TransactionIdentifierSequenceNumber)
			Entrance Rules
				constraint (TransactionNumber entered)
					"TransactionNumberRequired"
				if (CashLedgerPayablePaymentsRel exists)
					constraint (!CashLedgerPayablePaymentsRel.Status.ReservedForManualPayment)
						"ManualPayment<TransactionNumber>IsAlreadyReserved"					
				if (CheckType = "M")
					constraint (!Status.ReservedForManualPayment)
						"PaymentNumberAlreadyExists"	      
				if (CheckType = "M"
				and Status.ReservedForManualPayment)
					invoke Update				
				constraint (!CashLedgerPayablesPayment.BankTransactionCode.ManualPaymentNumberReservation
					or      TransientApplyToReserved)	
					"PaymentsFor_\Bank_\Transaction_\Code<CashLedgerPayablesPayment.BankTransactionCode>RequirePaymentReservation.GoTo_\Cash_\Code_(<CashCode>)ToReservePayment."
				invoke IncrementTransactionIDNumber BankInstCodeRel				
			Action Rules
				ActionType 							= ActionType.CreateType
				CashLedgerPayablesPayment.TransactionIDNumber 	= BankInstCodeRel.TransactionIDNumber
				Status 								= Status.PaymentCycleProcessed
				CheckType 							= "M"
				LastElectronicPaymentSerialNumber 	= 0
				if (AppliedBaseAmount.BaseAmount.EnteredCurrencyRate entered)		
     				PaymentAmountBankAccountCurrency.EnteredCurrencyRate = AppliedBaseAmount.BaseAmount.EnteredCurrencyRate




			Exit Rules

					
        CreateFromBatch is a Create Action
        	default label is untranslatable
        	restricted
			Field Rules
				TransactionIdentifierSequenceNumber
					autosequence using ByTransactionIdentifierSequenceNumber
		    			minimize contention
		    	CashLedgerTransactionIdentifier
					CashLedgerTransactionIdentifier	= ("P" + TransactionIdentifierSequenceNumber)
					
		ReserveManualChecks is a Create Action

			default label is untranslatable
			restricted
			bypass field rules
			Entrance Rules
				CashLedgerSourceRecord	= "CHK"
			Action Rules
				invoke IncrementTransactionIDNumber CashLedgerPayablesPayment.BankTransactionCode	
				CashLedgerPayablesPayment.TransactionIDNumber	= CashLedgerPayablesPayment.BankTransactionCode.TransactionIDNumber
				Status 											= Status.ReservedForManualPayment
				ReleasedStatus 									= ReleasedStatus.Released
				CheckType 										= CheckType.ManuallyCreated
				PayCurrency										= CashCode.Currency

		VoidManualChecks is a Create Action

			default label is untranslatable
			restricted
			bypass field rules
			Action Rules
				invoke IncrementTransactionIDNumber CashLedgerPayablesPayment.BankTransactionCode	
				CashLedgerPayablesPayment.TransactionIDNumber 	= CashLedgerPayablesPayment.BankTransactionCode.TransactionIDNumber
				Status 											= Status.PaymentCycleClosed
				ReleasedStatus 									= ReleasedStatus.Released
				CheckType 										= CheckType.ManuallyCreated
				PayCurrency										= CashCode.Currency
				Company											= PayGroup.PostCompany
				PaidName										= "ManualCheckVoid"//"AP81-Voided"
				PaymentDate										= current corporate date
				TransactionCurrencyNumberOfDecimals				= CashCode.BankAccountNumber.Currency.NumberOfDecimals
        		BankAccountCurrencyNumberOfDecimals				= CashCode.BankAccountNumber.Currency.NumberOfDecimals
       	 		BaseCurrencyNumberOfDecimals					= PayGroup.PostCompany.Currency
			Exit Rules				
				invoke CreateVoidManualChecks CashLedgerTransaction
					invoked.BankTransactionCode 				= CashLedgerPayablesPayment.BankTransactionCode
					invoked.CashLedgerTransaction				= CashLedgerPayablesPayment.TransactionIDNumber
					invoked.CashCode							= CashCode
					invoked.CashLedgerSourceRecord				= CashLedgerSourceRecord
					invoked.TransactionNumber 					= TransactionNumber
					invoked.SourceCode 							= "CB"
					invoked.ReinstateStatus						= true
					invoked.Status 								= 3 
					invoked.Currency 							= PayCurrency
					invoked.Description							= PaidName  //"AP81-Voided"
					invoked.Company								= Company
					invoked.Reference							= "ManualCheckVoid"  
					invoked.GeneralLedgerPostDate				= current corporate date
					invoked.ReconciliationData.ExchangeDate		= current corporate date
					invoked.IssueDate							= current corporate date
        			invoked.TransactionCurrencyNumberOfDecimals = TransactionCurrencyNumberOfDecimals
       	 			invoked.BaseCurrencyNumberOfDecimals 		= BaseCurrencyNumberOfDecimals
        			invoked.BankAccountCurrencyNumberOfDecimals	= BankAccountCurrencyNumberOfDecimals	 

		CreateSupplierMessageAndDialog is an Instance Action  
			valid when (ForSupplier)
			Parameters
				ParmDialogMessage       is Alpha size 1000
					default label is "Message"
				ParmDialogAttachment	is an Attachment
					default label is "Attachment"	
				ParmPriority            is Numeric 1
					States
						Low				value is 1
						Normal			value is 2
						High			value is 3					
					default label is "Priority"
				ParmResponseRequested   is Boolean
					default label is "ResponseRequired"
				
			Parameter Rules
				ParmDialogMessage
					required
					
				ParmPriority
					initial value is 2
						
			Local Fields
				LocalSupplierContactMessage        is a SupplierContactMessage view
			
			Action Rules	
					
				invoke Create SupplierContactMessage
					assign result to LocalSupplierContactMessage
					invoked.SupplierGroup  					= actor.agent(SupplierSourceId).SupplierGroup
 					invoked.Supplier    			 		= actor.agent(SupplierSourceId).Supplier
					invoked.SupplierSourceId                = actor.agent(SupplierSourceId).SupplierSourceId
					invoked.MessageTitle					= "Dialog for Payment on Invoice: " + AppaymentRel.PayablesInvoice.Invoice
					invoked.MessageText                     = "User Created Message and Dialog for Payment on Invoice: " + AppaymentRel.PayablesInvoice.Invoice
					invoked.Status							= 1
					invoked.Priority						= ParmPriority
					invoked.ReleaseStatus					= 2
					invoked.OriginatingCompany              = Company
					invoked.OriginatingInvoice              = AppaymentRel.PayablesInvoice
					invoked.OriginatingPayment              = true
					
				invoke Create SupplierMessageDialog
					invoked.SupplierGroup  					= actor.agent(SupplierSourceId).SupplierGroup
 					invoked.Supplier    			 		= actor.agent(SupplierSourceId).Supplier
					invoked.SupplierSourceId                = actor.agent(SupplierSourceId).SupplierSourceId
					invoked.SupplierContactMessage 			= LocalSupplierContactMessage.SupplierContactMessage
					invoked.Message                 		= ParmDialogMessage
					invoked.MessageAttachment       		= ParmDialogAttachment
					invoked.ResponseRequested       		= ParmResponseRequested				

					
		CreateMessageAndDialog is an Instance Action  
			default label is "StartASupplierDialog"
			valid when (CanCreateDialog)
			Parameters
				ParmSupplierGroup       is a SupplierGroup
				ParmSupplier            is a Supplier
					default label is "Supplier"
				ParmSupplierContact     is a SupplierSourceId
				ParmDialogMessage       is Alpha size 1000
					default label is "Message"
				ParmDialogAttachment	is an Attachment
					default label is "Attachment"
				ParmPriority            is Numeric 1
					States
						Low				value is 1
						Normal			value is 2
						High			value is 3
					default label is "Priority"
				ParmResponseRequested   is Boolean
					default label is "ResponseRequired"

			Parameter Rules
				
				ParmSupplierGroup
					initial value is SupplierGroupRel.SupplierGroup
					
				ParmSupplier
					if (PaidVendor.SingleSupplier)
						default to PaidVendor.first SupplierRel.Supplier
				
				ParmSupplierContact
					if (PaidVendor.SingleSupplier
					and DerivedSupplierSourceId entered)
						default to DerivedSupplierSourceId
					else
					if (PaidVendor.SingleSupplierAndContact)
						default to PaidVendor.SupplierRel.PrimaryContact.SupplierSourceId
				
				ParmDialogMessage
					required

				ParmPriority
					initial value is 2

			Local Fields
				LocalSupplierContactMessage        is a SupplierContactMessage view

			Action Rules

				if (!PaidVendor.SingleSupplier)
					constraint (ParmSupplier entered)
						"MustEnterASupplier"

				if (!PaidVendor.SingleSupplierAndContact)
					constraint (ParmSupplierContact entered)
						"MustEnterASupplierContact"		

				constraint (ParmSupplier.Vendor = PaidVendor)
					"SupplierNotValidForVendor"
				
				if (ParmSupplier entered)
					LocalSupplier        = ParmSupplier
				else
					LocalSupplier 		 = PaidVendor.SupplierRel.Supplier
				LocalSupplierContact = ParmSupplierContact					
				
				constraint (SupplierSourceIdValidRel exists)
					"SupplierContactNotValidForSupplier"
				
				constraint (SupplierContactHasPaymentsAccess)
					"SupplierContactDoesNotHaveAccessToPayments"

				invoke Create SupplierContactMessage
					assign result to LocalSupplierContactMessage
					assign result to LocalSupplierContactMessage
					invoked.SupplierGroup  					= ParmSupplierGroup					
 					invoked.Supplier    			 		= ParmSupplier
					invoked.SupplierSourceId                = ParmSupplierContact 
					invoked.MessageTitle					= "Dialog for Payment on Invoice: " + AppaymentRel.PayablesInvoice.Invoice
					invoked.MessageText                     = "User Created Message and Dialog for Payment on Invoice: " + AppaymentRel.PayablesInvoice.Invoice
					invoked.Status							= 1
					invoked.Priority						= ParmPriority
					invoked.ReleaseStatus					= 2
					invoked.MessageOwner                    = actor.agent(Employee).Employee
					invoked.OriginatingCompany              = Company
					invoked.OriginatingInvoice              = AppaymentRel.PayablesInvoice
					invoked.OriginatingPayment              = true

				invoke Create SupplierMessageDialog
					assign result to LocalSupplierContactMessage
					invoked.SupplierGroup  					= ParmSupplierGroup					
 					invoked.Supplier    			 		= ParmSupplier
					invoked.SupplierSourceId                = ParmSupplierContact 
					invoked.SupplierContactMessage 			= LocalSupplierContactMessage.SupplierContactMessage
					invoked.Message                 		= ParmDialogMessage
					invoked.MessageAttachment       		= ParmDialogAttachment
					invoked.ResponseRequested       		= ParmResponseRequested
					invoked.Origin                          = 1		

  	 	UndoManuallyReservedChecks is an Instance Action
  	 		default label is untranslatable
  	 		restricted
			Parameters						
				PrmPaymentAmount				is like CurrencyAmount
				PrmBasePaymentAmount			is like InternationalAmount
				PrmPaidAmountInvoiceCurrency	is like InternationalAmount
				PrmAppliedBaseAmount			is like CurrencyAmount
			Action Rules
				ActionType 								= ActionType.UpdateType
				PaymentAmount							-= PrmPaymentAmount
				BasePaymentAmount.EnteredCurrencyAmount	-= PrmBasePaymentAmount
				PaidAmountInvoiceCurrency				-= PrmPaidAmountInvoiceCurrency 
				AppliedBaseAmount						-= PrmAppliedBaseAmount

				if (PaymentAmount = 0)		
					if 	(CashLedgerPayablesPayment.BankTransactionCode.ManualPaymentNumberReservation
					and  CheckType.ManuallyCreated)
						Status	 		= Status.ReservedForManualPayment
				    	ReleasedStatus 	= ReleasedStatus.Unreleased
				    	PayCurrency		= CashCode.Currency

				    	initialize PayablesCompanyProcessLevel
				    	initialize PaidVendor
				    	initialize PaidName	
				    	initialize RemitToCode
				    	initialize BasePaymentAmount.EnteredCurrencyAmount
				    	initialize PaymentAmount
				    	initialize PaidAmountInvoiceCurrency
				    	initialize Company
				    	initialize PaymentDate
				    	initialize BasePaymentAmount.EnteredCurrencyRate
				    	initialize AppliedBaseAmount

				    else

				    	DeleteFromPayables = true
			   		
			Exit Rules
			   	if (DeleteFromPayables)	
			   		invoke Delete 		

        Update is an Update Action
        	valid when (IsUpdateable)
        	Field Rules
				TransactionIdentifierSequenceNumber
					if (TransactionIdentifierSequenceNumber !entered)
						autosequence using ByTransactionIdentifierSequenceNumber
			    			minimize contention
		    	CashLedgerTransactionIdentifier
		    		if (CashLedgerTransactionIdentifier !entered)
						CashLedgerTransactionIdentifier	= ("P" + TransactionIdentifierSequenceNumber)
        	Action Rules
				constraint (TransactionNumber entered)
					"TransactionNumberRequired"
				if (CheckType.ManuallyCreated)
					if (Status.ReservedForManualPayment)
						Status = Status.PaymentCycleProcessed
						if (ReleasedStatus.Released)
							make transition to Unreleased
							
        		ActionType 							= ActionType.UpdateType
        	Exit Rules
        		if (PaymentDate changed
        		and AppaymentRel exists)
        			for each AppaymentRel
        				if (each.Status.UnreleasedManualPayment)
        					invoke Update each
        						invoked.CheckDate = PaymentDate
        		












						









		RequestVoidOrStopPaymentCashLedgerTransaction is an Instance Action
			default label is "RequestVoidOrStopPayment"
		 	valid when (CanRequestVoidOrStopPaymentCashLedgerTransaction)
			Parameters
				PrmRequestDate	is Date
				PrmApprovalCode	is a ApprovalCode
					default label is "ApprovalCode"
				PrmCommentText	is a CommentText
				PrmRequestType	is Numeric 2
					States
						StopPayment		value is 1
						Void			value is 2
			Parameter Rules
				PrmRequestDate
					initial value is current corporate date 						 
					default to current corporate date	
				PrmApprovalCode
					initial value is CashCode.ApprovalCode
					default to CashCode.ApprovalCode
					if (!CashManagementGroup.ApprovalCodesNotUsedForVoidStopPayments)
						required
							"ApprovalCodeIsRequired"
					constraint (!PrmApprovalCode.ApprovalCodeUsesMaximumAmounts)
						"CannotSelectApprovalCodesSetUpForNonBatchedCashLedgerPayments"
				PrmRequestType
					required
						"RequestTypeIsRequired"					
			Action Rules
				invoke Open.RequestVoidOrStopPayment CbtransRel
					invoked.PrmRequestDate	= PrmRequestDate
					invoked.PrmApprovalCode	= PrmApprovalCode
					invoked.PrmCommentText	= PrmCommentText
					invoked.PrmRequestType	= PrmRequestType

		StopPaymentCashLedgerTransaction is an Instance Action
			default label is "StopPayment"
			valid when (CanVoidOrStopPayCashLedgerTransaction)
			Parameters
				PrmReconcileDate is Date
				PrmCommentText   is a CommentText
				PrmRunPaymentVoidStopPayUpdate is Boolean			
					default label is "RunPaymentVoidStopPayUpdate"
			Parameter Rules
				PrmReconcileDate 						 
					initial value is current corporate date 						 
					default to current corporate date	
			Action Rules						
				if (CbtransRel.Status.Open)
					invoke Open.StopPayment CbtransRel
						invoked.PrmReconcileDate	= PrmReconcileDate
						invoked.PrmCommentText		= PrmCommentText
						invoked.PrmRunPaymentVoidStopPayUpdate	= PrmRunPaymentVoidStopPayUpdate
				if (CbtransRel.Status.StaleDated)
					invoke StaleDated.StopPayment CbtransRel
						invoked.PrmReconcileDate	= PrmReconcileDate
						invoked.PrmCommentText		= PrmCommentText

		ReopenCashLedgerTransaction is an Instance Action
			default label is "Reopen"
			valid when (CanReopenCashLedgerTransaction)
			Action Rules
				if (CbtransRel.Status.Reconciled)
					invoke Reconciled.Reopen CbtransRel
				if (CbtransRel.Status.Voided)
					invoke Voided.Reopen CbtransRel
				if (CbtransRel.Status.StopPayment)
					invoke StopPayment.Reopen CbtransRel
				if (CbtransRel.Status.PendingStopPayConfirmation)		
					invoke PendingStopPayConfirmation.Reopen CbtransRel

		ReopenStaleDatedCashLedgerTransaction is an Instance Action
			default label is "Reopen"
			valid when (CanReopenStaleDatedCashLedgerTransaction)
			Parameters
				PrmPostDate is Date
					default label is "PostDate"
			Action Rules
				invoke StaleDated.Reopen CbtransRel					
					invoked.PrmPostDate = PrmPostDate

		VoidCashLedgerTransaction is an Instance Action
			default label is "Void"
			valid when (CanVoidOrStopPayCashLedgerTransaction)
			Parameters	
				PrmReconcileDate is Date
				PrmCommentText   is a CommentText
				PrmRunPaymentVoidStopPayUpdate is Boolean			
					default label is "RunPaymentVoidStopPayUpdate"
			Parameter Rules
				PrmReconcileDate
					initial value is current corporate date
					default to current corporate date
			Action Rules
				if (CbtransRel.Status.Open)
					invoke Open.Void CbtransRel
						invoked.PrmReconcileDate				= PrmReconcileDate
						invoked.PrmCommentText					= PrmCommentText
						invoked.PrmRunPaymentVoidStopPayUpdate	= PrmRunPaymentVoidStopPayUpdate
				if (CbtransRel.Status.StaleDated)
					invoke StaleDated.Void CbtransRel
						invoked.PrmReconcileDate				= PrmReconcileDate
						invoked.PrmCommentText					= PrmCommentText
				
		PaymentReject is an Instance Action
			valid when (CanRejectPayment)
			Parameters
				PrmRejectDate is Date
					default label is "RejectDate"
				PrmRejectAttachment	is an Attachment		
					default label is "RejectAttachment"
			Action Rules
				RejectDate	= PrmRejectDate
				if (RejectDate not entered)
					default RejectDate to current corporate date
				if (PrmRejectAttachment entered)		
					RejectAttachment = PrmRejectAttachment
				if (CashCode.EnforceDateEditOnVoidStopPaid)		
					constraint (RejectDate >= PaymentDate)		
						"RejectDateCannotBeLessThanPaymentTransactionDate"	
				constraint (not Status.ElectronicPaymentReinstated)
					"CannotMaintainPaymentRejectedAndReinstated"	
				constraint (not Status.ElectronicPaymentCancelled)
					"CannotRejectPaymentAlreadyRejected"		



				LocalRejectDate	= PrmRejectDate		
				include ClosingControlEdits			
				if (AppaymentRel exists
				and Status.StaleDated)
					include StaleDateRejectUpdateForAP	
				Status					= Status.ElectronicPaymentCancelled
				if (CancelRequestType !entered)
					CancelRequestType	= CancelRequestType.Reject
				include IDM.CreateRules 
					replace AttachmentField with RejectAttachment
					

		UndoPaymentReject is an Instance Action
			valid when (Status.ElectronicPaymentCancelled)		
			Action Rules
                constraint (not Status.ElectronicPaymentReinstated)
                	"CannotMaintainPaymentRejectedAndReinstated"	
				constraint (not Status.PaymentCycleClosed)
					"CannotUndoPaymentNotRejected"	
				if (AppaymentRel exists
				and Status.ElectronicPaymentCancelled
				and StaleDate entered)
					include StaleDateRejectUpdateForAP	
				Status = Status.PaymentCycleClosed
				initialize RejectDate
				initialize CancelRequestType
				initialize CreateACHReversal		
				include IDM.DeleteNoArchiveRules
					replace AttachmentField with RejectAttachment

		ReopenCashLedgerPayment is an Instance Action		
			valid when (CanReopenCashLedgerPayment) 
			confirmation required
				"ThisActionReopensAReinstatedRejectedCashLedgerPayment;Continue"
			Parameters
				PrmPostDate		is Date
					default label is "ReopenPostDate"
			Parameter Rules
				PrmPostDate
					initial value is RejectDate
					default to RejectDate
					if (CBCompanySystemClosingControlRel.Control)
						constraint (PrmPostDate within CBCompanySystemClosingControlRel.ValidEntryDate)
							"PostDateNotWithinValidEntryDatesForSystemCode_'\C\B'_andCompany<Company>;ValidDateRangeIs<CBCompanySystemClosingControlRel.ValidEntryDate.Begin>-<CBCompanySystemClosingControlRel.ValidEntryDate.End>"
			Action Rules
				LocalBankRejectionBankTransactionCode = CashPaymentFormatRel.BankRejectionBankTransactionCode
				if (CashCode.NewCashLedgerPaymentForVoid)
					confirmation required
						"NewCashLedgerPaymentsAreCreatedWhenVoiding;OtherRecordsMayAlreadyBeProcessed;Continue"

				constraint (first RejectedCashLedgerTransactionRel.Status.Open)
					"CashLedgerTransactionNumber<TransactionNumber>ForRejectTransactionCode<LocalBankRejectionBankTransactionCode>MustBeInOpenStatus"

				invoke Open.Void first RejectedCashLedgerTransactionRel
					invoked.PrmReconcileDate = PrmPostDate

				initialize RejectDate
				Status = Status.PaymentCycleClosed
				invoke ReopenVoidedPayment CbpaymentRel
					invoked.PrmPostDate	= PrmPostDate 


		PaymentRejectReverseACH is an Instance Action	
			valid when (CanEFTRejectReverseACH)
			Parameters
				PrmRejectDate is Date
					default label is "RejectDate"
				PrmRejectAttachment	is an Attachment		
					default label is "RejectAttachment"
			Action Rules
				CreateACHReversal				= true
				invoke PaymentReject
					invoked.PrmRejectDate		= PrmRejectDate
					invoked.PrmRejectAttachment	= PrmRejectAttachment
				include IDM.CreateRules 
					replace AttachmentField with RejectAttachment
					
		CreateEFTTransaction is an Instance Action	
			default label is untranslatable
			restricted
			Action Rules
				invoke Create CashLedgerElectronicFundsTransferTransaction
					assign result to LocalElectronicFundsTransfer
					fill in fields from this instance							
					invoked.CashCode								= CashCode						
					invoked.CashLedgerElectronicFundsTransferTransaction.BankTransactionCode = CashPaymentFormatRel.BankRejectionBankTransactionCode	
					invoked.Status									= 0		
					invoked.Company									= Company	
					invoked.Currency 								= PayCurrency
        			invoked.Reference								= TransactionNumber
					invoked.CustomerName							= PaidName		
					invoked.ACHPrenotification						= "A" 
					invoked.TransactionType							= "4" 
					invoked.Description								= "EFTRejectReverseACH"
					invoked.TransactionDate							= RejectDate 			
					invoked.ReceiptAmount							= PaymentAmount
					invoked.BankAccountCurrencyNumberOfDecimals 	= BankAccountCurrencyNumberOfDecimals
        			invoked.BaseCurrencyNumberOfDecimals        	= BaseCurrencyNumberOfDecimals
        			invoked.BypassDuplicateEdit						= true
					invoked.AutoNumberingAction						= 2	
				
				invoke Create CashLedgerGLDistribution	
					fill in fields from this instance
	    			invoked.CashCode										= CashCode
	    			invoked.CashLedgerSourceRecord							= "CFT"
					invoked.CashLedgerGLDistribution.BankTransactionCode 	= CashPaymentFormatRel.BankRejectionBankTransactionCode	
					invoked.CashLedgerGLDistribution.TransactionIDNumber 	= LocalElectronicFundsTransfer.CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
					invoked.CashLedgerGLDistribution.DistributionType       = DistType.Entry
					invoked.Company											= Company	
					invoked.Reference                                       = "EFTRejectReverseACH"
	    			invoked.GeneralLedgerSourceCode                         = "CL"		
					invoked.BaseCurrencyNumberOfDecimals				 	= BaseCurrencyNumberOfDecimals
			        invoked.ToBaseCurrencyNumberOfDecimals				 	= BaseCurrencyNumberOfDecimals
			        invoked.ToTransactionCurrencyNumberOfDecimals		 	= TransactionCurrencyNumberOfDecimals
			        invoked.TransactionCurrencyNumberOfDecimals			 	= TransactionCurrencyNumberOfDecimals
					invoked.Status 										 	= 0	
					invoked.RecordType                                      = CashLedgerDistribRecordType.EftPaymentDistribution
					invoked.PostDate									 	= RejectDate			
					invoked.GLTransactionAmount								= (PaymentAmount *-1)	
					invoked.GLFinanceCodeBlock                              = CompanyCashCode.CashAccount
					invoked.CompanyAccountingEntity							= Company.AccountingEntity
					invoked.TransientTransactionNumber						= TransactionNumber
					invoked.TransientTransactionDate						= RejectDate	
					invoked.Description										= "EFTRejectReverseACH"
					invoked.BypassBudgetEditing								= true
					invoked.BypassBudgetAndCommitmentProcessing				= true
					invoked.BypassStatusEdit								= true
					invoked.LocalReleaseGlTransactionDetail					= true
				
				invoke Release LocalElectronicFundsTransfer.CashLedgerElectronicFundsTransferTransaction
									
		MaintainAttachment is an Instance Action		
			valid when (CanUpdateAttachment)
			Parameters
				PrmRejectAttachment	is an Attachment
					default label is "RejectAttachment"
			Action Rules
				include IDM.DeleteNoArchiveRules 
					replace AttachmentField with RejectAttachment
				RejectAttachment = PrmRejectAttachment
				include IDM.CreateRules 
					replace AttachmentField with RejectAttachment

		CashRequirementsDelete is a Delete Action
        	default label is untranslatable
        	restricted

        Delete is a Delete Action
        	valid when (CanBeDeleted)
			Entrance Rules
				ActionType 							= ActionType.DeleteType
				if  (ReleasedStatus.Released
				and !Status.ReservedForManualPayment
				and  AppaymentRel exists
				and !DeleteFromPayables)
					constraint (AppaymentRel.Status > 0)
						"CannotDeletePaymentForUnreleasedInvoice"	
				if (Status.PaymentCycleProcessed)
					constraint (!CheckType = blank)
						"CannotDeletePayment,CheckHasBeenProcessed"		

				if (!DeleteFromPayables)
					invoke UnapplyAllPayablesFromCheck


		FastUpdate is an Update Action
            default label is untranslatable
            restricted
            bypass field rules
			
		ResetManualPayment is an Instance Action
			valid when (ManualPaymentCanBeReset)
			Action Rules
				invoke UnapplyAllPayablesFromCheck

				Status			= Status.ReservedForManualPayment
				ReleasedStatus 	= ReleasedStatus.Released
				PayCurrency 	= CashCode.Currency
				initialize PayablesCompanyProcessLevel
				initialize PaidVendor
				initialize PaidName	
				initialize RemitToCode
				initialize BasePaymentAmount.EnteredCurrencyAmount
				initialize PaymentAmount
				initialize PaidAmountInvoiceCurrency
				initialize Company
				initialize PaymentDate
				initialize BasePaymentAmount.EnteredCurrencyRate
				initialize AppliedBaseAmount

		SelectAllInvoices is an Instance Action	
			valid when (PaymentHelperListIsValid)
			Parameters
				PrmPayThroughDate is Date
					default label is "PayThroughDate"

			Parameter Rules
				PrmPayThroughDate
					initial value is PaymentDate
					default to PaymentDate

			Action Rules
				invoke SelectAllInvoicesForManualPaymentSet PayablesInvoicePayment
					invoked.PrmCashManagementGroup		 = CashManagementGroup
					invoked.PrmPayGroup 			  	 = PayGroup
					invoked.PrmPayCurrency 				 = PayCurrency
					invoked.PrmPayVendor 				 = PaidVendor
					invoked.PrmCashCode 				 = CashCode
					invoked.PrmCashLedgerSourceRecord 	 = CashLedgerSourceRecord
					invoked.PrmCashLedgerPayablesPayment = CashLedgerPayablesPayment
					invoked.PrmPayThroughDate			 = PrmPayThroughDate

		UnapplyAllPayablesFromCheck is an Instance Action
			valid when (IsUnapplyable)		
			Action Rules
				invoke UnapplyFromCheck AppaymentRel					
				initialize PaidAmountInvoiceCurrency
				initialize AppliedBaseAmount
				initialize AppliedAmountBankAccountCurrency
				if (CashLedgerPayablesPayment.BankTransactionCode.ManualPaymentNumberReservation)
					Status = Status.ReservedForManualPayment
					ReleasedStatus = ReleasedStatus.Released
				else
					Status = Status.PaymentCycleProcessed
					ReleasedStatus = ReleasedStatus.Unreleased


		UpdateNetAmounts is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmAction				is Alpha 6
					States
						Add			value is "Add"
						Remove		value is "Remove"
				PrmPaymentAmount		is an InternationalAmount
				PrmBaseNetPaymentAmount is an InternationalAmount
				PrmBankCheckAmount		is an InternationalAmount
			Action Rules






				if (PrmAction.Add)
					PaidAmountInvoiceCurrency 											+= PrmPaymentAmount		

					AppliedBaseAmount.BaseAmount.EnteredCurrencyAmount					+= PrmBaseNetPaymentAmount	
					AppliedAmountBankAccountCurrency.BaseAmount.EnteredCurrencyAmount	+= PrmBankCheckAmount
				else
				if (PrmAction.Remove)
					PaidAmountInvoiceCurrency 											-= PrmPaymentAmount		

					AppliedBaseAmount.BaseAmount.EnteredCurrencyAmount					-= PrmBaseNetPaymentAmount	
					AppliedAmountBankAccountCurrency.BaseAmount.EnteredCurrencyAmount 	-= PrmBankCheckAmount



			Exit Rules
				invoke Update



				if (AppliedBaseAmount.BaseAmount.EnteredCurrencyAmount = 0)
					if (CashLedgerPayablesPayment.BankTransactionCode.ManualPaymentNumberReservation
					and AppaymentRel not exists)
						Status = Status.ReservedForManualPayment
						ReleasedStatus = ReleasedStatus.Released
					else
						Status = Status.PaymentCycleProcessed
						ReleasedStatus = ReleasedStatus.Unreleased

		UpdateBaseRateAndAmount is an Instance Action	
			default label is untranslatable
			restricted
			Parameters
				PrmCurrencyRate	is a CurrencyExchangeRate 
			Action Rules
				if (BasePaymentAmount.EnteredCurrencyRate != PrmCurrencyRate)
					BasePaymentAmount.EnteredCurrencyRate 				= PrmCurrencyRate
					initialize BasePaymentAmount.EnteredCurrencyAmount
					BasePaymentAmount.EnteredCurrencyAmount				= BasePaymentAmount.OutputCurrencyAmount
					AppliedBaseAmount.BaseAmount.EnteredCurrencyRate	= PrmCurrencyRate
					AppliedBaseAmount.BaseAmount.EnteredCurrencyAmount	= BasePaymentAmount.OutputCurrencyAmount

		SetAsReservedForManualPayment is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				Status = Status.ReservedForManualPayment
				CheckType = CheckType.ManuallyCreated
				ReleasedStatus = ReleasedStatus.Unreleased
				
				initialize PaymentAmount
				initialize BasePaymentAmount.EnteredCurrencyAmount
		    	initialize Company
				initialize PaymentDate
				initialize PaidAmountInvoiceCurrency
				initialize BasePaymentAmount.EnteredCurrencyRate
				initialize AppliedBaseAmount
				initialize PaymentAmountBankAccountCurrency
				initialize AppliedAmountBankAccountCurrency
				initialize PayablesCompanyProcessLevel
				initialize PaidVendor
				initialize PaidName
				initialize RemitToCode
				initialize PayCurrency

		CashLedgerPaymentTempHoldUpdates is an Update Action
			default label is untranslatable
			restricted
			Action Rules
				ActionType 							= ActionType.UpdateType
				if (CashLedgerPaymentTempHold = "A")  
					TemporaryHold = CashLedgerPaymentTempHold
				else
					if (CashLedgerPaymentTempHold = "R") 
						invoke Delete					
						
		ConfirmPaymentRecord is an Instance Action
			valid when (ConfirmationAllowed)
			Parameters
				PrmCashLedgerUpdateAction	is Numeric 2
			    	States
			    		Accepted	value is 1
			    		Rejected	value is 2
				PrmActionDate				is Date
				PrmConfirmationNumber		is like ConfirmationNumber
				PrmUpdateComment			is Alpha 150
			Parameter Rules
				PrmCashLedgerUpdateAction
					required
						"SelectAnUpdateAction"
					if (PrmCashLedgerUpdateAction.Rejected)
						constraint (Status.PaymentCycleClosed)
							"RecordInStatus:<Status>;CannotReject"
						if (!IsSummarizedPayment)
							constraint (CbtransRel.Status.Open)
								"CashLedgerTransactionInStatus:<CbtransRel.Status>;CannotReject"


				PrmConfirmationNumber
					if (PrmCashLedgerUpdateAction.Accepted)
						required
							"ConfirmationNumberRequiredForUpdateAction:<PrmCashLedgerUpdateAction>"
						if (ConfirmationNumber	entered)
							confirmation required
								"ConfirmationNumber:<ConfirmationNumber>AlreadyEntered;OverrideWith:<PrmConfirmationNumber>"
					else
						cannot be entered
			Action Rules
				invoke UpdateFromBankUpdateFile
					invoked.PrmCashLedgerUpdateAction	= PrmCashLedgerUpdateAction
					invoked.PrmActionDate				= PrmActionDate
					invoked.PrmConfirmationNumber		= PrmConfirmationNumber
					invoked.PrmUpdateComment			= PrmUpdateComment


		UpdateBankIssuedPaymentRecord is an Instance Action
			valid when (BankUpdateAllowed)	
			Parameters
				PrmCashLedgerUpdateAction	is Numeric 2
			    	States
			    		Accepted	value is 1
			    		Rejected	value is 2
			    		CheckNumber	value is 3
			    		Paid		value is 4
			    		Escheat		value is 5
			    		StaleDate	value is 12	
				PrmActionDate				is Date
				PrmConfirmationNumber		is like ConfirmationNumber
				PrmCheckNumber				is like TransactionNumber
				PrmIgnoreDuplicates			is Boolean	
				PrmUpdateComment			is Alpha 150
			Parameter Rules
				PrmCashLedgerUpdateAction
					required
						"SelectAnUpdateAction"
					if (PrmCashLedgerUpdateAction.CheckNumber
					or 	PrmCashLedgerUpdateAction.Paid
					or  PrmCashLedgerUpdateAction.Escheat
					or  PrmCashLedgerUpdateAction.StaleDate)	
						constraint (IsBankIssuedPaymentNumber)
							"ActionOnlyValidForBankIssuedTransactionNumber"	
					if (PrmCashLedgerUpdateAction.Rejected)
						constraint (Status.PaymentCycleClosed)
							"RecordInStatus:<Status>;CannotReject"
						if (!IsSummarizedPayment)
							constraint (CbtransRel.Status.Open)
								"CashLedgerTransactionInStatus:<CbtransRel.Status>;CannotReject"


					if (PrmCashLedgerUpdateAction.Paid
					and PaidDate 				entered)
						confirmation required
							"PaymentAlreadyPaidOn<PaidDate>;OverrideWith:<PrmActionDate>"
					if (PrmCashLedgerUpdateAction.Escheat)
						constraint (Status.PaymentCycleClosed
						or          Status.StaleDated)		
							"RecordInStatus:<Status>;CannotEscheat"
						constraint (TransactionNumber entered)	
							"BankIssuedTransactionNumberNotDefined;CannotEscheat"
						constraint (!SummarizedPaymentIsVoided)	
							"CashLedgerTransactionInStatus:<first CashLedgerTransactionTapeRel.Status>;CannotEscheat"				
						if (!IsSummarizedPayment)				
							constraint (CbtransRel.Status.Open
							or			CbtransRel.Status.StaleDated)
								"CashLedgerTransactionInStatus:<CbtransRel.Status>;CannotEscheat"
					if (PrmCashLedgerUpdateAction.StaleDate)	
						constraint (Status.PaymentCycleClosed)
							"RecordInStatus:<Status>;CannotStaleDate"
						constraint (TransactionNumber entered)	
							"BankIssuedTransactionNumberNotDefined;CannotStaleDate"	
						constraint (!SummarizedPaymentIsVoided)	
							"CashLedgerTransactionInStatus:<first CashLedgerTransactionTapeRel.Status>;CannotStaleDate"	
						if (!IsSummarizedPayment)				
							constraint (CbtransRel.Status.Open)
								"CashLedgerTransactionInStatus:<CbtransRel.Status>;CannotStaleDate"		
				PrmActionDate
					if (PrmCashLedgerUpdateAction.Paid
					or  PrmCashLedgerUpdateAction.Escheat
					or  PrmCashLedgerUpdateAction.StaleDate)	
						required
							"ActionDateRequired"
				PrmConfirmationNumber
					if (PrmCashLedgerUpdateAction.Accepted)
						required
							"ConfirmationNumberRequiredForUpdateAction:<PrmCashLedgerUpdateAction>"
						if (ConfirmationNumber	entered)
							confirmation required
								"ConfirmationNumber:<ConfirmationNumber>AlreadyEntered;OverrideWith:<PrmConfirmationNumber>"
					else
						cannot be entered
				PrmCheckNumber
					if (PrmCashLedgerUpdateAction.CheckNumber)
						required
							"CheckNumberRequiredForUpdateAction:<PrmCashLedgerUpdateAction>"
						LocalCheckNumber	= PrmCheckNumber	
						constraint (PrmCheckNumber is numeric
						and   		PrmCheckNumber > "0000000000000000000000")	
							"CheckNumberMustBeNumericAndGreaterThanZero"
						if (TransactionNumber	entered)
							constraint (TransactionNumber != PrmCheckNumber)
								"CheckNumberAlreadyAssignedToPaymentRecord" 

							if (first CashLedgerPayablesPaymentByTranNbrRel exists)	
								constraint (PrmIgnoreDuplicates)					
									"CheckNumber<PrmCheckNumber>:AlreadyAssignedToAnotherPaymentRecord"
							confirmation required
								"CheckNumber:<TransactionNumber>AlreadyEntered;OverrideWith:<PrmCheckNumber>"
						else

							if (first CashLedgerPayablesPaymentByTranNbrRel exists)	
								constraint (PrmIgnoreDuplicates)					
									"CheckNumber<PrmCheckNumber>:AlreadyAssignedToAnotherPaymentRecord"		
					else
						cannot be entered
			Action Rules
				invoke UpdateFromBankUpdateFile
					invoked.PrmCashLedgerUpdateAction	= PrmCashLedgerUpdateAction
					invoked.PrmActionDate				= PrmActionDate
					invoked.PrmConfirmationNumber		= PrmConfirmationNumber
					invoked.PrmCheckNumber				= PrmCheckNumber	
					invoked.PrmUpdateComment			= PrmUpdateComment


		UpdateFromBankUpdateFile is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmCashLedgerUpdateAction	is a CashLedgerUpdateAction
				PrmActionDate				is Date
				PrmConfirmationNumber		is like ConfirmationNumber
				PrmCheckNumber				is like TransactionNumber
				PrmUpdateComment			is Alpha up to 250	
				PrmPostDate					is Date
			Action Rules
				if (PrmCashLedgerUpdateAction.Accepted)
					ConfirmationNumber	= PrmConfirmationNumber
					CommentText			+= PrmUpdateComment
					invoke UpdateConfirmationNumber CbtransRel	
						invoked.PrmConfirmationNumber	= PrmConfirmationNumber
				if (PrmCashLedgerUpdateAction.Rejected)
					if (IsSummarizedPayment
					or  CashLedgerPayablesPayment.BankTransactionCode.AllowDetailPaymentReject)
						invoke PaymentReject
							invoked.PrmRejectDate	= PrmActionDate
					else
						if (CashCode.EnforceDateEditOnVoidStopPaid)		
							constraint (PrmActionDate >= PaymentDate)		
								"RejectDateCannotBeLessThanPaymentTransactionDate"
						if (CBCompanySystemClosingControlRel.Control)	
							constraint (PrmActionDate within CBCompanySystemClosingControlRel.ValidEntryDate)
								"RejectDateOutsideValidDateRangeOf:<CBCompanySystemClosingControlRel.ValidEntryDate.Begin>-<CBCompanySystemClosingControlRel.ValidEntryDate.End>ForCBCompany<Company>"





						LocalRejectDate	= PrmActionDate		
						include ClosingControlEdits			
						
						invoke Open.Void CbtransRel
							invoked.PrmReconcileDate = PrmActionDate
							invoked.PrmCommentText   = PrmUpdateComment
					CommentText			+= PrmUpdateComment
				if (PrmCashLedgerUpdateAction.CheckNumber)
					TransactionNumber	= PrmCheckNumber
					CommentText			+= PrmUpdateComment
					if (CheckType.CbPayment)
						invoke UpdateTransactionNumber CbpaymentRel
							invoked.PrmTransactionNumber	= PrmCheckNumber
					else
						invoke UpdateTransactionNumber AppaymentRel
							invoked.PrmTransactionNumber	= PrmCheckNumber
					invoke UpdateTransactionNumber CbtransRel
						invoked.PrmTransactionNumber	= PrmCheckNumber
				if (PrmCashLedgerUpdateAction.Paid)
					PaidDate			= PrmActionDate
					CommentText			+= PrmUpdateComment
				if (PrmCashLedgerUpdateAction.Escheat
				or  PrmCashLedgerUpdateAction.StaleDate)	
					constraint (StaleDatingGLAccountByProcessLevelRel	exists
					or    		StaleDatingGLAccountRel					exists)
						"StaleDatingAccountsRequiredForCompany<Company>CashCode<CashCode>"
					if (CbtransRel exists)
						if (PrmCashLedgerUpdateAction.StaleDate)	
							invoke Open.StaleDateFromBankUpdateFile CbtransRel
								invoked.PrmStaleDate		= PrmActionDate
						else
							if (CbtransRel.Status.Open)	
								invoke Open.EscheatFromBankUpdateFile CbtransRel
									invoked.PrmEscheatDate	= PrmActionDate
							else
								invoke StaleDated.EscheatFromBankUpdateFile CbtransRel	
									invoked.PrmEscheatDate	= PrmActionDate
					StaleDate			= PrmActionDate
					CommentText			+= PrmUpdateComment
					if (PrmCashLedgerUpdateAction.StaleDate)	
						Status			= Status.StaleDated
					else
						if (Status.PaymentCycleClosed)	
							LocalOpenToEscheat = true
						Status			= Status.Escheated
					if (CbtransRel not exists)	
					    if (PrmCashLedgerUpdateAction.StaleDate

						or  LocalOpenToEscheat)						
							invoke CreateFromCashLedgerWithoutEdits CashLedgerTransaction	
								invoked.CashManagementGroup					= CashManagementGroup
								invoked.BankTransactionCode 				= CashPaymentFormatRel.BankRejectionBankTransactionCode	

								invoked.CashCode							= CashCode
								invoked.CashLedgerSourceRecord				= CashLedgerSourceRecord.CashLedgerTransaction
								invoked.TransactionNumber 					= TransactionNumber
								invoked.SourceCode 							= "AP" 	
								invoked.Status 								= 1 
								invoked.Currency 							= PayCurrency
								invoked.Description							= "BankUpdateStaleDate"	
								invoked.Company								= Company
								invoked.Reference							= "BankUpdateStaleDate"	
								invoked.GeneralLedgerPostDate				= PrmPostDate	
			        			invoked.TransactionCurrencyNumberOfDecimals = TransactionCurrencyNumberOfDecimals
			       	 			invoked.BaseCurrencyNumberOfDecimals 		= BaseCurrencyNumberOfDecimals
			        			invoked.BankAccountCurrencyNumberOfDecimals	= BankAccountCurrencyNumberOfDecimals
			        			invoked.IssuedBankAmount			 		= PaymentAmountBankAccountCurrency.EnteredCurrencyAmount 
								invoked.IssueTranAmt						= PaymentAmount	 
								invoked.IssueDate							= PrmActionDate	
								invoked.LocalReinstatedPaymentReject 		= true		
					invoke CreateEscheatDistribFromBankUpdate CashLedgerGLDistribution
		    			fill in fields from this instance
		    			invoked.CashCode										= CashCode
		    			invoked.CashLedgerSourceRecord							= CashLedgerSourceRecord
						invoked.CashLedgerGLDistribution.BankTransactionCode 	= CashLedgerPayablesPayment.BankTransactionCode
						invoked.CashLedgerGLDistribution.TransactionIDNumber 	= CashLedgerPayablesPayment.TransactionIDNumber
						invoked.CashLedgerGLDistribution.DistributionType	 	= "S"
						if (!CbtransRel exists)	
							invoked.CashLedgerGLDistribution.SequenceNumber		= (last CbdistribRel.CashLedgerGLDistribution.SequenceNumber + 1)





						invoked.Company											= Company	
						invoked.Reference										= TransactionNumber
						if (PrmCashLedgerUpdateAction.Escheat)
							invoked.Description									= "Escheatment"					
		    			invoked.GeneralLedgerSourceCode                         = "CL"		
						invoked.BaseCurrencyNumberOfDecimals				 	= BaseCurrencyNumberOfDecimals
				        invoked.ToBaseCurrencyNumberOfDecimals				 	= BaseCurrencyNumberOfDecimals
				        invoked.ToTransactionCurrencyNumberOfDecimals		 	= TransactionCurrencyNumberOfDecimals
				        invoked.TransactionCurrencyNumberOfDecimals			 	= TransactionCurrencyNumberOfDecimals
						invoked.Status 										 	= 1
						invoked.RecordType										= "S"
						invoked.PostDate									 	= PrmPostDate	
						if (PrmCashLedgerUpdateAction.StaleDate)								
							if (StaleDatingGLAccountByProcessLevelRel exists)
								invoked.GLFinanceCodeBlock					    = StaleDatingGLAccountByProcessLevelRel.StaleDateAccount
							else
								invoked.GLFinanceCodeBlock						= StaleDatingGLAccountRel.StaleDateAccount
						else
							if (StaleDatingGLAccountByProcessLevelRel exists)
								invoked.GLFinanceCodeBlock					    = StaleDatingGLAccountByProcessLevelRel.EscheatmentAccount
							else
								invoked.GLFinanceCodeBlock						= StaleDatingGLAccountRel.EscheatmentAccount		
						invoked.GLTransactionAmount								= (PaymentAmount *-1)	
						invoked.CompanyAccountingEntity							= Company.AccountingEntity
						invoked.TransientTransactionNumber						= TransactionNumber
						invoked.TransientTransactionDate						= PrmActionDate
					
					invoke CreateEscheatDistribFromBankUpdate CashLedgerGLDistribution
		    			fill in fields from CashLedgerPayablesPayment
		    			invoked.CashCode										= CashCode
		    			invoked.CashLedgerSourceRecord							= CashLedgerSourceRecord
						invoked.CashLedgerGLDistribution.BankTransactionCode 	= CashLedgerPayablesPayment.BankTransactionCode
						invoked.CashLedgerGLDistribution.TransactionIDNumber 	= CashLedgerPayablesPayment.TransactionIDNumber
						invoked.CashLedgerGLDistribution.DistributionType	 	= "S"
						if (!CbtransRel exists)	
							invoked.CashLedgerGLDistribution.SequenceNumber		= (last CbdistribRel.CashLedgerGLDistribution.SequenceNumber + 1)





						invoked.Company											= Company	
						invoked.Reference										= TransactionNumber
						if (PrmCashLedgerUpdateAction.Escheat)
							invoked.Description									= "Escheatment"				
		    			invoked.GeneralLedgerSourceCode                         = "CL"		
						invoked.BaseCurrencyNumberOfDecimals				 	= BaseCurrencyNumberOfDecimals
				        invoked.ToBaseCurrencyNumberOfDecimals				 	= BaseCurrencyNumberOfDecimals
				        invoked.ToTransactionCurrencyNumberOfDecimals		 	= TransactionCurrencyNumberOfDecimals
				        invoked.TransactionCurrencyNumberOfDecimals			 	= TransactionCurrencyNumberOfDecimals
						invoked.Status 										 	= 1
						invoked.RecordType										= "S"
						invoked.PostDate									 	= PrmPostDate	
						if (PrmCashLedgerUpdateAction.StaleDate)	
							invoked.GLFinanceCodeBlock					        = CompanyCashCode.CashAccount						
						else
							if (LocalOpenToEscheat)		
								invoked.GLFinanceCodeBlock					    = CompanyCashCode.CashAccount
							else	
								if (CbtransRel exists					
								and CbtransRel.StaleDateAccount entered)
									invoked.GLFinanceCodeBlock					= CbtransRel.StaleDateAccount
								else	
									if (StaleDatingGLAccountByProcessLevelRel exists)
										invoked.GLFinanceCodeBlock				= StaleDatingGLAccountByProcessLevelRel.StaleDateAccount
									else
										invoked.GLFinanceCodeBlock				= StaleDatingGLAccountRel.StaleDateAccount	
						invoked.GLTransactionAmount								= PaymentAmount	
						invoked.CompanyAccountingEntity							= Company.AccountingEntity
						invoked.TransientTransactionNumber						= TransactionNumber
						invoked.TransientTransactionDate						= PrmActionDate

				
		RequestVoidOrStopPayment is an Instance Action
			completion message is "RequestForVoidOrStopPaymentHasBeenSubmittedToTheQueueForProcessing"
		 	valid when (CanVoidOrStopPayBankIssuedPaymentRecord)
			Parameters
				PrmApprovalCode is an ApprovalCode
				PrmRequestDate	is Date
				PrmCommentText	is a CommentText
				PrmRequestType	is Numeric 2
					States
						StopPayment		value is 1
						Void			value is 2

			Parameter Rules
				PrmApprovalCode
					initial value is CashCode.ApprovalCode
					default to CashCode.ApprovalCode
					if (!CashManagementGroup.ApprovalCodesNotUsedForVoidStopPayments)
						required
							"ApprovalCodeIsRequired"
					constraint (!PrmApprovalCode.ApprovalCodeUsesMaximumAmounts)
						"CannotSelectApprovalCodesSetUpForNonBatchedCashLedgerPayments"
				PrmRequestDate
					initial value is current corporate date 						 
					default to current corporate date	
				PrmRequestType
					required
						"RequestTypeIsRequired"					
			
			Action Rules
				RejectDate			= PrmRequestDate
				CommentText			+= PrmCommentText
				CancelRequestType	= PrmRequestType
				



				LocalRejectDate	= PrmRequestDate	
				include ClosingControlEdits			

				if (CashManagementGroup.VoidStopPaymentApprovalRequired)
					if (!CashManagementGroup.ApprovalCodesNotUsedForVoidStopPayments)
						ApprovalCode	= PrmApprovalCode
						constraint (ApprovalCode.HasApprovalLevels) 
							"CannotComplete;TheApprovalCodeHasNoApprovalLevels"
						constraint (!ApprovalCode.HasTeamWithNoMembers) 
							"CannotComplete;TheApprovalCodeHasATeamWithNoMembers"
						constraint (!ApprovalCode.HasInvalidEscalations)
							"CannotComplete:TheApprovalCodeHasInvalidEscalationSettings"
						constraint (!ApprovalCode.HasInactiveResources)
							"CannotComplete;TheApprovalCodeHasInactiveResources"
		
						initialize ApprovalLevel
						initialize Approver
						initialize ApproverTeam	
						include GetNextApprovalLevel
						ApprovalLevel = LocalApprovalLevel
						Approver = LocalApprover
						ApproverTeam = LocalApproverTeam
					include InitiateApprovalProcessFlow
				
					Status = Status.VoidStopPaymentRequested
				else
					invoke PaymentReject
						invoked.PrmRejectDate	= PrmRequestDate
						
						

		UpdateApprovalLevel is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				ParmEscalate	is Boolean
				ParmReassign	is Boolean
			Action Rules

				if (ParmReassign)
					if (ReassignToApprovalLevel entered)
						ApprovalLevel = ReassignToApprovalLevel.ApprovalLevel
						initialize ReassignToApprovalLevel
				else
				if (ParmEscalate)
					include GetNextEscalationApprovalLevel
					ApprovalLevel		= LocalApprovalLevel
					Approver			= LocalApprover
					ApproverTeam		= LocalApproverTeam
				else
					include GetNextApprovalLevel
					ApprovalLevel		= LocalApprovalLevel
					Approver			= LocalApprover
					ApproverTeam		= LocalApproverTeam

		Approve is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	

				if  (IsCashLedgerPayment
				and  ReissuedCashLedgerPaymentRel.Status.PendingStopPaymentApproval)
					invoke PendingStopPaymentApproval.MoveToUnreleased ReissuedCashLedgerPaymentRel
					invoke Unreleased.ReleaseFromPendingStopPaymentApproval ReissuedCashLedgerPaymentRel
				invoke PaymentReject
					invoked.PrmRejectDate	= RejectDate
				
		Reject is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				if  (IsCashLedgerPayment
				and  ReissuedCashLedgerPaymentRel.Status.PendingStopPaymentApproval)
					invoke PendingStopPaymentApproval.RejectPendingStopPayment ReissuedCashLedgerPaymentRel
				if(StaleDate entered)
					Status = Status.StaleDated
				else
					Status = 2 
				
				initialize RejectDate
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	


		RejectWithReasonCode is an Instance Action
			default label is untranslatable
			restricted
			subject is RejectVoidOrStopPaymentRequest
			reason code required
			action comment required

			Action Rules
				if  (IsCashLedgerPayment
				and  ReissuedCashLedgerPaymentRel.Status.PendingStopPaymentApproval)
					invoke PendingStopPaymentApproval.RejectPendingStopPayment ReissuedCashLedgerPaymentRel
				Status = 2 
				
				initialize RejectDate
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	

			Exit Rules
				invoke Create CashLedgerPayablesPaymentReasonCodeUsage
					invoked.CashManagementGroup			= CashManagementGroup
					invoked.CashCode					= CashCode
					invoked.CashLedgerSourceRecord		= CashLedgerSourceRecord
					invoked.CashLedgerPayablesPayment	= CashLedgerPayablesPayment
					invoked.ReasonCode					= reason code
					invoked.Description					= reason code.Description
					invoked.Type						= 1 
					invoked.Comment						= action comment	
				
		ManualApprove is an Instance Action
			valid when (Status.VoidStopPaymentRequested)
			confirmation required
				"ThisWillBypassTheProcessFlowApprovalProcess;DoYouWantToContinue?"
			Action Rules
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	

				if  (IsCashLedgerPayment
				and  ReissuedCashLedgerPaymentRel.Status.PendingStopPaymentApproval)
					invoke PendingStopPaymentApproval.MoveToUnreleased ReissuedCashLedgerPaymentRel
					invoke Unreleased.ReleaseFromPendingStopPaymentApproval ReissuedCashLedgerPaymentRel
				invoke PaymentReject
					invoked.PrmRejectDate	= RejectDate
				
				cancel DetailPaymentVoidStopPayApproval process

						
		ManualReject is an Instance Action
			valid when (Status.VoidStopPaymentRequested)
			subject is RejectVoidOrStopPaymentRequest
			Parameters
				PrmComment		is Alpha size up to 500
			Action Rules
				if (CashManagementGroup.RejectVoidStopPaymentReasonCodeRequired)			
					constraint (reason code entered)
						"ReasonCodeIsRequiredForRejectingVoidOrStopPaymentRequests"												
			
				initialize RejectDate
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	
				
				if  (IsCashLedgerPayment
				and  ReissuedCashLedgerPaymentRel.Status.PendingStopPaymentApproval)
					invoke PendingStopPaymentApproval.RejectPendingStopPayment ReissuedCashLedgerPaymentRel
				if(StaleDate entered)
					Status = Status.StaleDated
				else
					Status = 2 
				
				cancel DetailPaymentVoidStopPayApproval process

			Exit Rules
				invoke Create CashLedgerPayablesPaymentReasonCodeUsage
					invoked.CashManagementGroup			= CashManagementGroup
					invoked.CashCode					= CashCode
					invoked.CashLedgerSourceRecord		= CashLedgerSourceRecord
					invoked.CashLedgerPayablesPayment	= CashLedgerPayablesPayment
					invoked.ReasonCode					= reason code
					invoked.Description					= reason code.Description
					invoked.Type						= 1 
					invoked.Comment						= PrmComment	

		CreateAPCloseCashLedgerTransaction is an Instance Action	
			default label is untranslatable
			restricted
			Parameters
				PrmSerialNumber						is like  SerialNum
				PrmTransactionNumber				is like  TransactionNumber
				PrmSummarizedPaymentAmount			is an InternationalAmount	
				PrmSummarizedBankPaymentAmount		is an InternationalAmount	
				PrmSummarizedBasePaymentAmount		is an InternationalAmount	
				PrmBaseInvoiceRate					is a  CurrencyExchangeRate	
				PrmTriggerIDMAction					is Boolean
				PrmRunInBackgroundGroup				is Boolean
			Action Rules
				invoke Unreleased.CreateFromPayables CashLedgerTransaction
					fill in fields from this instance
						except invoked.TransactionIdentifierSequenceNumber
						except invoked.CashLedgerSourceRecord
						except invoked.PayeeName
						except invoked.PayeeFirstName	
						except invoked.PayeeMiddleName	
				        except invoked.MailingName 	                    
				        except invoked.ConfirmationNumber					
				        except invoked.PayCurrency                         
				        except invoked.PaymentAmount                       
				        except invoked.PayeePostalAddress                 
				        except invoked.BankName
				        except invoked.BankPostalAddress					
						except invoked.BankAccountNumber
						except invoked.BankEntity
						except invoked.BankAccountType
						except invoked.GlobalBankAccountType	
						except invoked.CrossBorderIdentifier
						except invoked.SwiftID
						except invoked.ChargeCode
						except invoked.IntermediaryBankName				
				        except invoked.IntermediaryBankPostalAddress		
				        except invoked.IntermediaryBankEntity				
				        except invoked.IntermediaryCrossBorderIdentifier	
				        except invoked.IntermediarySwiftID	
				        except invoked.TransactionData1	
				        except invoked.TransactionData2	
				        except invoked.TransactionData3	
				        except invoked.TransactionData4	
					if (CashLedgerPayablesPayment.BankTransactionCode.PaymentSummarization
					and LastElectronicPaymentSerialNumber entered) 	
						invoked.CashLedgerSourceRecord									= "CBT"
						invoked.SummaryOption											= "Y"
						invoked.Description												= "SummarizedPayment"
						invoked.TransactionNumber 										= PrmSerialNumber
						invoked.LastElectronicPaymentSerialNumber						= PrmSerialNumber
						invoked.CashLedgerTransaction									= blank
						invoked.CashLedgerTransactionIdentifier							= blank
						invoked.IssuedBankAmount										= PrmSummarizedBankPaymentAmount	

						invoked.IssueTranAmt											= PrmSummarizedPaymentAmount
					else																
						invoked.CashLedgerSourceRecord									= CashLedgerSourceRecord
						invoked.SummaryOption											= ""															
						invoked.Description												= PaidName
						invoked.TransactionNumber 										= TransactionNumber
						invoked.LastElectronicPaymentSerialNumber						= LastElectronicPaymentSerialNumber
						invoked.CashLedgerTransaction									= CashLedgerPayablesPayment.TransactionIDNumber
						invoked.IssuedBankAmount			 							= PaymentAmountBankAccountCurrency.EnteredCurrencyAmount 


						invoked.IssueTranAmt											= PaymentAmount

				        invoked.MailingName 	                    					= MailingName
				        invoked.ConfirmationNumber										= ConfirmationNumber
				        invoked.PayCurrency												= PayCurrency                         
				        invoked.PaymentAmount                       					= PaymentAmount
				        invoked.PayeePostalAddress                 						= PayeePostalAddress
				        invoked.BankName												= BankName
				        invoked.BankPostalAddress										= BankPostalAddress
						invoked.BankAccountNumber										= BankAccountNumber
						invoked.BankEntity												= BankEntity
						invoked.CrossBorderIdentifier									= CrossBorderIdentifier
						invoked.SwiftID													= SwiftID
						invoked.ChargeCode												= ChargeCode
						invoked.IntermediaryBankName									= IntermediaryBankName		
				        invoked.IntermediaryBankPostalAddress							= IntermediaryBankPostalAddress	
				        invoked.IntermediaryBankEntity									= IntermediaryBankEntity
				        invoked.IntermediaryCrossBorderIdentifier						= IntermediaryCrossBorderIdentifier
				        invoked.IntermediarySwiftID										= IntermediarySwiftID
				        invoked.TransactionData1										= TransactionData1
				        invoked.TransactionData2										= TransactionData2
				        invoked.TransactionData3										= TransactionData3
				        invoked.TransactionData4										= TransactionData4
						if (IsCashLedgerPayment)										
							invoked.BankAccountType										= CashLedgerPaymentRel.BankAccountType
							invoked.GlobalBankAccountType								= CashLedgerPaymentRel.GlobalBankAccountType	
							invoked.PayeeName											= CashLedgerPaymentRel.PayeeName				
							invoked.PayeeFirstName										= CashLedgerPaymentRel.PayeeFirstName			
							invoked.PayeeMiddleName										= CashLedgerPaymentRel.PayeeMiddleName			
						else
							invoked.BankAccountType										= PaidVendor.BankAccountType
							invoked.GlobalBankAccountType								= PaidVendor.GlobalBankAccountType				
							invoked.PayeeName											= PaidName  
					if (IsCashLedgerPayment)
						invoked.LastDistributionSequence						= CashLedgerPaymentRel.LastDistributionSequence
						invoked.Type											= "C"
					invoked.PayablesCompanyVendorProcLevel.PayablesCompany		= PayablesCompanyProcessLevel.PayablesCompany
					invoked.PayablesCompanyVendorProcLevel.PayablesProcessLevel	= PayablesCompanyProcessLevel.PayablesProcessLevel
					invoked.PayablesCompanyVendorProcLevel.Vendor				= PaidVendor
					invoked.PayGroup											= PayGroup
					invoked.CashManagementGroup									= CashManagementGroup
					invoked.BankTransactionCode 								= CashLedgerPayablesPayment.BankTransactionCode
					invoked.CashCode											= CashCode
					invoked.SourceCode 											= "AP"
					invoked.Currency 											= PayCurrency
					invoked.BankAccountCurrencyExchangeRate						= AppliedBaseAmount.BaseAmount.EnteredCurrencyRate
					invoked.Company												= Company
					invoked.IssueDate											= PaymentDate
					invoked.Currency											= PayCurrency
					invoked.Reference											= "PaymentClose"
        			invoked.TransactionCurrencyNumberOfDecimals 				= TransactionCurrencyNumberOfDecimals
       	 			invoked.BaseCurrencyNumberOfDecimals 						= BaseCurrencyNumberOfDecimals
        			invoked.BankAccountCurrencyNumberOfDecimals					= BankAccountCurrencyNumberOfDecimals	 


			        					 
				if (CashLedgerPayablesPayment.BankTransactionCode.PaymentSummarization											
				and LastElectronicPaymentSerialNumber entered)																	
					if (!PrmRunInBackgroundGroup)
						invoke TriggerRemitAdviceSet CashLedgerPayablesPayment														
							invoked.PrmCashManagementGroup			= this instance.CashManagementGroup								
							invoked.PrmCashCode						= this instance.CashCode										
							invoked.PrmBankTransactionCode			= this instance.CashLedgerPayablesPayment.BankTransactionCode	
							invoked.PrmLastElectSerialNumber		= PrmSerialNumber												
							invoked.PrmPayGroup						= this instance.PayGroup										
				else																											
					invoke TriggerRemitAdvice CashLedgerPayablesPayment
						fill in fields from this instance
					
					

				if (PrmTriggerIDMAction
				and PayablesCompanyProcessLevel.PayablesCompany.UseIDM
				and PayablesCompanyProcessLevel.PayablesCompany.GlobalWithholding
				and PayablesCompanyProcessLevel.PayablesCompany.LetterOfRetentionTemplate entered
				and CashPaymentWithholdingExists)
					if (CashLedgerPayablesPayment.BankTransactionCode.PaymentSummarization		
					and LastElectronicPaymentSerialNumber entered)
						invoke ProcessLetterOfRetentionInIDMSetAction
							invoked.PrmCashManagementGroup					= CashManagementGroup
							invoked.PrmCashCode								= CashCode
							invoked.PrmBankTransactionCode					= CashLedgerPayablesPayment.BankTransactionCode
							invoked.PrmLastElectronicPaymentSerialNumber	= LastElectronicPaymentSerialNumber
							invoked.PrmPayGroup								= PayGroup
					else
						invoke ProcessLetterOfRetentionInIDM

			Exit Rules























						
		ApplyComments is an Instance Action
			Parameters
				PrmCommentText		is a CommentText
					default label is "Comment"
			Action Rules
				CommentText			+= PrmCommentText					










		UpdateCashLedgerSourceRecord is a Set Action		
			restricted
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup

			Instance Selection
				where (CashManagementGroup		= PrmCashManagementGroup
				and    CashLedgerSourceRecord	!entered)

			Sort Order  
				CashManagementGroup
				CashCode
				CashLedgerSourceRecord
				CashLedgerPayablesPayment

			Action Rules								
				Instance Rules
					if (CheckType.CbPayment)
						invoke UpdateCashLedgerSourceRecord CashLedgerPayablesPaymentReasonCodeUsage set
							invoked.PrmCashLedgerSourceRecord	= "CBM"
						CashLedgerSourceRecord	= "CBM"
					else
						invoke UpdateCashLedgerSourceRecord CashLedgerPayablesPaymentReasonCodeUsage set
							invoked.PrmCashLedgerSourceRecord	= "CHK"
						CashLedgerSourceRecord	= "CHK"


		CreateMissingManualPayments is a Set Action		
			restricted
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
					default label is "CashManagementGroup"

			Parameter Rules
				PrmCashManagementGroup
					required

			Instance Selection
				where (CashManagementGroup		= PrmCashManagementGroup
				and    CheckType.ManuallyCreated
				and    Status.PaymentCycleClosed)

			Sort Order  

			Action Rules								
				Instance Rules
					if (CbtransRel !exist)
						if (PayablesCompanyProcessLevel.PayablesCompany !entered)
							PayablesCompanyProcessLevel.PayablesCompany			= first AppaymentRel.Company
						invoke CreateAPCloseCashLedgerTransaction

		DeleteScheduledPayments is a Set Action
			default label is untranslatable
			restricted
			completion message is "DeleteScheduledPaymentsSubmitted"
			Parameters
				PrmVendorGroup				is a VendorGroup
				PrmPayGroup					is a PayGroup
				PrmCashRequirementsResult	is a CashRequirementsResult

			Instance Selection
				where (VendorGroup				= PrmVendorGroup
				and    PayGroup					= PrmPayGroup
				and    CashRequirementsResult	= PrmCashRequirementsResult)
				
			Sort Order
				VendorGroup
				PayGroup
				CashRequirementsResult
				
			Action Rules
				Empty Set Rules
								
				Set Rules
							
				Instance Rules

					invoke Delete AllCashPaymentWithholdingRel  	
					invoke CashRequirementsDelete
					
		BODDataInitialLoadRemittanceAdvice is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmFromCompany					is a GeneralLedgerCompany
				PrmToCompany					is a GeneralLedgerCompany
				PrmDateRange					is a DateRange
			Parameter Rules
			Instance Selection			
				where  (((PrmFromCompany entered
				and		 PrmFromCompany <= Company)
				or		 PrmFromCompany not entered)
				and    ((PrmToCompany entered
				and		  PrmToCompany >= Company)
				or		  PrmToCompany not entered)
				and    (PaymentDate within PrmDateRange
				or      PrmDateRange not entered)
				and     (Status.PaymentCycleClosed))
		
			Action Rules										
				Instance Rules	
					invoke TriggerRemitAdvice CashLedgerPayablesPayment
							
		ProcessLetterOfRetentionInIDM is an Instance Action
			default label is untranslatable
			restricted
			run in background
			Action Rules
				invoke GenerateLetterOfRetentionInIDM CashPaymentWithholdingRel
				
		Purge is a Purge Action
			restricted

		ProcessLetterOfRetentionInIDMSetAction is a Set Action		
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup					is like CashManagementGroup
				PrmCashCode								is like CashCode
				PrmBankTransactionCode					is like BankTransactionCode
				PrmLastElectronicPaymentSerialNumber	is like SerialNum
				PrmPayGroup								is like PayGroup
			Instance Selection
				where (CashManagementGroup								= PrmCashManagementGroup
				and    CashCode											= PrmCashCode
				and    CashLedgerPayablesPayment.BankTransactionCode	= PrmBankTransactionCode
				and    LastElectronicPaymentSerialNumber				= PrmLastElectronicPaymentSerialNumber
				and    PayGroup											= PrmPayGroup
				and    PayablesCompanyProcessLevel.PayablesCompany.UseIDM
				and    PayablesCompanyProcessLevel.PayablesCompany.GlobalWithholding
				and    PayablesCompanyProcessLevel.PayablesCompany.LetterOfRetentionTemplate entered
				and    CashPaymentWithholdingExists)
			Sort Order is Set5
			Action Rules
				Instance Rules
					invoke GenerateLetterOfRetentionInIDM CashPaymentWithholdingRel

		TriggerRemitAdviceSet is a Set Action		
			restricted
			default label is untranslatable
			Parameters
				PrmCashManagementGroup				is a CashManagementGroup
				PrmCashCode							is like CashCode
				PrmBankTransactionCode				is like BankTransactionCode
				PrmLastElectSerialNumber			is like SerialNum
				PrmPayGroup							is like PayGroup
			Sort Order is Set5
			Instance Selection
				where  (CashManagementGroup								= PrmCashManagementGroup
					and CashCode										= PrmCashCode
					and CashLedgerPayablesPayment.BankTransactionCode	= PrmBankTransactionCode
					and LastElectronicPaymentSerialNumber				= PrmLastElectSerialNumber
					and PayGroup										= PrmPayGroup)
			Action Rules
				Instance Rules
					invoke TriggerRemitAdvice CashLedgerPayablesPayment			

					
		BODDataInitialLoadCriteriaPayableTracker is a Set Action
			restricted
			Parameters
				PrmVendorGroup					is a VendorGroup
				PrmFromCompany					is a GeneralLedgerCompany
				PrmToCompany 					is a GeneralLedgerCompany
				PrmFromVendor					is a Vendor
					context of PrmVendorGroup
				PrmToVendor						is a Vendor
					context of PrmVendorGroup
				PrmPaymentDateRange				is a DateRange
				
			Instance Selection
				where  (((PrmVendorGroup entered
				and		  PrmVendorGroup = VendorGroup)
				or        PrmVendorGroup not entered)
				and    ((PrmFromCompany entered
				and		  PrmFromCompany <= Company)
				or		  PrmFromCompany not entered)
				and    ((PrmToCompany entered
				and		  PrmToCompany >= Company)
				or		  PrmToCompany not entered)
				and		((PrmFromVendor entered
				and		  PrmFromVendor <= InvoiceVendor)
				or        PrmFromVendor not entered)
				and		((PrmToVendor entered
				and		  PrmToVendor >= InvoiceVendor)
				or        PrmToVendor not entered)
				and     (PaymentDate within PrmPaymentDateRange
				or 	    PrmPaymentDateRange not entered))
			
			Sort Order
			Action Rules
				Instance Rules
					invoke TriggerPayableTracker
					




















		UpdateCashLedgerSetFromPaymentClose is a Set Action		
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup			is like CashManagementGroup
				PrmVendorGroup					is like VendorGroup
				PrmPayGroup						is like PayGroup
				PrmProcessGroup					is like PayablesProcessGroup
				PrmBaseInvoiceRate				is a  CurrencyExchangeRate
				PrmPayablesJobResult			is like PayablesJobResult

			Parameter Rules

			Local Fields
				Skip										is Boolean
				LocalSub1									is Numeric size 2
				LocalSub2									is Numeric size 2
				LocalAsyncId								is an AsyncActionRequest
				LocalBasePmtAmt								is like InternationalAmount
				LocalBankCurrAmt							is like InternationalAmount
				LocalIssueTranAmt							is like CurrencyAmount
				PreviousLocalAsyncId						is an AsyncActionRequest
				LocalBackgroundGroup						is AlphaUpper up to 60
				LocalManualPmtTranAmt						is like CurrencyAmount
				LocalDetailPaymentRecordcount				is Numeric size 10 
				LocalSumDetailTransactionAmount				is like CurrencyAmount
				LocalSummaryIssueAmountForCashCodeBalance	is like CurrencyAmount

			Accumulators
				TotalBasePmtAmt
				TotalBankCurrAmt
				TotalIssueTranAmt
				TotalIssuedCount
				TotalSummarizedIssuedCount
				TotalManualPmtTranAmt
				TotalSumDetailTransactionAmount
				TotalSummaryIssueAmountForCashCodeBalance

			Sort Order is Set5

			Instance Selection
				where  (CashManagementGroup		= PrmCashManagementGroup
				and    VendorGroup				= PrmVendorGroup
				and	   PayGroup					= PrmPayGroup
				and    PayablesProcessGroup		= PrmProcessGroup
				and	   Status.PaymentCycleProcessed)

			Action Rules
				CashLedgerPayablesPayment.BankTransactionCode Set Rules
					Exit Rules
						if (TotalSummaryIssueAmountForCashCodeBalance entered
						or TotalManualPmtTranAmt entered
						or TotalSumDetailTransactionAmount entered)
							invoke UpdateCashCodeBalances CashCode
								invoked.PrmBankTransactionCode			= CashLedgerPayablesPayment.BankTransactionCode
								if (this instance.CashCode.DefaultPostCompany entered)
									invoked.PrmCompany 					= this instance.CashCode.DefaultPostCompany
								else
									invoked.PrmCompany 					= PayGroup.PostCompany
								if (CashLedgerPayablesPayment.BankTransactionCode.PaymentSummarization)
									if (TotalIssuedCount entered)
										invoked.PrmIssuedCount 			= TotalIssuedCount
									else
										invoked.PrmIssuedCount 			= TotalSummarizedIssuedCount
									invoked.PrmIssuedAmount 			= TotalSummaryIssueAmountForCashCodeBalance + TotalManualPmtTranAmt
								else
									invoked.PrmIssuedCount 				= TotalIssuedCount
									invoked.PrmIssuedAmount 			= TotalSumDetailTransactionAmount + TotalManualPmtTranAmt

				PayCurrency Set Rules
					Exit Rules
						if (CashLedgerPayablesPayment.BankTransactionCode.PaymentSummarization
						and CheckType != "M")
							TotalSummarizedIssuedCount += 1
							invoke CreateAPCloseCashLedgerTransaction	
								invoked.PrmSerialNumber						= LastElectronicPaymentSerialNumber
								invoked.PrmTransactionNumber 				= LastElectronicPaymentSerialNumber
								invoked.PrmSummarizedPaymentAmount			= TotalIssueTranAmt
								invoked.PrmSummarizedBankPaymentAmount 		= TotalBankCurrAmt
								invoked.PrmSummarizedBasePaymentAmount		= TotalBasePmtAmt
								invoked.PrmTriggerIDMAction 				= true
								invoked.PrmRunInBackgroundGroup				= true

							if (Company.FinanceEnterpriseGroup.BODTrigger)
								LocalAsyncId 					= PreviousLocalAsyncId
								LocalBackgroundGroup			= "CashLedgerPayablesPayment"+CashLedgerPayablesPayment.TransactionIDNumber+LastElectronicPaymentSerialNumber
								invoke TriggerRemitAdviceSet CashLedgerPayablesPayment in background group (LocalBackgroundGroup)
									assign async action request id to PreviousLocalAsyncId
									run after LocalAsyncId
									invoked.PrmCashManagementGroup			= CashManagementGroup
									invoked.PrmCashCode						= CashCode
									invoked.PrmBankTransactionCode			= CashLedgerPayablesPayment.BankTransactionCode
									invoked.PrmLastElectSerialNumber		= LastElectronicPaymentSerialNumber
									invoked.PrmPayGroup						= PayGroup

				Instance Rules
					Status = 2
					PayablesJobResult = PrmPayablesJobResult
					initialize LocalSub1
					initialize LocalSub2
					LocalSub1 = 1
					LocalSub2 = 0
					while (LocalSub1 <= 13
					and    LocalSub2 = 0)
						if (PaymentDate <= VendorGroup.PeriodEndingDates.PeriodEndingDate[LocalSub1])
							LocalSub2 = LocalSub1
						LocalSub1 += 1

					if (LocalSub2 	= 0)
						LocalSub2	= 14
					if (InvoiceVendor entered)
						if (RemitToCode entered
						and InvoiceVendor = PaidVendor)
							LocalRemitToCode		= RemitToCode
					else
					if (InvoiceVendor not entered
					and RemitToCode entered)
						LocalRemitToCode		= RemitToCode
					else
						initialize LocalRemitToCode

					for each distinct Vendor in AppaymentRel
						LocalVendor = each.Vendor
						invoke Update VendorBalanceRel
							invoked.CurrentPeriodNbrOfPayments.NbrOfPayments[LocalSub2] 	+= 1
					if (Company.AccountingEntity.AddressCode.PostalAddress.Country entered)
						if (PayablesCompanyRel.ForeignTradePaymentReport
						and BasePaymentAmount.EnteredCurrencyAmount > PayablesCompanyRel.ForeignTradePaymentAmount)
							if (CheckType != "C"
							and	VendorAddressRel exists)
								if (ForeignTradeAndPaymentsRel not exists)
									invoke Create ForeignTradeAndPayments
										invoked.ForeignTradeAndPayments.CashCode					= CashCode
										invoked.ForeignTradeAndPayments.CashLedgerSourceRecord		= CashLedgerSourceRecord
										invoked.ForeignTradeAndPayments.BankTransactionCode			= CashLedgerPayablesPayment.BankTransactionCode
										invoked.ForeignTradeAndPayments.TransactionIDNumber			= CashLedgerPayablesPayment.TransactionIDNumber
										invoked.ForeignTradeAndPayments.ReceivablePaymentHeader		= blank
										invoked.ForeignTradeAndPayments.ReceivablePayment			= blank
										invoked.Company										= Company
										invoked.PayGroup									= PayGroup
										invoked.VendorGroup									= VendorGroup
										invoked.Vendor										= PaidVendor
										invoked.PaymentDate									= PaymentDate
										invoked.TypeOfPayment								= "D"
										invoked.TransactionNumber							= TransactionNumber
										invoked.OutgoingPaymentAmount						= BasePaymentAmount.EnteredCurrencyAmount
										invoked.ForeignEconomicRegulatoryCode				= first InvoiceForeignEconomicCodeRel.PayablesInvoice.ForeignEconomicRegulatoryCode
										invoked.CountryCode									= first VendorAddressRel.PostalAddress.Country
										invoked.System										= "AP"
										invoked.VatExempt 									= "E"

										invoked.ForeignEconomicRegulatoryCode				= first PayablesInvPaymentRel.PayablesInvoice.ForeignEconomicRegulatoryCode
							if (CheckType = "C"
							and CashLedgerPaymentRel.PayeePostalAddress.Country entered
							and CashLedgerPaymentRel.PayeePostalAddress.Country != "DE")
								if (ForeignTradeAndPaymentsRel not exists)
									invoke Create ForeignTradeAndPayments
										invoked.ForeignTradeAndPayments.CashCode					= CashCode
										invoked.ForeignTradeAndPayments.CashLedgerSourceRecord		= CashLedgerSourceRecord
										invoked.ForeignTradeAndPayments.BankTransactionCode			= CashLedgerPayablesPayment.BankTransactionCode
										invoked.ForeignTradeAndPayments.TransactionIDNumber			= CashLedgerPayablesPayment.TransactionIDNumber
										invoked.ForeignTradeAndPayments.ReceivablePaymentHeader		= blank
										invoked.ForeignTradeAndPayments.ReceivablePayment			= blank
										invoked.Company										= Company
										invoked.PayGroup									= PayGroup
										invoked.VendorGroup									= VendorGroup
										invoked.Vendor										= PaidVendor
										invoked.PaymentDate									= PaymentDate
										invoked.TypeOfPayment								= "D"
										invoked.TransactionNumber							= TransactionNumber
										invoked.OutgoingPaymentAmount						= BasePaymentAmount.EnteredCurrencyAmount
										invoked.ForeignEconomicRegulatoryCode				= CashLedgerPaymentRel.ForeignEconomicRegulatoryCode
										invoked.CountryCode									= CashLedgerPaymentRel.PayeePostalAddress.Country
										invoked.System										= "CB"
										if (CashLedgerPaymentRel.TaxExempt = "N")
											invoked.VatExempt 								= "V"
										else
											invoked.VatExempt 								= "E"
					if (CashLedgerPayablesPayment.BankTransactionCode.PaymentSummarization)
						TotalBasePmtAmt 	+= BasePaymentAmount.EnteredCurrencyAmount
						TotalBankCurrAmt 	+= PaymentAmountBankAccountCurrency.EnteredCurrencyAmount
						TotalIssueTranAmt 	+= PaymentAmount
						TotalSummaryIssueAmountForCashCodeBalance += PaymentAmount
					else
					if (CheckType = "M")
						TotalIssuedCount += 1
						TotalManualPmtTranAmt  += PaymentAmount

					if ((!CashLedgerPayablesPayment.BankTransactionCode.PaymentSummarization
					or CheckType = "M")
					and CbtransRel not exists)
						if (CheckType != "M")
							TotalSumDetailTransactionAmount	 += PaymentAmount

						TotalIssuedCount += 1
						invoke CreateAPCloseCashLedgerTransaction	
							invoked.PrmBaseInvoiceRate	= PrmBaseInvoiceRate
							invoked.PrmTriggerIDMAction = true


		TriggerPayableTrackerNativeLPLBOD is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmTriggerFrom 		is Alpha size 100
			Action Rules
				LocalTriggerFrom   			= 		PrmTriggerFrom
				LocalReference 				=  		FSMInboundBODTracker.Reference5
				if(Company.FinanceEnterpriseGroup.BODTrigger)
					if(LocalReference not entered)
						LocalMainUserTemplate = "IONPayableTracker_PayablesTrackerHeader_ST"
						include NativeLPLBODTriggerChecksRuleBlock
						if(LocalNativeLPLBODTrigger)
							invoke TriggerPayableTrackerLPL
							if(DerivedWithholding != 0)
								LocalMainUserTemplate = "IONPayableTracker_PayablesTrackerHeaderWT_ST"
								include NativeLPLBODTriggerChecksRuleBlock
								if(LocalNativeLPLBODTrigger)
									invoke TriggerPayableTrackerWithHolding
					else
						if(LocalReference="Normal")
							LocalMainUserTemplate = "IONPayableTracker_PayablesTrackerHeader_ST"
							include NativeLPLBODTriggerChecksRuleBlock
							if(LocalNativeLPLBODTrigger)
								invoke TriggerPayableTrackerLPL
						else
						if(LocalReference = "WithHolding")
							LocalMainUserTemplate = "IONPayableTracker_PayablesTrackerHeaderWT_ST"
							include NativeLPLBODTriggerChecksRuleBlock
							if(LocalNativeLPLBODTrigger)
								invoke TriggerPayableTrackerWithHolding
						
			
		TriggerPayableTrackerLPL is an Instance Action	
			default label is untranslatable
			restricted
			Parameters
			Action Rules
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 1
						invoked.Noun 					= "PayableTracker"	
						invoked.BODDocumentID			= BODDocumentID
						invoked.BODVariationID			= BODVariationID
						invoked.Status					= 1
						invoked.StartDate				= system current timestamp
						invoked.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
						invoked.Direction				= 1
						invoked.BODAccountingEntity		= DerivedAccountingEntity
						invoked.Reference1				= CashLedgerPayablesPayment.BankTransactionCode
						invoked.Reference3				= CashCode
						invoked.Reference2				= LocalTriggerFrom
						invoked.Reference4				= CashLedgerPayablesPayment.TransactionIDNumber
						invoked.Reference5				= "Normal"
						initialize invoked.Error			
						initialize invoked.ErrorMessage					
					LocalFSMInboundBODTracker			= NewBODTracker.FSMInboundBODTracker
				else 
					LocalFSMInboundBODTracker			= FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
						invoked.BODDocumentID			= BODDocumentID
						invoked.BODVariationID			= BODVariationID
						invoked.Status					= 1
						invoked.StartDate				= system current timestamp
						invoked.Direction				= 1
						invoked.BODAccountingEntity		= DerivedAccountingEntity
						invoked.Reference1				= CashLedgerPayablesPayment.BankTransactionCode
						invoked.Reference3				= CashCode
						invoked.Reference2				= LocalTriggerFrom
						invoked.Reference4				= CashLedgerPayablesPayment.TransactionIDNumber
						invoked.Reference5				= "Normal"
						initialize invoked.Error			
						initialize invoked.ErrorMessage
				invoke SendPayableTrackerBODNativeLPL
					resume on error
                   		Error            							= true
                        ErrorMessage     							= error message
                if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 								= Error
						invoked.ErrorMessage 						= ErrorMessage
						invoked.Status								= 2
						invoked.CloseDate							= system current timestamp
						invoked.BODXML								= PayableTrackerXMLBOD
						invoked.BODID								= DerivedBODIDPayableTracker
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status									= 3
						invoked.CloseDate								= system current timestamp
						invoked.BODXML									= PayableTrackerXMLBOD
						invoked.BODID									= DerivedBODIDPayableTracker
				
		TriggerPayableTrackerWithHolding is an Instance Action	
			default label is untranslatable
			restricted
			Parameters
			Action Rules
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 1
						invoked.Noun 					= "PayableTracker"	
						invoked.BODDocumentID			= BODDocumentID
						invoked.BODVariationID			= BODVariationID
						invoked.Status					= 1
						invoked.StartDate				= system current timestamp
						invoked.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
						invoked.Direction				= 1
						invoked.BODAccountingEntity		= DerivedAccountingEntity
						invoked.Reference1				= CashLedgerPayablesPayment.BankTransactionCode
						invoked.Reference3				= CashCode
						invoked.Reference2				= LocalTriggerFrom
						invoked.Reference4				= CashLedgerPayablesPayment.TransactionIDNumber
						invoked.Reference5				= "WithHolding"
						initialize invoked.Error			
						initialize invoked.ErrorMessage					
					LocalFSMInboundBODTracker			= NewBODTracker.FSMInboundBODTracker
				else 
					LocalFSMInboundBODTracker			= FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
						invoked.BODDocumentID			= BODDocumentID
						invoked.BODVariationID			= BODVariationID
						invoked.Status					= 1
						invoked.StartDate				= system current timestamp
						invoked.Direction				= 1
						invoked.BODAccountingEntity		= DerivedAccountingEntity
						invoked.Reference1				= CashLedgerPayablesPayment.BankTransactionCode
						invoked.Reference3				= CashCode
						invoked.Reference2				= LocalTriggerFrom
						invoked.Reference4				= CashLedgerPayablesPayment.TransactionIDNumber
						invoked.Reference5				= "WithHolding"
						initialize invoked.Error			
						initialize invoked.ErrorMessage
				invoke SendPayableTrackerWithHolding
					resume on error
                   		Error            							= true
                        ErrorMessage     							= error message
                if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 								= Error
						invoked.ErrorMessage 						= ErrorMessage
						invoked.Status								= 2
						invoked.CloseDate							= system current timestamp
						invoked.BODXML								= PayableTrackerTaxHeaderXMLBOD
						invoked.BODID								= DerivedBODIDPayableTracker
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status									= 3
						invoked.CloseDate								= system current timestamp
						invoked.BODXML									= PayableTrackerTaxHeaderXMLBOD
						invoked.BODID									= DerivedBODIDPayableTracker
							
		SendPayableTrackerWithHolding is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				send ion bod
					bod is PayableTrackerTaxHeaderXMLBOD
					bod type is "Sync.PayableTracker"
					document id is  BODDocumentID
					variation id is BODVariationID
					accounting entity is DerivedAccountingEntity
		
		SendPayableTrackerBODNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				send ion bod
					bod is PayableTrackerXMLBOD
					bod type is "Sync.PayableTracker"
					document id is  BODDocumentID
					variation id is BODVariationID
					accounting entity is DerivedAccountingEntity
		
		UpdateRejectDate is an Instance Action	
			default label is untranslatable
			restricted
			Parameters
				PrmRejectDate	is Date				
			Action Rules
				RejectDate = PrmRejectDate

		EmailRemittance is an Instance Action		
			valid when (IsReleasedManualPayment)
			run in background
			completion message is "EmailSent"
			disable multiple instance selection
			Parameters
				ToEmail			is EmailAddressField with multiple addresses 
					holds pii
			Parameter Rules
				ToEmail
					required
					initial value is PaidVendor.EmailAddress
			Action Rules
				EmailAddress = ToEmail
				generate document ManualRemittance as pdf in landscape font offset is -2
          			set using action SetManualRemittance
        
       
	    SetManualRemittance is an Instance Action		
		    default label is untranslatable
		    restricted
		    Parameters
		        Report			is BinaryDocument
		    Action Rules
				TransientRemittanceReport = Report
				send email
					to EmailAddress
					from DerivedFromEmail
					subject "<DerivedEmailSubject>"
					Attachments
						attachment TransientRemittanceReport
							name is "RemittanceReport.pdf"
							mime type is "application/pdf"
					Contents
						"<DerivedEmailSubject>"

		UploadToIDM is an Instance Action  
			valid when (RejectAttachment.ValidForIDMUpload)
			Action Rules
				include IDM.MoveAttachmentsToIDM
					replace AttachmentField   with RejectAttachment	
						
									
		MoveAttachmentsToIDM is a Set Action
			restricted
			Instance Selection
				where (RejectAttachment.IsLocal)

			Accumulators
				InstanceCount

			Action Rules
				Instance Rules
					increment InstanceCount	

					include IDM.MoveAttachmentsToIDM
						replace AttachmentField   with RejectAttachment			

					commit transaction
					

	StateCycles
		CheckApprovalLifeCycle	is a StateCycle
			state field is ReleasedStatus
			Unreleased is a State
				Release is an Instance Action
					valid when (IsUpdateable)
					Entrance Rules










						constraint (PaymentDate entered)
							"PaymentDateIsRequired"
						constraint (AppaymentRel exists)
							"CannotRelease;NoInvoicesApplied"	  
						constraint (PaymentAmount = PaidAmountInvoiceCurrency)															
							"PaymentAmountOf<PaymentAmount>DoesNot_=InvoiceAppliedAmountOf<PaidAmountInvoiceCurrency>"	 


						constraint (AppliedBaseAmount.TransactionAmount  = AppliedAmountBankAccountCurrency.TransactionAmount)
							"AppliedBaseAmountOf<AppliedBaseAmount.TransactionAmount>DoesNot_=BankAppliedAmountOf<AppliedAmountBankAccountCurrency.TransactionAmount>"	  


					Action Rules
						if (AppliedAmountBankAccountCurrency.BaseAmount.EnteredCurrencyAmount != PaymentAmountBankAccountCurrency.EnteredCurrencyAmount)	
							PaymentAmountBankAccountCurrency.EnteredCurrencyAmount	= AppliedAmountBankAccountCurrency.BaseAmount.EnteredCurrencyAmount
							BasePaymentAmount.EnteredCurrencyAmount					= AppliedBaseAmount.BaseAmount.EnteredCurrencyAmount
						invoke UnreleasedManualPayment.Release AppaymentRel
						make transition to Released
						LocalRunProgram = "APREL"
						invoke TriggerPayableTracker



							
			Released is a State
				UnreserveSelectedManualPayments is an Instance Action
					valid when (Status.ReservedForManualPayment)
					Entrance Rules
						invoke Delete 	
		


											
