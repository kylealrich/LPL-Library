ClosePeriod is a BusinessClass
    owned by closemgmt
    prefix is CLPRD

    Ontology
    	symbolic key is ClosePeriod

 	Patterns
 		implements DynamicCreation

    Persistent Fields
		CloseManagementStatus				is Numeric 1
			States
				Unscheduled					value is 0
				Scheduled					value is 1
				Open						value is 2
				Closed						value is 3
		PeriodOpenDate						is TimeStamp
		PeriodCloseDate						is TimeStamp
	
	Local Fields
		LocalTeam							is a FinanceTeam
		LocalCloseDate						is TimeStamp						

		LocalCalcDone						is Boolean
		LocalTotalDetailCount				is Numeric 5
		LocalScheduledCount					is Numeric 5
		LocalInProcessCount					is Numeric 5
		LocalPendingApprovalCount			is Numeric 5
		LocalClosedCount					is Numeric 5
		LocalVoidedCount					is Numeric 5
		LocalOverdueCount					is Numeric 5
		LocalDueTodayCount					is Numeric 5
		LocalStartTodayCount				is Numeric 5
		LocalInJeopardyCount				is Numeric 5
		LocalLateToStartCount				is Numeric 5
		LocalReopenedCount					is Numeric 5
		LocalStartEarlyCount				is Numeric 5
		LocalStartLateCount					is Numeric 5
		LocalDoneEarlyCount					is Numeric 5
		LocalDoneLateCount					is Numeric 5
		LocalOneTimeTaskCount				is Numeric 5
		TimeStampInGMT
	
	Rule Blocks
		CalculatePeriodTaskCounts
			for each AllDetailTasksRel
				LocalTotalDetailCount += 1
				if (each.TaskStatus.Scheduled)
					LocalScheduledCount += 1
				if (each.TaskStatus.InProcess)
					LocalInProcessCount += 1
				if (each.TaskStatus.PendingApproval)
					LocalPendingApprovalCount += 1
				if (each.TaskStatus.Closed)
					LocalClosedCount += 1
				if (each.TaskStatus.Voided)
					LocalVoidedCount += 1
				if (each.Overdue)
					LocalOverdueCount += 1
				if (each.DueToday)
					LocalDueTodayCount += 1
				if (each.StartToday)
					LocalStartTodayCount += 1
				if (each.TaskInJeopardy)
					LocalInJeopardyCount += 1
				if (each.LateToStart)
					LocalLateToStartCount += 1
				if (each.HasReopenHistory)
					LocalReopenedCount += 1
				if (each.StartMetric.StartedEarly
				and each.TaskStatus.Closed)
					LocalStartEarlyCount += 1
				if (each.StartMetric.StartedLate
				and each.TaskStatus.Closed)
					LocalStartLateCount += 1
				if (each.DueMetric.CompletedEarly
				and each.TaskStatus.Closed)
					LocalDoneEarlyCount += 1
				if (each.DueMetric.CompletedLate
				and each.TaskStatus.Closed)
					LocalDoneLateCount += 1
				if (each.OneTimeTask)
					LocalOneTimeTaskCount +=1

			LocalCalcDone = true

	Derived Fields
	
		DerivedPeriodOpenDate is a DerivedField
			type is Date
			restricted
			TimeStampInGMT.Value = PeriodOpenDate
			return TimeStampInGMT.CorporateDate
			
		DerivedPeriodCloseDate is a DerivedField
			type is Date
			restricted
			TimeStampInGMT.Value = PeriodCloseDate
			return TimeStampInGMT.CorporateDate
			
		ScheduledBeginDate is a DerivedField	
			type is Date

			return (min ParentTasksRel.ScheduleForTask.BeginDate)
		ScheduledBeginTime is a DerivedField
			type is Time
			return (min ParentTasksRel.ScheduleForTask.BeginTime)
		ScheduledDueDate is a DerivedField	
			type is Date

			return (max ParentTasksRel.ScheduleForTask.DueDate)
		ScheduledDueTime is a DerivedField
			type is Time
			return (max ParentTasksRel.ScheduleForTask.DueTime)
		EarliestScheduledDueDate is a DerivedField
			type is Date
			restricted
			return (min AllDetailTasksRel.ScheduleForTask.DueDate)
		EstimatedBeginDate is a DerivedField	
			type is Date
			restricted
			return (min ParentTasksWithEstRel.EstimateForTask.BeginDate)
		EstimatedDueDate is a DerivedField
			type is Date
			restricted
			return (max ParentTasksWithEstRel.EstimateForTask.DueDate)
		EstimatedDueTime is a DerivedField
			type is Time
			restricted
			return (max ParentTasksWithEstRel.EstimateForTask.DueTime)	
		ActualBeginDate is a DerivedField	
			type is Date
			restricted
			return (min ParentTasksWithActRel.ActualForTask.BeginDate)
		ActualDueDate is a DerivedField
			type is Date
			restricted
			return (max ParentTasksWithActRel.ActualForTask.DueDate)
		PeriodOpenDateDate is a DerivedField
			type is Date
			return (PeriodOpenDate date)
		PeriodCloseDateDate is a DerivedField
			type is Date
			return (PeriodCloseDate date)	

		DerivedBeginDate is a DerivedField
			type is Date
			restricted
			if (CloseManagementStatus.Scheduled)
				return (ScheduledBeginDate)
			else
				if (CloseManagementStatus.Closed)
					return (PeriodOpenDate date)
				else 
					if (ActualBeginDate entered)
						return (ActualBeginDate)
					else
						if (ScheduledBeginDate > EstimatedBeginDate
						and EstimatedBeginDate entered)
							return (EstimatedBeginDate)
						else
							return (ScheduledBeginDate)
		DerivedDueDate is a DerivedField
			type is Date
			if (CloseManagementStatus.Scheduled)
				return (ScheduledDueDate)
			else
				if (ScheduledDueDate > EstimatedDueDate)
					return (ScheduledDueDate)
				else	
					return (EstimatedDueDate)
		DerivedDueTime is a DerivedField
			type is Time
			if (CloseManagementStatus.Scheduled)
				return (ScheduledDueTime)
			else
				if (ScheduledDueTime > EstimatedDueTime)
					return (ScheduledDueTime)
				else	
					return (EstimatedDueTime)
		CompletePercent is a ComputeField
			type is Percent 5.2
			((CountClosed + CountVoided) / TotalCount)
		CountScheduled is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalScheduledCount
			else
				include CalculatePeriodTaskCounts
				return LocalScheduledCount
		CountInProcess is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalInProcessCount
			else
				include CalculatePeriodTaskCounts
				return LocalInProcessCount
		CountPendingApproval is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalPendingApprovalCount
			else
				include CalculatePeriodTaskCounts
				return LocalPendingApprovalCount
		CountOpen is a ComputeField
			type is Numeric 5
			(CountScheduled + CountInProcess + CountPendingApproval)
		CountClosed is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalClosedCount
			else
				include CalculatePeriodTaskCounts
				return LocalClosedCount
		CountVoided is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalVoidedCount
			else
				include CalculatePeriodTaskCounts
				return LocalVoidedCount
		CountReopened is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalReopenedCount
			else
				include CalculatePeriodTaskCounts
				return LocalReopenedCount
		CountOverDue is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalOverdueCount
			else
				include CalculatePeriodTaskCounts
				return LocalOverdueCount
		CountDueToday is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalDueTodayCount
			else
				include CalculatePeriodTaskCounts
				return LocalDueTodayCount
		CountStartToday is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalStartTodayCount
			else
				include CalculatePeriodTaskCounts
				return LocalStartTodayCount
		CountInJeopardy is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalInJeopardyCount
			else
				include CalculatePeriodTaskCounts
				return LocalInJeopardyCount
		TotalCount is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalTotalDetailCount
			else
				include CalculatePeriodTaskCounts
				return LocalTotalDetailCount
		CountReset is a ComputeField
			type is Numeric 5
			(instance count of ResetRel)
		CountLateToStart is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalLateToStartCount
			else
				include CalculatePeriodTaskCounts
				return LocalLateToStartCount
		ProgressPercent is a ComputeField
			type is Percent 5.2
			(CountReset / TotalCount)
		PercentScheduled is a ComputeField
			type is Percent 5.2
			(CountScheduled / TotalCount)
		PercentInProcess is a ComputeField
			type is Percent 5.2
			(CountInProcess / TotalCount)
		PercentPendingApproval is a ComputeField
			type is Percent 5.2
			(CountPendingApproval / TotalCount)
		PercentClosed is a ComputeField
			type is Percent 5.2
			(CountClosed / TotalCount)
		PercentVoided is a ComputeField
			type is Percent 5.2
			(CountVoided / TotalCount)
		PercentReopened is a ComputeField
			type is Percent 5.2
			(CountReopened / TotalCount)
		PercentStartEarly is a ComputeField
			type is Percent 5.2
			(CountStartEarly / TotalCount)
		PercentStartLate is a ComputeField
			type is Percent 5.2
			(CountStartLate / TotalCount)
		PercentDoneEarly is a ComputeField
			type is Percent 5.2
			(CountDoneEarly / TotalCount)
		PercentDoneLate is a ComputeField
			type is Percent 5.2
			(CountDoneLate / TotalCount)
		PercentOpen is a ComputeField
			type is Percent 5.2
			(CountOpen / TotalCount)
		PercentOneTimeTask is a ComputeField
			type is Percent 5.2
			(CountOneTimeTask / TotalCount)
		PercentOverDue is a ComputeField
			type is Percent 5.2
			(CountOverDue / TotalCount)
		PercentDueToday is a ComputeField
			type is Percent 5.2
			(CountDueToday / TotalCount)
		PercentInJeopardy is a ComputeField
			type is Percent 5.2
			(CountInJeopardy / TotalCount)
		PercentLateToStart is a ComputeField
			type is Percent 5.2
			(CountLateToStart / TotalCount)
		


		CountStartEarly is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalStartEarlyCount
			else
				include CalculatePeriodTaskCounts
				return LocalStartEarlyCount

		CountStartLate is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalStartLateCount
			else
				include CalculatePeriodTaskCounts
				return LocalStartLateCount


		CountDoneEarly is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalDoneEarlyCount
			else
				include CalculatePeriodTaskCounts
				return LocalDoneEarlyCount


		CountDoneLate is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalDoneLateCount
			else
				include CalculatePeriodTaskCounts
				return LocalDoneLateCount


		PeriodReopenCount is a DerivedField
			type is Numeric 3
			restricted
			for each this instance.audit log records
				if (each.action = "ReopenPeriod")
					PeriodReopenCount = PeriodReopenCount + 1
			return PeriodReopenCount

		CountOneTimeTask is a DerivedField
			type is Numeric 5
			if (LocalCalcDone)
				return LocalOneTimeTaskCount
			else
				include CalculatePeriodTaskCounts
				return LocalOneTimeTaskCount

		OriginalCloseDate is a DerivedField
			type is TimeStamp

			initialize LocalCloseDate
			for each this instance.audit log records
				if (each.action = "ClosePeriod")
					if (LocalCloseDate not entered)
						LocalCloseDate = each.entry stamp
					else
					if (each.entry stamp date < LocalCloseDate)
						LocalCloseDate = each.entry stamp
			return LocalCloseDate

		ReopenedMessage is a MessageField
			"PeriodWasReopened;See_Reopen_AuditForDetailsOnReopenAndCloseDates"
						
		NumberOfDaysNote is a MessageField
			"(_Note:_UnlessTheSpecificDayOfTheMonthIsBeingUsed,Leaving_BeginNumberOfDaysBlankMeansTaskWillBeScheduledToBeginOnThePeriodEndDateAndLeaving_DueNumberOfDaysBlankMeansTaskWillBeScheduledToBeDueOnThePeriodEndDate)"

		AlertDisplayMessage is a DerivedField
			type is MessageField
			if (RedAlert)
				return OverdueMessage
			else
				return InJeopardyMessage
			
		OverdueMessage is a MessageField
			restricted
			"Overdue"
		InJeopardyMessage is a MessageField
			restricted
			"InJeopardy"

		DerivedSystemCalendar is a DerivedField  
			type is like SystemCalendar
			restricted
			return (first ParentTasksRel.CreatedFrom.DefaultCalendar)

		DerivedWorkDaysOnly is a DerivedField  
			type is Boolean
			restricted
			return (first ParentTasksRel.CreatedFrom.ScheduleForWorkDaysOnly)
	
	Sets
		ByPeriodStatus
			duplicates
			Sort Order
				CloseManagementGroup			
				CloseManagementStatus
				
		ByOpenPeriod
			Sort Order
				CloseManagementGroup
				ClosePeriod
			Instance Selection
				where (CloseManagementStatus.Open) 

		ByOpenPeriodDescend
            Sort Order
                CloseManagementGroup
                ClosePeriod descending
            Instance Selection
                where (CloseManagementStatus.Open)
				
	Relations
















				
		TheClose is a ClosePeriodTask set

		AllDetailTasksRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel = 1) 

		AllSummaryTasksRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel = 0) 

		ScheduledRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel = 1 
				and    related.TaskStatus = 0)
		InProcessRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel = 1
				and    related.TaskStatus = 2)

		PendingApprovalRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel = 1 
				and    related.TaskStatus = 5)

		AllOpenRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel = 1
				and    related.TaskStatus < 7)

		ClosedRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel =1
				and    related.TaskStatus = 7)

		VoidRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel = 1 
				and    related.TaskStatus = 9)

		ReopenedRel is a ClosePeriodTask set
			Instance Selection
				where (related.HasReopenHistory)

		DueTodayRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel = 1 
				and    related.DueToday)

		StartTodayRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel = 1 
				and    related.StartToday)

		InJeopardyRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel = 1 
				and    related.TaskStatus <= 2
				and    related.TaskInJeopardy)

		OverDueRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel = 1 
				and    related.TaskStatus < 7
				and    related.Overdue)

		LateToStartRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel = 1
				and    related.LateToStart)

		UnassignedRel  is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel = 1 
				and    related.TaskStatus <= 2
				and    related.TaskOwner not entered)

		OneTimeTaskRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel.Detail
				and    related.OneTimeTask)

		ParentTasksRel is a ClosePeriodTask set
			Instance Selection
				where (related.ParentClosePeriodTask = 0)

		ParentTasksWithEstRel is a ClosePeriodTask set
			Instance Selection
				where (related.ParentClosePeriodTask = 0
				and    related.EstimateForTask entered)

		ParentTasksWithActRel is a ClosePeriodTask set
			Instance Selection
				where (related.ParentClosePeriodTask = 0
				and    related.ActualForTask entered)

		CurrentTasksRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel = 1				
				and    related.TaskStatus < 7) 		

		ResetRel is a ClosePeriodTask set 
			Instance Selection
				where (related.TaskLevel = 1				
				and    related.TaskStatus > 0) 

		ParentTasksWithDueTimeSensitiveRel is a ClosePeriodTask set
			Instance Selection
				where (related.ParentClosePeriodTask = 0
				and    related.HasDueTimeSensitiveDescendants)


		StartEarlyRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel =1
				and    related.StartMetric.StartedEarly)

		StartLateRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel =1
				and    related.StartMetric.StartedLate)

		DoneEarlyRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel =1
				and    related.DueMetric.CompletedEarly)

		DoneLateRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel =1
				and    related.DueMetric.CompletedLate)

		AvailablePeriodRel
			one-to-many relation to ClosePeriod
			Field Mapping uses ByPeriodStatus
				related.CloseManagementGroup = CloseManagementGroup
				related.CloseManagementStatus < 3
		SendToTeamMembersRel
			one-to-many relation to FinanceTeamMember 
			Field Mapping uses ByFinanceTeam
				related.FinanceEnterpriseGroup = CloseManagementGroup
				related.FinanceTeam = LocalTeam				
			
		CloseTaskTypeDefaultPrimaryRel
			one-to-many relation to CloseTaskType
			Field Mapping uses symbolic key
				related.CloseManagementGroup = CloseManagementGroup
			Instance Selection
				where (related.IsPrimary
				and    related.IsDefault)

		CloseTaskTypeDefaultSecondaryRel
			one-to-many relation to CloseTaskType
			Field Mapping uses symbolic key
				related.CloseManagementGroup = CloseManagementGroup
			Instance Selection
				where (related.IsSecondary
				and    related.IsDefault)

		CloseTaskTypeDefaultTertiaryRel
			one-to-many relation to CloseTaskType
			Field Mapping uses symbolic key
				related.CloseManagementGroup = CloseManagementGroup
			Instance Selection
				where (related.IsTertiary
				and    related.IsDefault)

		DueTimeSensitiveNotificationRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel = 1 
				and    related.TaskStatus < 7
				and    related.DueTimeSensitiveNeedsNotification)

		OpenPeriodsRel
			one-to-many relation to ClosePeriod 
			Field Mapping uses ByOpenPeriod
				related.CloseManagementGroup = CloseManagementGroup







		TaskRequiringApprovalRel is a ClosePeriodTask set
			Instance Selection
				where (related.TaskLevel = 1
				and   (related.RequiresApproval = true
				or     related.OneTimeTaskRequiresApproval))

		UnresolvedIssueRel is a ClosePeriodIssue set 
			Instance Selection
				where (related.Status.Unresolved)

		ResolvedIssueRel is a ClosePeriodIssue set 
			Instance Selection
				where (related.Status.Resolved)	

		PeriodIssueRel is a ClosePeriodIssue set 

		OpenClosePeriodTaskCubeRel
			one-to-many relation to ClosePeriodTaskCube
			Field Mapping uses symbolic key
				related.CloseManagementGroup	= CloseManagementGroup
				related.ClosePeriod				= ClosePeriod
			Instance Selection
				where (related.Open)

		ClosePeriodTaskCubeRel
			one-to-many relation to ClosePeriodTaskCube
			Field Mapping uses symbolic key
				related.CloseManagementGroup	= CloseManagementGroup
				related.ClosePeriod				= ClosePeriod

	Conditions
		YellowAlert
			restricted
			when (CloseManagementStatus.Open
			and   EstimatedDueDate > ScheduledDueDate)
		RedAlert
			restricted
			when ((CloseManagementStatus.Open
			or    CloseManagementStatus.Scheduled)
			and   ScheduledDueDate < current corporate date)
		RedAndYellowAlert
			restricted
			when (RedAlert or YellowAlert)
		ValidOpen
			restricted
			when (CloseManagementStatus.Scheduled)		
		ValidClose
			restricted
			when (CloseManagementStatus.Open
				and !CurrentTasksRel exists)		
		ValidReopen
			restricted
			when (CloseManagementStatus.Closed)
		ValidReset
			restricted
			when (CloseManagementStatus.Open
			and   ResetRel exists)	
		ValidRevertToScheduled
			restricted
			when (CloseManagementStatus.Open
			and   !ResetRel exists)
		ValidDelete
			restricted
			when (CloseManagementStatus.Scheduled
			or    CloseManagementStatus.Unscheduled)		
		ScheduleProcessValid
			restricted
			when (!ResetRel exists)
		HasOneTimeTasks
			restricted
			when (CountOneTimeTask > 0)
		HasScheduled
			restricted
			when (CountScheduled > 0)
		HasInProcess
			restricted
			when (CountInProcess > 0)
		HasPendingApproval
			restricted
			when (CountPendingApproval > 0)
		ShowAllOpen
			restricted
			when ((HasScheduled and HasInProcess)
			or    (HasScheduled and HasPendingApproval)
			or    (HasInProcess and HasPendingApproval))
		HasClosed
			restricted
			when (CountClosed > 0)
		HasVoided
			restricted
			when (CountVoided > 0)
		HasReopened
			restricted
			when (CountReopened > 0)
		HasDueToday
			restricted
			when (CountDueToday > 0)
		HasInJeopardy
			restricted
			when (CountInJeopardy > 0)
		HasOverDue
			restricted
			when (CountOverDue > 0)
		HasUnassigned
			restricted
			when (UnassignedRel exists)	
		HasStartToday
			restricted
			when (CountStartToday > 0)
		HasLateToStart
			restricted
			when (CountLateToStart > 0)
		HasStartEarly
			restricted
			when (CountStartEarly > 0)
		HasStartLate
			restricted
			when (CountStartLate > 0)
		HasDoneEarly
			restricted
			when (CountDoneEarly > 0)
		HasDoneLate
			restricted
			when (CountDoneLate > 0)
		ShowExpectedOpenDate
			restricted
			when (CloseManagementStatus.Scheduled)
		ShowOpenDate
			restricted
			when (CloseManagementStatus.Open
			or    CloseManagementStatus.Closed)	
		ShowExpectedCloseDate
			restricted
			when (CloseManagementStatus.Open)
		ShowClosedDate
			restricted
			when (CloseManagementStatus.Closed)
		PeriodStartedEarly
			restricted
			when (DerivedPeriodOpenDate < ScheduledBeginDate)
		PeriodStartedLate
			restricted
			when (DerivedPeriodOpenDate > ScheduledBeginDate)
		PeriodClosedEarly
			restricted
			when (DerivedPeriodCloseDate < ScheduledDueDate)
		PeriodClosedLate
			restricted
			when (DerivedPeriodCloseDate > ScheduledDueDate)
		PeriodReopened

			when (PeriodReopenCount > 0)
		PeriodReopenedOnce
			restricted
			when (PeriodReopenCount = 1)
		PeriodReopenedMultipleTimes
			restricted
			when (PeriodReopenCount > 1)
		AllowCreationOfOneTimeTasks
			restricted
			when (CloseManagementGroup.AllowOneTimeTasks
			and   CloseManagementStatus.Open)
		OneTimeTaskNeedsApprovalCode
			restricted
			when (CloseManagementGroup.RequireApprovalOfOneTimeTasks)
		HasOverDueRel
			restricted
			when (OverDueRel exists)
		HasLateToStartRel
			restricted
			when (LateToStartRel exists)
		HasDueTimeSensitiveTasks
			restricted
			when (ParentTasksWithDueTimeSensitiveRel exists)
		HasTasksWithEstimates
			restricted
			when (ParentTasksWithEstRel exists)

		UnresolvedIssue
			restricted
			when (UnresolvedIssueRel exists)

		ResolvedIssue
			restricted
			when (ResolvedIssueRel exists
			and not UnresolvedIssue)

		IssueExists 
			restricted
			when (PeriodIssueRel exists)	
		
		IsValidForActorContext		
			restricted
			when (CloseManagementGroup = actor.context.FinanceEnterpriseGroup)
	
	Field Rules
			
		
	Actions
		Create is a Create Action
			restricted
									

		Update is an Update Action



		Delete is a Purge Action	
			restricted
			valid when (ValidDelete)
		

		Reset is an Instance Action
			restricted
			valid when (ValidReset)
			Parameters
				RevertToScheduled	is Boolean
			Action Rules
				if (RevertToScheduled)
					invoke RevertToScheduled
			

		ChangeStatusToScheduled is an Instance Action
			restricted
			run in background
			Action Rules
				CloseManagementStatus = CloseManagementStatus.Scheduled	
				initialize PeriodOpenDate
				initialize PeriodCloseDate


		RevertToScheduled is an Instance Action
			restricted
			valid when (ValidRevertToScheduled)
			Action Rules
				CloseManagementStatus = CloseManagementStatus.Scheduled	
				initialize PeriodOpenDate
				initialize PeriodCloseDate
			Exit Rules
				invoke Reset ResetRel		
		

		RevertToUnscheduled is an Instance Action
			restricted
			Action Rules
				if (!TheClose exists)
					CloseManagementStatus = CloseManagementStatus.Unscheduled
					initialize PeriodOpenDate
					initialize PeriodCloseDate
					

		OpenPeriod is an Instance Action

			completion message is "OpenPeriodHasBeenSubmittedToTheQueueForProcessing"
			valid when (ValidOpen)
				
			Action Rules
				if (HasOverDueRel) 
					confirmation required
						"Overdue_Warning:_ScheduleContainsTasksThatAreCurrentlyOverdue.AreYouSureYouWantToOpenThePeriodForWork?"
				else
					if (HasLateToStartRel) 
						confirmation required
							"Start_Late_Warning:_ScheduleContainsTasksThatWillBeStartedLate(ScheduledStartDateIsPriorToToday'sDate).AreYouSureYouWantToOpenThePeriodForWork?"
					else
						confirmation required
							"AreYouSureYouWantToOpenThePeriodForWork?"
			
				invoke OpenPeriodDetailSet ClosePeriodTask
					invoked.PrmCloseManagementGroup	= CloseManagementGroup
					invoked.PrmClosePeriod			= ClosePeriod


		ChangeStatusToOpen is an Instance Action
			restricted
			Action Rules
				CloseManagementStatus = CloseManagementStatus.Open
				PeriodOpenDate = current timestamp
					

		CloseThePeriod is an Instance Action
			valid when (ValidClose)
			Action Rules
				CloseManagementStatus = CloseManagementStatus.Closed
				PeriodCloseDate = current timestamp

				if (OpenClosePeriodTaskCubeRel exists)
					invoke UpdateAnalyticCubeForClosedPeriod ClosePeriodTask
						invoked.PrmCloseManagementGroup = CloseManagementGroup
						invoked.PrmClosePeriod			= ClosePeriod


		ReopenPeriod is an Instance Action
			valid when (ValidReopen)
			action comment required
			Action Rules
				CloseManagementStatus = CloseManagementStatus.Open

				if (ClosePeriodTaskCubeRel exists)
					invoke Refresh CloseManagementGroup.ClosePeriodTaskAnalyticCubeRel in background

		SendMessage is an Instance Action
			Parameters
				CloseManagementGroup
				MessageFor						is Alpha 08
					States
						Resource				value is "Resource"
						Team					value is "Team"
				MessageTeam						is a FinanceTeam
				MessagePerson					is a FinanceResource
				DialogueTitle					is Alpha 60
				Dialogue 						is Text 
				DialogueAttachment				is an Attachment
				DialogueLink					is an URL
				ResponseRequired				is Boolean
				PrmExternalToEmailAddress		is EmailAddressField with multiple addresses 
					holds pii
				PrmCcEmailAddress				is EmailAddressField with multiple addresses 
					holds pii
				PrmBccEmailAddress				is EmailAddressField with multiple addresses 
					holds pii
				PrmAddCcEmail					is Boolean
				PrmAddBccEmail					is Boolean
				PrmSendingLandmarkNotifications is Boolean
				PrmLocalActor					is an Actor
			Parameter Rules
				CloseManagementGroup
					initial value is ClosePeriod.CloseManagementGroup
					cannot be changed
				PrmExternalToEmailAddress
					if (PrmExternalToEmailAddress not entered)
						constraint(MessagePerson entered or MessageTeam entered)
							"MustEnter_a_Resource,_Team_and/or_Email_Address."
				PrmCcEmailAddress
					if (PrmCcEmailAddress entered)
						constraint(PrmExternalToEmailAddress entered)
							"MustEnter_To_E-mail_Address,_when_Cc_email_is_entered."
				PrmBccEmailAddress
					if (PrmBccEmailAddress entered)
						constraint(PrmExternalToEmailAddress entered)
							"MustEnter_To_E-mail_Address,_when_Bcc_email_is_entered."
				PrmSendingLandmarkNotifications
					if (MessagePerson not entered and MessageTeam not entered)
						constraint (not PrmSendingLandmarkNotifications entered)
							"MustEnterEither_Resource_and/or_TeamToSend_Notifications"
				DialogueTitle
					default to Dialogue
					initial value is ClosePeriod 
				Dialogue
					required
						"PleaseEnterYourMessage"
			Action Rules	
				if (MessagePerson entered)
					invoke Create FinanceResourceDialogue
						invoked.NavigateToThis		= reference to ClosePeriod				
						invoked.HROrganization		= CloseManagementGroup.HROrganization
						invoked.FinanceResource		= MessagePerson
						invoked.DialogueTitle		= DialogueTitle
						invoked.Dialogue			= Dialogue
						invoked.DialogueAttachment	= DialogueAttachment
						invoked.SendToContact		= MessagePerson
						invoked.Author				= actor.agent(Employee).Employee
						invoked.DialogueLink		= DialogueLink
						invoked.ResponseRequired	= ResponseRequired
						invoked.MessageType         = 0  


					invoke Create FinanceResourceDialogue
						invoked.NavigateToThis		= reference to ClosePeriod				
						invoked.HROrganization		= CloseManagementGroup.HROrganization
						invoked.FinanceResource		= actor.agent(Employee).Employee
						invoked.DialogueTitle		= DialogueTitle
						invoked.Dialogue			= Dialogue
						invoked.DialogueAttachment	= DialogueAttachment
						invoked.SendToContact		= MessagePerson
						invoked.Author				= actor.agent(Employee).Employee
						invoked.DialogueLink		= DialogueLink
						invoked.ResponseRequired	= ResponseRequired
						invoked.MessageType         = 1  

					if (PrmSendingLandmarkNotifications)
						PrmLocalActor = MessagePerson.FinanceResourceActor
						send notification
							to PrmLocalActor
							description is "<DialogueTitle>"
							priority is high
							detail is "<Dialogue>"

				if (MessageTeam entered) 
					LocalTeam = MessageTeam	
					for each SendToTeamMembersRel  
						if ((each.FinanceTeamMember.TeamMember != actor.agent(Employee).Employee)
						and (each.FinanceTeamMember.TeamMember != MessagePerson))
							invoke Create FinanceResourceDialogue
								invoked.NavigateToThis		= reference to ClosePeriod				
								invoked.HROrganization		= CloseManagementGroup.HROrganization
								invoked.FinanceResource		= each.FinanceTeamMember.TeamMember
								invoked.DialogueTitle		= DialogueTitle
								invoked.Dialogue			= Dialogue
								invoked.DialogueAttachment	= DialogueAttachment
								invoked.SendToTeam			= MessageTeam
								invoked.SendToContact		= each.FinanceTeamMember.TeamMember
								invoked.Author				= actor.agent(Employee).Employee
								invoked.DialogueLink		= DialogueLink
								invoked.ResponseRequired	= ResponseRequired												
								invoked.MessageType         = 0  


							invoke Create FinanceResourceDialogue
								invoked.NavigateToThis		= reference to ClosePeriod				
								invoked.HROrganization		= CloseManagementGroup.HROrganization
								invoked.FinanceResource		= actor.agent(Employee).Employee
								invoked.DialogueTitle		= DialogueTitle
								invoked.Dialogue			= Dialogue
								invoked.DialogueAttachment	= DialogueAttachment
								invoked.SendToTeam			= MessageTeam
								invoked.SendToContact		= each.FinanceTeamMember.TeamMember
								invoked.Author				= actor.agent(Employee).Employee
								invoked.DialogueLink		= DialogueLink
								invoked.ResponseRequired	= ResponseRequired												
								invoked.MessageType         = 1  

							if (PrmSendingLandmarkNotifications)
								PrmLocalActor = each.FinanceTeamMember.TeamMember.FinanceResourceActor															
								send notification
									to PrmLocalActor
									description is "<DialogueTitle>"
									priority is high
									detail is "<Dialogue>"

				if (PrmExternalToEmailAddress entered)
					send email
						to PrmExternalToEmailAddress
						cc PrmCcEmailAddress
						bcc PrmBccEmailAddress
						from actor.agent(Employee).EmployeeWorkEmailAddress
						subject "<DialogueTitle>"
						Attachments
							attachment DialogueAttachment.File
						Contents
								"<Dialogue>"
								blank line
								"<DialogueLink>"		

		Reminder is an Instance Action 		
			Parameters
				ReminderBeginDate				is Date
				ReminderDueDate					is Date
				ReminderDescription				is Alpha 100
				ReminderNotes					is Text
				ReminderAttachment				is an Attachment
				ReminderLink					is an URL
				FinancialForm					is Alpha 6
			Parameter Rules
				ReminderBeginDate
					initial value is current corporate date
					default to current corporate date
					constraint (ReminderBeginDate >= current corporate date)
						"SelectFutureDateOrLeaveBlank"
				ReminderDueDate
					initial value is current corporate date
					default to ReminderDueDate
					initial value is ReminderBeginDate
					constraint (ReminderDueDate >= ReminderBeginDate)
						"BeginDateCannotBeBeforeDueDate"
				ReminderDescription
					required
			Action Rules
				invoke Create FinanceResourceSchedule
					invoked.HROrganization	= CloseManagementGroup.HROrganization
					invoked.FinanceResource	= actor.agent(Employee).Employee
					invoked.BeginDate		= ReminderBeginDate		
					invoked.DueDate			= ReminderDueDate		
					invoked.Description		= ReminderDescription
					invoked.Notes			= ReminderNotes		
					invoked.NavigateToThis	= reference to ClosePeriod
					invoked.Attachment		= ReminderAttachment
					invoked.WebsiteLink		= ReminderLink
					invoked.CreatedBy		= 0 
					invoked.FinancialForm	= FinancialForm
					
		AddIssue is an Instance Action 		
			Parameters
				CloseManagementGroup
				PrmClosePeriod				is a ClosePeriod
				PrmIssueDateCreated			is TimeStamp
				PrmIssueDateUpdated			is TimeStamp
				PrmIssueCreatedBy			is a FinanceResource
				PrmIssueUpdatedBy			is a FinanceResource
				PrmIssueSummary				is Alpha 100
				PrmIssueDescription			is Text
				PrmIssueStatus				is Numeric 1
					States
						Unresolved     value is 0
						Resolved       value is 1
				PrmResolutionRequiredForTaskCompletion	is Boolean		
				PrmTaskName					is a ClosePeriodTask			
				PrmFinanceTeam				is a FinanceTeam
				PrmTaskOwner			    is a FinanceTeamMember 

			Local Fields
				LocalActor    				is an Actor
			Parameter Rules
				CloseManagementGroup
					default to ClosePeriod.CloseManagementGroup
					cannot be changed
				PrmIssueDateCreated
					initial value is current timestamp
					default to current timestamp	
				PrmIssueDateUpdated
					initial value is current timestamp
					default to current timestamp
				PrmIssueSummary
					required
				PrmIssueCreatedBy
					initial value is actor.agent(Employee).Employee
					force default to actor.agent(Employee).Employee	
				PrmIssueUpdatedBy
					initial value is actor.agent(Employee).Employee
					force default to actor.agent(Employee).Employee	
				PrmClosePeriod
					initial value is ClosePeriod
					default to ClosePeriod
				PrmResolutionRequiredForTaskCompletion
					if (PrmResolutionRequiredForTaskCompletion)
						constraint (PrmTaskName entered)
							"TaskIsRequired"
			Action Rules

				if (PrmTaskName entered)
					invoke Create ClosePeriodTaskIssue	
						invoked.CloseManagementGroup	= CloseManagementGroup
						invoked.ClosePeriod  			= PrmClosePeriod
						invoked.ClosePeriodTask	        = PrmTaskName
						invoked.DateCreated 	        = PrmIssueDateCreated
						invoked.DateUpdated		        = PrmIssueDateUpdated
						invoked.CreatedBy   	        = PrmIssueCreatedBy
						invoked.UpdatedBy   	        = PrmIssueUpdatedBy
						invoked.Summary      	        = PrmIssueSummary
						invoked.Description	  	        = PrmIssueDescription
						invoked.Status			        = PrmIssueStatus
						invoked.ResolutionRequiredForTaskCompletion   = PrmResolutionRequiredForTaskCompletion
						invoked.TaskName                = PrmTaskName.TaskName
						invoked.FinanceTeam             = PrmFinanceTeam
						invoked.TaskIssueOwner          = PrmTaskOwner
						if (PrmIssueStatus.Resolved)
							invoked.ResolvedBy = actor.agent(Employee).Employee
							invoked.DateResolved = current timestamp


					if (PrmTaskOwner entered)
						if (CloseManagementGroup.OverrideResourceEmailNotifications
						or  PrmTaskOwner.TeamMember.SendUpdatesAsEmail)
							send email
								to		PrmTaskOwner.TeamMember.EmailAddress
								from	actor.agent(Employee).EmployeeWorkEmailAddress
								subject "Issue:<PrmIssueSummary>_Task<PrmTaskName.TaskName>HasBeenAssignedToYou"
								Contents
										"AssignedOn_<current timestamp>By_<actor.agent(Employee).Name.PreferredSimplePresentationName>"

						if (CloseManagementGroup.OverrideResourceLandmarkNotifications
						or  PrmTaskOwner.TeamMember.SendUpdatesAsNotification)
							LocalActor = PrmTaskOwner.TeamMember.FinanceResourceActor
							if (LocalActor entered)
								send notification
									to	LocalActor
									description is "Issue:<PrmIssueSummary>_Task<PrmTaskName.TaskName>HasBeenAssignedToYou"
									priority is high
					else	
						LocalTeam = PrmFinanceTeam
						for each SendToTeamMembersRel
							if (each.FinanceTeamMember.TeamMember != actor.agent(Employee).Employee)  
								if (CloseManagementGroup.OverrideResourceEmailNotifications
								or  each.FinanceTeamMember.TeamMember.SendUpdatesAsEmail)
									send email
										to		each.FinanceTeamMember.TeamMember.EmailAddress
										from	actor.agent(Employee).EmployeeWorkEmailAddress
										subject "Issue:<PrmIssueSummary>_Task<PrmTaskName.TaskName>HasBeenAssignedToYourTeam_<PrmFinanceTeam>"
										Contents
											"AssignedOn_<current timestamp>By_<actor.agent(Employee).Name.PreferredSimplePresentationName>"
		
								if (CloseManagementGroup.OverrideResourceLandmarkNotifications
								or  each.FinanceTeamMember.TeamMember.SendUpdatesAsNotification)
									LocalActor = each.FinanceTeamMember.TeamMember.FinanceResourceActor
									if (LocalActor entered)
										send notification
											to	LocalActor
											description is	"Issue:<PrmIssueSummary>_Task<PrmTaskName.TaskName>HasBeenAssignedToYourTeam_<PrmFinanceTeam>"
											priority is high	


				else
					invoke Create ClosePeriodIssue
						invoked.CloseManagementGroup	= CloseManagementGroup
						invoked.ClosePeriod			 	= PrmClosePeriod
						invoked.DateCreated 			= PrmIssueDateCreated
						invoked.DateUpdated				= PrmIssueDateUpdated
						invoked.CreatedBy   			= PrmIssueCreatedBy
						invoked.UpdatedBy   			= PrmIssueUpdatedBy
						invoked.Summary      			= PrmIssueSummary
						invoked.Description	  			= PrmIssueDescription
						invoked.Status					= PrmIssueStatus
						invoked.FinanceTeam			    = PrmFinanceTeam
						invoked.TaskIssueOwner          = PrmTaskOwner
						if (PrmIssueStatus.Resolved)
							invoked.ResolvedBy = actor.agent(Employee).Employee
							invoked.DateResolved = current timestamp

					if (PrmTaskOwner entered)
						if (CloseManagementGroup.OverrideResourceEmailNotifications
						or  PrmTaskOwner.TeamMember.SendUpdatesAsEmail)
							send email
								to		PrmTaskOwner.TeamMember.EmailAddress
								from	actor.agent(Employee).EmployeeWorkEmailAddress
								subject "Issue:<PrmIssueSummary>,_Period:<ClosePeriod>HasBeenAssignedToYou"
								Contents
										"AssignedOn_<current timestamp>By_<actor.agent(Employee).Name.PreferredSimplePresentationName>"

						if (CloseManagementGroup.OverrideResourceLandmarkNotifications
						or  PrmTaskOwner.TeamMember.SendUpdatesAsNotification)
							LocalActor = PrmTaskOwner.TeamMember.FinanceResourceActor
							if (LocalActor entered)
								send notification
									to	LocalActor
									description is "Issue:<PrmIssueSummary>,_Period:<ClosePeriod>HasBeenAssignedToYou"
									priority is high
					else	
						LocalTeam = PrmFinanceTeam
						for each SendToTeamMembersRel
							if (each.FinanceTeamMember.TeamMember != actor.agent(Employee).Employee)  
								if (CloseManagementGroup.OverrideResourceEmailNotifications
								or  each.FinanceTeamMember.TeamMember.SendUpdatesAsEmail)
									send email
										to		each.FinanceTeamMember.TeamMember.EmailAddress
										from	actor.agent(Employee).EmployeeWorkEmailAddress
										subject "Issue:<PrmIssueSummary>,_Period:<ClosePeriod>HasBeenAssignedToYourTeam_<PrmFinanceTeam>"
										Contents
											"AssignedOn_<current timestamp>By_<actor.agent(Employee).Name.PreferredSimplePresentationName>"
		
								if (CloseManagementGroup.OverrideResourceLandmarkNotifications
								or  each.FinanceTeamMember.TeamMember.SendUpdatesAsNotification)
									LocalActor = each.FinanceTeamMember.TeamMember.FinanceResourceActor
									if (LocalActor entered)
										send notification
											to	LocalActor
											description is	"Issue:<PrmIssueSummary>,_Period:<ClosePeriod>HasBeenAssignedToYourTeam_<PrmFinanceTeam>"
											priority is high	

		WorkRequest is an Instance Action 		
			Parameters
				PrmClosePeriod					is a ClosePeriod
				RequestTeam						is a FinanceTeam
				RequestTeamMember				is a FinanceTeamMember
				RequestPerson					is a FinanceResource
				RequestBeginDate				is Date
				RequestBeginTime				is Time
				RequestDueDate					is Date
				RequestDueTime					is Time
				RequestDescription				is Alpha 100
				RequestNotes					is Text
				RequestAttachment				is an Attachment
				RequestLink						is an URL
				FinancialForm					is Alpha 6
				CreateOneTimeTask				is Boolean
				OneTimeParentTask				is a ClosePeriodTask
				OneTimeApprovalCode				is an ApprovalCode
				AddOneTimeTaskToProcess			is Boolean
				OneTimeCompany					is a CompanyGroupField
				OneTimePriority					is Numeric 1
					States
						Low							value is 0
						Medium						value is 1
						High						value is 2
				OneTimeRisk						is Numeric 1
					States	
						Low							value is 0
						Medium						value is 1
						High						value is 2
				OneTimeRequireSupportingDoco	is Boolean
				OneTimeRequireJournalEntry		is Boolean
				OneTimeRequiresApproval			is Boolean
				OneTimeCompletionApprovalCode	is an ApprovalCode
				OneTimeLevelOfEffort			is Unsigned Decimal 10.2
				OneTimeCalendar					is a SystemCalendar
				OneTimePeriodGroup				is a SystemCalendarPeriodGroup
				OneTimePrimaryType				is a CloseTaskType
				OneTimeSecondaryType			is a CloseTaskType
				OneTimeTertiaryType				is a CloseTaskType
				OneTimeDueTimeSensitive			is Boolean
				OneTimeTaskAddOption			is Numeric 1
					States
						JustTheSelectedPeriod			value is 0
						AllOpenPeriodsForParentTask		value is 1
				OneTimeStartDays				is Numeric 3
				OneTimeStartDayOfMonth			is Unsigned Decimal 2
				OneTimeStartLastDayOfMonth		is Boolean
				OneTimeStartNextMonth			is Boolean
				OneTimeStartTime				is Time
				OneTimeEndDays					is Numeric 3
				OneTimeEndDayOfMonth			is Unsigned Decimal 2
				OneTimeEndLastDayOfMonth		is Boolean
				OneTimeEndNextMonth				is Boolean
				OneTimeEndTime					is Time
				OneTimeHours					is Unsigned Decimal size 10.2
				OneTimeWorkDaysOnly				is Boolean
				
			Parameter Rules
				PrmClosePeriod
					initial value is ClosePeriod
					if (CreateOneTimeTask)
						constraint (PrmClosePeriod exists)
							"PeriodDoesNotExist"
						constraint (PrmClosePeriod.CloseManagementStatus.Open)
							"PeriodMustBeOpenToAddAOneTimeTask"
				RequestTeam
					if (CreateOneTimeTask)
						required
							"TeamRequiredForOneTimeTask"
					initial value is OneTimeParentTask.FinanceTeam
				RequestTeamMember
					initial value is OneTimeParentTask.TaskOwner
				RequestPerson
					if (!CreateOneTimeTask)
						required
							"PersonResponsibleRequiredForWorkRequest"
				RequestBeginDate
					initial value is current corporate date
					default to current corporate date
					constraint (RequestBeginDate >= current corporate date)
						"SelectFutureDateOrLeaveBlank"
				RequestBeginTime
					initial value is 28800 
				RequestDueDate
					initial value is current corporate date
					default to RequestDueDate
					initial value is RequestBeginDate
					constraint (RequestDueDate >= RequestBeginDate)
						"BeginDateCanNotBeBeforeDueDate"
				RequestDueTime
					initial value is 61200 
				RequestDescription
					required
				OneTimeParentTask
					if (CreateOneTimeTask)
						required
							"ParentTaskRequiredForAOneTimeTask"
						constraint (OneTimeParentTask.TaskLevel.Summary)
							"ParentCloseTaskMustBeSummaryLevel"
				OneTimeApprovalCode
					initial value is CloseManagementGroup.OneTimeTaskDefaultApprovalCode
					if (CreateOneTimeTask
					and CloseManagementGroup.RequireApprovalOfOneTimeTasks)
						required
							"ApprovalCodeRequiredForOneTimeTask"
				OneTimeCompany
					initial value is OneTimeParentTask.TaskCompany
				OneTimeCompletionApprovalCode
					if (OneTimeRequiresApproval)
						required
							"OneTimeTaskRequiresApprovalUponCompletion;CompletionApprovalCodeRequired"
				OneTimeCalendar
					initial value is OneTimeParentTask.CreatedFrom.DefaultCalendar
				OneTimePeriodGroup
					initial value is OneTimeParentTask.CreatedFrom.DefaultPeriodGroup
				OneTimePrimaryType
					initial value is first CloseTaskTypeDefaultPrimaryRel.CloseTaskType
				OneTimeSecondaryType
					initial value is first CloseTaskTypeDefaultSecondaryRel.CloseTaskType
				OneTimeTertiaryType
					initial value is first CloseTaskTypeDefaultTertiaryRel.CloseTaskType
				OneTimeStartTime
					initial value is 28800
					default to 28800
				OneTimeEndTime
					initial value is 61200
					default to 61200
				OneTimeHours
					initial value is OneTimeLevelOfEffort
					

			Action Rules
				if (CreateOneTimeTask)
					invoke WorkRequest OneTimeParentTask
						invoked.PrmClosePeriod					= PrmClosePeriod
						invoked.RequestTeam						= RequestTeam
						invoked.RequestTeamMember				= RequestTeamMember
						invoked.RequestPerson					= RequestPerson
						invoked.RequestBeginDate				= RequestBeginDate
						invoked.RequestBeginTime				= RequestBeginTime
						invoked.RequestDueDate					= RequestDueDate
						invoked.RequestDueTime					= RequestDueTime
						invoked.RequestDescription				= RequestDescription
						invoked.RequestNotes					= RequestNotes
						invoked.RequestAttachment				= RequestAttachment
						invoked.RequestLink						= RequestLink
						invoked.FinancialForm					= FinancialForm
						invoked.CreateOneTimeTask				= CreateOneTimeTask
						invoked.OneTimeParentTask				= OneTimeParentTask
						invoked.OneTimeApprovalCode				= OneTimeApprovalCode
						invoked.AddOneTimeTaskToProcess			= AddOneTimeTaskToProcess
						invoked.OneTimeCompany					= OneTimeCompany
						invoked.OneTimePriority					= OneTimePriority
						invoked.OneTimeRisk						= OneTimeRisk
						invoked.OneTimeRequireSupportingDoco	= OneTimeRequireSupportingDoco
						invoked.OneTimeRequireJournalEntry		= OneTimeRequireJournalEntry
						invoked.OneTimeRequiresApproval			= OneTimeRequiresApproval
						invoked.OneTimeCompletionApprovalCode	= OneTimeCompletionApprovalCode
						invoked.OneTimeLevelOfEffort			= OneTimeLevelOfEffort
						invoked.OneTimeCalendar					= OneTimeCalendar
						invoked.OneTimePeriodGroup				= OneTimePeriodGroup
	         			invoked.OneTimePrimaryType				= OneTimePrimaryType
	         			invoked.OneTimeSecondaryType			= OneTimeSecondaryType
	         			invoked.OneTimeTertiaryType				= OneTimeTertiaryType
	         			invoked.OneTimeDueTimeSensitive			= OneTimeDueTimeSensitive
						invoked.OneTimeTaskAddOption			= OneTimeTaskAddOption
						invoked.OneTimeStartDays				= OneTimeStartDays
						invoked.OneTimeStartDayOfMonth			= OneTimeStartDayOfMonth
						invoked.OneTimeStartLastDayOfMonth		= OneTimeStartLastDayOfMonth
						invoked.OneTimeStartNextMonth			= OneTimeStartNextMonth
						invoked.OneTimeStartTime				= OneTimeStartTime
						invoked.OneTimeEndDays					= OneTimeEndDays
						invoked.OneTimeEndDayOfMonth			= OneTimeEndDayOfMonth
						invoked.OneTimeEndLastDayOfMonth		= OneTimeEndLastDayOfMonth
						invoked.OneTimeEndNextMonth				= OneTimeEndNextMonth
						invoked.OneTimeEndTime					= OneTimeEndTime
						invoked.OneTimeHours					= OneTimeHours
						invoked.OneTimeWorkDaysOnly				= OneTimeWorkDaysOnly
				else
					invoke Create FinanceResourceSchedule
						invoked.HROrganization		= CloseManagementGroup.HROrganization
						invoked.FinanceResource		= RequestPerson
						invoked.BeginDate			= RequestBeginDate		
						invoked.DueDate				= RequestDueDate		
						invoked.Description			= RequestDescription
						invoked.Notes				= RequestNotes		
						invoked.NavigateToThis		= reference to ClosePeriod
						invoked.Attachment			= RequestAttachment
						invoked.WebsiteLink			= RequestLink
						invoked.FinancialForm		= FinancialForm
						if (RequestPerson = actor.agent(Employee).Employee)
							invoked.CreatedBy		= 0 
						else
							invoked.CreatedBy		= 2 
							invoked.WorkRequestedBy	= actor.agent(Employee).Employee
								
		LoadCloseMgmtCubeFile is a Set Action
			completion message is "LoadCubeFileHasBeenSubmittedToTheQueueForProcessing"
			
			Parameters
				PrmCloseManagementGroup		is a CloseManagementGroup
				
			Parameter Rules
				PrmCloseManagementGroup
					required
				
			Instance Selection
				where (CloseManagementGroup	= PrmCloseManagementGroup
				and    CloseManagementStatus.Open)
				
			Action Rules
				Set Rules
					Exit Rules
						invoke UpdateClosePeriodTaskCube PrmCloseManagementGroup
							invoked.PrmRefreshReload = 2 

				Instance Rules
					invoke LoadPeriodTaskCubeFile ClosePeriodTask
						invoked.PrmCloseManagementGroup	= CloseManagementGroup
						invoked.PrmClosePeriod			= ClosePeriod

		GeneralOverdueNotifications is a Set Action
			completion message is "GenerateOverdueNotificationsHasBeenSubmittedToTheQueueForProcessing"
			
			Parameters
				PrmCloseManagementGroup		is a CloseManagementGroup
				
			Parameter Rules
				PrmCloseManagementGroup
					required
				
			Instance Selection
				where (CloseManagementGroup	= PrmCloseManagementGroup
				and    CloseManagementStatus.Open)
				
			Action Rules
				Instance Rules
					invoke SendGeneralOverdueNotifications OverDueRel
						invoked.PrmCloseManagementGroup	= CloseManagementGroup
						invoked.PrmClosePeriod			= ClosePeriod

		TimeSensitiveOverdueNotifications is a Set Action
			completion message is "TimeSensitiveOverdueNotificationsHasBeenSubmittedToTheQueueForProcessing"
			
			Parameters
				PrmCloseManagementGroup		is a CloseManagementGroup
				
			Parameter Rules
				PrmCloseManagementGroup
					required
				
			Instance Selection
				where (CloseManagementGroup	= PrmCloseManagementGroup
				and    CloseManagementStatus.Open)
				
			Action Rules
				Instance Rules
					invoke SendTimeSensitiveOverdueNotifications DueTimeSensitiveNotificationRel
						invoked.PrmCloseManagementGroup	= CloseManagementGroup
						invoked.PrmClosePeriod			= ClosePeriod

		ExternalEmailNotifications is a Set Action  
			completion message is "ExternalEmailNotificationsHasBeenSubmittedToTheQueueForProcessing"
			
			Parameters
				CloseManagementGroup
				PrmClosePeriod				is a ClosePeriod

			Parameter Rules
				PrmClosePeriod
					initial value is (last OpenPeriodsRel.ClosePeriod)
					required
						"AnOpenPeriodIsRequired"
 					constraint (PrmClosePeriod.CloseManagementStatus.Open)
 						"PeriodMustBeOpenForWorkToUseThisAction"

			Instance Selection
				where (CloseManagementGroup	= CloseManagementGroup
				and    ClosePeriod			= PrmClosePeriod)
				
			Action Rules
				Instance Rules
					invoke SendExternalEmailNotifications ClosePeriodTask
						invoked.PrmCloseManagementGroup	= CloseManagementGroup
						invoked.PrmClosePeriod			= ClosePeriod

		CreatePeriodTaskApprovalResourceRecords is a Set Action
			completion message is "CreatePeriodTaskApprovalResourceRecordsHasBeenSubmittedToTheQueueForProcessing"

			Parameters
				PrmCloseManagementGroup		is a CloseManagementGroup
				PrmCreateFor				is Numeric 1
					States
						AllScheduledAndOpenPeriods			value is 1
						AllClosedPeriods					value is 2
						SpecificPeriod						value is 3
				PrmClosePeriod				is a ClosePeriod
				
			Parameter Rules
				PrmCloseManagementGroup
					required
				PrmCreateFor
					initial value is 1
					default to 1

			Instance Selection
				where (CloseManagementGroup	= PrmCloseManagementGroup
				and   ((PrmCreateFor.AllScheduledAndOpenPeriods and (CloseManagementStatus.Scheduled 	or CloseManagementStatus.Open))
				or     (PrmCreateFor.AllClosedPeriods 			and CloseManagementStatus.Closed)
				or     (PrmCreateFor.SpecificPeriod 			and ClosePeriod = PrmClosePeriod)))

			Action Rules
				Instance Rules
					invoke CreateTaskApprovalResourceRecords TaskRequiringApprovalRel
						invoked.PrmCloseManagementGroup	= CloseManagementGroup
						invoked.PrmClosePeriod			= ClosePeriod
