LeaseModification is a BusinessClass
	owned by lm
	prefix is LMOD

	Ontology
		symbolic key is LeaseModification
	
	Patterns
		implements Archivable

	Persistent Fields
		Status							is Numeric 1
			States
				Unreleased	value is 1
				Released	value is 2
		ModificationDate				is Date
		Description
		TermModification				is Boolean
		TermModificationType            is Numeric 2
  			States
        		Extension	value is 1
        		Reduction	value is 2
        TermModificationMonths			is Numeric 3
		OriginalTerm					is Numeric 3
		OriginalLeaseTerm				is Numeric 3
		OriginalImplicitInterestRate	is Percent 7.5
		OriginalEndDate					is Date
		OriginalNetPresentValue			is a CurrencyExchangeGroup
		OriginalLeaseObligation			is a CurrencyExchangeGroup
		OriginalROUAssetAmount			is a CurrencyExchangeGroup
		Term
        ImplicitInterestRate
        BeginDate	                  	is an ExchangeDate
        EndDate		                   	is Date  
		NetPresentValue					is a CurrencyExchangeGroup
		LeaseObligation					is a CurrencyExchangeGroup
		ROUAssetAmount					is a CurrencyExchangeGroup
        AmortizationRecalculated		is Boolean
        ModificationAmount              is a CurrencyExchangeGroup
		ModifyFundSplit					is Boolean
		PriorPeriodModification			is Boolean
		PriorPeriodDate					is Date
		PriorPeriodPaymentAmount		is an InternationalAmount
        ModificationNonLeaseComponent	is an ExecutoryCostCode
		PartialTermination				is Boolean
		TerminatedAssetValue			is an InternationalAmount
		TerminatedPercent				is Percent 7.5
		AmountsModification             is Boolean
		AmountsModificationType         is Numeric 2
			States
				Increment 	value is 1
				Decrement   value is 2
		ModifiedAmounts                      is an InternationalAmount
		OriginalBargainPurchaseAmount        is an InternationalAmount
		OriginalGuaranteedResidualAmount     is an InternationalAmount
		UpdatedBargainPurchaseAmount         is an InternationalAmount
		UpdatedGuaranteedResidualAmount      is an InternationalAmount

		NewImplicitInterestRate		 		 is Boolean
		NewTotalTerm					     is Boolean
		NewRemainingTerm					 is Boolean
		OriginalLeaseRateTable				 is a LeaseRateTable

		PartialTerminationGainLossAcount	 is a FinanceCodeBlockFull
    
    Local Fields
    	LocalAsset						is an Asset
    	LocalOriginalEndDate			is Date
		LocalEffectiveDate				is Date
		LocalNewTerm					is Numeric 3
		LocalNewLeaseTerm				is Numeric 3
		LocalPriorPeriodDate			is Date
		LocalAssetAdjustment			is an InternationalAmount
		LocalTwoTimesTheTerm			is an InternationalAmount
		LocalShortTermAdjustment		is an InternationalAmount
		LocalLongTermAdjustment			is an InternationalAmount
		LocalBaseShortTermAdjustment	is an InternationalAmount
		LocalBaseLongTermAdjustment		is an InternationalAmount
		LocalAssetLTDDifference			is an InternationalAmount
		LocalBaseAssetLTDDifference		is an InternationalAmount
		LocalImplicitInterestRate       is Percent 7.5
		LocalMaxCount					is Boolean
		LocalRemainingTerm   			is Numeric size 3
		LocalNumberOfYears				is Numeric size 3
		LocalMonthsToAdd				is Numeric size 3
		LocalTerm 						is Numeric size 3
		LocalBeginMonth					is Numeric size 2
		LocalBeginYear					is Numeric size 4
		LocalModificationMonth			is Numeric size 2
		LocalModificationYear			is Numeric size 4
		LocalCurrencyExchangeGroup		is a CurrencyExchangeGroup
		LocalROUPartialTermination		is an InternationalAmount
		LocalLiabilityPartialTerm		is an InternationalAmount

								    
	Transient Fields
		Currency						is a FromCurrency
			derive value from Lease.Currency
		BaseCurrency					is a ToCurrency
			derive value from Lease.BaseCurrency
		ModificationEffectiveDate		is Date
			derive value from DerivedModificationPeriodDate
					
	Field Rules
		ModificationDate
			required
				"MustEnterModificationDateWhenModifyingALease"
			constraint (ModificationDate < Lease.EndDate)
				"ModificationDateHasToBeBeforeItsScheduledEndDate;ConsiderClosingTheLease"
			LocalAsset = first AssetsRel.Asset
			constraint (InvoicedLeasePaymentDetailByDueDateRel not exist)
				"LeaseInvoicesExistOnOrAfterTheModificationDate,CannotUseThisModificationDate"
			if (Lease.LeaseClassification.Finance)
				constraint (ModificationDate > first PostingAssetBookRel.BookCalendarRel.LastPeriodDate
	            and 		ModificationDate <= first PostingAssetBookRel.BookCalendarRel.CurrentPeriodDate)
	            	"ModificationDateOnAFinanceLeaseMustBeInTheAssetBookCurrentPeriod"
		Description
			default to Lease.Description
		TermModificationType
			if (TermModification
			and !PartialTermination)
				required
					"TermModificationTypeIsRequired"
			else
				initialize
        TermModificationMonths
        	if (TermModification)
        		required
					"MustEnterTheNumberOfMonthsYouWouldLikeToExtendOrReduceTheLease"
			else
				initialize
			constraint (TermModificationMonths > 0)
				"NumberOfMonthsMustBeGreaterThanZero"
		OriginalTerm
			initial value is Lease.Term
			default to Lease.Term
		OriginalLeaseTerm
			initial value is Lease.LeaseTerm
			default to Lease.LeaseTerm
		OriginalImplicitInterestRate
			initial value is Lease.ImplicitInterestRate
			default to Lease.ImplicitInterestRate
		OriginalEndDate
			initial value is Lease.EndDate
			default to Lease.EndDate
		OriginalNetPresentValue
			initial value is Lease.NetPresentValue
			default to Lease.NetPresentValue
		OriginalLeaseObligation
			initial value is Lease.LeaseObligation
			default to Lease.LeaseObligation
		OriginalROUAssetAmount
			initial value is Lease.LeaseROUAssetAmount
			default to Lease.LeaseROUAssetAmount
		Term
			initial value is Lease.Term
	        if (TermModification)
	        	Term = DerivedTerm
	        else
	        	Term = Lease.Term
		ImplicitInterestRate




		BeginDate
			initial value is Lease.BeginDate
		EndDate
			initial value is Lease.EndDate
			if (TermModification)
	        	EndDate = DerivedEndDate
	        else
	        	EndDate = Lease.EndDate
		NetPresentValue
			initial value is Lease.NetPresentValue
			default to Lease.NetPresentValue
		LeaseObligation
			initial value is Lease.LeaseObligation
			default to Lease.LeaseObligation
		ROUAssetAmount
			initial value is Lease.LeaseROUAssetAmount
			default to Lease.LeaseROUAssetAmount

		PriorPeriodDate
            if (PriorPeriodModification)
                required
            else
                cannot be entered
                    "CanOnlyEnterPriorPeriodDateIfPriorPeriodModificationIsChecked"
			constraint (!PriorPeriodDate < Lease.BeginDate)
				"PriorPeriodDateCannotBePriorToTheLeaseBeginDate"			
			constraint (PriorPeriodDate < ModificationDate)
				"PriorPeriodDateMustBePriorToTheLeaseModificationDate"	

        PriorPeriodPaymentAmount
            if (!PriorPeriodModification)
                cannot be entered
                    "MustSelectPriorPeriodModificationToEnterPriorPeriodPaymentAmount"

        ModificationNonLeaseComponent
            if (PriorPeriodPaymentAmount entered)
                required
                    "ModificationLeaseComponentIsRequiredWhenPriorPeriodPaymentAmountEntered"
            if (ModificationNonLeaseComponent entered)
                constraint (LeaseExecutoryCostCodeRel exists)
                    "NonLeaseComponentIsNotAssignedToThisLease"
		
		TerminatedAssetValue
			constraint (TerminatedAssetValue > ROUAssetAmount)
				"TerminatedAssetValueCannotBeMoreThanTheCurrentROUAmount"
		OriginalBargainPurchaseAmount
			initial value is Lease.BargainPurchaseAmount.TransactionAmount
			default to Lease.BargainPurchaseAmount.TransactionAmount

		OriginalGuaranteedResidualAmount
			initial value is Lease.GuaranteedAmount.TransactionAmount
			default to Lease.GuaranteedAmount.TransactionAmount 

		UpdatedBargainPurchaseAmount
			initial value is Lease.BargainPurchaseAmount.TransactionAmount
			default to Lease.BargainPurchaseAmount.TransactionAmount		
			
		UpdatedGuaranteedResidualAmount
			initial value is Lease.GuaranteedAmount.TransactionAmount
			default to Lease.GuaranteedAmount.TransactionAmount 

	Derived Fields
		ExtensionMessage is a MessageField
			"Extend"
			
		ReductionMessage is a MessageField
			"Reduce"
		
		DerivedTerm is a DerivedField
			type is Numeric 3
			if (TermModification)
	        	if (TermModificationType.Extension)

	        		return (OriginalTerm + TermModificationMonths)
	        	else

	        		LocalNewTerm = OriginalTerm - TermModificationMonths
					if (Lease.IsLeaseAccountingMethodGASB87
					or Lease.LeaseClassification.Operating) 
						constraint (LocalNewTerm > 12)
							"TheTermReductionChangesTheLeaseToAShortTermLease;ThisIsCurrentlyNotAllowed"	        		
	        		return (LocalNewTerm)
	        else
	        	return (Lease.Term)
		
		DerivedLeaseTerm is a DerivedField
			type is Numeric 3
			if (TermModification)
	        	if (TermModificationType.Extension)
	        		return (Lease.LeaseTerm + TermModificationMonths)
	        	else
	        		LocalNewLeaseTerm = Lease.LeaseTerm - TermModificationMonths
					if (Lease.IsLeaseAccountingMethodGASB87
					or Lease.LeaseClassification.Operating) 
						constraint (LocalNewLeaseTerm > 12)
							"TheTermReductionChangesTheLeaseToAShortTermLease;ThisIsCurrentlyNotAllowed"	        		
	        		return (LocalNewLeaseTerm)
	        else
	        	return (Lease.LeaseTerm)

		DerivedEndDate is a DerivedField
			type is Date
			if (TermModification)
				if (TermModificationType.Extension)
	        		if (Lease.EndDate != OriginalEndDate + TermModificationMonths as months)
	        			return (OriginalEndDate + TermModificationMonths as months)
	        		else
	        			return Lease.EndDate
	        	else
	        		if (Lease.EndDate != Lease.EndDate - TermModificationMonths as months)
	        			return (OriginalEndDate - TermModificationMonths as months)
	        		else
	        			return Lease.EndDate
	        else
	        	return (Lease.EndDate)

		DerivedEffectiveDate is a DerivedField
			type is Date
			if (ModificationDate entered)
				if (first LeasePaymentDetailsNoECCDueDateRel.DueDate day != ModificationDate day)
					for each LeasePaymentDetailsNoECCDueDateRel
						if (each.DueDate month 	= ModificationDate month
						and each.DueDate year 	= ModificationDate year)
							LocalEffectiveDate 	= each.DueDate
							end for each
				else
					LocalEffectiveDate	= ModificationDate
				return LocalEffectiveDate
	    
		DerivedModificationPeriodDate is a DerivedField 
			type is Date
			if (ModificationDate entered)
				LocalEffectiveDate 		= ModificationDate - ModificationDate day
				LocalEffectiveDate 		= LocalEffectiveDate  + 1 day
				return LocalEffectiveDate

	    DerivedImplicitInterestRate is a DerivedField
	    	type is Percent 7.5
	        if (ImplicitInterestRate != Lease.ImplicitInterestRate)
	        	return ImplicitInterestRate
	        else
	        	return Lease.ImplicitInterestRate

		DerivedCalculateDifferenceInMonths is a DerivedField	
			type is Numeric 3 
			initialize LocalTerm
			initialize LocalNumberOfYears
			initialize LocalMonthsToAdd
			LocalBeginMonth			= BeginDate month
			LocalBeginYear			= BeginDate year
			LocalModificationMonth	= ModificationEffectiveDate	month
			LocalModificationYear	= ModificationEffectiveDate year
			if (LocalModificationYear > LocalBeginYear)
				LocalTerm			= 12 - LocalBeginMonth
				LocalTerm			+= 1
				LocalNumberOfYears	= LocalModificationYear - LocalBeginYear
				if (LocalNumberOfYears = 1)
					LocalTerm		= LocalTerm + LocalModificationMonth
				else
					LocalNumberOfYears	= LocalNumberOfYears - 1
					LocalMonthsToAdd	= LocalNumberOfYears * 12
					LocalTerm			= LocalTerm + LocalMonthsToAdd
					LocalTerm			= LocalTerm + LocalModificationMonth
			else
				LocalTerm				= LocalModificationMonth - LocalBeginMonth
				LocalTerm				+= 1
			return LocalTerm

		DerivedDefaultImplicitInterestRate is a DerivedField	
			type is Percent 7.5
			if (LeaseRateTableRel exists)
				if (IsRateTableHasAllowOverride and ImplicitInterestRate entered)
					constraint (!EnableRateOptionToUseLeaseRateTable)
						"RateCannotBeEnteredManuallyIfOneOfTheRateOptionsIsSelected"
					LocalImplicitInterestRate = ImplicitInterestRate	
					return LocalImplicitInterestRate
				else
				if (!IsRateTableHasAllowOverride and ImplicitInterestRate entered)
					constraint (ImplicitInterestRate not entered)
						"CannotEnterTheRate;AllowOverrideMustBeEnabledInTheRateTable"
				else
				if(TermModification)
					if (MustEnableFlagForRateTable)
						if (NewImplicitInterestRate)
							LocalImplicitInterestRate = Lease.InterestRate
						if (NewTotalTerm)
							LocalImplicitInterestRate = last LeaseRateTableDetailTotalTermRel.EffectiveRate
							if (LeaseRateTableDetailTotalTermRel exists)
								LocalMaxCount = true
							if (!IsRateTableHasAllowOverride)
								constraint(LocalMaxCount)
									"TermDoesNotExistInTheLeaseRateTable"
							else
							if (IsRateTableHasAllowOverride and (LocalMaxCount = false))
								constraint(ImplicitInterestRate entered)
									"MustEnterRateManuallyAsTermDoesNotExistInTheLeaseRateTable"
						if (NewRemainingTerm)
							LocalRemainingTerm = DerivedTerm - DerivedCalculateDifferenceInMonths
							LocalImplicitInterestRate = last LeaseRateTableDetailRemainingTermRel.EffectiveRate
							if (LeaseRateTableDetailRemainingTermRel exists)
								LocalMaxCount = true
							if (!IsRateTableHasAllowOverride)
								constraint(LocalMaxCount)
									"TermDoesNotExistInTheLeaseRateTable"
							else
							if (IsRateTableHasAllowOverride and (LocalMaxCount = false))
								constraint(ImplicitInterestRate entered)
									"MustEnterRateManuallyAsTermDoesNotExistInTheLeaseRateTable"
						return LocalImplicitInterestRate
					else
						constraint(MustEnableFlagForRateTable)
							"MustEnableOnlyOneOfTheRateOptionsToGetTheRate;OrEnterTheRateManually"
				else
					return Lease.ImplicitInterestRate
			else
				constraint (LeaseRateTableRel exists)
					"LeaseRateTableDoesNotExistForTheLeaseCurrencyAndLeaseType"	
	    
	    UseBookCurrencyOnLeasedAsset is a DerivedField
	    	type is Boolean
	    	LocalAsset = first AssetsRel.Asset
    		if (PostingAssetBookRel.UseBookCurrencyOnLeasedAsset)
    			return true
    		else
    			return false
 


	    AssetAdjustmentNeeded is a DerivedField
	    	type is Boolean
			if (!UseBookCurrencyOnLeasedAsset)
				LocalAssetAdjustment = Lease.BaseAssetAdjustmentAfterModification
			else
				LocalAssetAdjustment = Lease.AssetAdjustmentAfterModification
			if (LocalAssetAdjustment < "0")
				LocalAssetAdjustment = LocalAssetAdjustment * -1

			LocalTwoTimesTheTerm		= Lease.Term * 2
			LocalTwoTimesTheTerm		= LocalTwoTimesTheTerm /100

			if (LocalAssetAdjustment > LocalTwoTimesTheTerm)
				return true
			else
				return false			


		DerivedGainLoss is a DerivedField
			type is like InternationalAmount
			if (TerminatedAssetValue entered)
				return (TerminatedAssetValue + Lease.AssetAdjustmentAfterModification)
			else
				if (TerminatedPercent entered)
					LocalROUPartialTermination = TerminatedPercent * Lease.DerivedCurrentLeaseROU
					LocalLiabilityPartialTerm  = TerminatedPercent * Lease.DerivedCurrentLeaseLiability
					return (LocalLiabilityPartialTerm - LocalROUPartialTermination)

		DerivedGainLossSummary is a DerivedField
			type is like InternationalAmount
			if (LeaseModification.Status.Released
			and TerminatedAssetValue entered)
				return (((OriginalROUAssetAmount.TransactionAmount - ROUAssetAmount.TransactionAmount) - TerminatedAssetValue) * -1)
			else 
				if (LeaseModification.Status.Released
				and TerminatedPercent entered)
					return ((ROUAssetAmount.TransactionAmount - LeaseObligation.TransactionAmount) * TerminatedPercent)

		DerivedShortTermAdjustment is a DerivedField









			type is like InternationalAmount
			LocalPriorPeriodDate 			= DerivedEffectiveDate - 1 month
			LocalShortTermAdjustment 		= LeaseCurrencyAfterModificationRel.ShortTermLiability + LeaseCurrencyAfterModificationRel.ShortTermLiabilityReduction
			if (Lease.LeaseClassification.Finance)
				LocalAssetLTDDifference 	= OriginalROUAssetAmount.TransactionAmount - LeaseCurrencyPriorToModificationRel.ROUBalance
				LocalAssetLTDDifference		= LocalAssetLTDDifference - Lease.LifeToDateDepreciation
				if (LeaseCurrencyAfterModificationRel.Amount != "0")
					LocalShortTermAdjustment = LocalShortTermAdjustment - LeaseCurrencyAfterModificationRel.InterestAmount
				LocalShortTermAdjustment	= LocalShortTermAdjustment - LocalAssetLTDDifference
			LocalShortTermAdjustment 		= LocalShortTermAdjustment - LeaseCurrencyPriorToModificationRel.ShortTermLiability
			return LocalShortTermAdjustment

		DerivedLongTermAdjustment is a DerivedField







			type is like InternationalAmount
			LocalPriorPeriodDate = DerivedEffectiveDate - 1 month
			LocalLongTermAdjustment = LeaseCurrencyAfterModificationRel.LongTermLiability + LeaseCurrencyAfterModificationRel.LongTermLiabilityReduction
			LocalLongTermAdjustment = LocalLongTermAdjustment - LeaseCurrencyPriorToModificationRel.LongTermLiability
			return LocalLongTermAdjustment

		DerivedBaseShortTermAdjustment is a DerivedField









			type is like InternationalAmount
			LocalPriorPeriodDate 			= DerivedEffectiveDate - 1 month
			LocalBaseShortTermAdjustment 	= LeaseBaseCurrencyAfterModificationRel.ShortTermLiability + LeaseBaseCurrencyAfterModificationRel.ShortTermLiabilityReduction
			if (Lease.LeaseClassification.Finance)
				LocalBaseAssetLTDDifference 	= OriginalROUAssetAmount.BaseAmount.EnteredCurrencyAmount - LeaseBaseCurrencyPriorToModificationRel.ROUBalance
				LocalBaseAssetLTDDifference		= LocalBaseAssetLTDDifference - Lease.LifeToDateDepreciation
				if (LeaseBaseCurrencyAfterModificationRel.Amount != "0")
					LocalBaseShortTermAdjustment = LocalBaseShortTermAdjustment - LeaseBaseCurrencyAfterModificationRel.InterestAmount
				LocalBaseShortTermAdjustment	= LocalBaseShortTermAdjustment - LocalBaseAssetLTDDifference
			LocalBaseShortTermAdjustment = LocalBaseShortTermAdjustment - LeaseBaseCurrencyPriorToModificationRel.ShortTermLiability
			return LocalBaseShortTermAdjustment

		DerivedBaseLongTermAdjustment is a DerivedField







			type is like InternationalAmount
			LocalPriorPeriodDate = DerivedEffectiveDate - 1 month
			LocalBaseLongTermAdjustment = LeaseBaseCurrencyAfterModificationRel.LongTermLiability + LeaseBaseCurrencyAfterModificationRel.LongTermLiabilityReduction
			LocalBaseLongTermAdjustment = LocalBaseLongTermAdjustment - LeaseBaseCurrencyPriorToModificationRel.LongTermLiability
			return LocalBaseLongTermAdjustment

	Relations
 		LeasePaymentDetailRel 
            one-to-many relation to LeasePaymentDetail
            Field Mapping uses symbolic key
                related.Company = Company
                related.Lease   = Lease
                related.Vendor	= Vendor

		LeaseResidualOrPurchaseOptionPaymentRel 
            one-to-many relation to LeasePaymentDetail
            Field Mapping uses symbolic key
                related.Company = Company
                related.Lease   = Lease
                related.Vendor	= Vendor
            Instance Selection
            	where (related.LeasePaymentDetail.ExecutoryCostCode not entered
            	and   (related.ResidualPayment = true
                or     related.PurchaseOptionPayment = true))

		LeasePaymentDetailByDueDateRel 
            one-to-many relation to LeasePaymentDetail
            Field Mapping uses ByDueDate
                related.Company = Company
                related.Lease   = Lease
                related.Vendor	= Vendor
                
		InvoicedLeasePaymentDetailByDueDateRel 
            one-to-many relation to LeasePaymentDetail
            Field Mapping uses ByDueDate
                related.Company = Company
                related.Lease   = Lease
                related.Vendor	= Vendor
            Instance Selection
            	where (related.DueDate >= DerivedEffectiveDate
            	and    related.Released
            	and    related.LeasePaymentDetail.ExecutoryCostCode not entered)

		NextLeaseNonZeroPaymentRel 
            one-to-many relation to LeasePaymentDetail
            Field Mapping uses ByDueDate
                related.Company = Company
                related.Lease   = Lease
                related.Vendor	= Vendor
            Instance Selection
            	where (related.LeasePaymentDetail.ExecutoryCostCode not entered
            	and    related.ResidualPayment = false
                and    related.PurchaseOptionPayment = false
				and    related.PaymentAmount != 0
				and    related.Released = false
				and    related.DueDate	>= DerivedEffectiveDate)

		LeasePaymentDetailsNoECCDueDateRel 
            one-to-many relation to LeasePaymentDetail
            Field Mapping uses ByDueDate
                related.Company = Company
                related.Lease   = Lease
                related.Vendor	= Vendor
            Instance Selection
            	where (related.LeasePaymentDetail.ExecutoryCostCode not entered
            	and    related.ResidualPayment = false
                and    related.PurchaseOptionPayment = false)

		LeaseModificationPaymentDetailByDueDateRel
			one-to-many relation to LeaseModificationPaymentDetail
            Field Mapping uses ByDueDate
                related.Company 			= Company
                related.Lease   			= Lease
        		related.Vendor				= Vendor
        		related.LeaseModification	= LeaseModification
		
        LeaseModificationPaymentPeriodBalanceRel
        	one-to-many relation to LeaseModificationPaymentPeriodBalance
            Field Mapping uses symbolic key
                related.Company	= Company
                related.Lease	= Lease
                related.Vendor	= Vendor		
            Instance Selection
                where (related.LeaseModificationPaymentBalance.ExecutoryCostCode not entered)
                        
        LeaseModificationPaymentPeriodBalanceByDateRel
            one-to-many relation using LeaseModificationPaymentPeriodBalanceRel
            Instance Selection
            	where (related.PaymentDueDate month = ModificationDate month
				and    related.PaymentDueDate year  = ModificationDate year)
            	
        LeaseCurrencyPaymentPeriodBalanceRel
			one-to-many relation to LeaseCurrencyPaymentPeriodBalance
            Field Mapping uses symbolic key
                related.Company	= Company
                related.Lease	= Lease
                related.Vendor	= Vendor		
            Instance Selection
                where (related.LeasePaymentBalance.ExecutoryCostCode not entered)
        
        LeaseModificationCurrencyPaymentPeriodBalanceRel
        	one-to-many relation to LeaseModificationCurrencyPaymentPeriodBalance
            Field Mapping uses symbolic key
                related.Company	= Company
                related.Lease	= Lease
                related.Vendor	= Vendor		
            Instance Selection
                where (related.LeaseModificationPaymentBalance.ExecutoryCostCode not entered)
        
        LeaseModificationCurrencyPaymentPeriodBalanceByDateRel
            one-to-many relation using LeaseModificationCurrencyPaymentPeriodBalanceRel
            Instance Selection
            	where (related.PaymentDueDate month = ModificationDate month
				and    related.PaymentDueDate year  = ModificationDate year)

		LeaseCurrencyPriorToModificationRel
        	one-to-many relation to LeaseModificationCurrencyPaymentPeriodBalance
            Field Mapping uses symbolic key
                related.Company													= Company
                related.Lease													= Lease
                related.Vendor													= Vendor
        	Instance Selection
                where (related.PaymentDueDate		= LocalPriorPeriodDate
				and    related.LeaseModification	= LeaseModification
				and    related.LeaseModificationPaymentBalance.ExecutoryCostCode not entered)			

		LeaseBaseCurrencyPriorToModificationRel
        	one-to-many relation to LeaseModificationPaymentPeriodBalance
            Field Mapping uses symbolic key
                related.Company													= Company
                related.Lease													= Lease
                related.Vendor													= Vendor
        	Instance Selection
                where (related.PaymentDueDate		= LocalPriorPeriodDate
				and    related.LeaseModification	= LeaseModification
				and    related.LeaseModificationPaymentBalance.ExecutoryCostCode not entered)

		LeaseCurrencyAfterModificationRel
        	one-to-many relation to LeaseCurrencyPaymentPeriodBalance
            Field Mapping uses symbolic key
                related.Company													= Company
                related.Lease													= Lease
                related.Vendor													= Vendor
        	Instance Selection
                where (related.PaymentDueDate		= DerivedEffectiveDate

				and    related.LeasePaymentBalance.ExecutoryCostCode not entered)			

		LeaseBaseCurrencyAfterModificationRel
        	one-to-many relation to LeasePaymentPeriodBalance
            Field Mapping uses symbolic key
                related.Company													= Company
                related.Lease													= Lease
                related.Vendor													= Vendor
        	Instance Selection
                where (related.PaymentDueDate		= DerivedEffectiveDate

				and    related.LeasePaymentBalance.ExecutoryCostCode not entered)

        LeasePaymentBalanceRel
        	one-to-many relation to LeasePaymentBalance
            Field Mapping uses symbolic key
                related.Company	= Company				
                related.Lease	= Lease
                related.Vendor	= Vendor
			Instance Selection
				where (related.LeasePaymentBalance.ExecutoryCostCode not entered)
                
        LeaseCurrencyPaymentBalanceRel
			one-to-many relation to LeaseCurrencyPaymentBalance
            Field Mapping uses symbolic key
                related.Company	= Company
                related.Lease	= Lease
                related.Vendor	= Vendor
			Instance Selection
				where (related.LeasePaymentBalance.ExecutoryCostCode not entered)
   



                
        UnreleasedPaymentDetailsBeforeModificationDateRel is a LeasePaymentDetail set
            Instance Selection
            	where (related.DueDate <= ModificationDate
            	and   !related.Released)
		
		ReleasedPaymentDetailsAfterModificationDateRel is a LeasePaymentDetail set
			Instance Selection
            	where (related.DueDate > ModificationDate
            	and    related.Released)
        
        AssetsRel
            one-to-many relation to Asset
            Field Mapping uses Set13
                related.FinanceEnterpriseGroup 	= Company.FinanceEnterpriseGroup
                related.AssetLease.LeaseCompany = Company
                related.AssetLease.Lease 		= Lease
    
    	BookCalendarRel
			one-to-many relation to BookCalendar
			Field Mapping uses Set4
				related.Company	= Company
		
		PostingAssetBookRel
			one-to-many relation to AssetBook
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= LocalAsset.FinanceEnterpriseGroup 
				related.Asset					= LocalAsset
			Instance Selection
				where (related.BookPostingBook)
		
		ModificationGLClosePeriodRel
			one-to-many relation to GeneralLedgerClosePeriod
			Field Mapping uses ByEndDate
				related.FinanceEnterpriseGroup			 = Company.BusinessGroup.FinanceEnterpriseGroup
				related.GeneralLedgerCloseConfiguration	 = Company.AccountingEntity.CloseConfiguration
			Instance Selection
				where (related.GeneralLedgerClosePeriod.DerivedPeriodMonth = ModificationDate month
				and    related.GeneralLedgerClosePeriod.DerivedPeriodYear = ModificationDate year)

        ResidualPaymentDetailsRel
            one-to-many relation to LeasePaymentDetail
            Field Mapping uses symbolic key
                related.Company = Company
                related.Lease   = Lease
                related.Vendor	= Vendor
			Instance Selection
				where (related.ResidualPayment = true)

		LeaseFundsRel is an LeaseFund set

		LeaseModificationFundsRel is an LeaseModificationFund set

		LeaseExecutoryCostCodeRel
			one-to-one relation to LeaseExecutoryCostCode
            Field Mapping uses symbolic key
                related.Company 			= Company
                related.ExecutoryCostCode	= ModificationNonLeaseComponent
                related.Lease   			= Lease

		ModificationInProgressRel
			one-to-many relation to LeaseModification
			Field Mapping uses symbolic key
				related.Company 		   = Company
				related.Lease			   = Lease
				related.Vendor			   = Vendor			
			Instance Selection
				where (related.Status.Unreleased)

		LeaseRateTableRel
			one-to-one relation to LeaseRateTable
			Field Mapping uses Set1
				related.FinanceEnterpriseGroup 	= Company.BusinessGroup.FinanceEnterpriseGroup
				related.Currency = Lease.Currency
				related.LeaseType = Lease.LeaseType

		LeaseRateTableOverrideRel
			one-to-many relation to LeaseRateTable
			Field Mapping uses Set1
				related.FinanceEnterpriseGroup 	= Company.BusinessGroup.FinanceEnterpriseGroup
				related.Currency = Lease.Currency
				related.LeaseType = Lease.LeaseType
			Instance Selection
				where (related.LeaseRateTable = LeaseRateTableRel.LeaseRateTable)

		LeaseRateTableDetailTotalTermRel
			one-to-many relation to LeaseRateTableDetail
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= Company.BusinessGroup.FinanceEnterpriseGroup 
				related.LeaseRateTable			 = LeaseRateTableRel.LeaseRateTable	
			Instance Selection
				where (related.MaxTerm >= DerivedTerm)

		LeaseRateTableDetailRemainingTermRel
			one-to-many relation to LeaseRateTableDetail
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= Company.BusinessGroup.FinanceEnterpriseGroup
				related.LeaseRateTable			 = LeaseRateTableRel.LeaseRateTable	
			Instance Selection
				where (related.MaxTerm >= LocalRemainingTerm)
		
		LeaseIncentiveRel 
			one-to-many relation to LeaseIncentive
			Field Mapping uses symbolic key
				related.Company    = Company
				related.Lease      = Lease
				related.Vendor     = Vendor	

	Sets

		ByModificationDate
			Sort Order
				ModificationDate
				Company
				Lease
				LeaseModification

    Conditions
    	HasDifferentCurrencies
    		when (Lease.Currency != Lease.BaseCurrency)

		AllowModificationToBeReset
			when (Lease.Status.Modify)

		AllowModificationToBeReleased
			when (AmortizationRecalculated
			and   Lease.Status.Modify)

		LesaeHasFundSplit
			when (Lease.LeaseFundExists)

		LeaseHasTerminationOption
			when (Lease.TerminationOption
			or	  Lease.LeaseAccountingMethod.IFRS16)

		IsModificationInProgress
			when (Lease.Status.Modify
			and   Status.Unreleased)
		
		ModificationInProgressExists
			when (ModificationInProgressRel exists)

		IsValidForActorContext
			restricted
			when (Company.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)

		IsRateTableHasAllowOverride		
			restricted
			when (LeaseRateTableOverrideRel.AllowOverride)

		MustEnableFlagForRateTable		
			restricted
			when ((NewImplicitInterestRate 
			and  !NewTotalTerm
			and  !NewRemainingTerm)
			or   (!NewImplicitInterestRate 
			and  NewTotalTerm 
			and  !NewRemainingTerm)
			or   (!NewImplicitInterestRate 
			and  !NewTotalTerm 
			and  NewRemainingTerm))

		EnableRateOptionToUseLeaseRateTable  
			restricted
			when (NewImplicitInterestRate 
			or    NewTotalTerm
			or    NewRemainingTerm)

		HasLeaseIncentives 
			restricted
			when (LeaseIncentiveRel exists)

		IsIFRSLease
			restricted
			when (Lease.LeaseAccountingMethod.IFRS16)	    

	Rule Blocks













	Actions

		Purge is a Purge Action
			restricted	
	
	StateCycles
		LeaseModificationCycle is a StateCycle
			state field is Status
													
			Unreleased is a State
				Create is a Create Action
					Action Rules

				    	initialize AmortizationRecalculated
				    	LocalOriginalEndDate	= Lease.EndDate
						OriginalBargainPurchaseAmount= Lease.BargainPurchaseAmount.TransactionAmount
						OriginalGuaranteedResidualAmount = Lease.GuaranteedAmount.TransactionAmount
						OriginalLeaseRateTable = Lease.LeaseRateTable
						if (Lease.DefaultLeaseInterestRate)
							ImplicitInterestRate = DerivedDefaultImplicitInterestRate
						else
							if (ImplicitInterestRate entered)
								ImplicitInterestRate  = ImplicitInterestRate
							else
								ImplicitInterestRate  = Lease.ImplicitInterestRate
				    	invoke RestrictedUpdate Lease 
							invoked.Status 					= 5 
							invoked.Term 					= DerivedTerm
							invoked.LeaseTerm				= DerivedLeaseTerm
							if (this instance.Lease.DefaultLeaseInterestRate)	
								invoked.InterestRate = ImplicitInterestRate
								invoked.ImplicitInterestRate = ImplicitInterestRate
								invoked.LeaseRateTable  = LeaseRateTableRel.LeaseRateTable	
							else
								invoked.ImplicitInterestRate	= DerivedImplicitInterestRate
							invoked.EndDate					= DerivedEndDate 
							invoked.BargainPurchaseAmount.TransactionAmount = UpdatedBargainPurchaseAmount
							invoked.GuaranteedAmount.TransactionAmount = UpdatedGuaranteedResidualAmount
				    Exit Rules

						initialize LocalCurrencyExchangeGroup
						LocalCurrencyExchangeGroup.TransactionAmount 				= ModificationAmount.TransactionAmount
						LocalCurrencyExchangeGroup.BaseAmount.EnteredCurrencyRate 	= Lease.BaseCurrencyRate
						LocalCurrencyExchangeGroup.BaseAmount.ToCurrency			= Lease.BaseCurrency
						ModificationAmount.BaseAmount.EnteredCurrencyAmount			= LocalCurrencyExchangeGroup.BaseAmount.OutputCurrencyAmount			        	
						
						if (ModifyFundSplit)
							for each LeaseFundsRel 
								invoke Create LeaseModificationFund
			        				fill in fields from each
									invoked.LeaseModification								= LeaseModification
									invoked.LeaseFund										= each.LeaseFund
									invoked.Company											= Company
									invoked.Lease											= Lease
									invoked.Vendor											= Vendor
									invoked.LeaseModification								= LeaseModification
									invoked.ModificationDate								= ModificationDate
									invoked.Description										= Description

						for each LeasePaymentDetailRel 
			        		invoke Create LeaseModificationPaymentDetail
			        			fill in fields from each
			        			invoked.Company												= Company
								invoked.Lease												= Lease
								invoked.Vendor												= Vendor
								invoked.LeaseModification									= LeaseModification
								invoked.LeaseModificationPaymentDetail.PaymentNumber		= each.LeasePaymentDetail.PaymentNumber
								invoked.LeaseModificationPaymentDetail.ExecutoryCostCode	= each.LeasePaymentDetail.ExecutoryCostCode
								if(each.DueDate = Lease.EndDate)
									if (each.ResidualPayment or each.PurchaseOptionPayment)
										if(Lease.GuaranteedAmount.TransactionAmount entered)
											invoked.ModifiedAmount							= UpdatedGuaranteedResidualAmount
										else
											invoked.ModifiedAmount                          = UpdatedBargainPurchaseAmount
									else
										invoked.ModifiedAmount                              = each.PaymentAmount
								else
									invoked.ModifiedAmount                                  = each.PaymentAmount
								invoked.OriginatingTransaction								= reference to each.LeasePaymentDetail
        						
						for each LeasePaymentBalanceRel 
		        			invoke Create LeaseModificationPaymentBalance
			        			fill in fields from each
			        			invoked.Company												= Company
								invoked.Lease												= Lease
								invoked.Vendor												= Vendor
								invoked.LeaseModification									= LeaseModification
								invoked.LeaseModificationPaymentBalance.ExecutoryCostCode	= each.LeasePaymentBalance.ExecutoryCostCode
								invoked.LeaseModificationPaymentBalance.FiscalYear			= each.LeasePaymentBalance.FiscalYear
						
							for each each.LeasePaymentPeriodBalance set
				        		invoke Create LeaseModificationPaymentPeriodBalance
				        			fill in fields from each
				        			invoked.Company												= Company
									invoked.Lease												= Lease
									invoked.Vendor												= Vendor
									invoked.LeaseModification									= LeaseModification
									invoked.LeaseModificationPaymentBalance.ExecutoryCostCode	= each.LeasePaymentBalance.ExecutoryCostCode
									invoked.LeaseModificationPaymentBalance.FiscalYear			= each.LeasePaymentBalance.FiscalYear
									invoked.LeaseModificationPaymentPeriodBalance				= each.LeasePaymentPeriodBalance
						
						invoke Update last LeaseModificationPaymentPeriodBalanceByDateRel
							invoked.ModificationAlert = true 

						for each LeaseResidualOrPurchaseOptionPaymentRel
							invoke RestrictedUpdate each
								if(each.ResidualPayment)
									invoked.PaymentAmount								  = UpdatedGuaranteedResidualAmount
								else
									invoked.PaymentAmount                                 = UpdatedBargainPurchaseAmount

						for each LeaseCurrencyPaymentBalanceRel 
			        		invoke Create LeaseModificationCurrencyPaymentBalance
			        			fill in fields from each
			        			invoked.Company												= Company
								invoked.Lease												= Lease
								invoked.Vendor												= Vendor
								invoked.LeaseModification									= LeaseModification
								invoked.LeaseModificationPaymentBalance.ExecutoryCostCode	= each.LeasePaymentBalance.ExecutoryCostCode
								invoked.LeaseModificationPaymentBalance.FiscalYear			= each.LeasePaymentBalance.FiscalYear
								invoked.LeaseModificationCurrencyPaymentBalance.Currency	= each.LeaseCurrencyPaymentBalance.Currency
  
							for each each.LeaseCurrencyPaymentPeriodBalance set
				        		invoke Create LeaseModificationCurrencyPaymentPeriodBalance
				        			fill in fields from each
				        			invoked.Company												= Company
									invoked.Lease												= Lease
									invoked.Vendor												= Vendor
									invoked.LeaseModification									= LeaseModification
									invoked.LeaseModificationPaymentBalance.ExecutoryCostCode	= each.LeasePaymentBalance.ExecutoryCostCode
									invoked.LeaseModificationPaymentBalance.FiscalYear			= each.LeasePaymentBalance.FiscalYear
									invoked.LeaseModificationCurrencyPaymentBalance.Currency	= each.LeaseCurrencyPaymentBalance.Currency
									invoked.LeaseModificationCurrencyPaymentPeriodBalance		= each.LeaseCurrencyPaymentPeriodBalance
						
						invoke Update last LeaseModificationCurrencyPaymentPeriodBalanceByDateRel
							invoked.ModificationAlert = true
										
						if  (Lease.GuaranteedAmount.TransactionAmount entered
						and DerivedEndDate != LocalOriginalEndDate)
							if (ResidualPaymentDetailsRel exist)
								invoke RestrictedDelete ResidualPaymentDetailsRel
								
							invoke Create LeasePaymentDetail
								invoked.Company						= Company
								invoked.Lease						= Lease
								invoked.Vendor						= Vendor								
								invoked.DueDate						= DerivedEndDate
								invoked.PaymentAmount				= Lease.GuaranteedAmount.TransactionAmount
								invoked.Description					= "Residual Payment"
								invoked.ResidualPayment				= true
								invoked.Currency					= Lease.Currency
								invoked.CurrencyNumberOfDecimals	= Lease.CurrencyNumberOfDecimals
								invoked.BaseCurrency				= Lease.BaseCurrency
								invoked.BaseCurrencyRate			= Lease.BaseCurrencyRate
								invoked.BaseNumberOfDecimals		= Lease.BaseNumberOfDecimals
								invoked.BasePaymentAmount			= Lease.GuaranteedAmount.BaseAmount.EnteredCurrencyAmount								

						if(LeaseIncentiveRel exists) 
							for each LeaseIncentiveRel
								invoke Create LeaseModificationIncentive 
									fill in fields from each
									invoked.IncentiveDate                                       = each.IncentiveDate
									invoked.LeaseModificationIncentive                          = each.LeaseIncentive
									invoked.IncentiveType                                       = each.IncentiveType
									invoked.Amount.TransactionAmount                            = each.Amount.TransactionAmount
									invoked.LeaseModification                                   = LeaseModification

				Update is an Update Action
					valid when (Lease.Status.Modify)
					Action Rules
						if (Term changed
						or 	ImplicitInterestRate changed 
						or UpdatedBargainPurchaseAmount changed
						or UpdatedGuaranteedResidualAmount changed)
							if (Lease.DefaultLeaseInterestRate)
								ImplicitInterestRate = DerivedDefaultImplicitInterestRate
							else
								if (ImplicitInterestRate entered)
									ImplicitInterestRate  = ImplicitInterestRate
								else
									ImplicitInterestRate  = Lease.ImplicitInterestRate
							invoke RestrictedUpdate Lease 
								invoked.Term 					= DerivedTerm
								invoked.LeaseTerm				= DerivedLeaseTerm
								if (this instance.Lease.DefaultLeaseInterestRate)		
									invoked.InterestRate = ImplicitInterestRate
									invoked.ImplicitInterestRate = ImplicitInterestRate
									invoked.LeaseRateTable  = LeaseRateTableRel.LeaseRateTable	
								else
									invoked.ImplicitInterestRate	= DerivedImplicitInterestRate
								invoked.EndDate					= DerivedEndDate
								invoked.BargainPurchaseAmount.TransactionAmount = UpdatedBargainPurchaseAmount
                                invoked.GuaranteedAmount.TransactionAmount = UpdatedGuaranteedResidualAmount
							
							AmortizationRecalculated = false
					Exit Rules
						initialize LocalCurrencyExchangeGroup
						LocalCurrencyExchangeGroup.TransactionAmount 				= ModificationAmount.TransactionAmount
						LocalCurrencyExchangeGroup.BaseAmount.EnteredCurrencyRate 	= Lease.BaseCurrencyRate
						LocalCurrencyExchangeGroup.BaseAmount.ToCurrency			= Lease.BaseCurrency
						ModificationAmount.BaseAmount.EnteredCurrencyAmount			= LocalCurrencyExchangeGroup.BaseAmount.OutputCurrencyAmount

				RestrictedUpdate is an Update Action
					restricted
					bypass field rules
				
				Delete is a Delete Action
					restricted
		


					
				Release is an Instance Action
					restricted				
					Action Rules
						make transition to Released
                    Exit Rules
                        if (PriorPeriodPaymentAmount entered)
                            if (NextLeaseNonZeroPaymentRel exists)
                                invoke Create first NextLeaseNonZeroPaymentRel
                                    fill in fields from this instance
                                    invoked.LeasePaymentDetail.ExecutoryCostCode	= ModificationNonLeaseComponent
                                    invoked.DueDate									= NextLeaseNonZeroPaymentRel.DueDate
                                    invoked.PaymentAmount							= PriorPeriodPaymentAmount
                                    invoked.CombineWithLeasePayment					= true                           
				
				RecalculateAmortization is an Instance Action
					valid when (!AmortizationRecalculated)
					Action Rules
						invoke RecalculateAmortization Modify Lease			
				
				ReleaseModification is an Instance Action
					valid when (AmortizationRecalculated)
					Action Rules
						invoke ReleaseModification Modify Lease
												
				ResetModification is an Instance Action
					restricted
					Action Rules
						invoke ResetModification Modify Lease
						
			Released is a State
