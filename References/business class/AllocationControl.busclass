AllocationControl is a BusinessClass
    owned by Allocations
    prefix is ALLCT

    Ontology
    	symbolic key is AllocationControl

    Persistent Fields
        Description
		Type							is Numeric size 1 
			States
				Actuals			value is 0
				Budget 			value is 3
		Scenario


		Calendar						is a GeneralLedgerCalendar
        PeriodType						is Numeric size 1
			States
				Year		     value is 1
				Quarter		     value is 2
				Month		     value is 3
				Week		     value is 4

		DefaultEntityBasis				is a ReportingBasis

		Currency
		CurrencyTable

		AccountingUnitStructure
		FinanceDimension1Structure
		FinanceDimension2Structure
		FinanceDimension3Structure
		FinanceDimension4Structure
		FinanceDimension5Structure
		FinanceDimension6Structure
		FinanceDimension7Structure
		FinanceDimension8Structure
		FinanceDimension9Structure
		FinanceDimension10Structure
		ProjectStructure
		AccountStructure					is a ReportingChart
		EnableBatch							is Boolean
			default label is "AllowBatchRunOfAllocationLines"
		NumberOfBatches						is Numeric size 2
			default label is "MinimumNumberOfBatches"
#ifdef module truecost   
		TrueCostConfiguration
		TrueCostAllocationControl
			delete ignored
#endif
#ifndef module truecost 
		TrueCostConfiguration			is like FinanceEnterpriseGroup  
		TrueCostAllocationControl		is AlphaUpper 20
#endif
		JournalizedDetailDescriptionOptions

	Conditions
		AllocationLoggingEnabled
			restricted
			when (config.DisableAllocationLogging not = true)

		Existing
			restricted
			when (AllocationControl exists)

		RunningAllAllocations
			restricted
			when (Allocation not entered
			and AllocationGroup not entered)

		RetainOriginalSource
			restricted
			when(AllocationSourceSystem.TransferPricing)

		AccountingEntityEnabled
			restricted
			when ((Type.Actuals)
			or    (Type.Budget and ParentScenarioRel.HasAccountingEntity))			

		AccountingUnitEnabled
			restricted
			when ((Type.Actuals and FinanceEnterpriseGroup.AccountingUnitSelected)
			or    (Type.Budget  and ParentScenarioRel.HasPostingAccountingUnit))

		AccountEnabled
			restricted
			when ((Type.Actuals)
			or    (Type.Budget and ParentScenarioRel.HasPostingAccount))

		ProjectEnabled
			restricted
			when ((Type.Actuals and FinanceEnterpriseGroup.ProjectEntry)
			or    (Type.Budget  and ParentScenarioRel.HasPostingProject))

		Dimension1Enabled
			restricted
			when ((Type.Actuals and FinanceEnterpriseGroup.FinanceDimension1Entry)
			or    (Type.Budget  and ParentScenarioRel.HasPostingDimension1))

		Dimension2Enabled
			restricted
			when ((Type.Actuals and FinanceEnterpriseGroup.FinanceDimension2Entry)
			or    (Type.Budget  and ParentScenarioRel.HasPostingDimension2))

		Dimension3Enabled
			restricted
			when ((Type.Actuals and FinanceEnterpriseGroup.FinanceDimension3Entry)
			or    (Type.Budget  and ParentScenarioRel.HasPostingDimension3))

		Dimension4Enabled
			restricted
			when ((Type.Actuals and FinanceEnterpriseGroup.FinanceDimension4Entry)
			or    (Type.Budget  and ParentScenarioRel.HasPostingDimension4))

		Dimension5Enabled
			restricted
			when ((Type.Actuals and FinanceEnterpriseGroup.FinanceDimension5Entry)
			or    (Type.Budget  and ParentScenarioRel.HasPostingDimension5))

		Dimension6Enabled
			restricted
			when ((Type.Actuals and FinanceEnterpriseGroup.FinanceDimension6Entry)
			or    (Type.Budget  and ParentScenarioRel.HasPostingDimension6))

		Dimension7Enabled
			restricted
			when ((Type.Actuals and FinanceEnterpriseGroup.FinanceDimension7Entry)
			or    (Type.Budget  and ParentScenarioRel.HasPostingDimension7))

		Dimension8Enabled
			restricted
			when ((Type.Actuals and FinanceEnterpriseGroup.FinanceDimension8Entry)
			or    (Type.Budget  and ParentScenarioRel.HasPostingDimension8))

		Dimension9Enabled
			restricted
			when ((Type.Actuals and FinanceEnterpriseGroup.FinanceDimension9Entry)
			or    (Type.Budget  and ParentScenarioRel.HasPostingDimension9))

		Dimension10Enabled
			restricted
			when ((Type.Actuals and FinanceEnterpriseGroup.FinanceDimension10Entry)
			or    (Type.Budget  and ParentScenarioRel.HasPostingDimension10))			
		
		RecordExists
			restricted
			when (AllocationControl exists)
		IsScenarioEnteredAndBudgetType
			restricted
			when (Type.Budget and Scenario entered)
    Relations
		ParentScenarioRel
			one-to-one relation to Scenario
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.Scenario			   = DerivedParentScenario

    	AllocationControlReverseRel 
    		one-to-many relation to AllocationControl
    		Field Mapping uses ReverseSet
    			related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
    			related.AllocationSourceSystem 		= AllocationSourceSystem
    			
    	AllocationsRel is a Allocation set
    
    	RunsRel
    		one-to-many relation to AllocationRun
    		Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
    		Instance Selection
    			where (related.AllocationControl		= AllocationControl
    			and    related.AllocationSourceSystem 	= AllocationSourceSystem
                and    not related.ListingReportOnly)
		CalendarPeriodsMatchingPeriodTypeRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNode
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.TopNode		 				= Calendar.TopNode
			Instance Selection
				where (related.PeriodType		 	= PeriodType)
		GeneralLedgerSystemCodeRel
			one-to-one relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.GeneralLedgerSystemCode		= DerivedSystem
		GeneralLedgerCalendarPeriodsRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNodeTypeAndJulianDates
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.TopNode		 				= Calendar.TopNode
				related.PeriodType				 	= PeriodType
				related.EndDateJulian				>= LocalJulianDate
			Instance Selection
				where (related.StartDateJulian		<= LocalJulianDate)
		SelectedAllocationLinesRel
			one-to-many relation to AllocationLine
			Field Mapping uses ByStepNumber
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
    			related.AllocationSourceSystem		= AllocationSourceSystem
				related.AllocationControl		 	= AllocationControl
				related.Active						= true	
			Instance Selection
				where (related.AllocationStep		>= FromStepNumber
				and    related.AllocationStep		<= ToStepNumber
				and   (related.Allocation			= Allocation
                    or (AllocationGroup entered and related.Allocation.AllocationGroup	= AllocationGroup)
				    or  RunningAllAllocations))
        SelectedInterestAllocationLinesRel
			one-to-many relation to AllocationLine
			Field Mapping uses ByStepNumber
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
    			related.AllocationSourceSystem		= AllocationSourceSystem
				related.AllocationControl		 	= AllocationControl
				related.Active						= true	
			Instance Selection
				where (related.AllocationStep		>= FromStepNumber
				and    related.AllocationStep		<= ToStepNumber
                and    related.Allocation.CustodialAccountInterest
				and   (related.Allocation			= Allocation
                    or (AllocationGroup entered and related.Allocation.AllocationGroup	= AllocationGroup)
                    or  RunningAllAllocations))

		AllocationLinesInCurrentStepRel
			one-to-many relation to AllocationLine
			Field Mapping uses ByStepNumber
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
    			related.AllocationSourceSystem		= AllocationSourceSystem
				related.AllocationControl		 	= AllocationControl
				related.Active						= true	
				related.AllocationStep			 	= StepNumber
			Instance Selection
				where (related.Allocation					= Allocation
				or (AllocationGroup entered and 
						related.Allocation.AllocationGroup	= AllocationGroup)
				or RunningAllAllocations)
		InterestAllocationLinesInCurrentStepRel
			one-to-many relation to AllocationLine
			Field Mapping uses ByStepNumber
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
    			related.AllocationSourceSystem		= AllocationSourceSystem
				related.AllocationControl		 	= AllocationControl
				related.Active						= true	
				related.AllocationStep			 	= StepNumber
			Instance Selection
				where ((related.Allocation					= Allocation
				or (AllocationGroup entered and related.Allocation.AllocationGroup	= AllocationGroup)
				or RunningAllAllocations)
				and Allocation.CustodialAccountInterest)

		AllocationTransactionDetailsRel
			one-to-many relation to AllocationTransactionDetail
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AllocationSourceSystem		= AllocationSourceSystem
				related.AllocationControl		 	= AllocationControl
		AllocationStepsRel
			one-to-many relation to AllocationStep
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
		StepActualsRel
			one-to-one relation to AllocationStep
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AllocationStep 				= -999
		Step1Rel
			one-to-one relation to AllocationStep
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AllocationStep 				= 1

		StepOldActualsRel
			one-to-one relation to AllocationStep
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AllocationStep 				= -1
		StepNewRel
			one-to-one relation to AllocationStep
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AllocationStep 				= -3
		StepCounterRel
			one-to-one relation to AllocationStep
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AllocationStep 				= Counter

		MatchedAllocationLinesRel
			one-to-many relation to AllocationLine
			Field Mapping uses ByStepNumber
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.AllocationSourceSystem		= AllocationSourceSystem
				related.AllocationControl		 	= AllocationControl
				related.Active						= true	
			Instance Selection
				where (related.Allocation			= Allocation
				or     (AllocationGroup entered and related.Allocation.AllocationGroup	= AllocationGroup)
				or     RunningAllAllocations)

		AllocationCubeRel
			one-to-one relation to AnalyticCube
			Field Mapping uses AnalyticCubeSet
				related.BusinessClass = "AllocationTransactionDetail"
		TotalCubeRel
			one-to-one relation to AnalyticCube
			Field Mapping uses AnalyticCubeSet
				related.BusinessClass = "GeneralLedgerTotal"
		SnapshotCubeRel
			one-to-one relation to AnalyticCube
			Field Mapping uses AnalyticCubeSet
				related.BusinessClass = "AllocationSnapshotDetail"

        AllocationWeightGeneratorRel    
            one-to-many relation to AllocationWeightGenerator
            Field Mapping uses symbolic key
                related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
                related.AllocationSourceSystem      = AllocationSourceSystem
                related.AllocationControl           = AllocationControl
            Instance Selection
                where (related.AllocationWeightGenerator = any MatchedAllocationLinesRel.ToAllocationWeightGenerator
                or     related.AllocationWeightGenerator = any MatchedAllocationLinesRel.FromAllocationWeightGenerator)


		AllocationRunJobRel
			one-to-one relation to AllocationRunJob
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.AllocationSourceSystem		= AllocationSourceSystem
				related.AllocationControl		 	= AllocationControl
				related.AllocationRun				= AllocationRun
				related.AllocationRunJob			= LocalAllocationRunJob
	Field Rules
		Type
			cannot be changed
		
		JournalizedDetailDescriptionOptions
			default to DerivedDefaultJournalizedDetailDescriptionOptions
			initial value is DerivedDefaultJournalizedDetailDescriptionOptions

		Scenario
			if (Type.Budget)
				required

				constraint (Scenario.CommitmentType.Budget)
					"ScenarioShouldBeABudget"

				if (Scenario changed)

					LocalOldScenario = old Scenario
					while (LocalOldScenario entered and LocalOldScenario.Parent entered)
						LocalOldScenario = LocalOldScenario.Parent

					LocalNewScenario = DerivedScenario

					if (LocalOldScenario != LocalNewScenario)
						constraint (LocalOldScenario.Basis = LocalNewScenario.Basis)
							"BudgetScenarioShouldHaveTheSameBasis"
						constraint (LocalOldScenario.HasAccountingEntity       = LocalNewScenario.HasAccountingEntity
						and         LocalOldScenario.HasPostingAccountingUnit  = LocalNewScenario.HasPostingAccountingUnit
						and         LocalOldScenario.HasPostingAccount         = LocalNewScenario.HasPostingAccount
						and         LocalOldScenario.HasPostingProject         = LocalNewScenario.HasPostingProject
						and         LocalOldScenario.HasPostingDimension1      = LocalNewScenario.HasPostingDimension1
						and         LocalOldScenario.HasPostingDimension2      = LocalNewScenario.HasPostingDimension2
						and         LocalOldScenario.HasPostingDimension3      = LocalNewScenario.HasPostingDimension3
						and         LocalOldScenario.HasPostingDimension4      = LocalNewScenario.HasPostingDimension4
						and         LocalOldScenario.HasPostingDimension5      = LocalNewScenario.HasPostingDimension5
						and         LocalOldScenario.HasPostingDimension6      = LocalNewScenario.HasPostingDimension6
						and         LocalOldScenario.HasPostingDimension7      = LocalNewScenario.HasPostingDimension7
						and         LocalOldScenario.HasPostingDimension8      = LocalNewScenario.HasPostingDimension8
						and         LocalOldScenario.HasPostingDimension9      = LocalNewScenario.HasPostingDimension9
						and         LocalOldScenario.HasPostingDimension10     = LocalNewScenario.HasPostingDimension10)
							"NewScenarioIsNotCompatibleWithTheOldScenario"
			else
				cannot be entered
					"ScenarioOnlyApplicableForBudgets"

		Calendar
			required
			if (Type.Budget)
				default to Scenario.Basis.GeneralLedgerCalendar
			if (AllocationRun set exists)
				cannot be changed

		PeriodType
			required
			if (Type.Budget)
				default to PeriodType.Month
			constraint (CalendarPeriodsMatchingPeriodTypeRel exists)
				"CalendarMustHavePeriodType<PeriodType>"
			if (AllocationRun set exists)
				cannot be changed

		CurrencyTable
			if (Type.Budget)
				initialize CurrencyTable

		NumberOfBatches
			if (EnableBatch)
				required
	Derived Fields
		DerivedDefaultJournalizedDetailDescriptionOptions is a DerivedField
			type is Alpha size 20
			restricted
			initialize LocalJournalizedDetailDescriptionOptions
			LocalJournalizedDetailDescriptionOptions.AllocationName = true
			LocalJournalizedDetailDescriptionOptions.AllocationLineName = true
			return LocalJournalizedDetailDescriptionOptions
		
		DerivedScenario is a DerivedField
			type is like Scenario
			restricted
			if (Type.Actuals)
				return FinanceEnterpriseGroup.ActualsScenario
			else
				return Scenario

		DerivedParentScenario is a DerivedField
			type is like Scenario
			restricted
			LocalScenario = Scenario
			while (LocalScenario entered and LocalScenario.Parent entered)
				LocalScenario = LocalScenario.Parent

			return LocalScenario
		
		DerivedSystem is a DerivedField
			type is AlphaUpper size 2
			restricted
			if (AllocationSourceSystem.TrueCost)
				return "TC"
			return "CA"
		JulianDate is a DerivedField
			type is Alpha 7
			restricted
			LocalAlphaYear = LocalDate year
			LocalAlphaDay  = LocalDate year day
			JulianDate = LocalAlphaYear
			if (LocalAlphaDay size = 1)
				JulianDate += "00"
			else
			if (LocalAlphaDay size = 2)
				JulianDate += "0"
			JulianDate += LocalAlphaDay 
		
		CurrentDate is a DerivedField
			type is TimeStamp
			restricted
			return current timestamp
					
		DerivedCompositeFormTitle			is a DerivedField
			type is MessageField
			if (Description entered)
				return DerivedAllocationDescription
			else
				return DerivedAllocationDefault
				
		DerivedAllocationDescription is a MessageField
			restricted
			"Allocation_Control<AllocationControl>_-_<Description>"
		DerivedAllocationDefault is a MessageField
			restricted
			"Allocation_Control<AllocationControl>"

        DerivedBackgroundGroup              is a DerivedField
            type is Alpha size 50
            restricted
            if (AllocationListingReportView.AllocationListingReport entered)
                return "AllocationControl.GenerateListingReport-" + LocalBackgroundCounter
            else
                return AllocationRun + "-" + LocalBackgroundCounter

        MaxNumberOfBatches                  is a DerivedField
            type is Numeric size 3
            restricted
            return 100

        DerivedAllocationLineCount          is a DerivedField
            type is Numeric size 12 
            restricted
            if (AllocationListingReportView.AllocationListingReport entered)
                return instance count of SelectedAllocationLinesRel
            else
                return instance count of AllocationLinesInCurrentStepRel
			
	Local Fields
		AsyncId						is a AsyncActionRequest
		AllocationRunView			is a AllocationRun view
        AllocationListingReportView is a AllocationListingReport view
		AllocationRun
		Counter							is a AllocationStepNumber
		StepView						is a AllocationStep view
		PreviousStep					is a AllocationStep
		JournalizeGroup
		AllocationPeriod				is a GeneralLedgerCalendarPeriod
		StartAllocationPeriod			is a GeneralLedgerCalendarPeriod
		Allocation
		AllocationGroup
		LocalDate						is Date
		LocalAlphaDay					is Alpha 3
		LocalAlphaYear					is Alpha 4
		LocalJulianDate					is Alpha 7
		StepNumber						is a AllocationStepNumber
		FromStepNumber					is a AllocationStepNumber
		ToStepNumber					is a AllocationStepNumber
		UseCapacityLedger				is Boolean
		LocalRunDescription				is Alpha 60
		LocalRunName		 			is AlphaUpper 20
		LocalRunStartDate				is Date
		LocalRunEndDate					is Date
		LocalMultiMonthAllocation		is Boolean
		
		LoopCounter						is Numeric 6
		LocalLastTimeStamp				is TimeStamp 
		LocalCurrentTimeStamp			is TimeStamp
		LocalElapsedTime				is Numeric size 12

		LocalScenario					is a Scenario
		LocalOldScenario				is a Scenario
		LocalNewScenario				is a Scenario

		LocalBackgroundGroup			is AlphaUpper up to 200
		LocalLastBackgroundGroup		is AlphaUpper up to 200
		LocalBackgroundCounter			is Numeric size 6
		EnabledBatchForLine		        is Boolean 
        AllocationLineCount             is Numeric size 12 

		LocalAllocationRunJobView		is an AllocationRunJob view
		LocalAllocationRunJob			is an AllocationRunJob
		LocalNumberOfBatchSize			is Numeric size 12
		LocalJournalizedDetailDescriptionOptions		is a JournalizedDetailDescriptionOptions
				
	Rule Blocks
		NextBackgroundGroup
			increment LocalBackgroundCounter
			LocalLastBackgroundGroup = LocalBackgroundGroup
			LocalBackgroundGroup = DerivedBackgroundGroup

		CheckCommitTransaction					
			LoopCounter += 1
			LocalCurrentTimeStamp = current timestamp
			if (LocalLastTimeStamp not entered)
				LocalLastTimeStamp = LocalCurrentTimeStamp

			LocalElapsedTime = LocalCurrentTimeStamp - LocalLastTimeStamp 

			if (LoopCounter >= 100
			or  LocalElapsedTime > 30)
				commit transaction
				initialize LoopCounter
				LocalLastTimeStamp = LocalCurrentTimeStamp
	
	
		CreateSteps
			if (AllocationStepsRel not exists)

				Counter = 100
				while (Counter > 0)
					invoke Create AllocationStep
						assign result to StepView
						invoked.AllocationStep			= Counter
						invoked.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
						invoked.Parent					= PreviousStep
					PreviousStep = StepView.AllocationStep
					invoke Create AllocationStep
						invoked.AllocationStep			= -1*Counter
						invoked.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
						invoked.Parent					= PreviousStep
					Counter  -= 1
				invoke Create AllocationStep
					invoked.AllocationStep			= -999
					invoked.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
					invoked.Parent					= Step1Rel.AllocationStep

		RunSetup
			include CreateSteps
			constraint (GeneralLedgerSystemCodeRel exists)
				"SystemCodeNotCreatedFor<DerivedSystem>.RunActionToUpdateSystemCodesOnFinanceEnterpriseGroup<FinanceEnterpriseGroup>"
			Allocation					= PrmAllocation
			AllocationGroup				= PrmGroup

			LocalDate					= PrmStartDate
			LocalJulianDate				= JulianDate
			StartAllocationPeriod		= first GeneralLedgerCalendarPeriodsRel.GeneralLedgerCalendarPeriod

			LocalDate					= PrmDate
			LocalJulianDate				= JulianDate
			AllocationPeriod			= first GeneralLedgerCalendarPeriodsRel.GeneralLedgerCalendarPeriod
			constraint (AllocationPeriod entered)
				"CouldNotFindPeriodOfType<PeriodType>InCalendar<Calendar>ForDate<LocalDate>"
			
            include SetFromAndToStepNumber
			
			increment GeneralLedgerSystemCodeRel.LastJournalizeGroup
			JournalizeGroup				= GeneralLedgerSystemCodeRel.DerivedJournalizeGroup

			invoke Create Started AllocationRun
				assign result to AllocationRunView
				invoked.AllocationRun				= JournalizeGroup
				invoked.AllocationControl			= AllocationControl
				invoked.AllocationSourceSystem		= AllocationSourceSystem
				invoked.FromStep					= FromStepNumber
				invoked.ToStep						= ToStepNumber
				invoked.PostingDate					= LocalDate
				invoked.AllocationPeriod			= AllocationPeriod
				invoked.Allocation					= Allocation
				invoked.AllocationGroup				= AllocationGroup
				invoked.GenerateListingData			= PrmGenerateListingData
				invoked.RetainSourceValues			= PrmRetainSourceValues
				invoked.GenerateSourceValue			= PrmGenerateSourceValue
				invoked.UseCapacityLedger			= UseCapacityLedger
				invoked.Currency					= Currency
				if (CurrencyTable entered)
					invoked.CurrencyTable			= CurrencyTable
				else
					invoked.CurrencyTable			= FinanceEnterpriseGroup.CurrencyTable
				invoked.JournalizeIfComplete		= PrmJournalize

				invoked.RunDescription				= LocalRunDescription
				invoked.RunName		 				= LocalRunName			
				invoked.RunStartDate				= LocalRunStartDate
				invoked.RunEndDate					= LocalRunEndDate
				invoked.MultiMonthAllocation		= LocalMultiMonthAllocation
				invoked.AllocationSnapshot			= PrmAllocationSnapshot
				invoked.NumberOfBatches				= LocalNumberOfBatchSize
			AllocationRun	= AllocationRunView.AllocationRun


		RunLineBatch
			invoke RunLineBatch in background group (LocalBackgroundGroup)
				run after background group (LocalLastBackgroundGroup)
				assign async action request id to AsyncId
				invoked.PrmBatchAllocation			= LocalBatchAllocation
				invoked.PrmSize						= BatchCounter
				invoked.PrmJournalizeGroup			= PrmJournalizeGroup
				invoked.PrmDate						= PrmDate
				invoked.PrmStartAllocationPeriod	= PrmStartAllocationPeriod
				invoked.PrmAllocationPeriod			= PrmAllocationPeriod
				invoked.PrmFirstStep				= FirstStep
				invoked.PrmGenerateListingData		= PrmGenerateListingData
				invoked.PrmCapacityLedger			= PrmCapacityLedger
				invoked.PrmGenerateSourceValue		= PrmGenerateSourceValue
				invoked.PrmAllocationSnapshot		= PrmAllocationSnapshot

			if (AllocationLoggingEnabled) 
				initialize AllocationLineCount
				while (AllocationLineCount < BatchCounter)
					AllocationLineCount += 1
					invoke Create AllocationRunJob
						invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.AllocationSourceSystem		= AllocationSourceSystem
						invoked.AllocationControl			= AllocationControl
						invoked.AllocationRun				= PrmAllocationRun
						invoked.Allocation					= LocalBatchAllocation.BatchAllocationLine[AllocationLineCount].Allocation
						invoked.AllocationLine				= LocalBatchAllocation.BatchAllocationLine[AllocationLineCount].AllocationLine
						invoked.AllocationStep				= StepNumber
						invoked.AsyncActionRequest			= AsyncId
						invoked.JobType						= AllocationRunJobType.RunLine
					
			initialize LocalBatchAllocation

        GenerateDetailsForListingReportBatch
            invoke GenerateDetailsForListingReportBatch in background group (LocalBackgroundGroup)
				run after background group (LocalLastBackgroundGroup)
                invoked.PrmAllocationRun            = AllocationRun
                invoked.PrmBatchAllocation          = LocalBatchAllocation
                invoked.PrmSize                     = BatchCounter
                invoked.PrmDate                     = PrmDate
                invoked.PrmAllocationPeriod         = AllocationPeriod

            initialize LocalBatchAllocation

        SetBatchSize
            initialize EnabledBatchForLine

            if (EnableBatch and PrmNumberOfBatches entered)

                AllocationLineCount     = DerivedAllocationLineCount

                if (AllocationLineCount > PrmNumberOfBatches)
                    EnabledBatchForLine = true
                    BatchSize = AllocationLineCount / PrmNumberOfBatches
                    if (BatchSize > MaxNumberOfBatches)
                        BatchSize = MaxNumberOfBatches

        SetFromAndToStepNumber

            FromStepNumber				= PrmFromStep
            ToStepNumber				= PrmToStep

            if (PrmToStep not entered)
                ToStepNumber			= last MatchedAllocationLinesRel.AllocationStep
                if (FromStepNumber > ToStepNumber)
                    FromStepNumber		= ToStepNumber

        CreateOverridesForInterestAllocation

            include SetupCustodial

            invoke CreateAllocationLineOverrides CustodialAccountManagement in background group (LocalBackgroundGroup)
                run after background group (LocalLastBackgroundGroup)
                invoked.PrmFinanceEnterpriseGroup 	= FinanceEnterpriseGroup
                invoked.PrmAllocationControl      	= AllocationControl
                invoked.PrmAllocationSourceSystem 	= AllocationSourceSystem
                invoked.PrmAllocation				= each.Allocation
                invoked.PrmAllocationLine			= each.AllocationLine
                invoked.PrmAllocationRun			= AllocationRun
                invoked.PrmAccountingEntity			= each.SourceAddress.AccountingEntity
                invoked.PrmReportingBasis			= each.Allocation.CustodialAccountBasis
                invoked.PrmAccount					= each.CustodialAccount
                invoked.PrmPeriod					= AllocationPeriod
                invoked.PrmFilterByDim1				= LocalFilterByDim1
                invoked.PrmFilterByAccountingUnit	= LocalFilterByAccountingUnit
                invoked.PrmFund						= LocalFund
                invoked.PrmFundType					= LocalFundType
                
		SetupCustodial
			initialize LocalFilterByDim1		
			initialize LocalFilterByAccountingUnit 
			initialize LocalFund
			initialize LocalFundType
			if (FinanceEnterpriseGroup.FundDimension.AccountingUnit)
				if (each.SourceAddress.AccountingUnit entered
				and each.SourceAddress.AccountingUnit.AccountingUnitType.Posting)
					LocalFilterByAccountingUnit = true
					LocalFund 		= each.SourceAddress.AccountingUnit
					LocalFundType 	= CodeBlockDimensionType.AccountingUnit
			else 
			if (FinanceEnterpriseGroup.FundDimension.Dimension1)
				if (each.SourceAddress.FinanceDimension1 entered
				and each.SourceAddress.FinanceDimension1.DimensionType.Posting)
					LocalFilterByDim1 	= true
					LocalFund 			= each.SourceAddress.FinanceDimension1
					LocalFundType 		= CodeBlockDimensionType.Dimension1									


			
	Sets
        ReverseSet
            indexed
            Sort Order
            	FinanceEnterpriseGroup
            	AllocationSourceSystem
            	AllocationControl descending

	Actions
		Create is an Action
			Local Fields
				LocalSequence		is Numeric size 20
				LocalPaddedNumeric	is Numeric size 20
				LocalPadded			is AlphaRight size 11
				LocalLastKey		is AlphaRight size 20
			Field Rules
				
			Entrance Rules
				if (AllocationSourceSystem = AllocationSourceSystem.TransferPricing)
					if (AllocationControlReverseRel exists)
						LocalLastKey = first AllocationControlReverseRel.AllocationControl
						LocalSequence = LocalLastKey[3:20]
						LocalSequence += 1
					LocalPaddedNumeric = 10000000000 + LocalSequence
					LocalPadded = LocalPaddedNumeric
					AllocationControl =  AllocationSourceSystem + LocalPadded[2:11] 
					
			Exit Rules
				include CreateSteps

    	Update is an Update Action
			Field Rules

    		Exit Rules

    	Delete is a Delete Action
    	
    	CreateSteps is an Instance Action
    		restricted
    		Exit Rules
    			invoke Delete  AllocationStepsRel
    			include CreateSteps
    			
    	FixupSteps is an Instance Action
    		restricted
    		Exit Rules
    			if (AllocationStepsRel not exists)
    				include CreateSteps
    			else
    			if (StepNewRel not exists)
    				invoke Delete  StepOldActualsRel
    				Counter = 100
					while (Counter > 0)
						invoke Create AllocationStep
							invoked.AllocationStep			= -1*Counter
							invoked.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
							invoked.Parent					= StepCounterRel.AllocationStep
						Counter  -= 1
					invoke Create AllocationStep
						invoked.AllocationStep			= -999
						invoked.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
						invoked.Parent					= Step1Rel.AllocationStep
    			
		DeleteCompletedRuns is an Instance Action
			confirmation required
			Action Rules
				for each RunsRel
					AllocationRun	= each.AllocationRun
					if (AllocationRun.Status.Completed)
						invoke DeleteRun Completed AllocationRun
					else
					if (AllocationRun.Status.Failed)
						invoke DeleteRun Failed AllocationRun
				
		RunForeground is an Instance Action
			restricted
			Parameters
				PrmAllocation			is a Allocation
					default label is "Allocation"
				PrmGroup				is a AllocationGroup
					default label is "Group"
				PrmStartDate			is Date
					default label is "StartDate"
				PrmDate					is Date
					default label is "Date"
				PrmFromStep				is a AllocationStepNumber
					default label is "FromStep"
				PrmToStep				is a AllocationStepNumber
					default label is "ToStep"
				PrmGenerateListingData	is Boolean
					default label is "GenerateReports"
				PrmRetainSourceValues	is Boolean
					default label is "RetainSourceValues"
				PrmAllocationSnapshot	is an AllocationSnapshot
					default label is "AllocationSnapshot"
				
			Parameter Rules
				PrmAllocation
					constraint(PrmGroup not entered)
						"CannotSpecifyBothGroupAndAllocation"
				PrmGroup
					constraint(PrmAllocation not entered)
						"CannotSpecifyBothGroupAndAllocation"
				PrmDate
					initial value is current corporate date
					required
				PrmToStep
					default to 100
					constraint (PrmToStep <= 100)
						"StepCannotExceed100"
					constraint (PrmToStep >= PrmFromStep)
						"ToStepMustBeGreaterThanOrEqualToFromStep"
			Local Fields

				PrmGenerateSourceValue	is Boolean
				PrmJournalize			is Boolean
			Exit Rules
				include RunSetup
				
				for each distinct AllocationStep in  SelectedAllocationLinesRel
					StepNumber				= each.AllocationStep
					display "Step<StepNumber>"
					invoke SetStep AllocationRun
						invoked.StepNumber					= StepNumber
					invoke RunStep AllocationLine 
						invoked.PrmEnterpriseGroup			= FinanceEnterpriseGroup
						invoked.PrmAllocationSourceSystem	= AllocationSourceSystem
						invoked.PrmAllocationControl		= AllocationControl
						invoked.PrmJournalizeGroup			= JournalizeGroup
						invoked.PrmStepNumber				= StepNumber
						invoked.PrmDate						= LocalDate
						invoked.PrmAllocationPeriod			= AllocationPeriod
						invoked.PrmAllocation				= Allocation
						invoked.PrmAllocationGroup			= AllocationGroup
						invoked.PrmFirstStep				= true
						invoked.PrmGenerateListingData		= PrmGenerateListingData
				invoke SetCompleted AllocationRun
				































            
    	GenerateListingReport is an Instance Action
    		completion message is "ListingReportInitiated"
			Parameters
				PrmAllocation			is a Allocation
					default label is "Allocation"
				PrmGroup				is a AllocationGroup
					default label is "Group"
				PrmDate					is Date
					default label is "Date"
				PrmFromStep				is a AllocationStepNumber
					default label is "FromStep"
				PrmToStep				is a AllocationStepNumber
					default label is "ToStep"
                PrmNumberOfBatches      is Numeric size 3
                    default label is "NumberOfBatches"
			Parameter Rules
				PrmAllocation
                    initial value is Allocation
					
				PrmGroup
					constraint(PrmAllocation not entered)
						"CannotSpecifyBothGroupAndAllocation"
				PrmDate
					initial value is current corporate date
					default to current corporate date
					required
				PrmToStep
					default to 100
					constraint (PrmToStep <= 100)
						"StepCannotExceed100"
					constraint (PrmToStep >= PrmFromStep)
						"ToStepMustBeGreaterThanOrEqualToFromStep"
                PrmNumberOfBatches
					initial value is NumberOfBatches
					constraint (PrmNumberOfBatches <= 100)
						"NumberOfBatchesCannotExceed100"
            
            Local Fields
                AllocationLineCount         is Numeric size 12
				BatchSize				    is Numeric size 12
                LocalBatchAllocation        is a BatchAllocation
                BatchCounter			    is Numeric size 3
                LocalFund				    is like AccountingUnit
				LocalFundType			    is a CodeBlockDimensionType
				LocalFilterByDim1		    is Boolean
				LocalFilterByAccountingUnit is Boolean	

            Action Rules
                initialize LocalBackgroundCounter
                Allocation					= PrmAllocation
                AllocationGroup             = PrmGroup

                constraint (GeneralLedgerSystemCodeRel exists)
				    "SystemCodeNotCreatedFor<DerivedSystem>.RunActionToUpdateSystemCodesOnFinanceEnterpriseGroup<FinanceEnterpriseGroup>"

                LocalDate					= PrmDate
                LocalJulianDate				= JulianDate
                AllocationPeriod			= first GeneralLedgerCalendarPeriodsRel.GeneralLedgerCalendarPeriod
                constraint (AllocationPeriod entered)
				    "CouldNotFindPeriodOfType<PeriodType>InCalendar<Calendar>ForDate<LocalDate>"

                include SetFromAndToStepNumber

                if (PrmFromStep not entered)
                    FromStepNumber = 1

                invoke Create AllocationListingReport
                    assign result to AllocationListingReportView
                    invoked.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
                    invoked.AllocationControl			= AllocationControl
                    invoked.AllocationSourceSystem		= AllocationSourceSystem
                    invoked.FromStep					= FromStepNumber
                    invoked.ToStep						= ToStepNumber
                    invoked.PostingDate					= LocalDate
                    invoked.AllocationPeriod			= AllocationPeriod
                    invoked.Allocation					= Allocation
                    invoked.AllocationGroup				= AllocationGroup

			    AllocationRun	= AllocationListingReportView.DerivedAllocationRunRepresentation

                LocalBackgroundGroup = DerivedBackgroundGroup
                
                if (AllocationWeightGeneratorRel exists)
                    for each AllocationWeightGeneratorRel
                        invoke Process each in background group (LocalBackgroundGroup)
                            invoked.PrmAllocationPeriod     = AllocationPeriod
                            invoked.PrmAllocationRun        = AllocationRun
                    include NextBackgroundGroup

                initialize BatchCounter

                include SetBatchSize

#ifdef module cam                    
                if (SelectedInterestAllocationLinesRel exists)
                    for each SelectedInterestAllocationLinesRel
                        include CreateOverridesForInterestAllocation
                    include NextBackgroundGroup
#endif

                for each SelectedAllocationLinesRel

                    include CheckCommitTransaction

                    if (EnabledBatchForLine)
						BatchCounter += 1

						if (BatchCounter > BatchSize)
							include GenerateDetailsForListingReportBatch
							BatchCounter = 1

                        LocalBatchAllocation.BatchAllocationLine[BatchCounter].AllocationControl    = AllocationControl
                        LocalBatchAllocation.BatchAllocationLine[BatchCounter].Allocation 		    = each.Allocation
                        LocalBatchAllocation.BatchAllocationLine[BatchCounter].AllocationLine 	    = each.AllocationLine

                    else
                        invoke GenerateDetailsForListingReport each  in background group (LocalBackgroundGroup)
                            run after background group (LocalLastBackgroundGroup)
                            invoked.PrmAllocationRun            = AllocationRun
                            invoked.PrmDate                     = PrmDate
                            invoked.PrmAllocationPeriod         = AllocationPeriod

                if (EnabledBatchForLine and BatchCounter entered)
                    include GenerateDetailsForListingReportBatch

                include NextBackgroundGroup
                invoke GenerateReportsInternal AllocationListingReportView.AllocationListingReport in background group (LocalBackgroundGroup)
                    run after background group (LocalLastBackgroundGroup)
		
    	Run is an Instance Action
    		completion message is "AllocationRun<AllocationRun>Initiated"
			Parameters
				PrmAllocation			is a Allocation
					default label is "Allocation"
				PrmGroup				is a AllocationGroup
					default label is "Group"
				PrmDate					is Date
					default label is "Date"
				PrmStartDate			is Date
					default label is "StartDate"
				PrmFromStep				is a AllocationStepNumber
					default label is "FromStep"
				PrmToStep				is a AllocationStepNumber
					default label is "ToStep"
				PrmGenerateListingData	is Boolean
					default label is "GenerateReports"
				PrmJournalize			is Boolean
					default label is "JournalizeIfComplete"
				PrmRetainSourceValues	is Boolean
					default label is "RetainSourceValues"
				PrmSkipRefresh 			is Boolean
					default label is "SkipRefresh"
				PrmCapacityLedger		is a Ledger
					default label is "CapacityLedger"
				PrmGenerateSourceValue	is Boolean
					default label is "IncludeSourceDetails"
				PrmRunName		 		is AlphaUpper 20
					default label is "RunName"
				PrmDescription	  		is Alpha 60
					default label is "RunDescription"
				PrmRunStartDate			is Date
					default label is "RunStartDate"
				PrmRunEndDate			is Date
					default label is "RunEndDate"
				PrmMultiMonthAllocation	is Boolean
				PrmAllocationCallback	is an AllocationCallback
				PrmAllocationSnapshot	is an AllocationSnapshot
					default label is "AllocationSnapshot"
				PrmBypassCheckAllocationLine	is Boolean
				PrmNumberOfBatches		is Numeric size 3
					default label is "NumberOfBatches"
			Parameter Rules
				PrmAllocation
					constraint(PrmGroup not entered)
						"CannotSpecifyBothGroupAndAllocation"
				PrmGroup
					constraint(PrmAllocation not entered)
						"CannotSpecifyBothGroupAndAllocation"
				PrmDate
					initial value is current corporate date
					default to current corporate date
					required
				PrmToStep
					default to 100
					constraint (PrmToStep <= 100)
						"StepCannotExceed100"
					constraint (PrmToStep >= PrmFromStep)
						"ToStepMustBeGreaterThanOrEqualToFromStep"
				PrmGenerateSourceValue
					if (not PrmGenerateListingData)
						PrmGenerateSourceValue = false

				PrmBypassCheckAllocationLine
					if (Type.Budget)
						PrmBypassCheckAllocationLine = true

				PrmJournalize
					if (Type.Budget)
						initialize PrmJournalize
				PrmNumberOfBatches
					initial value is NumberOfBatches
					constraint (PrmNumberOfBatches <= 100)
						"NumberOfBatchesCannotExceed100"
			Exit Rules

				initialize UseCapacityLedger
				if (PrmCapacityLedger exists)
					UseCapacityLedger	= true
				LocalRunName		 		= PrmRunName
				LocalRunDescription	 		= PrmDescription
				LocalRunStartDate	 		= PrmRunStartDate
				LocalRunEndDate	 	 		= PrmRunEndDate
				LocalMultiMonthAllocation 	= PrmMultiMonthAllocation
				LocalNumberOfBatchSize      = PrmNumberOfBatches
				include RunSetup

				if (not PrmBypassCheckAllocationLine)			
					invoke Check AllocationLine
						run after AsyncId
						assign async action request id to AsyncId
						invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
						invoked.PrmAllocationSourceSystem	= AllocationSourceSystem
						invoked.PrmAllocationControl		= AllocationControl
						invoked.PrmAllocation				= Allocation
						invoked.PrmAllocationGroup			= AllocationGroup
						invoked.PrmRunningAllAllocations	= RunningAllAllocations
						invoked.PrmAllocationRun			= AllocationRun
						if (FromStepNumber entered)
							invoked.PrmFromStepNumber		= FromStepNumber
						else
							invoked.PrmFromStepNumber		= 1
						invoked.PrmToStepNumber 			= ToStepNumber
				
				invoke RunLines in background
					run after AsyncId
					assign async action request id to AsyncId
						invoked.PrmSkipRefresh				= PrmSkipRefresh
						invoked.PrmGenerateListingData		= PrmGenerateListingData
						invoked.PrmCapacityLedger			= PrmCapacityLedger	
						invoked.PrmGenerateSourceValue		= PrmGenerateSourceValue
						invoked.PrmJournalize				= PrmJournalize	
						invoked.PrmAllocationRun			= AllocationRun
						invoked.PrmFromStepNumber			= FromStepNumber
						invoked.PrmToStepNumber				= ToStepNumber
						invoked.PrmAllocation				= Allocation
						invoked.PrmAllocationGroup			= AllocationGroup
						invoked.PrmJournalizeGroup			= JournalizeGroup
						invoked.PrmDate						= LocalDate
						invoked.PrmStartAllocationPeriod	= StartAllocationPeriod
						invoked.PrmAllocationPeriod			= AllocationPeriod
						invoked.PrmAllocationCallback		= PrmAllocationCallback
						invoked.PrmAllocationCallback.FinanceEnterpriseGroup    = FinanceEnterpriseGroup
						invoked.PrmAllocationCallback.AllocationRun 			= AllocationRun
						invoked.PrmRunningAllAllocations	= RunningAllAllocations
						invoked.PrmAllocationSnapshot		= PrmAllocationSnapshot
						invoked.PrmNumberOfBatches			= PrmNumberOfBatches

				if (AllocationLoggingEnabled)
					invoke Create AllocationRunJob
						assign result to LocalAllocationRunJobView
						invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.AllocationSourceSystem		= AllocationSourceSystem
						invoked.AllocationControl			= AllocationControl
						invoked.AllocationRun				= AllocationRun
						invoked.JobType						= AllocationRunJobType.Initializing
						invoked.AsyncActionRequest			= AsyncId

					LocalAllocationRunJob = LocalAllocationRunJobView.AllocationRunJob

					invoke Start AllocationRunJobRel in background 

					invoke End AllocationRunJobRel in background 
						run after AsyncId
						assign async action request id to AsyncId						
		
		RunLines is an Instance Action
			restricted
			default label is untranslatable
			Parameters
				PrmSkipRefresh 				is Boolean
				PrmGenerateListingData		is Boolean
				PrmCapacityLedger			is a Ledger
				PrmGenerateSourceValue		is Boolean
				PrmJournalize				is Boolean
				PrmAllocationRun			is an AllocationRun
				PrmFromStepNumber			is an AllocationStepNumber
				PrmToStepNumber				is an AllocationStepNumber
				PrmAllocation				is an Allocation
				PrmAllocationGroup			is an AllocationGroup
				PrmJournalizeGroup			is a JournalizeGroup
				PrmDate						is Date
				PrmStartAllocationPeriod	is a GeneralLedgerCalendarPeriod
				PrmAllocationPeriod			is a GeneralLedgerCalendarPeriod
				PrmRunningAllAllocations	is Boolean
				PrmAllocationCallback		is an AllocationCallback
				PrmAllocationSnapshot		is an AllocationSnapshot
				PrmNumberOfBatches			is Numeric size 3

			Local Fields
				FirstStep				is Boolean
				LocalBatchAllocation    is a BatchAllocation
				BatchCounter			is Numeric size 3
				StepSize				is Numeric size 12 
				BatchSize				is Numeric size 12
				LocalFund				is like AccountingUnit
				LocalFundType			is a CodeBlockDimensionType
				LocalFilterByDim1		is Boolean
				LocalFilterByAccountingUnit is Boolean		

			Action Rules
				AsyncId	= current async action request id
				AllocationRun	 = PrmAllocationRun
				if (PrmAllocationRun.ErrorMessage not entered)
					FirstStep	= true		
					
					LocalBackgroundGroup = AllocationRun + "-" + LocalBackgroundCounter
					if (not PrmSkipRefresh)
						if (PrmAllocationSnapshot entered)
							invoke Refresh SnapshotCubeRel in background group (LocalBackgroundGroup)
								run after AsyncId
								assign async action request id to AsyncId

						else

							invoke Refresh TotalCubeRel in background group (LocalBackgroundGroup)
								run after AsyncId
								assign async action request id to AsyncId
							if (AllocationLoggingEnabled)

								invoke Create AllocationRunJob
									assign result to LocalAllocationRunJobView
									invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
									invoked.AllocationSourceSystem		= AllocationSourceSystem
									invoked.AllocationControl			= AllocationControl
									invoked.AllocationRun				= PrmAllocationRun
									invoked.JobType						= AllocationRunJobType.GeneralLedgerTotalCubeRefresh
									invoked.BackgroundGroup				= LocalBackgroundGroup
									invoked.AsyncActionRequest			= AsyncId
								
								LocalAllocationRunJob = LocalAllocationRunJobView.AllocationRunJob

								invoke UpdateStatusToFinished AllocationRunJobRel in background group (LocalBackgroundGroup)
									run after AsyncId


					if (PrmFromStepNumber entered)
						Counter = PrmFromStepNumber
					else
						Counter = 1
					
					Allocation 		= PrmAllocation
					AllocationGroup = PrmAllocationGroup
                    if (AllocationWeightGeneratorRel exists)                 
                        include NextBackgroundGroup

                        for each AllocationWeightGeneratorRel
                            invoke Process each in background group (LocalBackgroundGroup)
                                run after background group (LocalLastBackgroundGroup)
                                assign async action request id to AsyncId
                                invoked.PrmAllocationPeriod     = PrmAllocationPeriod
                                invoked.PrmAllocationRun        = PrmAllocationRun
							if (AllocationLoggingEnabled)
								invoke Create AllocationRunJob
									invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
									invoked.AllocationSourceSystem		= AllocationSourceSystem
									invoked.AllocationControl			= AllocationControl
									invoked.AllocationRun				= PrmAllocationRun
									invoked.AllocationWeightGenerator   = each.AllocationWeightGenerator
									invoked.JobType						= AllocationRunJobType.WeightBuilder
									invoked.AsyncActionRequest			= AsyncId
									invoked.BackgroundGroup				= LocalBackgroundGroup

					while (Counter <= PrmToStepNumber)
						StepNumber				= Counter
						if (AllocationLinesInCurrentStepRel exists)
							include NextBackgroundGroup

							invoke SetStep PrmAllocationRun in background group (LocalBackgroundGroup)
								run after background group (LocalLastBackgroundGroup)
								assign async action request id to AsyncId
								invoked.StepNumber					= StepNumber

							include NextBackgroundGroup							

							initialize BatchCounter
							

							include SetBatchSize

#ifdef module cam
							if (EnabledBatchForLine 
							and InterestAllocationLinesInCurrentStepRel exists)
								for each InterestAllocationLinesInCurrentStepRel

									include CreateOverridesForInterestAllocation

								include NextBackgroundGroup

#endif
							for each AllocationLinesInCurrentStepRel
		                    	include CheckCommitTransaction

								if (EnabledBatchForLine)
									BatchCounter += 1
									
									if (BatchCounter > BatchSize)
										BatchCounter = BatchSize
										include RunLineBatch
										BatchCounter = 1
									
									display "AddingToBath:<BatchCounter>:<each.AllocationLine>"
									LocalBatchAllocation.BatchAllocationLine[BatchCounter].AllocationControl = AllocationControl
									LocalBatchAllocation.BatchAllocationLine[BatchCounter].Allocation 		= each.Allocation
									LocalBatchAllocation.BatchAllocationLine[BatchCounter].AllocationLine 	= each.AllocationLine
								else
#ifdef module cam
															
									display "Line:<each.AllocationLine>"	
									if (each.AllocationLine.Allocation.CustodialAccountInterest)
										include SetupCustodial
										invoke CreateAllocationLineOverrides CustodialAccountManagement in background group (LocalBackgroundGroup)
											run after background group (LocalLastBackgroundGroup)
											assign async action request id to AsyncId 
											invoked.PrmFinanceEnterpriseGroup 	= FinanceEnterpriseGroup
											invoked.PrmAllocationControl      	= AllocationControl
											invoked.PrmAllocationSourceSystem 	= AllocationSourceSystem
											invoked.PrmAllocation				= each.Allocation
											invoked.PrmAllocationLine			= each.AllocationLine
											invoked.PrmAllocationRun			= PrmAllocationRun
											invoked.PrmAccountingEntity			= each.SourceAddress.AccountingEntity
											invoked.PrmReportingBasis			= each.Allocation.CustodialAccountBasis
											invoked.PrmAccount					= each.CustodialAccount
											invoked.PrmPeriod					= PrmAllocationPeriod
											invoked.PrmFilterByDim1				= LocalFilterByDim1
											invoked.PrmFilterByAccountingUnit	= LocalFilterByAccountingUnit
											invoked.PrmFund						= LocalFund
											invoked.PrmFundType					= LocalFundType
										if (AllocationLoggingEnabled)
											invoke Create AllocationRunJob
												invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
												invoked.AllocationSourceSystem		= AllocationSourceSystem
												invoked.AllocationControl			= AllocationControl
												invoked.AllocationRun				= PrmAllocationRun
												invoked.Allocation					= each.Allocation
												invoked.AllocationLine				= each.AllocationLine
												invoked.JobType						= AllocationRunJobType.InterestAllocationOverrideGeneration
												invoked.AsyncActionRequest			= AsyncId
												invoked.BackgroundGroup				= LocalBackgroundGroup											

										invoke RunLine each.AllocationLine in background group (LocalBackgroundGroup)
											run after AsyncId
											invoked.PrmJournalizeGroup			= PrmJournalizeGroup
											invoked.PrmDate						= PrmDate
											invoked.PrmStartAllocationPeriod	= PrmStartAllocationPeriod
											invoked.PrmAllocationPeriod			= PrmAllocationPeriod
											invoked.PrmFirstStep				= FirstStep
											invoked.PrmGenerateListingData		= PrmGenerateListingData
											invoked.PrmCapacityLedger			= PrmCapacityLedger
											invoked.PrmGenerateSourceValue		= PrmGenerateSourceValue
											invoked.PrmAllocationSnapshot		= PrmAllocationSnapshot									
										if (AllocationLoggingEnabled)
											invoke Create AllocationRunJob
												invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
												invoked.AllocationSourceSystem		= AllocationSourceSystem
												invoked.AllocationControl			= AllocationControl
												invoked.AllocationRun				= PrmAllocationRun
												invoked.Allocation					= each.Allocation
												invoked.AllocationLine				= each.AllocationLine
												invoked.AllocationStep				= each.AllocationStep
												invoked.JobType						= AllocationRunJobType.RunLine
												invoked.AsyncActionRequest			= AsyncId
												invoked.BackgroundGroup				= LocalBackgroundGroup											

									else
										invoke RunLine each.AllocationLine in background group (LocalBackgroundGroup)
											run after background group (LocalLastBackgroundGroup)
											assign async action request id to AsyncId
											invoked.PrmJournalizeGroup			= PrmJournalizeGroup
											invoked.PrmDate						= PrmDate
											invoked.PrmStartAllocationPeriod	= PrmStartAllocationPeriod
											invoked.PrmAllocationPeriod			= PrmAllocationPeriod
											invoked.PrmFirstStep				= FirstStep
											invoked.PrmGenerateListingData		= PrmGenerateListingData
											invoked.PrmCapacityLedger			= PrmCapacityLedger
											invoked.PrmGenerateSourceValue		= PrmGenerateSourceValue
											invoked.PrmAllocationSnapshot		= PrmAllocationSnapshot
										if (AllocationLoggingEnabled)
											invoke Create AllocationRunJob
												invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
												invoked.AllocationSourceSystem		= AllocationSourceSystem
												invoked.AllocationControl			= AllocationControl
												invoked.AllocationRun				= PrmAllocationRun
												invoked.Allocation					= each.Allocation
												invoked.AllocationLine				= each.AllocationLine
												invoked.AllocationStep				= each.AllocationStep
												invoked.JobType						= AllocationRunJobType.RunLine
												invoked.AsyncActionRequest			= AsyncId
												invoked.BackgroundGroup				= LocalBackgroundGroup											
#endif
#ifndef module cam
									invoke RunLine each.AllocationLine in background group (LocalBackgroundGroup)
										run after background group (LocalLastBackgroundGroup)
										assign async action request id to AsyncId
										invoked.PrmJournalizeGroup			= PrmJournalizeGroup
										invoked.PrmDate						= PrmDate
										invoked.PrmStartAllocationPeriod	= PrmStartAllocationPeriod
										invoked.PrmAllocationPeriod			= PrmAllocationPeriod
										invoked.PrmFirstStep				= FirstStep
										invoked.PrmGenerateListingData		= PrmGenerateListingData
										invoked.PrmCapacityLedger			= PrmCapacityLedger
										invoked.PrmGenerateSourceValue		= PrmGenerateSourceValue
										invoked.PrmAllocationSnapshot		= PrmAllocationSnapshot
#endif                            


							FirstStep	= false

							if (EnabledBatchForLine and BatchCounter entered)
								include RunLineBatch

							if (not AllocationSourceSystem.TransferPricing)
								include NextBackgroundGroup
								invoke Refresh AllocationCubeRel in background group (LocalBackgroundGroup)
									run after background group (LocalLastBackgroundGroup)
									assign async action request id to AsyncId

								if (AllocationLoggingEnabled)

									invoke Create AllocationRunJob
										assign result to LocalAllocationRunJobView
										invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
										invoked.AllocationSourceSystem		= AllocationSourceSystem
										invoked.AllocationControl			= AllocationControl
										invoked.AllocationRun				= PrmAllocationRun
										invoked.JobType						= AllocationRunJobType.AllocationTransactionDetailCubeRefresh
										invoked.AllocationStep				= StepNumber
										invoked.BackgroundGroup				= LocalBackgroundGroup
										invoked.AsyncActionRequest			= AsyncId									

									LocalAllocationRunJob = LocalAllocationRunJobView.AllocationRunJob

									invoke UpdateStatusToFinished AllocationRunJobRel in background group (LocalBackgroundGroup)
										run after AsyncId

						Counter += 1

				invoke SetCompleted PrmAllocationRun in background
					run after background group (LocalLastBackgroundGroup)
					assign async action request id to AsyncId

				if (AllocationLoggingEnabled)
					invoke Create AllocationRunJob
						invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.AllocationSourceSystem		= AllocationSourceSystem
						invoked.AllocationControl			= AllocationControl
						invoked.AllocationRun				= PrmAllocationRun
						invoked.JobType						= AllocationRunJobType.SetCompleted
						invoked.AsyncActionRequest			= AsyncId

				if (PrmGenerateListingData)
					if (AllocationLoggingEnabled)
						invoke Create AllocationRunJob
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.AllocationSourceSystem		= AllocationSourceSystem
							invoked.AllocationControl			= AllocationControl
							invoked.AllocationRun				= PrmAllocationRun
							invoked.JobType						= AllocationRunJobType.GenerateListingReport

						invoke Create AllocationRunJob
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.AllocationSourceSystem		= AllocationSourceSystem
							invoked.AllocationControl			= AllocationControl
							invoked.AllocationRun				= PrmAllocationRun
							invoked.JobType						= AllocationRunJobType.GenerateCalculationReport

					invoke GenerateReportsInternal PrmAllocationRun in background
						run after AsyncId
				
                if (PrmJournalize and PrmAllocationRun.ErrorMessage not entered)
                    invoke JournalizeIfComplete PrmAllocationRun in background
                        run after AsyncId
                        assign async action request id to AsyncId

                    if (AllocationLoggingEnabled)
						invoke Create AllocationRunJob
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.AllocationSourceSystem		= AllocationSourceSystem
							invoked.AllocationControl			= AllocationControl
							invoked.AllocationRun				= PrmAllocationRun
							invoked.JobType						= AllocationRunJobType.JournalizeInitiated
							invoked.AsyncActionRequest			= AsyncId

				PrmAllocationCallback.AsyncId 					= AsyncId
				
				if (PrmAllocationCallback.Run)
					AsyncId = PrmAllocationCallback.ReturnAsyncId




					
					
		RunLineBatch is an Instance Action
			restricted
			default label is untranslatable
			Parameters
				PrmBatchAllocation  is a BatchAllocation
				PrmSize				is Numeric size 3
				PrmJournalizeGroup			is a JournalizeGroup
				PrmDate						is Date
				PrmStartAllocationPeriod	is a GeneralLedgerCalendarPeriod
				PrmAllocationPeriod			is a GeneralLedgerCalendarPeriod
				PrmFirstStep				is Boolean
				PrmGenerateListingData		is Boolean
				PrmCapacityLedger			is a Ledger
				PrmGenerateSourceValue		is Boolean
				PrmAllocationSnapshot		is an AllocationSnapshot
			Local Fields
				LocalCounter		is Numeric size 3
				LocalAllocation		is an Allocation     
				LocalAllocationLine	is an AllocationLine 
			Action Rules
				while (LocalCounter < PrmSize)
					LocalCounter += 1

					LocalAllocation 		= PrmBatchAllocation.BatchAllocationLine[LocalCounter].Allocation
					LocalAllocationLine 	= PrmBatchAllocation.BatchAllocationLine[LocalCounter].AllocationLine
					display "RunningLine:<LocalAllocationLine>"
					invoke RunLine LocalAllocationLine
						invoked.PrmJournalizeGroup			= PrmJournalizeGroup
						invoked.PrmDate						= PrmDate
						invoked.PrmStartAllocationPeriod	= PrmStartAllocationPeriod
						invoked.PrmAllocationPeriod			= PrmAllocationPeriod
						invoked.PrmFirstStep				= PrmFirstStep
						invoked.PrmGenerateListingData		= PrmGenerateListingData
						invoked.PrmCapacityLedger			= PrmCapacityLedger
						invoked.PrmGenerateSourceValue		= PrmGenerateSourceValue
						invoked.PrmAllocationSnapshot		= PrmAllocationSnapshot

		GenerateDetailsForListingReportBatch is an Instance Action
			restricted
			default label is untranslatable
			Parameters
                PrmAllocationRun            is like AllocationRun
				PrmBatchAllocation          is a BatchAllocation
				PrmSize				        is Numeric size 3
				PrmDate						is Date
				PrmAllocationPeriod			is a GeneralLedgerCalendarPeriod

			Local Fields
				LocalCounter		    is Numeric size 3
				LocalAllocation		    is an Allocation
				LocalAllocationLine	    is an AllocationLine
			Action Rules
				while (LocalCounter < PrmSize)
					LocalCounter += 1

					LocalAllocation 		= PrmBatchAllocation.BatchAllocationLine[LocalCounter].Allocation
					LocalAllocationLine 	= PrmBatchAllocation.BatchAllocationLine[LocalCounter].AllocationLine 

					invoke GenerateDetailsForListingReport LocalAllocationLine
						invoked.PrmAllocationRun            = PrmAllocationRun
                        invoked.PrmDate                     = PrmDate
                        invoked.PrmAllocationPeriod         = PrmAllocationPeriod

		PopulateJournalizedDetailDescriptionOptions is a Set Action
            restricted
            Instance Selection
                where (JournalizedDetailDescriptionOptions not entered)
            
            Action Rules
                Instance Rules
                    JournalizedDetailDescriptionOptions.AllocationName 	= true
					JournalizedDetailDescriptionOptions.AllocationLineName = true
