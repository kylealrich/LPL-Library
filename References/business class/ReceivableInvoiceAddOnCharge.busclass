ReceivableInvoiceAddOnCharge is a BusinessClass
    owned by ar
	prefix is RIAC

    Ontology
        symbolic key is ReceivableInvoiceAddOnCharge

    Patterns
        disable AuditIndex
        implements Archivable

    Persistent Fields
        ReceivableAddOnCharge
        ChargeType                      is Numeric size 1
            States
                FlatAmount              value is 1
                Percentage              value is 2
        FlatAmount                      is an InternationalAmount
        AmountPercent                   is a CostPercent    
        GrossAmount                     is an InternationalAmount
        Taxable                         is Boolean
        TaxCode
        UNSPSCCode
        HSNSACCode
        ProductTaxCategory
		TaxUsageCode
		TaxAmount						is an InternationalAmount
        TaxRate							is Percent 7.5
        FinanceDimension2
			default label is "<Company.CustomerBusinessGroup.FinanceEnterpriseGroup.FinanceDimension2Label>"					
		Project
		ProjectContract
		AssociatedLine is like UniqueID
		InvoiceFinanceCodeBlock is a FinanceCodeBlockFull
		GlobalLineType
        ItemReference		is AlphaUpper size 32
        ItemUser1
        Sort1
		Sort2
		Sort3
		Sort4
        TransactionUserField1 is a TransUser1


    Transient Fields
		TransientFromCurrency                   is a FromCurrency
			derive value from ReceivableInvoice.OriginalCurrency


    Local Fields
		NewReceivableGLDistribution  		    is a ReceivableGLDistribution view
        LocalCalculatedLineTotal			    is an InternationalAmount
        LocalDistributionTotalsDone             is Boolean
        LocalDistributionTotalAmount            is an InternationalAmount
        LocalDistributionTotalTaxAmount         is an InternationalAmount
        LocalDistributionTotalNonTaxAmount      is an InternationalAmount
        LocalRecreateDistributions              is Boolean
        LocalCurrencyWork						is a ReceivableExchange
        LocalGeneralLedgerAccount               is a FinanceCodeBlock


    Rule Blocks
		SumDistributionTotals
			if (!LocalDistributionTotalsDone)
                initialize LocalDistributionTotalAmount
                initialize LocalDistributionTotalTaxAmount
                initialize LocalDistributionTotalNonTaxAmount
                for each ReceivableGLDistributionDetailTypeRel
                    LocalDistributionTotalAmount            += each.DistributionAmount.CurrencyAmount
                    if (each.TaxCode entered)
                        LocalDistributionTotalTaxAmount     += each.DistributionAmount.CurrencyAmount
                    else
                        LocalDistributionTotalNonTaxAmount  += each.DistributionAmount.CurrencyAmount
                LocalDistributionTotalsDone = true

        DeriveGeneralLedgerAccount
            initialize LocalGeneralLedgerAccount
            if (ReceivableAddOnCharge.ProcessLevelFinanceCodeBlockOverride)
                LocalGeneralLedgerAccount = ReceivableInvoice.ReceivableProcessLevel.AccountingUnitFinanceCodeBlock

                if (LocalGeneralLedgerAccount.Ledger not entered)
                    LocalGeneralLedgerAccount.Ledger						            = ReceivableAddOnCharge.GeneralLedgerAccount.Ledger
        
                if (LocalGeneralLedgerAccount.ToAccountingEntity not entered)
                    LocalGeneralLedgerAccount.ToAccountingEntity			            = ReceivableAddOnCharge.GeneralLedgerAccount.ToAccountingEntity
            
                if (LocalGeneralLedgerAccount.AccountingUnit not entered)
                    LocalGeneralLedgerAccount.AccountingUnit				            = ReceivableAddOnCharge.GeneralLedgerAccount.AccountingUnit
            
                if (LocalGeneralLedgerAccount.GeneralLedgerChartAccount not entered)
                    LocalGeneralLedgerAccount.GeneralLedgerChartAccount	                = ReceivableAddOnCharge.GeneralLedgerAccount.GeneralLedgerChartAccount
            
                if (LocalGeneralLedgerAccount.Project not entered)
                    LocalGeneralLedgerAccount.Project					                = ReceivableAddOnCharge.GeneralLedgerAccount.Project
                                    
                if (LocalGeneralLedgerAccount.FinanceDimension1 not entered)
                    LocalGeneralLedgerAccount.FinanceDimension1			                = ReceivableAddOnCharge.GeneralLedgerAccount.FinanceDimension1
            
                if (LocalGeneralLedgerAccount.FinanceDimension2 not entered)
                    LocalGeneralLedgerAccount.FinanceDimension2			                = ReceivableAddOnCharge.GeneralLedgerAccount.FinanceDimension2
                                    
                if (LocalGeneralLedgerAccount.FinanceDimension3 not entered)
                    LocalGeneralLedgerAccount.FinanceDimension3			                = ReceivableAddOnCharge.GeneralLedgerAccount.FinanceDimension3
            
                if (LocalGeneralLedgerAccount.FinanceDimension4 not entered)
                    LocalGeneralLedgerAccount.FinanceDimension4			                = ReceivableAddOnCharge.GeneralLedgerAccount.FinanceDimension4
            
                if (LocalGeneralLedgerAccount.FinanceDimension5 not entered)
                    LocalGeneralLedgerAccount.FinanceDimension5			                = ReceivableAddOnCharge.GeneralLedgerAccount.FinanceDimension5
            
                if (LocalGeneralLedgerAccount.FinanceDimension6 not entered)
                    LocalGeneralLedgerAccount.FinanceDimension6			                = ReceivableAddOnCharge.GeneralLedgerAccount.FinanceDimension6
            
                if (LocalGeneralLedgerAccount.FinanceDimension7 not entered)
                    LocalGeneralLedgerAccount.FinanceDimension7			                = ReceivableAddOnCharge.GeneralLedgerAccount.FinanceDimension7
            
                if (LocalGeneralLedgerAccount.FinanceDimension8 not entered)
                    LocalGeneralLedgerAccount.FinanceDimension8			                = ReceivableAddOnCharge.GeneralLedgerAccount.FinanceDimension8
            
                if (LocalGeneralLedgerAccount.FinanceDimension9 not entered)
                    LocalGeneralLedgerAccount.FinanceDimension9			                = ReceivableAddOnCharge.GeneralLedgerAccount.FinanceDimension9
            
                if (LocalGeneralLedgerAccount.FinanceDimension10 not entered)
                    LocalGeneralLedgerAccount.FinanceDimension10			            = ReceivableAddOnCharge.GeneralLedgerAccount.FinanceDimension10
            else
                LocalGeneralLedgerAccount = ReceivableAddOnCharge.GeneralLedgerAccount


	Derived Fields
		InvoiceTypeInvoice is a LabelField
			"<ReceivableInvoice.AlternateReceivableInvoiceType>_<ReceivableInvoice>"

		DerivedInvoiceTypeInvoice is a DerivedField
			type is MessageField
			return InvoiceTypeInvoice

        DerivedTaxAmount is a DerivedField
			type is like InternationalAmount
            default label is "TaxAmount"
			return TaxAmount

        DerivedGrossAmount is a DerivedField
			type is like InternationalAmount
            default label is "GrossAmount"
			return GrossAmount

        TotalAmount is a DerivedField
			type is like InternationalAmount
			LocalCalculatedLineTotal = GrossAmount + TaxAmount
			round LocalCalculatedLineTotal to nearest DerivedRoundTo
			return LocalCalculatedLineTotal

        DerivedGrossAmountForPrinting is a DerivedField
			type is like InternationalAmount
            if (ReceivableInvoice.ExpandedInvoiceEntryTemplateFlipAmountsForPrinting)
                return (GrossAmount * -1)
            else 
			    return GrossAmount

        DerivedTaxAmountForPrinting is a DerivedField
			type is like InternationalAmount
            if (ReceivableInvoice.ExpandedInvoiceEntryTemplateFlipAmountsForPrinting)
                return (TaxAmount * -1)
            else 
			    return TaxAmount

        DerivedTotalAmountForPrinting is a DerivedField
			type is like InternationalAmount
			LocalCalculatedLineTotal = GrossAmount + TaxAmount
			round LocalCalculatedLineTotal to nearest DerivedRoundTo
            if (ReceivableInvoice.ExpandedInvoiceEntryTemplateFlipAmountsForPrinting)
                return (LocalCalculatedLineTotal * -1)
            else 
			    return LocalCalculatedLineTotal

        DerivedDistributionTotalAmount  is a DerivedField
            type is like InternationalAmount
            default label is "DistributionTotal"
            include SumDistributionTotals
            if (FlipAmounts)
                return (LocalDistributionTotalAmount * -1)
            else
                return LocalDistributionTotalAmount

        DerivedDistributionTotalTaxAmount is a DerivedField
			type is like InternationalAmount
            default label is "DistributionTaxTotal"
            include SumDistributionTotals
            if (FlipAmounts)
                return (LocalDistributionTotalTaxAmount * -1)
            else
                return LocalDistributionTotalTaxAmount

        DerivedDistributionTotalNonTaxAmount is a DerivedField
			type is like InternationalAmount
            default label is "DistributionNonTaxTotal"
            include SumDistributionTotals
            if (FlipAmounts)
                return (LocalDistributionTotalNonTaxAmount * -1)
            else
                return LocalDistributionTotalNonTaxAmount
        
        OutputNumberOfDecimals is a DerivedField
			type is Numeric 1
            restricted
			if (TransientFromCurrency entered)
				return TransientFromCurrency.NumberOfDecimals
			else
			if (actor.context.FinanceEnterpriseGroup.DefaultDecimalsOption entered)
				return actor.context.FinanceEnterpriseGroup.DefaultNumberOfDecimals
			else
				return 2

		DerivedRoundTo					is a DerivedField
    		type is Decimal 5.4
    		restricted
    		if (OutputNumberOfDecimals = 2)
    			return .01
    		else
    		if (OutputNumberOfDecimals = 0)
    			return 1
    		else
    		if (OutputNumberOfDecimals = 3)
    			return .001
    		else
    		if (OutputNumberOfDecimals = 4)
    			return .0001


    Field Rules

        ReceivableAddOnCharge
            required
            cannot be changed
                "Add_\On_\ChargeCodeCannotBeChanged"
            
            if (action type.Create
            and FlatAmount not entered 
            and AmountPercent not entered)
                if (ReceivableAddOnCharge.FlatAmount entered)
                    if (ReceivableAddOnCharge.Currency = ReceivableInvoice.OriginalCurrency)
                        FlatAmount = ReceivableAddOnCharge.FlatAmount
                    else
                        initialize LocalCurrencyWork
                        LocalCurrencyWork.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
                        LocalCurrencyWork.ExchangeDate				= ReceivableInvoice.TransactionDate
                        LocalCurrencyWork.TransactionAmount			= ReceivableAddOnCharge.FlatAmount
                        LocalCurrencyWork.FromCurrency				= ReceivableAddOnCharge.Currency
                        LocalCurrencyWork.BaseAmount.ToCurrency		= ReceivableInvoice.OriginalCurrency
                        FlatAmount = LocalCurrencyWork.BaseAmount.OutputCurrencyAmount

                    if (ReceivableInvoice.ReceivableInvoiceType.CreditMemo
                    and ReceivableInvoice.first ReceivableInvoiceLine set.ExtendedAmount < 0)
                        FlatAmount = (FlatAmount * -1)
                    else
                    if (ReceivableInvoice.ReceivableInvoiceType.MixedSignLines
                    and ReceivableInvoice.AlternateReceivableInvoiceType.CreditMemo
                    and sum ReceivableInvoice.ReceivableInvoiceLine set.ExtendedAmount < 0)
                        FlatAmount = (FlatAmount * -1)
                else
                if (ReceivableAddOnCharge.AmountPercent entered)
                    AmountPercent = ReceivableAddOnCharge.AmountPercent

            constraint (FlatAmount entered or AmountPercent entered)
                "MustEnterEither_\Flat_\AmountOr_\Percent"

            if (FlatAmount entered)
                constraint (AmountPercent not entered)
                    "CannotEnter_\PercentIf_\Flat_\AmountEntered"

            if (AmountPercent entered)
                constraint (FlatAmount not entered)
                    "CannotEnter_\Flat_\AmountIf_\PercentEntered"

            if (ReceivableInvoiceLine not entered
            and AmountPercent entered)
                constraint (ReceivableInvoice.ReceivableInvoiceLine set exists)
                    "MustEnterLinesBeforeAddOnChargesIfNotUsingAFlatAmount"

            if  (action type.Create
            or  (action type.Update
            and (FlatAmount changed
            or   AmountPercent changed)))
                if (FlatAmount entered)
                    GrossAmount = FlatAmount
                else
                    if (ReceivableInvoiceLine entered)
                        GrossAmount = (ReceivableInvoiceLine.ExtendedAmount * AmountPercent)
                    else
                        GrossAmount = ((sum ReceivableInvoice.ReceivableInvoiceLine set.ExtendedAmount) * AmountPercent)
            
            constraint (GrossAmount entered)
                "Add_\On_\Charge_\Gross_\AmountCannotBeZero"

            if (ReceivableInvoice.ReceivableInvoiceType.Invoice or ReceivableInvoice.ReceivableInvoiceType.DebitMemo)
                constraint (GrossAmount >= 0)
					"Gross_\AmountMustBePositive"

            if (ReceivableAddOnCharge exists)
                constraint (ReceivableAddOnCharge.Active)
                    "Add_\On_\ChargeIsInactive"

        Taxable
			if (action type.Create)
				default to ReceivableAddOnCharge.Taxable

		TaxCode
			if (not Taxable)
                initialize TaxCode
            else
				default to ReceivableAddOnCharge.TaxCode
                default to ReceivableInvoice.CompanyCustomerRel.TaxCode
                required
                    "Tax_\CodeIsRequiredIf_\Add_\On_\ChargeIsTaxable"

        ProductTaxCategory
			if (Taxable)
				default to ReceivableAddOnCharge.ProductTaxCategory
			else
				initialize ProductTaxCategory
			
		TaxUsageCode
			if (Taxable)
				default to ReceivableAddOnCharge.TaxUsageCode
			else
				initialize TaxUsageCode

        TaxAmount
			if (not Taxable)
				initialize TaxAmount

        HSNSACCode
			if (IsHSNSACCodeEnabled)
				default to ReceivableAddOnCharge.HSNSACCode
				required

		UNSPSCCode
            if (UNSPSCCode not entered)
                UNSPSCCode = ReceivableAddOnCharge.UNSPSCCodeGroup.UNSPSCCode
                if (UNSPSCCode not exists)
                    initialize UNSPSCCode

        InvoiceFinanceCodeBlock
			if (Company.DetailedInvoiceAccrualDistributions
			and IsManualEntry
			and action type.Create)
				default to ReceivableInvoice.ReceivableGeneralLedgerCodeRel.DistributionAccount
					default individual fields


    Conditions
		SecurityGroupAllowsAccess
			when (actor.context.CompanySecurityGroup = blank
			or	   CompanySecurityGroupMemberRel exists)

		IsManualEntry
			restricted
			when (ReceivableInvoice.Origin.ManualInvoice
			or	ReceivableInvoice.Origin.ManualMemo)

        FlipAmounts
            restricted
            when ((ReceivableInvoice.ReceivableInvoiceType.CreditMemo
            and    GrossAmount < 0)
            or    (ReceivableInvoice.ReceivableInvoiceType.MixedSignLines
            and    ReceivableInvoice.AlternateReceivableInvoiceType.CreditMemo
            and    ReceivableInvoice.DerivedExpandedInvoiceEntryTemplateTotalAmount < 0))

        IsHSNSACCodeEnabled
			restricted
			when (Company.GeneralLedgerCompany.RequireHSNSACCode)


    Relations
		CompanySecurityGroupMemberRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= actor.context.CompanySecurityGroup.FinanceDimensionStructure
				related.Company						= Company

        ReceivableGLDistributionRel
			one-to-many relation to ReceivableGLDistribution
			delete cascades
			Field Mapping uses Set2
				related.ReceivableCompanyDataGroup.TransactionCompany	 = Company
				related.BatchNumber										 = ReceivableInvoice.BatchNumber
				related.TransType										 = ReceivableInvoice.ReceivableInvoiceType
				related.Invoice											 = ReceivableInvoice
				related.ReceivableCompanyDataGroup.Customer				 = ReceivableInvoice.Customer
            Instance Selection
                where (related.AssociatedLine                            = UniqueID)

        ReceivableGLDistributionDetailTypeRel
            one-to-many relation using ReceivableGLDistributionRel
            Instance Selection
                where (related.AccumulationType.Detail)

        ReceivableGLDistributionTaxCodeNotEnteredRel
            one-to-many relation using ReceivableGLDistributionDetailTypeRel
            Instance Selection
                where (related.TaxCode not entered)

        ReceivableGLDistributionTaxCodeEnteredRel
            one-to-many relation using ReceivableGLDistributionDetailTypeRel
            Instance Selection
                where (related.TaxCode entered)

        ReceivableGLDistributionProjectEnteredRel
            one-to-many relation using ReceivableGLDistributionDetailTypeRel
            Instance Selection
                where (related.GeneralLedgerAccount.Project entered)

        ReceivableGLDistributionProjectNotEnteredRel
            one-to-many relation using ReceivableGLDistributionDetailTypeRel
            Instance Selection
                where (related.GeneralLedgerAccount.Project not entered)


    Actions
		Create is a Create Action
            valid when (ReceivableInvoice.Status.Unreleased)
            Exit Rules
                invoke CreateDistributions

		Update is an Update Action
            valid when (ReceivableInvoice.Status.Unreleased)
            Exit Rules
                LocalRecreateDistributions = false
                if (Taxable changed)
                    if (Taxable)
                        LocalRecreateDistributions = true
                        if (TaxCode not entered)
                            TaxCode = ReceivableAddOnCharge.TaxCode
                        if (TaxCode not entered)
                            TaxCode = ReceivableInvoice.CompanyCustomerRel.TaxCode
                        constraint (TaxCode entered)
                            "Tax_\CodeIsRequiredIf_\Add_\On_\ChargeIsTaxable"
                    else
                        initialize TaxCode
                        initialize TaxAmount
						initialize TaxRate
                        invoke Delete ReceivableGLDistributionTaxCodeEnteredRel

                if (GrossAmount changed
                or  TaxCode changed
                or  ProductTaxCategory changed
                or  TaxUsageCode changed
                or  UNSPSCCode changed
                or  HSNSACCode changed)
                    LocalRecreateDistributions = true

                if (LocalRecreateDistributions)
                    invoke Delete ReceivableGLDistributionRel
                    invoke CreateDistributions

		Delete is a Delete Action
            valid when (ReceivableInvoice.Status.Unreleased)
            Entrance Rules
                invoke Delete ReceivableGLDistributionRel
                invoke Update ReceivableInvoice
                    invoked.TransientSignedTransactionAmount = (ReceivableInvoice.DerivedExpandedInvoiceEntryTemplateTotalAmount - TotalAmount)

        FastDelete is a Delete Action
            restricted

        Purge is a Purge Action 
            restricted
            
        CreateDistributions is an Instance Action
            restricted
            Action Rules
                include DeriveGeneralLedgerAccount
                invoke CreateInvoiceDistribution ReceivableGLDistribution
                    assign result to NewReceivableGLDistribution
                    invoked.FinanceEnterpriseGroup										= Company.FinanceEnterpriseGroup
                    invoked.ReceivableCompanyDataGroup.TransactionCompany				= Company
                    invoked.BatchNumber													= ReceivableInvoice.BatchNumber
                    invoked.ReceivableCompanyDataGroup.ReceivableProcessLevel			= ReceivableInvoice.ReceivableProcessLevel 
                    invoked.ReceivableCompanyDataGroup.Customer							= ReceivableInvoice.Customer
                    invoked.ReceivableCompanyGroup.OriginCompany						= Company
                    invoked.ReceivableCompanyGroup.GlCompany							= Company
                    invoked.TransType													= ReceivableInvoice.ReceivableInvoiceType
                    invoked.Invoice														= ReceivableInvoice
                    invoked.GeneralLedgerAccount									    = LocalGeneralLedgerAccount
                    invoked.GeneralLedgerDate											= ReceivableInvoice.GeneralLedgerDate
                    invoked.TransactionDate												= ReceivableInvoice.TransactionDate
                    invoked.Description												    = ReceivableAddOnCharge.Description
                    invoked.AssociatedLine                                              = UniqueID
                    invoked.ProductTaxCategory                                          = ProductTaxCategory
                    invoked.TaxUsageCode                                                = TaxUsageCode
                    invoked.HSNSACCode													= HSNSACCode
                    invoked.ReceivableCompanyDataGroup.UNSPSCCode						= UNSPSCCode
                    if (FlipAmounts)
                        invoked.DistributionAmount.CurrencyAmount						= GrossAmount * -1
                    else
                        invoked.DistributionAmount.CurrencyAmount						= GrossAmount
                    if (Taxable)
                        invoked.TaxCode                                                 = TaxCode
                    else
                        invoked.BypassProcessTaxCode                                    = true
                    if  (ReceivableInvoice.AlternateReceivableInvoiceType.Invoice)
                        invoked.AuditSummaryIndicator									= "01"
                    else
                        invoked.AuditSummaryIndicator									= "02"

                if (not Taxable
                and NewReceivableGLDistribution.TaxCode entered)
                    invoke FastUpdate NewReceivableGLDistribution.ReceivableGLDistribution
                        initialize invoked.TaxCode
                        initialize invoked.TransactionTaxableAmount
                        initialize invoked.LinkedTaxGroup

                if (NewReceivableGLDistribution.TaxCode entered)
                    Taxable = true
                    if (TaxCode entered)
                        constraint (NewReceivableGLDistribution.TaxCode = TaxCode)
                            "TaxDistributionsMustUseTheSameTaxCodeAsTheirAssociatedAddOnCharge"
                    else
                        TaxCode = NewReceivableGLDistribution.TaxCode

                    if (ReceivableInvoice.TaxEntityRel.ThirdParty.InforTax
                    or (ReceivableInvoice.TaxEntityUsesVertex
                    and not ReceivableInvoice.CallVertexByTransaction))
                        invoke FastUpdate NewReceivableGLDistribution.ReceivableGLDistribution
                            initialize invoked.TaxCode
                            initialize invoked.TransactionTaxableAmount

                        invoke DeriveTaxAmounts
                
                invoke Update ReceivableInvoice
                    invoked.TransientSignedTransactionAmount = ReceivableInvoice.ForceRefreshDerivedExpandedInvoiceEntryTemplateTotalAmount

        DeriveTaxAmounts is an Instance Action
            restricted
            Action Rules
                if (Taxable)
                    if (FlipAmounts)
                        TaxAmount = ((sum ReceivableGLDistributionTaxCodeEnteredRel.DistributionAmount.CurrencyAmount) * -1)
                    else
                        TaxAmount = sum ReceivableGLDistributionTaxCodeEnteredRel.DistributionAmount.CurrencyAmount
                    
                    TaxRate = (TaxAmount / GrossAmount)
                    round TaxRate to nearest 0.0001

                    if (ReceivableInvoice.TaxEntityUsesVertex)
                        if ((TaxCode = "00"
                        or   TaxCode = "0")
                        and  ReceivableGLDistributionTaxCodeEnteredRel exists)
                            TaxCode = first ReceivableGLDistributionTaxCodeEnteredRel.TaxCode
