FinanceDimensionSecurityGroupMember is a BusinessClass
	owned by GeneralLedger
	
	prefix is FDSGM
	sql name is FDSecurityGroupMember
	
	Ontology
		symbolic key is FinanceDimensionSecurityGroupMember
		
	Patterns
	
	Persistent Fields
		FinanceDimensionStructure	is AlphaUpper 30
				
	Transient Fields

		FinanceDimension1Structure
			derive value from DerivedFinanceDimension1Structure
		FinanceDimension2Structure
			derive value from DerivedFinanceDimension2Structure
		FinanceDimension3Structure
			derive value from DerivedFinanceDimension3Structure
		FinanceDimension4Structure
			derive value from DerivedFinanceDimension4Structure
		FinanceDimension5Structure
			derive value from DerivedFinanceDimension5Structure
		FinanceDimension6Structure
			derive value from DerivedFinanceDimension6Structure
		FinanceDimension7Structure
			derive value from DerivedFinanceDimension7Structure
		FinanceDimension8Structure
			derive value from DerivedFinanceDimension8Structure
		FinanceDimension9Structure
			derive value from DerivedFinanceDimension9Structure
		FinanceDimension10Structure
			derive value from DerivedFinanceDimension10Structure
		ProjectStructure
			derive value from DerivedProjectStructure
		ReportingChart
			derive value from DerivedReportingChart

		FinanceDimension1
			derive value from DerivedFinanceDimension1
		FinanceDimension2
			derive value from DerivedFinanceDimension2
		FinanceDimension3
			derive value from DerivedFinanceDimension3
		FinanceDimension4
			derive value from DerivedFinanceDimension4
		FinanceDimension5
			derive value from DerivedFinanceDimension5
		FinanceDimension6
			derive value from DerivedFinanceDimension6
		FinanceDimension7
			derive value from DerivedFinanceDimension7
		FinanceDimension8
			derive value from DerivedFinanceDimension8
		FinanceDimension9
			derive value from DerivedFinanceDimension9
		FinanceDimension10
			derive value from DerivedFinanceDimension10
		Project
			derive value from DerivedProject
		GeneralLedgerChartAccount
			derive value from DerivedGeneralLedgerChartAccount
	
	Local Fields
		LocalDimension			is like GeneralLedgerChartAccount
		LocalSummaryDimension   is like GeneralLedgerChartAccount
		I1						is Numeric 2
		
	Conditions
		MemberDimension
			when (DimensionGroupType.FinanceDimension1
			or    DimensionGroupType.FinanceDimension2
			or    DimensionGroupType.FinanceDimension3
			or    DimensionGroupType.FinanceDimension4
			or    DimensionGroupType.FinanceDimension5
			or    DimensionGroupType.FinanceDimension6
			or    DimensionGroupType.FinanceDimension7
			or    DimensionGroupType.FinanceDimension8
			or    DimensionGroupType.FinanceDimension9
			or    DimensionGroupType.FinanceDimension10
			or    DimensionGroupType.Project
			or    DimensionGroupType.ChartAccount)
						
	Derived Fields
		RequiresRebuild		is a DerivedField
			type is Boolean
			return FinanceDimensionSecurityGroup.RequiresRebuild
			
		DerivedStructureSequence is a DerivedField
			type is Numeric 6
			I1 = 1
			while (FinanceDimensionSecurityGroupMember[I1] != "_")
				I1 += 1
				if (I1 > 6)
					return 0
			I1 -= 1
			DerivedStructureSequence = FinanceDimensionSecurityGroupMember[1:I1]
				
		DerivedFinanceDimension1Structure is a DerivedField
			type is like FinanceDimension1Structure
			if (DimensionGroupType.FinanceDimension1)
				return FinanceDimensionStructure
		
		DerivedFinanceDimension2Structure is a DerivedField
			type is like FinanceDimension2Structure
			if (DimensionGroupType.FinanceDimension2)
				return FinanceDimensionStructure
				
		DerivedFinanceDimension3Structure is a DerivedField
			type is like FinanceDimension3Structure
			if (DimensionGroupType.FinanceDimension3)
				return FinanceDimensionStructure
						
		DerivedFinanceDimension4Structure is a DerivedField
			type is like FinanceDimension4Structure
			if (DimensionGroupType.FinanceDimension4)
				return FinanceDimensionStructure
				
		DerivedFinanceDimension5Structure is a DerivedField
			type is like FinanceDimension5Structure
			if (DimensionGroupType.FinanceDimension5)
				return FinanceDimensionStructure
				
		DerivedFinanceDimension6Structure is a DerivedField
			type is like FinanceDimension6Structure
			if (DimensionGroupType.FinanceDimension6)
				return FinanceDimensionStructure
				
		DerivedFinanceDimension7Structure is a DerivedField
			type is like FinanceDimension7Structure
			if (DimensionGroupType.FinanceDimension7)
				return FinanceDimensionStructure
				
		DerivedFinanceDimension8Structure is a DerivedField
			type is like FinanceDimension8Structure
			if (DimensionGroupType.FinanceDimension8)
				return FinanceDimensionStructure
				
		DerivedFinanceDimension9Structure is a DerivedField
			type is like FinanceDimension9Structure
			if (DimensionGroupType.FinanceDimension9)
				return FinanceDimensionStructure
				
		DerivedFinanceDimension10Structure is a DerivedField
			type is like FinanceDimension10Structure
			if (DimensionGroupType.FinanceDimension10)
				return FinanceDimensionStructure
				
		DerivedProjectStructure is a DerivedField
			type is like ProjectStructure
			if (DimensionGroupType.Project)
				return FinanceDimensionStructure
				
		DerivedReportingChart is a DerivedField
			type is like ReportingChart
			if (DimensionGroupType.ChartAccount)
				return FinanceDimensionStructure

		DerivedStructureDescription is a DerivedField
			type is like Description

			if (DimensionGroupType.FinanceDimension1)

				return FinanceDimension1StructureRel.FinanceDimension1Structure.Description
			if (DimensionGroupType.FinanceDimension2)

				return FinanceDimension2StructureRel.FinanceDimension2Structure.Description
			if (DimensionGroupType.FinanceDimension3)

				return FinanceDimension3StructureRel.FinanceDimension3Structure.Description
			if (DimensionGroupType.FinanceDimension4)

				return FinanceDimension4StructureRel.FinanceDimension4Structure.Description
			if (DimensionGroupType.FinanceDimension5)

				return FinanceDimension5StructureRel.FinanceDimension5Structure.Description
			if (DimensionGroupType.FinanceDimension6)

				return FinanceDimension6StructureRel.FinanceDimension6Structure.Description
			if (DimensionGroupType.FinanceDimension7)

				return FinanceDimension7StructureRel.FinanceDimension7Structure.Description
			if (DimensionGroupType.FinanceDimension8)

				return FinanceDimension8StructureRel.FinanceDimension8Structure.Description
			if (DimensionGroupType.FinanceDimension9)

				return FinanceDimension9StructureRel.FinanceDimension9Structure.Description
			if (DimensionGroupType.FinanceDimension10)

				return FinanceDimension10StructureRel.FinanceDimension10Structure.Description
			if (DimensionGroupType.Project)

				return ProjectStructureRel.ProjectStructure.Description
			if (DimensionGroupType.ChartAccount)

				return ReportingChartRel.ReportingChart.Description
		
		DerivedFinanceDimension1 is a DerivedField
			type is like FinanceDimension1
			if (DimensionGroupType.FinanceDimension1)
				return FinanceDimensionSecurityGroupMember
		
		DerivedFinanceDimension2 is a DerivedField
			type is like FinanceDimension2
			if (DimensionGroupType.FinanceDimension2)
				return FinanceDimensionSecurityGroupMember
				
		DerivedFinanceDimension3 is a DerivedField
			type is like FinanceDimension3
			if (DimensionGroupType.FinanceDimension3)
				return FinanceDimensionSecurityGroupMember
						
		DerivedFinanceDimension4 is a DerivedField
			type is like FinanceDimension4
			if (DimensionGroupType.FinanceDimension4)
				return FinanceDimensionSecurityGroupMember
				
		DerivedFinanceDimension5 is a DerivedField
			type is like FinanceDimension5
			if (DimensionGroupType.FinanceDimension5)
				return FinanceDimensionSecurityGroupMember
				
		DerivedFinanceDimension6 is a DerivedField
			type is like FinanceDimension6
			if (DimensionGroupType.FinanceDimension6)
				return FinanceDimensionSecurityGroupMember
				
		DerivedFinanceDimension7 is a DerivedField
			type is like FinanceDimension7
			if (DimensionGroupType.FinanceDimension7)
				return FinanceDimensionSecurityGroupMember
				
		DerivedFinanceDimension8 is a DerivedField
			type is like FinanceDimension8
			if (DimensionGroupType.FinanceDimension8)
				return FinanceDimensionSecurityGroupMember
				
		DerivedFinanceDimension9 is a DerivedField
			type is like FinanceDimension9
			if (DimensionGroupType.FinanceDimension9)
				return FinanceDimensionSecurityGroupMember
				
		DerivedFinanceDimension10 is a DerivedField
			type is like FinanceDimension10
			if (DimensionGroupType.FinanceDimension10)
				return FinanceDimensionSecurityGroupMember
				
		DerivedProject is a DerivedField
			type is like Project
			if (DimensionGroupType.Project)
				return FinanceDimensionSecurityGroupMember
				
		DerivedGeneralLedgerChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (DimensionGroupType.ChartAccount)
				return FinanceDimensionSecurityGroupMember
		
		DerivedDescription is a DerivedField
			type is like Description
			if (DimensionGroupType.FinanceDimension1)

				return FinanceDimension1Rel.FinanceDimension1.Description
			if (DimensionGroupType.FinanceDimension2)

				return FinanceDimension2Rel.FinanceDimension2.Description
			if (DimensionGroupType.FinanceDimension3)

				return FinanceDimension3Rel.FinanceDimension3.Description
			if (DimensionGroupType.FinanceDimension4)

				return FinanceDimension4Rel.FinanceDimension4.Description
			if (DimensionGroupType.FinanceDimension5)

				return FinanceDimension5Rel.FinanceDimension5.Description
			if (DimensionGroupType.FinanceDimension6)

				return FinanceDimension6Rel.FinanceDimension6.Description
			if (DimensionGroupType.FinanceDimension7)

				return FinanceDimension7Rel.FinanceDimension7.Description
			if (DimensionGroupType.FinanceDimension8)

				return FinanceDimension8Rel.FinanceDimension8.Description
			if (DimensionGroupType.FinanceDimension9)

				return FinanceDimension9Rel.FinanceDimension9.Description
			if (DimensionGroupType.FinanceDimension10)

				return FinanceDimension10Rel.FinanceDimension10.Description
			if (DimensionGroupType.Project)

				return ProjectRel.Project.Description
			if (DimensionGroupType.ChartAccount)

				return GeneralLedgerChartAccountRel.GeneralLedgerChartAccount.AccountDescription

	Field Rules
		FinanceDimensionStructure
			if (DimensionGroupType.FinanceDimension1)
				FinanceDimensionStructure = FinanceDimension1Structure	
			else
			if (DimensionGroupType.FinanceDimension2)
				FinanceDimensionStructure = FinanceDimension2Structure	
			else
			if (DimensionGroupType.FinanceDimension3)
				FinanceDimensionStructure = FinanceDimension3Structure
			else
			if (DimensionGroupType.FinanceDimension4)
				FinanceDimensionStructure = FinanceDimension4Structure	
			else
			if (DimensionGroupType.FinanceDimension5)
				FinanceDimensionStructure = FinanceDimension5Structure	
			else
			if (DimensionGroupType.FinanceDimension6)
				FinanceDimensionStructure = FinanceDimension6Structure	
			else
			if (DimensionGroupType.FinanceDimension7)
				FinanceDimensionStructure = FinanceDimension7Structure	
			else
			if (DimensionGroupType.FinanceDimension8)
				FinanceDimensionStructure = FinanceDimension8Structure	
			else
			if (DimensionGroupType.FinanceDimension9)
				FinanceDimensionStructure = FinanceDimension9Structure	
			else
			if (DimensionGroupType.FinanceDimension10)
				FinanceDimensionStructure = FinanceDimension10Structure
			else
			if (DimensionGroupType.Project)
				FinanceDimensionStructure = ProjectStructure
			else
			if (DimensionGroupType.ChartAccount)
				FinanceDimensionStructure = ReportingChart	

			required
							
	Relations
		FinanceDimension1StructureRel		
			one-to-one relation to FinanceDimension1Structure
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension1Structure	= FinanceDimensionStructure

		FinanceDimension1Rel
			one-to-one relation to FinanceDimension1
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension1			= FinanceDimensionSecurityGroupMember

		FinanceDimension1InStructureRel
			one-to-many relation to FinanceDimension1Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension1Structure  = FinanceDimensionStructure
				related.FinanceDimension1			= FinanceDimension1

		FinanceDimension1DescendantsRel
			one-to-many relation to FinanceDimension1Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.SummaryFinanceDimension1	= LocalSummaryDimension	

		FinanceDimension1AncestorsRel
			one-to-many relation to FinanceDimension1Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension1Structure  = FinanceDimensionStructure
				related.FinanceDimension1			= LocalSummaryDimension	
								
		FinanceDimension2StructureRel		
			one-to-one relation to FinanceDimension2Structure
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension2Structure	= FinanceDimensionStructure

		FinanceDimension2Rel
			one-to-one relation to FinanceDimension2
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension2			= FinanceDimensionSecurityGroupMember

		FinanceDimension2InStructureRel
			one-to-many relation to FinanceDimension2Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension2Structure  = FinanceDimensionStructure
				related.FinanceDimension2			= FinanceDimension2

		FinanceDimension2DescendantsRel
			one-to-many relation to FinanceDimension2Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.SummaryFinanceDimension2	= LocalSummaryDimension

		FinanceDimension2AncestorsRel
			one-to-many relation to FinanceDimension2Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension2Structure  = FinanceDimensionStructure
				related.FinanceDimension2			= LocalSummaryDimension	
									
		FinanceDimension3StructureRel		
			one-to-one relation to FinanceDimension3Structure
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension3Structure	= FinanceDimensionStructure

		FinanceDimension3Rel
			one-to-one relation to FinanceDimension3
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension3			= FinanceDimensionSecurityGroupMember

		FinanceDimension3InStructureRel
			one-to-many relation to FinanceDimension3Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension3Structure  = FinanceDimensionStructure
				related.FinanceDimension3			= FinanceDimension3

		FinanceDimension3DescendantsRel
			one-to-many relation to FinanceDimension3Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.SummaryFinanceDimension3	= LocalSummaryDimension	

		FinanceDimension3AncestorsRel
			one-to-many relation to FinanceDimension3Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension3Structure  = FinanceDimensionStructure
				related.FinanceDimension3			= LocalSummaryDimension	
								
		FinanceDimension4StructureRel		
			one-to-one relation to FinanceDimension4Structure
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension4Structure	= FinanceDimensionStructure

		FinanceDimension4Rel
			one-to-one relation to FinanceDimension4
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension4			= FinanceDimensionSecurityGroupMember

		FinanceDimension4InStructureRel
			one-to-many relation to FinanceDimension4Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension4Structure  = FinanceDimensionStructure
				related.FinanceDimension4			= FinanceDimension4

		FinanceDimension4DescendantsRel
			one-to-many relation to FinanceDimension4Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.SummaryFinanceDimension4	= LocalSummaryDimension	

		FinanceDimension4AncestorsRel
			one-to-many relation to FinanceDimension4Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension4Structure  = FinanceDimensionStructure
				related.FinanceDimension4			= LocalSummaryDimension	
								
		FinanceDimension5StructureRel		
			one-to-one relation to FinanceDimension5Structure
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension5Structure	= FinanceDimensionStructure

		FinanceDimension5Rel
			one-to-one relation to FinanceDimension5
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension5			= FinanceDimensionSecurityGroupMember

		FinanceDimension5InStructureRel
			one-to-many relation to FinanceDimension5Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension5Structure  = FinanceDimensionStructure
				related.FinanceDimension5			= FinanceDimension5

		FinanceDimension5DescendantsRel
			one-to-many relation to FinanceDimension5Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.SummaryFinanceDimension5	= LocalSummaryDimension	

		FinanceDimension5AncestorsRel
			one-to-many relation to FinanceDimension5Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension5Structure  = FinanceDimensionStructure
				related.FinanceDimension5			= LocalSummaryDimension	
								
		FinanceDimension6StructureRel		
			one-to-one relation to FinanceDimension6Structure
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension6Structure	= FinanceDimensionStructure

		FinanceDimension6Rel
			one-to-one relation to FinanceDimension6
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension6			= FinanceDimensionSecurityGroupMember

		FinanceDimension6InStructureRel
			one-to-many relation to FinanceDimension6Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension6Structure  = FinanceDimensionStructure
				related.FinanceDimension6			= FinanceDimension6

		FinanceDimension6DescendantsRel
			one-to-many relation to FinanceDimension6Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.SummaryFinanceDimension6	= LocalSummaryDimension	

		FinanceDimension6AncestorsRel
			one-to-many relation to FinanceDimension6Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension6Structure  = FinanceDimensionStructure
				related.FinanceDimension6			= LocalSummaryDimension	
				
		FinanceDimension7StructureRel		
			one-to-one relation to FinanceDimension7Structure
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension7Structure	= FinanceDimensionStructure

		FinanceDimension7Rel
			one-to-one relation to FinanceDimension7
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension7			= FinanceDimensionSecurityGroupMember
				
		FinanceDimension7InStructureRel
			one-to-many relation to FinanceDimension7Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension7Structure  = FinanceDimensionStructure
				related.FinanceDimension7			= FinanceDimension7

		FinanceDimension7DescendantsRel
			one-to-many relation to FinanceDimension7Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.SummaryFinanceDimension7	= LocalSummaryDimension								

		FinanceDimension7AncestorsRel
			one-to-many relation to FinanceDimension7Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension7Structure  = FinanceDimensionStructure
				related.FinanceDimension7			= LocalSummaryDimension	
				
		FinanceDimension8StructureRel		
			one-to-one relation to FinanceDimension8Structure
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension8Structure	= FinanceDimensionStructure

		FinanceDimension8Rel
			one-to-one relation to FinanceDimension8
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension8			= FinanceDimensionSecurityGroupMember

		FinanceDimension8InStructureRel
			one-to-many relation to FinanceDimension8Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension8Structure  = FinanceDimensionStructure
				related.FinanceDimension8			= FinanceDimension8

		FinanceDimension8DescendantsRel
			one-to-many relation to FinanceDimension8Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.SummaryFinanceDimension8	= LocalSummaryDimension	

		FinanceDimension8AncestorsRel
			one-to-many relation to FinanceDimension8Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension8Structure  = FinanceDimensionStructure
				related.FinanceDimension8			= LocalSummaryDimension	
								
		FinanceDimension9StructureRel		
			one-to-one relation to FinanceDimension9Structure
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension9Structure	= FinanceDimensionStructure

		FinanceDimension9Rel
			one-to-one relation to FinanceDimension9
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension9			= FinanceDimensionSecurityGroupMember

		FinanceDimension9InStructureRel
			one-to-many relation to FinanceDimension9Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension9Structure  = FinanceDimensionStructure
				related.FinanceDimension9			= FinanceDimension9

		FinanceDimension9DescendantsRel
			one-to-many relation to FinanceDimension9Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.SummaryFinanceDimension9	= LocalSummaryDimension	

		FinanceDimension9AncestorsRel
			one-to-many relation to FinanceDimension9Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension9Structure  = FinanceDimensionStructure
				related.FinanceDimension9			= LocalSummaryDimension	
								
		FinanceDimension10StructureRel		
			one-to-one relation to FinanceDimension10Structure
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension10Structure	= FinanceDimensionStructure

		FinanceDimension10Rel
			one-to-one relation to FinanceDimension10
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension10			= FinanceDimensionSecurityGroupMember

		FinanceDimension10InStructureRel
			one-to-many relation to FinanceDimension10Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension10Structure = FinanceDimensionStructure
				related.FinanceDimension10			= FinanceDimension10

		FinanceDimension10DescendantsRel
			one-to-many relation to FinanceDimension10Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.SummaryFinanceDimension10	= LocalSummaryDimension	

		FinanceDimension10AncestorsRel
			one-to-many relation to FinanceDimension10Shadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.FinanceDimension10Structure = FinanceDimensionStructure
				related.FinanceDimension10			= LocalSummaryDimension	
								
		ProjectStructureRel		
			one-to-one relation to ProjectStructure
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.ProjectStructure			= FinanceDimensionStructure

		ProjectRel
			one-to-one relation to Project
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Project						= FinanceDimensionSecurityGroupMember

		ProjectInStructureRel
			one-to-many relation to ProjectShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.ProjectStructure  			= FinanceDimensionStructure
				related.Project						= Project

		ProjectDescendantsRel
			one-to-many relation to ProjectShadow
			Field Mapping uses BySummaryProject
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.SummaryProject				= LocalSummaryDimension

		ProjectAncestorsRel
			one-to-many relation to ProjectShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.ProjectStructure  			= ProjectStructure
				related.Project						= LocalSummaryDimension	

		ReportingChartRel		
			one-to-one relation to ReportingChart
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.ReportingChart  			= FinanceDimensionStructure

		GeneralLedgerChartAccountRel
			one-to-one relation to GeneralLedgerChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.GeneralLedgerChartAccount	= FinanceDimensionSecurityGroupMember
				
		GeneralLedgerChartAccountInStructureRel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.ReportingChart			    = FinanceDimensionStructure
				related.GeneralLedgerChartAccount	= GeneralLedgerChartAccount

		GeneralLedgerChartAccountDescendantsRel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses BySummaryAccount
				related.FinanceEnterpriseGroup      	 = FinanceEnterpriseGroup
				related.SummaryGeneralLedgerChartAccount = LocalSummaryDimension					

		GeneralLedgerChartAccountAncestorsRel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.ReportingChart				= FinanceDimensionStructure
				related.GeneralLedgerChartAccount	= LocalSummaryDimension	
				
		GroupSecurityDetailRel
			one-to-one relation to FinanceDimensionSecurityGroupDetail
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup              = FinanceEnterpriseGroup
				related.DimensionGroupType					= DimensionGroupType
				related.FinanceDimensionSecurityGroup       = FinanceDimensionSecurityGroup
				related.FinanceDimensionSecurityGroupDetail	= LocalDimension
				
	Sets
		ByStructure
			Sort Order
				FinanceEnterpriseGroup
				DimensionGroupType
				FinanceDimensionStructure
				FinanceDimensionSecurityGroup
				FinanceDimensionSecurityGroupMember
															
	Rule Blocks
		BuildDetail
			LocalSummaryDimension = FinanceDimensionSecurityGroupMember
			LocalDimension 		  = FinanceDimensionSecurityGroupMember
				
			if (DimensionGroupType.FinanceDimension1)
				if (!FinanceDimension1 exists)
					invoke Delete
				else
					if (GroupSecurityDetailRel exists)
						invoke ResetCreatedForHierarchyAccess GroupSecurityDetailRel
					else
						invoke Create FinanceDimensionSecurityGroupDetail
							resume on error
							invoked.FinanceEnterpriseGroup 					= FinanceEnterpriseGroup
							invoked.DimensionGroupType						= DimensionGroupType
							invoked.FinanceDimensionSecurityGroup   		= FinanceDimensionSecurityGroup
							invoked.FinanceDimension1						= FinanceDimensionSecurityGroupMember
					for each FinanceDimension1AncestorsRel
						LocalDimension = each.SummaryFinanceDimension1
						if (!GroupSecurityDetailRel exists)
							invoke Create FinanceDimensionSecurityGroupDetail
								resume on error
								invoked.FinanceEnterpriseGroup 		    	= FinanceEnterpriseGroup
								invoked.DimensionGroupType					= DimensionGroupType
								invoked.FinanceDimensionSecurityGroup   	= FinanceDimensionSecurityGroup					
								invoked.FinanceDimension1					= each.SummaryFinanceDimension1
								invoked.CreatedForHierarchyAccess			= true						
					invoke CreateFinanceDimensionSecurityGroupDetail FinanceDimension1Shadow
						invoked.PrmFinanceEnterpriseGroup 		    		= FinanceEnterpriseGroup
						invoked.PrmDimensionGroupType						= DimensionGroupType
						invoked.PrmFinanceDimensionSecurityGroup   			= FinanceDimensionSecurityGroup
						invoked.PrmFinanceDimensionSecurityGroupMember		= FinanceDimensionSecurityGroupMember
			else							
			if (DimensionGroupType.FinanceDimension2)
				if (!FinanceDimension2 exists)
					invoke Delete
				else
					if (GroupSecurityDetailRel exists)
						invoke ResetCreatedForHierarchyAccess GroupSecurityDetailRel
					else
						invoke Create FinanceDimensionSecurityGroupDetail
							resume on error
							invoked.FinanceEnterpriseGroup 					= FinanceEnterpriseGroup
							invoked.DimensionGroupType						= DimensionGroupType
							invoked.FinanceDimensionSecurityGroup   		= FinanceDimensionSecurityGroup
							invoked.FinanceDimension2						= FinanceDimensionSecurityGroupMember
					for each FinanceDimension2AncestorsRel
						LocalDimension = each.SummaryFinanceDimension2
						if (!GroupSecurityDetailRel exists)
							invoke Create FinanceDimensionSecurityGroupDetail
								resume on error
								invoked.FinanceEnterpriseGroup 		    	= FinanceEnterpriseGroup
								invoked.DimensionGroupType					= DimensionGroupType
								invoked.FinanceDimensionSecurityGroup   	= FinanceDimensionSecurityGroup					
								invoked.FinanceDimension2					= each.SummaryFinanceDimension2
								invoked.CreatedForHierarchyAccess			= true						
					invoke CreateFinanceDimensionSecurityGroupDetail FinanceDimension2Shadow
						invoked.PrmFinanceEnterpriseGroup 		    		= FinanceEnterpriseGroup
						invoked.PrmDimensionGroupType						= DimensionGroupType
						invoked.PrmFinanceDimensionSecurityGroup   			= FinanceDimensionSecurityGroup
						invoked.PrmFinanceDimensionSecurityGroupMember		= FinanceDimensionSecurityGroupMember
			else			
			if (DimensionGroupType.FinanceDimension3)
				if (!FinanceDimension3 exists)
					invoke Delete
				else
					if (GroupSecurityDetailRel exists)
						invoke ResetCreatedForHierarchyAccess GroupSecurityDetailRel
					else
						invoke Create FinanceDimensionSecurityGroupDetail
							resume on error
							invoked.FinanceEnterpriseGroup 					= FinanceEnterpriseGroup
							invoked.DimensionGroupType						= DimensionGroupType
							invoked.FinanceDimensionSecurityGroup   		= FinanceDimensionSecurityGroup
							invoked.FinanceDimension3						= FinanceDimensionSecurityGroupMember
					for each FinanceDimension3AncestorsRel
						LocalDimension = each.SummaryFinanceDimension3
						if (!GroupSecurityDetailRel exists)
							invoke Create FinanceDimensionSecurityGroupDetail
								resume on error
								invoked.FinanceEnterpriseGroup 		    	= FinanceEnterpriseGroup
								invoked.DimensionGroupType					= DimensionGroupType
								invoked.FinanceDimensionSecurityGroup   	= FinanceDimensionSecurityGroup					
								invoked.FinanceDimension3					= each.SummaryFinanceDimension3
								invoked.CreatedForHierarchyAccess			= true						
					invoke CreateFinanceDimensionSecurityGroupDetail FinanceDimension3Shadow
						invoked.PrmFinanceEnterpriseGroup 		    		= FinanceEnterpriseGroup
						invoked.PrmDimensionGroupType						= DimensionGroupType
						invoked.PrmFinanceDimensionSecurityGroup   			= FinanceDimensionSecurityGroup
						invoked.PrmFinanceDimensionSecurityGroupMember		= FinanceDimensionSecurityGroupMember
			else		
			if (DimensionGroupType.FinanceDimension4)
				if (!FinanceDimension4 exists)
					invoke Delete
				else
					if (GroupSecurityDetailRel exists)
						invoke ResetCreatedForHierarchyAccess GroupSecurityDetailRel
					else
						invoke Create FinanceDimensionSecurityGroupDetail
							resume on error
							invoked.FinanceEnterpriseGroup 					= FinanceEnterpriseGroup
							invoked.DimensionGroupType						= DimensionGroupType
							invoked.FinanceDimensionSecurityGroup   		= FinanceDimensionSecurityGroup
							invoked.FinanceDimension4						= FinanceDimensionSecurityGroupMember
					for each FinanceDimension4AncestorsRel
						LocalDimension = each.SummaryFinanceDimension4
						if (!GroupSecurityDetailRel exists)
							invoke Create FinanceDimensionSecurityGroupDetail
								resume on error
								invoked.FinanceEnterpriseGroup 		    	= FinanceEnterpriseGroup
								invoked.DimensionGroupType					= DimensionGroupType
								invoked.FinanceDimensionSecurityGroup   	= FinanceDimensionSecurityGroup					
								invoked.FinanceDimension4					= each.SummaryFinanceDimension4
								invoked.CreatedForHierarchyAccess			= true						
					invoke CreateFinanceDimensionSecurityGroupDetail FinanceDimension4Shadow
						invoked.PrmFinanceEnterpriseGroup 		    		= FinanceEnterpriseGroup
						invoked.PrmDimensionGroupType						= DimensionGroupType
						invoked.PrmFinanceDimensionSecurityGroup   			= FinanceDimensionSecurityGroup
						invoked.PrmFinanceDimensionSecurityGroupMember		= FinanceDimensionSecurityGroupMember
			else		
			if (DimensionGroupType.FinanceDimension5)
				if (!FinanceDimension5 exists)
					invoke Delete
				else
					if (GroupSecurityDetailRel exists)
						invoke ResetCreatedForHierarchyAccess GroupSecurityDetailRel
					else
						invoke Create FinanceDimensionSecurityGroupDetail
							resume on error
							invoked.FinanceEnterpriseGroup 					= FinanceEnterpriseGroup
							invoked.DimensionGroupType						= DimensionGroupType
							invoked.FinanceDimensionSecurityGroup   		= FinanceDimensionSecurityGroup
							invoked.FinanceDimension5						= FinanceDimensionSecurityGroupMember
					for each FinanceDimension5AncestorsRel
						LocalDimension = each.SummaryFinanceDimension5
						if (!GroupSecurityDetailRel exists)
							invoke Create FinanceDimensionSecurityGroupDetail
								resume on error
								invoked.FinanceEnterpriseGroup 		    	= FinanceEnterpriseGroup
								invoked.DimensionGroupType					= DimensionGroupType
								invoked.FinanceDimensionSecurityGroup   	= FinanceDimensionSecurityGroup					
								invoked.FinanceDimension5					= each.SummaryFinanceDimension5
								invoked.CreatedForHierarchyAccess			= true						
					invoke CreateFinanceDimensionSecurityGroupDetail FinanceDimension5Shadow
						invoked.PrmFinanceEnterpriseGroup 		    		= FinanceEnterpriseGroup
						invoked.PrmDimensionGroupType						= DimensionGroupType
						invoked.PrmFinanceDimensionSecurityGroup   			= FinanceDimensionSecurityGroup
						invoked.PrmFinanceDimensionSecurityGroupMember		= FinanceDimensionSecurityGroupMember
			else		
			if (DimensionGroupType.FinanceDimension6)
				if (!FinanceDimension6 exists)
					invoke Delete
				else
					if (GroupSecurityDetailRel exists)
						invoke ResetCreatedForHierarchyAccess GroupSecurityDetailRel
					else
						invoke Create FinanceDimensionSecurityGroupDetail
							resume on error
							invoked.FinanceEnterpriseGroup 					= FinanceEnterpriseGroup
							invoked.DimensionGroupType						= DimensionGroupType
							invoked.FinanceDimensionSecurityGroup   		= FinanceDimensionSecurityGroup
							invoked.FinanceDimension6						= FinanceDimensionSecurityGroupMember
					for each FinanceDimension6AncestorsRel
						LocalDimension = each.SummaryFinanceDimension6
						if (!GroupSecurityDetailRel exists)
							invoke Create FinanceDimensionSecurityGroupDetail
								resume on error
								invoked.FinanceEnterpriseGroup 		    	= FinanceEnterpriseGroup
								invoked.DimensionGroupType					= DimensionGroupType
								invoked.FinanceDimensionSecurityGroup   	= FinanceDimensionSecurityGroup					
								invoked.FinanceDimension6					= each.SummaryFinanceDimension6
								invoked.CreatedForHierarchyAccess			= true						
					invoke CreateFinanceDimensionSecurityGroupDetail FinanceDimension6Shadow
						invoked.PrmFinanceEnterpriseGroup 		    		= FinanceEnterpriseGroup
						invoked.PrmDimensionGroupType						= DimensionGroupType
						invoked.PrmFinanceDimensionSecurityGroup   			= FinanceDimensionSecurityGroup
						invoked.PrmFinanceDimensionSecurityGroupMember		= FinanceDimensionSecurityGroupMember
			else		
			if (DimensionGroupType.FinanceDimension7)
				if (!FinanceDimension7 exists)
					invoke Delete
				else
					if (GroupSecurityDetailRel exists)
						invoke ResetCreatedForHierarchyAccess GroupSecurityDetailRel
					else
						invoke Create FinanceDimensionSecurityGroupDetail
							resume on error
							invoked.FinanceEnterpriseGroup 					= FinanceEnterpriseGroup
							invoked.DimensionGroupType						= DimensionGroupType
							invoked.FinanceDimensionSecurityGroup   		= FinanceDimensionSecurityGroup
							invoked.FinanceDimension7						= FinanceDimensionSecurityGroupMember
					for each FinanceDimension7AncestorsRel
						LocalDimension = each.SummaryFinanceDimension7
						if (!GroupSecurityDetailRel exists)
							invoke Create FinanceDimensionSecurityGroupDetail
								resume on error
								invoked.FinanceEnterpriseGroup 		    	= FinanceEnterpriseGroup
								invoked.DimensionGroupType					= DimensionGroupType
								invoked.FinanceDimensionSecurityGroup   	= FinanceDimensionSecurityGroup					
								invoked.FinanceDimension7					= each.SummaryFinanceDimension7
								invoked.CreatedForHierarchyAccess			= true						
					invoke CreateFinanceDimensionSecurityGroupDetail FinanceDimension7Shadow
						invoked.PrmFinanceEnterpriseGroup 		    		= FinanceEnterpriseGroup
						invoked.PrmDimensionGroupType						= DimensionGroupType
						invoked.PrmFinanceDimensionSecurityGroup   			= FinanceDimensionSecurityGroup
						invoked.PrmFinanceDimensionSecurityGroupMember		= FinanceDimensionSecurityGroupMember
			else		
			if (DimensionGroupType.FinanceDimension8)
				if (!FinanceDimension8 exists)
					invoke Delete
				else
					if (GroupSecurityDetailRel exists)
						invoke ResetCreatedForHierarchyAccess GroupSecurityDetailRel
					else
						invoke Create FinanceDimensionSecurityGroupDetail
							resume on error
							invoked.FinanceEnterpriseGroup 					= FinanceEnterpriseGroup
							invoked.DimensionGroupType						= DimensionGroupType
							invoked.FinanceDimensionSecurityGroup   		= FinanceDimensionSecurityGroup
							invoked.FinanceDimension8						= FinanceDimensionSecurityGroupMember
					for each FinanceDimension8AncestorsRel
						LocalDimension = each.SummaryFinanceDimension8
						if (!GroupSecurityDetailRel exists)
							invoke Create FinanceDimensionSecurityGroupDetail
								resume on error
								invoked.FinanceEnterpriseGroup 		    	= FinanceEnterpriseGroup
								invoked.DimensionGroupType					= DimensionGroupType
								invoked.FinanceDimensionSecurityGroup   	= FinanceDimensionSecurityGroup					
								invoked.FinanceDimension8					= each.SummaryFinanceDimension8
								invoked.CreatedForHierarchyAccess			= true						
					invoke CreateFinanceDimensionSecurityGroupDetail FinanceDimension8Shadow
						invoked.PrmFinanceEnterpriseGroup 		    		= FinanceEnterpriseGroup
						invoked.PrmDimensionGroupType						= DimensionGroupType
						invoked.PrmFinanceDimensionSecurityGroup   			= FinanceDimensionSecurityGroup
						invoked.PrmFinanceDimensionSecurityGroupMember		= FinanceDimensionSecurityGroupMember
			else		
			if (DimensionGroupType.FinanceDimension9)
				if (!FinanceDimension9 exists)
					invoke Delete
				else
					if (GroupSecurityDetailRel exists)
						invoke ResetCreatedForHierarchyAccess GroupSecurityDetailRel
					else
						invoke Create FinanceDimensionSecurityGroupDetail
							resume on error
							invoked.FinanceEnterpriseGroup 					= FinanceEnterpriseGroup
							invoked.DimensionGroupType						= DimensionGroupType
							invoked.FinanceDimensionSecurityGroup   		= FinanceDimensionSecurityGroup
							invoked.FinanceDimension9						= FinanceDimensionSecurityGroupMember
					for each FinanceDimension9AncestorsRel
						LocalDimension = each.SummaryFinanceDimension9
						if (!GroupSecurityDetailRel exists)
							invoke Create FinanceDimensionSecurityGroupDetail
								resume on error
								invoked.FinanceEnterpriseGroup 		    	= FinanceEnterpriseGroup
								invoked.DimensionGroupType					= DimensionGroupType
								invoked.FinanceDimensionSecurityGroup   	= FinanceDimensionSecurityGroup					
								invoked.FinanceDimension9					= each.SummaryFinanceDimension9
								invoked.CreatedForHierarchyAccess			= true						
					invoke CreateFinanceDimensionSecurityGroupDetail FinanceDimension9Shadow
						invoked.PrmFinanceEnterpriseGroup 		    		= FinanceEnterpriseGroup
						invoked.PrmDimensionGroupType						= DimensionGroupType
						invoked.PrmFinanceDimensionSecurityGroup   			= FinanceDimensionSecurityGroup
						invoked.PrmFinanceDimensionSecurityGroupMember		= FinanceDimensionSecurityGroupMember
			else		
			if (DimensionGroupType.FinanceDimension10)
				if (!FinanceDimension10 exists)
					invoke Delete
				else
					if (GroupSecurityDetailRel exists)
						invoke ResetCreatedForHierarchyAccess GroupSecurityDetailRel
					else
						invoke Create FinanceDimensionSecurityGroupDetail
							resume on error
							invoked.FinanceEnterpriseGroup 					= FinanceEnterpriseGroup
							invoked.DimensionGroupType						= DimensionGroupType
							invoked.FinanceDimensionSecurityGroup   		= FinanceDimensionSecurityGroup
							invoked.FinanceDimension10						= FinanceDimensionSecurityGroupMember
					for each FinanceDimension10AncestorsRel
						LocalDimension = each.SummaryFinanceDimension10
						if (!GroupSecurityDetailRel exists)
							invoke Create FinanceDimensionSecurityGroupDetail
								resume on error
								invoked.FinanceEnterpriseGroup 		    	= FinanceEnterpriseGroup
								invoked.DimensionGroupType					= DimensionGroupType
								invoked.FinanceDimensionSecurityGroup   	= FinanceDimensionSecurityGroup					
								invoked.FinanceDimension10					= each.SummaryFinanceDimension10
								invoked.CreatedForHierarchyAccess			= true						
					invoke CreateFinanceDimensionSecurityGroupDetail FinanceDimension10Shadow
						invoked.PrmFinanceEnterpriseGroup 		    		= FinanceEnterpriseGroup
						invoked.PrmDimensionGroupType						= DimensionGroupType
						invoked.PrmFinanceDimensionSecurityGroup   			= FinanceDimensionSecurityGroup
						invoked.PrmFinanceDimensionSecurityGroupMember		= FinanceDimensionSecurityGroupMember
			else		
			if (DimensionGroupType.Project)
				if (!Project exists)
					invoke Delete
				else
					if (GroupSecurityDetailRel exists)
						invoke ResetCreatedForHierarchyAccess GroupSecurityDetailRel
					else
						invoke Create FinanceDimensionSecurityGroupDetail
							resume on error
							invoked.FinanceEnterpriseGroup 					= FinanceEnterpriseGroup
							invoked.DimensionGroupType						= DimensionGroupType
							invoked.FinanceDimensionSecurityGroup   		= FinanceDimensionSecurityGroup
							invoked.Project									= FinanceDimensionSecurityGroupMember
					for each ProjectAncestorsRel
						LocalDimension = each.SummaryProject
						if (!GroupSecurityDetailRel exists)
							invoke Create FinanceDimensionSecurityGroupDetail
								resume on error
								invoked.FinanceEnterpriseGroup 		    	= FinanceEnterpriseGroup
								invoked.DimensionGroupType					= DimensionGroupType
								invoked.FinanceDimensionSecurityGroup   	= FinanceDimensionSecurityGroup					
								invoked.Project								= each.SummaryProject
								invoked.CreatedForHierarchyAccess			= true						
					invoke CreateFinanceDimensionSecurityGroupDetail ProjectShadow
						invoked.PrmFinanceEnterpriseGroup 		    		= FinanceEnterpriseGroup
						invoked.PrmDimensionGroupType						= DimensionGroupType
						invoked.PrmFinanceDimensionSecurityGroup   			= FinanceDimensionSecurityGroup
						invoked.PrmFinanceDimensionSecurityGroupMember		= FinanceDimensionSecurityGroupMember
			else		
			if (DimensionGroupType.ChartAccount)
				if (!GeneralLedgerChartAccount exists)
					invoke Delete
				else
					if (GroupSecurityDetailRel exists)
						invoke ResetCreatedForHierarchyAccess GroupSecurityDetailRel
					else
						invoke Create FinanceDimensionSecurityGroupDetail
							resume on error
							invoked.FinanceEnterpriseGroup 					= FinanceEnterpriseGroup
							invoked.DimensionGroupType						= DimensionGroupType
							invoked.FinanceDimensionSecurityGroup   		= FinanceDimensionSecurityGroup
							invoked.GeneralLedgerChartAccount				= FinanceDimensionSecurityGroupMember
					for each GeneralLedgerChartAccountAncestorsRel
						LocalDimension = each.SummaryGeneralLedgerChartAccount
						if (!GroupSecurityDetailRel exists)
							invoke Create FinanceDimensionSecurityGroupDetail
								resume on error
								invoked.FinanceEnterpriseGroup 		    	= FinanceEnterpriseGroup
								invoked.DimensionGroupType					= DimensionGroupType
								invoked.FinanceDimensionSecurityGroup   	= FinanceDimensionSecurityGroup					
								invoked.GeneralLedgerChartAccount			= each.SummaryGeneralLedgerChartAccount
								invoked.CreatedForHierarchyAccess			= true						
					invoke CreateFinanceDimensionSecurityGroupDetail GLChartAccountShadow
						invoked.PrmFinanceEnterpriseGroup 		    		= FinanceEnterpriseGroup
						invoked.PrmDimensionGroupType						= DimensionGroupType
						invoked.PrmFinanceDimensionSecurityGroup   			= FinanceDimensionSecurityGroup
						invoked.PrmFinanceDimensionSecurityGroupMember		= FinanceDimensionSecurityGroupMember
	Actions

		Create is an Action
			valid when (MemberDimension)
		
			Entrance Rules
				if (DimensionGroupType.FinanceDimension1)
					constraint (!FinanceDimension1.DimensionType.Posting)
						"DimensionCannotBePostingType"
					FinanceDimensionSecurityGroupMember = FinanceDimension1
					constraint (DerivedStructureSequence = FinanceDimension1Structure.StructureSequence)
						"DimensionNotInSpecifiedStructure"	
				else
				if (DimensionGroupType.FinanceDimension2)
					constraint (!FinanceDimension2.DimensionType.Posting)
						"DimensionCannotBePostingType"
					FinanceDimensionSecurityGroupMember = FinanceDimension2
					constraint (DerivedStructureSequence = FinanceDimension2Structure.StructureSequence)
						"DimensionNotInSpecifiedStructure"
				else
				if (DimensionGroupType.FinanceDimension3)
					constraint (!FinanceDimension3.DimensionType.Posting)
						"DimensionCannotBePostingType"
					FinanceDimensionSecurityGroupMember = FinanceDimension3
					constraint (DerivedStructureSequence = FinanceDimension3Structure.StructureSequence)
						"DimensionNotInSpecifiedStructure"
				else
				if (DimensionGroupType.FinanceDimension4)
					constraint (!FinanceDimension4.DimensionType.Posting)
						"DimensionCannotBePostingType"
					FinanceDimensionSecurityGroupMember = FinanceDimension4
					constraint (DerivedStructureSequence = FinanceDimension4Structure.StructureSequence)
						"DimensionNotInSpecifiedStructure"
				else
				if (DimensionGroupType.FinanceDimension5)
					constraint (!FinanceDimension5.DimensionType.Posting)
						"DimensionCannotBePostingType"
					FinanceDimensionSecurityGroupMember = FinanceDimension5
					constraint (DerivedStructureSequence = FinanceDimension5Structure.StructureSequence)
						"DimensionNotInSpecifiedStructure"
				else
				if (DimensionGroupType.FinanceDimension6)
					constraint (!FinanceDimension6.DimensionType.Posting)
						"DimensionCannotBePostingType"
					FinanceDimensionSecurityGroupMember = FinanceDimension6
					constraint (DerivedStructureSequence = FinanceDimension6Structure.StructureSequence)
						"DimensionNotInSpecifiedStructure"
				else
				if (DimensionGroupType.FinanceDimension7)
					constraint (!FinanceDimension7.DimensionType.Posting)
						"DimensionCannotBePostingType"
					FinanceDimensionSecurityGroupMember = FinanceDimension7
					constraint (DerivedStructureSequence = FinanceDimension7Structure.StructureSequence)
						"DimensionNotInSpecifiedStructure"
				else
				if (DimensionGroupType.FinanceDimension8)
					constraint (!FinanceDimension8.DimensionType.Posting)
						"DimensionCannotBePostingType"
					FinanceDimensionSecurityGroupMember = FinanceDimension8
					constraint (DerivedStructureSequence = FinanceDimension8Structure.StructureSequence)
						"DimensionNotInSpecifiedStructure"
				else
				if (DimensionGroupType.FinanceDimension9)
					constraint (!FinanceDimension9.DimensionType.Posting)
						"DimensionCannotBePostingType"
					FinanceDimensionSecurityGroupMember = FinanceDimension9
					constraint (DerivedStructureSequence = FinanceDimension9Structure.StructureSequence)
						"DimensionNotInSpecifiedStructure"
				else
				if (DimensionGroupType.FinanceDimension10)
					constraint (!FinanceDimension10.DimensionType.Posting)
						"DimensionCannotBePostingType"
					FinanceDimensionSecurityGroupMember = FinanceDimension10
					constraint (DerivedStructureSequence = FinanceDimension10Structure.StructureSequence)
						"DimensionNotInSpecifiedStructure"
				else
				if (DimensionGroupType.Project)
					constraint (!Project.ProjectType.Posting)
						"ProjectCannotBePostingType"
					FinanceDimensionSecurityGroupMember = Project
					constraint (DerivedStructureSequence = ProjectStructure.StructureSequence)
						"ProjectNotInSpecifiedStructure"
				else
				if (DimensionGroupType.ChartAccount)
					constraint (!GeneralLedgerChartAccount.ChartType.Posting)
						"AccountCannotBePostingType"
					FinanceDimensionSecurityGroupMember = GeneralLedgerChartAccount
					constraint (DerivedStructureSequence = ReportingChart.ChartSequence)
						"AccountNotInSpecifiedChart"
						
			Exit Rules
				invoke SetRequiresRebuild FinanceDimensionSecurityGroup 
						
		Delete is an Action
			valid when (MemberDimension)
			Exit Rules
				invoke SetRequiresRebuild FinanceDimensionSecurityGroup 

		DeleteFinal is a Delete Action
			valid when (MemberDimension)
			restricted
							
		RebuildMember is an Instance Action
			valid when (MemberDimension)
			restricted
			Action Rules
				include BuildDetail
								
