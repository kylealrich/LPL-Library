PriceListContractPromotion is a BusinessClass
    owned by bl
    prefix is OPL
    classic name is OEPRCLIST

    Ontology
        symbolic key is PriceListContractPromotion
            classic set name is OPLSET1

    Patterns
        implements StaticJava
        disable AuditIndex

    Persistent Fields
        Description
        Currency
            classic name is CURRENCY-CODE
        InventoryLocation    
        BaseName					 is a PriceBase
        BeginDate                    is Date
            classic name is BEG-DATE
        EndDate                      is Date				
		Miscellaneous                is a OrderEntryAddOnCharge
            classic name is MISC
        Percent                      is a Pct
            classic name is PCT
        PriceDiscountCode
            classic name is DISC-CODE
        ContractDate                 is Date
        Contact
        PhoneNumber                            is a TelephoneNumber 
        	holds pii
            classic name for PhoneNumber.SubscriberNumber is PHONE
        PreviousContract             is a ListName
            classic name is PREV-CONTRACT
        CurrencyRate
            classic name is CURR-RATE
        CustomerReference            is a Contact
            classic name is CUST-REFERENC
        MinimumContractAmount        is an InternationalAmount
            classic name is MIN-CONT-AMT
        MaximumContractAmount        is an InternationalAmount
            classic name is MAX-CONT-AMT									
		OrderDiscount                is Boolean
            classic name is ORD-DISC-FL
        MinimumOrderAmount           is an InternationalAmount
            classic name is MIN-ORD-AMT
        MaximumOrderAmount           is an InternationalAmount
            classic name is MAX-ORD-AMT
        SalesClassPriceModifierCount is Numeric size 4
            classic name is SC-COUNT
        ItemCount

    Conditions
        IsContract
        	restricted
            when (PriceListContractPromotion.Customer entered)

        IsDefaultContract
        	restricted																			
            when (PriceListContractPromotion.Customer entered
            and   Percent >  0%)

        IsDefaultPromotion
        	restricted																			
            when (PriceListContractPromotion.Promotion entered
            and   Percent >  0%)

        IsPromotionNotEntered																		
            classic name is OPLSET4
            restricted
            when (PriceListContractPromotion.Promotion not entered)

        IsPriceList
        	restricted
            when (PriceListContractPromotion.Customer not entered
            and   PriceListContractPromotion.Promotion not entered)

        IsPromotion
            classic name is OPLSET2
            restricted
            when (PriceListContractPromotion.Customer not entered
            and   PriceListContractPromotion.Promotion entered)
		
		IsChangedDate
			restricted
			when (PriceListContractPromotion.Promotion entered
			and	 (BeginDate changed
			or	  EndDate changed))
	    
	    IsCustomerNotEntered
	    	restricted																		
            when (PriceListContractPromotion.Customer not entered)
		
	Relations
		PricingPreviewPriceListRel
            one-to-many relation to PricingPreview
            Field Mapping uses symbolic key
                related.Company										= Company
            Instance Selection
	            where	(related.ListName.ListName					= PriceListContractPromotion.ListName
	            and		 related.Promotion							not entered
                and		 related.ContractNumber						not entered)

		PricingPreviewPromotionRel
            one-to-many relation to PricingPreview
            Field Mapping uses symbolic key
                related.Company										= Company
            Instance Selection
	            where	(related.Promotion.ListName					= PriceListContractPromotion.ListName
	            and		 related.ContractNumber						not entered)

		PricingPreviewReContractRel
            one-to-many relation to PricingPreview
            Field Mapping uses symbolic key
                related.Company										= Company
            Instance Selection
	            where	(related.ContractNumber.ListName			= PriceListContractPromotion.ListName
                and		 related.ContractNumber.Customer			= PriceListContractPromotion.Customer
	            and		 related.Promotion							not entered)

		PriceListSalesClassRel
            one-to-many relation to PriceListSalesClass
            Field Mapping uses Set6
                related.Company                       		       		   = Company
                related.PriceListContractPromotion.ListName                = PriceListContractPromotion.ListName
            Instance Selection
	            where (related.PriceListSalesClass.MajorSalesClass 	    entered
                or     related.PriceListSalesClass.MinorSalesClass  	entered)
		
		PriceListSalesClassesRel is a PriceListSalesClass set
    	
    	PriceListSalesClassForContractRel
            one-to-many relation to PriceListSalesClass
            Field Mapping uses Set5
                related.Company                       		        = Company
                related.PriceListContractPromotion.Customer         = PriceListContractPromotion.Customer
            Instance Selection
	            where (related.PriceListSalesClass.MajorSalesClass 	entered
                or    related.PriceListSalesClass.MinorSalesClass  	entered)

    	PriceListItemWithoutCustomerRel is a PriceListItem set
    		Instance Selection
    			where (related.PriceListContractPromotion.Customer not entered)
		
		OtherPriceListSalesClassUpdateDateRel
			one-to-many relation to PriceListSalesClass
			valid when (IsChangedDate)
			Field Mapping uses Set2
                related.Company                       = Company
                related.PriceListContractPromotion.ListName  = PriceListContractPromotion.ListName
                related.PriceListContractPromotion.Promotion = PriceListContractPromotion.Promotion
            Instance Selection
            	where (related.PriceListSalesClass.MajorSalesClass entered)
		
		PriceListItemWithPriceListRel is a PriceListItem set 											
		
		OtherPriceListItemRel
			one-to-many relation to PriceListItem
			Field Mapping uses Set6
				related.Company	= Company
			Instance Selection
				where (related.PriceListItem.PriceListContractPromotion.ListName	 = PriceListContractPromotion.ListName
				and    related.PriceListItem.PriceListContractPromotion.Promotion	!= PriceListContractPromotion.Promotion
				and    related.Item									   				entered)
		
		OtherPriceListSaleClassRel
    		one-to-many relation to PriceListSalesClass
    		Field Mapping uses Set6
    			related.Company										  = Company
    		Instance Selection
    			where (related.PriceListContractPromotion.ListName  		  = PriceListContractPromotion.ListName
    			and	   related.PriceListContractPromotion.Promotion		 != PriceListContractPromotion.Promotion
    			and	   related.PriceListSalesClass.MajorSalesClass	  = LocalMajorClass 
    			and	   related.PriceListSalesClass.MinorSalesClass	  = LocalMinorClass)
		
		OtherPriceListSaleClassForContractRel
    		one-to-many relation to PriceListSalesClass
    		Field Mapping uses Set5
    			related.Company										  = Company
    		Instance Selection
    			where (related.PriceListContractPromotion.Customer		      = PriceListContractPromotion.Customer
    			and    related.PriceListContractPromotion.ListName		     != PriceListContractPromotion.ListName
    			and	   related.PriceListSalesClass.MajorSalesClass	  = LocalMajorClass 
    			and	   related.PriceListSalesClass.MinorSalesClass	  = LocalMinorClass)
		
		PriceListItemForCustomerRel is a PriceListItem set 










		
		OtherPriceListContractPromotionRel
			one-to-many relation to PriceListContractPromotion
			valid when (IsPromotion)
			Field Mapping uses Set6
				related.Company								        = Company
				related.PriceListContractPromotion.ListName			= PriceListContractPromotion.ListName
			Instance Selection
				where (related.PriceListContractPromotion.Promotion != PriceListContractPromotion.Promotion)
		
		PriceListContractPromotionForCustomerRel
			one-to-many relation to PriceListContractPromotion
			valid when (IsContract)
			Field Mapping uses Set5
				related.Company										 = Company
				related.PriceListContractPromotion.Customer	         = PriceListContractPromotion.Customer
			Instance Selection
				where (related.PriceListContractPromotion.ListName  != PriceListContractPromotion.ListName)	
		
		PriceListContractPromotionSelfRel
			one-to-many relation to PriceListContractPromotion
			valid when (IsPriceList)
			Field Mapping uses symbolic key
				related.Company										= Company
			Instance Selection
				where (related.PriceListContractPromotion.ListName	= PriceListContractPromotion.ListName)
		
		PriceListContractPromotionForUIRel
			one-to-one relation to PriceListContractPromotion
			Field Mapping uses symbolic key
				related.Company 								= Company
				related.PriceListContractPromotion.Customer 	= blank
				related.PriceListContractPromotion.ListName 	= PriceListContractPromotion.ListName
				related.PriceListContractPromotion.Promotion 	= blank
		
		CompanyCustomerRel
			one-to-one relation to CompanyCustomer
			Field Mapping uses symbolic key
				related.Company		= Company
				related.Customer	= PriceListContractPromotion.Customer
		
	Sets

        Set4
            indexed
            Instance Selection
                where (IsPromotionNotEntered)
            Sort Order
                Company
                PriceListContractPromotion.Customer
                PriceListContractPromotion.ListName

        Set5
            indexed
            Instance Selection
                where (IsDefaultContract)
            Sort Order
                Company
                PriceListContractPromotion.Customer
                EndDate

        Set6
            indexed
            Instance Selection
                where (IsDefaultPromotion)
            Sort Order
                Company
                PriceListContractPromotion.ListName
                EndDate

		ByListName
			indexed
			Sort Order
				Company
				PriceListContractPromotion.ListName
				PriceListContractPromotion.Customer
				PriceListContractPromotion.Promotion
	
	Local Fields
		LocalMajorClass		is a MajorSalesClass
		LocalMinorClass		is a MinorSalesClass

	Field Rules
    	
    	PriceListContractPromotion	
	    	
	    	if (IsPromotion)
	    		if (PriceListContractPromotion.ListName entered)
	    			constraint (PriceListContractPromotionSelfRel exist)
	    				"PriceListDoesNotExist"
	    		
    	Description
            required
    	
    	Currency
    		default to Company.Currency
    	
    	BeginDate
    		if (IsPromotion
    		or  IsContract)
    			required
        		
	            if (EndDate entered)
		            constraint (BeginDate <= EndDate)
		            	"BeginDateCannotBeGreaterThanEndDate"														
			
			if (Percent entered
   			and IsContract)
   				for each PriceListContractPromotionForCustomerRel
					if (each.BeginDate >= BeginDate)
		           		constraint (each.BeginDate > EndDate)
							"DateRangeOverlapsWithContract<PriceListContractPromotion.ListName>"					
					if (each.EndDate   >= BeginDate)
	            		constraint (each.EndDate > EndDate)
							"DateRangeOverlapsWithContract<PriceListContractPromotion.ListName>"					
					if (each.BeginDate <  BeginDate)
	            		constraint (each.EndDate < EndDate) 
							"DateRangeOverlapsWithContract<PriceListContractPromotion.ListName>"					
    	
    	EndDate
    		if (IsPromotion
    		or  IsContract)
   				required
   				
   			if (Percent entered
   			and IsPromotion)
				for each OtherPriceListContractPromotionRel
					if (each.BeginDate >= BeginDate)
	           	 		constraint (each.BeginDate > EndDate)
	           	 			"DateRangeOverlapsWithPromotion<each.PriceListContractPromotion.Promotion>"	
	            	if (each.EndDate   >= BeginDate)
	            		constraint (each.EndDate > EndDate)
	            			"DateRangeOverlapsWithPromotion<each.PriceListContractPromotion.Promotion>"
	            	if (each.BeginDate <  BeginDate)
	            		constraint (each.EndDate < EndDate)   
							"DateRangeOverlapsWithPromotion<each.PriceListContractPromotion.Promotion>"

		BaseName
        	required																					
        	constraint (BaseName exists)
        		"PriceBaseDoesNotExist"
		
		Percent
			if (IsPriceList)
				required
					"MustEnterDefaultPercentForPriceList"      											
			
			constraint (Percent > 0%)
				"PercentCannotBeLessThanZero"
			
		Miscellaneous
   			if (IsPriceList)
				constraint (Miscellaneous.IsFlatAmount)
					"AddOnChargeTypeMustBeFlatAmount"													
  	
        ContractDate
        	if (IsContract)
            	required

        PriceDiscountCode
        	if (IsPromotion
        	or  IsContract)
	        	if (Percent not entered)
	        		cannot be entered
	        			"CannotEnterDiscountCodetIfDefaultPercentsNotEntered"	
        
        MaximumContractAmount
	        if (IsContract) 
	        	if (MinimumContractAmount entered)
	    			required
	        	
	        	if (MaximumContractAmount entered)
	        		constraint (MinimumContractAmount < MaximumContractAmount)	
	        			"MinimumContractAmountCanNotBeGreaterMaximum"										
	    	
       	CurrencyRate
       		if (IsContract)
	        	if (Company.CurrencyBasedPricing
	        	or  PriceListContractPromotion.Currency = Company.Currency) 
	        		cannot be entered
	        			"CannotEnterRateForMulticurrencyPricingCompany"									
	        			
	Actions
		CreatePriceList is a Create Action
			Action Rules
				constraint (PriceListContractPromotion.ListName entered)
					"PriceListIsRequired"				
				

		CreateContract is a Create Action
			Action Rules
				constraint (PriceListContractPromotion.ListName entered)
					"ContractIsRequired"
				
				constraint (PriceListContractPromotion.Customer entered)
					"CustomerIsRequired"
				if (PriceListContractPromotion.Customer entered)
					constraint (CompanyCustomerRel exists)
						"CompanyCustomerDoesNotExist"
				
		CreatePromotion is a Create Action 
			Action Rules
				constraint (PriceListContractPromotion.ListName entered)
					"PriceListIsRequired"
			
				constraint (PriceListContractPromotion.Promotion entered)
					"PromotionIsRequired"				
				
		Update is an Update Action
			Action Rules
				if (IsPromotion
				or  IsContract)
					invoke UpdateFromPriceListContractPromotion OtherPriceListSalesClassUpdateDateRel
						invoked.PrmBeginDate = BeginDate
						invoked.PrmEndDate   = EndDate
					
					invoke UpdateFromPriceListContractPromotion PriceListItemWithPriceListRel
						invoked.PrmBeginDate = BeginDate
						invoked.PrmEndDate   = EndDate
				
				if (IsPromotion)
					for each PriceListSalesClassRel
		    			LocalMajorClass = each.PriceListSalesClass.MajorSalesClass
		    			LocalMinorClass = each.PriceListSalesClass.MinorSalesClass
						for each OtherPriceListSaleClassRel
							if (each.BeginDate >= BeginDate)
			           	 		constraint (each.BeginDate > EndDate)													
			           	 			"DateOverlapsPromotion<PriceListContractPromotion.Promotion>,SalesClass<each.PriceListSalesClass.MajorSalesClass><first PriceListSalesClassesRel.DerivedSalesClass><each.PriceListSalesClass.MinorSalesClass>"
			            	if (each.EndDate   >= BeginDate)
			            		constraint (each.EndDate   > EndDate)
			            			"DateOverlapsPromotion<PriceListContractPromotion.Promotion>,SalesClass<each.PriceListSalesClass.MajorSalesClass><first PriceListSalesClassesRel.DerivedSalesClass><each.PriceListSalesClass.MinorSalesClass>"
			            	if (each.BeginDate <  BeginDate)
			            		constraint (each.EndDate < EndDate)
									"DateOverlapsPromotion<PriceListContractPromotion.Promotion>,SalesClass<each.PriceListSalesClass.MajorSalesClass><first PriceListSalesClassesRel.DerivedSalesClass><each.PriceListSalesClass.MinorSalesClass>"	
					
					for each OtherPriceListItemRel
						if (each.BeginDate >= BeginDate)
		           	 		constraint (each.BeginDate > EndDate)
		           	 			"DateOverlapsPromotion<each.PriceListContractPromotion.Promotion>,Item<each.PriceListItem>"														
		            	if (each.EndDate   >= BeginDate)
		            		constraint (each.EndDate   > EndDate)
		            			"DateOverlapsPromotion<each.PriceListContractPromotion.Promotion>,Item<each.PriceListItem>"
		            	if (each.BeginDate <  BeginDate)
		            		constraint (each.EndDate < EndDate)
								"DateOverlapsPromotion<each.PriceListContractPromotion.Promotion>,Item<each.PriceListItem>"
	    		
				if (IsContract)			
					for each PriceListSalesClassForContractRel
		    			LocalMajorClass = each.PriceListSalesClass.MajorSalesClass
		    			LocalMinorClass = each.PriceListSalesClass.MinorSalesClass
						for each OtherPriceListSaleClassForContractRel
							if (each.BeginDate >= BeginDate)
			           	 		constraint (each.BeginDate > EndDate)													
			           	 			"DateOverlapsContract<PriceListContractPromotion.ListName>,SalesClass<each.PriceListSalesClass.MajorSalesClass><first PriceListSalesClassesRel.DerivedSalesClass><each.PriceListSalesClass.MinorSalesClass>" 
			            	if (each.EndDate   >= BeginDate)
			            		constraint (each.EndDate > EndDate)
			            			"DateOverlapsContract<PriceListContractPromotion.ListName>,SalesClass<each.PriceListSalesClass.MajorSalesClass><first PriceListSalesClassesRel.DerivedSalesClass><each.PriceListSalesClass.MinorSalesClass>"
			            	if (each.BeginDate <  BeginDate)
			            		constraint (each.EndDate < EndDate)
									"DateOverlapsContract<PriceListContractPromotion.ListName>,SalesClass<each.PriceListSalesClass.MajorSalesClass><first PriceListSalesClassesRel.DerivedSalesClass><each.PriceListSalesClass.MinorSalesClass>"
					
					for each PriceListItemWithPriceListRel
						if (each.BeginDate >= BeginDate)
		           	 		constraint (each.BeginDate > EndDate)
		           	 			"DateOverlapsContract<each.PriceListContractPromotion.ListName>,Item<each.PriceListItem>"			
		            	if (each.EndDate   >= BeginDate)
		            		constraint (each.EndDate > EndDate)
		            			"DateOverlapsContract<each.PriceListContractPromotion.ListName>,Item<each.PriceListItem>"
		            	if (each.BeginDate <  BeginDate)
		            		constraint (each.EndDate < EndDate)
	    						"DateOverlapsContract<each.PriceListContractPromotion.ListName>,Item<each.PriceListItem>"	
					
		Delete is a Delete Action
			Action Rules
				invoke Delete PriceListSalesClassRel
				invoke Delete PriceListSalesClassesRel						
