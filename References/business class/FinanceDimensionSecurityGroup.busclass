FinanceDimensionSecurityGroup is a BusinessClass
	owned by GeneralLedger
	
	prefix is FDSGP
	
	Ontology
		symbolic key is FinanceDimensionSecurityGroup		
	
	Patterns
	
	Persistent Fields
		Description
		FinanceDimensionStructure	is AlphaUpper 30
		RequiresRebuild				is Boolean
		MatrixSecurityGroup			is Boolean
				
	Local Fields
		LocalFinanceDimension1		is like FinanceDimension1
		LocalFinanceEnterpriseGroup is like FinanceEnterpriseGroup
		LocalDeleteCount			is Numeric 3
		LocalName                   is AlphaUpper up to 30
		LocalType                   is Numeric 2
		LocalKeyField				is like KeyField
		LocalContextProperty		is like ContextProperty
		LocalFinanceDimension       is AlphaUpper up to 26
		LocalEmployee		   		is an Employee
		LocalActor					is an Actor
		LocalAccountingEntityGroup  is a AccountingEntityGroup
		LocalDimensionGroupType 	is a DimensionGroupType
		LocalSecurityGroup			is like FinanceDimensionSecurityGroup
		NewMatrixSecurityGroup      is a FinanceDimensionSecurityGroup view
		NewAccountingEntityGroup    is a AccountingEntityGroup view
		
	Transient Fields
		AccountingEntityGroup
			derive value from DerivedAccountingEntityGroup
#ifdef module glif
		GeneralLedgerCompanyGroup
			derive value from DerivedGeneralLedgerCompanyGroup
#endif
#ifdef module cb
		CashCodeGroup
			derive value from DerivedCashCodeGroup
#endif
#ifdef module ap
		VendorClassGroup
			derive value from DerivedVendorClassGroup
#endif
		LedgerBasisGroup
            derive value from DerivedLedgerBasisGroup

	Derived Fields
		AccountingEntityList is a DerivedField
			type is Text
			if (DimensionGroupType.AccountingEntity)
				return AccountingEntityGroup.AccountingEntityList
		CompanyList is a DerivedField
			type is Text
			if (DimensionGroupType.Company)
				return GeneralLedgerCompanyGroup.CompanyList
#ifdef module cb
		CashCodeList is a DerivedField
			type is Text
			if (DimensionGroupType.CashCode)
				return CashCodeGroup.CashCodeList						
#endif				
		DerivedGroupKeyField		is a DerivedField
			type is Alpha 100
			if (DimensionGroupType.AccountingEntity)
				return "AccountingEntitySecurityGroup"
#ifdef module glif
			if (DimensionGroupType.Company)
				return "CompanySecurityGroup"
#endif
#ifdef module ap
			if (DimensionGroupType.VendorClass)
				return "VendorClassSecurityGroup"
#endif
#ifdef module cb
			if (DimensionGroupType.CashCode)
				return "CashCodeSecurityGroup"
#endif				
			if (DimensionGroupType.Ledger)
                return "LedgerBasisSecurityGroup"			
			if (DimensionGroupType.FinanceDimension1)
				return "FinanceDimension1SecurityGroup"	
			if (DimensionGroupType.FinanceDimension2)
				return "FinanceDimension2SecurityGroup"	
			if (DimensionGroupType.FinanceDimension3)
				return "FinanceDimension3SecurityGroup"							
			if (DimensionGroupType.FinanceDimension4)
				return "FinanceDimension4SecurityGroup"	
			if (DimensionGroupType.FinanceDimension5)
				return "FinanceDimension5SecurityGroup"	
			if (DimensionGroupType.FinanceDimension6)
				return "FinanceDimension6SecurityGroup"	
			if (DimensionGroupType.FinanceDimension7)
				return "FinanceDimension7SecurityGroup"	
			if (DimensionGroupType.FinanceDimension8)
				return "FinanceDimension8SecurityGroup"	
			if (DimensionGroupType.FinanceDimension9)
				return "FinanceDimension9SecurityGroup"	
			if (DimensionGroupType.FinanceDimension10)
				return "FinanceDimension10SecurityGroup"
			if (DimensionGroupType.Project)
				return "ProjectSecurityGroup"
			if (DimensionGroupType.ChartAccount)
				return "ChartAccountSecurityGroup"			

		DerivedLocalGroupKeyField		is a DerivedField
			type is Alpha 100
			if (LocalDimensionGroupType.AccountingEntity)
				return "AccountingEntitySecurityGroup"
#ifdef module glif
			if (LocalDimensionGroupType.Company)
				return "CompanySecurityGroup"
#endif
#ifdef module ap
			if (LocalDimensionGroupType.VendorClass)
				return "VendorClassSecurityGroup"
#endif
#ifdef module cb
			if (LocalDimensionGroupType.CashCode)
				return "CashCodeSecurityGroup"
#endif				
			if (LocalDimensionGroupType.Ledger)
                return "LedgerBasisSecurityGroup"			
			if (LocalDimensionGroupType.FinanceDimension1)
				return "FinanceDimension1SecurityGroup"	
			if (LocalDimensionGroupType.FinanceDimension2)
				return "FinanceDimension2SecurityGroup"	
			if (LocalDimensionGroupType.FinanceDimension3)
				return "FinanceDimension3SecurityGroup"							
			if (LocalDimensionGroupType.FinanceDimension4)
				return "FinanceDimension4SecurityGroup"	
			if (LocalDimensionGroupType.FinanceDimension5)
				return "FinanceDimension5SecurityGroup"	
			if (LocalDimensionGroupType.FinanceDimension6)
				return "FinanceDimension6SecurityGroup"	
			if (LocalDimensionGroupType.FinanceDimension7)
				return "FinanceDimension7SecurityGroup"	
			if (LocalDimensionGroupType.FinanceDimension8)
				return "FinanceDimension8SecurityGroup"	
			if (LocalDimensionGroupType.FinanceDimension9)
				return "FinanceDimension9SecurityGroup"	
			if (LocalDimensionGroupType.FinanceDimension10)
				return "FinanceDimension10SecurityGroup"
			if (LocalDimensionGroupType.Project)
				return "ProjectSecurityGroup"
			if (LocalDimensionGroupType.ChartAccount)
				return "ChartAccountSecurityGroup"		

		DerivedDimensionLabel is a DerivedField
			type is Alpha 60
			if (DimensionGroupType.AccountingEntity)
				return AccountingEntityLabel
#ifdef module glif				
			if (DimensionGroupType.Company)
				return CompanyLabel
			if (DimensionGroupType.CashCode)
				return CashCodeLabel
#endif
#ifdef module ap
			if (DimensionGroupType.VendorClass)
				return VendorClassLabel
#endif				
			if (DimensionGroupType.FinanceDimension1)
				return FinanceDimension1Label	
			if (DimensionGroupType.FinanceDimension2)
				return FinanceDimension2Label	
			if (DimensionGroupType.FinanceDimension3)
				return FinanceDimension3Label							
			if (DimensionGroupType.FinanceDimension4)
				return FinanceDimension4Label	
			if (DimensionGroupType.FinanceDimension5)
				return FinanceDimension5Label	
			if (DimensionGroupType.FinanceDimension6)
				return FinanceDimension6Label	
			if (DimensionGroupType.FinanceDimension7)
				return FinanceDimension7Label	
			if (DimensionGroupType.FinanceDimension8)
				return FinanceDimension8Label	
			if (DimensionGroupType.FinanceDimension9)
				return FinanceDimension9Label	
			if (DimensionGroupType.FinanceDimension10)
				return FinanceDimension10Label
			if (DimensionGroupType.Project)
				return ProjectLabel
			if (DimensionGroupType.ChartAccount)
				return ChartAccountLabel

		StructureLabel is a LabelField
			"Structure"
			
		ChartLabel is a LabelField
			"Chart"
			
		DerivedStructureLabel is a DerivedField
			type is Alpha 30
			if (DimensionGroupType.ChartAccount)
				return ChartLabel
			else
				return StructureLabel
				
		FinanceDimension1Label is a LabelField
			"FinanceDimension1"
			
		FinanceDimension2Label is a LabelField
			"FinanceDimension2"
			
		FinanceDimension3Label is a LabelField
			"FinanceDimension3"

		FinanceDimension4Label is a LabelField
			"FinanceDimension4"
			
		FinanceDimension5Label is a LabelField
			"FinanceDimension5"
			
		FinanceDimension6Label is a LabelField
			"FinanceDimension6"
			
		FinanceDimension7Label is a LabelField
			"FinanceDimension7"
			
		FinanceDimension8Label is a LabelField
			"FinanceDimension8"
			
		FinanceDimension9Label is a LabelField
			"FinanceDimension9"

		FinanceDimension10Label is a LabelField
			"FinanceDimension10"

		ProjectLabel is a LabelField
			"Project"

		ChartAccountLabel is a LabelField
			"ChartAccount"
									
		AccountingEntityLabel is a LabelField
			"AccountingEntity"
#ifdef module glif			
		CompanyLabel is a LabelField
			"Company"
		CashCodeLabel is a LabelField
			"CashCode"
#endif											
#ifdef module ap
		VendorClassLabel is a LabelField
			"VendorClass"
#endif
		DerivedAccountingEntityGroup is a DerivedField
			type is like AccountingEntityGroup
			if (DimensionGroupType.AccountingEntity)
				return FinanceDimensionStructure
#ifdef module glif				
		DerivedGeneralLedgerCompanyGroup is a DerivedField
			type is like GeneralLedgerCompanyGroup
			if (DimensionGroupType.Company)
				return FinanceDimensionStructure
#endif
#ifdef module cb
		DerivedCashCodeGroup is a DerivedField
			type is like CashCodeGroup
			if (DimensionGroupType.CashCode)
				return FinanceDimensionStructure		
#endif
#ifdef module ap
		DerivedVendorClassGroup is a DerivedField
			type is like VendorClassGroup
			if (DimensionGroupType.VendorClass)
				return FinanceDimensionStructure		
#endif
		DerivedLedgerBasisGroup is a DerivedField
            type is like LedgerBasisGroup
            if (DimensionGroupType.Ledger)
                return FinanceDimensionStructure
		DerivedStructureDescription is a DerivedField
			type is like Description
			if (DimensionGroupType.AccountingEntity)
				return AccountingEntityGroup.Description
#ifdef module glif
			if (DimensionGroupType.Company)
				return GeneralLedgerCompanyGroup.Description
#endif
#ifdef module cb
			if (DimensionGroupType.CashCode)
				return CashCodeGroup.Description
#endif
#ifdef module ap
			if (DimensionGroupType.VendorClass)
				return VendorClassGroup.Description
#endif
			if (DimensionGroupType.Ledger)
                return LedgerBasisGroup.Description

		DerivedDescription is a StringField
			type is like Description
			restricted
			"Matrix Security Group for Actor: " 
			LocalActor

		DerivedEntityDescription is a StringField
			type is like Description
			restricted
			"Entity Group for Actor: " 
			LocalActor

		DerivedName is a StringField
			type is like Description
			restricted
			LocalActor
			"1" 

	Conditions
		MemberDimension
			when (DimensionGroupType.FinanceDimension1
			or    DimensionGroupType.FinanceDimension2
			or    DimensionGroupType.FinanceDimension3
			or    DimensionGroupType.FinanceDimension4
			or    DimensionGroupType.FinanceDimension5
			or    DimensionGroupType.FinanceDimension6
			or    DimensionGroupType.FinanceDimension7
			or    DimensionGroupType.FinanceDimension8
			or    DimensionGroupType.FinanceDimension9
			or    DimensionGroupType.FinanceDimension10
			or    DimensionGroupType.Project
			or    DimensionGroupType.ChartAccount)
		
		GroupExists
			restricted
			when (FinanceDimensionSecurityGroup exists)

		MemberGroupRemquiringRebuild
			when (RequiresRebuild
			and   MemberDimension)

		NoActorsAssigned
            restricted
            when (!ActorContextRel exists)

		MatrixSecurityEnabled
            restricted
            when (FinanceEnterpriseGroup.ResponsibilityMatrixSecurity)
									
	Relations
		ContextPropertyRel
			one-to-one relation to ContextProperty
			Field Mapping uses ByKeyField
				related.KeyField = DerivedGroupKeyField
				related.DataArea = parentcontext.dataarea
				
		ActorContextRel
			one-to-many relation to ActorContext
			Field Mapping uses symbolic key
			Instance Selection
				where (related.ContextProperty = ContextPropertyRel.ContextProperty
				and    related.Value 		   = FinanceDimensionSecurityGroup)
				
		OtherGroupsOfThisTypeRel
			one-to-many relation to FinanceDimensionSecurityGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.DimensionGroupType	   = DimensionGroupType
			Instance Selection
				where (related.UniqueID 	   != UniqueID)

		SameSecurityGroupRel
			one-to-one relation to FinanceDimensionSecurityGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 			= FinanceEnterpriseGroup
				related.DimensionGroupType	   			= LocalType
				related.FinanceDimensionSecurityGroup	= LocalName			 
		
		SameAccountingUnitGroupRel
			one-to-one relation to AccountingUnitSecurityGroup
			Field Mapping uses symbolic key 
				related.FinanceEnterpriseGroup 			= FinanceEnterpriseGroup
				related.AccountingUnitSecurityGroup		= LocalName					

		SameEntityGroupRel
			one-to-one relation to AccountingEntityGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 			= FinanceEnterpriseGroup
				related.AccountingEntityGroup           = LocalName				
	
		AccountingEntityGroupMemberRel
			one-to-one relation to AccountingEntityGroupMember
			Field Mapping uses ByMember
				related.AccountingEntity        	    = LocalFinanceDimension
				related.FinanceEnterpriseGroup 			= LocalFinanceEnterpriseGroup
				related.AccountingEntityGroup           = LocalAccountingEntityGroup

		LocalContextPropertyRel
			one-to-one relation to ContextProperty
			Field Mapping uses ByKeyField
				related.KeyField = DerivedLocalGroupKeyField
				related.DataArea = parentcontext.dataarea

		EmployeeActorContextRel
			one-to-one relation to ActorContext
			Field Mapping uses SymbolicKeyByContextProperty
				related.ContextProperty 				= LocalContextPropertyRel.ContextProperty
				related.Actor		    				= LocalActor

		FinanceDimensionSecurityGroupRel
			one-to-one relation to FinanceDimensionSecurityGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		 	= LocalFinanceEnterpriseGroup
				related.DimensionGroupType	  		    = LocalDimensionGroupType
				related.FinanceDimensionSecurityGroup   = LocalSecurityGroup

		FinanceDimensionSecurityGroupDetailRel
			one-to-one relation to FinanceDimensionSecurityGroupDetail
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		  		= LocalFinanceEnterpriseGroup
				related.DimensionGroupType			 		= LocalDimensionGroupType
				related.FinanceDimensionSecurityGroup   	= LocalSecurityGroup
				related.FinanceDimensionSecurityGroupDetail = LocalFinanceDimension

#ifdef module glif		
		SameCompanyGroupRel
			one-to-one relation to GeneralLedgerCompanyGroup
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup 		= LocalName
#endif		

#ifdef module cb
		SameCashCodeGroupRel
			one-to-one relation to CashCodeGroup
			Field Mapping uses symbolic key
				related.CashManagementGroup             = FinanceEnterpriseGroup
				related.CashCodeGroup                   = LocalName
#endif 
#ifdef module ap
		SameVendorClassGroupRel
			one-to-one relation to VendorClassGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.VendorClassGroup                 	= LocalName
#endif 
			
		GroupSecurityDetailRel
			one-to-one relation to FinanceDimensionSecurityGroupDetail
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup              = FinanceEnterpriseGroup
				related.DimensionGroupType					= DimensionGroupType
				related.FinanceDimensionSecurityGroup       = FinanceDimensionSecurityGroup
				related.FinanceDimensionSecurityGroupDetail	= LocalFinanceDimension1
						
		EnterpriseZoneFinanceDimension1Rel
			one-to-one relation to FinanceDimension1Hierarchy
			Field Mapping uses ByEnterpriseZoneDimensionInStructure
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension1Structure	= FinanceEnterpriseGroup.EnterpriseDim1Structure

		AccountingUnitSecurityGroupsRequiringRebuildRel
			one-to-many relation to AccountingUnitSecurityGroup
			Field Mapping uses GroupsRequiringRebuild
				related.FinanceEnterpriseGroup = LocalFinanceEnterpriseGroup
#ifdef module po				
		FactSheetRel
			one-to-one relation to SampleDocumentTemplate
			Field Mapping uses symbolic key
				related.SampleDocumentTemplate = "DIMENSIONSECURITY_ST"
#endif
	Sets
		ByStructure
			Sort Order
				FinanceEnterpriseGroup
				DimensionGroupType
				FinanceDimensionStructure
				FinanceDimensionSecurityGroup
		
		GroupsRequiringRebuild
			Sort Order
				FinanceEnterpriseGroup
				DimensionGroupType
				FinanceDimensionSecurityGroup
			Instance Selection
				where (MemberGroupRemquiringRebuild)
																			
	Field Rules
		Description
			required
		
		FinanceDimensionStructure
			if (DimensionGroupType.AccountingEntity)
				FinanceDimensionStructure = AccountingEntityGroup
			else
#ifdef module glif			
			if (DimensionGroupType.Company)
				FinanceDimensionStructure = GeneralLedgerCompanyGroup
			else
#endif
#ifdef module cb
			if (DimensionGroupType.CashCode)
				FinanceDimensionStructure = CashCodeGroup
			else
#endif
#ifdef module ap
			if (DimensionGroupType.VendorClass)
				FinanceDimensionStructure = VendorClassGroup
			else
#endif
			if (DimensionGroupType.Ledger)
                FinanceDimensionStructure = LedgerBasisGroup
            else
			if (!MemberDimension)
				required

	Rule Blocks
		CreateEnterpriseZoneFinanceDimension1

			if (DimensionGroupType.FinanceDimension1)
				LocalFinanceDimension1 = EnterpriseZoneFinanceDimension1Rel.FinanceDimension1
				if (LocalFinanceDimension1 entered)
					if (!GroupSecurityDetailRel exists)
						invoke Create FinanceDimensionSecurityGroupDetail
							invoked.FinanceEnterpriseGroup 		  		= FinanceEnterpriseGroup
							invoked.DimensionGroupType			 		= DimensionGroupType
							invoked.FinanceDimensionSecurityGroup 		= FinanceDimensionSecurityGroup
							invoked.FinanceDimensionSecurityGroupDetail	= LocalFinanceDimension1			

		DeleteDetails
			for each FinanceDimensionSecurityGroupDetail set
				invoke Delete each
				LocalDeleteCount += 1
				if (LocalDeleteCount = 100)
					commit transaction
					LocalDeleteCount = 0	

	Actions
		Create is an Action
			Exit Rules
				include CreateEnterpriseZoneFinanceDimension1
							




























































































































































































































































































































































































































		
		Update is an Action
		
		Delete is an Action
			restricted
			
		DeleteSecurityGroup is an Instance Action
			confirmation required
			completion message is "SecurityGroupWillBeDeleted"
				
			Entrance Rules
				if (MatrixSecurityGroup)
					confirmation required
						"SecurityGroupWasCreatedFromResponsibilityMatrix.AreYouSureYouWantToDeleteThisRecord?"
				constraint (!ActorContextRel exists)
					"CannotDelete;ActorsAreAssignedToThisGroup"
			Action Rules
				invoke DeleteFinal FinanceDimensionSecurityGroupMember set
				if (FinanceDimensionSecurityGroupDetail set exists)
					invoke DeleteDetailsForGroup FinanceDimensionSecurityGroupDetail in background
						invoked.PrmFinanceEnterpriseGroup 		 = FinanceEnterpriseGroup
						invoked.PrmDimensionGroupType	  		 = DimensionGroupType
						invoked.PrmFinanceDimensionSecurityGroup = FinanceDimensionSecurityGroup				
				else
					invoke Delete
					
		CopyMembers is an Instance Action
			valid when (MemberDimension)
			Parameters
				CopyToGroup		is an FinanceDimensionSecurityGroup
				
			Parameter Rules
				CopyToGroup
					required
					constraint (CopyToGroup != FinanceDimensionSecurityGroup)
						"CannotCopyToSelf"
			
			Action Rules
				for each FinanceDimensionSecurityGroupMember set
					invoke Create FinanceDimensionSecurityGroupMember
						resume on error
						fill in fields from each
							except invoked.FinanceDimensionSecurityGroup
						invoked.FinanceDimensionSecurityGroup = CopyToGroup
					commit transaction
									
		RebuildGroups is a Set Action
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
					
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
			
			Local Fields
				LocalAsyncId			is an AsyncActionRequest
						
			Sort Order
				FinanceEnterpriseGroup
				DimensionGroupType
				FinanceDimensionSecurityGroup
			
			Instance Selection
				where (MemberGroupRemquiringRebuild)
			
			Action Rules
				Set Rules
					Exit Rules
						LocalFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
						if (AccountingUnitSecurityGroupsRequiringRebuildRel exists)
							invoke RebuildGroups AccountingUnitSecurityGroup
								invoked.PrmFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
		
				Instance Rules
					invoke DeleteDetailsForMatrixGroup FinanceDimensionSecurityGroupDetail in background
						assign async action request id to LocalAsyncId
						invoked.PrmFinanceEnterpriseGroup 				= FinanceEnterpriseGroup
						invoked.PrmDimensionGroupType	  				= DimensionGroupType
						invoked.PrmFinanceDimensionSecurityGroup		= FinanceDimensionSecurityGroup
						invoked.PrmKeepFinanceDimensionSecurityGroup	= true

					invoke CreateEnterpriseZoneFinanceDimension1 in background
						run after LocalAsyncId
						assign async action request id to LocalAsyncId

					for each FinanceDimensionSecurityGroupMember set
						invoke RebuildMember each in background
							run after LocalAsyncId
						
					RequiresRebuild = false													

		BuildMatrixSecurityGroup is an Instance Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
				PrmDimensionGroupType       is a DimensionGroupType
				PrmEmployee				    is an Employee
				PrmFinanceDimension			is AlphaUpper up to 26
			Action Rules
				LocalFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				LocalFinanceDimension 		= PrmFinanceDimension
				LocalDimensionGroupType     = PrmDimensionGroupType
				LocalEmployee				= PrmEmployee
				LocalActor					= LocalEmployee.agent(Actor).Actor
				if (EmployeeActorContextRel exists
				and LocalActor entered)
					LocalSecurityGroup = EmployeeActorContextRel.Value
					LocalName = LocalActor
					LocalType = LocalDimensionGroupType
					if (LocalDimensionGroupType = 1) 	
						LocalAccountingEntityGroup = FinanceDimensionSecurityGroupRel.AccountingEntityGroup
					if (AccountingEntityGroupMemberRel !exists
					and LocalDimensionGroupType = 1) 	
						if (!FinanceDimensionSecurityGroupRel.MatrixSecurityGroup)
							invoke Create AccountingEntityGroup
								assign result to NewAccountingEntityGroup
								if (SameEntityGroupRel exists)
									invoked.AccountingEntityGroup = DerivedName
								else
									invoked.AccountingEntityGroup = LocalActor
								invoked.Description 		      = DerivedEntityDescription
							invoke CopyMembers LocalAccountingEntityGroup
								invoked.CopyToGroup	= NewAccountingEntityGroup.AccountingEntityGroup
							invoke Create AccountingEntityGroupMember
								invoked.FinanceEnterpriseGroup  = NewAccountingEntityGroup.FinanceEnterpriseGroup
								invoked.AccountingEntityGroup   = NewAccountingEntityGroup.AccountingEntityGroup
								invoked.AccountingEntity        = LocalFinanceDimension
								invoked.MatrixEntityGroupMember = true
							invoke Create FinanceDimensionSecurityGroup
								assign result to NewMatrixSecurityGroup
								if (SameSecurityGroupRel exists)
									invoked.FinanceDimensionSecurityGroup = DerivedName
								else
									invoked.FinanceDimensionSecurityGroup = LocalActor
								invoked.DimensionGroupType		  = LocalDimensionGroupType
								invoked.Description				  = DerivedDescription
								invoked.FinanceDimensionStructure = NewAccountingEntityGroup.AccountingEntityGroup
								invoked.MatrixSecurityGroup		  = true
							invoke Delete EmployeeActorContextRel
							invoke Create ActorContext
								invoked.ContextProperty = NewMatrixSecurityGroup.FinanceDimensionSecurityGroup.ContextPropertyRel.ContextProperty
								invoked.Actor			= LocalActor
								invoked.Value			= NewMatrixSecurityGroup.FinanceDimensionSecurityGroup
						else
							invoke Create AccountingEntityGroupMember
								invoked.FinanceEnterpriseGroup  = LocalAccountingEntityGroup.FinanceEnterpriseGroup
								invoked.AccountingEntityGroup   = LocalAccountingEntityGroup
								invoked.AccountingEntity        = LocalFinanceDimension
								invoked.MatrixEntityGroupMember = true
					else
					if (FinanceDimensionSecurityGroupDetailRel !exists
					and FinanceDimensionSecurityGroupRel.MemberDimension)
						if (!FinanceDimensionSecurityGroupRel.MatrixSecurityGroup)
							invoke Create FinanceDimensionSecurityGroup
								assign result to NewMatrixSecurityGroup
								if (SameSecurityGroupRel exists)
									invoked.FinanceDimensionSecurityGroup = DerivedName
								else
									invoked.FinanceDimensionSecurityGroup = LocalActor
								invoked.DimensionGroupType	= LocalDimensionGroupType
								invoked.Description			= DerivedDescription
								invoked.MatrixSecurityGroup = true
							invoke CopyMembers FinanceDimensionSecurityGroupRel
								invoked.CopyToGroup	= NewMatrixSecurityGroup.FinanceDimensionSecurityGroup
							if (LocalDimensionGroupType = 3) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = NewMatrixSecurityGroup.FinanceDimensionSecurityGroup
									invoked.FinanceDimension1			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 4) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = NewMatrixSecurityGroup.FinanceDimensionSecurityGroup
									invoked.FinanceDimension2			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 5) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = NewMatrixSecurityGroup.FinanceDimensionSecurityGroup
									invoked.FinanceDimension3			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 6) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = NewMatrixSecurityGroup.FinanceDimensionSecurityGroup
									invoked.FinanceDimension4			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 7) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = NewMatrixSecurityGroup.FinanceDimensionSecurityGroup
									invoked.FinanceDimension5			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 8) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = NewMatrixSecurityGroup.FinanceDimensionSecurityGroup
									invoked.FinanceDimension6			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 9) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = NewMatrixSecurityGroup.FinanceDimensionSecurityGroup
									invoked.FinanceDimension7			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 10) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = NewMatrixSecurityGroup.FinanceDimensionSecurityGroup
									invoked.FinanceDimension8			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 11) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = NewMatrixSecurityGroup.FinanceDimensionSecurityGroup
									invoked.FinanceDimension9			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 12) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = NewMatrixSecurityGroup.FinanceDimensionSecurityGroup
									invoked.FinanceDimension10			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 13) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = NewMatrixSecurityGroup.FinanceDimensionSecurityGroup
									invoked.Project						  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 14) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = NewMatrixSecurityGroup.FinanceDimensionSecurityGroup
									invoked.GeneralLedgerChartAccount	  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							invoke Delete EmployeeActorContextRel
							invoke Create ActorContext
								invoked.ContextProperty = NewMatrixSecurityGroup.FinanceDimensionSecurityGroup.ContextPropertyRel.ContextProperty
								invoked.Actor			= LocalActor
								invoked.Value			= NewMatrixSecurityGroup.FinanceDimensionSecurityGroup
						else
							if (LocalDimensionGroupType = 3) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = LocalSecurityGroup
									invoked.FinanceDimension1			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 4) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = LocalSecurityGroup
									invoked.FinanceDimension2			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 5) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = LocalSecurityGroup
									invoked.FinanceDimension3			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 6) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = LocalSecurityGroup
									invoked.FinanceDimension4			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 7) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = LocalSecurityGroup
									invoked.FinanceDimension5			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 8) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = LocalSecurityGroup
									invoked.FinanceDimension6			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 9) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = LocalSecurityGroup
									invoked.FinanceDimension7			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 10) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = LocalSecurityGroup
									invoked.FinanceDimension8			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 11) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = LocalSecurityGroup
									invoked.FinanceDimension9			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 12) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = LocalSecurityGroup
									invoked.FinanceDimension10			  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 13) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = LocalSecurityGroup
									invoked.Project						  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true
							else
							if (LocalDimensionGroupType = 14) 	
								invoke Create FinanceDimensionSecurityGroupDetail
									invoked.FinanceEnterpriseGroup 		  = LocalFinanceEnterpriseGroup
									invoked.DimensionGroupType			  = LocalDimensionGroupType
									invoked.FinanceDimensionSecurityGroup = LocalSecurityGroup
									invoked.GeneralLedgerChartAccount	  = LocalFinanceDimension
									invoked.MatrixSecurityDetail		  = true

		CreateEnterpriseZoneFinanceDimension1 is an Instance Action
			restricted
			Action Rules
				include CreateEnterpriseZoneFinanceDimension1

		SetRequiresRebuild is an Instance Action
			restricted
			Action Rules
				if (!RequiresRebuild)
					RequiresRebuild = true
										
		Rebuild is an Instance Action 
			restricted
			
			Action Rules
				include DeleteDetails
				include CreateEnterpriseZoneFinanceDimension1
				
			 	for each FinanceDimensionSecurityGroupMember set
			 		invoke RebuildMember each
			 		commit transaction
			 		
				RequiresRebuild = false													

		DeleteDetails is an Instance Action
			restricted
				
			Action Rules

