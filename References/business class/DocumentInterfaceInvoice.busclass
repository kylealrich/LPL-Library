DocumentInterfaceInvoice is a BusinessClass
    owned by ap
    prefix is DII

 	Ontology
		symbolic key is DocumentInterfaceInvoice

    Patterns
    	implements InlineUserFields
			size is 1000
        disable AuditIndex
		disable Auditing 
       	disable EffectiveDated
		implements CreateStamp	
		implements UpdateStamp	

    Persistent Fields
    	Company					is like Company
    	VendorGroup				is like VendorGroup
		Vendor					is like Vendor
		VendorName				is like VendorName 
			holds pii
		Invoice
        InvoiceType				is AlphaUpper size 1	

		PurchaseOrder			is like PurchaseOrder
		InterfacedPurchaseOrder		  is like PurchaseOrderImport
		InterfacedPOCode			  is like POCode
		ServiceContract         is like Contract
		OriginalInvoice			is like PayablesInvoice
		CreditMemoReferenceInvoice   is like Invoice
		ExternalPurchaseOrder   is like PurchaseOrderImport         
		InvoiceDate				is Date
		DueDate					is Date
		DiscountDate			is Date
		InvoiceAmount			is an InternationalAmount
		AllowableAmount			is an InternationalAmount
		TaxableAmount           is an InternationalAmount
		TaxAmount               is an InternationalAmount
		InvoiceCurrency			is like FromCurrency
		ProcessLevel			is like PayablesProcessLevel
		APClerk					is like FinanceResource
		MatchReferenceNumber	is like MatchReferenceNumber
		ReturnNumber			is like VendorReturn
		Description				is like Description
		ScanDate				is TimeStamp
		RemitToCode				is like VendorLocation
		ReasonCode				is like ProcurementReasonCode
		RoutingCategory			is like InvoiceRoutingCategory
		WebAddress				is Alpha size up to 500
		InvoiceURL				is Alpha size up to 1000
    	Attachment
    	SeparatePayment         is a BooleanOverride	
    	Enclosure               is a BooleanOverride	
    	TermsCode				is like TermsCode		
    		default label is "PaymentTerms"
		MatchPrepayment			is Boolean
		MatchPrepaymentMethod
        CreationSource			is Numeric 1			
            States
                CaptureDocumentBOD	value is 1
        ExternalCompanyName		is like Name	 
        	holds pii
		ExternalCurrency		is Alpha size up to 40	
		ExternalTerms			is Alpha size up to 40	
		ExternalVendorID		is Alpha size up to 40	

		ExternalReasonCode		is Numeric 8	
		ExternalReason			is Alpha size up to 100	//Error message. For example: "PO not found for Vendor"
		DistributionDate		is Date
		PaymentCode				is like BankTransactionCode
		AlphaAttribute1			is Alpha size up to 100

		SystemAssignedInvoice   is like PayablesInvoice
		InterfaceRunID			is like PayablesInvoiceInterfaceResult

		TaxCode											
		ProductTaxCategory								
		LineTax					is Boolean				
			default label is "LinkTaxOnDistributions"
 		CreateDetails					is Numeric 1
 			default label is "CreateDetails"
 			States
 				FromPurchaseOrder				value is 2
 				FromReceipt						value is 3
				FromReceiptThenFromPO			value is 4
		CreateOneTimeVendor				is Boolean					
		OneTimeVendorName				is a VendorName 
			holds pii
			default label is "VendorName"
		OneTimeVendorSearchName			is a VendorName 
			holds pii
			default label is "SearchName"
		OneTimeLegalName				is a VendorName 
			holds pii
			default label is "LegalName"
		OneTimeVendorAddress			is a PostalAddressV2	
			holds pii
			default label is "VendorAddress"
		OneTimeTaxID					is a TaxID 
			holds pii
			default label is "TaxIdentificationNumber"
		OneTimeIncomeCode				is like PayablesIncomeCode	
			default label is "IncomeCode"
		OneTimeVATRegistrationCountry	is a Country				
			default label is "V\A\TRegistrationCountry/\Jurisdiction"
		OneTimeVATRegistrationNumber	is a VATRegistrationNumber	
			default label is "V\A\TRegistrationNumber"
		OneTimeCarrier					is Boolean					
			default label is "Carrier"
		CreationInProcess				is Boolean
		CertificationNumber							
		CertificationDate				is Date		
		HoldCode                        is like PayablesHoldCode	
			classic name is HLD-CODE
		Location				is like InventoryLocation
		
	Transient Fields
		LocalDocumentURL		is Alpha size up to 2000
		LocalDocumentBytes		is BinaryDocument
		LocalDocumentType		is MimeType
		LocalMimeType			is MimeType
		
	Local Fields
		NewPayablesInvoice		is a PayablesInvoice view
		OneTimeVendor			is a Vendor view					



		ErrorMessage			is Alpha 250
		ErrorOccurred			is Boolean

		InstanceResultView		is a PayablesInvoiceInterfaceResult view	
		LocalResultID			is like PayablesInvoiceInterfaceResult
		MHCUser					is Alpha size up to 100	
		MHCDocID				is Alpha size up to 100	
		MHCKey					is Alpha size up to 100	
		LocalJSONResponse		is JSONObject	
		LocalPayablesCompany	is like Company			
		LocalTermsCode			is like TermsCode		
		LocalCurrency			is like Currency		
		LocalGotIDMDocumentURL	is Boolean				
		IDMItem											
        Diff 					is Numeric size 16
		LocalCounter			is Numeric size 2		
		LocalVendor				is like Vendor			
		LocalDefaultVendor		is like Vendor			
		IDMAttributes									
		LocalIDMUniqueId		is like IDMPID			
		LocalInterfaceAnalysis	is like InterfaceAnalysis
		LocalFinanceEnterpriseGroup     is like FinanceEnterpriseGroup
		LocalCompany			is like Company
		Skip					is Boolean
		NextSentence			is Boolean
		WebServiceError 		is Boolean
		WebServiceErrorMessage 	is Text
		TextErrorMessage		is Text
		MyHTTPInfo 				is a HTTPInfo
		FaultCode				is Alpha 30	
		ExceptionType			is Alpha 30	
		RootCause				is Alpha 60	
		FaultString				is Alpha 60	
		HttpStatusCode 			is Numeric 3	
		IDMConnected			is Boolean

	Context Fields
		FinanceResource

	Rule Blocks
		GetDocumentURL
			if (PayablesCompanyRel.VendorGroup.UsingDocMgmtSystem
			and PayablesCompanyRel.VendorGroup.DocMgmtPartner.MHCSoftware)
				if (MHCOAuthExists)	
					MHCKey				= PayablesCompanyRel.VendorGroup.DocMgmtSystemKey	//"password1"
					MHCUser 			= "Infor: " + actor	//"admin"
					MHCDocID			= DocumentInterfaceInvoice
					invoke GetDocumentURL MHCDocumentServiceMT
						invoked.JSONRequest = MHCGetDocumentJSON
						LocalJSONResponse 	= result.JSONResponse
					LocalDocumentURL	= LocalJSONResponse select "$.DocumentURL"
				else
					invoke GetDocumentURL MHCDocumentService
						invoked.DocumentID							= DocumentInterfaceInvoice
	  					invoked.Key									= PayablesCompanyRel.VendorGroup.DocMgmtSystemKey
	  					invoked.User								= "Infor: " + actor
						LocalDocumentURL							= result.GetDocumentURLResponse.DocumentURL
			else
			if (PayablesCompanyRel.VendorGroup.UsingDocMgmtSystem
			and PayablesCompanyRel.VendorGroup.DocMgmtPartner.HylandSoftware)
				if (HylandOAuthExists)	
					display "InvokeHylandOAuth"
					invoke GetDocumentURL HylandGetDocumentUrlOAuth
						resume on error
							WebServiceError = true
							WebServiceErrorMessage = error message	
						invoked.JSONRequest = HylandGetUrlJSON
						LocalJSONResponse 	= result.JSONResponse
						MyHTTPInfo			= result.HTTPResult

					if (!MyHTTPInfo.Failed and LocalJSONResponse entered)
						LocalDocumentURL	= LocalJSONResponse select "$.documentUrl"




					
					display "HTTPFail<MyHTTPInfo.Failed>WebServErr<WebServiceError>"
					if (MyHTTPInfo.Failed
					or  WebServiceError)
						TextErrorMessage		= "The Web Service to retrieve the document URL failed.  Use 'Update URL' to try again."
						TextErrorMessage		+= VendorGroupRel.NewLine 
						TextErrorMessage		+= "Get URL Web Service Error:" + WebServiceErrorMessage
						TextErrorMessage		+= VendorGroupRel.NewLine 
						TextErrorMessage		+= "Status: " + MyHTTPInfo.StatusCode
						TextErrorMessage		+= VendorGroupRel.NewLine 
						TextErrorMessage		+= "Failed: " + MyHTTPInfo.Failed
						TextErrorMessage		+= VendorGroupRel.NewLine 
						TextErrorMessage		+= "Url: " + MyHTTPInfo.Url
						TextErrorMessage		+= VendorGroupRel.NewLine 
						TextErrorMessage		+= "Request: " + MyHTTPInfo.RequestBody
						TextErrorMessage		+= VendorGroupRel.NewLine 
						TextErrorMessage		+= "Response: " + MyHTTPInfo.ResponseBody
						
						invoke Create DocumentInterfaceError
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.DocumentInterfaceInvoice 	= DocumentInterfaceInvoice
							invoked.ErrorMessage				= TextErrorMessage
				else
					invoke InputOutputURL HylandDocumentSecureService
						invoked.DocumentData.DocumentHandle			= DocumentInterfaceInvoice
						LocalDocumentURL							= result.InputOutputURLResponse.GetDocumentURLResponse.GetDocumentURLResult
			else
			if (PayablesCompanyRel.VendorGroup.UsingDocMgmtSystem
			and PayablesCompanyRel.VendorGroup.DocMgmtPartner.AscendSoftware)
				invoke GetDocumentURL AscendDocumentService
					invoked.DocumentHandle						= DocumentInterfaceInvoice
					LocalDocumentURL							= result.GetDocumentURLResponse.GetDocumentURLResult.DocumentURL
			else
			if (PayablesCompanyRel.VendorGroup.UsingDocMgmtSystem
			and PayablesCompanyRel.VendorGroup.DocMgmtPartner.PerceptiveSoftware)
				invoke GetDocumentUrl PerceptiveDocumentService
					invoked.DocId								= DocumentInterfaceInvoice
					LocalDocumentURL							= result.DocumentInfo.DocumentURL
			
		GetDocumentBytes
			if (PayablesCompanyRel.VendorGroup.UsingDocMgmtSystem
			and PayablesCompanyRel.VendorGroup.DocMgmtPartner.MHCSoftware)
				if (MHCOAuthExists)	
					MHCKey				= PayablesCompanyRel.VendorGroup.DocMgmtSystemKey
					MHCUser				= "Infor: " + actor
					MHCDocID			= DocumentInterfaceInvoice
					invoke GetDocumentBytes MHCDocumentServiceMT
						invoked.JSONRequest = MHCGetDocumentJSON
						LocalJSONResponse 	= result.JSONResponse
					LocalDocumentBytes	= LocalJSONResponse select "$.DocumentImage"
					LocalDocumentType 	= LocalJSONResponse select "$.DocumentImageExtension"
					LocalMimeType		= LocalJSONResponse select "$.DocumentImageMIMEType"
				else
					invoke GetDocumentBytes MHCDocumentService
						invoked.DocID								= DocumentInterfaceInvoice
						invoked.Key									= PayablesCompanyRel.VendorGroup.DocMgmtSystemKey
						invoked.User								= "Infor: " + actor
						LocalDocumentBytes							= result.GetDocumentBytesResponse.DocumentImage
						LocalDocumentType							= result.GetDocumentBytesResponse.DocumentImageExtension
						LocalMimeType								= result.GetDocumentBytesResponse.DocumentImageMIMEType
			else
			if (PayablesCompanyRel.VendorGroup.UsingDocMgmtSystem
			and PayablesCompanyRel.VendorGroup.DocMgmtPartner.HylandSoftware)
				if (HylandOAuthExists)	
					invoke GetDocumentImage HylandGetDocumentImageOAuth
						resume on error
							WebServiceError = true
							WebServiceErrorMessage = error message	
						invoked.JSONRequest = HylandGetDocumentJSON
						LocalJSONResponse 	= result.JSONResponse
						MyHTTPInfo			= result.HTTPResult
						
					if (!MyHTTPInfo.Failed and LocalJSONResponse entered)
						LocalDocumentBytes	= LocalJSONResponse select "$.base64FileStream"
						LocalDocumentType 	= LocalJSONResponse select "$.extension"
						LocalMimeType		= LocalJSONResponse select "$.extension"
						




					
					display "HTTPFail<MyHTTPInfo.Failed>WebServErr<WebServiceError>"
					if (MyHTTPInfo.Failed
					or  WebServiceError)
						TextErrorMessage		= "The Web Service to retrieve the document image failed.  Use 'Update Document' to try again."
						TextErrorMessage		+= VendorGroupRel.NewLine 
						TextErrorMessage		+= "Web Service Error Message:" + WebServiceErrorMessage
						TextErrorMessage		+= VendorGroupRel.NewLine 
						TextErrorMessage		+= "Status: " + MyHTTPInfo.StatusCode
						TextErrorMessage		+= VendorGroupRel.NewLine 
						TextErrorMessage		+= "Failed: " + MyHTTPInfo.Failed
						TextErrorMessage		+= VendorGroupRel.NewLine 
						TextErrorMessage		+= "Url: " + MyHTTPInfo.Url
						TextErrorMessage		+= VendorGroupRel.NewLine 
						TextErrorMessage		+= "Request: " + MyHTTPInfo.RequestBody
						TextErrorMessage		+= VendorGroupRel.NewLine 
						TextErrorMessage		+= "Response: " + MyHTTPInfo.ResponseBody

						invoke Create DocumentInterfaceError
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.DocumentInterfaceInvoice 	= DocumentInterfaceInvoice
							invoked.ErrorMessage				= TextErrorMessage
				else
					invoke InputOutputDocBytes HylandDocumentSecureBytes
						invoked.DocumentData.DocumentHandle			= DocumentInterfaceInvoice	
						LocalDocumentBytes							= result.InputOutputDocBytesResponse.Response.DocumentBytes
						LocalDocumentType							= result.InputOutputDocBytesResponse.Response.Extension
			else
			if (PayablesCompanyRel.VendorGroup.UsingDocMgmtSystem
			and PayablesCompanyRel.VendorGroup.DocMgmtPartner.AscendSoftware)
				invoke GetDocumentBytes AscendDocumentService
					invoked.DocumentHandle						= DocumentInterfaceInvoice	
					LocalDocumentBytes							= result.GetDocumentBytesResponse.GetDocumentBytesResult.DocumentBytes
					LocalDocumentType							= result.GetDocumentBytesResponse.GetDocumentBytesResult.Extension		
			else
			if (PayablesCompanyRel.VendorGroup.UsingDocMgmtSystem
			and PayablesCompanyRel.VendorGroup.DocMgmtPartner.PerceptiveSoftware)
				invoke GetDocumentPage PerceptiveDocumentService
					invoked.DocId								= DocumentInterfaceInvoice
					invoked.PageNo								= 1
					LocalDocumentBytes							= result.DocumentPage.PageByteStreamBase64
					LocalDocumentType							= result.DocumentPage.FileType

		SetDefaults	
			if (Company not entered)
				Company = DerivedDefaultCompany
			if (VendorGroup not entered)
				VendorGroup = PayablesCompanyRel.VendorGroup
			if (Vendor not entered)
				Vendor = DerivedDefaultVendor
			if (TermsCode not entered)
				TermsCode = DerivedDefaultTermsCode
			if (InvoiceCurrency not entered)
				InvoiceCurrency = DerivedDefaultCurrency


    Derived Fields

		ContextMessageEntityType is a StringField	
			type is Alpha 30
			restricted
			"InforScannedDocument"

		ContextMessageText is a MessageField		
			restricted
			"DocumentInterfaceInvoice<DocumentInterfaceInvoice>"

        ErrorsExistDisplay is a MessageField
        	restricted
			"*ErrorsExist*"
        
        ErrorsExist is a MessageField
        	restricted
			"ErrorsExist;CorrectAndResubmitInvoice"
        
        FirstErrorMessage is a DerivedField				
        	type is MessageField
        	default label is "ErrorMessage"
        	return first DocumentInterfaceErrorRel.ErrorMessage
        
		InterfaceComplete is a MessageField
			restricted
			"InterfaceComplete"

		PurchaseOrderNotFoundMsg is a MessageField
			restricted
			"PurchaseOrder<PurchaseOrder>NotFoundInCompany<Company>"

		DetailsFoundButNoPOMsg is a MessageField
			restricted
			"InvoiceDetailsExistButNeitherPurchaseOrderOrContractAreEntered"
					
		AddOnChargesFoundButNoPOMsg is a MessageField
			restricted
			"AddOnChargesExistButNeitherPurchaseOrderOrContractAreEntered"
					
		NoDetailsForPrepaymentFromInvoice is a MessageField
			restricted
			"CannotHaveDetailsWhenMatchPrepaymentMethodIsPrepayFromInvoice"

		InvoiceNotPrepayButPrepayMethodSelectedMsg is a MessageField
			restricted
			"InvoiceIsNotPrepayButPrepayMethodIsSelected"

		HoldCodeDoesNotExistMsg is a MessageField
			restricted
			"HoldCodeDoesNotExist"
			
		DuplicateDocumentInvoiceMsg is a MessageField
			restricted
			"DuplicateDocumentInterfaceInvoice;CannotInterface"

		VendorGroupMismatchMsg is a MessageField
			restricted
			"VendorGroup<VendorGroup>FinanceEnterpriseGroup<VendorGroupRel.VendorGroup.FinanceEnterpriseGroup>DoesNotMatchUserOrCompanyFinanceEnterpriseGroup<FinanceEnterpriseGroup>"

		DocumentInvoiceAlreadyExists is a MessageField
			restricted
			"InvoiceAlreadyExistsInDocumentInterface"

		DerivedDuplicateImageIndex is a DerivedField
			type is Numeric 16
			return first PayablesInvoiceDocumentIDRel.PayablesInvoice

		DerivedMimeType is a DerivedField
			type is Alpha 100

			if (LocalMimeType entered)
				return LocalMimeType
			if (LocalDocumentType = "tif"		
			or  LocalDocumentType = "tiff"		
			or  LocalDocumentType = "TIF"
			or  LocalDocumentType = "TIFF"
			or  LocalDocumentType = "Tif"
			or  LocalDocumentType = "Tiff")

				return "image/tiff"
			if (LocalDocumentType = "jpg"
			or  LocalDocumentType = "jpeg"
			or  LocalDocumentType = "jpe"
			or  LocalDocumentType = "JPG"
			or  LocalDocumentType = "JPEG"
			or  LocalDocumentType = "JPE"
			or  LocalDocumentType = "Jpg"
			or  LocalDocumentType = "Jpeg"
			or  LocalDocumentType = "Jpe")

				return "image/jpeg"
			if (LocalDocumentType = "pdf"
			or  LocalDocumentType = "PDF"
			or  LocalDocumentType = "Pdf")

				return "application/pdf"
			if (LocalDocumentType = "doc"
			or  LocalDocumentType = "DOC"
			or  LocalDocumentType = "Doc")
				return "application/msword"
			if (LocalDocumentType = "txt"
			or  LocalDocumentType = "TXT"
			or  LocalDocumentType = "Txt")
				return "text/plain"
			if (LocalDocumentType = "html"
			or  LocalDocumentType = "htm"
			or  LocalDocumentType = "HTML"
			or  LocalDocumentType = "HTM"
			or  LocalDocumentType = "Html"
			or  LocalDocumentType = "Htm")
				return "text/html"
			if (LocalDocumentType = "png"
			or  LocalDocumentType = "PNG"
			or  LocalDocumentType = "Png")				
				return "image/png"
			if (LocalDocumentType = blank)
				return "text/plain"
				
		DerivedExtension is a DerivedField
			type is Alpha 4

			if (Attachment.MimeType = "image/tiff")
				return ".tif"
			else
			if (Attachment.MimeType = "image/jpeg")
				return ".jpg"
			else
			if (Attachment.MimeType = "application/pdf")
				return ".pdf"
			else
			if (Attachment.MimeType = "application/msword")
				return ".doc"
			else
			if (Attachment.MimeType = "text/plain")
				return ".txt"
			else
			if (Attachment.MimeType = "text/html")
				return ".htm"
			else
			if (Attachment.MimeType = "image/png")
				return ".png"

				
		DerivedDocumentManagementButtonText is a DerivedField
			type is MessageField
        	restricted
			if (PayablesCompanyRel.VendorGroup.DocMgmtPartner.MHCSoftware)
				return "Open Image Express"
			else
			if (PayablesCompanyRel.VendorGroup.DocMgmtPartner.HylandSoftware)
				return "Open OnBase"
			else
			if (PayablesCompanyRel.VendorGroup.DocMgmtPartner.AscendSoftware)
				return "Open SmartTouch AP"
			else
			if (PayablesCompanyRel.VendorGroup.DocMgmtPartner.PerceptiveSoftware)
				return "Open Perceptive"
			else
			if (CreationSource.CaptureDocumentBOD)	
				return "Open Infor Document Management"
			else
				return "Document Management"

		DerivedInvoiceURL is a DerivedField	
			type is Alpha size up to 2083
			if (CreationSource.CaptureDocumentBOD)
				return DerivedIDMDocumentURL
			else
				return InvoiceURL

		MHCGetDocumentJSON is a DerivedField	
			type is JSONObject
			MHCGetDocumentJSON = template.MHCGetDocument_Template document for this instance

		HylandGetUrlJSON is a DerivedField	
			type is JSONObject
			HylandGetUrlJSON = template.HylandGetUrl_DocumentInterfaceInvoice_Template_ST document for this instance

		HylandGetDocumentJSON is a DerivedField	
			type is JSONObject
			HylandGetDocumentJSON = template.HylandGetDocument_DocumentInterfaceInvoice_Template_ST document for this instance

    	DerivedIDMUniqueId is a DerivedField	
    		type is like IDMPID
			initialize IDMAttributes
			initialize IDMItem

			if (DocumentInterfaceInvoice entered)
				IDMAttributes.SingleValue.IDMAttribute[1].IDMAttributeName		= "ExternalID"
				IDMAttributes.SingleValue.IDMAttribute[1].IDMAttributeValue		= DocumentInterfaceInvoice
	    		IDMItem.DocumentType		= "FSM_ScannedDocument"
	    		IDMItem.IDMAttributes		= IDMAttributes
	    		IDMItem.RetrieveByAttribute	= true
	    		if (IDMItem.GetItemDetails)
		    		LocalIDMUniqueId			= IDMItem.IDMItemDetails.MdsId
					return LocalIDMUniqueId
			return blank

    	DerivedIDMDocumentURL is a DerivedField	
    		type is Alpha size up to 2083
			if (CreationSource.CaptureDocumentBOD)
				if (IsIDMConfigured)
		    		if (not LocalGotIDMDocumentURL)
		    			if (LocalIDMUniqueId not entered)
		    				LocalIDMUniqueId = DerivedIDMUniqueId
						if (LocalIDMUniqueId entered)
			    			IDMItem.DocumentType	= "FSM_ScannedDocument"
					    	IDMItem.IDMUniqueId		= LocalIDMUniqueId	
					    	LocalGotIDMDocumentURL	= true
					    	return IDMItem.GetLink
    		return blank

		DerivedVendorGroup is a DerivedField	
			type is like VendorGroup
			if (VendorGroup entered)
				return VendorGroup
			else
			if (PayablesCompanyRel exists)
				return PayablesCompanyRel.VendorGroup
			else
				return blank

		DerivedDefaultCurrency is a DerivedField	
			type is like Currency
			initialize LocalCurrency
			if (ExternalCurrency entered
			and ExternalCurrencyRel exists)
				LocalCurrency = ExternalCurrency
			else
				for each CurrencyDefaultRuleRel
					if (DocumentInterfaceInvoice within each.InterfaceRule)
						LocalCurrency = each.Currency
						end for each
			return LocalCurrency








		DerivedDefaultTermsCode is a DerivedField	
			type is like TermsCode
			initialize LocalTermsCode
			if (ExternalTerms entered
			and ExternalTermsCodeRel exists)
				LocalTermsCode = ExternalTerms
			else
				for each TermsCodeDefaultRuleRel
					if (DocumentInterfaceInvoice within each.InterfaceRule)
						LocalTermsCode = each.TermsCode
						end for each
			return LocalTermsCode

		DerivedDefaultCompany is a DerivedField	
			type is like Company
			initialize LocalPayablesCompany
			if (CompanyDefaultRuleRel exists)
				for each CompanyDefaultRuleRel
					if (DocumentInterfaceInvoice within each.InterfaceRule)
						LocalPayablesCompany = each.PayablesCompany
						end for each
				return LocalPayablesCompany

		DerivedVendorLookup is a DerivedField	
			type is like Vendor
			LocalCounter = 1
			initialize LocalVendor
			while (LocalCounter < 10)
				if (VendorGroupRel.EDINumberOrder = LocalCounter)
					if (VendorByEDINumberRel exists)
						LocalVendor = first VendorByEDINumberRel.Vendor
				else
				if (VendorGroupRel.LegacyVendorOrder = LocalCounter)
					if (VendorByLegacyVendorRel exists)
						LocalVendor = first VendorByLegacyVendorRel.Vendor
				else
				if (VendorGroupRel.GLNOrder = LocalCounter)
					if (VendorByGLNRel exists)
						LocalVendor = first VendorByGLNRel.Vendor
				else
				if (VendorGroupRel.Reference1Order = LocalCounter)
					if (VendorByReference1Rel exists)
						LocalVendor = first VendorByReference1Rel.Vendor
				else
				if (VendorGroupRel.Reference2Order = LocalCounter)
					if (VendorByReference2Rel exists)
						LocalVendor = first VendorByReference2Rel.Vendor
				else
				if (VendorGroupRel.TaxIDOrder = LocalCounter)
					if (VendorByTaxIDRel exists)
						LocalVendor = first VendorByTaxIDRel.Vendor
				else
				if (VendorGroupRel.VATRegistrationNumberOrder = LocalCounter)
					if (VendorByVATNumberRel exists)
						LocalVendor = first VendorByVATNumberRel.Vendor
				else
				if (VendorGroupRel.VendorAccountOrder = LocalCounter)
					if (VendorByVendorAccountRel exists)
						LocalVendor = first VendorByVendorAccountRel.Vendor
				if (LocalVendor entered)
					end while
				else
					LocalCounter +=1
			return LocalVendor

		DerivedDefaultVendor is a DerivedField	
			type is like Vendor
			if (ServiceContract entered
			and ContractRel exists)
				return ContractRel.Vendor
			if (PurchaseOrder entered
			and PurchaseOrderRel exists)
				return PurchaseOrderRel.Vendor
			if (InterfacedPurchaseOrder entered
			and InterfacedPurchaseOrderRel exists)
				return InterfacedPurchaseOrderRel.PurchaseOrder.Vendor
			if (ExternalVendorID entered)	
				LocalDefaultVendor = DerivedVendorLookup
				if (LocalDefaultVendor entered)
					return LocalDefaultVendor
			if (VendorName entered)
				if (VendorByNameRel exists)
					return first VendorByNameRel.Vendor
				if (VendorBySearchNameRel exists)
					return first VendorBySearchNameRel.Vendor			

		DerivedPurchaseOrder is a DerivedField
			type is like PurchaseOrder

			if  (PurchaseOrder entered)
				return PurchaseOrder
			else
			if (InterfacedPurchaseOrder entered)
				return InterfacedPurchaseOrderRel.PurchaseOrder

		DerivedNumberOfInvoiceDetails is a DerivedField
			type is Numeric 4
			return instance count of PayablesInvoiceDetailRel

		CannotSelectCreateDetailsMsg is a MessageField
			restricted
			"CannotSelectCreateDetailsIfInterfaceDetailsExist"

		DocumentInvoiceInterfaceFormTitle is a DerivedField
			type is Alpha size up to 80
			if (RecordExists)
				return DocumentInvoiceInterfaceTitle
			else
				return DocumentInvoiceInterfaceTitleNoRecord
		
		DocumentInvoiceInterfaceTitleNoRecord is a LabelField
			restricted
			"CreateDocumentInterfaceInvoice"
		
		DocumentInvoiceInterfaceTitle is a LabelField
			restricted
			"DocumentInvoiceInterface<Invoice>ForVendor<Vendor>"

		NewLine								is a NativeField
			type is Alpha 1
			restricted

		DerivedIDMConnected is a DerivedField
			type is Boolean
			restricted
			if (IDMConfigurationRel exists)
				IDMConnected = true
				invoke BackgroundTestConnection IDMConfigurationRel
					resume on error
						IDMConnected = false
				return IDMConnected

	Conditions
		DocumentIDAlreadyInterfaced
			when (PayablesInvoiceDocumentIDRel exists)


		RecordInError
			when (DocumentInterfaceErrorRel exists)
	
		DocumentManagementButtonValid
        	restricted
			when (InvoiceURL entered
			or	  CreationSource.CaptureDocumentBOD)	

		HasInterfaceRun
			when (InterfaceRunID entered)

		MHCOAuthExists	
			when (MHCOAuthRel exists)
			
		HylandOAuthExists 
		    when (HylandOAuthRel exists)
		    
		PriorityVendor	
 			when (PriorityVendorRel exists)

		IsIDMConfigured	
			when (IDMConfigurationRel.DerivedDefaultConnection entered
			or IsIDMAuthDSConfigured)
		
		IsIDMAuthDSConfigured
			restricted
			when (config.AUTH_DS_PUBLIC_KEY != blank
			and config.AUTH_DS_SECRET_KEY != blank
			and config.AUTH_DS_URL != blank)
		
		IsPartiallyImported
			when (SystemAssignedInvoice entered)
		
		RecordExists
			when (DocumentInterfaceInvoice exists)

		HasDistributionErrors
			when (first DocumentInterfaceDistributionErrorsRel exists)
						
		HasCommentErrors
			when (first DocumentInterfaceCommentErrorsRel exists)

		ContractEntered 
			when (ServiceContract entered )			

		UseResequenceLineNumber 
			when (UseResequenceLineNumberRel exists
			and   UseResequenceLineNumberRel.ConfigurationParameter.Value = "true")

    Relations

		PayablesInvoiceDocumentIDRel
			one-to-many relation to PayablesInvoiceDocument
			Field Mapping uses ByDocumentID
				related.DocumentID						= DocumentInterfaceInvoice

		MatchCompanyRel
			one-to-one relation to MatchCompany
			Field Mapping uses symbolic key
				related.Company							= Company
				
		PayablesCompanyRel
			one-to-one relation to PayablesCompany
			Field Mapping uses symbolic key
				related.Company							= Company

		CompanySystemClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode		= "AP"
				related.Company						= Company
        VendorRel
            one-to-one relation to Vendor
            Field Mapping uses symbolic key
                related.VendorGroup = VendorGroupRel.VendorGroup	
                related.Vendor      = Vendor

		VendorByNameRel
			one-to-many relation to Vendor
			Field Mapping uses ByVendorName
				related.VendorGroup						= VendorGroup
				related.VendorName						= VendorName

		VendorBySearchNameRel	
			one-to-many relation to Vendor
			Field Mapping uses Set5
				related.VendorGroup						= VendorGroup
				related.VendorSearchName				= VendorName

		VendorByReference1Rel	
			one-to-many relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroup
			Instance Selection
				where (related.Reference1 = ExternalVendorID)

		VendorByReference2Rel	
			one-to-many relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroup
			Instance Selection
				where (related.Reference2 = ExternalVendorID)

		VendorByTaxIDRel	
			one-to-many relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroup
			Instance Selection
				where (related.TaxID = ExternalVendorID)

		VendorByVATNumberRel	
			one-to-many relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroup
			Instance Selection
				where (related.VATRegistrationNumber = ExternalVendorID)

		VendorByVendorAccountRel	
			one-to-many relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroup
			Instance Selection
				where (related.VendorAccount = ExternalVendorID)

        VendorByEDINumberRel	
            one-to-many relation to Vendor
            Field Mapping uses Set7
                related.VendorGroup 					= VendorGroupRel.VendorGroup
                related.EDINumber						= ExternalVendorID

        VendorByLegacyVendorRel	
            one-to-many relation to Vendor
            Field Mapping uses ByLegacyVendor
                related.VendorGroup 					= VendorGroupRel.VendorGroup
                related.LegacyVendor					= ExternalVendorID

        VendorByGLNRel	
            one-to-many relation to Vendor
            Field Mapping uses ByGlobalLocationNumber
                related.GlobalLocationNumber			= ExternalVendorID

		DocumentInterfaceErrorRel
			one-to-many relation to DocumentInterfaceError
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.DocumentInterfaceInvoice		= DocumentInterfaceInvoice

		PurchaseOrderRel
			one-to-one relation to PurchaseOrder
			Field Mapping uses symbolic key
				related.Company					= Company
				related.PurchaseOrder			= PurchaseOrder

		PurchaseOrderResequencedLinesRel
			one-to-many relation to PurchaseOrderLine 
			Field Mapping uses symbolic key
				related.Company					= Company
				related.PurchaseOrder			= PurchaseOrder
			Instance Selection 
				where (related.PurchaseOrderLine not = related.LineNumber)

		InterfacedPurchaseOrderRel 
			one-to-many relation to InterfacedPurchaseOrder
            Field Mapping uses ByImport
                related.Company                     = Company
                related.PurchaseOrderImport 		= InterfacedPurchaseOrder
                related.POCode						= InterfacedPOCode

		ContractRel
			one-to-one relation to Contract
			Field Mapping uses symbolic key
				related.ContractGroup			= PayablesCompanyRel.VendorGroup
				related.Contract				= ServiceContract

		PayablesInvoiceRel
			one-to-one relation to PayablesInvoice
			Field Mapping uses symbolic key
				related.Company							= Company
				related.PayablesInvoice					= SystemAssignedInvoice

        PayablesInvoiceDetailRel
            one-to-many relation to PayablesInvoiceDetail
            Field Mapping uses symbolic key
				related.Company							= Company
				related.PayablesInvoice					= SystemAssignedInvoice
		
		PayablesOriginalInvoiceRel
			one-to-one relation to PayablesInvoice
			Field Mapping uses ByCompanyVendorInvoice
				related.Company					= Company
				related.Vendor					= Vendor
				related.Invoice					= OriginalInvoice
				related.Suffix					= 0
				related.CancelSequence			= 0
				related.InvoiceDate		  		= InvoiceDate		
				
		LocalInterfaceResultsRel
			one-to-one relation to PayablesInvoiceInterfaceResult
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.PayablesInvoiceInterfaceResult	= LocalResultID

		InterfaceResultsRel
			one-to-one relation to PayablesInvoiceInterfaceResult
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.PayablesInvoiceInterfaceResult	= InterfaceRunID

        MHCOAuthRel	
        	one-to-one relation to OAuth
            Field Mapping uses symbolic key
                related.OAuth			= "MHCOAuth"

		HylandOAuthRel	
			one-to-one relation to OAuth
			Field Mapping uses symbolic key
				related.OAuth = "HylandOAuth"

		PriorityVendorRel	
			one-to-many relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroup
				related.Vendor							= Vendor
			Instance Selection
				where	(related.PaymentPriority = 1)

		PayablesInvoiceInterfaceInProcessRel
			one-to-many relation to PayablesInvoice
			Field Mapping uses ByCompanyVendorInvoice
				related.Company			= Company
				related.Vendor			= Vendor
				related.Invoice			= Invoice
				related.Suffix			= blank
				related.CancelSequence	= blank
				related.InvoiceDate		= InvoiceDate			
			Instance Selection
				where (related.InterfaceInProcess)

		InvoiceCurrencyRel	
			one-to-one relation to Currency
			Field Mapping uses symbolic key
				related.Currency 				= InvoiceCurrency

		ExternalCurrencyRel	
			one-to-one relation to Currency
			Field Mapping uses symbolic key
				related.Currency 				= ExternalCurrency

		TermsCodeRel	
			one-to-one relation to TermsCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.TermsCode 				= TermsCode

		ExternalTermsCodeRel	
			one-to-one relation to TermsCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.TermsCode 				= ExternalTerms

		PayablesHoldCodeRel
			one-to-one relation to PayablesHoldCode
			Field Mapping uses symbolic key
				related.VendorGroup				= PayablesCompanyRel.VendorGroup
				related.HoldCode				= HoldCode

		CompanyDefaultRuleRel	
			one-to-many relation to DocumentInterfaceRule
			Field Mapping uses ByPriority
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.Active
				and	   related.Type.Company)

		CurrencyDefaultRuleRel	
			one-to-many relation to DocumentInterfaceRule
			Field Mapping uses ByPriority
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.Active
				and	   related.Type.Currency)

		TermsCodeDefaultRuleRel	
			one-to-many relation to DocumentInterfaceRule
			Field Mapping uses ByPriority
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.Active
				and	   related.Type.PaymentTerms)

		VendorGroupRel	
			one-to-one relation to VendorGroup
			Field Mapping uses symbolic key
				related.VendorGroup	= DerivedVendorGroup

		InterfaceAnalysisDetailRel
			one-to-many relation to InterfaceAnalysisDetail
			Field Mapping uses AnalysisBucket
				related.InterfaceAnalysis	= LocalInterfaceAnalysis
				related.PayablesCompany		= Company
				related.Vendor				= Vendor
				related.Currency			= InvoiceCurrency
			Instance Selection
				where (related.MonthYear.Begin	<= InvoiceDate
				and    related.MonthYear.End	>= InvoiceDate)

       	TaxEntityRel				 
            one-to-one relation to TaxEntity
            Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
                related.TaxEntity 				= PayablesCompanyRel.Company.AccountingEntity

		GeneralLedgerSystemCodeRel		
			one-to-one relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
				related.GeneralLedgerSystemCode	= "AP"	

        InterfaceResultInProcessRel
            one-to-many relation to PayablesInvoiceInterfaceResult
            Field Mapping uses ByRunGroup
                related.RunGroup                        = blank
            Instance Selection
                where (related.FinanceEnterpriseGroup    = LocalFinanceEnterpriseGroup
                and    related.RunType                   = 3 
				and    related.Company					 = LocalCompany
				and    related.Status.InProcess)

		InvoicesInProcessRel
			one-to-many relation to DocumentInterfaceInvoice
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
            Instance Selection
                where (related.Company					 = Company
                and    related.SystemAssignedInvoice entered
                and    related.PayablesInvoiceRel.InterfaceInProcess)			

		DuplicateInvoiceRel
			one-to-many relation to DocumentInterfaceInvoice
			Field Mapping uses ByVendorInvoice 
				related.Vendor			= Vendor
				related.Invoice			= Invoice
			Instance Selection
				where (related.Company	= Company
				and    related.UniqueID	!= UniqueID)

		DuplicateInvoiceByVendorRel
			one-to-many relation to DocumentInterfaceInvoice
			Field Mapping uses ByVendorInvoice
				related.Vendor			= Vendor
				related.Invoice			= Invoice
			Instance Selection
				where (related.VendorGroup		= VendorGroup
				and    related.UniqueID			!= UniqueID)

		BypassDuplicateEditRel
			one-to-one relation to ConfigurationParameter
			Field Mapping uses symbolic key
				related.ConfigurationParameter.ConfigurationID	= "config"
				related.ConfigurationParameter.Name				= "DocumentInterfaceBypassDuplicateEdit"

		UseResequenceLineNumberRel
			one-to-one relation to ConfigurationParameter
			Field Mapping uses symbolic key
				related.ConfigurationParameter.ConfigurationID	= "config"
				related.ConfigurationParameter.Name				= "DocumentInterfaceUseResequenceLineNumber"

		DocumentInterfaceDistributionErrorsRel
			one-to-many relation to DocumentInterfaceError
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.DocumentInterfaceInvoice		= DocumentInterfaceInvoice
			Instance Selection
				where (related.DocumentInterfaceDistribution entered)

		DocumentInterfaceCommentErrorsRel
			one-to-many relation to DocumentInterfaceError
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.DocumentInterfaceInvoice		= DocumentInterfaceInvoice
			Instance Selection
				where (related.DocumentInterfaceComment entered)

		IDMConfigurationRel
			one-to-one relation to IDMConfiguration
			Field Mapping uses symbolic key
				related.IDMConfiguration = actor.context.FinanceEnterpriseGroup

    Sets
		ByVendorInvoice
			Sort Order
				Vendor
				Invoice
				DocumentInterfaceInvoice

        ByInterfaceRun
            Sort Order
            	InterfaceRunID
            	FinanceEnterpriseGroup
				DocumentInterfaceInvoice

		ByCreationTimeStamp	
			Sort Order
				FinanceEnterpriseGroup
				create stamp
				DocumentInterfaceInvoice

		ByUpdateTimeStamp	
			Sort Order
				FinanceEnterpriseGroup
				update stamp
				DocumentInterfaceInvoice

        ByInvoiceType
            Sort Order
				InvoiceType
				DocumentInterfaceInvoice

	Field Rules

		VendorGroup
			default to PayablesCompanyRel.VendorGroup
    		default to actor.context.VendorGroup
			if (VendorGroup entered)
				constraint (VendorGroupRel.VendorGroup.FinanceEnterpriseGroup = FinanceEnterpriseGroup)
					"<VendorGroupMismatchMsg>"
    		
		Company
			if (Company not entered)	
				Company = DerivedDefaultCompany
			default to actor.context.Company

		OneTimeVendorName
			initial value is VendorName

		Vendor
			default to DerivedDefaultVendor	









		InvoiceAmount
			if (InvoiceType = "C"
			and InvoiceAmount > 0)
				InvoiceAmount *= -1
			
		ScanDate
			default to current timestamp

		PurchaseOrder
			if (ServiceContract entered)
				cannot be entered
					"CannotEnterBothPurchaseOrderAndServiceContract"

		CreateDetails 
			if ((DocumentInterfaceDetail set exists
			and  !VendorRel.ExcludeInvoiceLineImport)
			or   PayablesInvoiceDetailRel exists)
				cannot be entered 
					"<CannotSelectCreateDetailsMsg>"

	Actions
		Create is a Create Action

			Entrance Rules
				if (Vendor not entered
				and Invoice not entered
				and BypassDuplicateEditRel exists)
				    NextSentence = true
				else
				if (PayablesCompanyRel.VendorGroup.InvoiceNumberEdit.CompanyVendor)	
					constraint (!DuplicateInvoiceRel exists)
						"<DocumentInvoiceAlreadyExists>"
				else
					constraint (!DuplicateInvoiceByVendorRel exists)
						"<DocumentInvoiceAlreadyExists>"
			Exit Rules
				if (PayablesCompanyRel.VendorGroup.UsingDocMgmtSystem)
					if (InvoiceURL not entered)
						invoke UpdateURL
						
					if (PayablesCompanyRel.VendorGroup.StoreDocumentLocally
					and Attachment not entered)
						invoke UpdateDocument
					
				include SetDefaults	

		UpdateDocument is an Instance Action

			Action Rules
				constraint (PayablesCompanyRel exists)
					"CompanyIsNotValid;UnableToDetermineDocumentManagementPartner"
				constraint (PayablesCompanyRel.VendorGroup.UsingDocMgmtSystem)
					"VendorGroupIsNotSetupWithDocumentManagementPartner"
				include GetDocumentBytes 

				Attachment.File			= LocalDocumentBytes
			Exit Rules
				Attachment.MimeType		= DerivedMimeType
				Attachment.Title		= DocumentInterfaceInvoice + DerivedExtension 


		UpdateTitle is an Instance Action

			Action Rules
				Attachment.Title		= DocumentInterfaceInvoice + DerivedExtension

		UpdateURL is an Instance Action

			Action Rules
				constraint (PayablesCompanyRel exists)
					"CompanyIsNotValid;UnableToDetermineDocumentManagementPartner"
				constraint (PayablesCompanyRel.VendorGroup.UsingDocMgmtSystem)
					"VendorGroupIsNotSetupWithDocumentManagementPartner"

				include GetDocumentURL
				InvoiceURL = LocalDocumentURL

		Update is an Update Action
			Entrance Rules
				if  (SystemAssignedInvoice entered
				and (ServiceContract changed
				or   PurchaseOrder changed
				or   InterfacedPurchaseOrder changed
				or   Vendor changed))
				    confirmation required
				        "InvoiceHasBeenPartiallyInterfaced.ChangingContractOrPurchaseOrderWillCauseRecordsAlreadyInterfacedToBeRemoved.Continue?"
				    invoke Unreleased.Delete PayablesInvoiceRel
				    initialize SystemAssignedInvoice    

				if (SystemAssignedInvoice entered)
					constraint (InvoiceAmount = PayablesInvoiceRel.InvoiceAmount.CurrencyAmount)
						"CannotChangeInvoiceAmountOnPartiallyInterfacedInvoice"

		Delete is a Delete Action
			Entrance Rules
				if  (SystemAssignedInvoice entered)
					confirmation required
						"InvoiceIsPartiallyInterfacedAndThoseRecordsWillAlsoBeDeleted"
					invoke Unreleased.Delete PayablesInvoiceRel



		FastDelete is a Delete Action
			restricted
			bypass relational integrity rules
					
		ResetErrorMessages is an Instance Action
			Action Rules
				invoke Delete DocumentInterfaceErrorRel

		RemoveAllDetailLines is an Instance Action 
			Action Rules 
				if (PayablesInvoiceDetailRel exists)
					confirmation required 
						"SomeLinesHaveBeenInterfaced.ThisActionWillAlsoDeleteThoseLines.Continue?"

				if (PayablesInvoiceRel.PayablesInvoiceSpreadAddOnChargeRel exists)
					confirmation required 
						"SpreadAddOnChargesHaveBeenInterfaced.TheseWillBeMovedBackToTheDocumentInterfaceSoAmountIsSpreadCorrectly.Continue?"


				for each PayablesInvoiceRel.PayablesInvoiceSpreadAddOnChargeRel 
					invoke Create DocumentInterfaceAddOnCharge
						invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.DocumentInterfaceInvoice 	= DocumentInterfaceInvoice
						invoked.PurchaseOrder				= each.PurchaseOrder
						invoked.AddOnCharge					= each.AddOnCharge
						invoked.AddOnChargeAmount			= each.SpreadAmount
									
					invoke Delete each 
				
				invoke FastDelete DocumentInterfaceDetail set 

				if (instance count of PayablesInvoiceDetailRel < 20)
					invoke DeleteNoInvoiceUpdate PayablesInvoiceDetailRel
				else 
					invoke DeleteNoInvoiceUpdateSet PayablesInvoiceDetail
						invoked.PrmCompany			= Company
						invoked.PrmPayablesInvoice	= SystemAssignedInvoice 
						invoked.PrmDetailsOnly  	= true 

		SetInterfaceInvoiceAsCreated is an Instance Action
			valid when (CreationInProcess)
			Action Rules
				CreationInProcess = false

		InterfaceThisInvoice is an Instance Action
			valid when (!CreationInProcess)
    		disable multiple instance selection  			
			completion message is "InterfaceThisInvoiceSubmittedInBackground.ClickRefreshToSeeUpdatedResults"
			Parameters
		        InvoiceProcess          	is AlphaUpper size 1
		            States
		                Add            value is "A"
		                MatchSubmitOrRelease value is "R"
		 		AutoCreateDetails					is Numeric 1
		 			States
		 				FromPurchaseOrder				value is 2
		 				FromReceipt						value is 3
						FromReceiptThenFromPO			value is 4
				AllowMatchItemOrVendorItem		is Boolean
		    		default label is "AllowMatchOnEitherItemOrVendorItem"
			Parameter Rules
				InvoiceProcess
					initial value is "A"
					default to "A"
					LocalFinanceEnterpriseGroup = FinanceEnterpriseGroup
					LocalCompany = Company
					for each InterfaceResultInProcessRel					
						constraint (InterfaceRunID != each.PayablesInvoiceInterfaceResult)
							"ThisInvoiceIsCurrentlyLinkedToAnInProcessInterfaceRun"
			Action Rules
				if (VendorGroup entered)
					constraint (VendorGroupRel.VendorGroup.FinanceEnterpriseGroup = FinanceEnterpriseGroup)
						"<VendorGroupMismatchMsg>"
				initialize ErrorMessage
				ErrorOccurred							= false

				invoke Delete DocumentInterfaceErrorRel

				invoke Create PayablesInvoiceInterfaceResult
					assign result to InstanceResultView
					invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.RunTime						= current timestamp
					invoked.RunType						= 3
					invoked.InvoiceProcess				= InvoiceProcess
					if  (PurchaseOrder entered
					or   InterfacedPurchaseOrder entered
					or   ServiceContract entered
					or   MatchReferenceNumber entered)
						invoked.PrmProcessType			= "M"
					else 
						invoked.PrmProcessType			= "E"
					invoked.Company						= Company
					invoked.ValidateVendorItem			= AllowMatchItemOrVendorItem
					invoked.AutoCreateDetails 			= AutoCreateDetails
					invoked.BypassExistingJobEdit		= true

				InterfaceRunID							= InstanceResultView.PayablesInvoiceInterfaceResult

				invoke InterfaceInvoices
					invoked.PrmFinanceEnterpriseGroup 	= FinanceEnterpriseGroup
					invoked.PrmCompany					= Company
					invoked.InvoiceProcess				= InvoiceProcess
					if  (PurchaseOrder entered
					or   InterfacedPurchaseOrder entered
					or   ServiceContract entered
					or   MatchReferenceNumber entered)
						invoked.PrmProcessType			= "M"
					else 
						invoked.PrmProcessType			= "E"
					invoked.PrmDocumentInterfaceInvoice	= DocumentInterfaceInvoice
					invoked.PrmResultsID				= InstanceResultView.PayablesInvoiceInterfaceResult
					invoked.AutoCreateDetails			= AutoCreateDetails
					invoked.AllowMatchItemOrVendorItem  = AllowMatchItemOrVendorItem
					
		InterfaceInvoices is a Set Action
		    default label is "InterfaceDocumentManagementInvoices"
			Parameters
				PrmFinanceEnterpriseGroup   is a FinanceEnterpriseGroup
				PrmCompany 					is a PayablesCompany
				PrmVendorGroup				is a VendorGroup	
		        InvoiceProcess          	is AlphaUpper size 1
		            States
		                Add            value is "A"
		                MatchSubmitOrRelease value is "R"
				PrmProcessType				is AlphaUpper size 1
		            States
		                MatchInvoices    	value is "M"
		                ExpenseInvoices		value is "E"
		                Both				value is "B"
				PrmVendorClass				is a VendorClass
					context of PrmVendorGroup		
				PrmVendor					is a Vendor
					context of PrmVendorGroup		
				PrmDocumentInterfaceInvoice is like DocumentInterfaceInvoice
				PrmResultsID				is like PayablesInvoiceInterfaceResult
		 		AutoCreateDetails					is Numeric 1
		 			States
		 				FromPurchaseOrder				value is 2
		 				FromReceipt						value is 3
						FromReceiptThenFromPO			value is 4
				PrmNewPostDate				is Date			
				AllowMatchItemOrVendorItem  is Boolean
		    		default label is "AllowMatchOnEitherItemOrVendorItem"
				
			Parameter Rules
				PrmFinanceEnterpriseGroup
					initial value is actor.context.FinanceEnterpriseGroup
					default to actor.context.FinanceEnterpriseGroup
				PrmCompany
					if (!PrmVendorGroup entered)		
						PrmVendorGroup = PrmCompany.PayablesCompany.VendorGroup
				    if (InvoiceProcess.MatchSubmitOrRelease)
				        required
				            "CompanyRequiredForMatchSubmitOrRelease"
					LocalFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
					LocalCompany = PrmCompany

					if (PrmResultsID not entered)
						for each InterfaceResultInProcessRel					
    	    				Diff = (current timestamp - each.RunTime)

							constraint (Diff > 86400)
								"ExistingJobForThisRunGroupIsAlreadyInProcess"
						for each InvoicesInProcessRel
    	    				Diff = (current timestamp - each.InterfaceResultsRel.RunTime)

							constraint (Diff > 86400)
								"ExistingJobForThisRunGroupIsAlreadyInProcess"
				PrmVendorGroup		
					if (PrmVendor entered)
						required
							"VendorGroupRequiredWhenVendorIsEnteredWithoutCompany"
					constraint (!PrmCompany entered or PrmCompany.PayablesCompany.VendorGroup = PrmVendorGroup)
						"VendorGroupDifferentFromEnteredCompanyVendorGroup<PrmCompany.PayablesCompany.VendorGroup>"
				InvoiceProcess
					initial value is "A"
					default to "A"
				PrmProcessType
					initial value is "B"
					default to "B"
			Local Fields
				LocalInstanceCount				is Numeric 10
				LocalInterfaceResultView		is a PayablesInvoiceInterfaceResult view	
				LocalInterfacedInvoiceCountTotal		is Numeric 10
				LocalInterfacedPurchaseOrderCount			is Numeric 10
				LocalInterfacedInvoiceAmountTotal		is an InternationalAmount
				LocalInterfaceInvoiceErrorCount			is Numeric 10
				
			Instance Selection			
				where (!CreationInProcess
				and    (PrmCompany not entered
				or      PrmCompany = Company)
				and    (PrmDocumentInterfaceInvoice not entered
				or      PrmDocumentInterfaceInvoice	= DocumentInterfaceInvoice)
				and    (PrmVendorClass not entered
				or      VendorRel.VendorClass = PrmVendorClass)
				and	   (PrmVendorGroup not entered		
				or 		VendorGroup = PrmVendorGroup)
				and    (PrmVendor not entered
				or      Vendor = PrmVendor)
				and    ((PrmProcessType.Both)
				or      ((PrmProcessType.MatchInvoices) 
				and      (PurchaseOrder entered
				or        InterfacedPurchaseOrder entered 
				or        MatchReferenceNumber entered 
				or        ServiceContract entered))
				or      ((PrmProcessType.ExpenseInvoices) 
				and      (PurchaseOrder not entered 
				and       InterfacedPurchaseOrder not entered
				and       MatchReferenceNumber not entered 
				and       ServiceContract not entered))))

			Sort Order is ByInvoiceType

			Rule Blocks
		 		SetError

					invoke Create DocumentInterfaceError
						invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.DocumentInterfaceInvoice 	= DocumentInterfaceInvoice
						invoked.ErrorMessage				= ErrorMessage
					
					invoke Update LocalInterfaceResultView.PayablesInvoiceInterfaceResult
						invoked.Status = 2
			
			Action Rules

				Empty Set Rules
					invoke Create PayablesInvoiceInterfaceResult
						assign result to LocalInterfaceResultView
						invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
						invoked.RunTime						= current timestamp
						invoked.RunType						= 3
						invoked.Company						= PrmCompany
						invoked.InvoiceProcess				= InvoiceProcess
						invoked.PrmProcessType				= PrmProcessType
						invoked.PrmVendorClass				= PrmVendorClass
						invoked.PrmVendor					= PrmVendor
						invoked.PrmVendor					= PrmVendor
						invoked.Status						= 1 
						invoked.ValidateVendorItem			= AllowMatchItemOrVendorItem
						invoked.AutoCreateDetails 			= AutoCreateDetails
						invoked.VendorGroup					= PrmVendorGroup		

					LocalFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
					if (GeneralLedgerSystemCodeRel.EncumbranceOption.Track 
					or  GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit) 
						invoke ProcessInterfaceBatchEdits BudgetEditBatch
							invoked.PrmFinanceEnterpriseGroup 	= PrmFinanceEnterpriseGroup 
							invoked.PrmBusinessClassName 		= "PayablesInvoice" 

				Set Rules				
					Entrance Rules
						
						if (PrmResultsID entered)
							LocalResultID					= PrmResultsID
							LocalInterfaceResultView		= LocalInterfaceResultsRel.PayablesInvoiceInterfaceResult
						else
							invoke Create PayablesInvoiceInterfaceResult
								assign result to LocalInterfaceResultView
								invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.RunTime						= current timestamp
								invoked.RunType						= 3
								invoked.InvoiceProcess				= InvoiceProcess
								invoked.PrmProcessType				= PrmProcessType
								invoked.PrmVendorClass				= PrmVendorClass
								invoked.PrmVendor					= PrmVendor
								invoked.Company						= PrmCompany
								invoked.ValidateVendorItem			= AllowMatchItemOrVendorItem
								invoked.AutoCreateDetails 			= AutoCreateDetails
								invoked.VendorGroup					= PrmVendorGroup	
	
					Exit Rules
						invoke Update LocalInterfaceResultView.PayablesInvoiceInterfaceResult
							invoked.RecordsProcessed				= LocalInstanceCount
							invoked.InterfacedInvoicesAmountTotal	= LocalInterfacedInvoiceAmountTotal
							invoked.InterfacedInvoicesCount			= LocalInterfacedInvoiceCountTotal
							invoked.InterfaceInvoiceErrorCount		= LocalInterfaceInvoiceErrorCount
							invoked.InterfacedPurchaseOrdersCount    = LocalInterfacedPurchaseOrderCount
	
						invoke InterfacePurchaseOrders DocumentInterfacePurchaseOrder
							invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
							invoked.PrmCompany					= PrmCompany
							invoked.InvoiceProcess				= InvoiceProcess
							invoked.PrmProcessType				= PrmProcessType
							invoked.PrmVendorClass				= PrmVendorClass
							invoked.PrmDocumentInterfaceInvoice = PrmDocumentInterfaceInvoice
							invoked.PrmInterfaceRun				= LocalInterfaceResultView.PayablesInvoiceInterfaceResult
							invoked.AutoCreateDetails			= AutoCreateDetails
							invoked.AllowMatchItemOrVendorItem	= AllowMatchItemOrVendorItem
				
						LocalFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
						if (GeneralLedgerSystemCodeRel.EncumbranceOption.Track 
						or  GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit) 
							invoke ProcessInterfaceBatchEdits BudgetEditBatch
								invoked.PrmFinanceEnterpriseGroup 	= PrmFinanceEnterpriseGroup 
								invoked.PrmBusinessClassName 		= "PayablesInvoice" 
				
				Instance Rules
					if (VendorRel.ExcludeInvoiceLineImport)
						invoke FastDelete DocumentInterfaceDetail set

					Skip = false
					if (InterfaceRunID entered
					and InterfaceRunID != PrmResultsID
					and InterfaceResultsRel exists 
					and InterfaceResultsRel.Status.InProcess)
                	    Skip = true
					else
					if (PrmResultsID not entered)
						invoke Delete DocumentInterfaceErrorRel
						InterfaceRunID									= LocalInterfaceResultView.PayablesInvoiceInterfaceResult
					
					initialize ErrorMessage
					ErrorOccurred									= false

					if (SystemAssignedInvoice entered
					and PayablesInvoiceRel not exists)
					    initialize SystemAssignedInvoice

					if (Skip)
					    NextSentence = true
					else
					if (SystemAssignedInvoice entered)

						if (DistributionDate entered 
						and DistributionDate not within CompanySystemClosingControlRel.ValidEntryDate)
							DistributionDate = PayablesInvoiceRel.DistributionDate 

						invoke Update PayablesInvoiceRel
							resume on error
								ErrorOccurred = true
								ErrorMessage = error message
							invoked.BypassInterfaceInProcessEdit	= true 
							invoked.OriginatingInterfaceRun			= LocalInterfaceResultView.PayablesInvoiceInterfaceResult
							invoked.InvoiceDate 					= InvoiceDate
							if (DueDate entered)
							    invoked.DueDate 					= DueDate
							invoked.TaxableAmount 					= TaxableAmount
							invoked.TaxAmount 						= TaxAmount
							if (ReasonCode entered)
								invoked.ReasonCode					= ReasonCode
							if (APClerk entered)
								invoked.APClerk 					= APClerk	
							if (Description entered)
								invoked.Description 				= Description
							if (PrmNewPostDate entered)									
								if (PrmNewPostDate < DistributionDate
								and DistributionDate entered)
									invoked.DistributionDate 		= DistributionDate
								else
									invoked.DistributionDate		= PrmNewPostDate
							else
							if (DistributionDate entered)
								invoked.DistributionDate 			= DistributionDate

							if (RoutingCategory entered)
								invoked.RoutingCategory				= RoutingCategory
							invoked.RemitToCode 					= RemitToCode
							invoked.Location						= Location
							invoked.ExternalReasonCode				= ExternalReasonCode
							invoked.ExternalReason					= ExternalReason
							invoked.AlphaAttribute1					= AlphaAttribute1
							invoked.ScanDate						= ScanDate
							invoked.CertificationNumber				= CertificationNumber	
							invoked.CertificationDate				= CertificationDate		

						if  ((CreateDetails entered
						or   AutoCreateDetails entered)
						and !ErrorOccurred
						and  DocumentInterfaceDetail set not exists
						and  PayablesInvoiceRel.PayablesInvoiceDetailRel not exists
						and  !PayablesInvoiceRel.MatchProcessType.AOCOnly)

							if  (DocumentInterfaceAddOnCharge set exists
							or  PayablesInvoiceRel.PayablesInvoiceDetailRel exists)
								invoke FastUpdate PayablesInvoiceRel 
									invoked.TransientBypassCreateAocDetails = true 

							for each PayablesInvoiceRel.MatchPurchaseOrderInvoicesRel
								if (each.CreateDetailValid)
									if  (AutoCreateDetails.FromPurchaseOrder
									or   CreateDetails.FromPurchaseOrder 
									or   each.PurchaseOrder.Dropship)				
										invoke CreateDetailFromPurchaseOrder each
											resume on error
												ErrorOccurred = true
												ErrorMessage = error message
									else
										if  (AutoCreateDetails.FromReceipt 
										or   CreateDetails.FromReceipt) 
											invoke CreateDetailFromReceipt each
												resume on error
													ErrorOccurred = true
													ErrorMessage = error message
										else
											if  ((AutoCreateDetails.FromReceiptThenFromPO
											or   CreateDetails.FromReceiptThenFromPO)
											and (PayablesInvoiceRel.OpenReceiptsPool2Rel exists
											or   PayablesInvoiceRel.OpenReceiptsPool3Rel exists))
												invoke CreateDetailFromReceipt each
													resume on error
														ErrorOccurred = true
														ErrorMessage = error message
											else
												invoke CreateDetailFromPurchaseOrder each
													resume on error
														ErrorOccurred = true
														ErrorMessage = error message


						if (ErrorOccurred)
							LocalInterfaceInvoiceErrorCount			+= 1
							include SetError		
						else
							LocalInterfacedInvoiceCountTotal		+= 1
							LocalInterfacedInvoiceAmountTotal		+= InvoiceAmount
					else
						if  (PayablesCompanyRel.VendorGroup.InvoiceNumberEdit.CompanyVendor	
						and  DuplicateInvoiceRel exists)
							ErrorOccurred							= true
							ErrorMessage							= DuplicateDocumentInvoiceMsg
							LocalInterfaceInvoiceErrorCount			+= 1
							include SetError
						else
						if  (PayablesCompanyRel.VendorGroup.InvoiceNumberEdit.VendorGroupVendor	
						and  DuplicateInvoiceByVendorRel exists)
							ErrorOccurred							= true
							ErrorMessage							= DuplicateDocumentInvoiceMsg
							LocalInterfaceInvoiceErrorCount			+= 1
							include SetError
						else
						if (DocumentIDAlreadyInterfaced)
							ErrorOccurred							= true
							ErrorMessage							= "PayablesInvoiceID" + DerivedDuplicateImageIndex + "AlreadyExistsWithImageIndex" + DocumentInterfaceInvoice
							LocalInterfaceInvoiceErrorCount			+= 1
							include SetError
						else
						if  (Company entered
						and ((PurchaseOrder entered
						and   PurchaseOrderRel not exists)
						or   (InterfacedPurchaseOrder entered
						and   InterfacedPurchaseOrderRel not exists)))
							ErrorOccurred							= true
							ErrorMessage							= PurchaseOrderNotFoundMsg
							LocalInterfaceInvoiceErrorCount			+= 1
							include SetError
						else
						if (PurchaseOrder not entered
						and InterfacedPurchaseOrder not entered
						and ServiceContract not entered
						and DocumentInterfaceDetail set exists)
							ErrorOccurred							= true
							ErrorMessage							= DetailsFoundButNoPOMsg
							LocalInterfaceInvoiceErrorCount			+= 1
							include SetError
						else
						if (PurchaseOrder not entered
						and InterfacedPurchaseOrder not entered
						and ServiceContract not entered
						and DocumentInterfaceAddOnCharge set exists)
							ErrorOccurred							= true
							ErrorMessage							= AddOnChargesFoundButNoPOMsg
							LocalInterfaceInvoiceErrorCount			+= 1
							include SetError
						else
						if  ((CreateDetails.FromPurchaseOrder
						or    CreateDetails.FromReceipt
						or    CreateDetails.FromReceiptThenFromPO)
						and  (DocumentInterfaceDetail set exists))
							ErrorOccurred							= true
							ErrorMessage							= CannotSelectCreateDetailsMsg
							LocalInterfaceInvoiceErrorCount			+= 1
							include SetError
						else
						if  (MatchPrepaymentMethod.PrepayFromInvoice
						and (DocumentInterfaceDetail set exists
						or   DocumentInterfaceAddOnCharge set exists))
							ErrorOccurred		= true
							ErrorMessage		= NoDetailsForPrepaymentFromInvoice
							LocalInterfaceInvoiceErrorCount			+= 1
							include SetError
						else
						if  (MatchPrepaymentMethod entered
						and  InvoiceType not = "R")
							ErrorOccurred		= true
							ErrorMessage		= InvoiceNotPrepayButPrepayMethodSelectedMsg
							LocalInterfaceInvoiceErrorCount			+= 1
							include SetError
						else
						if  (HoldCode entered
						and  PayablesHoldCodeRel not exists)
							ErrorOccurred		= true
							ErrorMessage		= HoldCodeDoesNotExistMsg
							LocalInterfaceInvoiceErrorCount			+= 1
							include SetError
						else

							if (CreateOneTimeVendor)
								invoke CreateOneTimeVendor Vendor
									assign result to OneTimeVendor
									resume on error
										ErrorOccurred = true
										ErrorMessage = error message
									invoked.VendorGroup				= VendorGroup
					                invoked.VendorName				= OneTimeVendorName
					                invoked.VendorSearchName		= OneTimeVendorSearchName
					                invoked.VendorAddress			= OneTimeVendorAddress
					                invoked.LegalName				= OneTimeLegalName
					                invoked.TaxID					= OneTimeTaxID
					                invoked.IncomeCode				= OneTimeIncomeCode
					                invoked.VATRegistrationCountry	= OneTimeVATRegistrationCountry
					                invoked.VATRegistrationNumber	= OneTimeVATRegistrationNumber
					                invoked.Carrier					= OneTimeCarrier
			
								Vendor = OneTimeVendor.Vendor

								
							if (!ErrorOccurred)
								invoke Unreleased.CreateInvoice PayablesInvoice
									assign result to NewPayablesInvoice
									resume on error
										ErrorOccurred = true
										ErrorMessage = error message
									fill in user fields from this instance	
									invoked.Company							= Company
									invoked.Vendor							= Vendor
									invoked.VendorGroup						= VendorGroup
									invoked.InvoiceSource					= "D"  
									invoked.InvoiceType						= InvoiceType
									invoked.Invoice 						= Invoice
									invoked.InvoiceDate 					= InvoiceDate
									invoked.DueDate 						= DueDate
									invoked.InvoiceAmount.CurrencyAmount	= InvoiceAmount


									invoked.TaxableAmount 					= TaxableAmount
									invoked.TaxAmount 						= TaxAmount
									invoked.TaxCode							= TaxCode				
									invoked.TransientTaxCategory			= ProductTaxCategory	
									invoked.TransientLineTax				= LineTax				
									invoked.ProcessLevel 					= ProcessLevel
									invoked.RemitToCode		 				= RemitToCode
									invoked.Location						= Location
									invoked.ReasonCode						= ReasonCode
									invoked.APClerk 						= APClerk	
									invoked.ServiceContract					= ServiceContract
									if  (PurchaseOrder entered)
										invoked.FirstPurchaseOrder			= PurchaseOrder
									else
									if  (InterfacedPurchaseOrder entered)
										invoked.FirstPurchaseOrder			= InterfacedPurchaseOrderRel.PurchaseOrder

									if  (PurchaseOrder entered
									or   InterfacedPurchaseOrder entered
									or   MatchReferenceNumber entered)
										invoked.TransientInvoiceEntryTemplate	= 4
										if  (DocumentInterfaceDetail set not exists
										and  DocumentInterfaceAddOnCharge set exists
										and  CreateDetails not entered 
										and  AutoCreateDetails not entered)
											invoked.TransientAddOnChargeOnly 	= true
									else
									if  (ServiceContract entered)
										invoked.TransientInvoiceEntryTemplate	= 5
									
									invoked.ExternalPurchaseOrder			= ExternalPurchaseOrder 

									invoked.MatchReferenceNumber			= MatchReferenceNumber
									invoked.MatchPrepaymentMethod			= MatchPrepaymentMethod
									
									invoked.VendorReturn					= ReturnNumber

									invoked.CreditMemoReferenceInvoice		= CreditMemoReferenceInvoice
									invoked.OriginalInvoice					= OriginalInvoice
									invoked.InvoiceCurrency		 			= InvoiceCurrency
									invoked.Description 					= Description
									if (PrmNewPostDate entered)									
										if (PrmNewPostDate < DistributionDate)
											invoked.DistributionDate 		= DistributionDate
										else
											invoked.DistributionDate		= PrmNewPostDate
									else
										invoked.DistributionDate 			= DistributionDate
									invoked.BankTransactionCode				= PaymentCode
									invoked.ImageIndex						= DocumentInterfaceInvoice
									invoked.InvoiceURL						= InvoiceURL
									invoked.RoutingCategory					= RoutingCategory
									invoked.ExternalReasonCode				= ExternalReasonCode
									invoked.ExternalReason					= ExternalReason
									invoked.AlphaAttribute1					= AlphaAttribute1
									invoked.ScanDate						= ScanDate
									invoked.CreationSource					= 2
									invoked.InterfaceInProcess				= true
									invoked.OriginatingInterfaceRun			= LocalInterfaceResultView.PayablesInvoiceInterfaceResult
									invoked.OverrideSeparatePayment			= SeparatePayment	
									invoked.OverrideEnclosure				= Enclosure			
									invoked.TermsCode						= TermsCode			
									invoked.CertificationNumber				= CertificationNumber	
									invoked.CertificationDate				= CertificationDate		
									if (CreateDetails entered)
										invoked.TransientCreateDetails		= CreateDetails
										if  (DocumentInterfaceAddOnCharge set exists)
											invoked.TransientBypassCreateAocDetails = true 
									else
									if  (AutoCreateDetails entered
									and  !DocumentInterfaceDetail set exists)
										invoked.TransientCreateDetails		= AutoCreateDetails
										if  (DocumentInterfaceAddOnCharge set exists)
											invoked.TransientBypassCreateAocDetails = true 

									if (CreationSource.CaptureDocumentBOD)	
										if (LocalIDMUniqueId not entered)
											LocalIDMUniqueId = DerivedIDMUniqueId	
										invoked.IDMDocumentPID				= LocalIDMUniqueId

								SystemAssignedInvoice						= NewPayablesInvoice.PayablesInvoice

							if (!ErrorOccurred)
								LocalInterfacedInvoiceCountTotal		+= 1
								LocalInterfacedInvoiceAmountTotal		+= InvoiceAmount
								if (PurchaseOrder entered
								or  InterfacedPurchaseOrder entered)
									LocalInterfacedPurchaseOrderCount += 1
								
								if (Attachment entered)
									invoke Create PayablesInvoiceDocument
										resume on error
											ErrorOccurred		= true
											ErrorMessage 		= error message
										invoked.Company					= Company
										invoked.PayablesInvoice			= SystemAssignedInvoice
										invoked.DocumentID				= DocumentInterfaceInvoice
										invoked.Description				= "FromPayablesInvoiceService"
										invoked.DocumentType			= 1
										invoked.Attachment.File			= Attachment.File	
										invoked.Attachment.Title		= Attachment.Title
										invoked.Attachment.MimeType		= Attachment.MimeType
										invoked.CreatedFromWebService	= true
							else
								LocalInterfaceInvoiceErrorCount			+= 1
										
								if  (SystemAssignedInvoice entered
								and  PayablesInvoiceRel exists)
									invoke Delete PayablesInvoiceRel
								else
								if  (PayablesInvoiceInterfaceInProcessRel exists
								and  PayablesInvoiceInterfaceInProcessRel.OriginatingInterfaceRun = LocalInterfaceResultView.PayablesInvoiceInterfaceResult)
									invoke Delete PayablesInvoiceInterfaceInProcessRel
									
								include SetError
		
							LocalInstanceCount							+= 1

 		InvoiceUpdate is a Set Action
 			restricted
			Parameters
				PrmFinanceEnterpriseGroup   is a FinanceEnterpriseGroup
				PrmCompany					is like PayablesCompany
		        InvoiceProcess          	is AlphaUpper size 1
		            States
		                Add            value is "A"
		                MatchSubmitOrRelease value is "R"
				PrmProcessType				is AlphaUpper size 1
		            States
		                MatchInvoices    	value is "M"
		                ExpenseInvoices		value is "E"
		                Both				value is "B"
				PrmVendorClass				is like VendorClass		                
				PrmDocumentInterfaceInvoice is like DocumentInterfaceInvoice
				PrmInterfaceRun				is a PayablesInvoiceInterfaceResult

			Instance Selection			
				where (InterfaceRunID = PrmInterfaceRun
				and   !RecordInError
				and    SystemAssignedInvoice entered)

			Sort Order is ByInvoiceType

			Action Rules
				Empty Set Rules
					if (!PrmInterfaceRun.Status = 2)
						invoke Update PrmInterfaceRun
							invoked.Status        			= 1

				Set Rules
						
					Exit Rules
						if (!PrmInterfaceRun.Status = 2)
							invoke Update PrmInterfaceRun
								invoked.Status        			= 1

						if (InvoiceProcess.MatchSubmitOrRelease)
							invoke AutoMatch PayablesInvoice
								invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
						        invoked.PrmCompany						= PrmCompany
						        invoked.PrmMatchPoint					= "1"
						        invoked.PrmInterfaceRun					= PrmInterfaceRun

				Instance Rules

					invoke FastUpdate PayablesInvoiceRel
						invoked.InterfaceInProcess	= false

					ErrorOccurred		= false
					

					invoke UpdateErrorRecordsAction PayablesInvoiceRel
						resume on error
							ErrorOccurred		= true

					if  (!ErrorOccurred
					and  !PayablesInvoiceRel.MatchProcessType.Expense)
						invoke InvoiceUpdate PayablesInvoiceRel
							resume on error
								ErrorOccurred		= true

					invoke CheckRoutingRules PayablesInvoiceRel
						resume on error

					if  (!ErrorOccurred
					and  InvoiceProcess.MatchSubmitOrRelease
					and (!PayablesInvoiceRel.InvoiceNotInBalance
					or   PayablesCompanyRel.VendorGroup.DistributionEntryOnApproval
					or   PayablesInvoiceRel.ProcessOneSourceValid
					or   PayablesInvoiceRel.ProcessVertexValid))

						invoke Unreleased.SubmitForApproval PayablesInvoiceRel
							resume on error
								ErrorOccurred = true

					if (HoldCode entered)
						invoke PutInvoiceOnHold PayablesInvoiceRel
							invoked.HoldCode = HoldCode

					invoke FastDelete

		UpdateInterfaceAnalysisDetails is a Set Action
			restricted
			Parameters
				PrmInterfaceAnalysis is like InterfaceAnalysis
			Local Fields
				LocalDateRange 			is a DateRange
			Instance Selection			
				where (InvoiceAmount entered)
			Action Rules
				Instance Rules
					LocalInterfaceAnalysis		= PrmInterfaceAnalysis
					if (InterfaceAnalysisDetailRel exists)
						invoke UpdateInterfaceAnalysisDetails InterfaceAnalysisDetailRel
							invoked.PrmDocumentInterfaceTotal	= InvoiceAmount
					else
						LocalDateRange.Begin	= InvoiceDate - InvoiceDate day + 1
						LocalDateRange.End		= LocalDateRange.Begin + 1 month - 1 day

						invoke Create InterfaceAnalysisDetail
							resume on error
							invoked.InterfaceAnalysis		= LocalInterfaceAnalysis
							invoked.PayablesCompany			= Company
							invoked.Vendor					= Vendor
							invoked.Currency				= InvoiceCurrency
							invoked.MonthYear				= LocalDateRange
							invoked.DocumentInterfaceTotal	= InvoiceAmount
							invoked.InterfaceTotal			= InvoiceAmount


		UpdateUseResequenceLineNumber is a Set Action 
			run in foreground 
			Parameters 
				UseResequenceLineNumberOnInvoiceLineCreation is Boolean 
			Parameter Rules 
				UseResequenceLineNumberOnInvoiceLineCreation
					initial value is UseResequenceLineNumberRel.ConfigurationParameter.Value
			Instance Selection
				where (false)
			Action Rules
				Empty Set Rules
					if (UseResequenceLineNumberOnInvoiceLineCreation)
						if (UseResequenceLineNumberRel exists)
							invoke Update UseResequenceLineNumberRel
								invoked.ConfigurationParameter.Value = "true"
						else 
							invoke Create UseResequenceLineNumberRel
								invoked.ConfigurationParameter.Value = "true"
					else 
						invoke Delete UseResequenceLineNumberRel
