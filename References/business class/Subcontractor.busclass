Subcontractor is a BusinessClass
	owned by procurement
	prefix is SCON

	Ontology
		symbolic key is Subcontractor

	Persistent Fields
		SubcontractorName		is like Name	 
			holds pii
		Supplier
		TaxIdGroup
		VATRegistrationCountry	is a Country
			default label is "V\A\TRegistrationCountry/\Jurisdiction"
		VATRegistrationNumber
		DoingBusinessAs			is Alpha size 30
		DandBNbr				is Alpha size 20
		BusinessType			is Numeric size 2
			States
				Corporation 		value is 1
				NotForProfit		value is 2
				SoleProprietorship	value is 3
				ForeignCorporation	value is 4
				PublicAgency		value is 5
		MailingAddress			is a PostalAddressV2	
			holds pii
		BillingAddress			is a PostalAddressV2	
			holds pii
		BillingFirstName		is Alpha size 30
		BillingLastName			is Alpha size 30
		Active					is Boolean
		OIGExclusionStatus						
		PreviousExclusionStatus		is a OIGExclusionStatus		
		OIGValidationDate			is Date		
			default label is "LastOIGValidationDate"

	Context Fields
		Contract

	Derived Fields
		RepresentativeText is a StringField
			type is Text
			default label is "Subcontractor"
			Subcontractor " - " SubcontractorName

		SubcontractorMessage is a MessageField
			"Subcontractor"
		
		DisplaySubcontractorNumber is a DerivedField
			type is Text
			if (SubcontractorExists)
				return SubcontractorMessage + " " + RepresentativeText
			else
				return CreateSubcontractorMessage
		
		CreateSubcontractorMessage is a MessageField
			"CreateSubcontractor"

		DerivedEmailSubject is a MessageField
			restricted
			"Subcontractor<SubcontractorName>OnYourPortal"

		DerivedSupplierContactName is a StringField
			type is Alpha size 101
			restricted
			actor.agent(SupplierSourceId).SupplierSourceId.MainContact.FirstAndLastName

		DerivedSupplierName is a StringField
			type is Alpha size 30
			restricted
			actor.agent(SupplierSourceId).Supplier.SupplierName

	Conditions
		ContractClosedOrInactive
			restricted
			when (Contract.ContractStatus.Closed
			or    Contract.ContractStatus.Inactive)

		AllowAttachToContract
			restricted
			when (Contract entered
			and   !ContractClosedOrInactive
			and   ActiveSupplierOrNotSupplier)

		SubcontractorExists
			restricted
			when (Subcontractor entered)

		ActiveSupplierOrNotSupplier
			restricted
			when ((!actor.agent(SupplierSourceId).SupplierSourceId.InactiveAtSomeLevel
			and   actor.agent(SupplierSourceId).SupplierSourceId exists)
			or    actor.agent(SupplierSourceId).SupplierSourceId !exists)

	Relations
		ContractRels is a Contract set

		ContractSubcontractorRels
			one-to-many relation to ContractSubcontractor
			Field Mapping uses ByContractOnly
				related.Contract		= Contract
				related.Subcontractor	= Subcontractor

		CommodityCodesRel
			one-to-many relation to CommodityCode
			Field Mapping uses symbolic key
				related.ItemGroup = SupplierGroup

		TaxIdRel
			one-to-many relation to Subcontractor
			Field Mapping uses TaxIdSet
				related.TaxIdGroup.TaxIdType	= TaxIdGroup.TaxIdType
				related.TaxIdGroup.TaxId		= TaxIdGroup.TaxId
			Instance Selection
				where (related.SupplierGroup	 = SupplierGroup
				and	   related.Subcontractor	!= Subcontractor)

		TaxIdOnlyRel
			one-to-many relation to Subcontractor
			Field Mapping uses TaxIdOnly
				related.TaxIdGroup.TaxId = TaxIdGroup.TaxId
			Instance Selection
				where (related.SupplierGroup	 = SupplierGroup
				and	   related.Subcontractor	!= Subcontractor)

		PayablesDiversityCodesRel
			one-to-many relation to PayablesDiversityCode
			Field Mapping uses symbolic key
				related.VendorGroup = SupplierGroup

		SubcontractorDiversityRel
			one-to-many relation to SubcontractorDiversity
			Field Mapping uses BySubcontractor
				related.SupplierGroup	= SupplierGroup
				related.Subcontractor	= Subcontractor

		SupplierGroupExtensionRel
			one-to-one relation to SupplierGroupExtension
			Field Mapping uses symbolic key
				related.SupplierGroup = SupplierGroup

		VATTaxRel
			one-to-many relation to Subcontractor
			Field Mapping uses VATTaxSet
				related.VATRegistrationCountry	= VATRegistrationCountry
				related.VATRegistrationNumber	= VATRegistrationNumber
			Instance Selection
				where (related.SupplierGroup	 = SupplierGroup
				and	   related.Subcontractor	!= Subcontractor)

	Sets
		TaxIdSet
			duplicates
			indexed
			Sort Order
				TaxIdGroup.TaxIdType
				TaxIdGroup.TaxId

		TaxIdOnly
			duplicates
			Sort Order
				TaxIdGroup.TaxId
				TaxIdGroup.TaxIdType

		VATTaxSet
			duplicates
			indexed
			Sort Order
				VATRegistrationCountry
				VATRegistrationNumber

		BySubName
			indexed
			Sort Order
				SubcontractorName
				SupplierGroup
				Subcontractor

		ByOIGExclusionStatus		
			Sort Order
				SupplierGroup
				OIGExclusionStatus
				Subcontractor

	Field Rules
		SubcontractorName
			required

		TaxIdGroup.TaxId
			if (VATRegistrationNumber !entered)
				required
					"MustEnterEitherTaxIdOrVatRegistrationNumber"

		VATRegistrationCountry

			if (VATRegistrationNumber entered)
				required
					"VATRegistrationCountry/\jurisdictionMustBeEnteredIfNumberIsEntered"

		VATRegistrationNumber

			if (TaxIdGroup.TaxId !entered)
				required
					"MustEnterEitherTaxIdOrVatRegistrationNumber"

			if (VATRegistrationCountry entered)
				required
					"VATRegistrationNumberMustBeEnteredIfCountry/\jurisdictionIsEntered"

	Actions

		Create is a Create Action
			valid when (ActiveSupplierOrNotSupplier)
			Field Rules

				TaxIdGroup
					if (TaxIdGroup.TaxId entered)
						if (SupplierGroup.AllowDuplicateTaxIdsOnSub.No)
							constraint (!TaxIdRel exists)
								"Subcontractor<first TaxIdRel.SubcontractorName>AlreadyExistsWithThisTaxId."
						else
						if (SupplierGroup.AllowDuplicateTaxIdsOnSub.YesWithWarning)
							if (TaxIdRel exists)
								confirmation required
									"Subcontractor<first TaxIdRel.SubcontractorName>AlreadyExistsWithThisTaxId.DoYouWantToContinue?"
						else
						if (SupplierGroup.AllowDuplicateTaxIdsOnSub.NoTaxIDOnly)
							constraint (!TaxIdOnlyRel exists)
								"Subcontractor<first TaxIdOnlyRel.SubcontractorName>AlreadyExistsWithThisTaxId."
						else
						if (SupplierGroup.AllowDuplicateTaxIdsOnSub.YesWithWarningTaxIDOnly)
							if (TaxIdOnlyRel exists)
								confirmation required
									"Subcontractor<first TaxIdOnlyRel.SubcontractorName>AlreadyExistsWithThisTaxId.DoYouWantToContinue?"

  				VATRegistrationNumber

					if (VATRegistrationNumber entered)
						if (SupplierGroup.AllowDuplicateTaxIdsOnSub.YesWithWarning
						or  SupplierGroup.AllowDuplicateTaxIdsOnSub.YesWithWarningTaxIDOnly)
							if (VATTaxRel exists)
								confirmation required
									"Warning:Subcontractor<first VATTaxRel.SubcontractorName>FoundWithTheSameVATTaxInformation.DoYouWantToContinue?"

						else
							constraint (!VATTaxRel exists)
								"Subcontractor<first VATTaxRel.SubcontractorName>FoundWithTheSameVATTaxInformation."

			Action Rules
				Active = true


		Update is an Update Action
			valid when (ActiveSupplierOrNotSupplier)
			Field Rules

				TaxIdGroup
					if ((TaxIdGroup.TaxId changed
					or   TaxIdGroup.TaxIdType changed)
					and  TaxIdGroup.TaxId entered)
						if (SupplierGroup.AllowDuplicateTaxIdsOnSub.No)
							constraint (!TaxIdRel exists)
								"Subcontractor<first TaxIdRel.SubcontractorName>AlreadyExistsWithThisTaxId."
						else
						if (SupplierGroup.AllowDuplicateTaxIdsOnSub.YesWithWarning)
							if (TaxIdRel exists)
								confirmation required
									"Subcontractor<first TaxIdRel.SubcontractorName>AlreadyExistsWithThisTaxId.DoYouWantToContinue?"
						else
						if (SupplierGroup.AllowDuplicateTaxIdsOnSub.NoTaxIDOnly)
							constraint (!TaxIdOnlyRel exists)
								"Subcontractor<first TaxIdOnlyRel.SubcontractorName>AlreadyExistsWithThisTaxId."
						else
						if (SupplierGroup.AllowDuplicateTaxIdsOnSub.YesWithWarningTaxIDOnly)
							if (TaxIdOnlyRel exists)
								confirmation required
									"Subcontractor<first TaxIdOnlyRel.SubcontractorName>AlreadyExistsWithThisTaxId.DoYouWantToContinue?"

				VATRegistrationNumber

					if (VATRegistrationNumber entered
					and VATRegistrationNumber changed)
						if (SupplierGroup.AllowDuplicateTaxIdsOnSub.YesWithWarning
						or  SupplierGroup.AllowDuplicateTaxIdsOnSub.YesWithWarningTaxIDOnly)
							if (VATTaxRel exists)
								confirmation required
									"Warning:Subcontractor<first VATTaxRel.SubcontractorName>FoundWithTheSameVATTaxInformation.DoYouWantToContinue?"

						else
							constraint (!VATTaxRel exists)
								"Subcontractor<first VATTaxRel.SubcontractorName>FoundWithTheSameVATTaxInformation."

			Action Rules

		Delete is a Delete Action
			valid when (ActiveSupplierOrNotSupplier)

		AttachToContract is an Instance Action
			valid when (!ContractClosedOrInactive)
			Parameters
				ContractGroup
				Contract
			Parameter Rules
				ContractGroup
					required
				Contract
					required
			Action Rules
				constraint (!ContractSubcontractorRels exists)
					"SubcontractorIsAlreadyAttachedToThisContract"

				invoke Create ContractSubcontractor
					invoked.ContractGroup	= SupplierGroup.ContractGroupRel.ContractGroup
					invoked.Contract		= Contract
					fill in fields from Subcontractor

		SupplierAttachToContract is an Instance Action
			valid when (AllowAttachToContract)
			default label is "AttachToContract"
			Parameters
				ContractGroup
				Contract
			Parameter Rules
				ContractGroup
					required
				Contract
					required
			Action Rules
				constraint (!ContractSubcontractorRels exists)
					"SubcontractorIsAlreadyAttachedToThisContract"

				invoke Create ContractSubcontractor
					invoked.ContractGroup	= SupplierGroup.ContractGroupRel.ContractGroup
					invoked.Contract		= Contract
					fill in fields from Subcontractor

			Exit Rules
				if (SupplierGroup.EmailOnContractSubcontractorUpdate)
					send email
						to Contract.PrimaryContactRel.DerivedEmail
						from Contract.Supplier.SupplierGroup.NotificationEmailAddressOnSub
						cc actor.agent(SupplierSourceId).SupplierSourceId.EmailAddress
						cc Contract.Supplier.SupplierGroup.NotificationEmailAddressOnSub
						subject "<SupplierGroupExtensionRel.FinalMaintainContractSubcontractorEmailSubject>"
						Contents
							"<SupplierGroupExtensionRel.FinalMaintainContractSubcontractorEmailContent>"
							"SubcontractorHasBeenAddedBy<DerivedSupplierContactName>Of<DerivedSupplierName>"

		UpdateOIGExclusionStatus is an Instance Action		
			restricted
			default label is untranslatable
			Parameters
				PrmOIGExclusionStatus		is a OIGExclusionStatus
				PrmOIGValidationDate		is Date
			Parameter Rules
				PrmOIGExclusionStatus
					required
				PrmOIGValidationDate
					default to current corporate date
			Entrance Rules
				PreviousExclusionStatus	= OIGExclusionStatus
			Action Rules
				OIGExclusionStatus		= PrmOIGExclusionStatus
				OIGValidationDate		= PrmOIGValidationDate

