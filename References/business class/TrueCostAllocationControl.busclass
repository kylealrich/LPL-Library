TrueCostAllocationControl is a BusinessClass
	owned by truecost
	prefix is TCALC
    default label is "AllocationControl"
    Ontology
    	symbolic key is TrueCostAllocationControl
    	
	Patterns
    	
    Persistent Fields
    	Description
    	Calendar							is a GeneralLedgerCalendar

    	ActualsLedger						is a Ledger
    		default label is "UtilizationLedger"
    	CapacityLedger						is a Ledger
    	SourceLedger						is a Ledger
    	DepartmentStructure					is like AccountingUnitStructure
    	CostObjectStructure					is like FinanceDimension1Structure
    	Chart								is a ReportingChart
    	
    	PostingProject							is a Project
    	PostingFinanceDimension1				is a FinanceDimension1
    	PostingFinanceDimension2				is a FinanceDimension2
    	PostingFinanceDimension3				is a FinanceDimension3
    	PostingFinanceDimension4				is a FinanceDimension4
    	PostingFinanceDimension5				is a FinanceDimension5
    	PostingFinanceDimension6				is a FinanceDimension6
    	PostingFinanceDimension7				is a FinanceDimension7
    	PostingFinanceDimension8				is a FinanceDimension8
    	PostingFinanceDimension9				is a FinanceDimension9
    	PostingFinanceDimension10				is a FinanceDimension10
    	
    	ExpenseAccounts						is a GeneralLedgerChartAccount
    		default label is "SourceExpenseAccounts"
    	
    	SourceSystem						is a AllocationSourceSystem
		AllocationControl
		SourceValidationRunDate				is TimeStamp
		SourceValidationAllocation			is like Allocation
		SourceValidationAllocationGroup		is like AllocationGroup 
		UseContraAccount					is Boolean
		PostFromContraAccount				is a GeneralLedgerChartAccount

		SourceValidationReportStatus		is Numeric 1
			States
				NotStarted				    value is 0
				Running					    value is 1
				Completed				    value is 2
		ProjectStructure
			default label is "<TrueCostConfiguration.FinanceEnterpriseGroup.ProjectLabel>Structure"
		AccountingUnitStructure
			default label is "<TrueCostConfiguration.FinanceEnterpriseGroup.AccountingUnitLabel>Structure"
		FinanceDimension1Structure
			default label is "<TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension1Label>Structure"
		FinanceDimension2Structure
			default label is "<TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension2Label>Structure"
		FinanceDimension3Structure
			default label is "<TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension3Label>Structure"
		FinanceDimension4Structure
			default label is "<TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension4Label>Structure"
		FinanceDimension5Structure
			default label is "<TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension5Label>Structure"
		FinanceDimension6Structure
			default label is "<TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension6Label>Structure"
		FinanceDimension7Structure
			default label is "<TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension7Label>Structure"
		FinanceDimension8Structure
			default label is "<TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension8Label>Structure"
		FinanceDimension9Structure
			default label is "<TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension9Label>Structure"
		FinanceDimension10Structure
			default label is "<TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension10Label>Structure"
				
    Transient Fields
		TransientAccountingUnitStructure is a AccountingUnitStructure
			derive value from DepartmentAccountingUnitStructure
		TransientDepartment1Structure	 is a FinanceDimension1Structure
			derive value from DepartmentDimension1Structure
		TransientDepartment2Structure	 is a FinanceDimension2Structure 
			derive value from DepartmentDimension2Structure
		TransientDepartment3Structure	 is a FinanceDimension3Structure
			derive value from DepartmentDimension3Structure
		TransientDepartment4Structure	 is a FinanceDimension4Structure
			derive value from DepartmentDimension4Structure
		TransientDepartment5Structure	 is a FinanceDimension5Structure
			derive value from DepartmentDimension5Structure
		TransientDepartment6Structure	 is a FinanceDimension6Structure
			derive value from DepartmentDimension6Structure
		TransientDepartment7Structure	 is a FinanceDimension7Structure
			derive value from DepartmentDimension7Structure
		TransientDepartment8Structure	 is a FinanceDimension8Structure
			derive value from DepartmentDimension8Structure
		TransientDepartment9Structure	 is a FinanceDimension9Structure
			derive value from DepartmentDimension9Structure
		TransientDepartment10Structure	 is a FinanceDimension10Structure
			derive value from DepartmentDimension10Structure
		TransientCostObject1Structure	 is a FinanceDimension1Structure
			derive value from CostObjectDimension1Structure
		TransientCostObject2Structure	 is a FinanceDimension2Structure 
			derive value from CostObjectDimension2Structure 
		TransientCostObject3Structure	 is a FinanceDimension3Structure
			derive value from CostObjectDimension3Structure
		TransientCostObject4Structure	 is a FinanceDimension4Structure
			derive value from CostObjectDimension4Structure
		TransientCostObject5Structure	 is a FinanceDimension5Structure
			derive value from CostObjectDimension5Structure
		TransientCostObject6Structure	 is a FinanceDimension6Structure
			derive value from CostObjectDimension6Structure
		TransientCostObject7Structure	 is a FinanceDimension7Structure
			derive value from CostObjectDimension7Structure
		TransientCostObject8Structure	 is a FinanceDimension8Structure
			derive value from CostObjectDimension8Structure
		TransientCostObject9Structure	 is a FinanceDimension9Structure
			derive value from CostObjectDimension9Structure
		TransientCostObject10Structure	 is a FinanceDimension10Structure
			derive value from CostObjectDimension10Structure
			
	Local Fields
		LocalAllocationControlView		is a AllocationControl view
		LocalEntity						is a AccountingEntity
		FoundIndirectAccountingUnit		is Boolean
		FoundDirectAccountingUnit		is Boolean
		LocalLedger						is a Ledger
		WithCostObject					is Boolean
		TotalCostObject					is Boolean
		AllocationRun
		AllocationPeriod				is a GeneralLedgerCalendarPeriod
		IndirectCoreWithoutCostObjects	is a TotalAmount
		DirectCoreWithoutCostObjects	is a TotalAmount
		DirectActualsWithCostObjects	is a TotalAmount
		DirectActualsTotal				is a TotalAmount
		IsCapacity						is Boolean
		CostObjectRoot					is a TrueCostCostObject 
		CostObjectString				is a TrueCostCostObject 
		DepartmentString				is a TrueCostDepartment
		Start							is AlphaUpper 7
		End								is AlphaUpper 7				


		EventUnitCountTotal				is Decimal 20.3
		EventPerMinuteDurationTotal		is Decimal 20.3
		Counter							is Numeric 12
		LocalTrueCostAllocationLine		is a TrueCostAllocationLine
		LocalAllocation					is a TrueCostAllocation
		CostBehaviorTotal				is a TotalAmount
		DirectVariableCore				is a TotalAmount
		LocalDate						is Date
		LocalAlphaDay					is Alpha 3
		LocalAlphaYear					is Alpha 4
		LocalJulianDate					is Alpha 7
		LocalCalendarStartPeriod		is AlphaUpper size 20
		LocalCalendarEndPeriod			is AlphaUpper size 20
		LocalPeriodType					is Numeric size 1
			States
				Year		     value is 1
				Quarter		     value is 2
				Month		     value is 3
				Week		     value is 4
		LocalEndPeriod					is Date
		LocalDayNumeric					is Numeric 3
		LocalDateAlpha					is Alpha 8
		LocalEndDay						is Alpha 3
		LocalEndYear					is Alpha 4
		LocalEndDate					is Alpha 8
		LocalDate1						is Date
		LocalRunName		 			is AlphaUpper 20
		LocalUseCapacityLedger			is Boolean
		LocalDisplayPeriod				is Alpha 30
		LocalAccount					is a GeneralLedgerChartAccount
		LocalDepartment					is a TrueCostDepartment
		LocalSourceDepartment			is a TrueCostDepartment
		LocalSourcePercentage			is a Percent
		LocalStep						is a AllocationStep
		LocalAllocationGroup			is a AllocationGroup
		LocalSourceTotalPercentage 		is like SourceTotalPercentage
		LocalSourceAllocationLine		is like SourceAllocationLine
		LocalSourceTotalPercentageView	is an SourceTotalPercentage view
		LocalSourceAllocationLineView	is an SourceAllocationLine view
				
		LocalCalendar					is a GeneralLedgerCalendar
		LocalAllocationRun				is an AllocationRun
	Derived Fields
		DepartmentAccountingUnitStructure is a DerivedField
			type is like AccountingUnitStructure
			restricted
			if (TrueCostConfiguration.DepartmentIsAccountingUnit)
				return DepartmentStructure
		DepartmentDimension1Structure is a DerivedField
			type is like FinanceDimension1Structure
			restricted
			if (TrueCostConfiguration.DepartmentIsDimension1)
				return DepartmentStructure
		DepartmentDimension2Structure is a DerivedField
			type is like FinanceDimension2Structure
			restricted
			if (TrueCostConfiguration.DepartmentIsDimension2)
				return DepartmentStructure
		DepartmentDimension3Structure is a DerivedField
			type is like FinanceDimension3Structure
			restricted
			if (TrueCostConfiguration.DepartmentIsDimension3)
				return DepartmentStructure
		DepartmentDimension4Structure is a DerivedField
			type is like FinanceDimension4Structure
			restricted
			if (TrueCostConfiguration.DepartmentIsDimension4)
				return DepartmentStructure
		DepartmentDimension5Structure is a DerivedField
			type is like FinanceDimension5Structure
			restricted
			if (TrueCostConfiguration.DepartmentIsDimension5)
				return DepartmentStructure
		DepartmentDimension6Structure is a DerivedField
			type is like FinanceDimension6Structure
			restricted
			if (TrueCostConfiguration.DepartmentIsDimension6)
				return DepartmentStructure
		DepartmentDimension7Structure is a DerivedField
			type is like FinanceDimension7Structure
			restricted
			if (TrueCostConfiguration.DepartmentIsDimension7)
				return DepartmentStructure
		DepartmentDimension8Structure is a DerivedField
			type is like FinanceDimension8Structure
			restricted
			if (TrueCostConfiguration.DepartmentIsDimension8)
				return DepartmentStructure
		DepartmentDimension9Structure is a DerivedField
			type is like FinanceDimension9Structure
			restricted
			if (TrueCostConfiguration.DepartmentIsDimension9)
				return DepartmentStructure
		DepartmentDimension10Structure is a DerivedField
			type is like FinanceDimension10Structure
			restricted
			if (TrueCostConfiguration.DepartmentIsDimension10)
				return DepartmentStructure
		CostObjectDimension1Structure is a DerivedField
			type is like FinanceDimension1Structure
			restricted
			if (TrueCostConfiguration.CostObjectIsDimension1)
				return CostObjectStructure
		CostObjectDimension2Structure is a DerivedField
			type is like FinanceDimension2Structure
			restricted
			if (TrueCostConfiguration.CostObjectIsDimension2)
				return CostObjectStructure
		CostObjectDimension3Structure is a DerivedField
			type is like FinanceDimension3Structure
			restricted
			if (TrueCostConfiguration.CostObjectIsDimension3)
				return CostObjectStructure
		CostObjectDimension4Structure is a DerivedField
			type is like FinanceDimension4Structure
			restricted
			if (TrueCostConfiguration.CostObjectIsDimension4)
				return CostObjectStructure
		CostObjectDimension5Structure is a DerivedField
			type is like FinanceDimension5Structure
			restricted
			if (TrueCostConfiguration.CostObjectIsDimension5)
				return CostObjectStructure
		CostObjectDimension6Structure is a DerivedField
			type is like FinanceDimension6Structure
			restricted
			if (TrueCostConfiguration.CostObjectIsDimension6)
				return CostObjectStructure
		CostObjectDimension7Structure is a DerivedField
			type is like FinanceDimension7Structure
			restricted
			if (TrueCostConfiguration.CostObjectIsDimension7)
				return CostObjectStructure
		CostObjectDimension8Structure is a DerivedField
			type is like FinanceDimension8Structure
			restricted
			if (TrueCostConfiguration.CostObjectIsDimension8)
				return CostObjectStructure
		CostObjectDimension9Structure is a DerivedField
			type is like FinanceDimension9Structure
			restricted
			if (TrueCostConfiguration.CostObjectIsDimension9)
				return CostObjectStructure
		CostObjectDimension10Structure is a DerivedField
			type is like FinanceDimension10Structure
			restricted
			if (TrueCostConfiguration.CostObjectIsDimension10)
				return CostObjectStructure
		GetCostObjectRoot is a DerivedField	
			type is like FinanceDimension1
			restricted
			if (TrueCostConfiguration.CostObjectIsDimension1)
				return first CostObjectRootDimension1Rel.FinanceDimension1
			if (TrueCostConfiguration.CostObjectIsDimension2)
				return first CostObjectRootDimension2Rel.FinanceDimension2
			if (TrueCostConfiguration.CostObjectIsDimension3)
				return first CostObjectRootDimension3Rel.FinanceDimension3
			if (TrueCostConfiguration.CostObjectIsDimension4)
				return first CostObjectRootDimension4Rel.FinanceDimension4
			if (TrueCostConfiguration.CostObjectIsDimension5)
				return first CostObjectRootDimension5Rel.FinanceDimension5
			if (TrueCostConfiguration.CostObjectIsDimension6)
				return first CostObjectRootDimension6Rel.FinanceDimension6
			if (TrueCostConfiguration.CostObjectIsDimension7)
				return first CostObjectRootDimension7Rel.FinanceDimension7
			if (TrueCostConfiguration.CostObjectIsDimension8)
				return first CostObjectRootDimension8Rel.FinanceDimension8
			if (TrueCostConfiguration.CostObjectIsDimension9)
				return first CostObjectRootDimension9Rel.FinanceDimension9
			if (TrueCostConfiguration.CostObjectIsDimension10)
				return first CostObjectRootDimension10Rel.FinanceDimension10
			return
		
		LineTotals is a DerivedField
			type is like TotalAmount
			restricted
			return (sum TransactionDetailsForCostBehaviorRel.Amount)
			
		JournalizedLineTotals is a DerivedField
			type is like TotalAmount
			restricted
			return (sum JournalizedDetailsForCostBehaviorRel.Amount)
		
		TotalsCubeMap is a DerivedField
			type is LPLText
			restricted
			if (TrueCostConfiguration.AccountingUnitSelected)
				if (TrueCostConfiguration.DepartmentIsAccountingUnit)
					TotalsCubeMap += "related.GeneralLedgerTotal.AccountingUnit = DepartmentAccountingUnitRel.AccountingUnit\n"
				else
					TotalsCubeMap += "related.GeneralLedgerTotal.AccountingUnit = TrueCostConfiguration.EnterpriseAUStructure.AccountingUnitTopNodeGroup.DimensionNode\n"
			if (TrueCostConfiguration.ProjectEntry)
				TotalsCubeMap += "related.GeneralLedgerTotal.Project = TrueCostConfiguration.EnterpriseProjectStructure.ProjectNode\n"
			if (TrueCostConfiguration.FinanceDimension1Entry)
				if (TrueCostConfiguration.DepartmentIsDimension1)
					TotalsCubeMap += "related.FinanceDimension1 = DepartmentDimension1Rel.FinanceDimension1\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension1)
					if (WithCostObject)
						TotalsCubeMap += "related.FinanceDimension1 = CostObjectDimension1Rel.FinanceDimension1\n"
				else
					TotalsCubeMap += "related.FinanceDimension1 = TrueCostConfiguration.EnterpriseDim1Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension2Entry)
				if (TrueCostConfiguration.DepartmentIsDimension2)
					TotalsCubeMap += "related.FinanceDimension2 = DepartmentDimension2Rel.FinanceDimension2\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension2)
					if (WithCostObject)
						TotalsCubeMap += "related.FinanceDimension2 = CostObjectDimension2Rel.FinanceDimension2\n"
				else
					TotalsCubeMap += "related.FinanceDimension2 = TrueCostConfiguration.EnterpriseDim2Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension3Entry)
				if (TrueCostConfiguration.DepartmentIsDimension3)
					TotalsCubeMap += "related.FinanceDimension3 = DepartmentDimension3Rel.FinanceDimension3\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension3)
					if (WithCostObject)
						TotalsCubeMap += "related.FinanceDimension3 = CostObjectDimension3Rel.FinanceDimension3\n"
				else
					TotalsCubeMap += "related.FinanceDimension3 = TrueCostConfiguration.EnterpriseDim3Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension4Entry)
				if (TrueCostConfiguration.DepartmentIsDimension4)
					TotalsCubeMap += "related.FinanceDimension4 = DepartmentDimension4Rel.FinanceDimension4\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension4)
					if (WithCostObject)
						TotalsCubeMap += "related.FinanceDimension4 = CostObjectDimension4Rel.FinanceDimension4\n"
				else
					TotalsCubeMap += "related.FinanceDimension4 = TrueCostConfiguration.EnterpriseDim4Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension5Entry)
				if (TrueCostConfiguration.DepartmentIsDimension5)
					TotalsCubeMap += "related.FinanceDimension5 = DepartmentDimension5Rel.FinanceDimension5\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension5)
					if (WithCostObject)
						TotalsCubeMap += "related.FinanceDimension5 = CostObjectDimension5Rel.FinanceDimension5\n"
				else
					TotalsCubeMap += "related.FinanceDimension5 = TrueCostConfiguration.EnterpriseDim5Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension6Entry)
				if (TrueCostConfiguration.DepartmentIsDimension6)
					TotalsCubeMap += "related.FinanceDimension6 = DepartmentDimension6Rel.FinanceDimension6\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension6)
					if (WithCostObject)
						TotalsCubeMap += "related.FinanceDimension6 = CostObjectDimension6Rel.FinanceDimension6\n"
				else
					TotalsCubeMap += "related.FinanceDimension6 = TrueCostConfiguration.EnterpriseDim6Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension7Entry)
				if (TrueCostConfiguration.DepartmentIsDimension7)
					TotalsCubeMap += "related.FinanceDimension7 = DepartmentDimension7Rel.FinanceDimension7\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension7)
					if (WithCostObject)
						TotalsCubeMap += "related.FinanceDimension7 = CostObjectDimension7Rel.FinanceDimension7\n"
				else
					TotalsCubeMap += "related.FinanceDimension7 = TrueCostConfiguration.EnterpriseDim7Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension8Entry)
				if (TrueCostConfiguration.DepartmentIsDimension8)
					TotalsCubeMap += "related.FinanceDimension8 = DepartmentDimension8Rel.FinanceDimension8\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension8)
					if (WithCostObject)
						TotalsCubeMap += "related.FinanceDimension8 = CostObjectDimension8Rel.FinanceDimension8\n"
				else
					TotalsCubeMap += "related.FinanceDimension8 = TrueCostConfiguration.EnterpriseDim8Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension9Entry)
				if (TrueCostConfiguration.DepartmentIsDimension9)
					TotalsCubeMap += "related.FinanceDimension9 = DepartmentDimension9Rel.FinanceDimension9\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension9)
					if (WithCostObject)
						TotalsCubeMap += "related.FinanceDimension9 = CostObjectDimension9Rel.FinanceDimension9\n"
				else
					TotalsCubeMap += "related.FinanceDimension9 = TrueCostConfiguration.EnterpriseDim9Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension10Entry)
				if (TrueCostConfiguration.DepartmentIsDimension10)
					TotalsCubeMap += "related.FinanceDimension10 = DepartmentDimension10Rel.FinanceDimension10\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension10)
					if (WithCostObject)
						TotalsCubeMap += "related.FinanceDimension10 = CostObjectDimension10Rel.FinanceDimension10\n"
				else
					TotalsCubeMap += "related.FinanceDimension10 = TrueCostConfiguration.EnterpriseDim10Structure.DimensionNode\n"
			return TotalsCubeMap
												
		AllocationCubeMap is a DerivedField
			type is LPLText
			if (TrueCostConfiguration.AccountingUnitSelected)
				if (TrueCostConfiguration.DepartmentIsAccountingUnit)
					AllocationCubeMap += "related.FinanceCodeBlock.AccountingUnit = DepartmentAccountingUnitRel.AccountingUnit\n"
				else
					AllocationCubeMap += "related.FinanceCodeBlock.AccountingUnit = TrueCostConfiguration.EnterpriseAUStructure.AccountingUnitTopNodeGroup.DimensionNode\n"
			if (TrueCostConfiguration.ProjectEntry)
				AllocationCubeMap += "related.FinanceCodeBlock.Project = TrueCostConfiguration.EnterpriseProjectStructure.ProjectNode\n"
			if (TrueCostConfiguration.FinanceDimension1Entry)
				if (TrueCostConfiguration.DepartmentIsDimension1)
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension1 = DepartmentDimension1Rel.FinanceDimension1\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension1)
					if (WithCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension1 = CostObjectDimension1Rel.FinanceDimension1\n"
					else
					if (TotalCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension1 = TransientCostObject1Structure.DimensionNode\n"	
				else
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension1 = TrueCostConfiguration.EnterpriseDim1Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension2Entry)
				if (TrueCostConfiguration.DepartmentIsDimension2)
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension2 = DepartmentDimension2Rel.FinanceDimension2\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension2)
					if (WithCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension2 = CostObjectDimension2Rel.FinanceDimension2\n"
					else
					if (TotalCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension2 = TransientCostObject2Structure.DimensionNode\n"	
				else
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension2 = TrueCostConfiguration.EnterpriseDim2Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension3Entry)
				if (TrueCostConfiguration.DepartmentIsDimension3)
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension3 = DepartmentDimension3Rel.FinanceDimension3\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension3)
					if (WithCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension3 = CostObjectDimension3Rel.FinanceDimension3\n"
					else
					if (TotalCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension3 = TransientCostObject3Structure.DimensionNode\n"	
				else
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension3 = TrueCostConfiguration.EnterpriseDim3Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension4Entry)
				if (TrueCostConfiguration.DepartmentIsDimension4)
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension4 = DepartmentDimension4Rel.FinanceDimension4\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension4)
					if (WithCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension4 = CostObjectDimension4Rel.FinanceDimension4\n"
					else
					if (TotalCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension4 = TransientCostObject4Structure.DimensionNode\n"	
				else
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension4 = TrueCostConfiguration.EnterpriseDim4Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension5Entry)
				if (TrueCostConfiguration.DepartmentIsDimension5)
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension5 = DepartmentDimension5Rel.FinanceDimension5\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension5)
					if (WithCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension5 = CostObjectDimension5Rel.FinanceDimension5\n"
					else
					if (TotalCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension5 = TransientCostObject5Structure.DimensionNode\n"	
				else
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension5 = TrueCostConfiguration.EnterpriseDim5Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension6Entry)
				if (TrueCostConfiguration.DepartmentIsDimension6)
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension6 = DepartmentDimension6Rel.FinanceDimension6\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension6)
					if (WithCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension6 = CostObjectDimension6Rel.FinanceDimension6\n"
					else
					if (TotalCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension6 = TransientCostObject6Structure.DimensionNode\n"	
				else
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension6 = TrueCostConfiguration.EnterpriseDim6Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension7Entry)
				if (TrueCostConfiguration.DepartmentIsDimension7)
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension7 = DepartmentDimension7Rel.FinanceDimension7\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension7)
					if (WithCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension7 = CostObjectDimension7Rel.FinanceDimension7\n"
					else
					if (TotalCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension7 = TransientCostObject7Structure.DimensionNode\n"	
				else
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension7 = TrueCostConfiguration.EnterpriseDim7Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension8Entry)
				if (TrueCostConfiguration.DepartmentIsDimension8)
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension8 = DepartmentDimension8Rel.FinanceDimension8\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension8)
					if (WithCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension8 = CostObjectDimension8Rel.FinanceDimension8\n"
					else
					if (TotalCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension8 = TransientCostObject8Structure.DimensionNode\n"	
				else
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension8 = TrueCostConfiguration.EnterpriseDim8Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension9Entry)
				if (TrueCostConfiguration.DepartmentIsDimension9)
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension9 = DepartmentDimension9Rel.FinanceDimension9\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension9)
					if (WithCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension9 = CostObjectDimension9Rel.FinanceDimension9\n"
					else
					if (TotalCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension9 = TransientCostObject9Structure.DimensionNode\n"	
				else
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension9 = TrueCostConfiguration.EnterpriseDim9Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension10Entry)
				if (TrueCostConfiguration.DepartmentIsDimension10)
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension10 = DepartmentDimension10Rel.FinanceDimension10\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension10)
					if (WithCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension10 = CostObjectDimension10Rel.FinanceDimension10\n"
					else
					if (TotalCostObject)
						AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension10 = TransientCostObject10Structure.DimensionNode\n"	
				else
					AllocationCubeMap += "related.FinanceCodeBlock.FinanceDimension10 = TrueCostConfiguration.EnterpriseDim10Structure.DimensionNode\n"
			return AllocationCubeMap
								
		DepartmentsCubeMap is a DerivedField
			type is LPLText
			if (TrueCostConfiguration.AccountingUnitSelected)
				if (TrueCostConfiguration.DepartmentIsAccountingUnit)
					DepartmentsCubeMap += "related.FinanceCodeBlock.AccountingUnit = DepartmentAccountingUnitRel.AccountingUnit\n"
				else
					DepartmentsCubeMap += "related.FinanceCodeBlock.AccountingUnit = TrueCostConfiguration.EnterpriseAUStructure.AccountingUnitTopNodeGroup.DimensionNode\n"
			else
				DepartmentsCubeMap += "related.AccountingEntity = EntityRel.AccountingEntity\n"
			if (TrueCostConfiguration.ProjectEntry)
				DepartmentsCubeMap += "related.FinanceCodeBlock.Project = TrueCostConfiguration.EnterpriseProjectStructure.ProjectNode\n"
			if (TrueCostConfiguration.FinanceDimension1Entry)
				if (TrueCostConfiguration.DepartmentIsDimension1)
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension1 = DepartmentDimension1Rel.FinanceDimension1\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension1)
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension1 where (ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount not entered)\n"
				else
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension1 = TrueCostConfiguration.EnterpriseDim1Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension2Entry)
				if (TrueCostConfiguration.DepartmentIsDimension2)
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension2 = DepartmentDimension2Rel.FinanceDimension2\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension2)
					if (WithCostObject)
						DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension2 = CostObjectDimension2Rel.FinanceDimension2\n"
				else
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension2 = TrueCostConfiguration.EnterpriseDim2Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension3Entry)
				if (TrueCostConfiguration.DepartmentIsDimension3)
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension3 = DepartmentDimension3Rel.FinanceDimension3\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension3)
					if (WithCostObject)
						DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension3 = CostObjectDimension3Rel.FinanceDimension3\n"
				else
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension3 = TrueCostConfiguration.EnterpriseDim3Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension4Entry)
				if (TrueCostConfiguration.DepartmentIsDimension4)
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension4 = DepartmentDimension4Rel.FinanceDimension4\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension4)
					if (WithCostObject)
						DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension4 = CostObjectDimension4Rel.FinanceDimension4\n"
				else
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension4 = TrueCostConfiguration.EnterpriseDim4Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension5Entry)
				if (TrueCostConfiguration.DepartmentIsDimension5)
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension5 = DepartmentDimension5Rel.FinanceDimension5\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension5)
					if (WithCostObject)
						DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension5 = CostObjectDimension5Rel.FinanceDimension5\n"
				else
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension5 = TrueCostConfiguration.EnterpriseDim5Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension6Entry)
				if (TrueCostConfiguration.DepartmentIsDimension6)
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension6 = DepartmentDimension6Rel.FinanceDimension6\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension6)
					if (WithCostObject)
						DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension6 = CostObjectDimension6Rel.FinanceDimension6\n"
				else
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension6 = TrueCostConfiguration.EnterpriseDim6Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension7Entry)
				if (TrueCostConfiguration.DepartmentIsDimension7)
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension7 = Dimension7ShadowRel.FinanceDimension7\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension7)
					if (WithCostObject)
						DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension7 = CostObjectDimension7Rel.FinanceDimension7\n"
				else
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension7 = TrueCostConfiguration.EnterpriseDim7Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension8Entry)
				if (TrueCostConfiguration.DepartmentIsDimension8)
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension8 = DepartmentDimension8Rel.FinanceDimension8\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension8)
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension8 = Dimension8ShadowRel.FinanceDimension8\n"
				else
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension8 = TrueCostConfiguration.EnterpriseDim8Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension9Entry)
				if (TrueCostConfiguration.DepartmentIsDimension9)
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension9 = DepartmentDimension9Rel.FinanceDimension9\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension9)
					if (WithCostObject)
						DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension9 = CostObjectDimension9Rel.FinanceDimension9\n"
				else
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension9 = TrueCostConfiguration.EnterpriseDim9Structure.DimensionNode\n"
			if (TrueCostConfiguration.FinanceDimension10Entry)
				if (TrueCostConfiguration.DepartmentIsDimension10)
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension10 = DepartmentDimension10Rel.FinanceDimension10\n"
				else 
				if (TrueCostConfiguration.CostObjectIsDimension10)
					if (WithCostObject)
						DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension10 = CostObjectDimension10Rel.FinanceDimension10\n"
				else
					DepartmentsCubeMap += "related.FinanceCodeBlock.FinanceDimension10 = TrueCostConfiguration.EnterpriseDim10Structure.DimensionNode\n"
			DepartmentsCubeMap += "related.AllocationLine where (ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount not empty)\n"
			return DepartmentsCubeMap

		JulianDate is a DerivedField
			type is Alpha 7
			restricted
			LocalAlphaYear = LocalDate year
			LocalAlphaDay  = LocalDate year day
			JulianDate = LocalAlphaYear
			if (LocalAlphaDay size = 1)
				JulianDate += "00"
			else
			if (LocalAlphaDay size = 2)
				JulianDate += "0"
			JulianDate += LocalAlphaDay 
			
		JulianEndDate is a DerivedField
			type is Alpha 7
			restricted			
			LocalDate		 = current corporate date
			LocalEndDate	 = LocalDate period
			LocalEndDate	+= LocalDate days in month
			LocalDate1		 = LocalEndDate

			LocalEndYear	 = LocalDate1 year
			LocalEndDay  	 = LocalDate1 year day			
			JulianEndDate	 = LocalEndYear
			if (LocalAlphaDay size = 1)
				JulianEndDate	+= "00"
			else
			if (LocalAlphaDay size = 2)
				JulianEndDate	+= "0"
			JulianEndDate += LocalEndDay			
			
		DerivedEndDate is a DerivedField
			type is Date 
			restricted
			LocalDayNumeric = JulianEndDate[5:7]
			LocalDateAlpha  = JulianEndDate[1:4] + "0101" 
			LocalDate 		= LocalDateAlpha
			LocalDate 	   += (LocalDayNumeric - 1)
			return LocalDate
		
		JulianStartDate is a DerivedField
			type is Alpha 7
			restricted			
			LocalDate		 = current corporate date
			LocalEndDate	 = LocalDate period
			LocalEndDate	+= "01" 
			LocalDate1		 = LocalEndDate

			LocalEndYear	 = LocalDate1 year
			LocalEndDay  	 = LocalDate1 year day			
			JulianStartDate	 = LocalEndYear
			if (LocalAlphaDay size = 1)
				JulianStartDate	+= "00"
			else
			if (LocalAlphaDay size = 2)
				JulianStartDate	+= "0"
			JulianStartDate += LocalEndDay
		
		DerivedStartDate is a DerivedField
			type is Date 
			restricted
			LocalDayNumeric = JulianStartDate[5:7]
			LocalDateAlpha  = JulianStartDate[1:4] + "0101" 
			LocalDate 		= LocalDateAlpha
			LocalDate 	   += (LocalDayNumeric - 1)
			return LocalDate

		AllocationControlCodeAndDescription  is a MessageField
			"<TrueCostAllocationControl>_-_<Description>"
	Conditions
		DepartmentStructureIsEntered
			restricted
			when (TransientAccountingUnitStructure entered
			or TransientDepartment1Structure entered
			or TransientDepartment2Structure entered
			or TransientDepartment3Structure entered
			or TransientDepartment4Structure entered
			or TransientDepartment5Structure entered
			or TransientDepartment6Structure entered
			or TransientDepartment7Structure entered
			or TransientDepartment8Structure entered
			or TransientDepartment9Structure entered
			or TransientDepartment10Structure entered)

		PracticalCapacitySetup
			restricted
			when (TrueCostAllocatonLinePracticalCapacityVolumeRel exist)

		RunRebuildRequired
			restricted
			when (TrueCostConfiguration.HasCalendar 
			and TrueCostConfiguration.RebuildRequired
			and TrueCostConfiguration.TrueCostResourceUtilizationDriverEventExists)
		
		IsSourceParameterEmpty
			restricted
			when (SourceValidationAllocation not entered
			and SourceValidationAllocationGroup not entered) 	

		RecordExists
			restricted
			when (TrueCostAllocationControl exists)
		JournalizedRecordsExist
			restricted
			when (AllocationJournalizeLogRel exists)
			
	Relations
		CoreLedgerRel
			one-to-one relation to Ledger
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= TrueCostConfiguration
				related.Ledger							= TrueCostConfiguration.CoreLedger
		CalendarPeriodsMatchingPeriodTypeRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNode
				related.FinanceEnterpriseGroup 				= TrueCostConfiguration
				related.TopNode		 						= Calendar.TopNode
			Instance Selection
				where (related.PeriodType		 			= 3)
 		TrueCostAllocationsRel is a TrueCostAllocation set
 		TrueCostAllocationLinesRel is a TrueCostAllocationLine set
		ExpenseAccountsInChartRel
			one-to-one relation to ReportingChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 				= TrueCostConfiguration
				related.ReportingChart						= Chart
				related.GeneralLedgerChartAccount			= ExpenseAccounts
 		AllocationJournalizeLogRel
 			one-to-many relation to AllocationJournalizeLog
 			Field Mapping uses ByPeriod
 				related.FinanceEnterpriseGroup 				= TrueCostConfiguration
 				related.AllocationSourceSystem 				= AllocationSourceSystem.TrueCost
 				related.AllocationControl	 				= AllocationControl
		EntityRel
			one-to-many relation to AccountingEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= TrueCostConfiguration
 		CostObjectRootDimension1Rel
 			one-to-many relation to FinanceDimension1Hierarchy
			Field Mapping uses ByParentDimension
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.ParentDimension				= TransientCostObject1Structure.DimensionNode			
 		CostObjectRootDimension2Rel
 			one-to-many relation to FinanceDimension2Hierarchy
			Field Mapping uses ByParentDimension
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.ParentDimension				= TransientCostObject2Structure.DimensionNode			
 		CostObjectRootDimension3Rel
 			one-to-many relation to FinanceDimension3Hierarchy
			Field Mapping uses ByParentDimension
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.ParentDimension				= TransientCostObject3Structure.DimensionNode			
 		CostObjectRootDimension4Rel
 			one-to-many relation to FinanceDimension4Hierarchy
			Field Mapping uses ByParentDimension
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.ParentDimension				= TransientCostObject4Structure.DimensionNode			
 		CostObjectRootDimension5Rel
 			one-to-many relation to FinanceDimension5Hierarchy
			Field Mapping uses ByParentDimension
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.ParentDimension				= TransientCostObject5Structure.DimensionNode			
 		CostObjectRootDimension6Rel
 			one-to-many relation to FinanceDimension6Hierarchy
			Field Mapping uses ByParentDimension
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.ParentDimension				= TransientCostObject6Structure.DimensionNode			
 		CostObjectRootDimension7Rel
 			one-to-many relation to FinanceDimension7Hierarchy
			Field Mapping uses ByParentDimension
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.ParentDimension				= TransientCostObject7Structure.DimensionNode			
 		CostObjectRootDimension8Rel
 			one-to-many relation to FinanceDimension8Hierarchy
			Field Mapping uses ByParentDimension
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.ParentDimension				= TransientCostObject8Structure.DimensionNode			
 		CostObjectRootDimension9Rel
 			one-to-many relation to FinanceDimension9Hierarchy
			Field Mapping uses ByParentDimension
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.ParentDimension				= TransientCostObject9Structure.DimensionNode			
 		CostObjectRootDimension10Rel
 			one-to-many relation to FinanceDimension10Hierarchy
			Field Mapping uses ByParentDimension
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.ParentDimension				= TransientCostObject10Structure.DimensionNode	
		CostObjectDimension1Rel
			one-to-one relation to FinanceDimension1		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension1	   		= GetCostObjectRoot				
		CostObjectDimension2Rel
			one-to-one relation to FinanceDimension2		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension2	   		= GetCostObjectRoot				
		CostObjectDimension3Rel
			one-to-one relation to FinanceDimension3		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension3	   		= GetCostObjectRoot				
		CostObjectDimension4Rel
			one-to-one relation to FinanceDimension4		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension4	   		= GetCostObjectRoot				
		CostObjectDimension5Rel
			one-to-one relation to FinanceDimension5		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension5	   		= GetCostObjectRoot				
		CostObjectDimension6Rel
			one-to-one relation to FinanceDimension6		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension6	   		= GetCostObjectRoot				
		CostObjectDimension7Rel
			one-to-one relation to FinanceDimension7		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension7	   		= GetCostObjectRoot				
		CostObjectDimension8Rel
			one-to-one relation to FinanceDimension8		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension8	   		= GetCostObjectRoot				
		CostObjectDimension9Rel
			one-to-one relation to FinanceDimension9		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension9	   		= GetCostObjectRoot				
		CostObjectDimension10Rel
			one-to-one relation to FinanceDimension10		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension10	   		= GetCostObjectRoot				
		DepartmentAccountingUnitRel
			one-to-one relation to AccountingUnit		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.AccountingEntity			= LocalEntity
				related.AccountingUnit	   			= TransientAccountingUnitStructure.StructureSequence + "_" + DepartmentString				
		DepartmentDimension1Rel
			one-to-one relation to FinanceDimension1		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension1	   		= TransientDepartment1Structure.StructureSequence + "_" + DepartmentString				
		DepartmentDimension2Rel
			one-to-one relation to FinanceDimension2		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension2	   		= TransientDepartment2Structure.StructureSequence + "_" + DepartmentString				
		DepartmentDimension3Rel
			one-to-one relation to FinanceDimension3		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension3	   		= TransientDepartment3Structure.StructureSequence + "_" + DepartmentString				
		DepartmentDimension4Rel
			one-to-one relation to FinanceDimension4		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension4	   		= TransientDepartment4Structure.StructureSequence + "_" + DepartmentString				
		DepartmentDimension5Rel
			one-to-one relation to FinanceDimension5		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension5	   		= TransientDepartment5Structure.StructureSequence + "_" + DepartmentString				
		DepartmentDimension6Rel
			one-to-one relation to FinanceDimension6		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension6	   		= TransientDepartment6Structure.StructureSequence + "_" + DepartmentString				
		DepartmentDimension7Rel
			one-to-one relation to FinanceDimension7		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension7	   		= TransientDepartment7Structure.StructureSequence + "_" + DepartmentString				
		DepartmentDimension8Rel
			one-to-one relation to FinanceDimension8		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension8	   		= TransientDepartment8Structure.StructureSequence + "_" + DepartmentString				
		DepartmentDimension9Rel
			one-to-one relation to FinanceDimension9		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension9	   		= TransientDepartment9Structure.StructureSequence + "_" + DepartmentString				
		DepartmentDimension10Rel
			one-to-one relation to FinanceDimension10		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	    = TrueCostConfiguration
				related.FinanceDimension10	   		= TransientDepartment10Structure.StructureSequence + "_" + DepartmentString	
							
		Dimension7ShadowRel
			one-to-many relation to FinanceDimension7Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= TrueCostConfiguration

				related.SummaryFinanceDimension7			= TransientDepartment7Structure.StructureSequence + "_" + DepartmentString
			Instance Selection
				where (related.DimensionType.Posting)								
		Dimension8ShadowRel
			one-to-many relation to FinanceDimension8Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= TrueCostConfiguration

				related.SummaryFinanceDimension8			= GetCostObjectRoot
			Instance Selection
				where (related.DimensionType.Posting)
		LastStepRel
			one-to-one relation to AllocationStep
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= TrueCostConfiguration
				related.AllocationStep				= 100
		DetailRel
			one-to-many relation to AllocationTransactionDetail
			Field Mapping uses ByAllocationAndStep
				related.FinanceEnterpriseGroup				= TrueCostConfiguration
				related.AllocationRun						= AllocationRun				
			Instance Selection
				where (related.AllocationStep				= -1
				or related.AllocationStep					= -100)

		UnitCostRel
			one-to-one relation to TrueCostUnitCost
			Field Mapping uses symbolic key
				related.TrueCostConfiguration			= TrueCostConfiguration
				related.TrueCostAllocationControl		= TrueCostAllocationControl
				related.GeneralLedgerCalendarPeriod		= AllocationPeriod
				related.AllocationRun					= AllocationRun
				related.AccountingEntity				= LocalEntity
				related.TrueCostUnitCost.Department		= DepartmentString
				related.TrueCostUnitCost.CostObject		= CostObjectString
				related.TrueCostUnitCost.IsCapacity		= IsCapacity
				
		CostsRel
			one-to-many relation to TrueCostUnitCost
			Field Mapping uses symbolic key
				related.TrueCostConfiguration		= TrueCostConfiguration
				related.TrueCostAllocationControl	= TrueCostAllocationControl
				related.GeneralLedgerCalendarPeriod	= AllocationPeriod
			
		EventsUnitCountDriverRel
			one-to-many relation to TrueCostDriverEvent
			Field Mapping uses ByEventDateDescending
				related.TrueCostConfiguration						= TrueCostConfiguration
				related.AccountingEntity							= LocalEntity
				related.TrueCostDriverEvent.Department 				= DepartmentString
			Instance Selection 
				where (related.TrueCostDriver.IsUnitCountDriver
				and related.TrueCostDriverEvent.CostObject 			= CostObjectString
				and related.TrueCostDriverEvent.EventDateJulian 	>= Start
				and related.TrueCostDriverEvent.EventDateJulian 	<= End)
				
		EventsPerMinuteDurationDriverRel
			one-to-many relation to TrueCostDriverEvent
			Field Mapping uses ByEventDateDescending
				related.TrueCostConfiguration						= TrueCostConfiguration
				related.AccountingEntity							= LocalEntity
				related.TrueCostDriverEvent.Department 				= DepartmentString
			Instance Selection 
				where (related.TrueCostDriver.IsPerMinuteDurationDriver
				and related.TrueCostDriverEvent.CostObject 			= CostObjectString
				and related.TrueCostDriverEvent.EventDateJulian 	>= Start
				and related.TrueCostDriverEvent.EventDateJulian 	<= End)
				
		TransactionDetailsForCostBehaviorRel
			one-to-many relation to AllocationTransactionDetail
			Field Mapping uses ByAllocationLine
				related.FinanceEnterpriseGroup	= TrueCostConfiguration
				related.AllocationSourceSystem  = AllocationSourceSystem.TrueCost
				related.AllocationControl		= AllocationControl
				related.AllocationLine			= LocalTrueCostAllocationLine
				related.AllocationRun			= AllocationRun
			Instance Selection
				where (related.Direction.PostTo)
				
		JournalizedDetailsForCostBehaviorRel		
			one-to-many relation to AllocationJournalizedDetail
			Field Mapping uses ByAllocationLine
				related.FinanceEnterpriseGroup	= TrueCostConfiguration
				related.AllocationSourceSystem  = AllocationSourceSystem.TrueCost
				related.AllocationControl		= AllocationControl
				related.AllocationLine			= LocalTrueCostAllocationLine
				related.AllocationRun			= AllocationRun
			Instance Selection
				where (related.Direction.PostTo)
				
		CostBehaviorSummaryRel
			one-to-many relation to TrueCostCostBehaviorSummary
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= TrueCostConfiguration
				related.AllocationRun			= AllocationRun
			Instance Selection
				where (related.CostBehavior		= LocalTrueCostAllocationLine.TrueCostCostBehavior.CostBehavior)
				
		TrueCostAllocationLinesCostBehaviorRel
 			one-to-many relation to TrueCostAllocationLine
 			Field Mapping uses symbolic key
 				related.TrueCostConfiguration				= TrueCostConfiguration
 				related.TrueCostAllocationControl			= TrueCostAllocationControl
 				related.TrueCostAllocation					= LocalAllocation
			Instance Selection
				where (related.Active
				and    related.TrueCostCostBehavior entered)

		TrueCostAllocatonLinePracticalCapacityVolumeRel
			one-to-many relation to TrueCostAllocationLine
			Field Mapping uses ByWithinDepartment
 				related.TrueCostConfiguration				= TrueCostConfiguration
 				related.TrueCostAllocationControl			= TrueCostAllocationControl
 				related.IsWithinDepartment					= true
			Instance Selection
				where ((related.Active and related.UseActualVolume = false)
				and    (LocalAllocation not entered or related.TrueCostAllocation = LocalAllocation))
				
		UnutilizedCapacityCostObjectRel
    		one-to-one relation to UnutilizedCapacityCostObject
    		Field Mapping uses symbolic key
    			related.TrueCostConfiguration 							= TrueCostConfiguration
    			related.UnutilizedCapacityCostObject.Structure			= TrueCostAllocationControl.CostObjectStructure
    			related.UnutilizedCapacityCostObject.SummaryCostObject 	= TrueCostAllocatonLinePracticalCapacityVolumeRel.TargetCostObjects

		AllocationControlRel
    		one-to-one relation to AllocationControl
    		Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup				= TrueCostConfiguration
    			related.AllocationSourceSystem 				= AllocationSourceSystem.TrueCost
    			related.AllocationControl					= "TC_" + TrueCostAllocationControl

		GeneralLedgerCalendarPeriodsRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNodeTypeAndJulianDates
				related.FinanceEnterpriseGroup 		= TrueCostConfiguration
				related.TopNode		 				= Calendar.TopNode
				related.PeriodType				 	= LocalPeriodType
				related.EndDateJulian				>= LocalJulianDate
			Instance Selection
				where (related.StartDateJulian		<= LocalJulianDate)
		GeneralLedgerCalendarPeriodRangeRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNodeTypeAndJulianDates
				related.FinanceEnterpriseGroup 		= TrueCostConfiguration
				related.TopNode		 				= Calendar.TopNode
				related.PeriodType				 	= LocalPeriodType				
			Instance Selection
				where (related.GeneralLedgerCalendarPeriod	>= LocalCalendarStartPeriod
				and related.GeneralLedgerCalendarPeriod		<= LocalCalendarEndPeriod)
		AllocationRunNameRel
			one-to-many relation to AllocationRun
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= TrueCostConfiguration
			Instance Selection
				where (related.AllocationSourceSystem	= SourceSystem
				and    related.AllocationPeriod			= AllocationPeriod
				and    related.UseCapacityLedger		= LocalUseCapacityLedger
				and    related.RunName					= LocalRunName
				and   (related.Status.Started
				or     related.Status.Completed
				or     related.Status.Finalized
				or     related.Status.Journalized
				or     related.Status.JournalizeInProcess))		

		DepartmentShadow1Rel 
    		one-to-many relation to FinanceDimension1Shadow
    		Field Mapping uses BySummaryDimension
    			related.FinanceEnterpriseGroup 		= TrueCostConfiguration
    			related.SummaryFinanceDimension1	= LocalSourceDepartment
    		Instance Selection
				where (related.DimensionType.Posting)
		DepartmentShadow2Rel 
    		one-to-many relation to FinanceDimension2Shadow
    		Field Mapping uses BySummaryDimension
    			related.FinanceEnterpriseGroup 		= TrueCostConfiguration
    			related.SummaryFinanceDimension2	= LocalSourceDepartment
    		Instance Selection
				where (related.DimensionType.Posting)
		DepartmentShadow3Rel 
    		one-to-many relation to FinanceDimension3Shadow
    		Field Mapping uses BySummaryDimension
    			related.FinanceEnterpriseGroup 		= TrueCostConfiguration
    			related.SummaryFinanceDimension3	= LocalSourceDepartment
    		Instance Selection
				where (related.DimensionType.Posting)
		DepartmentShadow4Rel 
    		one-to-many relation to FinanceDimension4Shadow
			Field Mapping uses BySummaryDimension
    			related.FinanceEnterpriseGroup 		= TrueCostConfiguration
				related.SummaryFinanceDimension4	= LocalSourceDepartment
    		Instance Selection
				where (related.DimensionType.Posting)
		DepartmentShadow5Rel			
			one-to-many relation to FinanceDimension5Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup		= TrueCostConfiguration
				related.SummaryFinanceDimension5	= LocalSourceDepartment
    		Instance Selection
				where (related.DimensionType.Posting)
		DepartmentShadow6Rel 
    		one-to-many relation to FinanceDimension6Shadow
    		Field Mapping uses BySummaryDimension
    			related.FinanceEnterpriseGroup 		= TrueCostConfiguration
    			related.SummaryFinanceDimension6	= LocalSourceDepartment
    		Instance Selection
				where (related.DimensionType.Posting)
		DepartmentShadow7Rel 
    		one-to-many relation to FinanceDimension7Shadow
    		Field Mapping uses BySummaryDimension
    			related.FinanceEnterpriseGroup 		= TrueCostConfiguration
    			related.SummaryFinanceDimension7	= LocalSourceDepartment
    		Instance Selection
				where (related.DimensionType.Posting)
		DepartmentShadow8Rel 
    		one-to-many relation to FinanceDimension8Shadow
    		Field Mapping uses BySummaryDimension
    			related.FinanceEnterpriseGroup 		= TrueCostConfiguration
    			related.SummaryFinanceDimension8	= LocalSourceDepartment
    		Instance Selection
				where (related.DimensionType.Posting)
		DepartmentShadow9Rel 
    		one-to-many relation to FinanceDimension9Shadow
    		Field Mapping uses BySummaryDimension
    			related.FinanceEnterpriseGroup 		= TrueCostConfiguration
    			related.SummaryFinanceDimension9	= LocalSourceDepartment
    		Instance Selection
				where (related.DimensionType.Posting)
		DepartmentShadow10Rel 
    		one-to-many relation to FinanceDimension10Shadow
    		Field Mapping uses BySummaryDimension
    			related.FinanceEnterpriseGroup 		= TrueCostConfiguration
    			related.SummaryFinanceDimension10	= LocalSourceDepartment
    		Instance Selection
				where (related.DimensionType.Posting)
		DepartmentShadow0Rel 
    		one-to-many relation to AccountingUnitShadow
    		Field Mapping uses BySummaryAccountingUnit
    			related.FinanceEnterpriseGroup 		= TrueCostConfiguration
				related.SummaryEntity				= LocalEntity 
    			related.SummaryAccountingUnit		= LocalSourceDepartment
    		Instance Selection
				where (related.AccountingUnitType.Posting)
		
		TrueCostAllocationLineRel
			one-to-many relation to TrueCostAllocationLine
			Field Mapping uses symbolic key
				related.TrueCostConfiguration 		= TrueCostConfiguration
				related.TrueCostAllocationControl 	= TrueCostAllocationControl				
			Instance Selection
				where (related.Active
				and (LocalAllocation 		not entered or related.TrueCostAllocation =  LocalAllocation)
				and (LocalAllocationGroup 	not entered or related.TrueCostAllocation.AllocationGroup = LocalAllocationGroup))
				
		SourceTotalPercentageRel
			one-to-one relation to SourceTotalPercentage
			Field Mapping uses BySourceDepartment
				related.TrueCostConfiguration		= TrueCostConfiguration
				related.TrueCostAllocationControl	= TrueCostAllocationControl				
				related.Ledger						= LocalLedger
				related.AccountingEntity			= LocalEntity 
				related.Account						= LocalAccount
				related.Department					= LocalDepartment
				
		SourceValidationReportRel
			one-to-many relation to SourceTotalPercentage
			Field Mapping uses BySourceDepartment
				related.TrueCostConfiguration		= TrueCostConfiguration
				related.TrueCostAllocationControl	= TrueCostAllocationControl
		
		SourceAllocationLinePercentageRel
			one-to-one relation to SourceAllocationLinePercentage
			Field Mapping uses symbolic key
				related.TrueCostConfiguration 		= TrueCostConfiguration
				related.TrueCostAllocationControl 	= TrueCostAllocationControl		
				related.SourceTotalPercentage		= LocalSourceTotalPercentage 				
				related.SourceAllocationLine 		= LocalSourceAllocationLine
				
		AccountShadowRel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses BySummaryAccount 
				related.FinanceEnterpriseGroup				= TrueCostConfiguration
				related.SummaryGeneralLedgerChartAccount	= LocalAccount
			Instance Selection
				where (related.ChartType.Posting)

		AllocationLineStep1Rel
			one-to-many relation to AllocationLine
			Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup 	= TrueCostConfiguration
    			related.AllocationSourceSystem	= AllocationSourceSystem.TrueCost
    			related.AllocationControl		= AllocationControl
			Instance Selection
				where (related.AllocationStep	= 1)
				
		AllocationLinesRel
			one-to-many relation to AllocationLine
			Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup 	= TrueCostConfiguration
    			related.AllocationSourceSystem	= AllocationSourceSystem.TrueCost
    			related.AllocationControl		= AllocationControl
		

		AllocationsRel
			one-to-many relation to Allocation
			Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup 	= TrueCostConfiguration
    			related.AllocationSourceSystem	= AllocationSourceSystem.TrueCost
    			related.AllocationControl		= AllocationControl
	
		RunsRel
    		one-to-many relation to TrueCostAllocationRun
    		Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup														= TrueCostConfiguration
    		Instance Selection
    			where (related.TrueCostAllocationRun.AllocationControl.TrueCostAllocationControl	= TrueCostAllocationControl
    			and    related.TrueCostAllocationRun.AllocationRun.AllocationSourceSystem 			= SourceSystem)
		TrueCostAllocationRunRel
			one-to-one relation to TrueCostAllocationRun
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= TrueCostConfiguration
				related.TrueCostAllocationRun	= LocalAllocationRun
		
		PeriodCostRunsRel
    		one-to-many relation to TrueCostAllocationRun
    		Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup														= TrueCostConfiguration
    		Instance Selection
    			where (related.TrueCostAllocationRun.AllocationControl.TrueCostAllocationControl	= TrueCostAllocationControl
    			and    related.TrueCostAllocationRun.AllocationRun.AllocationSourceSystem 			= SourceSystem
				and   (related.TrueCostAllocationRun.TrueCostStatus.Finalized
				or     related.TrueCostAllocationRun.TrueCostStatus.Journalized))
	Sets

	Rule Blocks
		SetStructures
			invoke Update AllocationControl
				if (TrueCostConfiguration.DepartmentIsAccountingUnit)
					invoked.AccountingUnitStructure	= DepartmentStructure
				if (TrueCostConfiguration.DepartmentIsDimension1)
					invoked.FinanceDimension1Structure	= DepartmentStructure
				if (TrueCostConfiguration.DepartmentIsDimension2)
					invoked.FinanceDimension2Structure	= DepartmentStructure
				if (TrueCostConfiguration.DepartmentIsDimension3)
					invoked.FinanceDimension3Structure	= DepartmentStructure
				if (TrueCostConfiguration.DepartmentIsDimension4)
					invoked.FinanceDimension4Structure	= DepartmentStructure
				if (TrueCostConfiguration.DepartmentIsDimension5)
					invoked.FinanceDimension5Structure	= DepartmentStructure
				if (TrueCostConfiguration.DepartmentIsDimension6)
					invoked.FinanceDimension6Structure	= DepartmentStructure
				if (TrueCostConfiguration.DepartmentIsDimension7)
					invoked.FinanceDimension7Structure	= DepartmentStructure
				if (TrueCostConfiguration.DepartmentIsDimension8)
					invoked.FinanceDimension8Structure	= DepartmentStructure
				if (TrueCostConfiguration.DepartmentIsDimension9)
					invoked.FinanceDimension9Structure	= DepartmentStructure
				if (TrueCostConfiguration.DepartmentIsDimension10)
					invoked.FinanceDimension10Structure	= DepartmentStructure
				if (TrueCostConfiguration.CostObjectIsDimension1)
					invoked.FinanceDimension1Structure	= CostObjectStructure
				if (TrueCostConfiguration.CostObjectIsDimension2)
					invoked.FinanceDimension2Structure	= CostObjectStructure
				if (TrueCostConfiguration.CostObjectIsDimension3)
					invoked.FinanceDimension3Structure	= CostObjectStructure
				if (TrueCostConfiguration.CostObjectIsDimension4)
					invoked.FinanceDimension4Structure	= CostObjectStructure
				if (TrueCostConfiguration.CostObjectIsDimension5)
					invoked.FinanceDimension5Structure	= CostObjectStructure
				if (TrueCostConfiguration.CostObjectIsDimension6)
					invoked.FinanceDimension6Structure	= CostObjectStructure
				if (TrueCostConfiguration.CostObjectIsDimension7)
					invoked.FinanceDimension7Structure	= CostObjectStructure
				if (TrueCostConfiguration.CostObjectIsDimension8)
					invoked.FinanceDimension8Structure	= CostObjectStructure
				if (TrueCostConfiguration.CostObjectIsDimension9)
					invoked.FinanceDimension9Structure	= CostObjectStructure
				if (TrueCostConfiguration.CostObjectIsDimension10)
					invoked.FinanceDimension10Structure	= CostObjectStructure
		CheckCostObjectRoot
			if (TrueCostConfiguration.CostObjectIsDimension1)
				constraint (instance count of CostObjectRootDimension1Rel = 1)
					"Dimension<TrueCostConfiguration.CostObjectLabel>ShouldHaveSingleTopElement"
			if (TrueCostConfiguration.CostObjectIsDimension2)
				constraint (instance count of CostObjectRootDimension2Rel = 1)
					"Dimension<TrueCostConfiguration.CostObjectLabel>ShouldHaveSingleTopElement"
			if (TrueCostConfiguration.CostObjectIsDimension3)
				constraint (instance count of CostObjectRootDimension3Rel = 1)
					"Dimension<TrueCostConfiguration.CostObjectLabel>ShouldHaveSingleTopElement"
			if (TrueCostConfiguration.CostObjectIsDimension4)
				constraint (instance count of CostObjectRootDimension4Rel = 1)
					"Dimension<TrueCostConfiguration.CostObjectLabel>ShouldHaveSingleTopElement"
			if (TrueCostConfiguration.CostObjectIsDimension5)
				constraint (instance count of CostObjectRootDimension5Rel = 1)
					"Dimension<TrueCostConfiguration.CostObjectLabel>ShouldHaveSingleTopElement"
			if (TrueCostConfiguration.CostObjectIsDimension6)
				constraint (instance count of CostObjectRootDimension6Rel = 1)
					"Dimension<TrueCostConfiguration.CostObjectLabel>ShouldHaveSingleTopElement"
			if (TrueCostConfiguration.CostObjectIsDimension7)
				constraint (instance count of CostObjectRootDimension7Rel = 1)
					"Dimension<TrueCostConfiguration.CostObjectLabel>ShouldHaveSingleTopElement"
			if (TrueCostConfiguration.CostObjectIsDimension8)
				constraint (instance count of CostObjectRootDimension8Rel = 1)
					"Dimension<TrueCostConfiguration.CostObjectLabel>ShouldHaveSingleTopElement"
			if (TrueCostConfiguration.CostObjectIsDimension9)
				constraint (instance count of CostObjectRootDimension9Rel = 1)
					"Dimension<TrueCostConfiguration.CostObjectLabel>ShouldHaveSingleTopElement"
			if (TrueCostConfiguration.CostObjectIsDimension10)
				constraint (instance count of CostObjectRootDimension10Rel = 1)
					"Dimension<TrueCostConfiguration.CostObjectLabel>ShouldHaveSingleTopElement"
					
		BuildCostRow
			LocalEntity = each.AccountingEntity
			IsCapacity			= PrmIsCapacity
			if (TrueCostConfiguration.CostObjectIsDimension1)
				CostObjectString		= each.FinanceCodeBlock.FinanceDimension1
			else
			if (TrueCostConfiguration.CostObjectIsDimension2)
				CostObjectString		= each.FinanceCodeBlock.FinanceDimension2
			else
			if (TrueCostConfiguration.CostObjectIsDimension3)
				CostObjectString		= each.FinanceCodeBlock.FinanceDimension3
			else
			if (TrueCostConfiguration.CostObjectIsDimension4)
				CostObjectString		= each.FinanceCodeBlock.FinanceDimension4
			else
			if (TrueCostConfiguration.CostObjectIsDimension5)
				CostObjectString		= each.FinanceCodeBlock.FinanceDimension5
			else
			if (TrueCostConfiguration.CostObjectIsDimension6)
				CostObjectString		= each.FinanceCodeBlock.FinanceDimension6
			else
			if (TrueCostConfiguration.CostObjectIsDimension7)
				CostObjectString		= each.FinanceCodeBlock.FinanceDimension7
			else
			if (TrueCostConfiguration.CostObjectIsDimension8)
				CostObjectString		= each.FinanceCodeBlock.FinanceDimension8
			else
			if (TrueCostConfiguration.CostObjectIsDimension9)
				CostObjectString		= each.FinanceCodeBlock.FinanceDimension9
			else
			if (TrueCostConfiguration.CostObjectIsDimension10)
				CostObjectString		= each.FinanceCodeBlock.FinanceDimension10
				
			if (TrueCostConfiguration.DepartmentIsDimension1)
				DepartmentString		= each.FinanceCodeBlock.FinanceDimension1
			else
			if (TrueCostConfiguration.DepartmentIsDimension2)
				DepartmentString		= each.FinanceCodeBlock.FinanceDimension2
			else
			if (TrueCostConfiguration.DepartmentIsDimension3)
				DepartmentString		= each.FinanceCodeBlock.FinanceDimension3
			else
			if (TrueCostConfiguration.DepartmentIsDimension4)
				DepartmentString		= each.FinanceCodeBlock.FinanceDimension4
			else
			if (TrueCostConfiguration.DepartmentIsDimension5)
				DepartmentString		= each.FinanceCodeBlock.FinanceDimension5
			else
			if (TrueCostConfiguration.DepartmentIsDimension6)
				DepartmentString		= each.FinanceCodeBlock.FinanceDimension6
			else
			if (TrueCostConfiguration.DepartmentIsDimension7)
				DepartmentString		= each.FinanceCodeBlock.FinanceDimension7
			else
			if (TrueCostConfiguration.DepartmentIsDimension8)
				DepartmentString		= each.FinanceCodeBlock.FinanceDimension8
			else
			if (TrueCostConfiguration.DepartmentIsDimension9)
				DepartmentString		= each.FinanceCodeBlock.FinanceDimension9
			else
			if (TrueCostConfiguration.DepartmentIsDimension10)
				DepartmentString		= each.FinanceCodeBlock.FinanceDimension10
			else
			if (TrueCostConfiguration.DepartmentIsAccountingUnit)
				DepartmentString		= each.FinanceCodeBlock.AccountingUnit
			if (CostObjectString entered)
				if (UnitCostRel	not exists)
					invoke Create TrueCostUnitCost
						invoked.TrueCostConfiguration				= TrueCostConfiguration
						invoked.TrueCostAllocationControl			= TrueCostAllocationControl
						invoked.AccountingEntity					= LocalEntity
						invoked.GeneralLedgerCalendarPeriod			= AllocationPeriod
						invoked.AllocationRun						= AllocationRun
						invoked.TrueCostUnitCost.Department			= DepartmentString
						invoked.TrueCostUnitCost.CostObject			= CostObjectString
						invoked.TrueCostUnitCost.IsCapacity			= IsCapacity
				invoke Update UnitCostRel
					invoked.Cost			+= each.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
			Counter = Counter + 1
			if (Counter = 500)
				invoke CommitTransaction
				Counter = 0
		
		CheckDepartmentStructure
			constraint (DepartmentStructureIsEntered)
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureIsRequired"
			if (TrueCostConfiguration.DepartmentIsAccountingUnit)
				DepartmentStructure	= TransientAccountingUnitStructure
				for each EntityRel
					LocalEntity = each.AccountingEntity
					DepartmentString	= "_INDIRECT_"
					if (DepartmentAccountingUnitRel.AccountingUnit exists)
						FoundIndirectAccountingUnit = true
					DepartmentString	= "_DIRECT_"
					if (DepartmentAccountingUnitRel.AccountingUnit exists)
						FoundDirectAccountingUnit = true
				constraint (FoundIndirectAccountingUnit)
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_INDIRECT\_SummaryInAtLeastOne<TrueCostConfiguration.AccountingEntityLabel>"					
				constraint (FoundDirectAccountingUnit)
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_DIRECT\_SummaryInAtLeastOne<TrueCostConfiguration.AccountingEntityLabel>"					
			else
			if (TrueCostConfiguration.DepartmentIsDimension1)
				DepartmentStructure	= TransientDepartment1Structure
				DepartmentString	= "_INDIRECT_"
				constraint (DepartmentDimension1Rel.FinanceDimension1 exists)
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_INDIRECT\_Summary"
				DepartmentString	= "_DIRECT_"
				constraint (DepartmentDimension1Rel.FinanceDimension1 exists) 
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_DIRECT\_Summary"
			else
			if (TrueCostConfiguration.DepartmentIsDimension2)
				DepartmentStructure	= TransientDepartment2Structure
				DepartmentString	= "_INDIRECT_"
				constraint (DepartmentDimension2Rel.FinanceDimension2 exists)
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_INDIRECT\_Summary"
				DepartmentString	= "_DIRECT_"
				constraint (DepartmentDimension2Rel.FinanceDimension2 exists) 
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_DIRECT\_Summary"
			else
			if (TrueCostConfiguration.DepartmentIsDimension3)
				DepartmentStructure	= TransientDepartment3Structure
				DepartmentString	= "_INDIRECT_"
				constraint (DepartmentDimension3Rel.FinanceDimension3 exists)
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_INDIRECT\_Summary"
				DepartmentString	= "_DIRECT_"
				constraint (DepartmentDimension3Rel.FinanceDimension3 exists) 
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_DIRECT\_Summary"
			else
			if (TrueCostConfiguration.DepartmentIsDimension4)
				DepartmentStructure	= TransientDepartment4Structure
				DepartmentString	= "_INDIRECT_"
				constraint (DepartmentDimension4Rel.FinanceDimension4 exists)
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_INDIRECT\_Summary"
				DepartmentString	= "_DIRECT_"
				constraint (DepartmentDimension4Rel.FinanceDimension4 exists) 
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_DIRECT\_Summary"
			else
			if (TrueCostConfiguration.DepartmentIsDimension5)
				DepartmentStructure	= TransientDepartment5Structure
				DepartmentString	= "_INDIRECT_"
				constraint (DepartmentDimension5Rel.FinanceDimension5 exists)
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_INDIRECT\_Summary"
				DepartmentString	= "_DIRECT_"
				constraint (DepartmentDimension5Rel.FinanceDimension5 exists) 
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_DIRECT\_Summary"
			else
			if (TrueCostConfiguration.DepartmentIsDimension6)
				DepartmentStructure	= TransientDepartment6Structure
				DepartmentString	= "_INDIRECT_"
				constraint (DepartmentDimension6Rel.FinanceDimension6 exists)
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_INDIRECT\_Summary"
				DepartmentString	= "_DIRECT_"
				constraint (DepartmentDimension6Rel.FinanceDimension6 exists) 
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_DIRECT\_Summary"
			else
			if (TrueCostConfiguration.DepartmentIsDimension7)
				DepartmentStructure	= TransientDepartment7Structure
				DepartmentString	= "_INDIRECT_"
				constraint (DepartmentDimension7Rel.FinanceDimension7 exists)
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_INDIRECT\_Summary"
				DepartmentString	= "_DIRECT_"
				constraint (DepartmentDimension7Rel.FinanceDimension7 exists)
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_DIRECT\_Summary" 
			else
			if (TrueCostConfiguration.DepartmentIsDimension8)
				DepartmentStructure	= TransientDepartment8Structure
				DepartmentString	= "_INDIRECT_"
				constraint (DepartmentDimension8Rel.FinanceDimension8 exists)
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_INDIRECT\_Summary"
				DepartmentString	= "_DIRECT_"
				constraint (DepartmentDimension8Rel.FinanceDimension8 exists) 
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_DIRECT\_Summary"
			else
			if (TrueCostConfiguration.DepartmentIsDimension9)
				DepartmentStructure	= TransientDepartment9Structure
				DepartmentString	= "_INDIRECT_"
				constraint (DepartmentDimension9Rel.FinanceDimension9 exists)
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_INDIRECT\_Summary"
				DepartmentString	= "_DIRECT_"
				constraint (DepartmentDimension9Rel.FinanceDimension9 exists) 
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_DIRECT\_Summary"
			else
			if (TrueCostConfiguration.DepartmentIsDimension10)
				DepartmentStructure	= TransientDepartment10Structure
				DepartmentString	= "_INDIRECT_"
				constraint (DepartmentDimension10Rel.FinanceDimension10 exists)
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_INDIRECT\_Summary"
				DepartmentString	= "_DIRECT_"
				constraint (DepartmentDimension10Rel.FinanceDimension10 exists) 
					"<TrueCostConfiguration.DepartmentDimension.DisplayLabel>StructureMustHave\_DIRECT\_Summary"
		
		ExecuteRun
			if (PrmUseActualLedger)
				invoke Run AllocationControl
					invoked.PrmAllocation			= PrmAllocation
					invoked.PrmGroup				= PrmGroup
					invoked.PrmDate					= LocalEndPeriod
					invoked.PrmFromStep				= PrmFromStep
					invoked.PrmToStep				= PrmToStep
					invoked.PrmGenerateListingData	= PrmGenerateListingData
					invoked.PrmGenerateSourceValue	= PrmGenerateSourceValue
					invoked.PrmRunName		 		= PrmRunName
					invoked.PrmDescription			= PrmDescription
					invoked.PrmRunStartDate			= PrmRunStartDate
					invoked.PrmRunEndDate			= PrmRunEndDate
					invoked.PrmMultiMonthAllocation	= PrmMultiMonthFlag
			if (PrmUseCapacityLedger)
				invoke Run AllocationControl
					invoked.PrmAllocation			= PrmAllocation
					invoked.PrmGroup				= PrmGroup
					invoked.PrmDate					= LocalEndPeriod
					invoked.PrmFromStep				= PrmFromStep
					invoked.PrmToStep				= PrmToStep
					invoked.PrmGenerateListingData	= PrmGenerateListingData
					invoked.PrmGenerateSourceValue	= PrmGenerateSourceValue	
					invoked.PrmCapacityLedger		= CapacityLedger					
					invoked.PrmRunName		 		= PrmRunName
					invoked.PrmDescription			= PrmDescription
					invoked.PrmRunStartDate			= PrmRunStartDate
					invoked.PrmRunEndDate			= PrmRunEndDate
					invoked.PrmMultiMonthAllocation	= PrmMultiMonthFlag

		CheckRunName
			LocalRunName		= PrmRunName
			LocalDate			= LocalEndPeriod
			LocalJulianDate		= JulianDate
			AllocationPeriod	= GeneralLedgerCalendarPeriodsRel.GeneralLedgerCalendarPeriod
			LocalDisplayPeriod	= GeneralLedgerCalendarPeriodsRel.DisplayPeriod
			if (PrmUseActualLedger)
				LocalUseCapacityLedger = false
				constraint (!AllocationRunNameRel exists)
					"RunNameAlreadyExistsFor<ActualsLedger.Ledger>Period<LocalDisplayPeriod>"
			if (PrmUseCapacityLedger)
				LocalUseCapacityLedger = true
				constraint (!AllocationRunNameRel exists)
					"RunNameAlreadyExistsFor<CapacityLedger.Ledger>Period<LocalDisplayPeriod>"

		CreateSourceTotalPercentage
			if (SourceAllocationLinePercentageRel not exist)
				display "CreateSourceTotalPercentage"			
				display "LocalAllocationControl:<TrueCostAllocationControl>"
				display "LocalSourceTotalPercentage:<LocalSourceTotalPercentage>"
				display "LocalSourceAllocationLine:<LocalSourceAllocationLine>"
				invoke Create SourceAllocationLinePercentage
					invoked.TrueCostConfiguration	  = TrueCostConfiguration
					invoked.TrueCostAllocationControl = TrueCostAllocationControl
					invoked.SourceTotalPercentage	  = LocalSourceTotalPercentage	
					invoked.SourceAllocationLine	  = LocalSourceAllocationLine
					
		CreateUpdateSourceTotalPercentage			
			if (SourceTotalPercentageRel exist)
				invoke Update SourceTotalPercentageRel
					invoked.TotalPercentage += LocalSourcePercentage
				
				LocalSourceTotalPercentage = SourceTotalPercentageRel.SourceTotalPercentage
				include CreateSourceTotalPercentage
			else
				invoke Create SourceTotalPercentage
					assign result to LocalSourceTotalPercentageView
					invoked.TrueCostConfiguration						= TrueCostConfiguration
					invoked.TrueCostAllocationControl					= TrueCostAllocationControl
					invoked.SourceTotalPercentage.Ledger				= LocalLedger
					invoked.SourceTotalPercentage.AccountingEntity		= LocalEntity 
					invoked.SourceTotalPercentage.Account				= LocalAccount
					invoked.SourceTotalPercentage.Department			= LocalDepartment
					invoked.TotalPercentage								= LocalSourcePercentage
					
				LocalSourceTotalPercentage = LocalSourceTotalPercentageView.SourceTotalPercentage
				include CreateSourceTotalPercentage
						
		AllocationLinePerDepartment
			if (IsSourceDepartmentSummary)

				display "SourceDepartmentIsSummary"
				display "SumaryDeparment:<LocalSourceDepartment>"
																	
				if (TrueCostConfiguration.DepartmentIsDimension1)						
					for each DepartmentShadow1Rel
				    	LocalDepartment = each.FinanceDimension1
				    	display "Shadow1RelPostingDepartment:<LocalDepartment>"
						include CreateUpdateSourceTotalPercentage
				else
				if (TrueCostConfiguration.DepartmentIsDimension2)						
					for each DepartmentShadow2Rel
				    	LocalDepartment = each.FinanceDimension2
				    	display "Shadow2RelPostingDepartment:<LocalDepartment>"
						include CreateUpdateSourceTotalPercentage					
				else
				if (TrueCostConfiguration.DepartmentIsDimension3)											
					for each DepartmentShadow3Rel
				    	LocalDepartment = each.FinanceDimension3
				    	display "Shadow3RelPostingDepartment:<LocalDepartment>"
						include CreateUpdateSourceTotalPercentage					
				else
				if (TrueCostConfiguration.DepartmentIsDimension4)						
					for each DepartmentShadow4Rel
				    	LocalDepartment = each.FinanceDimension4
				    	display "Shadow4RelPostingDepartment:<LocalDepartment>"
						include CreateUpdateSourceTotalPercentage					
				else
				if (TrueCostConfiguration.DepartmentIsDimension5)						
					for each DepartmentShadow5Rel
				    	LocalDepartment = each.FinanceDimension5
				    	display "Shadow5RelPostingDepartment:<LocalDepartment>"
						include CreateUpdateSourceTotalPercentage					
				else
				if (TrueCostConfiguration.DepartmentIsDimension6)						
					for each DepartmentShadow6Rel
				    	LocalDepartment = each.FinanceDimension6
				    	display "Shadow6RelPostingDepartment:<LocalDepartment>"
						include CreateUpdateSourceTotalPercentage					
				else
				if (TrueCostConfiguration.DepartmentIsDimension7)						
					for each DepartmentShadow7Rel
				    	LocalDepartment = each.FinanceDimension7
				    	display "Shadow7RelPostingDepartment:<LocalDepartment>"
						include CreateUpdateSourceTotalPercentage
				else
				if (TrueCostConfiguration.DepartmentIsDimension8)						
					for each DepartmentShadow8Rel	
				    	LocalDepartment = each.FinanceDimension8
				    	display "Shadow8RelPostingDepartment:<LocalDepartment>"
						include CreateUpdateSourceTotalPercentage
				else
				if (TrueCostConfiguration.DepartmentIsDimension9)						
					for each DepartmentShadow9Rel
				    	LocalDepartment = each.FinanceDimension9
				    	display "Shadow9RelPostingDepartment:<LocalDepartment>"
						include CreateUpdateSourceTotalPercentage
				else
				if (TrueCostConfiguration.DepartmentIsDimension10)						
					for each DepartmentShadow10Rel
				    	LocalDepartment = each.FinanceDimension10
				    	display "Shadow10RelPostingDepartment:<LocalDepartment>"
						include CreateUpdateSourceTotalPercentage
				else
				if (TrueCostConfiguration.DepartmentIsAccountingUnit)						
					for each DepartmentShadow0Rel
				    	LocalDepartment = each.AccountingUnit
				    	display "Shadow0RelPostingDepartment:<LocalDepartment>"
						include CreateUpdateSourceTotalPercentage
			else

				display "SourceDepartmentIsPosting"
				LocalDepartment = LocalSourceDepartment
                include CreateUpdateSourceTotalPercentage
                
		PurgeAllSourceDetails						
			invoke PurgeAllSourceAllocationLinePercentage SourceAllocationLinePercentage
				invoked.PrmTrueCostConfiguration		= TrueCostConfiguration
				invoked.PrmTrueCostAllocationControl	= TrueCostAllocationControl
			invoke PurgeAllSourceAllocationLine SourceAllocationLine
				invoked.PrmTrueCostConfiguration		= TrueCostConfiguration
				invoked.PrmTrueCostAllocationControl	= TrueCostAllocationControl
			invoke PurgeAllSourceTotalPercentage SourceTotalPercentage 
				invoked.PrmTrueCostConfiguration		= TrueCostConfiguration
				invoked.PrmTrueCostAllocationControl	= TrueCostAllocationControl
	
	Field Rules
		Calendar
			default to TrueCostConfiguration.Calendar
			required
			constraint (CalendarPeriodsMatchingPeriodTypeRel exists)
				"CalendarMustHavePeriodTypeMonth"
			
		ActualsLedger
			required
			if (TrueCostAllocationsRel exists)
				cannot be changed
		CapacityLedger
			constraint (CapacityLedger != ActualsLedger)
				"CapacityLedgerCannotBeActualsLedger"
			if (TrueCostAllocationsRel exists)
				cannot be changed
		SourceLedger
			initial value is TrueCostConfiguration.CoreLedger
			default to TrueCostConfiguration.CoreLedger
			required
			if (TrueCostAllocationsRel exists)
				cannot be changed






		CostObjectStructure
			if (TrueCostConfiguration.CostObjectIsDimension1)
				CostObjectStructure	= TransientCostObject1Structure
			else
			if (TrueCostConfiguration.CostObjectIsDimension2)
				CostObjectStructure	= TransientCostObject2Structure
			else
			if (TrueCostConfiguration.CostObjectIsDimension3)
				CostObjectStructure	= TransientCostObject3Structure
			else
			if (TrueCostConfiguration.CostObjectIsDimension4)
				CostObjectStructure	= TransientCostObject4Structure
			else
			if (TrueCostConfiguration.CostObjectIsDimension5)
				CostObjectStructure	= TransientCostObject5Structure
			else
			if (TrueCostConfiguration.CostObjectIsDimension6)
				CostObjectStructure	= TransientCostObject6Structure
			else
			if (TrueCostConfiguration.CostObjectIsDimension7)
				CostObjectStructure	= TransientCostObject7Structure
			else
			if (TrueCostConfiguration.CostObjectIsDimension8)
				CostObjectStructure	= TransientCostObject8Structure
			else
			if (TrueCostConfiguration.CostObjectIsDimension9)
				CostObjectStructure	= TransientCostObject9Structure
			else
			if (TrueCostConfiguration.CostObjectIsDimension10)
				CostObjectStructure	= TransientCostObject10Structure
			include CheckCostObjectRoot


		Chart
			required

		ExpenseAccounts
			constraint (ExpenseAccounts.ChartType.Summary)
				"ExpenseAccountsMustBeSummary"
			constraint (ExpenseAccountsInChartRel exists)
				"ExpenseAccountsMustBeInChart"
			required
				
		SourceSystem
			default to AllocationSourceSystem.TrueCost

		ProjectStructure
			if (TrueCostConfiguration.FinanceEnterpriseGroup.ProjectLabelExists)
				required

		AccountingUnitStructure
			if (TrueCostConfiguration.FinanceEnterpriseGroup.AccountingUnitSelected)
				required

		FinanceDimension1Structure
			if (TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension1Entry)
				required		

		FinanceDimension2Structure
			if (TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension2Entry)
				required
			
		FinanceDimension3Structure
			if (TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension3Entry)
				required
			
		FinanceDimension4Structure
			if (TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension4Entry)
				required
			
		FinanceDimension5Structure
			if (TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension5Entry)
				required
			
		FinanceDimension6Structure
			if (TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension6Entry)
				required
			
		FinanceDimension7Structure
			if (TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension7Entry)
				required
			
		FinanceDimension8Structure
			if (TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension8Entry)
				required
			
		FinanceDimension9Structure
			if (TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension9Entry)
				required
			
		FinanceDimension10Structure
			if (TrueCostConfiguration.FinanceEnterpriseGroup.FinanceDimension10Entry)
				required
												
	Attach Rules
	
	Form Invokes
		TrueCostRunAllocation
			if (RunRebuildRequired)
				constraint (not RunRebuildRequired)
					"MustRunRebuildSummarizedDriverEvents"
			else
				invoke CreateTrueCostRunParameter TrueCostRunParameter
					invoked.TrueCostConfiguration			= TrueCostConfiguration
					invoked.TrueCostAllocationControl 		= TrueCostAllocationControl
					invoked.TrueCostRunParameter.Calendar	= TrueCostAllocationControl.Calendar
			
    Actions
	
    	Create is an Action
    		Entrance Rules

    		Exit Rules
    			invoke Create AllocationControl
					assign result to LocalAllocationControlView
					invoked.FinanceEnterpriseGroup	= TrueCostConfiguration
					invoked.AllocationControl		= "TC_" + TrueCostAllocationControl
					invoked.AllocationSourceSystem  = AllocationSourceSystem.TrueCost
					invoked.Description				= Description
					invoked.Calendar				= Calendar
					invoked.PeriodType				= 3 
					invoked.AccountStructure		= Chart
					invoked.TrueCostConfiguration	= TrueCostConfiguration
					invoked.TrueCostAllocationControl	= TrueCostAllocationControl
					invoked.ProjectStructure			= ProjectStructure
					invoked.AccountingUnitStructure		= AccountingUnitStructure
					invoked.FinanceDimension1Structure	= FinanceDimension1Structure
					invoked.FinanceDimension2Structure	= FinanceDimension2Structure
					invoked.FinanceDimension3Structure	= FinanceDimension3Structure
					invoked.FinanceDimension4Structure	= FinanceDimension4Structure
					invoked.FinanceDimension5Structure	= FinanceDimension5Structure
					invoked.FinanceDimension6Structure	= FinanceDimension6Structure
					invoked.FinanceDimension7Structure	= FinanceDimension7Structure
					invoked.FinanceDimension8Structure	= FinanceDimension8Structure
					invoked.FinanceDimension9Structure	= FinanceDimension9Structure
					invoked.FinanceDimension10Structure	= FinanceDimension10Structure
				AllocationControl = LocalAllocationControlView.AllocationControl

		Update is an Update Action
			Entrance Rules

			Exit Rules
				if (SourceLedger changed)
					for each AllocationLinesRel
						invoke Update each
							invoked.TransientSourceLedger = SourceLedger
				if (ActualsLedger changed)
					for each AllocationsRel
						invoke Update each
							invoked.Ledger = ActualsLedger
							
				invoke Update AllocationControl
					invoked.TrueCostConfiguration	= TrueCostConfiguration
					invoked.TrueCostAllocationControl	= TrueCostAllocationControl
					invoked.Description				= Description
					invoked.Calendar				= Calendar
					invoked.AccountStructure		= Chart
					invoked.ProjectStructure			= ProjectStructure
					invoked.AccountingUnitStructure		= AccountingUnitStructure
					invoked.FinanceDimension1Structure	= FinanceDimension1Structure
					invoked.FinanceDimension2Structure	= FinanceDimension2Structure
					invoked.FinanceDimension3Structure	= FinanceDimension3Structure
					invoked.FinanceDimension4Structure	= FinanceDimension4Structure
					invoked.FinanceDimension5Structure	= FinanceDimension5Structure
					invoked.FinanceDimension6Structure	= FinanceDimension6Structure
					invoked.FinanceDimension7Structure	= FinanceDimension7Structure
					invoked.FinanceDimension8Structure	= FinanceDimension8Structure
					invoked.FinanceDimension9Structure	= FinanceDimension9Structure
					invoked.FinanceDimension10Structure	= FinanceDimension10Structure					

		Delete is a Delete Action
			Action Rules
				invoke Delete AllocationControl

		DeleteCompletedRuns is an Instance Action
			confirmation required
			Action Rules
				invoke DeleteCompletedRuns AllocationControl
			
    	Run is an Instance Action
    		restricted
    		completion message is "AllocationRunInitiated"
			Parameters
				PrmAllocation			is a TrueCostAllocation
					default label is "True\CostAllocation"
				PrmGroup				is a AllocationGroup
					default label is "Group"
				PrmDate					is Date
					default label is "AllocationPostDate"
				PrmFromStep				is a AllocationStepNumber
					default label is "FromStep"
				PrmToStep				is a AllocationStepNumber
					default label is "ToStep"
				PrmUseCapacityLedger	is Boolean
					default label is "T\C_Capacity"
				PrmUseActualLedger		is Boolean
					default label is "T\C_Actuals"
				PrmGenerateListingData	is Boolean
					default label is "GenerateReports"
				PrmGenerateSourceValue	is Boolean
					default label is "IncludeSourceDetails"
				PrmMultiMonthFlag		is Boolean
					default label is "Multi-\MonthAllocation"
				PrmRunName		 		is AlphaUpper 20
					default label is "RunName"
				PrmDescription	  		is Alpha 60
					default label is "RunDescription"
				PrmRunStartDate			is Date
					default label is "FromAllocationPostDate"
				PrmRunEndDate			is Date
					default label is "ToAllocationPostDate"
				PrmMultiMonthAllocation	is Boolean
					
			Parameter Rules
				PrmAllocation
					constraint(PrmGroup not entered)
						"CannotSpecifyBothGroupAndAllocation"
				PrmGroup
					constraint(PrmAllocation not entered)
						"CannotSpecifyBothGroupAndAllocation"
				PrmDate
					initial value is current corporate date
					default to current corporate date
					required
				PrmToStep
					default to 100
					constraint (PrmToStep <= 100)
						"StepCannotExceed100"
					constraint (PrmToStep >= PrmFromStep)
						"ToStepMustBeGreaterThanOrEqualToFromStep"
				PrmUseCapacityLedger
					constraint (CapacityLedger entered)
						"CapacityLedgerIsNotSet"					
				PrmGenerateSourceValue
					if (not PrmGenerateListingData)
						PrmGenerateSourceValue = false
				PrmRunName
					required
				PrmRunStartDate
					initial value is DerivedStartDate
					default to DerivedStartDate
					required
				PrmRunEndDate
					initial value is DerivedEndDate 
					default to DerivedEndDate       
					required

			Entrance Rules
				constraint (!RunRebuildRequired)
					"MustRun_Rebuild_Summarized_Driver_Events"

			Action Rules

				constraint(PrmUseActualLedger or PrmUseCapacityLedger)
						"MustSelectALedgerForThisRun"
				LocalAllocation = PrmAllocation
				LocalPeriodType = 3					
				if (PrmMultiMonthFlag)
					LocalDate					= PrmRunStartDate
					LocalJulianDate				= JulianDate
					LocalCalendarStartPeriod 	= first GeneralLedgerCalendarPeriodsRel.GeneralLedgerCalendarPeriod
						
					LocalDate					= PrmRunEndDate
					LocalJulianDate				= JulianDate
					LocalCalendarEndPeriod 		= first GeneralLedgerCalendarPeriodsRel.GeneralLedgerCalendarPeriod
					constraint (LocalCalendarStartPeriod entered and LocalCalendarEndPeriod entered)
						"CouldNotFindPeriodOfType<LocalPeriodType>InCalendar<Calendar>ForDate<LocalDate>"
					for each GeneralLedgerCalendarPeriodRangeRel						
						LocalEndPeriod 			= each.DerivedEndDate	
						include CheckRunName

				include CheckCostObjectRoot
				if (PrmMultiMonthFlag)
					for each GeneralLedgerCalendarPeriodRangeRel						
						LocalEndPeriod 			= each.DerivedEndDate	
						include ExecuteRun
				else		
					LocalEndPeriod 	= PrmDate
					include CheckRunName
					include ExecuteRun
						
 		GenerateCosts is an Instance Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAllocationRun					is a AllocationRun
					default label is "Allocation Run"
				PrmAllocationPeriod					is a GeneralLedgerCalendarPeriod
					default label is "AllocationPeriod"
				PrmIsCapacity						is Boolean
					default label is "IsCapacity"	
			Action Rules
				if (PrmIsCapacity)
					LocalLedger	= CapacityLedger					
				else
					LocalLedger	= ActualsLedger
				AllocationRun 		= PrmAllocationRun
				AllocationPeriod 	= PrmAllocationPeriod
				IsCapacity			= PrmIsCapacity
				
				for each DetailRel
					include BuildCostRow
					
				invoke CommitTransaction
				initialize Counter
				
				Start			= AllocationPeriod.StartDateJulian
				End				= AllocationPeriod.EndDateJulian
				for each CostsRel
					LocalEntity		= each.AccountingEntity
					DepartmentString = each.TrueCostUnitCost.Department
					CostObjectString=  each.TrueCostUnitCost.CostObject
					invoke Update each.TrueCostUnitCost




						EventUnitCountTotal			= sum EventsUnitCountDriverRel.Amount
						EventPerMinuteDurationTotal	= sum EventsPerMinuteDurationDriverRel.Amount
						invoked.CountVolume			= EventUnitCountTotal
						invoked.DurationVolume		= EventPerMinuteDurationTotal
						invoked.UnitCostByCount		= each.Cost/EventUnitCountTotal
						invoked.UnitCostByDuration	= each.Cost/EventPerMinuteDurationTotal
					Counter = Counter + 1
					if (Counter = 500)
						invoke CommitTransaction
						Counter = 0
										
 		CollectReconciliationData is an Instance Action
 			restricted
			Parameters
				PrmFinanceEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAllocationRun					is a AllocationRun
					default label is "AllocationRun"
				PrmAllocationPeriod					is a GeneralLedgerCalendarPeriod
					default label is "AllocationPeriod"
				PrmIsCapacity						is Boolean
					default label is "PrmIsCapacity"	
			Action Rules
				display "CollectReconciliationData"
				if (PrmIsCapacity)
					LocalLedger	= CapacityLedger					
				else
					LocalLedger	= ActualsLedger
				AllocationRun = PrmAllocationRun
				AllocationPeriod = PrmAllocationPeriod
				CostObjectRoot = GetCostObjectRoot

				for each EntityRel
					LocalEntity = each.AccountingEntity
					if (!LocalEntity.IsTopNode)						
						DepartmentString	= "_INDIRECT_"			
						WithCostObject = false
						TotalCostObject = false



						IndirectCoreWithoutCostObjects += TotalsCubeRel.NetFunctionalAmount
						DepartmentString	= "_DIRECT_"	 						
						DirectCoreWithoutCostObjects += TotalsCubeRel.NetFunctionalAmount						
						WithCostObject = true
						DirectActualsWithCostObjects += AllocationCubeRel.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
						WithCostObject = false
						TotalCostObject = true
						DirectActualsTotal += AllocationCubeRel.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount

				invoke SetReconciliationData PrmAllocationRun
					invoked.PrmIndirectCoreWithoutCostObjects	= IndirectCoreWithoutCostObjects	
					invoked.PrmDirectCoreWithoutCostObjects		= DirectCoreWithoutCostObjects
					invoked.PrmDirectActualsWithCostObjects		= DirectActualsWithCostObjects	
					invoked.PrmDirectActualsTotal				= DirectActualsTotal         				
				 			
		CommitTransaction is an Instance Action
			restricted
			Action Rules
				commit transaction



		GenerateCostBehaviorTotals is an Instance Action
			restricted
			default label is untranslatable
			Parameters
				PrmFinanceEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAllocationRun					is a AllocationRun
					default label is "AllocationRun"
				PrmAllocationPeriod					is a GeneralLedgerCalendarPeriod
					default label is "AllocationPeriod"
				PrmIsCapacity						is Boolean
					default label is "IsCapacity"	
			Local Fields
				LocalEntityChecker					is a AccountingEntity						
			Action Rules


































							






		GenerateSourceValidationReport is an Instance Action
			restricted
			default label is "GenerateSourceValidationReport"

			
			Parameters
				PrmTrueCostAllocation					is a TrueCostAllocation
					default label is  "Allocation"
				PrmAllocationGroup						is a AllocationGroup
					default label is  "AllocationGroup"
			Parameter Rules
				PrmTrueCostAllocation
					constraint(PrmAllocationGroup not entered)
						"CannotSpecifyBothGroupAndAllocation"
				PrmAllocationGroup
					constraint(PrmTrueCostAllocation not entered)
						"CannotSpecifyBothGroupAndAllocation"			
			Local Fields				
				IsSourceDepartmentSummary				is Boolean
				LocalActor								is an Actor
			
    		Entrance Rules
   				LocalActor = actor


				constraint(not SourceValidationReportStatus.Running)
					"SourceValidationReportIsRunning"
				
				SourceValidationReportStatus = SourceValidationReportStatus.Running	
					
			Action Rules
				initialize LocalAllocation	
				initialize LocalAllocationGroup
				
				LocalAllocation		 			= PrmTrueCostAllocation
				LocalAllocationGroup 			= PrmAllocationGroup
				
				confirmation required
					"SourceValidationReportWillBeGenerated.DoYouWantToProceed?"
				
				include PurgeAllSourceDetails
				
				for each TrueCostAllocationLineRel	
					LocalEntity 				= each.AccountingEntity					
					LocalAllocation 			= each.TrueCostAllocation 
					LocalTrueCostAllocationLine = each.TrueCostAllocationLine
					LocalStep					= each.Step

					IsSourceDepartmentSummary   = each.SourceAddressIsSummary
				
					if (LocalStep =1)
						LocalLedger = SourceLedger
					else
						LocalLedger = ActualsLedger
										
    				LocalSourcePercentage		= each.SourcePercentage	                
                	LocalAccount				= each.SourceAccount
    				LocalSourceDepartment		= each.SourceDepartment
    				
					invoke Create SourceAllocationLine
						assign result to LocalSourceAllocationLineView
						invoked.TrueCostConfiguration		= TrueCostConfiguration
						invoked.TrueCostAllocationControl   = TrueCostAllocationControl
						invoked.TrueCostAllocation			= LocalAllocation
						invoked.TrueCostAllocationLine		= LocalTrueCostAllocationLine		
						invoked.Step						= LocalStep
						invoked.IsWithinDepartment			= each.IsWithinDepartment
						invoked.TargetDepartments			= each.TargetDepartments
				        invoked.TargetCostObjects			= each.TargetCostObjects
				        invoked.SourcePercentage			= LocalSourcePercentage
    				
    				LocalSourceAllocationLine = LocalSourceAllocationLineView.SourceAllocationLine
    									
	                if (LocalAccount.ChartType.Posting) 	                		                	

        				include AllocationLinePerDepartment	                	
	                else

						for each AccountShadowRel
							LocalAccount = each.GeneralLedgerChartAccount
							display "LocalAccount:<LocalAccount>"
                            include AllocationLinePerDepartment
                  

				SourceValidationRunDate   		= current timestamp				
				SourceValidationAllocation 		= PrmTrueCostAllocation
				SourceValidationAllocationGroup	= PrmAllocationGroup  
			
			Exit Rules
				send notification
					to LocalActor
					description is "SourceValidationReportIsCompleted"
					priority is high
					detail is "SourceValidationReportIsCompleted"
				
				SourceValidationReportStatus = SourceValidationReportStatus.Completed
				
	Cube Relations
		TotalsCubeRel
			cell relation to GeneralLedgerTotal
			dynamic mapping is TotalsCubeMap
			Dimension Mapping
				related.Scenario								= TrueCostConfiguration.ActualsScenario
				related.GeneralLedgerTotal.EntityYearPeriod		= AllocationPeriod
				related.GeneralLedgerTotal.Ledger				= CoreLedgerRel.Ledger
				related.GeneralLedgerTotal.GeneralLedgerChartAccount	= ExpenseAccounts
				related.AccountingEntity						= LocalEntity

			Preload Measures
				NetFunctionalAmount
		AllocationCubeRel
			cell relation to AllocationTransactionDetail
			dynamic mapping is AllocationCubeMap
			Dimension Mapping
				related.EntityYearPeriod						= AllocationPeriod
				related.FinanceCodeBlock.Ledger					= LocalLedger
				related.FinanceCodeBlock.GeneralLedgerChartAccount	= ExpenseAccounts
				related.FinanceCodeBlock.ToAccountingEntity			= LocalEntity 
				related.AllocationRun							= AllocationRun
				related.AllocationStep							= LastStepRel.AllocationStep

			Preload Measures
				ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
		DepartmentsCubeRel
			matrix relation to AllocationTransactionDetail
			allow dimension reordering
			dynamic mapping is DepartmentsCubeMap
			Dimension Mapping
				related.EntityYearPeriod						= AllocationPeriod
				related.FinanceCodeBlock.Ledger					= LocalLedger
				related.FinanceCodeBlock.GeneralLedgerChartAccount	= ExpenseAccounts

				related.AllocationRun							= AllocationRun
				related.AllocationStep							= LastStepRel.AllocationStep

			Preload Measures
				ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
					
