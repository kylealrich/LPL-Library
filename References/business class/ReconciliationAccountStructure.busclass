ReconciliationAccountStructure is a BusinessClass
	owned by reconciliation
	prefix is RMAS

	Ontology
    	symbolic key is ReconciliationAccountStructure

    Persistent Fields
    	Description						is Alpha up to 250
		ReconciliationType				is Numeric 1
			States
				Account			value is 0
				NonAccount		value is 1
		ReconciliationLevel				is a StructureRow
		ReconciliationCurrency			is a UseCurrency
		ReportingBasis
		LedgerBusinessClassGroup		is a GeneralLedgerTransaction group
		ListOverListManualReconView 	is Boolean
		HaveCreatedAccounts				is Boolean
		Active

	Context Fields
		ReconciliationAccountGroup

	Local Fields
		LocalCloseConfiguration			is a GeneralLedgerCloseConfiguration
		LocalAccountingEntity			is an AccountingEntity
		LocalGeneralLedgerChartAccount	is a GeneralLedgerChartAccount
		LocalAccountingUnit				is an AccountingUnit
		LocalProject					is a Project
		LocalFinanceDimension1			is a FinanceDimension1
		LocalFinanceDimension2			is a FinanceDimension2
		LocalFinanceDimension3			is a FinanceDimension3
		LocalFinanceDimension4			is a FinanceDimension4
		LocalFinanceDimension5			is a FinanceDimension5
		LocalFinanceDimension6			is a FinanceDimension6
		LocalFinanceDimension7			is a FinanceDimension7
		LocalFinanceDimension8			is a FinanceDimension8
		LocalFinanceDimension9			is a FinanceDimension9
		LocalFinanceDimension10			is a FinanceDimension10
		LocalDimensionCodeValue			is AlphaUpper 15
		LocalChartAccountRule			is a GeneralLedgerChartAccount group
		LocalGeneralLedgerClosePeriod	is a GeneralLedgerClosePeriod
		LocalPeriodEndDate				is Date
		LocalGeneralLedgerCalendar		is a GeneralLedgerCalendar

	Derived Fields
		DerivedReconciliationCurrency is a DerivedField
			type is Alpha 25
			default label is "Currency"
			if (ReconciliationCurrency.Project)
				return ReportingBasis.ProjectStructure.Currency
			else
			if (ReconciliationCurrency.Report1)
				return ReconciliationManagementGroup.FinanceEnterpriseGroup.ReportCurrencyOne
			else
			if (ReconciliationCurrency.Report2)
				return ReconciliationManagementGroup.FinanceEnterpriseGroup.ReportCurrencyTwo
			else
			if (ReconciliationCurrency.Report3)
				return ReconciliationManagementGroup.FinanceEnterpriseGroup.ReportCurrencyThree
			else
			if (ReconciliationCurrency.Report4)
				return ReconciliationManagementGroup.FinanceEnterpriseGroup.ReportCurrencyFour
			else
			if (ReconciliationCurrency.Report5)
				return ReconciliationManagementGroup.FinanceEnterpriseGroup.ReportCurrencyFive

		PeriodWithinQuarterDerived is a DerivedField
			type is Numeric 1
			if (MonthPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod.Month = 1
			or  MonthPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod.Month = 4
			or  MonthPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod.Month = 7
			or  MonthPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod.Month = 10)
				return 1
			else
			if (MonthPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod.Month = 2
			or  MonthPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod.Month = 5
			or  MonthPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod.Month = 8
			or  MonthPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod.Month = 11)
				return 2
			else
			if (MonthPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod.Month = 3
			or  MonthPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod.Month = 6
			or  MonthPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod.Month = 9
			or  MonthPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod.Month = 12
			or  MonthPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod.Month = 13)
				return 3

		PreviousBasisYear is a DerivedField
			type is Year
			return (ReportingBasis.BasisYear - 1 year)

		ActiveMsgField is a DerivedField
			type is MessageField
			if (!Active)
				return InactiveMessage

		InactiveMessage is a MessageField
			restricted
			"Inactive"

	Field Rules
		Description
			required

		ReconciliationType
			if (ReconciliationAccount set exists)
				cannot be changed
					"ReconciliationTypeCannotBeChanged"

		ReconciliationLevel
			if (ReconciliationType.Account)
				required
					"ReconciliationLevelIsRequired"

			if (ReconciliationAccount set exists)
				cannot be changed
					"ReconciliationLevelCannotBeChanged"

		ReconciliationCurrency
			default to ReconciliationCurrency.EntityFunctional
			if (PeriodEndReconciliationRel exists
			or  ReconciliationDetailRel exists)
				cannot be changed
					"ReconciliationCurrencyCannotBeChanged;PeriodReconciliationsOrReconciliationDetailsExistsForThisStructure"
			if (!ReconciliationLevel.Type.Project)
				constraint (!ReconciliationCurrency.Project)
					"CanOnlyUseProjectCurrencyWhenTheReconciliationLevelIsProject"
			if (ReconciliationCurrency.Report1)
				constraint (ReconciliationManagementGroup.FinanceEnterpriseGroup.ReportCurrencyOne entered)
					"Report1CurrencyIsNotEnteredOnFinanceEnterpriseGroup"
			if (ReconciliationCurrency.Report2)
				constraint (ReconciliationManagementGroup.FinanceEnterpriseGroup.ReportCurrencyTwo entered)
					"Report2CurrencyIsNotEnteredOnFinanceEnterpriseGroup"
			if (ReconciliationCurrency.Report3)
				constraint (ReconciliationManagementGroup.FinanceEnterpriseGroup.ReportCurrencyThree entered)
					"Report3CurrencyIsNotEnteredOnFinanceEnterpriseGroup"
			if (ReconciliationCurrency.Report4)
				constraint (ReconciliationManagementGroup.FinanceEnterpriseGroup.ReportCurrencyFour entered)
					"Report4CurrencyIsNotEnteredOnFinanceEnterpriseGroup"
			if (ReconciliationCurrency.Report5)
				constraint (ReconciliationManagementGroup.FinanceEnterpriseGroup.ReportCurrencyFive entered)
					"Report5CurrencyIsNotEnteredOnFinanceEnterpriseGroup"

		ReportingBasis
			required
				"ReportingBasisIsRequired"
			if (ReportingBasis changed)
				invoke BuildLedgerBusClassGroup

		Active
			initial value is true

	Conditions
		HasNewlyAddedAccounts
			when (NewlyCreatedReconciliationAccountRel exists)

		HasAccounts
			when (ReconciliationAccountsRel exists)

		HasNonAccounts
			when (ReconciliationNonAccountsRel exists)

		HasAccountsOrNonAccounts
			when (AllReconciliationAccountsRel exists)

		HasReconciliationGroups
			when (ReconciliationGroupRel exists)

		HasPeriodReconciliationGroups
			when (PeriodReconciliationGroupRel exists)

	Attach Rules
		constraint (Active)
			"ReconciliationAccountStructureIsInactive"

	Relations
		PostingAccountingUnitsRel
			one-to-many relation to AccountingUnitHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= ReconciliationManagementGroup.FinanceEnterpriseGroup
				related.AccountingUnitStructure		= ReportingBasis.AccountingUnitStructure
				related.AccountingEntity			= LocalAccountingEntity
			Instance Selection
				where (related.AccountingUnitType.Posting)

		PostingAccountsRel
			one-to-many relation to ReportingChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= ReconciliationManagementGroup.FinanceEnterpriseGroup
				related.ReportingChart				= ReportingBasis.ReportingChart
			Instance Selection
				where (related.GeneralLedgerChartAccount.ChartType.Posting)

		PostingReconcilableAccountsRel
			one-to-many relation using PostingAccountsRel
			Instance Selection
				where (related.GeneralLedgerChartAccount.IsReconcilable
				and   (!LocalChartAccountRule entered
				or 	   related.GeneralLedgerChartAccount within LocalChartAccountRule))

		PostingProjectsRel
			one-to-many relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= ReconciliationManagementGroup.FinanceEnterpriseGroup
				related.ProjectStructure			= ReportingBasis.ProjectStructure
			Instance Selection
				where (related.ProjectType.Posting)

		PostingDimension1Rel
			one-to-many relation to FinanceDimension1Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= ReconciliationManagementGroup.FinanceEnterpriseGroup
				related.FinanceDimension1Structure	= ReportingBasis.FinanceDimension1Structure
			Instance Selection
				where (related.DimensionType.Posting)

		PostingDimension2Rel
			one-to-many relation to FinanceDimension2Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= ReconciliationManagementGroup.FinanceEnterpriseGroup
				related.FinanceDimension2Structure	= ReportingBasis.FinanceDimension2Structure
			Instance Selection
				where (related.DimensionType.Posting)

		PostingDimension3Rel
			one-to-many relation to FinanceDimension3Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= ReconciliationManagementGroup.FinanceEnterpriseGroup
				related.FinanceDimension3Structure	= ReportingBasis.FinanceDimension3Structure
			Instance Selection
				where (related.DimensionType.Posting)

		PostingDimension4Rel
			one-to-many relation to FinanceDimension4Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= ReconciliationManagementGroup.FinanceEnterpriseGroup
				related.FinanceDimension4Structure	= ReportingBasis.FinanceDimension4Structure
			Instance Selection
				where (related.DimensionType.Posting)

		PostingDimension5Rel
			one-to-many relation to FinanceDimension5Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= ReconciliationManagementGroup.FinanceEnterpriseGroup
				related.FinanceDimension5Structure	= ReportingBasis.FinanceDimension5Structure
			Instance Selection
				where (related.DimensionType.Posting)

		PostingDimension6Rel
			one-to-many relation to FinanceDimension6Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= ReconciliationManagementGroup.FinanceEnterpriseGroup
				related.FinanceDimension6Structure	= ReportingBasis.FinanceDimension6Structure
			Instance Selection
				where (related.DimensionType.Posting)

		PostingDimension7Rel
			one-to-many relation to FinanceDimension7Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= ReconciliationManagementGroup.FinanceEnterpriseGroup
				related.FinanceDimension7Structure	= ReportingBasis.FinanceDimension7Structure
			Instance Selection
				where (related.DimensionType.Posting)

		PostingDimension8Rel
			one-to-many relation to FinanceDimension8Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= ReconciliationManagementGroup.FinanceEnterpriseGroup
				related.FinanceDimension8Structure	= ReportingBasis.FinanceDimension8Structure
			Instance Selection
				where (related.DimensionType.Posting)

		PostingDimension9Rel
			one-to-many relation to FinanceDimension9Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= ReconciliationManagementGroup.FinanceEnterpriseGroup
				related.FinanceDimension9Structure	= ReportingBasis.FinanceDimension9Structure
			Instance Selection
				where (related.DimensionType.Posting)

		PostingDimension10Rel
			one-to-many relation to FinanceDimension10Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= ReconciliationManagementGroup.FinanceEnterpriseGroup
				related.FinanceDimension10Structure	= ReportingBasis.FinanceDimension10Structure
			Instance Selection
				where (related.DimensionType.Posting)

		NewlyCreatedReconciliationAccountRel
			one-to-many relation to ReconciliationAccount
			Field Mapping uses ByNewAccount
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.NewAccount					   = true

		ClosedPeriodEndReconciliationRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByReconciliationIsOutOfBalance
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.ReconciliationIsOutOfBalance   = true
				
		NonOpenPeriodEndReconciliationRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByStatus
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
			Instance Selection
 				where (!related.Status.Open)

		ReconciliationAccountsByGroupRel
			one-to-many relation to ReconciliationAccount
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
			Instance Selection
				where (related.ReconciliationAccountGroup = ReconciliationAccountGroup)

		ReconciliationAccountsByReportGroupRel
			one-to-many relation to ReconciliationAccount
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
			Instance Selection
				where (related.ReconciliationAccountGroup entered)

		ReconciliationAccountsByTypeRel
			one-to-many relation to ReconciliationAccount
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure



		PeriodEndReconciliationsByReportGroupRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByStatus
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
			Instance Selection
				where (related.ReconciliationAccountGroup entered)

		PeriodEndReconciliationsByGroupRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByStatus
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
			Instance Selection
				where (related.ReconciliationAccountGroup = ReconciliationAccountGroup)

		SortedReconciliationAccountRel
			one-to-many relation to ReconciliationAccount
			Field Mapping uses ByReconciliationCodeBlock
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
			Instance Selection
				where (!related.LevelType.NonAccount)

		ReconciliationAccountAccountingEntityRel
			one-to-many relation to ReconciliationAccount
			Field Mapping uses ByGeneralLedgerChartAccount
				related.ReconciliationManagementGroup					  = ReconciliationManagementGroup
				related.ReconciliationCodeBlock.GeneralLedgerChartAccount = LocalGeneralLedgerChartAccount
				related.ReconciliationCodeBlock.AccountingEntity		  = LocalAccountingEntity
			Instance Selection
				where (related.ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingEntity)

		ReconciliationAccountAccountingUnitRel
			one-to-many relation to ReconciliationAccount
			Field Mapping uses ByGeneralLedgerChartAccount
				related.ReconciliationManagementGroup					  = ReconciliationManagementGroup
				related.ReconciliationCodeBlock.GeneralLedgerChartAccount = LocalGeneralLedgerChartAccount
				related.ReconciliationCodeBlock.AccountingEntity		  = LocalAccountingEntity
				related.ReconciliationCodeBlock.AccountingUnit			  = LocalAccountingUnit
			Instance Selection
				where (related.ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingUnit)

		ReconciliationAccountProjectRel
			one-to-many relation to ReconciliationAccount
			Field Mapping uses ByGeneralLedgerChartAccount
				related.ReconciliationManagementGroup					  = ReconciliationManagementGroup
				related.ReconciliationCodeBlock.GeneralLedgerChartAccount = LocalGeneralLedgerChartAccount
				related.ReconciliationCodeBlock.AccountingEntity		  = LocalAccountingEntity
				related.ReconciliationCodeBlock.AccountingUnit			  = blank
				related.ReconciliationCodeBlock.Project 				  = LocalProject
			Instance Selection
				where (related.ReconciliationAccountStructure.ReconciliationLevel.Type.Project)

		ReconciliationAccountDimensionRel
			one-to-many relation to ReconciliationAccount
			Field Mapping uses ByGeneralLedgerChartAccount
				related.ReconciliationManagementGroup					  = ReconciliationManagementGroup
				related.ReconciliationCodeBlock.GeneralLedgerChartAccount = LocalGeneralLedgerChartAccount
				related.ReconciliationCodeBlock.AccountingEntity		  = LocalAccountingEntity
				related.ReconciliationCodeBlock.AccountingUnit			  = blank
				related.ReconciliationCodeBlock.Project 				  = blank
				related.DimensionCodeValue 								  = LocalDimensionCodeValue
			Instance Selection
				where (related.ReconciliationAccountStructure.ReconciliationLevel.Type >= 6
				and	   related.ReconciliationAccountStructure.ReconciliationLevel.Type = ReconciliationAccountStructure.ReconciliationLevel.Type)

		AllReconciliationAccountsRel
			one-to-many relation to ReconciliationAccount
			Field Mapping uses ByLevelType
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure

		ReconciliationAccountsRel
			one-to-many relation to ReconciliationAccount
			Field Mapping uses ByLevelType
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
			Instance Selection
				where (related.LevelType < 2) 

		ReconciliationGroupRel
			one-to-many relation to ReconciliationAccount
			Field Mapping uses ByLevelType
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.LevelType					   = 1 

		ReconciliationNonAccountsRel
			one-to-many relation to ReconciliationAccount
			Field Mapping uses ByLevelType
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.LevelType					   = 2 

		PeriodReconciliationGroupRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByLevelType
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.LevelType					   = 1 
			Instance Selection
				where (related.Status < 7) 

		PeriodAccountReconciliationRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByLevelType
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
			Instance Selection
				where (related.LevelType < 2 
				and    related.Status < 7) 	 

		PeriodNonAccountReconciliationRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByLevelType
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.LevelType					   = 2 
			Instance Selection
				where (related.Status < 7) 

		ReconciliationInterfaceRel
			one-to-many relation to ReconciliationInterface
			Field Mapping uses ByReconciliationCodeBlock
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure

		NonAccountReconciliationInterfaceRel
			one-to-many relation to ReconciliationInterface
			Field Mapping uses ByNonAccountReconciliation
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure

		ReconciliationAccountStructurePeriodForAuditorRel
			one-to-many relation to ReconciliationAccountStructurePeriod
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
			Instance Selection
				where (related.HasReconciliationsViewableByAuditor)

		MonthPeriodShadowRel 
			one-to-many relation to GeneralLedgerPeriodShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = ReconciliationManagementGroup
				related.GeneralLedgerCalendar       = ReportingBasis.GeneralLedgerCalendar
				related.GeneralLedgerCalendarPeriod = LocalGeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
			Instance Selection
				where (related.SummaryPeriodType.Month)

		GeneralLedgerClosePeriodRel
			one-to-many relation to GeneralLedgerClosePeriod
			Field Mapping uses ByEndDate
				related.FinanceEnterpriseGroup			 = ReconciliationManagementGroup
				related.GeneralLedgerCloseConfiguration	 = LocalCloseConfiguration
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date >= LocalPeriodEndDate)

		ReconciliationAccountByCloseConfigurationRel
			one-to-many relation to ReconciliationAccount
			Field Mapping uses ByCloseConfiguration
				related.ReconciliationManagementGroup  			 = ReconciliationManagementGroup
				related.ReconciliationAccountStructure 			 = ReconciliationAccountStructure
		
		PeriodEndReconciliationRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  			 = ReconciliationManagementGroup
				related.ReconciliationAccountStructure 			 = ReconciliationAccountStructure
		
		ReconciliationDetailRel
			one-to-many relation to ReconciliationDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  			 = ReconciliationManagementGroup
				related.ReconciliationAccountStructure 			 = ReconciliationAccountStructure
		
		ReconciliationAccountStructurePeriodRel
			one-to-many relation to ReconciliationAccountStructurePeriod
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup   = ReconciliationManagementGroup
				related.ReconciliationAccountStructure  = ReconciliationAccountStructure
				related.GeneralLedgerCloseConfiguration = LocalCloseConfiguration

	Actions
		Create is a Create Action
			Exit Rules
				invoke BuildLedgerBusClassGroup

		Update is an Update Action

		CreateAccounts is an Instance Action
			run in background
			valid when (ReconciliationType.Account)
			completion message is "CreateAccountsHasBeenSubmittedToTheQueueForProcessing"
			Parameters
				PrmChartAccountRule		 		is a GeneralLedgerChartAccount group
				PrmReconcileFrequency			is a ReconcileFrequency
				PrmPeriodWithinQuarter			is a PeriodWithinQuarter
				PrmAccountType					is a ReconciliationAccountType
				PrmCashManagementAccount		is a CashManagementAccount
				PrmReconciliationAccountGroup	is a ReconciliationAccountGroup
				PrmRisk							is Numeric 1
					States
						Low			value is 0
						Medium		value is 1
						High		value is 2
				PrmPriority						is Numeric 1
					States
						Low			value is 0
						Medium		value is 1
						High		value is 2
				PrmCloseTask					is a CloseTask
				PrmFinanceTeam					is a FinanceTeam
				PrmFinanceTeamMember			is a FinanceTeamMember
				PrmRequiresApproval				is Boolean
				PrmApprovalCode					is an ApprovalCode
				PrmRequireSupportingDoco		is Boolean
				PrmReconciliationPolicy			is a ReconciliationPolicy
				
			Parameter Rules
				PrmReconcileFrequency
					initial value is ReconcileFrequency.Monthly

				PrmPeriodWithinQuarter
					if (PrmReconcileFrequency.Quarterly)
						required
							"PeriodWithinQuarterIsRequired"
					else
						initialize

				PrmAccountType
					initial value is ReconciliationAccountType.Basic

				PrmCashManagementAccount
					if (PrmAccountType.Cash)
						required
							"CashManagementAccountIsRequired"
					else
						initialize

				PrmCloseTask
					constraint (PrmCloseTask.TaskLevel.Detail)
						"CloseTaskMustBeADetailLevelTask"

				PrmFinanceTeam
					if (PrmFinanceTeamMember entered)
						default to PrmFinanceTeamMember.FinanceTeam
						required
							"MustSelectATeamWhenTeamMemberEntered"

				PrmApprovalCode
					if (PrmRequiresApproval)
						required
							"AnApprovalCodeMustBeEnteredWhenTaskRequiresApproval"
					else
						initialize

				PrmReconciliationPolicy
					constraint (!PrmRequireSupportingDoco)
						"CannotEnterAnAutoReconciliationPolicyForAccountsThatRequireSupportingDocumentation"

			Action Rules
				LocalChartAccountRule = PrmChartAccountRule

				if (ReconciliationLevel.Type.AccountingEntity)
					for each ReportingBasis.AccountingEntityTopNode.ChildrenRel
						LocalAccountingEntity 	= each.AccountingEntity
						LocalCloseConfiguration = each.CloseConfiguration
						invoke CreateReconciliationAccounts ReportingChartAccount
							invoked.PrmChartAccountRule	              	= PrmChartAccountRule	 		
							invoked.PrmReconcileFrequency             	= PrmReconcileFrequency
							invoked.PrmPeriodWithinQuarter            	= PrmPeriodWithinQuarter
							invoked.PrmAccountType	                  	= PrmAccountType
							invoked.PrmCashManagementAccount          	= PrmCashManagementAccount		
							invoked.PrmReconciliationAccountGroup     	= PrmReconciliationAccountGroup
							invoked.PrmRisk		                        = PrmRisk				
							invoked.PrmPriority		                  	= PrmPriority				
							invoked.PrmCloseTask                      	= PrmCloseTask
							invoked.PrmFinanceTeam                    	= PrmFinanceTeam
							invoked.PrmFinanceTeamMember              	= PrmFinanceTeamMember
							invoked.PrmRequiresApproval	              	= PrmRequiresApproval		
							invoked.PrmApprovalCode			          	= PrmApprovalCode
							invoked.PrmRequireSupportingDoco          	= PrmRequireSupportingDoco	
							invoked.PrmReconciliationPolicy           	= PrmReconciliationPolicy
							invoked.PrmReconciliationManagementGroup  	= ReconciliationManagementGroup
							invoked.PrmReportingChart 				  	= ReportingBasis.ReportingChart
				    		invoked.PrmReconciliationAccountStructure 	= ReconciliationAccountStructure
				    		invoked.PrmAccountingEntity				  	= LocalAccountingEntity
				    		invoked.PrmCloseConfiguration             	= LocalCloseConfiguration
				    		invoked.PrmReconciliationLevel			  	= ReconciliationLevel
				    		invoked.BypassActiveCodeBlockEdit		  	= true
				else
				if (ReconciliationLevel.Type.AccountingUnit)
					for each ReportingBasis.AccountingEntityTopNode.ChildrenRel
						LocalAccountingEntity 	= each.AccountingEntity
						LocalCloseConfiguration = each.CloseConfiguration
						invoke CreateReconciliationAccounts AccountingUnitHierarchy
							invoked.PrmChartAccountRule	              	= PrmChartAccountRule	 		
							invoked.PrmReconcileFrequency             	= PrmReconcileFrequency
							invoked.PrmPeriodWithinQuarter            	= PrmPeriodWithinQuarter
							invoked.PrmAccountType	                  	= PrmAccountType
							invoked.PrmCashManagementAccount          	= PrmCashManagementAccount		
							invoked.PrmReconciliationAccountGroup     	= PrmReconciliationAccountGroup
							invoked.PrmRisk		                      	= PrmRisk				
							invoked.PrmPriority		                  	= PrmPriority				
							invoked.PrmCloseTask                      	= PrmCloseTask
							invoked.PrmFinanceTeam                    	= PrmFinanceTeam
							invoked.PrmFinanceTeamMember              	= PrmFinanceTeamMember
							invoked.PrmRequiresApproval	              	= PrmRequiresApproval		
							invoked.PrmApprovalCode			          	= PrmApprovalCode
							invoked.PrmRequireSupportingDoco          	= PrmRequireSupportingDoco	
							invoked.PrmReconciliationPolicy           	= PrmReconciliationPolicy
							invoked.PrmReconciliationManagementGroup  	= ReconciliationManagementGroup
							invoked.PrmReportingChart 				  	= ReportingBasis.ReportingChart
				    		invoked.PrmReconciliationAccountStructure 	= ReconciliationAccountStructure
				    		invoked.PrmAccountingEntity				  	= LocalAccountingEntity
				    		invoked.PrmCloseConfiguration             	= LocalCloseConfiguration
				    		invoked.PrmReconciliationLevel			  	= ReconciliationLevel
				    		invoked.PrmAccountingUnitStructure		  	= ReportingBasis.AccountingUnitStructure
				    		invoked.BypassActiveCodeBlockEdit		  	= true
				else
				if (ReconciliationLevel.Type.Project)
					for each ReportingBasis.AccountingEntityTopNode.ChildrenRel
						LocalAccountingEntity 	= each.AccountingEntity
						LocalCloseConfiguration = each.CloseConfiguration
						invoke CreateReconciliationAccounts ProjectHierarchy
							invoked.PrmChartAccountRule	              	= PrmChartAccountRule	 		
							invoked.PrmReconcileFrequency             	= PrmReconcileFrequency
							invoked.PrmPeriodWithinQuarter            	= PrmPeriodWithinQuarter
							invoked.PrmAccountType	                  	= PrmAccountType
							invoked.PrmCashManagementAccount          	= PrmCashManagementAccount		
							invoked.PrmReconciliationAccountGroup     	= PrmReconciliationAccountGroup
							invoked.PrmRisk		                      	= PrmRisk				
							invoked.PrmPriority		                  	= PrmPriority				
							invoked.PrmCloseTask                      	= PrmCloseTask
							invoked.PrmFinanceTeam                    	= PrmFinanceTeam
							invoked.PrmFinanceTeamMember              	= PrmFinanceTeamMember
							invoked.PrmRequiresApproval	              	= PrmRequiresApproval		
							invoked.PrmApprovalCode			          	= PrmApprovalCode
							invoked.PrmRequireSupportingDoco         	= PrmRequireSupportingDoco	
							invoked.PrmReconciliationPolicy           	= PrmReconciliationPolicy
							invoked.PrmReconciliationManagementGroup  	= ReconciliationManagementGroup
							invoked.PrmReportingChart 				  	= ReportingBasis.ReportingChart
				    		invoked.PrmReconciliationAccountStructure 	= ReconciliationAccountStructure
				    		invoked.PrmAccountingEntity				  	= LocalAccountingEntity
				    		invoked.PrmCloseConfiguration             	= LocalCloseConfiguration
				    		invoked.PrmReconciliationLevel	          	= ReconciliationLevel
				    		invoked.PrmProjectStructure 		      	= ReportingBasis.ProjectStructure
				    		invoked.BypassActiveCodeBlockEdit		  	= true
				else
				if (ReconciliationLevel.Type.Dimension1)
					for each ReportingBasis.AccountingEntityTopNode.ChildrenRel
						LocalAccountingEntity 	= each.AccountingEntity
						LocalCloseConfiguration = each.CloseConfiguration
						invoke CreateReconciliationAccounts FinanceDimension1Hierarchy
							invoked.PrmChartAccountRule	              = PrmChartAccountRule	 		
							invoked.PrmReconcileFrequency             = PrmReconcileFrequency
							invoked.PrmPeriodWithinQuarter            = PrmPeriodWithinQuarter
							invoked.PrmAccountType	                  = PrmAccountType
							invoked.PrmCashManagementAccount          = PrmCashManagementAccount		
							invoked.PrmReconciliationAccountGroup     = PrmReconciliationAccountGroup
							invoked.PrmRisk		                      = PrmRisk				
							invoked.PrmPriority		                  = PrmPriority				
							invoked.PrmCloseTask                      = PrmCloseTask
							invoked.PrmFinanceTeam                    = PrmFinanceTeam
							invoked.PrmFinanceTeamMember              = PrmFinanceTeamMember
							invoked.PrmRequiresApproval	              = PrmRequiresApproval		
							invoked.PrmApprovalCode			          = PrmApprovalCode
							invoked.PrmRequireSupportingDoco          = PrmRequireSupportingDoco	
							invoked.PrmReconciliationPolicy           = PrmReconciliationPolicy
							invoked.PrmReconciliationManagementGroup  = ReconciliationManagementGroup
							invoked.PrmReportingChart 				  = ReportingBasis.ReportingChart
				    		invoked.PrmReconciliationAccountStructure = ReconciliationAccountStructure
				    		invoked.PrmAccountingEntity				  = LocalAccountingEntity
				    		invoked.PrmCloseConfiguration             = LocalCloseConfiguration
				    		invoked.PrmReconciliationLevel	          = ReconciliationLevel
				    		invoked.PrmFinanceDimension1Structure 	  = ReportingBasis.FinanceDimension1Structure
				    		invoked.BypassActiveCodeBlockEdit		  = true
				else
				if (ReconciliationLevel.Type.Dimension2)
					for each ReportingBasis.AccountingEntityTopNode.ChildrenRel
						LocalAccountingEntity 	= each.AccountingEntity
						LocalCloseConfiguration = each.CloseConfiguration
						invoke CreateReconciliationAccounts FinanceDimension2Hierarchy
							invoked.PrmChartAccountRule					= PrmChartAccountRule	 		
							invoked.PrmReconcileFrequency 				= PrmReconcileFrequency
							invoked.PrmPeriodWithinQuarter 				= PrmPeriodWithinQuarter
							invoked.PrmAccountType						= PrmAccountType
							invoked.PrmCashManagementAccount 			= PrmCashManagementAccount		
							invoked.PrmReconciliationAccountGroup 		= PrmReconciliationAccountGroup
							invoked.PrmRisk								= PrmRisk				
							invoked.PrmPriority							= PrmPriority				
							invoked.PrmCloseTask          				= PrmCloseTask
							invoked.PrmFinanceTeam        				= PrmFinanceTeam
							invoked.PrmFinanceTeamMember  				= PrmFinanceTeamMember
							invoked.PrmRequiresApproval	  				= PrmRequiresApproval		
							invoked.PrmApprovalCode						= PrmApprovalCode
							invoked.PrmRequireSupportingDoco 			= PrmRequireSupportingDoco	
							invoked.PrmReconciliationPolicy 			= PrmReconciliationPolicy
							invoked.PrmReconciliationManagementGroup 	= ReconciliationManagementGroup
							invoked.PrmReportingChart 				 	= ReportingBasis.ReportingChart
				    		invoked.PrmReconciliationAccountStructure 	= ReconciliationAccountStructure
				    		invoked.PrmAccountingEntity				  	= LocalAccountingEntity
				    		invoked.PrmCloseConfiguration             	= LocalCloseConfiguration
				    		invoked.PrmReconciliationLevel	 		  	= ReconciliationLevel
				    		invoked.PrmFinanceDimension2Structure 	  	= ReportingBasis.FinanceDimension2Structure
				    		invoked.BypassActiveCodeBlockEdit		  	= true
				else
				if (ReconciliationLevel.Type.Dimension3)
					for each ReportingBasis.AccountingEntityTopNode.ChildrenRel
						LocalAccountingEntity 	= each.AccountingEntity
						LocalCloseConfiguration = each.CloseConfiguration
						invoke CreateReconciliationAccounts FinanceDimension3Hierarchy
							invoked.PrmChartAccountRule					= PrmChartAccountRule	 		
							invoked.PrmReconcileFrequency 				= PrmReconcileFrequency
							invoked.PrmPeriodWithinQuarter 				= PrmPeriodWithinQuarter
							invoked.PrmAccountType						= PrmAccountType
							invoked.PrmCashManagementAccount 			= PrmCashManagementAccount		
							invoked.PrmReconciliationAccountGroup 		= PrmReconciliationAccountGroup
							invoked.PrmRisk								= PrmRisk				
							invoked.PrmPriority							= PrmPriority				
							invoked.PrmCloseTask          				= PrmCloseTask
							invoked.PrmFinanceTeam        				= PrmFinanceTeam
							invoked.PrmFinanceTeamMember  				= PrmFinanceTeamMember
							invoked.PrmRequiresApproval	  				= PrmRequiresApproval		
							invoked.PrmApprovalCode						= PrmApprovalCode
							invoked.PrmRequireSupportingDoco 			= PrmRequireSupportingDoco	
							invoked.PrmReconciliationPolicy 			= PrmReconciliationPolicy
							invoked.PrmReconciliationManagementGroup 	= ReconciliationManagementGroup
							invoked.PrmReportingChart 				 	= ReportingBasis.ReportingChart
				    		invoked.PrmReconciliationAccountStructure 	= ReconciliationAccountStructure
				    		invoked.PrmAccountingEntity				  	= LocalAccountingEntity
				    		invoked.PrmCloseConfiguration             	= LocalCloseConfiguration
				    		invoked.PrmReconciliationLevel	 			= ReconciliationLevel
				    		invoked.PrmFinanceDimension3Structure 		= ReportingBasis.FinanceDimension3Structure
				    		invoked.BypassActiveCodeBlockEdit		  	= true
				else
				if (ReconciliationLevel.Type.Dimension4)
					for each ReportingBasis.AccountingEntityTopNode.ChildrenRel
						LocalAccountingEntity 	= each.AccountingEntity
						LocalCloseConfiguration = each.CloseConfiguration
						invoke CreateReconciliationAccounts FinanceDimension4Hierarchy
							invoked.PrmChartAccountRule					= PrmChartAccountRule	 		
							invoked.PrmReconcileFrequency 				= PrmReconcileFrequency
							invoked.PrmPeriodWithinQuarter 				= PrmPeriodWithinQuarter
							invoked.PrmAccountType						= PrmAccountType
							invoked.PrmCashManagementAccount 			= PrmCashManagementAccount		
							invoked.PrmReconciliationAccountGroup 		= PrmReconciliationAccountGroup
							invoked.PrmRisk								= PrmRisk				
							invoked.PrmPriority							= PrmPriority				
							invoked.PrmCloseTask          				= PrmCloseTask
							invoked.PrmFinanceTeam        				= PrmFinanceTeam
							invoked.PrmFinanceTeamMember  				= PrmFinanceTeamMember
							invoked.PrmRequiresApproval	 	 			= PrmRequiresApproval		
							invoked.PrmApprovalCode						= PrmApprovalCode
							invoked.PrmRequireSupportingDoco 			= PrmRequireSupportingDoco	
							invoked.PrmReconciliationPolicy 			= PrmReconciliationPolicy
							invoked.PrmReconciliationManagementGroup 	= ReconciliationManagementGroup
							invoked.PrmReportingChart 				 	= ReportingBasis.ReportingChart
				    		invoked.PrmReconciliationAccountStructure 	= ReconciliationAccountStructure
				    		invoked.PrmAccountingEntity				  	= LocalAccountingEntity
				    		invoked.PrmCloseConfiguration             	= LocalCloseConfiguration
				    		invoked.PrmReconciliationLevel	 			= ReconciliationLevel
				    		invoked.PrmFinanceDimension4Structure 		= ReportingBasis.FinanceDimension4Structure
				    		invoked.BypassActiveCodeBlockEdit		  	= true
				else
				if (ReconciliationLevel.Type.Dimension5)
					for each ReportingBasis.AccountingEntityTopNode.ChildrenRel
						LocalAccountingEntity 	= each.AccountingEntity
						LocalCloseConfiguration = each.CloseConfiguration
						invoke CreateReconciliationAccounts FinanceDimension5Hierarchy
							invoked.PrmChartAccountRule					= PrmChartAccountRule	 		
							invoked.PrmReconcileFrequency 				= PrmReconcileFrequency
							invoked.PrmPeriodWithinQuarter 				= PrmPeriodWithinQuarter
							invoked.PrmAccountType						= PrmAccountType
							invoked.PrmCashManagementAccount 			= PrmCashManagementAccount		
							invoked.PrmReconciliationAccountGroup 		= PrmReconciliationAccountGroup
							invoked.PrmRisk								= PrmRisk				
							invoked.PrmPriority							= PrmPriority				
							invoked.PrmCloseTask          				= PrmCloseTask
							invoked.PrmFinanceTeam        				= PrmFinanceTeam
							invoked.PrmFinanceTeamMember  				= PrmFinanceTeamMember
							invoked.PrmRequiresApproval	  				= PrmRequiresApproval		
							invoked.PrmApprovalCode						= PrmApprovalCode
							invoked.PrmRequireSupportingDoco 			= PrmRequireSupportingDoco	
							invoked.PrmReconciliationPolicy 			= PrmReconciliationPolicy
							invoked.PrmReconciliationManagementGroup 	= ReconciliationManagementGroup
							invoked.PrmReportingChart 				 	= ReportingBasis.ReportingChart
				    		invoked.PrmReconciliationAccountStructure 	= ReconciliationAccountStructure
				    		invoked.PrmAccountingEntity				  	= LocalAccountingEntity
				    		invoked.PrmCloseConfiguration             	= LocalCloseConfiguration
				    		invoked.PrmReconciliationLevel	 			= ReconciliationLevel
				    		invoked.PrmFinanceDimension5Structure 		= ReportingBasis.FinanceDimension5Structure
				    		invoked.BypassActiveCodeBlockEdit		  	= true
				else
				if (ReconciliationLevel.Type.Dimension6)
					for each ReportingBasis.AccountingEntityTopNode.ChildrenRel
						LocalAccountingEntity 	= each.AccountingEntity
						LocalCloseConfiguration = each.CloseConfiguration
						invoke CreateReconciliationAccounts FinanceDimension6Hierarchy
							invoked.PrmChartAccountRule					= PrmChartAccountRule	 		
							invoked.PrmReconcileFrequency 				= PrmReconcileFrequency
							invoked.PrmPeriodWithinQuarter 				= PrmPeriodWithinQuarter
							invoked.PrmAccountType						= PrmAccountType
							invoked.PrmCashManagementAccount 			= PrmCashManagementAccount		
							invoked.PrmReconciliationAccountGroup 		= PrmReconciliationAccountGroup
							invoked.PrmRisk								= PrmRisk				
							invoked.PrmPriority							= PrmPriority				
							invoked.PrmCloseTask          				= PrmCloseTask
							invoked.PrmFinanceTeam        				= PrmFinanceTeam
							invoked.PrmFinanceTeamMember  				= PrmFinanceTeamMember
							invoked.PrmRequiresApproval	  				= PrmRequiresApproval		
							invoked.PrmApprovalCode						= PrmApprovalCode
							invoked.PrmRequireSupportingDoco 			= PrmRequireSupportingDoco	
							invoked.PrmReconciliationPolicy 			= PrmReconciliationPolicy
							invoked.PrmReconciliationManagementGroup 	= ReconciliationManagementGroup
							invoked.PrmReportingChart 				 	= ReportingBasis.ReportingChart
				    		invoked.PrmReconciliationAccountStructure 	= ReconciliationAccountStructure
				    		invoked.PrmAccountingEntity				  	= LocalAccountingEntity
				    		invoked.PrmCloseConfiguration             	= LocalCloseConfiguration
				    		invoked.PrmReconciliationLevel	 			= ReconciliationLevel
				    		invoked.PrmFinanceDimension6Structure 		= ReportingBasis.FinanceDimension6Structure
				    		invoked.BypassActiveCodeBlockEdit		  	= true
				else
				if (ReconciliationLevel.Type.Dimension7)
					for each ReportingBasis.AccountingEntityTopNode.ChildrenRel
						LocalAccountingEntity 	= each.AccountingEntity
						LocalCloseConfiguration = each.CloseConfiguration
						invoke CreateReconciliationAccounts FinanceDimension7Hierarchy
							invoked.PrmChartAccountRule					= PrmChartAccountRule	 		
							invoked.PrmReconcileFrequency 				= PrmReconcileFrequency
							invoked.PrmPeriodWithinQuarter 				= PrmPeriodWithinQuarter
							invoked.PrmAccountType						= PrmAccountType
							invoked.PrmCashManagementAccount 			= PrmCashManagementAccount		
							invoked.PrmReconciliationAccountGroup 		= PrmReconciliationAccountGroup
							invoked.PrmRisk								= PrmRisk				
							invoked.PrmPriority							= PrmPriority				
							invoked.PrmCloseTask          				= PrmCloseTask
							invoked.PrmFinanceTeam       	 			= PrmFinanceTeam
							invoked.PrmFinanceTeamMember  				= PrmFinanceTeamMember
							invoked.PrmRequiresApproval	  				= PrmRequiresApproval		
							invoked.PrmApprovalCode						= PrmApprovalCode
							invoked.PrmRequireSupportingDoco 			= PrmRequireSupportingDoco	
							invoked.PrmReconciliationPolicy 			= PrmReconciliationPolicy
							invoked.PrmReconciliationManagementGroup 	= ReconciliationManagementGroup
							invoked.PrmReportingChart 				 	= ReportingBasis.ReportingChart
				    		invoked.PrmReconciliationAccountStructure 	= ReconciliationAccountStructure
				    		invoked.PrmAccountingEntity				  	= LocalAccountingEntity
				    		invoked.PrmCloseConfiguration             	= LocalCloseConfiguration
				    		invoked.PrmReconciliationLevel	 			= ReconciliationLevel
				    		invoked.PrmFinanceDimension7Structure 		= ReportingBasis.FinanceDimension7Structure
				    		invoked.BypassActiveCodeBlockEdit		  	= true
				else
				if (ReconciliationLevel.Type.Dimension8)
					for each ReportingBasis.AccountingEntityTopNode.ChildrenRel
						LocalAccountingEntity 	= each.AccountingEntity
						LocalCloseConfiguration = each.CloseConfiguration
						invoke CreateReconciliationAccounts FinanceDimension8Hierarchy
							invoked.PrmChartAccountRule					= PrmChartAccountRule	 		
							invoked.PrmReconcileFrequency 				= PrmReconcileFrequency
							invoked.PrmPeriodWithinQuarter 				= PrmPeriodWithinQuarter
							invoked.PrmAccountType						= PrmAccountType
							invoked.PrmCashManagementAccount 			= PrmCashManagementAccount		
							invoked.PrmReconciliationAccountGroup 		= PrmReconciliationAccountGroup
							invoked.PrmRisk								= PrmRisk				
							invoked.PrmPriority							= PrmPriority				
							invoked.PrmCloseTask          				= PrmCloseTask
							invoked.PrmFinanceTeam        				= PrmFinanceTeam
							invoked.PrmFinanceTeamMember  				= PrmFinanceTeamMember
							invoked.PrmRequiresApproval	  				= PrmRequiresApproval		
							invoked.PrmApprovalCode						= PrmApprovalCode
							invoked.PrmRequireSupportingDoco 			= PrmRequireSupportingDoco	
							invoked.PrmReconciliationPolicy 			= PrmReconciliationPolicy
							invoked.PrmReconciliationManagementGroup 	= ReconciliationManagementGroup
							invoked.PrmReportingChart 				 	= ReportingBasis.ReportingChart
				    		invoked.PrmReconciliationAccountStructure 	= ReconciliationAccountStructure
				    		invoked.PrmAccountingEntity				  	= LocalAccountingEntity
				    		invoked.PrmCloseConfiguration             	= LocalCloseConfiguration
				    		invoked.PrmReconciliationLevel	 			= ReconciliationLevel
				    		invoked.PrmFinanceDimension8Structure 		= ReportingBasis.FinanceDimension8Structure
				    		invoked.BypassActiveCodeBlockEdit		  	= true
				else
				if (ReconciliationLevel.Type.Dimension9)
					for each ReportingBasis.AccountingEntityTopNode.ChildrenRel
						LocalAccountingEntity 	= each.AccountingEntity
						LocalCloseConfiguration = each.CloseConfiguration
						invoke CreateReconciliationAccounts FinanceDimension9Hierarchy
							invoked.PrmChartAccountRule					= PrmChartAccountRule	 		
							invoked.PrmReconcileFrequency 				= PrmReconcileFrequency
							invoked.PrmPeriodWithinQuarter 				= PrmPeriodWithinQuarter
							invoked.PrmAccountType						= PrmAccountType
							invoked.PrmCashManagementAccount 			= PrmCashManagementAccount		
							invoked.PrmReconciliationAccountGroup 		= PrmReconciliationAccountGroup
							invoked.PrmRisk								= PrmRisk				
							invoked.PrmPriority							= PrmPriority				
							invoked.PrmCloseTask          				= PrmCloseTask
							invoked.PrmFinanceTeam        				= PrmFinanceTeam
							invoked.PrmFinanceTeamMember  				= PrmFinanceTeamMember
							invoked.PrmRequiresApproval	  				= PrmRequiresApproval		
							invoked.PrmApprovalCode						= PrmApprovalCode
							invoked.PrmRequireSupportingDoco 			= PrmRequireSupportingDoco	
							invoked.PrmReconciliationPolicy 			= PrmReconciliationPolicy
							invoked.PrmReconciliationManagementGroup 	= ReconciliationManagementGroup
							invoked.PrmReportingChart 				 	= ReportingBasis.ReportingChart
				    		invoked.PrmReconciliationAccountStructure 	= ReconciliationAccountStructure
				    		invoked.PrmAccountingEntity				  	= LocalAccountingEntity
				    		invoked.PrmCloseConfiguration             	= LocalCloseConfiguration
				    		invoked.PrmReconciliationLevel	 			= ReconciliationLevel
				    		invoked.PrmFinanceDimension9Structure 		= ReportingBasis.FinanceDimension9Structure
				    		invoked.BypassActiveCodeBlockEdit		  	= true
				else
				if (ReconciliationLevel.Type.Dimension10)
					for each ReportingBasis.AccountingEntityTopNode.ChildrenRel
						LocalAccountingEntity 	= each.AccountingEntity
						LocalCloseConfiguration = each.CloseConfiguration
						invoke CreateReconciliationAccounts FinanceDimension10Hierarchy
							invoked.PrmChartAccountRule					= PrmChartAccountRule	 		
							invoked.PrmReconcileFrequency 				= PrmReconcileFrequency
							invoked.PrmPeriodWithinQuarter 				= PrmPeriodWithinQuarter
							invoked.PrmAccountType						= PrmAccountType
							invoked.PrmCashManagementAccount 			= PrmCashManagementAccount		
							invoked.PrmReconciliationAccountGroup 		= PrmReconciliationAccountGroup
							invoked.PrmRisk								= PrmRisk				
							invoked.PrmPriority							= PrmPriority				
							invoked.PrmCloseTask          				= PrmCloseTask
							invoked.PrmFinanceTeam        				= PrmFinanceTeam
							invoked.PrmFinanceTeamMember  				= PrmFinanceTeamMember
							invoked.PrmRequiresApproval	  				= PrmRequiresApproval		
							invoked.PrmApprovalCode						= PrmApprovalCode
							invoked.PrmRequireSupportingDoco 			= PrmRequireSupportingDoco	
							invoked.PrmReconciliationPolicy 			= PrmReconciliationPolicy
							invoked.PrmReconciliationManagementGroup 	= ReconciliationManagementGroup
							invoked.PrmReportingChart 				 	= ReportingBasis.ReportingChart
				    		invoked.PrmReconciliationAccountStructure 	= ReconciliationAccountStructure
				    		invoked.PrmAccountingEntity				  	= LocalAccountingEntity
				    		invoked.PrmCloseConfiguration             	= LocalCloseConfiguration
				    		invoked.PrmReconciliationLevel	 			= ReconciliationLevel
				    		invoked.PrmFinanceDimension10Structure 		= ReportingBasis.FinanceDimension10Structure
				    		invoked.BypassActiveCodeBlockEdit		  	= true

			Exit Rules
				HaveCreatedAccounts = true

		CommitTransaction is an Instance Action
			restricted
			Action Rules
				commit transaction

		ResetAllNewAccountsFlag is an Instance Action
			restricted
			Action Rules
				invoke ResetNewAccountFlag NewlyCreatedReconciliationAccountRel

		CreatePeriodReconciliations is an Instance Action
			run in background
			valid when (HasAccountsOrNonAccounts)
			default label is "CreatePeriodReconciliationsForStructure"
			Parameters
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				PeriodEndDate					is Date
				NextPeriod						is Boolean
				ReconciliationAccountRule		is a ReconciliationAccount group
				FinanceTeam
				FinanceTeamMember
				TeamMemberOverridden			is Boolean

			Parameter Rules
				PeriodEndDate
					if (!NextPeriod)
						required
							"PeriodEndDateOrNextPeriodIsRequired"
					else
						cannot be entered
							"CannotEnterBothPeriodEndDateAndNextPeriod"
							
				NextPeriod
					if (!PeriodEndDate entered)
						required
							"PeriodEndDateOrNextPeriodIsRequired"
					else
						cannot be entered
							"CannotEnterBothPeriodEndDateAndNextPeriod"

				FinanceTeam
					if (FinanceTeamMember entered)
						default to FinanceTeamMember.FinanceTeam
						required
							"MustSelectATeamWhenTeamMemberEntered"

			Local Fields
				LocalQuarterPeriod				is Numeric 1

			Action Rules
				for each distinct CloseConfiguration in ReconciliationAccountByCloseConfigurationRel
					LocalGeneralLedgerCalendar = ReportingBasis.GeneralLedgerCalendar
					LocalCloseConfiguration = each.CloseConfiguration
					if (PeriodEndDate entered)
						LocalPeriodEndDate = PeriodEndDate
					else
						LocalPeriodEndDate = last ReconciliationAccountStructurePeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date + 1 day
					LocalGeneralLedgerClosePeriod = first GeneralLedgerClosePeriodRel.GeneralLedgerClosePeriod
					LocalQuarterPeriod = PeriodWithinQuarterDerived

					if (LocalCloseConfiguration entered)
						invoke SchedulePeriodReconciliations ReconciliationAccount
							invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
							invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
							invoked.PrmCloseConfiguration				= LocalCloseConfiguration
							invoked.PrmGeneralLedgerClosePeriod			= LocalGeneralLedgerClosePeriod
							invoked.PrmReconciliationAccountRule		= ReconciliationAccountRule
							invoked.PrmFinanceTeam						= FinanceTeam
							invoked.PrmFinanceTeamMember				= FinanceTeamMember
							invoked.PrmPeriodWithinQuarter				= LocalQuarterPeriod
							if (LocalGeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.IsEndOfYear)
								invoked.PrmAnnualPeriod 				= true
							if (TeamMemberOverridden or (FinanceTeam entered and FinanceTeamMember not entered))
								invoked.TeamMemberOverridden			= true
		
		UpdateReconciliationAssetAmounts is a Set Action
			valid when (HasAccounts)
			default label is "UpdateReconciliationAssetAmounts"
			Parameters
                PrmReconciliationManagementGroup    is a ReconciliationManagementGroup
                	default label is "ReconciliationManagementGroup"
                PrmReconciliationAccountStructure   is a ReconciliationAccountStructure
                	default label is "ReconciliationAccountStructure"
 				PrmReconciliationAccount   			is a ReconciliationAccount
                	default label is "ReconciliationAccount"
				PrmPeriodEndDate					is Date
					default label is "PeriodEndDate"			
                	
            Parameter Rules
                PrmReconciliationManagementGroup
                    required
                        "ReconciliationManagementGroupIsRequired"
            	PrmReconciliationAccountStructure
                    required
                        "ReconciliationAccountStructureIsRequired"
				PrmReconciliationAccount
					if(PrmReconciliationAccount entered)
						constraint (!PrmReconciliationAccount.IsIndependentGroup)
	                        "MustSelectAssetAccountWithinIndependentGroup"
			Instance Selection
                where (ReconciliationManagementGroup = PrmReconciliationManagementGroup
                and    ReconciliationAccountStructure = PrmReconciliationAccountStructure)
               
			Action Rules
				Instance Rules
					for each distinct CloseConfiguration in ReconciliationAccountByCloseConfigurationRel
						LocalGeneralLedgerCalendar = ReportingBasis.GeneralLedgerCalendar
						LocalCloseConfiguration = each.CloseConfiguration
						LocalPeriodEndDate = PrmPeriodEndDate
						LocalGeneralLedgerClosePeriod = first GeneralLedgerClosePeriodRel.GeneralLedgerClosePeriod
						if (LocalCloseConfiguration entered)
							invoke UpdateReconciliationAssetAmounts PeriodEndReconciliation
								invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
								invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
								invoked.PrmReconciliationAccount			= PrmReconciliationAccount
								invoked.PrmCloseConfiguration				= LocalCloseConfiguration
								if(PrmPeriodEndDate entered)
									invoked.PrmGeneralLedgerClosePeriod			= LocalGeneralLedgerClosePeriod
									
		ExecuteAutoReconciliationPolicies is an Instance Action
			valid when (ReconciliationType.Account)
			Action Rules
				invoke EvaluateReconciliationPolicy PeriodEndReconciliation
    				invoked.PrmReconciliationManagementGroup 	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure

		MassUpdateReconciliationAccounts is an Instance Action
            valid when (ReconciliationType.Account)
            Parameters
                PrmSelectionMethod						is Numeric 1
                	States
                		AccountSelection	value is 1
                		AccountRange		value is 2
                PrmReconciliationAccountSelection		is a ReconciliationAccount group
                PrmReconciliationFromAccount   			is a GeneralLedgerChartAccount
                PrmReconciliationToAccount				is a GeneralLedgerChartAccount
                PrmAccountType                         	is a ReconciliationAccountType
                PrmCashAccount							is a CashManagementAccount
                PrmRisk                                	is Numeric 1 
                    States
                        Low                 value is 1
                        Medium	            value is 2
                        High       		    value is 3
                PrmPriority                            	is Numeric 1 
                    States
                        Low                	value is 1
                        Medium            	value is 2
                        High            	value is 3
                PrmRequiresApproval                    	is Numeric 1 
                    States
                        ChangeToTrue    	value is 1
                        ChangeToFalse    	value is 2
                PrmApprovalCode                        	is an ApprovalCode
                PrmRequireSupportingDoco       		   	is Numeric 1 
                    States
                        ChangeToTrue    	value is 1
                        ChangeToFalse   	value is 2
                PrmReconciliationAccountGroup    	   	is a ReconciliationAccountGroup
                PrmRemoveReconciliationAccountGroup    	is Boolean
                PrmReconcileFrequency				   	is a ReconcileFrequency
             	PrmPeriodWithinQuarter                	is a PeriodWithinQuarter
                PrmReconciliationPolicy					is a ReconciliationPolicy
                PrmRemoveReconciliationPolicy			is Boolean
                PrmCloseTask                           	is a CloseTask
                PrmRemoveCloseTask                     	is Boolean
                PrmFinanceTeam                         	is a FinanceTeam
                PrmAssignedResource                    	is a FinanceTeamMember

            Parameter Rules
                PrmSelectionMethod
                	required
                		"SelectionMethodIsRequired"
                		
                PrmReconciliationAccountSelection
                    if (PrmSelectionMethod.AccountSelection)
                    	required
                        	"AccountSelectionIsRequired"
					else
                    	initialize
                    	
				PrmReconciliationFromAccount
					if (PrmSelectionMethod.AccountRange)
                    	required
                        	"AccountRangeIsRequired"
					else
                    	initialize
						
                PrmReconciliationToAccount
                    if (PrmSelectionMethod.AccountSelection)
						initialize
						
					if (PrmReconciliationToAccount entered)
                        constraint (PrmReconciliationToAccount >= PrmReconciliationFromAccount)
                            "ToAccountMustBeGreaterThanFromAccount"

                PrmAccountType
                    if (PrmAccountType entered)
                        ChangesHaveBeenMade = true

                PrmCashAccount
                	if (PrmAccountType.Cash)
						required
							"CashAccountIsRequired"
					else
						cannot be entered
							"CashAccountCannotBeEntered"

                PrmRisk
                    if (PrmRisk entered)
                        ChangesHaveBeenMade = true

                PrmPriority
                    if (PrmPriority entered)
                        ChangesHaveBeenMade = true

                PrmRequiresApproval
                    if (PrmRequiresApproval entered)
                        ChangesHaveBeenMade = true

                PrmApprovalCode
					constraint (PrmApprovalCode.HasApprovalLevels)
						"CannotUseThisApprovalCode;ItHasNoApprovalLevels"
					constraint (!PrmApprovalCode.HasTeamWithNoMembers)
						"CannotUseThisApprovalCode;ItContainsATeamWithNoMembers"
					constraint (!PrmApprovalCode.HasInvalidEscalations)
						"CannotUseThisApprovalCode;ItHasInvalidEscalationSettings"
					constraint (!PrmApprovalCode.HasInactiveResources)
						"CannotUseThisApprovalCode;ItHasInactiveResources"

					if (PrmRequiresApproval.ChangeToTrue)
                        required
                            "ApprovalCodeIsRequired"
                    else
                        initialize

                    if (PrmApprovalCode entered)
                        ChangesHaveBeenMade = true

                PrmRequireSupportingDoco
                    if (PrmRequireSupportingDoco entered)
                        ChangesHaveBeenMade = true

                PrmReconciliationAccountGroup
                    if (PrmAccountType entered)
                        if (PrmReconciliationAccountGroup.ReconciliationAccountType entered)
	                        constraint (PrmAccountType = PrmReconciliationAccountGroup.ReconciliationAccountType)
	                            "AccountTypeForReportGroupMustBe<PrmAccountType>"

                    if (PrmReconciliationAccountGroup entered)
                        ChangesHaveBeenMade = true

                PrmRemoveReconciliationAccountGroup
                    if (PrmReconciliationAccountGroup entered)
                        constraint (!PrmRemoveReconciliationAccountGroup)
                            "CannotUpdateTheReportGroupAndRemoveTheReportGroup"

                    if (PrmRemoveReconciliationAccountGroup)
                        ChangesHaveBeenMade = true

                PrmReconcileFrequency
                    if (PrmReconcileFrequency entered)
                        ChangesHaveBeenMade = true

				PrmPeriodWithinQuarter
					if (PrmReconcileFrequency.Quarterly)
						required
							"PeriodWithinQuarterIsRequired"
					else
						initialize

					if (PrmPeriodWithinQuarter entered)
						ChangesHaveBeenMade = true

				PrmReconciliationPolicy
					constraint (!PrmRequireSupportingDoco.ChangeToTrue)
						"CannotEnterAnAutoReconciliationPolicyForAccountsThatRequireSupportingDocumentation"

					if (PrmReconciliationPolicy entered)
						ChangesHaveBeenMade = true

                PrmRemoveReconciliationPolicy
                    if (PrmReconciliationPolicy entered)
                        constraint (!PrmRemoveReconciliationPolicy)
                            "CannotUpdateTheAutoReconciliationPolicyAndRemoveTheAutoReconciliationPolicy"

                    if (PrmRemoveReconciliationPolicy)
                        ChangesHaveBeenMade = true

                PrmCloseTask
                    constraint (PrmCloseTask.TaskLevel.Detail)
                        "CloseTaskMustBeADetailLevelTask"

                    if (PrmCloseTask entered)
                        ChangesHaveBeenMade = true

                PrmRemoveCloseTask
                    if (PrmCloseTask entered)
                        constraint (!PrmRemoveCloseTask)
                            "CannotUpdateTheCloseTaskAndRemoveTheCloseTask"

                    if (PrmRemoveCloseTask)
                        ChangesHaveBeenMade = true

                PrmFinanceTeam
                    if (PrmAssignedResource entered)
                        required
                            "MustSelectATeamWhenTeamMemberEntered"

                    if (PrmFinanceTeam entered)
                        ChangesHaveBeenMade = true

                PrmAssignedResource
                    if (PrmAssignedResource entered)
                        ChangesHaveBeenMade = true

            Local Fields
                ChangesHaveBeenMade                    is Boolean

            Action Rules
                constraint (ChangesHaveBeenMade)
                    "MustEnterAReconciliationAccountValueToUpdate"

                if (PrmReconciliationAccountSelection entered)
                    confirmation required
                        "Caution:ThisActionWillUpdateAllAccountsSelectedWithTheUpdatedValues;WouldYouLikeToContinue?"
                else
                    confirmation required
                        "Caution:ThisActionWillUpdateAllAccountsWithinTheSpecifiedAccountRangeWithTheUpdatedValues;WouldYouLikeToContinue?"

                if (ChangesHaveBeenMade)
                    invoke MassUpdateReconciliationAccounts ReconciliationAccount
                        invoked.PrmReconciliationManagementGroup	 = ReconciliationManagementGroup
                        invoked.PrmReconciliationAccountStructure	 = ReconciliationAccountStructure
                        invoked.PrmReconciliationAccountSelection    = PrmReconciliationAccountSelection
                        invoked.PrmReconciliationFromAccount         = PrmReconciliationFromAccount
                        invoked.PrmReconciliationToAccount           = PrmReconciliationToAccount
                        invoked.PrmAccountType                       = PrmAccountType
                        invoked.PrmCashAccount						 = PrmCashAccount
                        invoked.PrmRisk                              = PrmRisk
                        invoked.PrmPriority                          = PrmPriority
                        invoked.PrmRequiresApproval                  = PrmRequiresApproval
                        invoked.PrmApprovalCode                      = PrmApprovalCode
                        invoked.PrmRequireSupportingDoco             = PrmRequireSupportingDoco
                        invoked.PrmReconciliationAccountGroup        = PrmReconciliationAccountGroup
                        invoked.PrmRemoveReconciliationAccountGroup  = PrmRemoveReconciliationAccountGroup
                        invoked.PrmReconcileFrequency                = PrmReconcileFrequency
                        invoked.PrmPeriodWithinQuarter               = PrmPeriodWithinQuarter
                        invoked.PrmReconciliationPolicy				 = PrmReconciliationPolicy
                        invoked.PrmRemoveReconciliationPolicy		 = PrmRemoveReconciliationPolicy
                        invoked.PrmCloseTask                         = PrmCloseTask
                        invoked.PrmRemoveCloseTask                   = PrmRemoveCloseTask
                        invoked.PrmFinanceTeam                       = PrmFinanceTeam
                        invoked.PrmAssignedResource                  = PrmAssignedResource

		MassDeleteReconciliationAccounts is an Instance Action
            Parameters
                PrmSelectionMethod						is Numeric 1
                	States
                		AccountSelection	value is 1
                		AccountRange		value is 2
                PrmReconciliationAccountSelection		is a ReconciliationAccount group
                PrmReconciliationFromAccount   			is a GeneralLedgerChartAccount
                PrmReconciliationToAccount				is a GeneralLedgerChartAccount

            Parameter Rules
                PrmSelectionMethod
                	initial value is 1 
                		when (ReconciliationType.NonAccount)
                	
                	if (ReconciliationType.NonAccount)
                		constraint (PrmSelectionMethod.AccountSelection)
							"MustBeAccountSelectionForNonAccountStructures"
					
					required
                		"SelectionMethodIsRequired"
                		
                PrmReconciliationAccountSelection
                    if (PrmSelectionMethod.AccountSelection)
                    	required
                        	"AccountSelectionIsRequired"
					else
                    	initialize
                    	
				PrmReconciliationFromAccount
					if (PrmSelectionMethod.AccountRange)
                    	required
                        	"AccountRangeIsRequired"
					else
                    	initialize
						
                PrmReconciliationToAccount
					if (PrmSelectionMethod.AccountSelection)
						initialize
						
					if (PrmReconciliationToAccount entered)
                        constraint (PrmReconciliationToAccount >= PrmReconciliationFromAccount)
                            "ToAccountMustBeGreaterThanFromAccount"

            Action Rules
                if (PrmReconciliationAccountSelection entered)
                    confirmation required
                        "Caution:ThisActionWillDeleteAllAccountsSelectedThatDoNotHavePeriodReconciliations;WouldYouLikeToContinue?"
                else
                    confirmation required
                        "Caution:ThisActionWillDeleteAllAccountsWithinTheSpecifiedAccountRangeThatDoNotHavePeriodReconciliations;WouldYouLikeToContinue?"

                invoke MassDeleteReconciliationAccounts ReconciliationAccount
                    invoked.PrmReconciliationManagementGroup	 = ReconciliationManagementGroup
                    invoked.PrmReconciliationAccountStructure	 = ReconciliationAccountStructure
                    invoked.PrmReconciliationAccountSelection    = PrmReconciliationAccountSelection
                    invoked.PrmReconciliationFromAccount         = PrmReconciliationFromAccount
                    invoked.PrmReconciliationToAccount           = PrmReconciliationToAccount
                        
		BuildLedgerBusClassGroup is an Instance Action
			restricted
			Parameters
			Local Fields
				LocalBusinessClass			is a BusinessClass
				LocalLedgerGroup			is a BusinessClassGroup
				LocalPmyLedgerCondition		is LPLText
				LocalLedgerCondition		is LPLText
				LocalQuote					is Alpha 1

			Action Rules
				LocalQuote				= "\""
				LocalPmyLedgerCondition	= "("
				LocalLedgerCondition	= "("
				for each ReportingBasis.LedgerTopNode.ChildrenRel
					if (LocalPmyLedgerCondition = "(")
						LocalPmyLedgerCondition += "(GeneralLedgerTransaction.PrimaryLedger="
						LocalPmyLedgerCondition += LocalQuote
						LocalPmyLedgerCondition += each.Ledger
						LocalPmyLedgerCondition += LocalQuote
						LocalPmyLedgerCondition += ")"

						LocalLedgerCondition += "(GeneralLedgerTransaction.FinanceCodeBlock.Ledger="
						LocalLedgerCondition += LocalQuote
						LocalLedgerCondition += each.Ledger
						LocalLedgerCondition += LocalQuote
						LocalLedgerCondition += ")"
					else
						LocalPmyLedgerCondition += " or (GeneralLedgerTransaction.PrimaryLedger="
						LocalPmyLedgerCondition += LocalQuote
						LocalPmyLedgerCondition += each.Ledger
						LocalPmyLedgerCondition += LocalQuote
						LocalPmyLedgerCondition += ")"

						LocalLedgerCondition += " or (GeneralLedgerTransaction.FinanceCodeBlock.Ledger="
						LocalLedgerCondition += LocalQuote
						LocalLedgerCondition += each.Ledger
						LocalLedgerCondition += LocalQuote
						LocalLedgerCondition += ")"
				LocalPmyLedgerCondition += ")"
				LocalLedgerCondition += ")"

				LocalPmyLedgerCondition += " and "
				LocalPmyLedgerCondition += LocalLedgerCondition

				LocalBusinessClass            = "GeneralLedgerTransaction"
				LocalLedgerGroup              = ("_" + ReconciliationManagementGroup.FinanceEnterpriseGroup + "/" + ReportingBasis + "_")

				if (!LocalLedgerGroup exists)
					invoke Create BusinessClassGroup
						invoked.BusinessClass         = LocalBusinessClass
						invoked.BusinessClassGroup    = LocalLedgerGroup
						invoked.Description           = ("Group For Basis " + ReportingBasis)
						invoked.Active                = true
						invoked.Condition             = LocalPmyLedgerCondition
				else
					invoke Update LocalLedgerGroup
						invoked.Condition             = LocalPmyLedgerCondition

				LedgerBusinessClassGroup = LocalLedgerGroup













		Delete is a Delete Action
			Action Rules
				constraint (!NonOpenPeriodEndReconciliationRel exists)
					"CannotDeleteReconciliationStructure;InProcessOrClosedPeriodReconciliationsExist"

		Purge is a Purge Action
			restricted
