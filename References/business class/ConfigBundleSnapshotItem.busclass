ConfigBundleSnapshotItem is a BusinessClass
	owned by repository
 	prefix is cbsi
 	default label is "ConfigurationBundleSnapshotItem"
 	disable data area copy
 	
    Ontology
        part of ConfigBundleSnapshot
        	delete cascades
    		relative key is ConfigSnapshotItemInfo
    			default label is "SnapshotItemInformation"

	Patterns
		disable AsOfDateProcessing
        disable EffectiveDated
        disable Auditing
        implements CreateStamp
       
    Persistent Fields
    	LPL  					is LPL
    	Status					is a UserObjectStatus
 		ConfigValidationStatus
 		ErrorText               is Text
 			default label is "SourceErrorText"
 		OriginatingReference    is BusinessObjectReference
 		DeletedRecord			is Boolean
 		Independent             is Boolean
 		LPLIndex	 	        is Text 
 		Description 	        is Text
 		Documentation 		    is a ConfigAttachment
 		UserEditorType
 		KeyFieldName			is LPLName 
 		BusSet					is a LenientBusSet  
 		TypeValue				is Numeric size 1 
 		UserAction		        is LPLName // Used only for UserForm's for an "extension" type User Actions.
 		ConfigAppliedStatus
 		Owner                   is like Actor 
 		ConfigRollbackInfo
 			translatable
 		Tags                    is a ConfigurationTagOccurs
 		ConfigSnapshotItemFolderInfo
 			translatable
 		ExtendedInfo			is JSONObject
 			default label is "ExtendedInformation"
	
	Transient Fields



		TransSetConfigSnapshotReportDefInfo is a ConfigSnapshotItemReportDefInfo
			translatable
			protected
			default label is "ReportDefinitionInformation"
			
	Conditions
		ValidationFailed
			when (ConfigValidationStatus.Status.Failed or ErrorText entered)

		AnyValidationFailed
		    when (ValidationFailed
		    or   ConfigBundleSnapshot.ConfigValidationStatus.Status.Failed)
		    
		RollbackValidated
			when (not ConfigRollbackInfo.ConfigValidationStatus.Status.NotValidated)
		    
		RollbackValidationFailed
			when (ConfigRollbackInfo.ConfigValidationStatus.Status.Failed or ConfigRollbackInfo.ConfigValidationStatus.HasErrorText)
		
		AnyRollbackValidationFailed
			when (ConfigRollbackInfo.ConfigValidationStatus.Status.Failed
			or    RollbackValidationFailed)

		HasErrorText
			default label is "ErrorTextEntered"
			when (ErrorText entered)

		HasActor
			default label is "ActorEntered"
			when (ConfigSnapshotItemInfo.Actor entered)
			
		HasIndexLPL
			default label is "LPLIndexEntered"
			when (LPLIndex entered)
			
		IsPendingApplyCreate
			default label is "PendingApplyCreate"
		    when (PendingApplicationStatus = LocalPendingAppStatus.Create)
		IsPendingApplyUpdate
			default label is "PendingApplyUpdate"
            when (PendingApplicationStatus = LocalPendingAppStatus.Update)
        IsPendingApplyDelete
        	default label is "PendingApplyDelete"
		    when (PendingApplicationStatus = LocalPendingAppStatus.Delete)
		IsPendingApplyNoop
			default label is "PendingApplyNoOperation"
            when (PendingApplicationStatus = LocalPendingAppStatus.NoOperation)
        HasDocumentation
        	default label is "DocumentationEntered"
            when (Documentation entered)

        StatusChanged
            when (CurrentConfigurationStatus != Status)

        HasDifference
        	default label is "Difference"
            when (StatusChanged or LPLChanged)

        HasLocalConfiguration
        	default label is "LocalConfiguration"
            when (ConfigEntityRel exists)
            

        ShowEditConfiguration
            restricted
            when (ConfigBundleSnapshot.IsSystemSnapshot and HasLocalConfiguration)

        ShowAddConfiguration
            restricted
            when (ConfigBundleSnapshot.IsSystemSnapshot and !HasLocalConfiguration)
			
        IsReportOrFolder
        	default label is "ReportOrFolder"
        	when (ConfigSnapshotItemInfo.UserFolder entered)
        	
        HasExtendedInfo
        	restricted
        	default label is untranslatable 
        	when (ExtendedInfo entered)
			
	Derived Fields
		CurrentConfigurationLPL is a DerivedField
			type is LPL
			default label is "CurrentConfigurationLPL"

			if (ConfigSnapshotItemInfo.ConfigEntityType.KeyField)
                return UserKeyFieldRel.LPL

			if (ConfigSnapshotItemInfo.ConfigEntityType.BusinessClass)
			    return UserBusinessClassRel.LPL

			if (ConfigSnapshotItemInfo.ConfigEntityType.Relation)
                return UserRelationRel.LPL

			if (ConfigSnapshotItemInfo.ConfigEntityType.Field)
			    return UserFieldRel.LPL

			if (ConfigSnapshotItemInfo.ConfigEntityType.Action
			or  ConfigSnapshotItemInfo.ConfigEntityType.ActionConfiguration
			or  ConfigSnapshotItemInfo.ConfigEntityType.ActionExtension
			or  ConfigSnapshotItemInfo.ConfigEntityType.UserAction)
			    return UserActionRel.LPL

			if (ConfigSnapshotItemInfo.ConfigEntityType.ProductLine)
			    return UserProductRel.LPL

    		if (ConfigSnapshotItemInfo.ConfigEntityType.CubeConfiguration)
    		    return UserCubeRel.LPL

     		if (ConfigSnapshotItemInfo.ConfigEntityType.List)
				if (ConfigSnapshotItemInfo.UserFolder entered)
					return UserListFolderRel.Delta
				else
				if (ConfigSnapshotItemInfo.Actor entered)
				    return UserListActorRel.Delta
				else
				    return UserListGlobalRel.Delta

			if (ConfigSnapshotItemInfo.ConfigEntityType.Form)
				if (ConfigSnapshotItemInfo.Actor entered)
				    return UserFormActorRel.LPL
				else
				    return UserFormGlobalRel.LPL

    		if (ConfigSnapshotItemInfo.ConfigEntityType.Menu)
    		    return UserMenuRel.LPL

			if (ConfigSnapshotItemInfo.ConfigEntityType.Page)
			    return UserPageRel.LPL

    		if (ConfigSnapshotItemInfo.ConfigEntityType.Report) 
				if (ConfigSnapshotItemInfo.Actor entered)
				    return UserSJRptActorRel.LPL
				else
				    return UserSJRptGlobalRel.LPL

    		if (ConfigSnapshotItemInfo.ConfigEntityType.ImageMap)
    		    return UserImageMapRel.Delta

    		if (ConfigSnapshotItemInfo.ConfigEntityType.CardView)
				if (ConfigSnapshotItemInfo.Actor entered)
				    return UserCardViewActorlRel.LPL
				else
				    return UserCardViewGlobalRel.LPL
				    
			if (ConfigSnapshotItemInfo.ConfigEntityType.Navigation)
    		    return UserNavigationRel.LPL
    		    
    		if (ConfigSnapshotItemInfo.ConfigEntityType.DrillList)
    		    return UserDrillListRel.LPL

    		if (ConfigSnapshotItemInfo.ConfigEntityType.WebApplication)
    		    return UserWebAppRel.LPL

    		if (ConfigSnapshotItemInfo.ConfigEntityType.WebServiceInterface)
    		    return UserWebServiceRel.LPL

    		if (ConfigSnapshotItemInfo.ConfigEntityType.SecurityClass)
    		    return UserSecurityClassRel.LPL

    	 	return blank

		CurrentConfigurationStatus is a DerivedField
			type is Numeric size 1
			default label is "CurrentConfigurationStatus"

			if (ConfigSnapshotItemInfo.ConfigEntityType.KeyField)
                return UserKeyFieldRel.Status

			if (ConfigSnapshotItemInfo.ConfigEntityType.BusinessClass)
			    return UserBusinessClassRel.Status

			if (ConfigSnapshotItemInfo.ConfigEntityType.Relation)
                return UserRelationRel.Status

			if (ConfigSnapshotItemInfo.ConfigEntityType.Field)
			    return UserFieldRel.Status

			if (ConfigSnapshotItemInfo.ConfigEntityType.Action
			or  ConfigSnapshotItemInfo.ConfigEntityType.ActionConfiguration
			or  ConfigSnapshotItemInfo.ConfigEntityType.ActionExtension
			or  ConfigSnapshotItemInfo.ConfigEntityType.UserAction)
			    return UserActionRel.Status

			if (ConfigSnapshotItemInfo.ConfigEntityType.ProductLine)
			    return UserProductRel.Status

    		if (ConfigSnapshotItemInfo.ConfigEntityType.CubeConfiguration)
    		    return UserCubeRel.Status

     		if (ConfigSnapshotItemInfo.ConfigEntityType.List)
     			if (ConfigSnapshotItemInfo.UserFolder entered)
					return UserListFolderRel.Status
				else
				if (ConfigSnapshotItemInfo.Actor entered)
				    return UserListActorRel.Status
				else
				    return UserListGlobalRel.Status

			if (ConfigSnapshotItemInfo.ConfigEntityType.Form)
				if (ConfigSnapshotItemInfo.Actor entered)
				    return UserFormActorRel.Status
				else
				    return UserFormGlobalRel.Status

    		if (ConfigSnapshotItemInfo.ConfigEntityType.Menu)
    		    return UserMenuRel.Status

			if (ConfigSnapshotItemInfo.ConfigEntityType.Page)
			    return UserPageRel.Status

    		if (ConfigSnapshotItemInfo.ConfigEntityType.Report) 
				if (ConfigSnapshotItemInfo.Actor entered)
				    return UserSJRptActorRel.Status
				else
				    return UserSJRptGlobalRel.Status

    		if (ConfigSnapshotItemInfo.ConfigEntityType.ImageMap)
    		    return 0 

    		if (ConfigSnapshotItemInfo.ConfigEntityType.CardView)
				if (ConfigSnapshotItemInfo.Actor entered)
				    return UserCardViewActorlRel.Status
				else
				    return UserCardViewGlobalRel.Status
		
			if (ConfigSnapshotItemInfo.ConfigEntityType.Navigation)
    		    return UserNavigationRel.Status
    		    
    		if (ConfigSnapshotItemInfo.ConfigEntityType.DrillList)
    		    return UserDrillListRel.Status

    		if (ConfigSnapshotItemInfo.ConfigEntityType.WebApplication)
    		    return UserWebAppRel.Status

    		if (ConfigSnapshotItemInfo.ConfigEntityType.WebServiceInterface)
    		    return UserWebServiceRel.Status

    		if (ConfigSnapshotItemInfo.ConfigEntityType.SecurityClass)
    		    if (UserSecurityClassRel.InActive) 
    		        return 1
    		    return 0

    	 	return blank

        CurrentConfigurationStatusAlertText is a DerivedField
            type is MessageField
            if (CurrentConfigurationStatus = 0)
                return ConfigurationIsActivePhrase
            if (CurrentConfigurationStatus = 1)
                return ConfigurationIsInactivePhrase
            if (CurrentConfigurationStatus = 2)
                return ConfigurationIsInvalidPhrase

            return ConfigurationUnknownStatusPhrase

        ConfigurationIsActivePhrase is a MessageField
            "Configuration_Is_Active"

        ConfigurationIsInactivePhrase is a MessageField
            "Configuration_Is_Inactive"

        ConfigurationIsInvalidPhrase is a MessageField
            "Configuration_Is_Invalid"

        ConfigurationUnknownStatusPhrase is a MessageField
            "Unknown_Configuration_Status"

        OutgoingComparisonHeader is a MessageField
            "Configuration_(Left)_vs_Snapshot_(Right)"

        IncomingComparisonHeader is a MessageField
            "Configuration_(Left)_vs_Snapshot_(Right)"

		ComparisonHeader is a DerivedField
			type is Alpha size 200
			if (ConfigBundleSnapshot.OriginatedByThisDataArea)
			    return OutgoingComparisonHeader
            else
                return IncomingComparisonHeader
        
        WillNotApplyMessage is a MessageField
			restricted
			"SnapshotItemWillNotBeApplied"
		
		CreateApplyMessage is a MessageField
			restricted
			"Create"
		
		UpdateApplyMessage is a MessageField
			restricted
			"Update"	
			
		DeleteApplyMessage is a MessageField
			restricted
			"Delete"	
		
		NoOperationMessage is a MessageField
			restricted
			"NoOperation"	
			 
		PendingApplicationStatusMsg is a DerivedField
			type is MessageField
			default label is "PendingOperation"
			
			LocalPendingAppStatus = PendingApplicationStatus
			
			if (LocalPendingAppStatus.Create)
				return CreateApplyMessage
			else
			if (LocalPendingAppStatus.Update)
				return UpdateApplyMessage
			else
			if (LocalPendingAppStatus.Delete)
				return DeleteApplyMessage
			else
			if (LocalPendingAppStatus.NoOperation)
				return NoOperationMessage
			else
				return WillNotApplyMessage

		PendingApplicationStatus is a DerivedField
			type is Numeric size 1
			restricted
			
			if (ConfigSnapshotItemInfo.ConfigEntityType.KeyField)
				if (UserKeyFieldRel exists)
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create
			
			if (ConfigSnapshotItemInfo.ConfigEntityType.BusinessClass)
				if (UserBusinessClassRel exists)
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create
			
			if (ConfigSnapshotItemInfo.ConfigEntityType.Relation)
				if (UserRelationRel exists)
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create
    	
			if (ConfigSnapshotItemInfo.ConfigEntityType.Field)
				if (UserFieldRel exists)
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create
				
			if (ConfigSnapshotItemInfo.ConfigEntityType.Action
			or  ConfigSnapshotItemInfo.ConfigEntityType.ActionConfiguration
			or  ConfigSnapshotItemInfo.ConfigEntityType.ActionExtension
			or  ConfigSnapshotItemInfo.ConfigEntityType.UserAction)
				if (UserActionRel exists)
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create
    	
			if (ConfigSnapshotItemInfo.ConfigEntityType.ProductLine)
				if (UserProductRel exists)
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create
		
    		if (ConfigSnapshotItemInfo.ConfigEntityType.CubeConfiguration)
				if (UserCubeRel exists)
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create    

     		if (ConfigSnapshotItemInfo.ConfigEntityType.List)
     			
				if ((ConfigSnapshotItemInfo.UserFolder entered and UserListFolderRel exists)
				or (ConfigSnapshotItemInfo.Actor entered and UserListActorRel exists)
				or (not ConfigSnapshotItemInfo.Actor entered and UserListGlobalRel exists))
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create
				
			if (ConfigSnapshotItemInfo.ConfigEntityType.Form)
				if ((ConfigSnapshotItemInfo.Actor entered and UserFormActorRel exists)
				or (not ConfigSnapshotItemInfo.Actor entered and UserFormGlobalRel exists))
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create   		
    	
    		if (ConfigSnapshotItemInfo.ConfigEntityType.Menu)
				if (UserMenuRel exists)
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create
		 
			if (ConfigSnapshotItemInfo.ConfigEntityType.Page)
				if (UserPageRel exists)
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create
	
    		if (ConfigSnapshotItemInfo.ConfigEntityType.Report) 
				if ((ConfigSnapshotItemInfo.Actor entered and UserSJRptActorRel exists)
				or (not ConfigSnapshotItemInfo.Actor entered and UserSJRptGlobalRel exists))
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create   		
    	
    		if (ConfigSnapshotItemInfo.ConfigEntityType.ImageMap)
				if (UserImageMapRel exists)
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create
			
    		if (ConfigSnapshotItemInfo.ConfigEntityType.CardView)
				if ((ConfigSnapshotItemInfo.Actor entered and UserCardViewActorlRel exists)
				or (not ConfigSnapshotItemInfo.Actor entered and UserCardViewGlobalRel exists))
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create
				
			if (ConfigSnapshotItemInfo.ConfigEntityType.Navigation)
				if (UserNavigationRel exists)
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create	
				
			if (ConfigSnapshotItemInfo.ConfigEntityType.DrillList)
				if (UserDrillListRel exists)
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create	
    	
    		if (ConfigSnapshotItemInfo.ConfigEntityType.WebApplication)
				if (UserWebAppRel exists)
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create
    			
    		if (ConfigSnapshotItemInfo.ConfigEntityType.WebServiceInterface)
				if (UserWebServiceRel exists)
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create
    		
    		if (ConfigSnapshotItemInfo.ConfigEntityType.SecurityClass)
				if (UserSecurityClassRel exists)
					if (DeletedRecord)
						return LocalPendingAppStatus.Delete
					else
						return LocalPendingAppStatus.Update
				else
				if (DeletedRecord)
					return LocalPendingAppStatus.NoOperation
					
				return LocalPendingAppStatus.Create
    	 
    	 	return LocalPendingAppStatus.WillNotApply 

        LPLChanged is a NativeField
            type is Boolean
            
        RollbackLPLChanged is a NativeField
        	type is Boolean
        	default label is "LPLChanged"

		DerTags is a DerivedField
			type is Text
			default label is "Tags"
			I = 1
			while (I <= sizeofarray Tags)
				if (Tags.ConfigurationTag[I] entered)
					if (DerTags entered)
						DerTags += ","
					DerTags += Tags.ConfigurationTag[I]
				I += 1
	
		ReportMessage is a MessageField
			restricted
			"Report"
			
		FolderMessage is a MessageField
			restricted
			"Folder"				
	
		NoMessage is a MessageField
			restricted
			"No"	
			
		ReportOrFolderMsg is a DerivedField
			type is MessageField
			default label is "ReportOrFolder"
			
			if (IsReportOrFolder)
	        	if (UserFolderRel.IsReport)
	        		return ReportMessage
	        	else
	        		return FolderMessage 
	        else
	        	return NoMessage
	        	
		ReportTypeMessage is a MessageField
			restricted
			"ForReport<ConfigSnapshotItemFolderInfo.Name>"
        
        FolderTyperMessage is a MessageField
			restricted
			"ForFolder<ConfigSnapshotItemFolderInfo.Name>"
		
		ReportFolderTypeMessage is a DerivedField
    		type is MessageField
    		
    		if (IsReportOrFolder)
	    		if (UserFolderRel.IsReport)
	    			return ReportTypeMessage
	    		else
	    			return FolderTyperMessage
    		else
    			return ""
			
	Local Fields
		LocalExists is Boolean
		LocalPendingAppStatus is Numeric size 1
			States
				Create       value is 1
				Update       value is 2
				Delete       value is 3
        		NoOperation  value is 4
        		WillNotApply value is 5
        			default label is untranslatable
        I is Numeric 2
			
	Actions
	    Create is a Create Action
		    restricted
		  	Entrance Rules
		  		constraint (not ConfigSnapshotItemInfo.ConfigEntityType.Cube) 
		  			"CannotSnapshotDeployedCubeRecords,OnlyCubeConfigurationsAreAllowed"
		  			
		  	Exit Rules
		  		if (TransSetConfigSnapshotReportDefInfo entered)
		  			invoke Create ConfigBundleSnapshotItemExtRel 
						invoked.ConfigBundleSnapshotItem = UniqueID
						invoked.ReportDefinitionInformation = TransSetConfigSnapshotReportDefInfo
		  			
		T2VCreate is a Create Action
		    restricted
		  	Entrance Rules
		  		constraint (not ConfigSnapshotItemInfo.ConfigEntityType.Cube) 
		  			"CannotSnapshotDeployedCubeRecords,OnlyCubeConfigurationsAreAllowed"
		  			
		  	Action Rules
		  		initialize ConfigValidationStatus
		  		initialize ErrorText
		  		initialize ConfigAppliedStatus
 				initialize ConfigRollbackInfo

		Delete is a Delete Action
			restricted 
		
		UpdateAppliedStatus is an Instance Action
			restricted
			
			Parameters
				ParamConfigAppliedStatus is a ConfigAppliedStatus
					default label is "<ConfigAppliedStatus label>"
				ParamConfigRollbackInfo is a ConfigRollbackInfo
					default label is "<ConfigRollbackInfo label>"
				ParamConfigSnapshotItemReportDefInfo is a ConfigSnapshotItemReportDefInfo
					default label is "ReportDefinitionRollbackInformation"
					
			Action Rules
				ConfigAppliedStatus = ParamConfigAppliedStatus
				ConfigRollbackInfo = ParamConfigRollbackInfo
				
				if (ConfigBundleSnapshotItemExtRel exists)
					if (ParamConfigSnapshotItemReportDefInfo entered)
						invoke Update ConfigBundleSnapshotItemExtRel
							invoked.ReportDefinitionRollbackInformation = ParamConfigSnapshotItemReportDefInfo							
					else
						if (ConfigBundleSnapshotItemExtRel.ReportDefinitionInformation not entered)
							invoke Delete ConfigBundleSnapshotItemExtRel
						else
							invoke Update ConfigBundleSnapshotItemExtRel
								invoked.ReportDefinitionRollbackInformation = blank		
				else
					if (ParamConfigSnapshotItemReportDefInfo entered)
						invoke Create ConfigBundleSnapshotItemExtRel
							invoked.ConfigBundleSnapshotItem = UniqueID
							invoked.ReportDefinitionRollbackInformation = ParamConfigSnapshotItemReportDefInfo
			
		ResetValidationStatus is an Instance Action
			restricted 
			Action Rules
				initialize ConfigValidationStatus
				
		ResetRollbackValidationStatus is an Instance Action
			restricted 
			Action Rules
				initialize ConfigRollbackInfo.ConfigValidationStatus

		AddTag is an Instance Action
		    restricted
			Parameters
				ParamConfigurationTag is a ConfigurationTag
					default label is "ConfigurationTag"

			Parameter Rules
				ParamConfigurationTag
				    required

		    Local Fields
			    LocI is Numeric size 1

			Action Rules
			    LocI = 1
			    while (LocI < 21)
                    if (Tags.ConfigurationTag[LocI] not entered)
                        Tags.ConfigurationTag[LocI] = ParamConfigurationTag
                        LocI = 21
                    else
                        LocI += 1

		UpdateDocumentation is an Instance Action
		    valid when (!ConfigBundleSnapshot.WasApplied)
            disable multiple instance selection
			Parameters
				ParamDocumentation is a ConfigAttachment
					default label is "Documentation"

			Parameter Rules
				ParamDocumentation
					initial value is Documentation

			Action Rules
				Documentation = ParamDocumentation

		OverWriteLocal is an Instance Action
		    default label is "OverwriteLocal"
		    valid when (ShowEditConfiguration)

		    Local Fields
			    LocUserProd       is a UserProd
				LocUserList       is a UserList
				LocUserForm       is a UserForm
				LocSJRptMap       is a UserSJRptMap
				LocUserCardView   is a UserCardView

		    Action Rules
                confirmation required
                    "AreYouSureYouWantToOverwriteTheLocalConfiguration?"

				if (ConfigSnapshotItemInfo.ConfigEntityType.ProductLine)
				    LocUserProd = first UserProductRel.UserProd 
                    if (LocUserProd exists)
                        invoke Update LocUserProd
                            invoked.Status = Status
                            invoked.Description = Description
                            invoked.LPL = LPL
                            invoked.UserEditorType = UserEditorType.LPL

				else
				if (ConfigSnapshotItemInfo.ConfigEntityType.KeyField
				and UserKeyFieldRel exists)
                    invoke Update UserKeyFieldRel
                        invoked.Status = Status
                        invoked.Description = Description
                        invoked.LPL = LPL
                        invoked.UserEditorType = UserEditorType.LPL

                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.BusinessClass
				and UserBusinessClassRel exists)
                    invoke Update UserBusinessClassRel
                        invoked.UserKeyField = UserKeyFieldForBusClassRel.UserKeyField
                        invoked.Status = Status
                        invoked.Description = Description
                        invoked.LPL = LPL
                        invoked.UserEditorType = UserEditorType.LPL

                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.Relation
				and UserRelationRel exists)
                    invoke Update UserRelationRel
                        invoked.Status = Status
                        invoked.Description = Description
                        invoked.BusSet = BusSet
                        invoked.LPL = LPL
                        invoked.UserEditorType = UserEditorType.LPL

                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.Field and
				UserFieldRel exists)
                    invoke Update UserFieldRel
                        invoked.Type = TypeValue
                        invoked.Status = Status
                        invoked.Description = Description
                        invoked.LPL = LPL
                        invoked.UserEditorType = UserEditorType.LPL

                else
				if ((ConfigSnapshotItemInfo.ConfigEntityType.Action or ConfigSnapshotItemInfo.ConfigEntityType.ActionConfiguration or ConfigSnapshotItemInfo.ConfigEntityType.ActionExtension or ConfigSnapshotItemInfo.ConfigEntityType.UserAction)
				and UserActionRel exists)
                    invoke Update UserActionRel
                        invoked.Type = TypeValue
                        invoked.Status = Status
                        invoked.Description = Description
                        invoked.LPL = LPL
                        invoked.UserEditorType = UserEditorType.LPL

                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.CubeConfiguration
				and UserCubeRel exists)
                    invoke Update UserCubeRel
                        invoked.Status = Status
                        invoked.Description = Description
                        invoked.LPL = LPL
                        invoked.UserEditorType = UserEditorType.LPL

                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.List)
					if (IsReportOrFolder)
						if (UserListFolderRel exists)
							LocUserList = UserListFolderRel.UserList
					else
					if (HasActor)
						if (UserListActorRel exists)
							LocUserList = UserListActorRel.UserList
					else
						if (UserListGlobalRel exists)
							LocUserList = UserListGlobalRel.UserList
                    if (LocUserList exists)
                        invoke Update LocUserList
                            invoked.Status = Status
                            invoked.Description = Description
                            invoked.Delta = LPL
                            invoked.UserEditorType = UserEditorType.LPL
                            invoked.Independent = Independent

                            invoked.Owner = Owner
                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.Form)
					if (HasActor)
						if (UserFormActorRel exists) 
							LocUserForm = UserFormActorRel.UserForm
					else
						if (UserFormGlobalRel exists)
							LocUserForm = UserFormGlobalRel.UserForm
					if (LocUserForm exists)
                        invoke Update LocUserForm
                            invoked.Status = Status
                            invoked.Description = Description
                            invoked.LPL = LPL
                            invoked.UserEditorType = UserEditorType.LPL
                            invoked.Independent = Independent

                            invoked.Owner = Owner
                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.Menu
				and UserMenuRel exists)
                    invoke Update UserMenuRel
                        invoked.Status = Status
                        invoked.Description = Description
                        invoked.LPL = LPL
                        invoked.UserEditorType = UserEditorType.LPL
                        invoked.Independent = Independent

                        invoked.Owner = Owner
                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.Page
				and UserPageRel exists)
                    invoke Update UserPageRel
                        invoked.Status = Status
                        invoked.Description = Description
                        invoked.LPL = LPL
                        invoked.UserEditorType = UserEditorType.LPL
                        invoked.Independent = Independent

                        invoked.Owner = Owner
                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.Report) 
					if (HasActor)
						if (UserSJRptActorRel exists) 
							LocSJRptMap = UserSJRptActorRel.UserSJRptMap
					else
						if (UserSJRptGlobalRel exists)
							LocSJRptMap = UserSJRptGlobalRel.UserSJRptMap

                    invoke Update LocSJRptMap
                        invoked.Status = Status
                        invoked.Description = Description
                        invoked.LPL = LPL
                        invoked.UserEditorType = UserEditorType.LPL

                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.ImageMap
				and UserImageMapRel exists)  
                    invoke Update UserImageMapRel
                        if (Status.Active)
                            invoked.InActive = false
                        else
                            invoked.InActive = true
                        invoked.Description = Description
                        invoked.Delta = LPL
                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.CardView)
					if (HasActor)
						if (UserCardViewActorlRel exists) 
							LocUserCardView = UserCardViewActorlRel.UserCardView
					else
						if (UserCardViewGlobalRel exists)
							LocUserCardView = UserCardViewGlobalRel.UserCardView
					if (LocUserCardView exists)
                        invoke Update LocUserCardView
                            invoked.Status = Status
                            invoked.Description = Description
                            invoked.LPL = LPL
                            invoked.UserEditorType = UserEditorType.LPL
                            invoked.Independent = Independent

                            invoked.Owner = Owner
                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.Navigation
				and UserNavigationRel exists)
                    invoke Update UserNavigationRel
                        invoked.Status = Status
                        invoked.Description = Description
                        invoked.LPL = LPL
                        invoked.UserEditorType = UserEditorType.LPL
                        invoked.Independent = Independent

						invoked.Owner = Owner
				else
				if (ConfigSnapshotItemInfo.ConfigEntityType.DrillList
				and UserDrillListRel exists)
                    invoke Update UserDrillListRel
                        invoked.Status = Status
                        invoked.Description = Description
                        invoked.LPL = LPL
                        invoked.UserEditorType = UserEditorType.LPL
                        invoked.Independent = Independent

						invoked.Owner = Owner
                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.WebApplication
				and UserWebAppRel exists)
                    invoke Update UserWebAppRel
                        invoked.Status = Status
                        invoked.Description = Description
                        invoked.LPL = LPL
                        invoked.UserEditorType = UserEditorType.LPL

                        invoked.Owner = Owner
                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.WebServiceInterface
				and UserWebServiceRel exists)
                    invoke Update UserWebServiceRel
                        invoked.Status = Status
                        invoked.Description = Description
                        invoked.LPL = LPL
                        invoked.UserEditorType = UserEditorType.LPL
                        invoked.Independent = Independent

                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.SecurityClass
				and UserSecurityClassRel exists)
                    invoke Update UserSecurityClassRel
                        if (Status.Active)
                            invoked.InActive = false
                        else
                            invoked.InActive = true
                        invoked.Description = Description
                        invoked.LPL = LPL

		CopyToLocal is an Instance Action
		    valid when (ShowAddConfiguration)
			Action Rules
				if (ConfigSnapshotItemInfo.ConfigEntityType.ProductLine)
					invoke Create UserProd
						invoked.Status = Status 
						invoked.Description = Description
						invoked.LPL = LPL


				else
				if (ConfigSnapshotItemInfo.ConfigEntityType.KeyField)
					invoke Create UserKeyField
						invoked.KeyFieldName = ConfigSnapshotItemInfo.Name
						invoked.Status = Status
						invoked.Description = Description
						invoked.LPL = LPL


                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.BusinessClass)
					invoke Create UserBusinessClass
						invoked.BusinessClass = ConfigSnapshotItemInfo.BusinessView
						invoked.UserKeyField = UserKeyFieldForBusClassRel.UserKeyField
						invoked.Status = Status
						invoked.Description = Description
						invoked.LPL = LPL


                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.Relation)
					invoke Create UserRelation
						invoked.BusinessClass = ConfigSnapshotItemInfo.BusinessView
						invoked.RelationName = ConfigSnapshotItemInfo.Name
						invoked.Status = Status
						invoked.Description = Description
						invoked.BusSet = BusSet
						invoked.LPL = LPL


                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.Field)
					invoke Create UserField
						invoked.BusinessClass = ConfigSnapshotItemInfo.BusinessView
						invoked.FieldName = ConfigSnapshotItemInfo.Name
						invoked.Type = TypeValue
						invoked.Status = Status
						invoked.Description = Description
						invoked.LPL = LPL


                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.Action or ConfigSnapshotItemInfo.ConfigEntityType.ActionConfiguration or ConfigSnapshotItemInfo.ConfigEntityType.ActionExtension or ConfigSnapshotItemInfo.ConfigEntityType.UserAction)
					invoke Create UserAction
						invoked.BusinessClass = ConfigSnapshotItemInfo.BusinessView
						invoked.ActionName = ConfigSnapshotItemInfo.Name
						invoked.Type = TypeValue
						invoked.Status = Status
						invoked.Description = Description
						invoked.LPL = LPL


                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.CubeConfiguration)
					invoke Create UserCube
						invoked.BusinessClass = ConfigSnapshotItemInfo.BusinessView
						invoked.Status = Status
						invoked.Description = Description
						invoked.LPL = LPL


                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.List)
					invoke Create UserList
						invoked.BusinessView = ConfigSnapshotItemInfo.BusinessView
						invoked.BusinessList = ConfigSnapshotItemInfo.Name
						invoked.Actor = ConfigSnapshotItemInfo.Actor
						invoked.UserFolder = ConfigSnapshotItemInfo.UserFolder
						invoked.Status = Status
						invoked.Description = Description
						invoked.Delta = LPL

						invoked.Independent = Independent

						invoked.Owner = Owner
                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.Form)
					invoke Create UserForm
						invoked.BusinessView = ConfigSnapshotItemInfo.BusinessView
						invoked.BusinessForm = ConfigSnapshotItemInfo.Name
						invoked.Actor = ConfigSnapshotItemInfo.Actor
						invoked.Status = Status
						invoked.Description = Description
						invoked.LPL = LPL

						invoked.Independent = Independent

						invoked.Owner = Owner
                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.Menu)
					invoke Create UserMenu
						invoked.UserMenuName = ConfigSnapshotItemInfo.Name
						invoked.Actor = ConfigSnapshotItemInfo.Actor
						invoked.UserFolder = ConfigSnapshotItemInfo.UserFolder
						invoked.Status = Status
						invoked.Description = Description
						invoked.LPL = LPL

						invoked.Independent = Independent

						invoked.Owner = Owner
                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.Page)
					invoke Create UserPage
						invoked.UserPageName = ConfigSnapshotItemInfo.Name
						invoked.Actor = ConfigSnapshotItemInfo.Actor
						invoked.UserFolder = ConfigSnapshotItemInfo.UserFolder
						invoked.Status = Status
						invoked.Description = Description
						invoked.LPL = LPL

						invoked.Independent = Independent

						invoked.Owner = Owner
                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.Report) 
					invoke Create UserSJRptMap
						invoked.UserSJRptMapName = ConfigSnapshotItemInfo.Name 
						invoked.SJRptMap = ConfigSnapshotItemInfo.Name 
						invoked.Actor = ConfigSnapshotItemInfo.Actor
						invoked.Status = Status
						invoked.Description = Description
						invoked.LPL = LPL


                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.ImageMap)  
					invoke Create UserImageMap
						invoked.BusinessImageMap = ConfigSnapshotItemInfo.Name
						invoked.Actor = ConfigSnapshotItemInfo.Actor
						if (Status.Active)
							invoked.InActive = false
						else
							invoked.InActive = true
						invoked.Description = Description
						invoked.Delta = LPL
                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.CardView)
					invoke Create UserCardView
						invoked.BusinessView = ConfigSnapshotItemInfo.BusinessView
						invoked.BusinessCardView = ConfigSnapshotItemInfo.Name
						invoked.Actor = ConfigSnapshotItemInfo.Actor
						invoked.Status = Status
						invoked.Description = Description
						invoked.LPL = LPL

						invoked.Independent = Independent

						invoked.Owner = Owner
				else
				if (ConfigSnapshotItemInfo.ConfigEntityType.Navigation)
					invoke Create UserNavigation
						invoked.BusinessView = ConfigSnapshotItemInfo.BusinessView
						invoked.BusinessNavigation = ConfigSnapshotItemInfo.Name
						invoked.Status = Status
						invoked.Description = Description
						invoked.LPL = LPL

						invoked.Independent = Independent

						invoked.Owner = Owner
				else
				if (ConfigSnapshotItemInfo.ConfigEntityType.DrillList)
					invoke Create UserDrillList
						invoked.BusinessView = ConfigSnapshotItemInfo.BusinessView
						invoked.BusinessDrillList = ConfigSnapshotItemInfo.Name
						invoked.Status = Status
						invoked.Description = Description
						invoked.LPL = LPL

						invoked.Independent = Independent

						invoked.Owner = Owner
                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.WebApplication)
					invoke Create UserWebApp
						invoked.UserWebAppName = ConfigSnapshotItemInfo.Name
						invoked.Status = Status
						invoked.Description = Description
						invoked.LPL = LPL


						invoked.Owner = Owner
                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.WebServiceInterface)
					invoke Create UserWebServiceInterface
						invoked.WebServiceInterface = ConfigSnapshotItemInfo.Name
						invoked.Status = Status
						invoked.Description = Description
						invoked.LPL = LPL

						invoked.Independent = Independent

                else
				if (ConfigSnapshotItemInfo.ConfigEntityType.SecurityClass)
					invoke Create SecurityClass
						invoked.SecurityClass = ConfigSnapshotItemInfo.Name
						if (Status.Active)
							invoked.InActive = false
						else
							invoked.InActive = true
						invoked.Description = Description
						invoked.LPL = LPL

		UpdateSecurityClassExtendedInfo is a Set Action
			restricted
			default label is untranslatable
			
			Instance Selection
				where (ConfigSnapshotItemInfo.ConfigEntityType.SecurityClass and ExtendedInfo not entered and UserSecurityClassRel.ExtendedSnapshotInfo entered)
			
			Sort Order is primary
			
			Action Rules
				Instance Rules
					ExtendedInfo = UserSecurityClassRel.ExtendedSnapshotInfo
			
	Relations
		UserKeyFieldRel
        	one-to-one relation to UserKeyField
        	Field Mapping uses ByUserKeyField
    			related.KeyFieldName = ConfigSnapshotItemInfo.Name
    			
    	UserKeyFieldForBusClassRel
        	one-to-one relation to UserKeyField
        	Field Mapping uses ByUserKeyField
    			related.KeyFieldName = KeyFieldName
    			
    	UserBusinessClassRel
        	one-to-one relation to UserBusinessClass
        	Field Mapping uses ByBusinessClass
    			related.BusinessClass = ConfigSnapshotItemInfo.BusinessView
    			
    	UserRelationRel
        	one-to-one relation to UserRelation
        	Field Mapping uses ByClassRelation
    			related.BusinessClass = ConfigSnapshotItemInfo.BusinessView
    			related.RelationName = ConfigSnapshotItemInfo.Name
    			
   		UserFieldRel
			one-to-one relation to UserField
        	Field Mapping uses ByClassField
    			related.BusinessClass = ConfigSnapshotItemInfo.BusinessView
    			related.FieldName = ConfigSnapshotItemInfo.Name

		UserActionRel
			one-to-one relation to UserAction
        	Field Mapping uses ByClassAction
    			related.BusinessClass = ConfigSnapshotItemInfo.BusinessView
    			related.ActionName = ConfigSnapshotItemInfo.Name

        UserProductRel 
			one-to-many relation to UserProd
           	Field Mapping uses symbolic key

        UserCubeRel 
			one-to-one relation to UserCube
            Field Mapping uses ByClass
    			related.BusinessClass = ConfigSnapshotItemInfo.BusinessView   
    			

    	UserListGlobalRel 
			one-to-one relation to UserList
            Field Mapping uses GlobalListSet
    			related.BusinessView = ConfigSnapshotItemInfo.BusinessView    
    			related.BusinessList = ConfigSnapshotItemInfo.Name
    			
    	UserListActorRel 
			one-to-one relation to UserList
            Field Mapping uses ActorSet
            	related.Actor        = ConfigSnapshotItemInfo.Actor
    			related.BusinessView = ConfigSnapshotItemInfo.BusinessView    
    			related.BusinessList = ConfigSnapshotItemInfo.Name
    	
    	UserListFolderRel 
			one-to-one relation to UserList
            Field Mapping uses FolderSet
            	related.UserFolder    = ConfigSnapshotItemInfo.UserFolder
    			related.BusinessView = ConfigSnapshotItemInfo.BusinessView    
    			related.BusinessList = ConfigSnapshotItemInfo.Name
    	

    	UserFormGlobalRel 
			one-to-one relation to UserForm
            Field Mapping uses GlobalSet
    			related.BusinessView = ConfigSnapshotItemInfo.BusinessView    
    			related.BusinessForm = ConfigSnapshotItemInfo.Name
    			
    	UserFormActorRel 
			one-to-one relation to UserForm
            Field Mapping uses ActorSet
            	related.Actor        = ConfigSnapshotItemInfo.Actor    
    			related.BusinessView = ConfigSnapshotItemInfo.BusinessView    
    			related.BusinessForm = ConfigSnapshotItemInfo.Name		

		UserMenuRel 
			one-to-one relation to UserMenu
            Field Mapping uses ByMenuActor
    			related.UserMenuName = ConfigSnapshotItemInfo.Name
    			related.Actor        = ConfigSnapshotItemInfo.Actor
    			related.UserFolder   = ConfigSnapshotItemInfo.UserFolder

		UserPageRel 
			one-to-one relation to UserPage
            Field Mapping uses ByPageFolderActor
    			related.UserPageName = ConfigSnapshotItemInfo.Name
    			related.UserFolder   = ConfigSnapshotItemInfo.UserFolder
    			related.Actor        = ConfigSnapshotItemInfo.Actor
    		

    	UserSJRptGlobalRel 
			one-to-one relation to UserSJRptMap
            Field Mapping uses GlobalSet
    			related.SJRptMap = ConfigSnapshotItemInfo.Name

    			
    	UserSJRptActorRel 
			one-to-one relation to UserSJRptMap
            Field Mapping uses ActorSet
            	related.Actor    = ConfigSnapshotItemInfo.Actor
    			related.SJRptMap = ConfigSnapshotItemInfo.Name

    			
    	UserImageMapRel 
			one-to-one relation to UserImageMap
            Field Mapping uses ImageMapSet
    			related.BusinessImageMap = ConfigSnapshotItemInfo.Name 
    			related.Actor = ConfigSnapshotItemInfo.Actor 
    	

		UserCardViewGlobalRel 
			one-to-one relation to UserCardView
            Field Mapping uses GlobalSet
    			related.BusinessView = ConfigSnapshotItemInfo.BusinessView     	
    			related.BusinessCardView = ConfigSnapshotItemInfo.Name
    			
    	UserCardViewActorlRel 
			one-to-one relation to UserCardView
            Field Mapping uses ActorSet
            	related.Actor = ConfigSnapshotItemInfo.Actor
    			related.BusinessView = ConfigSnapshotItemInfo.BusinessView     	
    			related.BusinessCardView = ConfigSnapshotItemInfo.Name
    			
    	UserNavigationRel 
			one-to-one relation to UserNavigation
            Field Mapping uses ByViewNavigation
    			related.BusinessView = ConfigSnapshotItemInfo.BusinessView     	
    			related.BusinessNavigation = ConfigSnapshotItemInfo.Name
    			
    	UserDrillListRel 
			one-to-one relation to UserDrillList
            Field Mapping uses ByViewDrillList
    			related.BusinessView = ConfigSnapshotItemInfo.BusinessView     	
    			related.BusinessDrillList = ConfigSnapshotItemInfo.Name
    			
    	UserWebAppRel 
			one-to-one relation to UserWebApp
            Field Mapping uses WebAppSet
    			related.UserWebAppName = ConfigSnapshotItemInfo.Name
    			
    	UserWebServiceRel 
			one-to-one relation to UserWebServiceInterface
            Field Mapping uses ByWebServiceInterface
    			related.WebServiceInterface = ConfigSnapshotItemInfo.Name
    			
    	UserSecurityClassRel 
			one-to-one relation to SecurityClass
            Field Mapping uses symbolic key
    			related.SecurityClass = ConfigSnapshotItemInfo.Name

    	ConfigEntityRel
			one-to-one relation to ConfigEntity
            Field Mapping uses ByEntityType
    			related.EntityType = ConfigSnapshotItemInfo.ConfigEntityType
    			related.BusinessView = ConfigSnapshotItemInfo.BusinessView
    			related.Name = ConfigSnapshotItemInfo.Name
    			related.Actor = ConfigSnapshotItemInfo.Actor
    			
    	UserFolderRel 
			one-to-one relation to UserFolder
            Field Mapping uses symbolic key
    			related.UserFolder   = ConfigSnapshotItemInfo.UserFolder
    			
    	ConfigBundleSnapshotItemExtRel
    		default label is "SnapshotItemExtension"
    		one-to-one relation to ConfigBundleSnapshotItemExt 
			delete cascades
			Field Mapping uses BySnapshotItem
				related.ConfigBundleSnapshotItem = UniqueID

	Sets
		ByUniqueID
			indexed
			Sort Order
				UniqueID
