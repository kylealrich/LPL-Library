RequestingLocation is a BusinessClass
	owned by rq
	prefix is RQL
	classic name is RQLOC

	Ontology
		symbolic key is RequestingLocation
			classic set name is RQLSET1
			classic name is REQ-LOCATION

	Patterns
		implements StaticJava
		disable AuditIndex
		implements BODId
		enable explicit context override

	Persistent Fields
		Name
		PostalAddress					is a PostalAddressV2	
			holds pii
			classic name for PostalAddress.DeliveryAddress.AddressLine1 is ADDR1
			classic name for PostalAddress.DeliveryAddress.AddressLine2 is ADDR2
			classic name for PostalAddress.DeliveryAddress.AddressLine3 is ADDR3
			classic name for PostalAddress.DeliveryAddress.AddressLine4 is ADDR4
			classic name for PostalAddress.Municipality is CITY-ADDR5
			classic name for PostalAddress.StateProvince is STATE-PROV
			classic name for PostalAddress.Country is COUNTRY-CODE


		InventoryTransactionType
			classic name is IC-TRANS-TYPE
		Buyer
			classic name is BUYER-CODE
		FromCompanyLocation
		POCode
		ProcessLevel             is a PayablesProcessLevel
			context of FromCompanyLocation.FromCompany
		FillOrKill
		Stockless                is Boolean
			classic name is STOCKLESS-FL
		DoNotDefaultBillCode	 is Boolean
		RequisitionApprovalType  is AlphaUpper size 1
			classic name is APPROVAL-TYPE
			States
				HeaderApproval       				   value is "1"
				LineApproval                           value is "2"
				HeaderMatrixApproval				   value is "4"
				NoApprovalRequired                     value is "3"
				DefaultFromRequestingLocationOrCompany value is blank
		Active                   is Boolean
			classic name is ACTIVE-STATUS
		OneSourceDocumentToOnePO is Boolean
			classic name is ONE-SRC-ONE-PO
		ProcurementCardNumber
			classic name is PCARD-NBR
		GlobalLocationNumber
			classic name is GLN-NBR
		LocationRule             is a WarehouseLocationRule
		PurchaseTaxCode          is a TaxCode
			classic name is PURCH-TAX-CD
		PurchaseTaxable          is Boolean
			classic name is PURCH-TAX-FL
		IssueAccount             is a FinanceCodeBlock
			classic name for IssueAccount.AccountingUnit is ISS-ACCT-UNIT
			classic name for IssueAccount.GeneralLedgerChartAccount is ISS-ACCOUNT
			classic name for IssueAccount.Project is ACTIVITY
		Picture						is an ImageAttachment
		EntityTaxCode
		PricingGroup
		PreferenceCardOption	is Numeric size 1
			States
				DefaultToInventoryCompany			value is 0
				PreferenceCardsInUse				value is 1
				PreferenceCardsNotInUse				value is 2
		IssueAccountInvalidForMatrixApproval	is Boolean

	Context Fields
		AuditDateRange				is a DateRange
		FSMInboundBODTracker

	Transient Fields
		TransientFEG 				is like FinanceEnterpriseGroup	
			derive value from Company.FinanceEnterpriseGroup
		ObjectReference 			is BusinessObjectReference		
			derive value from reference to this instance

	Local Fields
		LocalRecallGroup		is like	RecallGroup
		LocalRollup				is Boolean
		LocalParentOrganization is a RecallOrganization
		LocalLocation               is like RequestingLocation
		LocalRequestingReportGroup  is like RequestingReportGroup
		LocalThisLocation           is like RequestingLocation 
		LocalContract               is like Contract 
		LocalContractGroup          is like ContractGroup
		ActionCode			is Alpha size 1
			States
				Create  value is "C"
				Update	value is "U"
				Delete	value is "D"
		LocalBODCurrentTimeStamp	is a BODCurrentTimeStamp
		VertexErrorNumber			is Numeric 3 			
		WebServiceError				is Boolean				
		MultipleTaxCodes			is Boolean				
		CalculateTax										
		WebServiceErrorMessage		is Text					
		CalculateTaxOutputMessage	is Alpha 200			
		OldTaxCode					is like TaxCode			
		NewTaxCode					is like TaxCode			

		LocalNativeLPLBODTrigger	is Boolean
		LocalCrossAccountingEntity	is Alpha size 20
		LocalCSFCrossReferenceGLC	is Alpha size 20
		Error            			is Boolean
	    ErrorMessage   				is Alpha 300
	    NewBODTracker  				is a FSMInboundBODTracker view
	    LocalFSMInboundBODTracker	is Numeric 15
	    LocalBODTrigger				is Boolean
	    LocalConfigurationParameter	is Alpha size up to 200
		LocalAEAlreadyExecuted		is Boolean
		LocalCompany				is like InventoryCompany
		LocalRequestingLocation		is like RequestingLocation

		LocalFromInventoryLocation	is Boolean
		LocalParticipantGroup       is like ParticipantGroup 

	Derived Fields
		RepresentativeText is a StringField
			type is Text
			default label is "RequestingLocation"
			RequestingLocation " - " Name

		RequestingLocationAndName is a StringField	
			type is Alpha size up to 101
			restricted
			RequestingLocation
			" - "
			RequestingLocation.Name

		RequestingLocationNameID is a DerivedField	
			type is Alpha size up to 103
			default label is "RequestingLocation"
			return RepresentativeText

		DerivedRequestingLocation is a DerivedField
			type is Alpha size up to 101
			if (RequestingLocation entered)
				return RequestingLocationAndName

		FromCompanyAndName is a StringField
			type is Alpha size up to 87
			restricted
			FromCompanyLocation.FromCompany
			" - "
			FromCompanyLocation.FromCompany.Name

		DerivedFromCompany is a DerivedField
			type is Alpha size up to 87
			if (FromCompanyLocation.FromCompany entered)
				return FromCompanyAndName

		FromLocationAndName is a StringField
			type is Alpha size up to 101
			restricted
			FromCompanyLocation.FromLocation
			" - "
			FromCompanyLocation.FromLocation.Name

		DerivedFromLocation is a DerivedField
			type is Alpha size up to 101
			if (FromCompanyLocation.FromLocation entered)
				return FromLocationAndName

		BuyerAndName is a StringField
			type is Alpha size up to 117
			restricted
			Buyer
			" - "
			Buyer.Name

		DerivedBuyer is a DerivedField
			type is Alpha size up to 117
			if (Buyer entered)
				return BuyerAndName

		ToAccountingEntityAndName is a StringField
			type is Alpha size up to 93
			restricted
			IssueAccount.ToAccountingEntity
			" - "
			AccountingEntityRel.Name

		DerivedToAccountingEntity is a DerivedField
			type is Alpha size up to 93
			if (IssueAccount.ToAccountingEntity entered)
				return ToAccountingEntityAndName

		AccountAndDescription is a StringField
			type is Alpha size up to 89
			restricted
			IssueAccount.GeneralLedgerChartAccount
			" - "
			GeneralLedgerChartAccountRel.AccountDescription

		DerivedAccount is a DerivedField
			type is Alpha size up to 89
			if (IssueAccount.GeneralLedgerChartAccount entered)
				return AccountAndDescription

		AccountingUnitAndDescription is a StringField
			type is Alpha size up to 88
			restricted
			IssueAccount.AccountingUnit
			" - "
			AccountingUnitRel.Description

		DerivedAccountingUnit is a DerivedField
			type is Alpha size up to 88
			if (IssueAccount.AccountingUnit entered)
				return AccountingUnitAndDescription

		ProjectAndDescription is a StringField
			type is Alpha size up to 88
			restricted
			IssueAccount.Project
			" - "
			ProjectRel.Description

		DerivedProject is a DerivedField
			type is Alpha size up to 88
			if (IssueAccount.Project entered)
				return ProjectAndDescription

		FinanceDimension1AndDescription is a StringField
			type is Alpha size up to 88
			restricted
			IssueAccount.FinanceDimension1
			" - "
			FinanceDimension1Rel.Description

		DerivedFinanceDimension1 is a DerivedField
			type is Alpha size up to 88
			if (IssueAccount.FinanceDimension1 entered)
				return FinanceDimension1AndDescription

		FinanceDimension2AndDescription is a StringField
			type is Alpha size up to 88
			restricted
			IssueAccount.FinanceDimension2
			" - "
			FinanceDimension2Rel.Description

		DerivedFinanceDimension2 is a DerivedField
			type is Alpha size up to 88
			if (IssueAccount.FinanceDimension2 entered)
				return FinanceDimension2AndDescription

		FinanceDimension3AndDescription is a StringField
			type is Alpha size up to 88
			restricted
			IssueAccount.FinanceDimension3
			" - "
			FinanceDimension3Rel.Description

		DerivedFinanceDimension3 is a DerivedField
			type is Alpha size up to 88
			if (IssueAccount.FinanceDimension3 entered)
				return FinanceDimension3AndDescription

		FinanceDimension4AndDescription is a StringField
			type is Alpha size up to 88
			restricted
			IssueAccount.FinanceDimension4
			" - "
			FinanceDimension4Rel.Description

		DerivedFinanceDimension4 is a DerivedField
			type is Alpha size up to 88
			if (IssueAccount.FinanceDimension4 entered)
				return FinanceDimension4AndDescription

		FinanceDimension5AndDescription is a StringField
			type is Alpha size up to 88
			restricted
			IssueAccount.FinanceDimension5
			" - "
			FinanceDimension5Rel.Description

		DerivedFinanceDimension5 is a DerivedField
			type is Alpha size up to 88
			if (IssueAccount.FinanceDimension5 entered)
				return FinanceDimension5AndDescription

		FinanceDimension6AndDescription is a StringField
			type is Alpha size up to 88
			restricted
			IssueAccount.FinanceDimension6
			" - "
			FinanceDimension6Rel.Description

		DerivedFinanceDimension6 is a DerivedField
			type is Alpha size up to 88
			if (IssueAccount.FinanceDimension6 entered)
				return FinanceDimension6AndDescription

		FinanceDimension7AndDescription is a StringField
			type is Alpha size up to 88
			restricted
			IssueAccount.FinanceDimension7
			" - "
			FinanceDimension7Rel.Description

		DerivedFinanceDimension7 is a DerivedField
			type is Alpha size up to 88
			if (IssueAccount.FinanceDimension7 entered)
				return FinanceDimension7AndDescription

		FinanceDimension8AndDescription is a StringField
			type is Alpha size up to 88
			restricted
			IssueAccount.FinanceDimension8
			" - "
			FinanceDimension8Rel.Description

		DerivedFinanceDimension8 is a DerivedField
			type is Alpha size up to 88
			if (IssueAccount.FinanceDimension8 entered)
				return FinanceDimension8AndDescription

		FinanceDimension9AndDescription is a StringField
			type is Alpha size up to 88
			restricted
			IssueAccount.FinanceDimension9
			" - "
			FinanceDimension9Rel.Description

		DerivedFinanceDimension9 is a DerivedField
			type is Alpha size up to 88
			if (IssueAccount.FinanceDimension9 entered)
				return FinanceDimension9AndDescription

		FinanceDimension10AndDescription is a StringField
			type is Alpha size up to 88
			restricted
			IssueAccount.FinanceDimension10
			" - "
			FinanceDimension10Rel.Description

		DerivedFinanceDimension10 is a DerivedField
			type is Alpha size up to 88
			if (IssueAccount.FinanceDimension10 entered)
				return FinanceDimension10AndDescription

		PurchaseTaxCodeAndDescription is a StringField
			type is Alpha size up to 78
			restricted
			PurchaseTaxCode
			" - "
			PurchaseTaxCode.Description

		DerivedPurchaseTaxCode is a DerivedField
			type is Alpha size up to 78
			if (PurchaseTaxCode entered)
				return PurchaseTaxCodeAndDescription

		POCodeAndDescription is a StringField
			type is Alpha size up to 67
			restricted
			RequestingLocation.POCode
			" - "
			RequestingLocation.POCode.Description

		DerivedPOCode is a DerivedField
			type is Alpha size up to 67
			if (RequestingLocation.POCode entered)
				return POCodeAndDescription

		CompletionMessage is a DerivedField 			
   			type is MessageField
   			restricted
   			if (VertexErrorNumber entered)
   				return TaxErrorMessage
   			else
   			if (WebServiceError)
				return VertexWebserviceErrorMessage
   			else
   			if (MultipleTaxCodes)
   				return VertexMultTaxCodesMessage
   			else
   			if (PurchaseTaxCode entered)
   				return VertexCompletionMessage
   			else
   				return blank

		TaxErrorMessage is a MessageField				
			restricted
			"TaxErrorOccurred;TaxCodeNotUpdated"

		VertexWebserviceErrorMessage is a MessageField	
			restricted
			"NoTaxCodesReturnedDueToA\VertexError"

		VertexMultTaxCodesMessage is a MessageField		
			restricted
			"TaxCodeNotUpdated.MultipleTaxCodesExistsForVendorsAddress"

		VertexCompletionMessage	is a MessageField		
			restricted
			"UpdateTaxCodeComplete"

		DerivedLookupMessage is a DerivedField			
			type is MessageField
			restricted
			if (NewTaxCode = OldTaxCode)
				return VertexNoChangeMessage
			else
				return CalculateTaxOutputMessage

		VertexNoChangeMessage is a LabelField			
			"NoChangeNecessary,Correct\Tax\Area\IdExists"

		OldTaxCodeMsg is a MessageField					
			restricted
			"OldTaxCode:<OldTaxCode>"

		TaxCodeMessage is a DerivedField				
			type is MessageField
			restricted
			if (NewTaxCode = OldTaxCode)
				return blank
			else
				return OldTaxCodeMsg

		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforRequestingLocation"

		ContextMessageText is a MessageField
			restricted
			"RequestingLocation<RequestingLocation>"


		DerivedDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter = "Generic_Delimiter"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "tenantID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "releaseID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "logicalID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "VersionID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedBODActionCode is a DerivedField
			type is Alpha size 10
			restricted
			if (ActionCode="C" or ActionCode.Create or action type.Create)
				return "Add"
			else
			if (ActionCode="U" or ActionCode.Update or action type.Update)
				return "Replace"
			else
			if (ActionCode="D"  or ActionCode.Delete or action type.Delete)
				return "Replace"
			else
				return ""

		DerivedStatusCode is a DerivedField
			type is Alpha size 12
			restricted
			if(ActionCode="C")
				return "Open"
			else
			if(ActionCode="D")
				return "Deleted"
			else
			if(ActionCode="U" or ActionCode.Update or action type.Update)
				return "Open"
			else
				return ""

		DerivedLocationType is a DerivedField
			type is Alpha size 12
			restricted
			return "Warehouse"

		DerivedBODRevision is a DerivedField
			type is Alpha size 25
			restricted
			return ""

		DerivedBODVariationID is a DerivedField
			type is Alpha size 25
			restricted
			return  bod id.VariationID

		DerivedBODCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return current timestamp

		DerivedBODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return DerivedBODCurrentTimeStamp[1:4] + "-" + DerivedBODCurrentTimeStamp[5:6] + "-" + DerivedBODCurrentTimeStamp[7:8] + "T" + DerivedBODCurrentTimeStamp[9:10] + ":" + DerivedBODCurrentTimeStamp[11:12] + ":" + DerivedBODCurrentTimeStamp[13:14] + "Z"

		DerivedAccountingEntity is a DerivedField
			type is Alpha size 20
			restricted
			if(LocalAEAlreadyExecuted != true)
				LocalAEAlreadyExecuted = true
				if(DerivedConfigDocumentID = "Y")
					if(DerivedConfigFEG ="Y")
						LocalCSFCrossReferenceGLC  = Company.FinanceEnterpriseGroup + DerivedDelimiter + Company using "%d"
					else
						LocalCSFCrossReferenceGLC = Company using "%d"
					if(FSMBODCrossReferenceDetailRel.DestinationValue entered)
						LocalCrossAccountingEntity = FSMBODCrossReferenceDetailRel.DestinationValue
					else
						LocalCrossAccountingEntity = LocalCSFCrossReferenceGLC
					return LocalCrossAccountingEntity
				else
					LocalCrossAccountingEntity= DerivedFEG+DerivedDelimiter+Company.GeneralLedgerCompany.AccountingEntity
				return LocalCrossAccountingEntity
			else
				return LocalCrossAccountingEntity

		DerivedFEG is a DerivedField
			type is Alpha size 4
			restricted
			return Company.FinanceEnterpriseGroup

		DerivedAE is a DerivedField
			type is Alpha size 12
			restricted
			return Company.AccountingEntity
			
		DerivedCompany is a DerivedField
			type is Alpha size 4
			restricted
			return Company using "%d"

		DerivedLocationID is a DerivedField
			type is Alpha size 60
			restricted
			if(DerivedConfigDocumentID = "Y" and DerivedRQLocationMigrate = "Y")
				return "RQL"+DerivedDelimiter+RequestingLocation
			else
			if(DerivedConfigDocumentID = "Y")
				return RequestingLocation
			else
				return DerivedCompany+DerivedDelimiter+RequestingLocation

		DerivedKitchenDemandCount is a DerivedField
			type is Numeric size 5
			return instance count of RequestingLocationKitchenOrdersRel

		DerivedBODID is a DerivedField
			type is Alpha size 100
			restricted
			return "infor-nid:" + DerivedTenantID +":" + DerivedAccountingEntity +":"+DerivedLocationID + ":"+"?Location&verb=Sync&TrackerID=" + LocalFSMInboundBODTracker


		ReqLocationBODXML is a DerivedField
			type is XMLDocument
			restricted
			ReqLocationBODXML = template.IONSyncLocation_RequestingLocation_ST document for this instance
			return ReqLocationBODXML
		
		DerivedBODAccountingEntity is a DerivedField
			type is Alpha size 20
			restricted
			if(DerivedConfigDocumentID = "Y")
				return LocalCrossAccountingEntity
			else
				return Company.GeneralLedgerCompany.AccountingEntity
		
		DerivedConfigDocumentID is a DerivedField
			type is Alpha size 2
			restricted
			LocalConfigurationParameter = "RequiredCleanDocumentID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedConfigFEG is a DerivedField
			type is Alpha size 2
			restricted
			LocalConfigurationParameter = "IsMultipleFEG"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedRQLocationMigrate is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "RQLocationMigrate"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value


		DerivedMatrixAccountErrorMessage is a MessageField
			"The_Issue_Account_has_incorrect_or_missing_information_for_Header_Matrix_Approval"

	Conditions
		RecordExists
			restricted
			when (RequestingLocation exists)

		CompanyRecordExists
			restricted
			when (Company exists)

		BypassRuleForTheseFiles
			restricted
	   		when (parentcontext.name = "ContractLineMember"
	   		or    parentcontext.name = "ContractImportTierMember"
	   		or    parentcontext.name = "ContractTierMember"
			or    parentcontext.name = "ContractAndLineLocation"
	   		or    parentcontext.name = "ContractImportTierDistributor"
	   		or    parentcontext.name = "ContractImportGPOMembership"
			or    parentcontext.name = "ConsolidatedItemLocation"
	   		or    parentcontext.name = "MfgContractMemberPivot"
	   		or    parentcontext.name = "ContractDistributorPricingMember"
	   		or    parentcontext.name = "RecallProductTransaction"
			or    parentcontext.name = "RecallOrganization"
			or    parentcontext.name = "RecallProductTaskItem"
			or    parentcontext.name = "InventoryCompany")

		IsActive
			restricted
			when (Active)

		HasBuyer
			restricted
			classic name is BUYER
			when (Buyer entered)

		HasFromLocation
			restricted
			classic name is FROM-LOCATION
			when (FromCompanyLocation.FromLocation entered)

		HasGlobalLocationNumber
			restricted
			classic name is HAS-GLN-NBR
			when (GlobalLocationNumber entered)

		HasVertexConfig			
			restricted
			when (VertexConfigRel exists)

		IsInactive
			restricted
			when (not Active)

		ParLocation
			restricted
			when (InventoryLocationRel.LocationType.ParLocation)

		ExchangeCart
			restricted
			when (InventoryLocationRel.LocationType.ExchangeCart)

		ParOrExchangeLocation
			restricted
			when (InventoryLocationRel.LocationType.ParLocation
			or    InventoryLocationRel.LocationType.ExchangeCart)

		SameRequestingAndFrom
			restricted
			when (Company 				= FromCompanyLocation.FromCompany
			and   RequestingLocation	= FromCompanyLocation.FromLocation)

		PricingGroupEntered
			restricted
			when (PricingGroup entered)

		ActiveRequestingLocations
			when (IsActive
			and	 (RequesterRequestingLocationsRel not exists
			or	 (RequesterLocationRel exists
			and	 actor.agent(Employee).Employee.Requester.Requester.RequestingLocationValidationOption.Allowed)
			or   (RequesterLocationRel not exists
			and	  actor.agent(Employee).Employee.Requester.Requester.RequestingLocationValidationOption.Disallowed)))

 		VertexResultsExist	
 			restricted
			when (VertexTaxAreaIdResultsRel exist
			and  !VertexTaxAreaIdResultsRel.WebServiceError)

		VertexErrorExist	
			restricted
			when (VertexWebserviceErrorRel exist)

		HasFromCompanyAndLocation 
			restricted 
			when (FromCompanyLocation.FromCompany entered
			and   FromCompanyLocation.FromLocation entered)

		PreferenceCardEnabled
			restricted
			when (Company.PreferenceCardEnabled)


		EnablePreferenceCard
			restricted
			when (PreferenceCardOption.PreferenceCardsInUse
			or   (PreferenceCardOption.DefaultToInventoryCompany and Company.PreferenceCardEnabled))

		UsingHeaderMatrixApproval
			restricted
			when (RequisitionApprovalType.HeaderMatrixApproval
			or   (RequisitionApprovalType.DefaultFromRequestingLocationOrCompany
			and   Company.RequisitionApprovalType.HeaderMatrixApproval))

		ActiveInvalidIssueAccountForMatrixApproval
			restricted
			when (Active
			and   IssueAccountInvalidForMatrixApproval)

		ReportGroupsExist 
			restricted 
			when (RequestingReportGroupLocationRel exists)	

		HasCompanyParticipants 
			restricted 
			when (CompanyParticipantRel exists)

		HasPricingGroupParticipants 
			restricted 
			when (PricingGroupParticipantRel exists)	

		HasCompanyTierMembers 
			restricted 
			when (CompanyTierMemberRel exists)

		HasPricingGroupTierMembers 
			restricted 
			when (PricingGroupTierMemberRel exists)		

		HasCompanyPricingMembers 
			restricted 
			when (CompanyPricingMemberRel exists)

		HasPricingGroupPricingMembers 
			restricted 
			when (PricingGroupPricingMemberRel exists)					

	Relations
		RequestingLocationKitchenOrdersRel
			one-to-many relation to KitchenOrder
			Field Mapping uses ByRequestingCompanyAndLocation
				related.RequestingCompanyAndLocation.RequestingCompany	= Company
				related.RequestingCompanyAndLocation.RequestingLocation = RequestingLocation
	
		FromLocationRel
			one-to-one relation to InventoryLocation
			valid when (HasFromLocation)
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = FromCompanyLocation.FromLocation

		InventoryLocationRel
			classic name is IC-LOCATION
			one-to-one relation to InventoryLocation
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = RequestingLocation

		GlobalLocationNumberDetailRel
			classic name is GLNLOCDTL
			one-to-one relation to GlobalLocationNumberDetail
			valid when (HasGlobalLocationNumber)
			Field Mapping uses Set2
				related.ItemGroup                                           = Company.ItemGroup
				related.GlobalLocationNumberDetail.GlobalLocationNumberType = 4
				related.CompanyLocationBin.Company                          = Company
				related.CompanyLocationBin.InventoryLocation                = RequestingLocation
				related.CompanyLocationBin.Bin                              = blank
				related.GlobalLocationNumber                                = GlobalLocationNumber

		ProcessLevelRel
			one-to-one relation to PayablesProcessLevel
			Field Mapping uses symbolic key
				related.Company					= FromCompanyLocation.FromCompany
				related.PayablesProcessLevel	= ProcessLevel

		BuyerLocationRel
			one-to-many relation to BuyerLocation
			Field Mapping uses symbolic key
				related.HROrganization		= Company.FinanceEnterpriseGroup.HROrganization
				related.Buyer				= Buyer

		BuyerLocationFromCompanyRel
			one-to-many relation to BuyerLocation
			Field Mapping uses symbolic key
				related.HROrganization		= FromCompanyLocation.FromCompany.FinanceEnterpriseGroup.HROrganization
				related.Buyer				= Buyer

		BuyerRequestingLocationRel
			one-to-many relation to BuyerLocation
			Field Mapping uses symbolic key
				related.HROrganization		= Company.FinanceEnterpriseGroup.HROrganization
				related.Buyer				= Buyer
			Instance Selection
				where (related.Company  = Company
				and    related.Location not entered
				and   (related.RequestingLocation not entered
				or     related.RequestingLocation = RequestingLocation))

		BuyerRequestingLocationFromLocationRel
			one-to-many relation to BuyerLocation
			Field Mapping uses symbolic key
				related.HROrganization		= FromCompanyLocation.FromCompany.FinanceEnterpriseGroup.HROrganization
				related.Buyer				= Buyer
			Instance Selection
				where (related.Company  = FromCompanyLocation.FromCompany
				and    related.Location not entered
				and   (related.RequestingLocation not entered
				or     related.RequestingLocation = RequestingLocation))

		RecallOrganizationRel
			one-to-many relation to RecallOrganization
			Field Mapping uses ByRequestingLocation
				related.InventoryCompany	= Company
				related.RequestingLocation  = RequestingLocation

		RecallInventoryOrganizationRel
			one-to-many relation to RecallOrganization
			Field Mapping uses ByInventoryLocation
				related.InventoryCompany	= Company
				related.InventoryLocation   = RequestingLocation

		RelatedRqLocOrganizationRel
			one-to-many relation to RecallOrganization
			Field Mapping uses ByIssueAccountingUnit
				related.InventoryCompany	= Company
				related.IssueAccountingUnit = IssueAccount.AccountingUnit
			Instance Selection
				where (related.RequestingLocation != RequestingLocation
				and	   !related.RequestingLocation.ParLocation
				and    related.Active)

		RecallOrganizationCompanyRel
			one-to-many relation to RecallOrganization
			Field Mapping uses ByRequestingLocation
				related.InventoryCompany	= Company
				related.RequestingLocation  = blank
				related.InventoryLocation	= blank
			Instance Selection
				where (related.Active)

		AccountingEntityRel
			one-to-one relation to AccountingEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
				related.AccountingEntity		= IssueAccount.ToAccountingEntity

		AccountingUnitRel
			one-to-one relation to AccountingUnit
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
				related.AccountingEntity		= IssueAccount.ToAccountingEntity
				related.AccountingUnit			= IssueAccount.AccountingUnit

		GeneralLedgerChartAccountRel
			one-to-one relation to GeneralLedgerChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= Company.FinanceEnterpriseGroup
				related.GeneralLedgerChartAccount	= IssueAccount.GeneralLedgerChartAccount

		ProjectRel
			one-to-one relation to Project
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
				related.Project					= IssueAccount.Project

		FinanceDimension1Rel
			one-to-one relation to FinanceDimension1
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
				related.FinanceDimension1		= IssueAccount.FinanceDimension1

		FinanceDimension2Rel
			one-to-one relation to FinanceDimension2
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
				related.FinanceDimension2		= IssueAccount.FinanceDimension2

		FinanceDimension3Rel
			one-to-one relation to FinanceDimension3
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
				related.FinanceDimension3		= IssueAccount.FinanceDimension3

		FinanceDimension4Rel
			one-to-one relation to FinanceDimension4
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
				related.FinanceDimension4		= IssueAccount.FinanceDimension4

		FinanceDimension5Rel
			one-to-one relation to FinanceDimension5
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
				related.FinanceDimension5		= IssueAccount.FinanceDimension5

		FinanceDimension6Rel
			one-to-one relation to FinanceDimension6
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
				related.FinanceDimension6		= IssueAccount.FinanceDimension6

		FinanceDimension7Rel
			one-to-one relation to FinanceDimension7
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
				related.FinanceDimension7		= IssueAccount.FinanceDimension7

		FinanceDimension8Rel
			one-to-one relation to FinanceDimension8
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
				related.FinanceDimension8		= IssueAccount.FinanceDimension8

		FinanceDimension9Rel
			one-to-one relation to FinanceDimension9
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
				related.FinanceDimension9		= IssueAccount.FinanceDimension9

		FinanceDimension10Rel
			one-to-one relation to FinanceDimension10
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
				related.FinanceDimension10		= IssueAccount.FinanceDimension10

		RequesterLocationRel
			one-to-one relation to RequesterRequestingLocation
			Field Mapping uses symbolic key
				related.Company				= Company
				related.Requester			= actor.agent(Employee).Employee.Requester.Requester
				related.RequestingLocation	= RequestingLocation

		RequesterRequestingLocationsRel
			one-to-many relation to RequesterRequestingLocation
			Field Mapping uses symbolic key
				related.Company				= Company
				related.Requester			= actor.agent(Employee).Employee.Requester.Requester

		VertexLookupResultsRel	
			one-to-many relation to VertexLookupResults
			Field Mapping uses ByRelatedObjectReference
				related.VertexConfig									= Company.FinanceEnterpriseGroup
			Instance Selection
				where (related.RelatedObjectReference					= reference to this instance)

 		VertexConfigRel	
			one-to-one relation to VertexConfig
			Field Mapping uses symbolic key
				related.VertexConfig 									= Company.FinanceEnterpriseGroup

		VertexTaxAreaIdResultsRel	
			one-to-many relation to VertexTaxAreaIdResults
			Field Mapping uses ByRelatedObjectReference
				related.VertexConfig									= Company.FinanceEnterpriseGroup
			Instance Selection
				where (related.RelatedObjectReference					= reference to this instance)

  		VertexWebserviceErrorRel	
			one-to-many relation to VertexTaxAreaIdResults
			Field Mapping uses ByRelatedObjectReference
				related.VertexConfig									= Company.FinanceEnterpriseGroup
			Instance Selection
				where (related.RelatedObjectReference					= reference to this instance
				and    related.WebServiceError							= true)

		TaxEntityRel
			one-to-one relation to TaxEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup							= Company.FinanceEnterpriseGroup
				related.TaxEntity										= Company.AccountingEntity

		RequestingReportGroupRel 
			one-to-many relation to RequestingReportGroup 
			Field Mapping uses symbolic key 
				related.Company            = Company 
		
		RequestingReportGroupLocationRel 
			one-to-many relation to RequestingReportGroupLocation 
			Field Mapping uses symbolic key 
				related.Company				= Company 
			Instance Selection
				where (related.RequestingLocation	= RequestingLocation)

		ThisLocationOnReportGroupRel 
			one-to-one relation to RequestingReportGroupLocation 
			Field Mapping uses symbolic key 
				related.Company					= Company 
				related.RequestingReportGroup	= LocalRequestingReportGroup
				related.RequestingLocation		= LocalThisLocation	
		
		MatchingReportGroupLocationRel 
			one-to-many relation to RequestingReportGroupLocation 
			Field Mapping uses symbolic key 
				related.Company					= Company 
			Instance Selection
				where (related.RequestingLocation		= LocalLocation)		


		LocalParticipantGroupLineRel
			one-to-many relation to ParticipantGroupLine 
			Field Mapping uses symbolic key 
				related.ProcurementGroup 									= Company.ItemGroup 
				related.ParticipantGroup                            		= LocalParticipantGroup 	
			Instance Selection 
				where (related.ParticipantGroupLine.ParticipantLocation.Company	= LocalCompany)		

		ParticipantGroupByCompanyRel 
			one-to-many relation to ParticipantGroupLine 
			Field Mapping uses ByCompanyFirst
				related.ProcurementGroup 											= Company.ItemGroup 
				related.ParticipantGroupLine.ParticipantLocation.Company			= Company	
            	related.ParticipantGroupLine.ParticipantLocation.Location           = blank
            	related.ParticipantGroupLine.ParticipantLocation.RequestingLocation = blank 
			Instance Selection 
				where (related.HasContracts
				and    !related.MemberOnly
				and    related.ParticipantGroup.AddNewRequestingLocations)

		ContractGroupRel 
			one-to-one relation to ContractGroup
			Field Mapping uses symbolic key 
				related.ContractGroup = Company.ItemGroup 

		CompanyTierMemberRel 
			one-to-many relation to ContractTierMember 
			Field Mapping uses ByCompanyFirst 
				related.ContractGroup						   = ContractGroupRel.ContractGroup 
				related.ContractTierMember.Company             = Company 
				related.ContractTierMember.Location            = blank 
				related.ContractTierMember.RequestingLocation  = blank 
			Instance Selection 
				where (related.Contract.NotClosed
				and    related.Contract.EnableClinicalSystemUseLocations)

		CompanyPricingMemberRel 
			one-to-many relation to ContractDistributorPricingMember 
			Field Mapping uses ByCompanyFirst 
				related.ContractGroup										 = ContractGroupRel.ContractGroup 
				related.ContractDistributorPricingMember.Company             = Company 
				related.ContractDistributorPricingMember.Location            = blank 
				related.ContractDistributorPricingMember.RequestingLocation  = blank 
			Instance Selection 
				where (!related.FromMfgContract
				and    related.Contract.NotClosed
				and    related.Contract.EnableClinicalSystemUseLocations)

		CompanyParticipantRel 
			one-to-many relation to ContractParticipant 
			Field Mapping uses ByCompanyFirst 
				related.ContractGroup												= ContractGroupRel.ContractGroup 
				related.ContractParticipant.ParticipantLocation.Company             = Company 
				related.ContractParticipant.ParticipantLocation.Location            = blank 
				related.ContractParticipant.ParticipantLocation.RequestingLocation  = blank 
			Instance Selection 
				where (related.Contract.NotClosed
				and    related.Contract.EnableClinicalSystemUseLocations)

		PricingGroupParticipantRel 
			one-to-many relation to ContractParticipant 
			Field Mapping uses ByPricingGroup  
				related.ContractGroup												= ContractGroupRel.ContractGroup 
				related.ContractParticipant.ParticipantLocation.PricingGroup       	= Company.PricingGroup  
			Instance Selection 
				where (related.Contract.NotClosed
				and    related.Contract.EnableClinicalSystemUseLocations)

		PricingGroupTierMemberRel 
			one-to-many relation to ContractTierMember 
			Field Mapping uses ByPricingGroup  
				related.ContractGroup							= ContractGroupRel.ContractGroup 
				related.ContractTierMember.PricingGroup       	= Company.PricingGroup  
			Instance Selection 
				where (related.Contract.NotClosed
				and    related.Contract.EnableClinicalSystemUseLocations)

		PricingGroupPricingMemberRel 
			one-to-many relation to ContractDistributorPricingMember 
			Field Mapping uses ByPricingGroup  
				related.ContractGroup							        = ContractGroupRel.ContractGroup 
				related.ContractDistributorPricingMember.PricingGroup  	= Company.PricingGroup  
			Instance Selection 
				where (!related.FromMfgContract
				and    related.Contract.NotClosed
				and    related.Contract.EnableClinicalSystemUseLocations)		

		LocalContractAndLineLocationRel
			one-to-many relation to ContractAndLineLocation
			Field Mapping uses ByRequestingLocationOnly  
				related.ContractGroup           					= ContractGroupRel.ContractGroup 
				related.Contract                					= LocalContract 
				related.ContractAndLineLocation.Company				= Company
				related.ContractAndLineLocation.RequestingLocation 	= RequestingLocation	

		ContractRequestingLocationRel
			one-to-many relation to ContractAndLineLocation
			Field Mapping uses ByRequestingLocationOnly
				related.ContractGroup								= LocalContractGroup
				related.Contract        							= LocalContract
				related.ContractAndLineLocation.Company 			= Company 
				related.ContractAndLineLocation.RequestingLocation 	= RequestingLocation											


		FSMBODConfigurationParameterRel
        	one-to-one relation to FSMBODConfigurationParameter
			Field Mapping uses symbolic key
            	related.FSMBODConfigurationParameter 		= LocalConfigurationParameter

		FSMBODConfigurationRel
			one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
				related.FSMBODConfiguration.Verb 		= 1
				related.FSMBODConfiguration.Noun 		= "Location"
				related.FSMBODConfiguration.Direction 	= 1
		
		FSMBODCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "CSFGLC"
            	related.FSMBODCrossReference.DestinationField 	= "DESTAE"
            Instance Selection
				where (related.SourceValue	= LocalCSFCrossReferenceGLC)
				
		FSMInboundBODTrackerRel
			one-to-one relation to FSMInboundBODTracker
			Field Mapping uses symbolic key
				related.FSMInboundBODTracker				= LocalFSMInboundBODTracker



		MobileSupplyChainConfigurationRel
            one-to-one relation to MobileSupplyChainConfiguration
            Field Mapping uses symbolic key
                related.MobileSupplyChainConfiguration = Company.FinanceEnterpriseGroup

		MobileSupplyChainLocationRel
            one-to-one relation to MobileSupplyChainLocation
            Field Mapping uses symbolic key
				related.Company                 			= Company
                related.MobileSupplyChainLocation           = RequestingLocation


		ResponsibilityMatrixRel
			one-to-many relation to ResponsibilityMatrix
			Field Mapping uses ByPriorityAndDimensionCount
				related.FinanceEnterpriseGroup		= Company.ItemGroup.FinanceEnterpriseGroup
			Instance Selection
				where (related.Active)

		RequestingLocationLocalRel
			one-to-one relation to RequestingLocation
			Field Mapping uses symbolic key
				related.Company					= LocalCompany
				related.RequestingLocation		= LocalRequestingLocation

	Sets

		ByPricingGroup
			Instance Selection
				where (PricingGroupEntered)
			Sort Order
				PricingGroup
				Company
				RequestingLocation

	Rule Blocks
		CreateRecallOrganization
			if (RecallOrganizationRel exists)
				invoke Update RecallOrganizationRel
					invoked.Active = true
			if (!RecallOrganizationRel exists
			and !RecallInventoryOrganizationRel exists)
				invoke Create RecallOrganization
					invoked.RecallGroup 	   = LocalRecallGroup
					if (LocalRollup
					and IssueAccount.AccountingUnit entered
					and RelatedRqLocOrganizationRel exists)
						invoked.ParentOrganization = first RelatedRqLocOrganizationRel.RecallOrganization
					else
						invoked.ParentOrganization = LocalParentOrganization
					invoked.Description		    = Name
					invoked.InventoryCompany    = Company
					invoked.RequestingLocation  = RequestingLocation
					if (InventoryLocationRel exists)
						invoked.InventoryLocation = InventoryLocationRel.InventoryLocation
					invoked.IssueAccountingUnit = IssueAccount.AccountingUnit
					invoked.Active			    = true

 		TriggerRequestingLocation
 			trigger "RequestingLocationService" PA service
					resume on error
					title is "EG:<Company.FinanceEnterpriseGroup>CO:<Company>RQL:<RequestingLocation>"
					Criteria
						Company.FinanceEnterpriseGroup
						Company
						Company.GeneralLedgerCompany.AccountingEntity
					Variables
						include persistent fields from	RequestingLocation

						ActionCode
						bod id.VariationID
							variable name is BODVariationId
						LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
							variable name is CurrentTimeStamp
						Company.FinanceEnterpriseGroup
							variable name is FinanceEnterpriseGroup
						Company.GeneralLedgerCompany.AccountingEntity
							variable name is AccountingEntity
						Company
							variable name is GeneralLedgerCompany

 		DeleteRules
			if (Company.FinanceEnterpriseGroup.BODTrigger)
				ActionCode = ActionCode.Delete
				increment bod id.VariationID
			   	include TriggerRequestingLocation


		ValidateIssueAccountForMatrixApproval
			invoke SubmitForMatrixApproval first ResponsibilityMatrixRel
				invoked.PrmFinanceEnterpriseGroup 		= Company.ItemGroup.FinanceEnterpriseGroup
				invoked.PrmApprovalType					= blank
				invoked.PrmSystemCode					= "RQ"
				invoked.PrmApprovalTransactionForm		= ApprovalTransactionForm.Requisition
				invoked.PrmTransactionHeader1			= Company
				invoked.PrmTransactionHeader2			= RequestingLocation
				invoked.PrmTransactionHeader3			= blank
				invoked.PrmTransactionHeader4			= blank
				invoked.PrmTransactionLine1				= blank
				invoked.PrmTransactionLine2				= blank
				invoked.PrmTransaction					= blank
				invoked.PrmFinanceCodeBlock				= IssueAccount
				invoked.PrmApprovalTitle				= blank
				invoked.PrmApprovalAmount				= blank
				invoked.PrmValidateOnly					= true
				invoked.PrmValidateFrom					= 2 

	Field Rules

		FillOrKill
			required

		InventoryTransactionType
			required
			if (InventoryTransactionType.DirectTransfer
			or  InventoryTransactionType.IntransitTransfer)
				constraint (!SameRequestingAndFrom)
					"TransactionTypeCannotBeDirectTransferOrIntransitTransferWithSameLocations"         
				constraint (InventoryLocationRel exists)
					"RequestingLocationMustBeAValidInventoryLocationForTransactionTypeDirectTransferOrIntransitTransfer"         


		Active
			initial value is true

		Name
			default to InventoryLocationRel.Name
			required

		Buyer
			if (FromCompanyLocation.FromCompany entered)
				if (BuyerLocationFromCompanyRel exists)
					constraint (BuyerRequestingLocationFromLocationRel exists)
						"BuyerHasRestrictedLocationsForFromCompany;CannotBeAssignedToThisRequestingLocation"
			else
			if (BuyerLocationRel exists)
				constraint (BuyerRequestingLocationRel exists)
					"BuyerHasRestrictedLocations;CannotBeAssignedToThisRequestingLocation"

		ProcessLevel
			constraint (ProcessLevelRel exists)
				"ProcessLevelDoesNotExistForCompany"                       
			constraint (FromCompanyLocation.FromCompany entered)
				"From_\CompanyIsRequiredFor_\Proces_\Level"                

		OneSourceDocumentToOnePO
			if (RequisitionApprovalType.LineApproval)
				cannot be entered
					"RequisitionApprovalTypeIsLineApproval;CannotSelectSingleDocumentToAPurchaseOrder"

			if (RequisitionApprovalType.DefaultFromRequestingLocationOrCompany
			and Company.RequisitionApprovalType.LineApproval)
				cannot be entered
					"RequisitionApprovalTypeOnCompanyIsLineApproval;CannotSelectSingleDocumentToAPurchaseOrder"

		PurchaseTaxCode
			if (TaxEntityRel.UseTaxCodeAccounts)
				constraint (EntityTaxCode exists)
					"TaxCodeNotDefinedForTaxEntity<Company.AccountingEntity>AssociatedWithCompany<Company>"

		PricingGroup
			constraint (PricingGroup.LocationPricingGroup)
				"PricingGroupIsForCompanies;CannotAttachToALocation"

		LocationRule
			constraint(LocationRule.DetailsExist)
				"CannotAddLocationRuleThatDoesNotHaveAnyLocations"

		RequisitionApprovalType
			if (!LocalFromInventoryLocation)
				if (RequisitionApprovalType.HeaderMatrixApproval)
					constraint (Company.FinanceEnterpriseGroup.EnableResponsibilityMatrix)
						"CannotSetTo_Header_Matrix_ApprovalWhenThe_Finance_Enterprise_GroupDoesNotHaveThe_Responsibility_MatrixTurnedOn"
					include ValidateIssueAccountForMatrixApproval

				if (RequisitionApprovalType not entered 
				and Company.RequisitionApprovalType.HeaderMatrixApproval)
						include ValidateIssueAccountForMatrixApproval

			if (RequisitionApprovalType.HeaderApproval
			or  RequisitionApprovalType.LineApproval
			or  RequisitionApprovalType.NoApprovalRequired
			or  (RequisitionApprovalType.DefaultFromRequestingLocationOrCompany
			and  !Company.RequisitionApprovalType.HeaderMatrixApproval))
				IssueAccountInvalidForMatrixApproval = false

		IssueAccount
			if (UsingHeaderMatrixApproval
			and !LocalFromInventoryLocation)
				include ValidateIssueAccountForMatrixApproval

	Create Rules
		if (MobileSupplyChainConfigurationRel exists)
			if (MobileSupplyChainLocationRel exists)
				invoke UpdateLocationType MobileSupplyChainLocationRel

			else
				invoke Create MobileSupplyChainLocation
					invoked.Company             				= Company
					invoked.MobileSupplyChainLocation   	 	= RequestingLocation
					invoked.LocationType 						= MobileSupplyChainLocation.LocationType.RequestingLocation

	Attach Rules
		constraint (Active
		or          BypassRuleForTheseFiles)
			"RequestingLocation<RequestingLocation>MustBeActive"

	Actions
		Create is a Create Action

			Exit Rules 

				if (RequestingReportGroupRel exists)
					for each RequestingReportGroupRel 
						if (each.AddNewRequestingLocations)
							LocalRequestingReportGroup = each.RequestingReportGroup
							invoke Create RequestingReportGroupLocation 
								invoked.Company		           = Company 
								invoked.RequestingReportGroup  = LocalRequestingReportGroup
								invoked.RequestingLocation     = RequestingLocation  

				if (ParticipantGroupByCompanyRel exists)
					for each ParticipantGroupByCompanyRel
						invoke CreateNewMembersAndParticipants each 
							invoked.NewRequestingLocation = RequestingLocation 
				
				if (ContractGroupRel.AutoAddFromNewLocations)

					if (PricingGroupEntered)
							invoke UpdateContractLocations PricingGroup		

					if (HasCompanyParticipants)
						for each CompanyParticipantRel 
							LocalContract = each.Contract 
							if (LocalContractAndLineLocationRel !exists)
								invoke Create ContractAndLineLocation 
									invoked.ContractGroup								= each.ContractGroup 
									invoked.Contract        							= each.Contract 
									invoked.ContractAndLineLocation.Company				= Company 
									invoked.ContractAndLineLocation.RequestingLocation	= RequestingLocation

					if (HasCompanyTierMembers)
						for each CompanyTierMemberRel 
							LocalContract = each.Contract 
							if (LocalContractAndLineLocationRel !exists)
								invoke Create ContractAndLineLocation 
									invoked.ContractGroup								= each.ContractGroup 
									invoked.Contract        							= each.Contract 
									invoked.ContractAndLineLocation.Company				= Company 
									invoked.ContractAndLineLocation.RequestingLocation	= RequestingLocation				
					
					if (HasCompanyPricingMembers)
						for each CompanyPricingMemberRel 
							LocalContract = each.Contract 
							if (LocalContractAndLineLocationRel !exists)
								invoke Create ContractAndLineLocation 
									invoked.ContractGroup								= each.ContractGroup 
									invoked.Contract        							= each.Contract 
									invoked.ContractAndLineLocation.Company				= Company 
									invoked.ContractAndLineLocation.RequestingLocation	= RequestingLocation	

					if (Company.PricingGroup entered)
						if (HasPricingGroupParticipants)
							for each PricingGroupParticipantRel 
								LocalContract = each.Contract 
								if (LocalContractAndLineLocationRel !exists)
									invoke Create ContractAndLineLocation 
										invoked.ContractGroup								= each.ContractGroup 
										invoked.Contract        							= each.Contract 
										invoked.ContractAndLineLocation.Company				= Company 
										invoked.ContractAndLineLocation.RequestingLocation	= RequestingLocation

						if (HasPricingGroupTierMembers)
							for each PricingGroupTierMemberRel 
								LocalContract = each.Contract 
								if (LocalContractAndLineLocationRel !exists)
									invoke Create ContractAndLineLocation 
										invoked.ContractGroup								= each.ContractGroup 
										invoked.Contract        							= each.Contract 
										invoked.ContractAndLineLocation.Company				= Company 
										invoked.ContractAndLineLocation.RequestingLocation	= RequestingLocation

						if (HasPricingGroupPricingMembers)
							for each PricingGroupPricingMemberRel 
								LocalContract = each.Contract 
								if (LocalContractAndLineLocationRel !exists)
									invoke Create ContractAndLineLocation 
										invoked.ContractGroup								= each.ContractGroup 
										invoked.Contract        							= each.Contract 
										invoked.ContractAndLineLocation.Company				= Company 
										invoked.ContractAndLineLocation.RequestingLocation	= RequestingLocation											

		Update is an Update Action
			Exit Rules
				if (Name changed and ParLocation)
					invoke UpdateInventoryLocationName InventoryLocationRel
						invoked.PrmName = Name

				if (PricingGroup changed
				and PricingGroupEntered)
					invoke UpdateContractLocations PricingGroup 

				if (Active changed
				and RecallOrganizationRel exists)	
					for each RecallOrganizationRel
						invoke Update each
							if (Active)
								invoked.Active = true
							else
							if (!Active)	
								invoked.Active = false 		

		Delete is a Delete Action
			valid when (!ParOrExchangeLocation)
			Entrance Rules
				constraint (!ParOrExchangeLocation)
					"CannotDeleteParLocationOrExchangeCart"
				include DeleteRules

				if (MobileSupplyChainConfigurationRel exists)
					invoke DeleteRequestingLocation MobileSupplyChainLocationRel

		FastUpdate is an Update Action
			restricted
			bypass field rules

		UpdateGlobalLocationNumber is an Instance Action
			restricted
			Parameters
				PrmGlobalLocationNumber	is a GlobalLocationNumber
			Action Rules
				GlobalLocationNumber	=	PrmGlobalLocationNumber

		AddLocationToReportGroups is an Instance Action 
			valid when (Active)
			Parameters 
				CompanyToMatch		is an InventoryCompany
				LocationToMatch     is a  RequestingLocation 

			Parameter Rules 
				CompanyToMatch 
					initial value is Company 
					force default to Company 

				LocationToMatch 
					constraint (LocationToMatch != RequestingLocation)
						"CannotMatchToTheSameLocation"
					required 

			Action Rules 

				LocalLocation   = LocationToMatch 

				for each MatchingReportGroupLocationRel
					LocalRequestingReportGroup = each.RequestingReportGroup
					LocalThisLocation         = RequestingLocation 
					if (ThisLocationOnReportGroupRel !exists)
						invoke Create RequestingReportGroupLocation 
							invoked.Company		           = Company 
							invoked.RequestingReportGroup  = LocalRequestingReportGroup
							invoked.RequestingLocation     = RequestingLocation  

		CreateContractLocations     is a Set Action 
			restricted 
			Parameters
				ParmContractGroup   		is a ProcurementGroup
				ParmContract            	is a Contract
				LineLevel               	is Boolean 
				ParmCompany                 is like InventoryCompany 
				ParmParticipantGroup        is like ParticipantGroup 

			Instance Selection 
				where (((ParmCompany entered 
				and      ParmCompany = Company)
				or       ParmCompany !entered) 
				and    Active 
				and    InventoryTransactionType.Issue
				and   (ContractGroupRel.DoNotUseParLocations = false
				or    (ContractGroupRel.DoNotUseParLocations
				and   !ParOrExchangeLocation)))

			Sort Order 
				Company 
				RequestingLocation 		

			Set Is 
				Company 
				RequestingLocation 
				ParmContractGroup 
				ParmContract 
			
			Action Rules 

				Instance Rules 
					if (ParmParticipantGroup entered)
						LocalParticipantGroup   = ParmParticipantGroup
						LocalCompany            = Company 
						if (LocalParticipantGroupLineRel exists)

							LocalContractGroup 		= ParmContractGroup 
							LocalContract      		= ParmContract 
							if (ContractRequestingLocationRel !exists)
								invoke Create ContractAndLineLocation 
									invoked.ContractGroup 								= ParmContractGroup 
									invoked.Contract                					= ParmContract 
									invoked.ContractAndLineLocation.Company 			= Company
									invoked.ContractAndLineLocation.RequestingLocation	= RequestingLocation 
									invoked.ClinicalSystemUse                   		= true	
									invoked.LineLevel                           		= LineLevel 
							else 
							if (ContractRequestingLocationRel exists
							and ContractRequestingLocationRel.ClinicalSystemUse = false)
								invoke Update ContractRequestingLocationRel
									invoked.ClinicalSystemUse = true
									invoked.LineLevel         = LineLevel 				

					else 
						LocalContractGroup 		= ParmContractGroup 
						LocalContract      		= ParmContract 
						if (ContractRequestingLocationRel !exists)
							invoke Create ContractAndLineLocation 
								invoked.ContractGroup 								= ParmContractGroup 
								invoked.Contract                					= ParmContract 
								invoked.ContractAndLineLocation.Company 			= ParmCompany
								invoked.ContractAndLineLocation.RequestingLocation	= RequestingLocation 
								invoked.ClinicalSystemUse                   		= true	
								invoked.LineLevel                           		= LineLevel 
						else 
						if (ContractRequestingLocationRel exists
						and ContractRequestingLocationRel.ClinicalSystemUse = false)
							invoke Update ContractRequestingLocationRel
								invoked.ClinicalSystemUse = true
								invoked.LineLevel         = LineLevel 		

		BuildOrgStructureFromRqloc is a Set Action
			restricted
			Parameters
				PrmRecallGroup		is a RecallGroup
				PrmInventoryCompany	is Numeric size 4
				PrmRollup			is Boolean

			Parameter Rules
				PrmRecallGroup
					required
				PrmInventoryCompany
					required

			Local Fields
				LocalRecallOrganization	is a RecallOrganization view

			Instance Selection
				where (Company = PrmInventoryCompany
				and    Active
				and    !ParLocation) 

			Sort Order
				Company
				RequestingLocation

		 	Action Rules
				Company Set Rules
					Entrance Rules
						if (!RecallOrganizationCompanyRel exists)
							invoke Create RecallOrganization
								assign result to LocalRecallOrganization
								invoked.RecallGroup 		= PrmRecallGroup
								invoked.Description			= Company.Name
								invoked.InventoryCompany	= Company
								invoked.Active				= true
						else
							LocalRecallOrganization = first RecallOrganizationCompanyRel.RecallOrganization

					Exit Rules
						invoke BuildOrgStructureForParAndInactiveLocations RequestingLocation
							invoked.ParamRecallGroup 		= PrmRecallGroup
							invoked.ParamInventoryCompany	= PrmInventoryCompany
							invoked.ParamRecallOrganization	= LocalRecallOrganization.RecallOrganization
							invoked.ParamRollup				= PrmRollup

						invoke BuildOrgStructureFromIcloc InventoryLocation
							invoked.ParamRecallGroup 		= PrmRecallGroup
							invoked.ParamInventoryCompany	= PrmInventoryCompany
							invoked.ParamRecallOrganization	= LocalRecallOrganization.RecallOrganization

				Instance Rules
					LocalRecallGroup = PrmRecallGroup
					LocalRollup = PrmRollup
					LocalParentOrganization = LocalRecallOrganization.RecallOrganization

					include CreateRecallOrganization

		AttachToPricingGroup is an Instance Action
			Parameters
				ParmContractGroup is a ContractGroup
				ParmPricingGroup  is a PricingGroup

			Parameter Rules
				ParmContractGroup
					required
				ParmPricingGroup
					required

			Action Rules
				PricingGroup  = ParmPricingGroup

				constraint (PricingGroup.LocationPricingGroup)
					"PricingGroupIsForCompanies;CannotAttachALocation"

			Exit Rules 
				invoke UpdateContractLocations PricingGroup 

		BuildOrgStructureForParAndInactiveLocations is a Set Action  
			restricted
			Parameters
				ParamRecallGroup 		is a RecallGroup
				ParamInventoryCompany	is Numeric size 4
				ParamRecallOrganization is a RecallOrganization
				ParamRollup		 		is Boolean

			Parameter Rules
				ParamRecallGroup
					required
				ParamInventoryCompany
					required

			Instance Selection
				where (Company = ParamInventoryCompany
				and    Active
				and    ParLocation) 

			Sort Order
				Company
				RequestingLocation

		 	Action Rules
				Company Set Rules
					Entrance Rules

				Instance Rules
					LocalRecallGroup = ParamRecallGroup
					LocalRollup = ParamRollup
					LocalParentOrganization = ParamRecallOrganization

					include CreateRecallOrganization
					
		UpdateRequestingLocationName is an Instance Action 
			restricted
			
		UpdateRequestingLocationFromParLocation is an Instance Action
			restricted
			Parameters
				PrmName is like Name	 
					holds pii
				PrmActive is Boolean
			Action Rules
				if (PrmName != Name)
					Name = PrmName
				if (PrmActive != Active)
					Active = PrmActive


		UpdateVertexTaxCode is an Instance Action
			valid when (HasVertexConfig)			
			run in background
			completion message is "<CompletionMessage>"

			Parameters

			Parameter Rules

			Local Fields
				LocalTaxCode			is a TaxCode
				MultipleTaxCodes    	is Boolean
				WebServiceError     	is Boolean

			Action Rules
	  			MultipleTaxCodes = false
				WebServiceError  = false
				initialize WebServiceErrorMessage
				initialize LocalTaxCode
				initialize CalculateTax
				CalculateTax.RelatedObjectReference         	= reference to this instance
				CalculateTax.System								= "RQ"
				CalculateTax.CallingModule						= "RequestingLocation"
				CalculateTax.VertexQuantumOption				= "G"
				CalculateTax.TaxEntity							= blank
				CalculateTax.InFinanceEnterpriseGroup       	= Company.FinanceEnterpriseGroup
				CalculateTax.VendorGrp							= blank
				CalculateTax.PostalAddress						= PostalAddress
				LocalTaxCode									= CalculateTax.ReturnedGeoCode
				MultipleTaxCodes								= CalculateTax.MultipleTaxAreaIds
				WebServiceError									= CalculateTax.WebServiceError
				WebServiceErrorMessage							= CalculateTax.WebServiceErrorMessage

				if (LocalTaxCode entered)
					PurchaseTaxCode = LocalTaxCode
				if (LocalTaxCode entered
				and !MultipleTaxCodes
				and CalculateTax.OutputErrorNumber not entered)
					if (PostalAddress.PostalCode not entered)
						PostalAddress.PostalCode 	= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].PostalCode
						PostalAddress.County 		= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].County


					if (VertexLookupResultsRel exist)
						for each VertexLookupResultsRel
							invoke Update each
								invoked.Status = 1	

		BatchUpdateTaxCodeUsingVertex is a Set Action	
			valid when (HasVertexConfig)			
			completion message is "<CompletionMessage>"

			Parameters
				PrmEnterpriseGroup			is a VertexConfig
					default label is "FinanceEnterpriseGroup"
				PrmProcessGroup				is Alpha 50
					default label is "ProcessGroup"
				PrmInventoryCompany			is a InventoryCompany
					default label is "InventoryCompany"
				PrmReadOnly					is Boolean
					default label is "ReadOnly"
				EntityTaxCodeDefault 		is like TaxCode
				PrmTaxEntity 		 		is like TaxEntity
					default label is "TaxEntity"

			Parameter Rules

			Local Fields
				LocalTaxCode			is like TaxCode
				CompletionMessage		is Alpha 150
				RecordCount				is Numeric 10
				LocalLookupKey 			is Alpha 100
				LocalSequence 			is like Sequence

			Instance Selection
				where (PrmEnterpriseGroup   = Company.FinanceEnterpriseGroup
				and	   IsActive 				
				and   (Company   			= PrmInventoryCompany
				or	   PrmInventoryCompany not entered))

			Sort Order
				RequestingLocation

			Accumulators

			Action Rules
				Empty Set Rules
					CompletionMessage = "<CompletionMessage>"

				Set Rules
					Entrance Rules
						constraint (VertexConfigRel exist)
							"VertexConfigurationNotSetUp;CheckIfTaxEntitySetUpToUseVertex"
						initialize RecordCount
					
					Exit Rules

				RequestingLocation Set Rules
					Entrance Rules

					Exit Rules

				Instance Rules
					increment RecordCount
					initialize CalculateTax
	  				MultipleTaxCodes = false
					WebServiceError  = false
				  	initialize VertexErrorNumber
					initialize WebServiceErrorMessage
					initialize LocalLookupKey
					initialize LocalSequence
					initialize CalculateTax
					CalculateTax.RelatedObjectReference         	= reference to this instance
					CalculateTax.System								= "RQ"
					CalculateTax.CallingModule						= "RequestingLocation"
					CalculateTax.VertexQuantumOption				= "G"
					CalculateTax.InFinanceEnterpriseGroup       	= Company.FinanceEnterpriseGroup
					CalculateTax.VendorGrp							= blank
					CalculateTax.TaxEntity							= PrmTaxEntity
					CalculateTax.EntityTaxCodeDefault				= EntityTaxCodeDefault
					CalculateTax.PostalAddress						= PostalAddress
					LocalTaxCode									= CalculateTax.ReturnedGeoCode
					VertexErrorNumber								= CalculateTax.OutputErrorNumber
					MultipleTaxCodes								= CalculateTax.MultipleTaxAreaIds
					WebServiceError									= CalculateTax.WebServiceError
					WebServiceErrorMessage							= CalculateTax.WebServiceErrorMessage
					CalculateTaxOutputMessage						= CalculateTax.OutputErrorMessage

					NewTaxCode = LocalTaxCode
					OldTaxCode = PurchaseTaxCode
					if (LocalTaxCode entered
					and !PrmReadOnly)
						PurchaseTaxCode = LocalTaxCode
					if (LocalTaxCode entered
					and !MultipleTaxCodes
					and !WebServiceError
					and CalculateTax.OutputErrorNumber not entered
					and !PrmReadOnly)
						if (PostalAddress.PostalCode not entered)
							PostalAddress.PostalCode 	= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].PostalCode
							PostalAddress.County 		= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].County

					LocalLookupKey 	= CalculateTax.ResultsLookupKey
					LocalSequence	= CalculateTax.ResultsLookupKeySequence
					if (VertexLookupResultsRel exist)
						invoke Delete VertexLookupResultsRel

					invoke Create VertexLookupResults
						invoked.VertexConfig			   		= Company.FinanceEnterpriseGroup
						invoked.VertexLookupResults.LookupKey 	= LocalLookupKey
						invoked.VertexLookupResults.Sequence	= LocalSequence
						invoked.RelatedObjectReference			= reference to this instance
						invoked.LookupInventoryCompany			= Company
						invoked.LookupRequestingLocation		= RequestingLocation
						invoked.LookupProcessGroup				= PrmProcessGroup
						invoked.ReturnedHighesTaxAreaId			= LocalTaxCode
						invoked.NumberOfTaxAreaIdsReturned		= CalculateTax.NumberOfTaxCodes
						invoked.LookupPostalAddress 			= PostalAddress
						invoked.LookupTaxEntity					= PrmTaxEntity
						invoked.ErrorNumber						= CalculateTax.OutputErrorNumber
						invoked.ErrorMessage					= DerivedLookupMessage
						invoked.LookupDescription				= TaxCodeMessage
						invoked.WebServiceError 				= CalculateTax.WebServiceError
						invoked.WebServiceErrorMessage 			= CalculateTax.WebServiceErrorMessage
						if (MultipleTaxCodes
						or  WebServiceError
						or  CalculateTax.OutputErrorNumber entered)
							invoked.Status = 0						
						else
						if (LocalTaxCode not = OldTaxCode)
							invoked.Status = 1						
						else
							invoked.Status = 2						


		UpdateTaxCodeAndAddress is an Instance Action
			restricted
			Parameters
				PrmTaxCode		is like TaxCode
				PrmCountry		is a Country
				PrmState		is a StateProvince
				PrmZip			is a PostalCode
				PrmCounty		is a County
			Parameter Rules
			Action Rules
				if (PrmTaxCode entered)
					PurchaseTaxCode = PrmTaxCode
				if (PostalAddress.PostalCode not entered)
					PostalAddress.PostalCode	= PrmZip
				if (PostalAddress.County not entered)
					PostalAddress.County 		= PrmCounty

		ValidateIssueAccountForResponsiblityMatrix is a Set Action
			default label is "ValidateIssueAccount"
			Parameters
				PrmInventoryCompany			is a InventoryCompany
					default label is "Company (optional)"
				PrmToEmailAddress			is an EmailAddressMulti
					default label is "ToEmailAddress"
				PrmFromEmailAddress			is an EmailAddress
					default label is "FromEmailAddress"
				PrmEmailSubject				is Alpha 100
					default label is "Subject"
				PrmEmailContent				is RichText
					default label is "Content"
			Parameter Rules
				PrmFromEmailAddress
					initial value is config.DefaultFromEmailAddress
					default to config.DefaultFromEmailAddress

				PrmEmailSubject
					initial value is "Requesting Locations Using Matrix Approval Need Issue Account Reviewed"
					default to "Requesting Locations Using Matrix Approval Need Issue Account Reviewed"

				PrmEmailContent
					initial value is "There are active Requesting Locations using Header Matrix Approval that have missing or incorrect Issue Account information. Please review the Invalid Issue Account For Matrix Approval list on the Requesting Location set up page."
					default to "There are active Requesting Locations using Header Matrix Approval that have missing or incorrect Issue Account information. Please review the Invalid Issue Account For Matrix Approval list on the Requesting Location set up page."

			Local Fields
				LocalInvalidIssueAccountFound	is Boolean

			Instance Selection
				where ((Company = PrmInventoryCompany
				or      PrmInventoryCompany not entered)
				and     Active)

			Sort Order
				RequestingLocation

			Action Rules
				Set Rules
					Exit Rules
						if (LocalInvalidIssueAccountFound)
							if (PrmToEmailAddress entered)
								send email
									to PrmToEmailAddress
									from PrmFromEmailAddress
									subject "<PrmEmailSubject>"
									Contents
										"<PrmEmailContent>"	


				Instance Rules
					if (!UsingHeaderMatrixApproval
					and IssueAccountInvalidForMatrixApproval)
						IssueAccountInvalidForMatrixApproval = false
					else
					if (UsingHeaderMatrixApproval)
						invoke SubmitForMatrixApproval first ResponsibilityMatrixRel
							invoked.PrmFinanceEnterpriseGroup 		= Company.ItemGroup.FinanceEnterpriseGroup
							invoked.PrmApprovalType					= blank
							invoked.PrmSystemCode					= "RQ"
							invoked.PrmApprovalTransactionForm		= ApprovalTransactionForm.Requisition
							invoked.PrmTransactionHeader1			= Company
							invoked.PrmTransactionHeader2			= RequestingLocation
							invoked.PrmTransactionHeader3			= blank
							invoked.PrmTransactionHeader4			= blank
							invoked.PrmTransactionLine1				= blank
							invoked.PrmTransactionLine2				= blank
							invoked.PrmTransaction					= blank
							invoked.PrmFinanceCodeBlock				= IssueAccount
							invoked.PrmApprovalTitle				= blank
							invoked.PrmApprovalAmount				= blank
							invoked.PrmValidateOnly					= true
							invoked.PrmValidateFrom					= 3 

						if (!LocalInvalidIssueAccountFound)
							LocalCompany				= Company
							LocalRequestingLocation		= RequestingLocation
							if (RequestingLocationLocalRel.IssueAccountInvalidForMatrixApproval)
								LocalInvalidIssueAccountFound = true

		UpdateBODIdFields is an Instance Action
			restricted
			Parameters
				PrmAccountingEntity  is Alpha size 22
					default label is "AccountingEntity"
				PrmLocation          is Alpha size 22
					default label is "Location"
				PrmDocumentID        is Alpha size 100
					default label is "DocumentID"
				PrmRevision          is Alpha size 22
					default label is "Revision"
				PrmSystemOfRecord    is Alpha size 1
					default label is "SystemOfRecord"
				PrmVariationID       is Alpha size 22
					default label is "VariationID"
			Action Rules
				if (bod id.AccountingEntity != PrmAccountingEntity)
					bod id.AccountingEntity 	= PrmAccountingEntity
				if (bod id.Location != PrmLocation)
					bod id.Location				= PrmLocation
				if (bod id.DocumentID != PrmDocumentID)
					bod id.DocumentID			= PrmDocumentID
				if (bod id.Revision != PrmRevision)
					bod id.Revision				= PrmRevision
				if (bod id.SystemOfRecord != PrmSystemOfRecord)
					bod id.SystemOfRecord		= PrmSystemOfRecord
				if (bod id.VariationID != PrmVariationID)
					bod id.VariationID			= PrmVariationID

		BODDataInitialLoadRequestingLocationCriteria is a Set Action
			restricted
			Parameters
				PrmFromCompany        		is a InventoryCompany
				PrmToCompany       		    is a InventoryCompany
				PrmFromLocation				is a RequestingLocation
					context of PrmFromCompany
				PrmToLocation				is a RequestingLocation
					context of PrmFromCompany
			Parameter Rules
			Instance Selection
				where  (((PrmFromCompany entered
				and		PrmFromCompany <= Company)
				or		PrmFromCompany not entered)
				and    ((PrmToCompany entered
				and		PrmToCompany >= Company)
				or		PrmToCompany not entered)
				and    ((PrmFromLocation entered
				and		PrmFromLocation <= RequestingLocation)
				or		PrmFromLocation not entered)
				and    ((PrmToLocation entered
				and		PrmToLocation >= RequestingLocation)
				or		PrmToLocation not entered)
				and		(Active = true))

			Action Rules
				Instance Rules
					if (Company.FinanceEnterpriseGroup.BODTrigger)
						ActionCode	= ActionCode.Create
						increment bod id.VariationID
						include TriggerRequestingLocation

					   		
		TriggerRequestingLocationNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationRel
					invoked.PrmVerb 							= 1
					invoked.PrmNoun								= "Location"
					invoked.PrmDirection						= 1
					invoked.PrmTriggerFrom						= "RequestingLocation"
					invoked.PrmFinanceEnterpriseGroup			= Company.FinanceEnterpriseGroup
					invoked.PrmCompany							= Company
					invoked.PrmMainUserTemplate					= "IONSyncLocation_RequestingLocation_ST"
				LocalBODTrigger = true
				LocalNativeLPLBODTrigger = FSMBODConfigurationRel.NativeLPLBODTrigger
				if (Company.FinanceEnterpriseGroup.BODTrigger and LocalNativeLPLBODTrigger)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 						= 1
							invoked.Noun 						= "Location"					
							invoked.BODDocumentID				= DerivedLocationID
							invoked.BODVariationID				= DerivedBODVariationID
							invoked.FinanceEnterpriseGroup		= DerivedFEG
							invoked.BODAccountingEntity			= DerivedAccountingEntity
							invoked.BODLocation					= RequestingLocation
							invoked.Direction					= 1
							invoked.Status						= 1
							invoked.StartDate					= system current timestamp
							invoked.Reference1					= Company
							invoked.Reference2					= "RequestingLocation"
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker				= NewBODTracker.FSMInboundBODTracker
					else 
						LocalFSMInboundBODTracker				= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.BODDocumentID				= DerivedLocationID
							invoked.BODVariationID				= DerivedBODVariationID
							invoked.FinanceEnterpriseGroup		= DerivedFEG
							invoked.BODAccountingEntity			= DerivedAccountingEntity
							invoked.BODLocation					= RequestingLocation
							invoked.Direction					= 1
							invoked.Status						= 1
							invoked.StartDate					= system current timestamp
							invoked.Reference1					= Company
							invoked.Reference2					= "RequestingLocation"
							initialize invoked.Error			
							initialize invoked.ErrorMessage
							
					invoke SendRequestingLocationNativeLPLBOD
						resume on error
		                   	Error            					= true
		                    ErrorMessage     					= error message
	                if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 						= Error
							invoked.ErrorMessage 				= ErrorMessage
							invoked.Status						= 2
							invoked.CloseDate					= system current timestamp
							invoked.BODXML						= ReqLocationBODXML
							invoked.BODID						= DerivedBODID
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status						= 3
							invoked.CloseDate					= system current timestamp
							invoked.BODXML						= ReqLocationBODXML
							invoked.BODID						= DerivedBODID
				
		SendRequestingLocationNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Action Rules
				send ion bod
					bod is ReqLocationBODXML
					bod type is "Sync.Location"
					accounting entity is DerivedAccountingEntity
					document id is DerivedLocationID
					variation id is DerivedBODVariationID

	Action Exit Rules
		if (Company.FinanceEnterpriseGroup.BODTrigger and !LocalBODTrigger)
			if (!action type.Delete)
				if (action != "UpdateBODIdFields")
					if (action type.Update) 
						ActionCode = ActionCode.Update
					if (action type.Create)
						ActionCode = ActionCode.Create
					increment bod id.VariationID
					include TriggerRequestingLocation






